[{"eslint": {"analyzedAt": "2020-06-26T20:57:18.326Z", "collected": {"metadata": {"name": "eslint", "scope": "unscoped", "version": "7.3.1", "description": "An AST-based pattern checker for JavaScript.", "keywords": ["ast", "lint", "javascript", "ecmascript", "espree"], "date": "2020-06-23T02:37:39.224Z", "author": {"name": "Nicholas C. Zakas", "email": "nicholas+npm@nczconsulting.com"}, "publisher": {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint", "homepage": "https://eslint.org", "repository": "https://github.com/eslint/eslint", "bugs": "https://github.com/eslint/eslint/issues/"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "ajv": "^6.10.0", "chalk": "^4.0.0", "cross-spawn": "^7.0.2", "debug": "^4.0.1", "doctrine": "^3.0.0", "enquirer": "^2.3.5", "eslint-scope": "^5.1.0", "eslint-utils": "^2.0.0", "eslint-visitor-keys": "^1.2.0", "espree": "^7.1.0", "esquery": "^1.2.0", "esutils": "^2.0.2", "file-entry-cache": "^5.0.1", "functional-red-black-tree": "^1.0.1", "glob-parent": "^5.0.0", "globals": "^12.1.0", "ignore": "^4.0.6", "import-fresh": "^3.0.0", "imurmurhash": "^0.1.4", "is-glob": "^4.0.0", "js-yaml": "^3.13.1", "json-stable-stringify-without-jsonify": "^1.0.1", "levn": "^0.4.1", "lodash": "^4.17.14", "minimatch": "^3.0.4", "natural-compare": "^1.4.0", "optionator": "^0.9.1", "progress": "^2.0.0", "regexpp": "^3.1.0", "semver": "^7.2.1", "strip-ansi": "^6.0.0", "strip-json-comments": "^3.1.0", "table": "^5.2.3", "text-table": "^0.2.0", "v8-compile-cache": "^2.0.3"}, "devDependencies": {"@babel/core": "^7.4.3", "@babel/preset-env": "^7.4.3", "acorn": "^7.2.0", "babel-loader": "^8.0.5", "chai": "^4.0.1", "cheerio": "^0.22.0", "common-tags": "^1.8.0", "core-js": "^3.1.3", "dateformat": "^3.0.3", "ejs": "^3.0.2", "escape-string-regexp": "^3.0.0", "eslint": "file:.", "eslint-config-eslint": "file:packages/eslint-config-eslint", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-internal-rules": "file:tools/internal-rules", "eslint-plugin-jsdoc": "^22.1.0", "eslint-plugin-node": "^11.1.0", "eslint-release": "^2.0.0", "eslump": "^2.0.0", "esprima": "^4.0.1", "glob": "^7.1.6", "jsdoc": "^3.5.5", "karma": "^4.0.1", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.3", "karma-webpack": "^4.0.0-rc.6", "leche": "^2.2.3", "lint-staged": "^10.1.2", "load-perf": "^0.2.0", "markdownlint": "^0.19.0", "markdownlint-cli": "^0.22.0", "memfs": "^3.0.1", "mocha": "^7.1.1", "mocha-junit-reporter": "^1.23.0", "npm-license": "^0.3.3", "nyc": "^15.0.1", "proxyquire": "^2.0.1", "puppeteer": "^2.1.1", "recast": "^0.19.0", "regenerator-runtime": "^0.13.2", "shelljs": "^0.8.2", "sinon": "^9.0.1", "temp": "^0.9.0", "webpack": "^4.35.0", "webpack-cli": "^3.3.5", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![NPM version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield)\n<br />\n[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)\n[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)\n[![Follow us on Twitter](https://img.shields.io/twitter/follow/geteslint?label=Follow&style=social)](https://twitter.com/intent/user?screen_name=geteslint)\n\n# ESLint\n\n[Website](https://eslint.org) |\n[Configuring](https://eslint.org/docs/user-guide/configuring) |\n[Rules](https://eslint.org/docs/rules/) |\n[Contributing](https://eslint.org/docs/developer-guide/contributing) |\n[Reporting Bugs](https://eslint.org/docs/developer-guide/contributing/reporting-bugs) |\n[Code of Conduct](https://js.foundation/community/code-of-conduct) |\n[Twitter](https://twitter.com/geteslint) |\n[Mailing List](https://groups.google.com/group/eslint) |\n[Chat Room](https://eslint.org/chat)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Table of Contents\n\n1. [Installation and Usage](#installation-and-usage)\n2. [Configuration](#configuration)\n3. [Code of Conduct](#code-of-conduct)\n4. [Filing Issues](#filing-issues)\n5. [Frequently Asked Questions](#faq)\n6. [Releases](#releases)\n7. [Security Policy](#security-policy)\n8. [Semantic Versioning Policy](#semantic-versioning-policy)\n9. [License](#license)\n10. [Team](#team)\n11. [Sponsors](#sponsors)\n12. [Technology Sponsors](#technology-sponsors)\n\n## <a name=\"installation-and-usage\"></a>Installation and Usage\n\nPrerequisites: [Node.js](https://nodejs.org/) (`^10.12.0`, or `>=12.0.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\n\nYou can install ESLint using npm:\n\n```\n$ npm install eslint --save-dev\n```\n\nYou should then set up a configuration file:\n\n```\n$ ./node_modules/.bin/eslint --init\n```\n\nAfter that, you can run ESLint on any file or directory like this:\n\n```\n$ ./node_modules/.bin/eslint yourfile.js\n```\n\n## <a name=\"configuration\"></a>Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/user-guide/configuring)).\n\n## <a name=\"code-of-conduct\"></a>Code of Conduct\n\nESLint adheres to the [JS Foundation Code of Conduct](https://js.foundation/community/code-of-conduct).\n\n## <a name=\"filing-issues\"></a>Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](https://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](https://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](https://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](https://eslint.org/docs/developer-guide/contributing/changes)\n\n## <a name=\"faq\"></a>Frequently Asked Questions\n\n### I'm using JSCS, should I migrate to ESLint?\n\nYes. [JSCS has reached end of life](https://eslint.org/blog/2016/07/jscs-end-of-life) and is no longer supported.\n\nWe have prepared a [migration guide](https://eslint.org/docs/user-guide/migrating-from-jscs) to help you convert your JSCS settings to an ESLint configuration.\n\nWe are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.\n\n### Does Prettier replace ESLint?\n\nNo, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.\n\n### Why can't ESLint find my plugins?\n\n* Make sure your plugins (and ESLint) are both in your project's `package.json` as devDependencies (or dependencies, if your project uses ESLint at runtime).\n* Make sure you have run `npm install` and all your dependencies are installed.\n* Make sure your plugins' peerDependencies have been installed as well. You can use `npm view eslint-plugin-myplugin peerDependencies` to see what peer dependencies `eslint-plugin-myplugin` has.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/user-guide/configuring)). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What ECMAScript versions does ESLint support?\n\nESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, and 2019. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through [configuration](https://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.\n\nIn other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use the [babel-eslint](https://github.com/babel/babel-eslint) parser and [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/developer-guide/contributing). Until then, please use the appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://eslint.org/chat).\n\n## <a name=\"releases\"></a>Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.\n\n## <a name=\"security-policy\"></a>Security Policy\n\nESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full [security policy](https://github.com/eslint/.github/blob/master/SECURITY.md).\n\n## <a name=\"semantic-versioning-policy\"></a>Semantic Versioning Policy\n\nESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\n* Patch release (intended to not break your lint build)\n    * A bug fix in a rule that results in ESLint reporting fewer errors.\n    * A bug fix to the CLI or core (including formatters).\n    * Improvements to documentation.\n    * Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    * Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n* Minor release (might break your lint build)\n    * A bug fix in a rule that results in ESLint reporting more errors.\n    * A new rule is created.\n    * A new option to an existing rule that does not result in ESLint reporting more errors by default.\n    * An existing rule is deprecated.\n    * A new CLI capability is created.\n    * New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\n    * A new formatter is created.\n    * `eslint:recommended` is updated and will result in strictly fewer errors (e.g., rule removals).\n* Major release (likely to break your lint build)\n    * `eslint:recommended` is updated and may result in new errors (e.g., rule additions, most rule option updates).\n    * A new option to an existing rule that results in ESLint reporting more errors by default.\n    * An existing formatter is removed.\n    * Part of the public API is removed or changed in an incompatible way.\n\nAccording to our policy, any minor update may report more errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `\"eslint\": \"~3.1.0\"` to guarantee the results of your builds.\n\n## <a name=\"license\"></a>License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large)\n\n## <a name=\"team\"></a>Team\n\nThese folks keep the project moving and are resources for help.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--teamstart-->\n\n### Technical Steering Committee (TSC)\n\nThe people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/nzakas\">\n<img src=\"https://github.com/nzakas.png?s=75\" width=\"75\" height=\"75\"><br />\nNicholas C. Zakas\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/btmills\">\n<img src=\"https://github.com/btmills.png?s=75\" width=\"75\" height=\"75\"><br />\nBrandon Mills\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mysticatea\">\n<img src=\"https://github.com/mysticatea.png?s=75\" width=\"75\" height=\"75\"><br />\nToru Nagashima\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/kaicataldo\">\n<img src=\"https://github.com/kaicataldo.png?s=75\" width=\"75\" height=\"75\"><br />\nKai Cataldo\n</a>\n</td></tr></tbody></table>\n\n\n### Reviewers\n\nThe people who review and implement new features.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/aladdin-add\">\n<img src=\"https://github.com/aladdin-add.png?s=75\" width=\"75\" height=\"75\"><br />\n\u859b\u5b9a\u8c14\u7684\u732b\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mdjermanovic\">\n<img src=\"https://github.com/mdjermanovic.png?s=75\" width=\"75\" height=\"75\"><br />\nMilos Djermanovic\n</a>\n</td></tr></tbody></table>\n\n\n\n\n### Committers\n\nThe people who review and fix bugs and help triage issues.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/g-plane\">\n<img src=\"https://github.com/g-plane.png?s=75\" width=\"75\" height=\"75\"><br />\nPig Fang\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/yeonjuan\">\n<img src=\"https://github.com/yeonjuan.png?s=75\" width=\"75\" height=\"75\"><br />\nYeonJuan\n</a>\n</td></tr></tbody></table>\n\n\n<!--teamend-->\n\n## <a name=\"sponsors\"></a>Sponsors\n\nThe following companies, organizations, and individuals support ESLint's ongoing maintenance and development. [Become a Sponsor](https://opencollective.com/eslint) to get your logo on our README and website.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--sponsorsstart-->\n<h3>Gold Sponsors</h3>\n<p><a href=\"https://www.shopify.com\"><img src=\"https://images.opencollective.com/shopify/e780cd4/logo.png\" alt=\"Shopify\" height=\"96\"></a> <a href=\"https://www.salesforce.com\"><img src=\"https://images.opencollective.com/salesforce/ca8f997/logo.png\" alt=\"Salesforce\" height=\"96\"></a> <a href=\"https://www.airbnb.com/\"><img src=\"https://images.opencollective.com/airbnb/d327d66/logo.png\" alt=\"Airbnb\" height=\"96\"></a></p><h3>Silver Sponsors</h3>\n<p><a href=\"https://liftoff.io/\"><img src=\"https://images.opencollective.com/liftoff/5c4fa84/logo.png\" alt=\"Liftoff\" height=\"64\"></a> <a href=\"https://www.ampproject.org/\"><img src=\"https://images.opencollective.com/amp/c8a3b25/logo.png\" alt=\"AMP Project\" height=\"64\"></a></p><h3>Bronze Sponsors</h3>\n<p><a href=\"https://www.norgekasino.com\"><img src=\"https://images.opencollective.com/norgekasino/ecfd57a/logo.png\" alt=\"Norgekasino\" height=\"32\"></a> <a href=\"https://www.japanesecasino.com/\"><img src=\"https://images.opencollective.com/japanesecasino/b0ffe3c/logo.png\" alt=\"Japanesecasino\" height=\"32\"></a> <a href=\"https://bruce.agency\"><img src=\"https://images.opencollective.com/brucemade/0c70c59/logo.png\" alt=\"Bruce\" height=\"32\"></a> <a href=\"https://edubirdie.com/\"><img src=\"https://images.opencollective.com/edubirdie2/b1d51ab/logo.png\" alt=\"EduBirdie\" height=\"32\"></a> <a href=\"https://www.casinotop.com/\"><img src=\"https://images.opencollective.com/casinotop-com/10fd95b/logo.png\" alt=\"CasinoTop.com\" height=\"32\"></a> <a href=\"https://www.casinotopp.net/\"><img src=\"https://images.opencollective.com/casino-topp/1dd399a/logo.png\" alt=\"Casino Topp\" height=\"32\"></a> <a href=\"https://writersperhour.com/write-my-essay\"><img src=\"https://images.opencollective.com/writersperhour/5787d4b/logo.png\" alt=\"Writers Per Hour\" height=\"32\"></a> <a href=\"https://www.crosswordsolver.org/anagram-solver/\"><img src=\"https://images.opencollective.com/anagram-solver/2666271/logo.png\" alt=\"Anagram Solver\" height=\"32\"></a> <a href=\"https://cooltechzone.com/netflix-vpn\"><img src=\"https://images.opencollective.com/vpn-netflix/4850160/logo.png\" alt=\"vpn netflix\" height=\"32\"></a> <a href=\"https://www.kasinot.fi\"><img src=\"https://images.opencollective.com/kasinot-fi/e09aa2e/logo.png\" alt=\"Kasinot.fi\" height=\"32\"></a> <a href=\"https://www.pelisivut.com\"><img src=\"https://images.opencollective.com/pelisivut/04f08f2/logo.png\" alt=\"Pelisivut\" height=\"32\"></a> <a href=\"https://www.nettikasinot.org\"><img src=\"https://images.opencollective.com/nettikasinot-org/53a4b44/logo.png\" alt=\"Nettikasinot.org\" height=\"32\"></a> <a href=\"https://www.bonus.com.de/freispiele\"><img src=\"https://images.opencollective.com/bonusfinder-deutschland/646169e/logo.png\" alt=\"BonusFinder Deutschland\" height=\"32\"></a> <a href=\"https://www.bugsnag.com/platforms?utm_source=Open Collective&utm_medium=Website&utm_content=open-source&utm_campaign=2019-community&utm_term=\"><img src=\"https://images.opencollective.com/bugsnag-stability-monitoring/c2cef36/logo.png\" alt=\"Bugsnag Stability Monitoring\" height=\"32\"></a> <a href=\"https://mixpanel.com\"><img src=\"https://images.opencollective.com/mixpanel/cd682f7/logo.png\" alt=\"Mixpanel\" height=\"32\"></a> <a href=\"https://www.vpsserver.com\"><img src=\"https://images.opencollective.com/vpsservercom/logo.png\" alt=\"VPS Server\" height=\"32\"></a> <a href=\"https://icons8.com\"><img src=\"https://images.opencollective.com/icons8/0b37d14/logo.png\" alt=\"Free Icons by Icons8\" height=\"32\"></a> <a href=\"https://discordapp.com\"><img src=\"https://images.opencollective.com/discordapp/7e3d9a9/logo.png\" alt=\"Discord\" height=\"32\"></a> <a href=\"https://themeisle.com\"><img src=\"https://images.opencollective.com/themeisle/d5592fe/logo.png\" alt=\"ThemeIsle\" height=\"32\"></a> <a href=\"https://tekhattan.com\"><img src=\"https://images.opencollective.com/tekhattan/bc73c28/logo.png\" alt=\"TekHattan\" height=\"32\"></a> <a href=\"https://www.marfeel.com/\"><img src=\"https://images.opencollective.com/marfeel/4b88e30/logo.png\" alt=\"Marfeel\" height=\"32\"></a> <a href=\"http://www.firesticktricks.com\"><img src=\"https://images.opencollective.com/fire-stick-tricks/b8fbe2c/logo.png\" alt=\"Fire Stick Tricks\" height=\"32\"></a></p>\n<!--sponsorsend-->\n\n## <a name=\"technology-sponsors\"></a>Technology Sponsors\n\n* Site search ([eslint.org](https://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2139401}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 9477133}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 48569244}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 141268101}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 261190528}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 462605337}], "dependentsCount": 9962, "starsCount": 328}, "github": {"homepage": "https://eslint.org", "starsCount": 16701, "forksCount": 2938, "subscribersCount": 308, "issues": {"count": 13370, "openCount": 130, "distribution": {"3600": 1503, "10800": 956, "32400": 1171, "97200": 1765, "291600": 1900, "874800": 1669, "2624400": 1346, "7873200": 1630, "23619600": 1075, "70858800": 336, "212576400": 19}, "isDisabled": false}, "contributors": [{"username": "nzakas", "commitsCount": 756}, {"username": "not-an-aardvark", "commitsCount": 510}, {"username": "mysticatea", "commitsCount": 333}, {"username": "alberto", "commitsCount": 231}, {"username": "eslint[bot]", "commitsCount": 194}, {"username": "gyandeeps", "commitsCount": 182}, {"username": "mdjermanovic", "commitsCount": 172}, {"username": "ilyavolodin", "commitsCount": 149}, {"username": "kaicataldo", "commitsCount": 136}, {"username": "aladdin-add", "commitsCount": 134}, {"username": "btmills", "commitsCount": 133}, {"username": "platinumazure", "commitsCount": 133}, {"username": "michaelficarra", "commitsCount": 112}, {"username": "BYK", "commitsCount": 82}, {"username": "iancmyers", "commitsCount": 71}, {"username": "lo1tuma", "commitsCount": 69}, {"username": "IanVS", "commitsCount": 57}, {"username": "g-plane", "commitsCount": 43}, {"username": "mduvall", "commitsCount": 42}, {"username": "vitorbal", "commitsCount": 37}, {"username": "yeonjuan", "commitsCount": 35}, {"username": "pedrottimark", "commitsCount": 34}, {"username": "anikethsaha", "commitsCount": 26}, {"username": "roadhump", "commitsCount": 24}, {"username": "DavidAnson", "commitsCount": 23}, {"username": "jrajav", "commitsCount": 23}, {"username": "gcochard", "commitsCount": 19}, {"username": "VictorHom", "commitsCount": 18}, {"username": "jamesallardice", "commitsCount": 17}, {"username": "jrpool", "commitsCount": 17}, {"username": "ljharb", "commitsCount": 16}, {"username": "scriptdaemon", "commitsCount": 16}, {"username": "golopot", "commitsCount": 15}, {"username": "jrvidal", "commitsCount": 15}, {"username": "j-f1", "commitsCount": 11}, {"username": "bradzacher", "commitsCount": 10}, {"username": "goatslacker", "commitsCount": 10}, {"username": "makepanic", "commitsCount": 10}, {"username": "mgol", "commitsCount": 10}, {"username": "sstern6", "commitsCount": 10}, {"username": "albertosantini", "commitsCount": 9}, {"username": "mamacdon", "commitsCount": 9}, {"username": "tschaub", "commitsCount": 9}, {"username": "xjamundx", "commitsCount": 9}, {"username": "knunery", "commitsCount": 8}, {"username": "madbence", "commitsCount": 8}, {"username": "soda0289", "commitsCount": 8}, {"username": "vegetableman", "commitsCount": 8}, {"username": "andrewdeandrade", "commitsCount": 7}, {"username": "brettz9", "commitsCount": 7}, {"username": "gkz", "commitsCount": 7}, {"username": "jonathanKingston", "commitsCount": 7}, {"username": "pmcelhaney", "commitsCount": 7}, {"username": "spadgos", "commitsCount": 7}, {"username": "spmurrayzzz", "commitsCount": 7}, {"username": "vsemozhetbyt", "commitsCount": 7}, {"username": "Krinkle", "commitsCount": 6}, {"username": "PoziWorld", "commitsCount": 6}, {"username": "TheSavior", "commitsCount": 6}, {"username": "Trott", "commitsCount": 6}, {"username": "alefteris", "commitsCount": 6}, {"username": "annie", "commitsCount": 6}, {"username": "aparajita", "commitsCount": 6}, {"username": "briandipalma", "commitsCount": 6}, {"username": "dguo", "commitsCount": 6}, {"username": "glenjamin", "commitsCount": 6}, {"username": "hzoo", "commitsCount": 6}, {"username": "jrfeenst", "commitsCount": 6}, {"username": "pdehaan", "commitsCount": 6}, {"username": "puzrin", "commitsCount": 6}, {"username": "rajenp", "commitsCount": 6}, {"username": "revolter", "commitsCount": 6}, {"username": "sindresorhus", "commitsCount": 6}, {"username": "Delapouite", "commitsCount": 5}, {"username": "Mardak", "commitsCount": 5}, {"username": "MichaelPaulukonis", "commitsCount": 5}, {"username": "NateEag", "commitsCount": 5}, {"username": "aubergine10", "commitsCount": 5}, {"username": "cjihrig", "commitsCount": 5}, {"username": "ilovejary", "commitsCount": 5}, {"username": "malcolmsgroves", "commitsCount": 5}, {"username": "mathieumg", "commitsCount": 5}, {"username": "meeber", "commitsCount": 5}, {"username": "mjomble", "commitsCount": 5}, {"username": "molee1905", "commitsCount": 5}, {"username": "nre", "commitsCount": 5}, {"username": "onurtemizkan", "commitsCount": 5}, {"username": "tikotzky", "commitsCount": 5}, {"username": "valorkin", "commitsCount": 5}, {"username": "whitneyit", "commitsCount": 5}, {"username": "BridgeAR", "commitsCount": 4}, {"username": "JPeer264", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 4}, {"username": "gajus", "commitsCount": 4}, {"username": "i-ron-y", "commitsCount": 4}, {"username": "nwoltman", "commitsCount": 4}, {"username": "preco21", "commitsCount": 4}, {"username": "realityking", "commitsCount": 4}, {"username": "scottohara", "commitsCount": 4}, {"username": "silverwind", "commitsCount": 4}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 46}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 131}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 278}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 590}]}, "source": {"files": {"readmeSize": 17554, "testsSize": 9443525, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint.svg", "shields": "https://img.shields.io/npm/v/eslint.svg", "content": "https://img.shields.io/npm/v/eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint.svg", "shields": "https://img.shields.io/npm/dm/eslint.svg", "content": "https://img.shields.io/npm/dm/eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.69, "outdatedDependencies": {"ignore": {"required": "^4.0.6", "stable": "5.1.8", "latest": "5.1.8"}, "globals": {"required": "^12.1.0", "stable": "13.1.0", "latest": "13.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7035, "health": 0.8888888888888888, "branding": 0.7}, "popularity": {"communityInterest": 20375, "downloadsCount": 47089367, "downloadsAcceleration": 133802.38112633186, "dependentsCount": 9962}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8081415671382189}}, "score": {"final": 0.9444959038598817, "detail": {"quality": 0.958914521468646, "popularity": 0.8770252012328583, "maintenance": 0.9996077913936785}}}}, {"mocha": {"analyzedAt": "2020-06-10T21:41:22.186Z", "collected": {"metadata": {"name": "mocha", "scope": "unscoped", "version": "8.0.1", "description": "simple, flexible, fun test framework", "keywords": ["mocha", "test", "bdd", "tdd", "tap", "testing", "chai", "assertion", "ava", "jest", "tape", "jasmine", "karma"], "date": "2020-06-10T21:39:54.728Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "boneskull", "email": "boneskull@boneskull.com"}, "maintainers": [{"username": "boneskull", "email": "boneskull@boneskull.com"}, {"username": "craigtaub", "email": "craigtaub@googlemail.com"}, {"username": "juergba", "email": "filodron@gmail.com"}, {"username": "munter", "email": "munter@fumle.dk"}], "contributors": [{"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, {"name": "James Carr", "email": "james.r.carr@gmail.com"}, {"name": "Fredrik Lindin", "email": "fredriklindin@gmail.com"}, {"name": "Konstantin Ka\u0308fer", "email": "github@kkaefer.com"}, {"name": "David Henderson", "email": "david.henderson@triggeredmessaging.com"}, {"name": "Harry Brundage", "email": "harry.brundage@gmail.com"}, {"name": "Quang Van", "email": "quangvvv@gmail.com"}, {"name": "hokaccha", "email": "k.hokamura@gmail.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "FARKAS M\u00e1t\u00e9", "email": "mate.farkas@virtual-call-center.eu"}, {"name": "Ben Lindsey", "email": "ben.lindsey@vungle.com"}, {"name": "Steve Mason", "email": "stevem@brandwatch.com"}, {"name": "Ryunosuke SATO", "email": "tricknotes.rs@gmail.com"}, {"name": "Nathan Rajlich", "email": "nathan@tootallnate.net"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "Yuest Wang", "email": "yuestwang@gmail.com"}, {"name": "Maciej Ma\u0142ecki", "email": "maciej.malecki@notimplemented.org"}, {"name": "Joshua Krall", "email": "joshuakrall@pobox.com"}, {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com"}, {"name": "Will Langstroth", "email": "will@langstroth.com"}, {"name": "Attila Domokos", "email": "adomokos@gmail.com"}, {"name": "Jussi Virtanen", "email": "jussi.k.virtanen@gmail.com"}, {"name": "Phil Sung", "email": "psung@dnanexus.com"}, {"name": "vlad", "email": "iamvlad@gmail.com"}, {"name": "Paul Miller", "email": "paul@paulmillr.com"}, {"name": "Bj\u00f8rge N\u00e6ss", "email": "bjoerge@origo.no"}, {"name": "Jeff Kunkle", "email": "jeff.kunkle@nearinfinity.com"}, {"name": "Fabio M. Costa", "email": "fabiomcosta@gmail.com"}, {"name": "Michael Riley", "email": "michael.riley@autodesk.com"}, {"name": "Ian Young", "email": "ian.greenleaf@gmail.com"}, {"name": "Jakub Nes\u030cetr\u030cil", "email": "jakub@apiary.io"}, {"name": "Tyson Tate", "email": "tyson@tysontate.com"}, {"name": "Jo Liss", "email": "joliss42@gmail.com"}, {"name": "Arian Stolwijk", "email": "arian@aryweb.nl"}, {"name": "Brendan Nee", "email": "brendan.nee@gmail.com"}, {"name": "Xavier Antoviaque", "email": "xavier@antoviaque.org"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Brian Beck", "email": "exogen@gmail.com"}, {"name": "Dave McKenna", "email": "davemckenna01@gmail.com"}, {"name": "Richard Dingwall", "email": "rdingwall@gmail.com"}, {"name": "Cory Thomas", "email": "cory.thomas@bazaarvoice.com"}, {"name": "R56", "email": "rviskus@gmail.com"}, {"name": "Ian Storm Taylor", "email": "ian@ianstormtaylor.com"}, {"name": "Andreas Brekken", "email": "andreas@opuno.com"}, {"name": "abrkn", "email": "a@abrkn.com"}, {"name": "Nathan Bowser", "email": "nathan.bowser@spiderstrategies.com"}, {"name": "L\u00e1szl\u00f3 B\u00e1csi", "email": "lackac@lackac.hu"}, {"name": "Atsuya Takagi", "email": "asoftonight@gmail.com"}, {"name": "Gavin Mogan", "email": "GavinM@airg.com"}, {"name": "fengmk2", "email": "fengmk2@gmail.com"}, {"name": "Seiya Konno", "email": "nulltask@gmail.com"}, {"name": "Jan Lehnardt", "email": "jan@apache.org"}, {"name": "Matt Robenolt", "email": "matt@ydekproductions.com"}, {"name": "Jonas Westerlund", "email": "jonas.westerlund@me.com"}, {"name": "Koen Punt", "email": "koen@koenpunt.nl"}, {"name": "Jason Barry", "email": "jay@jcbarry.com"}, {"name": "Austin Birch", "email": "mraustinbirch@gmail.com"}, {"name": "Adam Crabtree", "email": "adam.crabtree@redrobotlabs.com"}, {"name": "Casey Foster", "email": "casey@caseywebdev.com"}, {"name": "Jonathan Creamer", "email": "matrixhasyou2k4@gmail.com"}, {"name": "Brian Moore", "email": "guardbionic-github@yahoo.com"}, {"name": "traleig1", "email": "darkphoenix739@gmail.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}, {"name": "airportyh", "email": "airportyh@gmail.com"}, {"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Russ Bradberry", "email": "devdazed@me.com"}, {"name": "Ivan", "email": "ivan@kinvey.com"}, {"name": "Corey Butler", "email": "corey@coreybutler.com"}, {"name": "Paul Armstrong", "email": "paul@paularmstrongdesigns.com"}, {"name": "Herman Junge", "email": "herman@geekli.st"}, {"name": "Michael Schoonmaker", "email": "michael.r.schoonmaker@gmail.com"}, {"name": "Wil Moore III", "email": "wil.moore@wilmoore.com"}, {"name": "Pete Hawkins", "email": "pete@petes-imac.frontinternal.net"}, {"name": "tgautier@yahoo.com", "email": "tgautier@gmail.com"}, {"name": "yuitest", "email": "yuitest@cjhat.net"}, {"name": "Matt Smith", "email": "matthewgarysmith@gmail.com"}, {"name": "Katie Gengler", "email": "katiegengler@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Nathan Alderson", "email": "nathan.alderson@adtran.com"}, {"name": "Shawn Krisman", "email": "telaviv@github"}, {"name": "Merrick Christensen", "email": "merrick.christensen@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Simon Gaeremynck", "email": "gaeremyncks@gmail.com"}, {"name": "Jaakko Salonen", "email": "jaakko.salonen@iki.fi"}, {"name": "Jonathan Rajavuori", "email": "jrajav@gmail.com"}, {"name": "Forbes Lindesay", "email": "forbes@lindesay.co.uk"}, {"name": "Standa Opichal", "email": "opichals@gmail.com"}, {"name": "Matthew Shanley", "email": "matthewshanley@littlesecretsrecords.com"}, {"name": "James Lal", "email": "james@lightsofapollo.com"}, {"name": "Greg Perkins", "email": "gregperkins@alum.mit.edu"}, {"name": "Gareth Murphy", "email": "gareth.cpm@gmail.com"}, {"name": "Juzer Ali", "email": "er.juzerali@gmail.com"}, {"name": "Sasha Koss", "email": "koss@nocorp.me"}, {"name": "Justin DuJardin", "email": "justin.dujardin@sococo.com"}, {"name": "Frederico Silva", "email": "frederico.silva@gmail.com"}, {"name": "Jesse Dailey", "email": "jesse.dailey@gmail.com"}, {"name": "Yanis Wang", "email": "yanis.wang@gmail.com"}, {"name": "fcrisci", "email": "fabio.crisci@amadeus.com"}, {"name": "Javier Aranda", "email": "javierav@javierav.com"}, {"name": "Florian Margaine", "email": "florian@margaine.com"}, {"name": "fool2fish", "email": "fool2fish@gmail.com"}, {"name": "James Bowes", "email": "jbowes@repl.ca"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Mathieu Desv\u00e9", "email": "mathieudesve@MacBook-Pro-de-Mathieu.local"}, {"name": "Glen Huang", "email": "curvedmark@gmail.com"}, {"name": "Simon Goumaz", "email": "simon@attentif.ch"}, {"name": "Alexander Early", "email": "alexander.early@gmail.com"}, {"name": "Jimmy Cuadra", "email": "jimmy@jimmycuadra.com"}, {"name": "Russell Munson", "email": "rmunson@github.com"}, {"name": "lodr", "email": "salva@unoyunodiez.com"}, {"name": "Liam Newman", "email": "bitwiseman@gmail.com"}, {"name": "Dmitry Shirokov", "email": "deadrunk@gmail.com"}, {"name": "Fredrik Enestad", "email": "fredrik@devloop.se"}, {"name": "Kirill Korolyov", "email": "kirill.korolyov@gmail.com"}, {"name": "grasGendarme", "email": "me@grasgendar.me"}, {"name": "Mike Pennisi", "email": "mike@mikepennisi.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Tim Ehat", "email": "timehat@gmail.com"}, {"name": "Jeremy Martin", "email": "jmar777@gmail.com"}, {"name": "Mal Graty", "email": "mal.graty@googlemail.com"}, {"name": "Di Wu", "email": "dwu@palantir.com"}, {"name": "badunk", "email": "baduncaduncan@gmail.com"}, {"name": "Marc Kuo", "email": "kuomarc2@gmail.com"}, {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com"}, {"name": "Salehen Shovon Rahman", "email": "salehen.rahman@gmail.com"}, {"name": "eiji.ienaga", "email": "eiji.ienaga@gmail.com"}, {"name": "Oscar Godson", "email": "oscargodson@outlook.com"}, {"name": "Daniel Stockman", "email": "daniel.stockman@gmail.com"}, {"name": "Stephen Mathieson", "email": "smath23@gmail.com"}, {"name": "Travis Jeffery", "email": "tj@travisjeffery.com"}, {"name": "Andreas Lind Petersen", "email": "andreas@one.com"}, {"name": "Romain Prieto", "email": "romain.prieto@gmail.com"}, {"name": "JP Bochi", "email": "jpbochi@gmail.com"}, {"name": "Teddy Zeenny", "email": "teddyzeenny@gmail.com"}, {"name": "Roman Neuhauser", "email": "rneuhauser@suse.cz"}, {"name": "XhmikosR", "email": "xhmikosr@users.sourceforge.net"}, {"name": "Brian Lalor", "email": "blalor@bravo5.org"}, {"name": "Refael Ackermann", "email": "refael@empeeric.com"}, {"name": "ChrisWren", "email": "cthewren@gmail.com"}, {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com"}, {"name": "berni", "email": "berni@extensa.pl"}, {"name": "Andrey Popp", "email": "8mayday@gmail.com"}, {"name": "Brian M. Carlson", "email": "brian.m.carlson@gmail.com"}, {"name": "Michael Olson", "email": "mwolson@member.fsf.org"}, {"name": "Arnaud Brousseau", "email": "arnaud.brousseau@gmail.com"}, {"name": "Peter Rust", "email": "peter@cornerstonenw.com"}, {"name": "Vadim Nikitin", "email": "vnikiti@ncsu.edu"}, {"name": "Roman Shtylman", "email": "shtylman@gmail.com"}, {"name": "Tapiwa Kelvin", "email": "tapiwa@munzwa.tk"}, {"name": "Rustem Mustafin", "email": "mustafin.rustem@gmail.com"}, {"name": "Glen Mailer", "email": "glenjamin@gmail.com"}, {"name": "Nathan Black", "email": "nathan@nathanblack.org"}, {"name": "sebv", "email": "seb.vincent@gmail.com"}, {"name": "andy matthews", "email": "andy@commadelimited.com"}, {"name": "Benjie Gillam", "email": "benjie@jemjie.com"}, {"name": "Noshir Patel", "email": "nosh@blackpiano.com"}, {"name": "Ben Noordhuis", "email": "info@bnoordhuis.nl"}, {"name": "Jacob Wejendorp", "email": "jacob@wejendorp.dk"}, {"name": "claudyus", "email": "claudyus@HEX.(none)", "url": "none"}, {"name": "Denis Bardadym", "email": "bardadymchik@gmail.com"}, {"name": "Connor Dunn", "email": "connorhd@gmail.com"}, {"name": "Jonathan Ong", "email": "jonathanrichardong@gmail.com"}, {"name": "Harish", "email": "hyeluri@gmail.com"}, {"name": "Michal Charemza", "email": "michalcharemza@gmail.com"}, {"name": "startswithaj", "email": "jake.mc@icloud.com"}, {"name": "Gareth Aye", "email": "gaye@mozilla.com"}, {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "kavun", "email": "kevin.a.reed@gmail.com"}, {"name": "Christoffer Hallas", "email": "christoffer.hallas@gmail.com"}, {"name": "Jonathan Park", "email": "jpark@daptiv.com"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "John Doty", "email": "jrhdoty@gmail.com"}, {"name": "Shaine Hatch", "email": "shaine@squidtree.com"}, {"name": "Ben Bradley", "email": "ben@bradleyit.com"}, {"name": "qiuzuhui", "email": "qiuzuhui@users.noreply.github.com"}, {"name": "Jean Ponchon", "email": "gelule@gmail.com"}, {"name": "Linus Unneb\u00e4ck", "email": "linus@folkdatorn.se"}, {"name": "Mattias Tidlund", "email": "mattias.tidlund@learningwell.se"}, {"name": "Matija Marohni\u0107", "email": "matija.marohnic@gmail.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Joel Kemp", "email": "mrjoelkemp@gmail.com"}, {"name": "Zsolt Tak\u00e1cs", "email": "zsolt@takacs.cc"}, {"name": "jsdevel", "email": "js.developer.undefined@gmail.com"}, {"name": "lakmeer", "email": "lakmeerkravid@gmail.com"}, {"name": "Joshua Appelman", "email": "jappelman@xebia.com"}, {"name": "Christopher Hiller", "email": "boneskull@boneskull.com"}, {"name": "Michael Demmer", "email": "demmer@jut.io"}, {"name": "Giovanni Bassi", "email": "giggio@giggio.net"}, {"name": "Panu Horsmalahti", "email": "panu.horsmalahti@iki.fi"}, {"name": "nishigori", "email": "Takuya_Nishigori@voyagegroup.com"}, {"name": "Nicolo Taddei", "email": "taddei.uk@gmail.com"}, {"name": "Diogo Monteiro", "email": "diogo.gmt@gmail.com"}, {"name": "mrShturman", "email": "mrshturman@gmail.com"}, {"name": "PoppinL", "email": "poppinlp@gmail.com"}, {"name": "samuel goldszmidt", "email": "samuel.goldszmidt@gmail.com"}, {"name": "Rob Wu", "email": "rob@robwu.nl"}, {"name": "Kent C. Dodds", "email": "kent+github@doddsfamily.us"}, {"name": "Kevin Conway", "email": "kevinjacobconway@gmail.com"}, {"name": "Dominique Quatravaux", "email": "dominique@quatravaux.org"}, {"name": "zhiyelee", "email": "zhiyelee@gmail.com"}, {"name": "Quanlong He", "email": "kyan.ql.he@gmail.com"}, {"name": "omardelarosa", "email": "thedelarosa@gmail.com"}, {"name": "Ariel Mashraki", "email": "ariel@mashraki.co.il"}, {"name": "Sean Lang", "email": "slang800@gmail.com"}, {"name": "David da Silva Cont\u00edn", "email": "dasilvacontin@gmail.com"}, {"name": "C. Scott Ananian", "email": "cscott@cscott.net"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Richard Knop", "email": "RichardKnop@users.noreply.github.com"}, {"name": "Buck Doyle", "email": "b@chromatin.ca"}, {"name": "Jonas Dohse", "email": "jonas@mbr-targeting.com"}, {"name": "oveddan", "email": "stangogh@gmail.com"}, {"name": "monowerker", "email": "monowerker@gmail.com"}, {"name": "Marcello Bastea-Forte", "email": "marcello@cellosoft.com"}, {"name": "Beno\u00eet Zugmeyer", "email": "bzugmeyer@gmail.com"}, {"name": "Vlad Magdalin", "email": "vlad@webflow.com"}, {"name": "Moshe Kolodny", "email": "mkolodny@integralads.com"}, {"name": "Tom Coquereau", "email": "tom@thau.me"}, {"name": "Timothy Gu", "email": "timothygu99@gmail.com"}, {"name": "Ian Zamojc", "email": "ian@thesecretlocation.net"}, {"name": "Martin Marko", "email": "marcus@gratex.com"}, {"name": "Chris Buckley", "email": "chris@cmbuckley.co.uk"}, {"name": "Jake Craige", "email": "james.craige@gmail.com"}, {"name": "Fede Ramirez", "email": "i@2fd.me"}, {"name": "Parker Moore", "email": "parkrmoore@gmail.com"}, {"name": "Todd Agulnick", "email": "tagulnick@onjack.com"}, {"name": "Daniel St. Jules", "email": "danielst.jules@gmail.com"}, {"name": "Rico Sta. Cruz", "email": "rstacruz@users.noreply.github.com"}, {"name": "Anis Safine", "email": "anis.safine.ext@francetv.fr"}, {"name": "Adam Gruber", "email": "talknmime@gmail.com"}, {"name": "Sam Mussell", "email": "smussell@gmail.com"}, {"name": "klaemo", "email": "klaemo@fastmail.fm"}, {"name": "Stewart Taylor", "email": "stewart.taylor1@gmail.com"}, {"name": "Jordan Sexton", "email": "jordan@jordansexton.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Andrii Shumada", "email": "eagleeyes91@gmail.com"}, {"name": "Dominic Barnes", "email": "dominic@dbarnes.info"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Sune Simonsen", "email": "sune@we-knowhow.dk"}, {"name": "Kyle Mitchell", "email": "kyle@kemitchell.com"}, {"name": "James Nylen", "email": "jnylen@gmail.com"}, {"name": "Jonathan Delgado", "email": "jdelgado@rewip.com"}, {"name": "Jake Marsh", "email": "jakemmarsh@gmail.com"}, {"name": "slyg", "email": "syl.faucherand@gmail.com"}, {"name": "Tomer Eskenazi", "email": "tomer.eskenazi@ironsrc.com"}, {"name": "Jeff Schilling", "email": "jeff.schilling@q2ebanking.com"}, {"name": "Ryan Hubbard", "email": "ryanmhubbard@gmail.com"}, {"name": "amsul", "email": "reach@amsul.ca"}, {"name": "Kevin Kirsche", "email": "Kev.Kirsche+GitHub@gmail.com"}, {"name": "Gabriel Silk", "email": "gabesilk@gmail.com"}, {"name": "Johnathon Sanders", "email": "outdooricon@gmail.com"}, {"name": "Max Goodman", "email": "c@chromakode.com"}, {"name": "Nathan Houle", "email": "nathan@nathanhoule.com"}, {"name": "Ben Vinegar", "email": "ben@benv.ca"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Tingan Ho", "email": "tingan87@gmail.com"}, {"name": "Guy Arye", "email": "arye.guy@gmail.com"}, {"name": "Nik Nyby", "email": "nnyby@columbia.edu"}, {"name": "Artem Govorov", "email": "artem.govorov@gmail.com"}, {"name": "Ajay Kodali", "email": "ajay.kodali@citrix.com"}, {"name": "Ryan Tablada", "email": "ryan.tablada@gmail.com"}, {"name": "Pavel Zubkou", "email": "pavel.zubkou@gmail.com"}, {"name": "gigadude", "email": "gigadude@users.noreply.github.com"}, {"name": "Outsider", "email": "outsideris@gmail.com"}, {"name": "Jason Lai", "email": "jason@getpebble.com"}, {"name": "Aaron Krause", "email": "aaronjkrause@gmail.com"}, {"name": "wsw", "email": "wsw0108@gmail.com"}, {"name": "Kevin Burke", "email": "kev@inburke.com"}, {"name": "Berker Peksag", "email": "berker.peksag@gmail.com"}, {"name": "nexdrew", "email": "andrew.goode@nextraq.com"}, {"name": "Hugo Giraudel", "email": "hugo.giraudel@gmail.com"}, {"name": "Rich Trott", "email": "rtrott@gmail.com"}, {"name": "Matt Giles", "email": "matt.giles@cerner.com"}, {"name": "Joey Cozza", "email": "joey@grow.com"}, {"name": "Kris Rasmussen", "email": "kristopher.rasmussen@gmail.com"}, {"name": "James G. Kim", "email": "jgkim@jayg.org"}, {"name": "Sorin Iclanzan", "email": "sorin@iclanzan.com"}, {"name": "Rob Raux", "email": "rraux@peachworks.com"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@jetbrains.com"}, {"name": "Ian W. Remmel", "email": "design@ianwremmel.com"}, {"name": "tmont", "email": "tommy.mont@gmail.com"}, {"name": "John Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "Fagner Brack", "email": "github3@fagnermartins.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Michiel de Jong", "email": "michiel@unhosted.org"}, {"name": "Benoit Larroque", "email": "zeta.ben@gmail.com"}, {"name": "Charles Lowell", "email": "cowboyd@frontside.io"}, {"name": "Joao Moreno", "email": "mail@joaomoreno.com"}, {"name": "Long Ho", "email": "longlho@users.noreply.github.com"}, {"name": "Robert Rossmann", "email": "rr.rossmann@me.com"}, {"name": "Aaron Hamid", "email": "aaron.hamid@gmail.com"}, {"name": "Stone", "email": "baoshi.li@adleida.com"}, {"name": "Tom Hughes", "email": "tom@compton.nu"}, {"name": "Soel", "email": "shachar.soel@sap.com"}, {"name": "Mislav Marohni\u0107", "email": "mislav.marohnic@gmail.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Frank Leon Rose", "email": "frankleonrose@gmail.com"}, {"name": "Ryan Shaw", "email": "ryan.shaw@min.vc"}, {"name": "Thedark1337", "email": "thedark1337@thedark1337.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "ryym", "email": "ryym.64@gmail.com"}, {"name": "Josh Lory", "email": "josh.lory@code.org"}, {"name": "Jonathan Kim", "email": "jkimbo@gmail.com"}, {"name": "Al Scott", "email": "al.scott@atomicobject.com"}, {"name": "Tobias Bieniek", "email": "tobias.bieniek@gmail.com"}, {"name": "Benjamin Eidelman", "email": "beneidel@gmail.com"}, {"name": "Julien Wajsberg", "email": "felash@gmail.com"}, {"name": "sarehag", "email": "joakim.sarehag@gmail.com"}, {"name": "Alexander Shepelin", "email": "Brightcor@gmail.com"}, {"name": "OlegTsyba", "email": "oleg.tsyba.ua@gmail.com"}, {"name": "Xavier Damman", "email": "xdamman@gmail.com"}, {"name": "Mick Brooks", "email": "mick.brooks@sinking.in"}, {"name": "Erik Eng", "email": "mail@ptz0n.se"}, {"name": "Kelong Wang", "email": "buaawkl@gmail.com"}, {"name": "J\u00e9r\u00e9mie Astori", "email": "jeremie@astori.fr"}, {"name": "ScottFreeCode", "email": "ScottFreeCode@users.noreply.github.com"}, {"name": "Sergio Santoro", "email": "santoro.srg@gmail.com"}, {"name": "Adrian Ludwig", "email": "me@adrianludwig.pl"}, {"name": "Anders Olsen Sandvik", "email": "Andersos@users.noreply.github.com"}, {"name": "Thomas Grainger", "email": "tagrain@gmail.com"}, {"name": "jimenglish81", "email": "jimenglish81@gmail.com"}, {"name": "Avi Vahl", "email": "avi.vahl@wix.com"}, {"name": "Jason Leyba", "email": "jmleyba@gmail.com"}, {"name": "silentcloud", "email": "rjmuqiang@gmail.com"}, {"name": "Dmitriy Simushev", "email": "simushevds@gmail.com"}, {"name": "simov", "email": "simeonvelichkov@gmail.com"}, {"name": "Ross Warren", "email": "rosswarren4@gmail.com"}, {"name": "Benson Trent", "email": "bensontrent@gmail.com"}, {"name": "rmacklin", "email": "richard.github@nrm.com"}, {"name": "Rob Loach", "email": "robloach@gmail.com"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Callum Macrae", "email": "callum@macr.ae"}, {"name": "ELLIOTTCABLE", "email": "me@ell.io"}, {"name": "Anton", "email": "anton.redfox@gmail.com"}, {"name": "Peter M\u00fcller", "email": "munter@fumle.dk"}, {"name": "APerson", "email": "danielhglus@gmail.com"}, {"name": "not-an-aardvark", "email": "not-an-aardvark@users.noreply.github.com"}, {"name": "Alhadis", "email": "gardnerjohng@gmail.com"}, {"name": "Slobodan Mi\u0161kovi\u0107", "email": "slobodan@miskovic.ca"}, {"name": "Philip M. White", "email": "philip@mailworks.org"}, {"name": "Christian", "email": "me@rndm.de"}, {"name": "anton", "email": "anton.valickij@gmail.com"}, {"name": "Dmitry Sorin", "email": "info@staypositive.ru"}, {"name": "Vivek Ganesan", "email": "caliberoviv@gmail.com"}, {"name": "Josh Eversmann", "email": "josh.eversmann@gmail.com"}, {"name": "inxorable", "email": "inxorable@codewren.ch"}, {"name": "Ben Harris", "email": "benhdev@gmail.com"}, {"name": "Aaron Petcoff", "email": "hello@aaronpetcoff.me"}, {"name": "Matt Bierner", "email": "mattbierner@gmail.com"}, {"name": "Ville Saukkonen", "email": "villesau@users.noreply.github.com"}, {"name": "Ben Hutchison", "email": "ben@aldaviva.com"}, {"name": "Volker Buzek", "email": "volker.buzek@sap.com"}, {"name": "Scott Kao", "email": "Scottkao85@users.noreply.github.com"}, {"name": "Sulabh Bista", "email": "sul4bh@gmail.com"}, {"name": "rotemdan", "email": "rotemdan@gmail.com"}, {"name": "Fumiaki MATSUSHIMA", "email": "mtsmfm@gmail.com"}, {"name": "Markus Tacker", "email": "m@coderbyheart.com"}, {"name": "Christoph Neuroth", "email": "christoph.neuroth@gmail.com"}, {"name": "Enric Pallerols", "email": "enric@pallerols.cat"}, {"name": "Craig Taub", "email": "craigtaub@gmail.com"}, {"name": "Yoshiya Hinosawa", "email": "hinosawa@waku-2.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Chris Lamb", "email": "chris@chris-lamb.co.uk"}, {"name": "Igwe Kalu", "email": "igwe.kalu@live.com"}, {"name": "Kevin Wang", "email": "kevin@fossa.io"}, {"name": "Laurence Rowe", "email": "lrowe@netflix.com"}, {"name": "Jakob Krigovsky", "email": "jakob@krigovsky.com"}, {"name": "Chris", "email": "chrisleck@users.noreply.github.com"}, {"name": "Kunal Nagpal", "email": "kunagpal@users.noreply.github.com"}, {"name": "elergy", "email": "elergy@yandex-team.ru"}, {"name": "Jupp M\u00fcller", "email": "jupp0r@gmail.com"}, {"name": "Popr\u00e1di \u00c1rp\u00e1d", "email": "popradi.arpad11@gmail.com"}, {"name": "Charlie Rudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "Angelica Valenta", "email": "angelicavalenta@gmail.com"}, {"name": "Jan Krems", "email": "jan.krems@groupon.com"}, {"name": "Josh Soref", "email": "jsoref@users.noreply.github.com"}, {"name": "solodynamo", "email": "bittuf3@gmail.com"}, {"name": "Eli Skeggs", "email": "skeggse@users.noreply.github.com"}, {"name": "Nikolaos Georgiou", "email": "Nikolaos.Georgiou@gmail.com"}, {"name": "olsonpm", "email": "olsonpm@users.noreply.github.com"}, {"name": "David Neubauer", "email": "davidneub@gmail.com"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "38elements", "email": "mh19820223@gmail.com"}, {"name": "Guangcong Luo", "email": "guangcongluo@gmail.com"}, {"name": "David M. Lee", "email": "leedm777@yahoo.com"}, {"name": "tripu", "email": "t@tripu.info"}, {"name": "Pat Finnigan", "email": "patrick.k.finnigan@gmail.com"}, {"name": "Eugene Tiutiunnyk", "email": "eugene.tiutiunnyk@lookout.com"}, {"name": "Aaron Brady", "email": "aaron@mori.com"}, {"name": "Charles Merriam", "email": "charles.merriam@gmail.com"}, {"name": "Kevin Partington", "email": "platinum.azure@kernelpanicstudios.com"}, {"name": "Lane Kelly", "email": "lanekelly16@gmail.com"}, {"name": "Cube", "email": "maty21@gmail.com"}, {"name": "yehiyam", "email": "yehiyam@users.noreply.github.com"}, {"name": "Jon Surrell", "email": "jon.surrell@automattic.com"}, {"name": "\u73b0\u5145", "email": "qixiang.cqx@alibaba-inc.com"}, {"name": "Ahmad Bamieh", "email": "ahmadbamieh@gmail.com"}, {"name": "Capacitor Set", "email": "CapacitorSet@users.noreply.github.com"}, {"name": "Anthony", "email": "keppi@o2.pl"}, {"name": "Can Oztokmak", "email": "can@zeplin.io"}, {"name": "ImgBot", "email": "31427850+ImgBotApp@users.noreply.github.com"}, {"name": "Thomas Broadley", "email": "buriedunderbooks@hotmail.com"}, {"name": "FND", "email": "FND@users.noreply.github.com"}, {"name": "Dina Berry", "email": "dfberry@users.noreply.github.com"}, {"name": "Marais Rossouw", "email": "me@maraisr.com"}, {"name": "Andrew Krawchyk", "email": "903716+akrawchyk@users.noreply.github.com"}, {"name": "Ted Yavuzkurt", "email": "hello@TedY.io"}, {"name": "Daniel Ruf", "email": "daniel@daniel-ruf.de"}, {"name": "Harry Wolff", "email": "hswolff@users.noreply.github.com"}, {"name": "Valeri Karpov", "email": "val@karpov.io"}, {"name": "Silvio Massari", "email": "silvio.massari@auth0.com"}, {"name": "Joseph Lin", "email": "josephlin55555@gmail.com"}, {"name": "Honza Javorek", "email": "mail@honzajavorek.cz"}, {"name": "Harry Sarson", "email": "harry.sarson@hotmail.co.uk"}, {"name": "Anish Karandikar", "email": "anishkny@gmail.com"}, {"name": "Victor", "email": "victor@turo.com"}, {"name": "Emanuele", "email": "my.burning@gmail.com"}, {"name": "Thomas Vantuycom", "email": "thomasvantuycom@protonmail.com"}, {"name": "Alex Bainter", "email": "metalex9@users.noreply.github.com"}, {"name": "Jerry Muzsik", "email": "jerrymuzsik@icloud.com"}, {"name": "Nicolas Girault", "email": "nic.girault@gmail.com"}, {"name": "dfberry", "email": "dinaberry@outlook.com"}, {"name": "DavNej", "email": "davnej.dev@gmail.com"}, {"name": "Paul Roebuck", "email": "plroebuck@users.noreply.github.com"}, {"name": "Tim Harshman", "email": "goteamtim+git@gmail.com"}, {"name": "Charles Samborski", "email": "demurgos@demurgos.net"}, {"name": "Tobias Mollstam", "email": "tobias@mollstam.com"}, {"name": "Ben Glassman", "email": "benglass@users.noreply.github.com"}, {"name": "Mark Owsiak", "email": "mark.owsiak@gmail.com"}, {"name": "fargies", "email": "fargies@users.noreply.github.com"}, {"name": "Marc Udoff", "email": "mlucool@gmail.com"}, {"name": "gizemkeser", "email": "44727928+gizemkeser@users.noreply.github.com"}, {"name": "Fin Chen", "email": "finfin@gmail.com"}, {"name": "Brittany Moore", "email": "moore.brittanyann@gmail.com"}, {"name": "F\u00e1bio Santos", "email": "fabiosantosart@gmail.com"}, {"name": "Jayasankar", "email": "jayasankar.m@gmail.com"}, {"name": "Juerg B", "email": "44573692+juergba@users.noreply.github.com"}, {"name": "Svetlana", "email": "39729453+Lana-Light@users.noreply.github.com"}, {"name": "Martijn Cuppens", "email": "martijn.cuppens@intracto.com"}, {"name": "Anna Henningsen", "email": "github@addaleax.net"}, {"name": "Andreas Lind", "email": "andreaslindpetersen@gmail.com"}, {"name": "Chen Yangjian", "email": "252317+cyjake@users.noreply.github.com"}, {"name": "Corey Farrell", "email": "git@cfware.com"}, {"name": "Wanseob Lim", "email": "email@wanseob.com"}, {"name": "Szauka", "email": "33459309+Szauka@users.noreply.github.com"}, {"name": "Brian Tomlin", "email": "tendonstrength@gmail.com"}, {"name": "Sylvain", "email": "sstephant+github@gmail.com"}, {"name": "Adam Ginzberg", "email": "aginzberg@gmail.com"}, {"name": "XhmikosR", "email": "xhmikosr@gmail.com"}, {"name": "Gast\u00f3n I. Silva", "email": "givanse@gmail.com"}, {"name": "Andrew Bradley", "email": "cspotcode@gmail.com"}, {"name": "Andrew Bradley", "email": "abradley@brightcove.com"}, {"name": "DavidLi119", "email": "han.david.li@gmail.com"}, {"name": "James D. Rogers", "email": "jd2rogers2@gmail.com"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "juergba", "email": "filodron@gmail.com"}, {"name": "Sylvester Keil", "email": "sylvester@keil.or.at"}, {"name": "Bjorn Stromberg", "email": "bjorn@bjornstar.com"}, {"name": "Stephen Hess", "email": "trescube@users.noreply.github.com"}, {"name": "toyjhlee", "email": "toyjhlee@gmail.com"}, {"name": "Piotr Kuczynski", "email": "piotr.kuczynski@gmail.com"}, {"name": "Thomas Scholtes", "email": "thomas-scholtes@gmx.de"}, {"name": "Brian Lagerman", "email": "49239617+brian-lagerman@users.noreply.github.com"}, {"name": "Pascal", "email": "pascal@pascal.com"}, {"name": "Gabe Gorelick", "email": "gabegorelick@gmail.com"}, {"name": "Daniel Ruf", "email": "827205+DanielRuf@users.noreply.github.com"}, {"name": "Mario D\u00edaz Ce\u00f1era", "email": "46492068+MarioDiaz98@users.noreply.github.com"}, {"name": "Oliver Salzburg", "email": "oliver.salzburg@gmail.com"}, {"name": "Sona Lee", "email": "mojosoeun@gmail.com"}, {"name": "Park Seong-beom", "email": "parkgds@gmail.com"}, {"name": "EunChan Park", "email": "pec9399@naver.com"}, {"name": "Mia", "email": "miajeongdev@gmail.com"}, {"name": "Lindsay-Needs-Sleep", "email": "51773923+Lindsay-Needs-Sleep@users.noreply.github.com"}, {"name": "Soobin Bak", "email": "qls014738@gmail.com"}, {"name": "Peter Schmidt", "email": "peter@peterjs.com"}, {"name": "SheetJSDev", "email": "dev@sheetjs.com"}, {"name": "HyunSangHan", "email": "gustkd3@gmail.com"}, {"name": "Jan-Philip Gehrcke", "email": "jgehrcke@googlemail.com"}, {"name": "Robert Kieffer", "email": "robert@broofa.com"}, {"name": "Saerom Bang", "email": "saerombang11@gmail.com"}, {"name": "Kyle Fuller", "email": "kyle@fuller.li"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Hugo Kim", "email": "k7120792@gmail.com"}, {"name": "KyoungWan", "email": "kyngwan@gmail.com"}, {"name": "Zirak", "email": "zirakertan@gmail.com"}, {"name": "Christian Holm", "email": "christian@peakon.com"}, {"name": "Kai Cataldo", "email": "kai@kaicataldo.com"}, {"name": "Gil Tayar", "email": "gil.tayar@applitools.com"}, {"name": "Ulises Gasc\u00f3n", "email": "UlisesGascon@users.noreply.github.com"}, {"name": "kundol", "email": "jhc9639@naver.com"}, {"name": "Arvid Ottenberg", "email": "arvid.ottenberg@gmx.de"}, {"name": "Daniel0113", "email": "Daniel.febles97@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "JacobLey", "email": "37151850+JacobLey@users.noreply.github.com"}, {"name": "Gil Tayar", "email": "gil@tayar.org"}], "repository": {"type": "git", "url": "git+https://github.com/mochajs/mocha.git"}, "links": {"npm": "https://www.npmjs.com/package/mocha", "homepage": "https://mochajs.org/", "repository": "https://github.com/mochajs/mocha", "bugs": "https://github.com/mochajs/mocha/issues/"}, "license": "MIT", "dependencies": {"ansi-colors": "4.1.1", "browser-stdout": "1.3.1", "chokidar": "3.3.1", "debug": "3.2.6", "diff": "4.0.2", "escape-string-regexp": "1.0.5", "find-up": "4.1.0", "glob": "7.1.6", "growl": "1.10.5", "he": "1.2.0", "js-yaml": "3.13.1", "log-symbols": "3.0.0", "minimatch": "3.0.4", "ms": "2.1.2", "object.assign": "4.1.0", "promise.allsettled": "1.0.2", "serialize-javascript": "3.0.0", "strip-json-comments": "3.0.1", "supports-color": "7.1.0", "which": "2.0.2", "wide-align": "1.1.3", "workerpool": "6.0.0", "yargs": "13.3.2", "yargs-parser": "13.1.2", "yargs-unparser": "1.6.0"}, "devDependencies": {"@11ty/eleventy": "^0.10.0", "@11ty/eleventy-plugin-inclusive-language": "^1.0.0", "@mocha/docdash": "^2.1.3", "assetgraph-builder": "^8.0.1", "autoprefixer": "^9.7.4", "babel-eslint": "^10.1.0", "browserify": "^16.5.0", "browserify-package-json": "^1.0.1", "chai": "^4.2.0", "coffee-script": "^1.12.7", "coveralls": "^3.0.11", "cross-env": "^6.0.3", "cross-spawn": "^7.0.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-config-semistandard": "^15.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-import": "^2.20.1", "eslint-plugin-node": "^11.0.0", "eslint-plugin-prettier": "^3.1.2", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "fs-extra": "^9.0.0", "husky": "^4.2.3", "hyperlink": "^4.4.3", "image-size": "^0.8.3", "jsdoc": "^3.6.3", "karma": "^4.4.1", "karma-browserify": "^7.0.0", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.5", "karma-sauce-launcher": "^2.0.2", "lint-staged": "^9.5.0", "markdown-it": "^10.0.0", "markdown-it-anchor": "^5.2.5", "markdown-it-attrs": "^3.0.2", "markdown-it-emoji": "^1.4.0", "markdown-it-prism": "^2.0.5", "markdown-toc": "^1.2.0", "markdownlint-cli": "^0.22.0", "needle": "^2.4.1", "nps": "^5.9.12", "nyc": "^15.0.0", "prettier": "^1.19.1", "remark": "^11.0.2", "remark-github": "^8.0.0", "remark-inline-links": "^3.1.3", "rewiremock": "^3.14.1", "rimraf": "^3.0.2", "sinon": "^9.0.1", "strip-ansi": "^6.0.0", "svgo": "^1.3.2", "through2": "^3.0.1", "to-vfile": "^6.1.0", "unexpected": "^11.14.0", "unexpected-eventemitter": "^2.2.0", "unexpected-sinon": "^10.11.2", "uslug": "^1.0.4", "watchify": "^3.11.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 8}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 11}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <img src=\"https://cldup.com/xFVFxOioAU.svg\" alt=\"Mocha test framework\"/>\n</p>\n\n<p align=\"center\">\u2615\ufe0f Simple, flexible, fun JavaScript test framework for Node.js & The Browser \u2615\ufe0f</p>\n\n<p align=\"center\"><a href=\"http://travis-ci.org/mochajs/mocha\"><img src=\"https://api.travis-ci.org/mochajs/mocha.svg?branch=master\" alt=\"Build Status\"></a>  <a href=\"https://coveralls.io/github/mochajs/mocha\"><img src=\"https://coveralls.io/repos/github/mochajs/mocha/badge.svg\" alt=\"Coverage Status\"></a>  <a href=\"https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_shield\"><img src=\"https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=shield\" alt=\"FOSSA Status\"></a>  <a href=\"https://gitter.im/mochajs/mocha?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Gitter\"></a>  <a href=\"https://github.com/mochajs/mocha#backers\"><img src=\"https://opencollective.com/mochajs/backers/badge.svg\" alt=\"OpenCollective\"></a>  <a href=\"https://github.com/mochajs/mocha#sponsors\"><img src=\"https://opencollective.com/mochajs/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n</p>\n\n<p align=\"center\"><br><img alt=\"Mocha Browser Support h/t SauceLabs\" src=\"https://saucelabs.com/browser-matrix/mochajs.svg\" width=\"354\"></p>\n\n## Links\n\n- **[Documentation](https://mochajs.org/)**\n- **[Release Notes / History / Changes](https://github.com/mochajs/mocha/blob/master/CHANGELOG.md)**\n- [Code of Conduct](https://github.com/mochajs/mocha/blob/master/.github/CODE_OF_CONDUCT.md)\n- [Contributing](https://github.com/mochajs/mocha/blob/master/.github/CONTRIBUTING.md)\n- [Gitter Chatroom](https://gitter.im/mochajs/mocha) (ask questions here!)\n- [Google Group](https://groups.google.com/group/mochajs)\n- [Issue Tracker](https://github.com/mochajs/mocha/issues)\n\n## Backers\n\n[Become a backer](https://opencollective.com/mochajs#backer) and show your support to our open source project.\n\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/0/avatar)](https://opencollective.com/mochajs/backer/0/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/1/avatar)](https://opencollective.com/mochajs/backer/1/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/2/avatar)](https://opencollective.com/mochajs/backer/2/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/3/avatar)](https://opencollective.com/mochajs/backer/3/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/4/avatar)](https://opencollective.com/mochajs/backer/4/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/5/avatar)](https://opencollective.com/mochajs/backer/5/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/6/avatar)](https://opencollective.com/mochajs/backer/6/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/7/avatar)](https://opencollective.com/mochajs/backer/7/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/8/avatar)](https://opencollective.com/mochajs/backer/8/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/9/avatar)](https://opencollective.com/mochajs/backer/9/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/10/avatar)](https://opencollective.com/mochajs/backer/10/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/11/avatar)](https://opencollective.com/mochajs/backer/11/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/12/avatar)](https://opencollective.com/mochajs/backer/12/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/13/avatar)](https://opencollective.com/mochajs/backer/13/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/14/avatar)](https://opencollective.com/mochajs/backer/14/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/15/avatar)](https://opencollective.com/mochajs/backer/15/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/16/avatar)](https://opencollective.com/mochajs/backer/16/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/17/avatar)](https://opencollective.com/mochajs/backer/17/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/18/avatar)](https://opencollective.com/mochajs/backer/18/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/19/avatar)](https://opencollective.com/mochajs/backer/19/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/20/avatar)](https://opencollective.com/mochajs/backer/20/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/21/avatar)](https://opencollective.com/mochajs/backer/21/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/22/avatar)](https://opencollective.com/mochajs/backer/22/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/23/avatar)](https://opencollective.com/mochajs/backer/23/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/24/avatar)](https://opencollective.com/mochajs/backer/24/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/25/avatar)](https://opencollective.com/mochajs/backer/25/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/26/avatar)](https://opencollective.com/mochajs/backer/26/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/27/avatar)](https://opencollective.com/mochajs/backer/27/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/28/avatar)](https://opencollective.com/mochajs/backer/28/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/29/avatar)](https://opencollective.com/mochajs/backer/29/website)\n\n## Sponsors\n\nDoes your company use Mocha? Ask your manager or marketing team if your company would be interested in supporting our project. Support will allow the maintainers to dedicate more time for maintenance and new features for everyone. Also, your company's logo will show [on GitHub](https://github.com/mochajs/mocha#readme) and on [our site](https://mochajs.org) - who doesn't want a little extra exposure? [Here's the info](https://opencollective.com/mochajs#sponsor).\n\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/0/avatar)](https://opencollective.com/mochajs/sponsor/0/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/1/avatar)](https://opencollective.com/mochajs/sponsor/1/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/2/avatar)](https://opencollective.com/mochajs/sponsor/2/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/3/avatar)](https://opencollective.com/mochajs/sponsor/3/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/4/avatar)](https://opencollective.com/mochajs/sponsor/4/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/5/avatar)](https://opencollective.com/mochajs/sponsor/5/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/6/avatar)](https://opencollective.com/mochajs/sponsor/6/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/7/avatar)](https://opencollective.com/mochajs/sponsor/7/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/8/avatar)](https://opencollective.com/mochajs/sponsor/8/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/9/avatar)](https://opencollective.com/mochajs/sponsor/9/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/10/avatar)](https://opencollective.com/mochajs/sponsor/10/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/11/avatar)](https://opencollective.com/mochajs/sponsor/11/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/12/avatar)](https://opencollective.com/mochajs/sponsor/12/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/13/avatar)](https://opencollective.com/mochajs/sponsor/13/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/14/avatar)](https://opencollective.com/mochajs/sponsor/14/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/15/avatar)](https://opencollective.com/mochajs/sponsor/15/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/16/avatar)](https://opencollective.com/mochajs/sponsor/16/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/17/avatar)](https://opencollective.com/mochajs/sponsor/17/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/18/avatar)](https://opencollective.com/mochajs/sponsor/18/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/19/avatar)](https://opencollective.com/mochajs/sponsor/19/website)\n\n## Development\n\nYou might want to know that:\n\n- Mocha is the _most-depended-upon_ module on npm (source: [libraries.io](https://libraries.io/search?order=desc&platforms=NPM&sort=dependents_count)), and\n- Mocha is an _independent_ open-source project, maintained exclusively by volunteers.\n\nYou might want to help:\n\n- New to contributing to Mocha? Check out this list of [good first issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-issue)\n- Mocha could use a hand with [these issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\n- The [maintainer's handbook](https://github.com/mochajs/mocha/blob/master/MAINTAINERS.md) explains how things get done\n\nFinally, come [chat with the maintainers](https://gitter.im/mochajs/contributors) on Gitter if you want to help with:\n\n- Triaging issues, answering questions\n- Review, merging, and closing pull requests\n- Other project-maintenance-y things\n\n## License\n\nCopyright 2011-2020 OpenJS Foundation and contributors. Licensed [MIT](https://github.com/mochajs/mocha/blob/master/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 882252}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4716770}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 19792768}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 56947413}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 100958909}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 183001035}], "dependentsCount": 5915, "starsCount": 704}, "github": {"homepage": "https://mochajs.org", "starsCount": 19417, "forksCount": 2660, "subscribersCount": 410, "issues": {"count": 4289, "openCount": 305, "distribution": {"3600": 447, "10800": 210, "32400": 221, "97200": 428, "291600": 439, "874800": 441, "2624400": 480, "7873200": 392, "23619600": 469, "70858800": 440, "212576400": 322}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 867}, {"username": "boneskull", "commitsCount": 583}, {"username": "travisjeffery", "commitsCount": 105}, {"username": "craigtaub", "commitsCount": 72}, {"username": "juergba", "commitsCount": 67}, {"username": "Munter", "commitsCount": 60}, {"username": "plroebuck", "commitsCount": 46}, {"username": "dasilvacontin", "commitsCount": 43}, {"username": "danielstjules", "commitsCount": 34}, {"username": "outsideris", "commitsCount": 29}, {"username": "rauchg", "commitsCount": 29}, {"username": "ScottFreeCode", "commitsCount": 27}, {"username": "a8m", "commitsCount": 19}, {"username": "XhmikosR", "commitsCount": 18}, {"username": "adomokos", "commitsCount": 13}, {"username": "jfirebaugh", "commitsCount": 10}, {"username": "joliss", "commitsCount": 9}, {"username": "ndhoule", "commitsCount": 9}, {"username": "Bamieh", "commitsCount": 8}, {"username": "TooTallNate", "commitsCount": 8}, {"username": "domenic", "commitsCount": 8}, {"username": "jugglinmike", "commitsCount": 8}, {"username": "tricknotes", "commitsCount": 7}, {"username": "brendannee", "commitsCount": 6}, {"username": "geigerzaehler", "commitsCount": 6}, {"username": "jamescarr", "commitsCount": 6}, {"username": "rstacruz", "commitsCount": 6}, {"username": "Raynos", "commitsCount": 5}, {"username": "aheckmann", "commitsCount": 5}, {"username": "hokaccha", "commitsCount": 5}, {"username": "mislav", "commitsCount": 5}, {"username": "papandreou", "commitsCount": 5}, {"username": "sunesimonsen", "commitsCount": 5}, {"username": "DanielRuf", "commitsCount": 4}, {"username": "antoviaque", "commitsCount": 4}, {"username": "cspotcode", "commitsCount": 4}, {"username": "ematipico", "commitsCount": 4}, {"username": "harrysarson", "commitsCount": 4}, {"username": "jkrall", "commitsCount": 4}, {"username": "makepanic", "commitsCount": 4}, {"username": "mantoni", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "vkarpov15", "commitsCount": 4}, {"username": "xxczaki", "commitsCount": 4}, {"username": "38elements", "commitsCount": 3}, {"username": "ArtemGovorov", "commitsCount": 3}, {"username": "AviVahl", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "HyunSangHan", "commitsCount": 3}, {"username": "amsul", "commitsCount": 3}, {"username": "arvidOtt", "commitsCount": 3}, {"username": "avaly", "commitsCount": 3}, {"username": "benjie", "commitsCount": 3}, {"username": "demmer", "commitsCount": 3}, {"username": "dhendo", "commitsCount": 3}, {"username": "dump247", "commitsCount": 3}, {"username": "fool2fish", "commitsCount": 3}, {"username": "fredr", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "haru01", "commitsCount": 3}, {"username": "iammerrick", "commitsCount": 3}, {"username": "jldailey", "commitsCount": 3}, {"username": "jonathanong", "commitsCount": 3}, {"username": "nathanbowser", "commitsCount": 3}, {"username": "paulmillr", "commitsCount": 3}, {"username": "seppevs", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "tysonmote", "commitsCount": 3}, {"username": "wejendorp", "commitsCount": 3}, {"username": "xdamman", "commitsCount": 3}, {"username": "1999", "commitsCount": 2}, {"username": "TimothyGu", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "adamgruber", "commitsCount": 2}, {"username": "akrawchyk", "commitsCount": 2}, {"username": "anishkny", "commitsCount": 2}, {"username": "bd82", "commitsCount": 2}, {"username": "bdharris08", "commitsCount": 2}, {"username": "beneidel", "commitsCount": 2}, {"username": "charlierudolph", "commitsCount": 2}, {"username": "dfberry", "commitsCount": 2}, {"username": "giltayar", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ianwremmel", "commitsCount": 2}, {"username": "inukshuk", "commitsCount": 2}, {"username": "jonnyreeves", "commitsCount": 2}, {"username": "jsoref", "commitsCount": 2}, {"username": "kunagpal", "commitsCount": 2}, {"username": "lrowe", "commitsCount": 2}, {"username": "maty21", "commitsCount": 2}, {"username": "mlucool", "commitsCount": 2}, {"username": "ngeor", "commitsCount": 2}, {"username": "not-an-aardvark", "commitsCount": 2}, {"username": "silentcloud", "commitsCount": 2}, {"username": "skeggse", "commitsCount": 2}, {"username": "sul4bh", "commitsCount": 2}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 9}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 24}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 62}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 96}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 155}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}]}, "source": {"files": {"readmeSize": 10210, "testsSize": 657189, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "service": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "shields": "https://img.shields.io/travis/mochajs/mocha/master.svg", "content": "https://img.shields.io/travis/mochajs/mocha/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "service": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "shields": "https://img.shields.io/coveralls/mochajs/mocha.svg", "content": "https://img.shields.io/coveralls/mochajs/mocha.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"js-yaml": {"required": "3.13.1", "stable": "3.14.0", "latest": "3.14.0"}, "yargs": {"required": "13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}, "log-symbols": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "strip-json-comments": {"required": "3.0.1", "stable": "3.1.0", "latest": "3.1.0"}, "yargs-parser": {"required": "13.1.2", "stable": "18.1.3", "latest": "5.0.0-security.0"}, "escape-string-regexp": {"required": "1.0.5", "stable": "4.0.0", "latest": "4.0.0"}, "serialize-javascript": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "chokidar": {"required": "3.3.1", "stable": "3.4.0", "latest": "3.4.0"}, "debug": {"required": "3.2.6", "stable": "4.1.1", "latest": "4.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.816, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 23291, "downloadsCount": 18982471, "downloadsAcceleration": 54474.090962709306, "dependentsCount": 5915}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7917070137684955, "detail": {"quality": 0.9144853340461729, "popularity": 0.8115088006323155, "maintenance": 0.6666666666666666}}}}, {"typescript": {"analyzedAt": "2019-04-12T06:15:16.975Z", "collected": {"metadata": {"name": "typescript", "scope": "unscoped", "version": "3.4.3", "description": "TypeScript is a language for application scale JavaScript development", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript"], "date": "2019-04-09T23:21:12.530Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "typescript", "email": "typescript@microsoft.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/TypeScript.git"}, "links": {"npm": "https://www.npmjs.com/package/typescript", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/TypeScript", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "Apache-2.0", "devDependencies": {"@octokit/rest": "latest", "@types/browserify": "latest", "@types/chai": "latest", "@types/convert-source-map": "latest", "@types/del": "latest", "@types/glob": "latest", "@types/gulp": "^4.0.5", "@types/gulp-concat": "latest", "@types/gulp-newer": "latest", "@types/gulp-rename": "0.0.33", "@types/gulp-sourcemaps": "0.0.32", "@types/jake": "latest", "@types/merge2": "latest", "@types/minimatch": "latest", "@types/minimist": "latest", "@types/mkdirp": "latest", "@types/mocha": "latest", "@types/ms": "latest", "@types/node": "8.5.5", "@types/q": "latest", "@types/source-map-support": "latest", "@types/through2": "latest", "@types/travis-fold": "latest", "@types/xml2js": "^0.4.0", "browser-resolve": "^1.11.2", "browserify": "latest", "chai": "latest", "chalk": "latest", "convert-source-map": "latest", "del": "latest", "fancy-log": "latest", "fs-extra": "^6.0.1", "gulp": "^4.0.0", "gulp-concat": "latest", "gulp-insert": "latest", "gulp-newer": "latest", "gulp-rename": "latest", "gulp-sourcemaps": "latest", "istanbul": "latest", "lodash": "^4.17.11", "merge2": "latest", "minimist": "latest", "mkdirp": "latest", "mocha": "latest", "mocha-fivemat-progress-reporter": "latest", "ms": "latest", "plugin-error": "latest", "pretty-hrtime": "^1.0.3", "prex": "^0.4.3", "q": "latest", "remove-internal": "^2.9.2", "source-map-support": "latest", "through2": "latest", "travis-fold": "latest", "tslint": "latest", "typescript": "next", "vinyl": "latest", "vinyl-sourcemaps-apply": "latest", "xml2js": "^0.4.19"}, "releases": [{"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 28}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 73}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 135}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 272}, {"from": "2017-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 588}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2019-04-11T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 1062633}, {"from": "2019-04-05T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 5945211}, {"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 24753626}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 66611336}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 114604898}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 193806251}], "dependentsCount": 5813, "starsCount": 261}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0.4}, "popularity": {"communityInterest": 261, "downloadsCount": 22203778.666666668, "downloadsAcceleration": 99965.67104261796, "dependentsCount": 5813}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/typescript-z94iskzi7x/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-07-01T07:16:41.028Z"}, "score": {"final": 0.43872194404421483, "detail": {"quality": 0.2965636487477236, "popularity": 0.6659605221520889, "maintenance": 0.3333333333333333}}}}, {"webpack": {"analyzedAt": "2020-06-29T16:32:01.011Z", "collected": {"metadata": {"name": "webpack", "scope": "unscoped", "version": "4.43.0", "description": "Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jsx, es7, css, less, ... and your custom stuff.", "date": "2020-04-21T16:19:14.009Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, "maintainers": [{"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack", "homepage": "https://github.com/webpack/webpack", "repository": "https://github.com/webpack/webpack", "bugs": "https://github.com/webpack/webpack/issues"}, "license": "MIT", "dependencies": {"@webassemblyjs/ast": "1.9.0", "@webassemblyjs/helper-module-context": "1.9.0", "@webassemblyjs/wasm-edit": "1.9.0", "@webassemblyjs/wasm-parser": "1.9.0", "acorn": "^6.4.1", "ajv": "^6.10.2", "ajv-keywords": "^3.4.1", "chrome-trace-event": "^1.0.2", "enhanced-resolve": "^4.1.0", "eslint-scope": "^4.0.3", "json-parse-better-errors": "^1.0.2", "loader-runner": "^2.4.0", "loader-utils": "^1.2.3", "memory-fs": "^0.4.1", "micromatch": "^3.1.10", "mkdirp": "^0.5.3", "neo-async": "^2.6.1", "node-libs-browser": "^2.2.1", "schema-utils": "^1.0.0", "tapable": "^1.1.3", "terser-webpack-plugin": "^1.4.3", "watchpack": "^1.6.1", "webpack-sources": "^1.4.1"}, "devDependencies": {"@babel/core": "^7.7.2", "@types/node": "^10.12.21", "@types/tapable": "^1.0.1", "@types/webpack-sources": "^0.1.4", "@yarnpkg/lockfile": "^1.1.0", "babel-loader": "^8.0.6", "benchmark": "^2.1.1", "bundle-loader": "~0.5.0", "coffee-loader": "^0.9.0", "coffeescript": "^2.3.2", "coveralls": "^3.0.2", "css-loader": "^2.1.0", "es6-promise-polyfill": "^1.1.1", "eslint": "^5.8.0", "eslint-config-prettier": "^4.0.0", "eslint-plugin-jest": "^22.2.2", "eslint-plugin-jsdoc": "^15.3.2", "eslint-plugin-node": "^8.0.0", "eslint-plugin-prettier": "^3.0.0", "express": "~4.16.4", "file-loader": "^3.0.1", "glob": "^7.1.3", "husky": "^1.1.3", "i18n-webpack-plugin": "^1.0.0", "istanbul": "^0.4.5", "jest": "^24.9.0", "jest-junit": "^8.0.0", "json-loader": "^0.5.7", "json-schema-to-typescript": "^6.0.1", "less": "^3.9.0", "less-loader": "^4.0.3", "lint-staged": "^8.0.4", "lodash": "^4.17.4", "prettier": "^1.14.3", "pug": "^2.0.4", "pug-loader": "^2.4.0", "raw-loader": "^1.0.0", "react": "^16.8.0", "react-dom": "^16.8.0", "rimraf": "^2.6.2", "script-loader": "~0.7.0", "simple-git": "^1.65.0", "strip-ansi": "^5.2.0", "style-loader": "^0.23.1", "typescript": "^3.0.0-rc", "url-loader": "^1.1.2", "val-loader": "^1.0.2", "vm-browserify": "~1.1.0", "wast-loader": "^1.5.5", "webpack-dev-middleware": "^3.5.1", "webassembly-feature": "1.3.0", "worker-loader": "^2.0.0", "xxhashjs": "^0.2.1"}, "releases": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 2}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 5}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 11}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 60}, {"from": "2018-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 127}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-28T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 535502}, {"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 9282316}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 44456557}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 143044007}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 269125779}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 481549923}], "dependentsCount": 15869, "starsCount": 551}, "github": {"homepage": "https://webpack.js.org", "starsCount": 54738, "forksCount": 7095, "subscribersCount": 1628, "issues": {"count": 10960, "openCount": 476, "distribution": {"3600": 1237, "10800": 853, "32400": 1094, "97200": 1670, "291600": 1187, "874800": 1054, "2624400": 668, "7873200": 586, "23619600": 1231, "70858800": 1107, "212576400": 273}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 4188}, {"username": "timse", "commitsCount": 329}, {"username": "ooflorent", "commitsCount": 269}, {"username": "TheLarkInn", "commitsCount": 207}, {"username": "xtuc", "commitsCount": 110}, {"username": "shubheksha", "commitsCount": 86}, {"username": "niieani", "commitsCount": 84}, {"username": "vankop", "commitsCount": 71}, {"username": "jamesgeorge007", "commitsCount": 68}, {"username": "evilebottnawi", "commitsCount": 64}, {"username": "smelukov", "commitsCount": 63}, {"username": "wizardofhogwarts", "commitsCount": 51}, {"username": "jsoref", "commitsCount": 49}, {"username": "michael-ciniawsky", "commitsCount": 47}, {"username": "mohsen1", "commitsCount": 46}, {"username": "EugeneHlushko", "commitsCount": 45}, {"username": "sendilkumarn", "commitsCount": 38}, {"username": "willmendesneto", "commitsCount": 37}, {"username": "mc-zone", "commitsCount": 29}, {"username": "byzyk", "commitsCount": 26}, {"username": "hiroppy", "commitsCount": 26}, {"username": "Connormiha", "commitsCount": 24}, {"username": "Travmatth", "commitsCount": 24}, {"username": "alistairjcbrown", "commitsCount": 23}, {"username": "gajus", "commitsCount": 23}, {"username": "Janpot", "commitsCount": 22}, {"username": "SpaceK33z", "commitsCount": 21}, {"username": "kennyt", "commitsCount": 20}, {"username": "ljqx", "commitsCount": 20}, {"username": "gribnoysup", "commitsCount": 18}, {"username": "thaiat", "commitsCount": 18}, {"username": "MLoughry", "commitsCount": 17}, {"username": "ScriptedAlchemy", "commitsCount": 16}, {"username": "jhnns", "commitsCount": 16}, {"username": "rrharvey", "commitsCount": 16}, {"username": "snitin315", "commitsCount": 16}, {"username": "dependabot-preview[bot]", "commitsCount": 15}, {"username": "carloscuatin", "commitsCount": 14}, {"username": "goganchic", "commitsCount": 14}, {"username": "einarlove", "commitsCount": 13}, {"username": "evenstensberg", "commitsCount": 12}, {"username": "kingdaro", "commitsCount": 12}, {"username": "ljcrapo", "commitsCount": 12}, {"username": "Legends", "commitsCount": 11}, {"username": "e-cloud", "commitsCount": 11}, {"username": "esbenp", "commitsCount": 11}, {"username": "timneutkens", "commitsCount": 11}, {"username": "yurynix", "commitsCount": 11}, {"username": "chuckdumont", "commitsCount": 10}, {"username": "jbottigliero", "commitsCount": 10}, {"username": "rtsao", "commitsCount": 10}, {"username": "SimenB", "commitsCount": 9}, {"username": "jeffin143", "commitsCount": 9}, {"username": "jharris4", "commitsCount": 9}, {"username": "joeldenning", "commitsCount": 9}, {"username": "pierreneter", "commitsCount": 9}, {"username": "smikula", "commitsCount": 9}, {"username": "KTruong008", "commitsCount": 8}, {"username": "PlayMa256", "commitsCount": 8}, {"username": "acupofspirt", "commitsCount": 8}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 8}, {"username": "DanielRuf", "commitsCount": 7}, {"username": "NaviMarella", "commitsCount": 7}, {"username": "Tom910", "commitsCount": 7}, {"username": "chicoxyzzy", "commitsCount": 7}, {"username": "dtinth", "commitsCount": 7}, {"username": "jescalan", "commitsCount": 7}, {"username": "matthewmeyer", "commitsCount": 7}, {"username": "probablyup", "commitsCount": 7}, {"username": "simon04", "commitsCount": 7}, {"username": "zhaoshengjun", "commitsCount": 7}, {"username": "AndersDJohnson", "commitsCount": 6}, {"username": "ManuelBauer", "commitsCount": 6}, {"username": "MhMadHamster", "commitsCount": 6}, {"username": "Tushkiz", "commitsCount": 6}, {"username": "alberto", "commitsCount": 6}, {"username": "aretecode", "commitsCount": 6}, {"username": "franjohn21", "commitsCount": 6}, {"username": "fscherwi", "commitsCount": 6}, {"username": "ilgonmic", "commitsCount": 6}, {"username": "loganfsmyth", "commitsCount": 6}, {"username": "martynd", "commitsCount": 6}, {"username": "maxwoo-houzz", "commitsCount": 6}, {"username": "mikegreiling", "commitsCount": 6}, {"username": "montogeek", "commitsCount": 6}, {"username": "ritikrishu", "commitsCount": 6}, {"username": "ronanamsterdam", "commitsCount": 6}, {"username": "zastavnitskiy", "commitsCount": 6}, {"username": "FranckFreiburger", "commitsCount": 5}, {"username": "Hypnosphi", "commitsCount": 5}, {"username": "anikethsaha", "commitsCount": 5}, {"username": "bring-shrubbery", "commitsCount": 5}, {"username": "dav-is", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "joshunger", "commitsCount": 5}, {"username": "konojunya", "commitsCount": 5}, {"username": "renatoagds", "commitsCount": 5}, {"username": "ryandrew14", "commitsCount": 5}, {"username": "styfle", "commitsCount": 5}, {"username": "zcfan", "commitsCount": 5}], "commits": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 4}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 103}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 345}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 775}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 1601}], "statuses": [{"context": "codecov/changes/integration", "state": "success"}, {"context": "codecov/changes/basic", "state": "success"}, {"context": "codecov/changes/lintunit", "state": "success"}, {"context": "codecov/project/basic", "state": "success"}, {"context": "codecov/project/integration", "state": "success"}, {"context": "codecov/project/lintunit", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3514530}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"memory-fs": {"required": "^0.4.1", "stable": "0.5.0", "latest": "0.5.0"}, "loader-runner": {"required": "^2.4.0", "stable": "3.1.0", "latest": "3.1.0"}, "eslint-scope": {"required": "^4.0.3", "stable": "5.1.0", "latest": "5.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "micromatch": {"required": "^3.1.10", "stable": "4.0.2", "latest": "4.0.2"}, "terser-webpack-plugin": {"required": "^1.4.3", "stable": "3.0.6", "latest": "3.0.6"}, "acorn": {"required": "^6.4.1", "stable": "7.3.1", "latest": "7.3.1"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 64112, "downloadsCount": 47681335.666666664, "downloadsAcceleration": 84599.68373287673, "dependentsCount": 15869}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.1457365747136914}}, "score": {"final": 0.8361364992802094, "detail": {"quality": 0.7663611899434395, "popularity": 0.9203735089089362, "maintenance": 0.811706897654428}}}}, {"chai": {"analyzedAt": "2020-06-14T17:56:59.894Z", "collected": {"metadata": {"name": "chai", "scope": "unscoped", "version": "4.2.0", "description": "BDD/TDD assertion library for node.js and the browser. Test framework agnostic.", "keywords": ["test", "assertion", "assert", "testing", "chai"], "date": "2018-09-26T12:15:22.143Z", "author": {"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, "publisher": {"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}, "maintainers": [{"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}], "contributors": [{"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com", "url": "http://domenicdenicola.com"}, {"name": "Veselin Todorov", "email": "hi@vesln.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chaijs/chai.git"}, "links": {"npm": "https://www.npmjs.com/package/chai", "homepage": "http://chaijs.com", "repository": "https://github.com/chaijs/chai", "bugs": "https://github.com/chaijs/chai/issues"}, "license": "MIT", "dependencies": {"assertion-error": "^1.1.0", "check-error": "^1.0.2", "deep-eql": "^3.0.1", "get-func-name": "^2.0.0", "pathval": "^1.1.0", "type-detect": "^4.0.5"}, "devDependencies": {"browserify": "^16.0.0", "bump-cli": "^1.1.3", "codecov": "^3.0.0", "istanbul": "^0.4.3", "karma": "^2.0.0", "karma-firefox-launcher": "^1.0.0", "karma-mocha": "^1.0.1", "karma-phantomjs-launcher": "^1.0.0", "karma-sauce-launcher": "^1.2.0", "mocha": "^5.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\">\n  </a>\n  <br>\n  chai\n</h1>\n\n<p align=center>\n  Chai is a BDD / TDD assertion library for <a href=\"http://nodejs.org\">node</a> and the browser that can be delightfully paired with any javascript testing framework.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://github.com/chaijs/chai/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/package/chai\">\n    <img\n      alt=\"node:?\"\n      src=\"https://img.shields.io/badge/node-%3E=4.0-blue.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs.svg\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://www.npmjs.com/packages/chai\">\n    <img\n      alt=\"downloads:?\"\n      src=\"https://img.shields.io/npm/dm/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://travis-ci.org/chaijs/chai\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://codecov.io/gh/chaijs/chai\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/chai\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://opencollective.com/chaijs\">\n    <img\n      alt=\"OpenCollective Backers\"\n      src=\"https://opencollective.com/chaijs/backers/badge.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\nFor more information or to download plugins, view the [documentation](http://chaijs.com).\n\n## What is Chai?\n\nChai is an _assertion library_, similar to Node's built-in `assert`. It makes testing much easier by giving you lots of assertions you can run against your code.\n\n## Installation\n\n### Node.js\n\n`chai` is available on [npm](http://npmjs.org). To install it, type:\n\n    $ npm install chai\n\n### Browsers\n\nYou can also use it within the browser; install via npm and use the `chai.js` file found within the download. For example:\n\n```html\n<script src=\"./node_modules/chai/chai.js\"></script>\n```\n\n## Usage\n\nImport the library in your code, and then pick one of the styles you'd like to use - either `assert`, `expect` or `should`:\n\n```js\nvar chai = require('chai');  \nvar assert = chai.assert;    // Using Assert style\nvar expect = chai.expect;    // Using Expect style\nvar should = chai.should();  // Using Should style\n```\n\n### Pre-Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nrequire('chai/register-assert');  // Using Assert style\nrequire('chai/register-expect');  // Using Expect style\nrequire('chai/register-should');  // Using Should style\n```\n\n### Pre-Native Modules Usage (_as local variables_)\n\n```js\nconst { assert } = require('chai');  // Using Assert style\nconst { expect } = require('chai');  // Using Expect style\nconst { should } = require('chai');  // Using Should style\nshould();  // Modifies `Object.prototype`\n\nconst { expect, use } = require('chai');  // Creates local variables `expect` and `use`; useful for plugin use\n```\n\n### Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nimport 'chai/register-assert';  // Using Assert style\nimport 'chai/register-expect';  // Using Expect style\nimport 'chai/register-should';  // Using Should style\n```\n\n### Native Modules Usage (_local import only_)\n\n```js\nimport { assert } from 'chai';  // Using Assert style\nimport { expect } from 'chai';  // Using Expect style\nimport { should } from 'chai';  // Using Should style\nshould();  // Modifies `Object.prototype`\n```\n\n### Usage with Mocha\n\n```bash\nmocha spec.js -r chai/register-assert  # Using Assert style\nmocha spec.js -r chai/register-expect  # Using Expect style\nmocha spec.js -r chai/register-should  # Using Should style\n```\n\n[Read more about these styles in our docs](http://chaijs.com/guide/styles/).\n\n## Plugins\n\nChai offers a robust Plugin architecture for extending Chai's assertions and interfaces.\n\n- Need a plugin? View the [official plugin list](http://chaijs.com/plugins).\n- Want to build a plugin? Read the [plugin api documentation](http://chaijs.com/guide/plugins/).\n- Have a plugin and want it listed? Simply add the following keywords to your package.json:\n  -  `chai-plugin`\n  -  `browser` if your plugin works in the browser as well as Node.js\n  -  `browser-only` if your plugin does not work with Node.js\n\n### Related Projects\n\n- [chaijs / chai-docs](https://github.com/chaijs/chai-docs): The chaijs.com website source code.\n- [chaijs / assertion-error](https://github.com/chaijs/assertion-error): Custom `Error` constructor thrown upon an assertion failing.\n- [chaijs / deep-eql](https://github.com/chaijs/deep-eql): Improved deep equality testing for Node.js and the browser.\n- [chaijs / type-detect](https://github.com/chaijs/type-detect): Improved typeof detection for Node.js and the browser.\n- [chaijs / check-error](https://github.com/chaijs/check-error): Error comparison and information related utility for Node.js and the browser.\n- [chaijs / loupe](https://github.com/chaijs/loupe): Inspect utility for Node.js and browsers.\n- [chaijs / pathval](https://github.com/chaijs/pathval): Object value retrieval given a string path.\n- [chaijs / get-func-name](https://github.com/chaijs/get-func-name): Utility for getting a function's name for node and the browser.\n\n### Contributing\n\nThank you very much for considering to contribute!\n\nPlease make sure you follow our [Code Of Conduct](https://github.com/chaijs/chai/blob/master/CODE_OF_CONDUCT.md) and we also strongly recommend reading our [Contributing Guide](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md).\n\nHere are a few issues other contributors frequently ran into when opening pull requests:\n\n- Please do not commit changes to the `chai.js` build. We do it once per release.\n- Before pushing your commits, please make sure you [rebase](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md#pull-requests) them.\n\n### Contributors\n\nPlease see the full\n[Contributors Graph](https://github.com/chaijs/chai/graphs/contributors) for our\nlist of contributors.\n\n### Core Contributors\n\nFeel free to reach out to any of the core contributors with your questions or\nconcerns. We will do our best to respond in a timely manner.\n\n[![Jake Luer](https://avatars3.githubusercontent.com/u/58988?v=3&s=50)](https://github.com/logicalparadox)\n[![Veselin Todorov](https://avatars3.githubusercontent.com/u/330048?v=3&s=50)](https://github.com/vesln)\n[![Keith Cirkel](https://avatars3.githubusercontent.com/u/118266?v=3&s=50)](https://github.com/keithamus)\n[![Lucas Fernandes da Costa](https://avatars3.githubusercontent.com/u/6868147?v=3&s=50)](https://github.com/lucasfcosta)\n[![Grant Snodgrass](https://avatars3.githubusercontent.com/u/17260989?v=3&s=50)](https://github.com/meeber)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 180355}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3604157}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14923649}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 45825630}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 83642615}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 156130988}], "dependentsCount": 5314, "starsCount": 316}, "github": {"homepage": "http://chaijs.com", "starsCount": 6858, "forksCount": 622, "subscribersCount": 132, "issues": {"count": 1346, "openCount": 60, "distribution": {"3600": 178, "10800": 109, "32400": 129, "97200": 191, "291600": 116, "874800": 132, "2624400": 124, "7873200": 120, "23619600": 134, "70858800": 96, "212576400": 17}, "isDisabled": false}, "contributors": [{"username": "logicalparadox", "commitsCount": 455}, {"username": "vesln", "commitsCount": 74}, {"username": "meeber", "commitsCount": 70}, {"username": "keithamus", "commitsCount": 52}, {"username": "lucasfcosta", "commitsCount": 52}, {"username": "domenic", "commitsCount": 40}, {"username": "astorije", "commitsCount": 27}, {"username": "vieiralucas", "commitsCount": 22}, {"username": "shvaikalesh", "commitsCount": 18}, {"username": "joshperry", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 11}, {"username": "zetamorph", "commitsCount": 11}, {"username": "Turbo87", "commitsCount": 9}, {"username": "cmpolis", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 8}, {"username": "RubenVerborgh", "commitsCount": 6}, {"username": "abetomo", "commitsCount": 6}, {"username": "brutalcrozt", "commitsCount": 5}, {"username": "jgonera", "commitsCount": 5}, {"username": "joliss", "commitsCount": 5}, {"username": "jsoref", "commitsCount": 5}, {"username": "leider", "commitsCount": 5}, {"username": "scottnonnenberg", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 4}, {"username": "aaronsofaly", "commitsCount": 4}, {"username": "dasilvacontin", "commitsCount": 4}, {"username": "jfirebaugh", "commitsCount": 4}, {"username": "josher19", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "umireon", "commitsCount": 4}, {"username": "Droogans", "commitsCount": 3}, {"username": "andreineculau", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "flaambe", "commitsCount": 3}, {"username": "gregglind", "commitsCount": 3}, {"username": "jasonkarns", "commitsCount": 3}, {"username": "jeffbski", "commitsCount": 3}, {"username": "jkroso", "commitsCount": 3}, {"username": "jurko-gospodnetic", "commitsCount": 3}, {"username": "ljharb", "commitsCount": 3}, {"username": "matthewlucock", "commitsCount": 3}, {"username": "piamancini", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "voliva", "commitsCount": 3}, {"username": "Alhadis", "commitsCount": 2}, {"username": "Bartvds", "commitsCount": 2}, {"username": "cezarykluczynski", "commitsCount": 2}, {"username": "eouw0o83hf", "commitsCount": 2}, {"username": "eshao", "commitsCount": 2}, {"username": "kkirsche", "commitsCount": 2}, {"username": "matthew-n", "commitsCount": 2}, {"username": "romario333", "commitsCount": 2}, {"username": "rpgeeganage", "commitsCount": 2}, {"username": "tkazec", "commitsCount": 2}, {"username": "v1adko", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "wyvernzora", "commitsCount": 2}, {"username": "zzen", "commitsCount": 2}, {"username": "ColinEberhardt", "commitsCount": 1}, {"username": "Hpauric", "commitsCount": 1}, {"username": "PauloGoncalvesBH", "commitsCount": 1}, {"username": "Pklong", "commitsCount": 1}, {"username": "Powell-v2", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "StPeng", "commitsCount": 1}, {"username": "andersonaguiar", "commitsCount": 1}, {"username": "aryzing", "commitsCount": 1}, {"username": "asbish", "commitsCount": 1}, {"username": "bdadam", "commitsCount": 1}, {"username": "bmeurer", "commitsCount": 1}, {"username": "callumlocke", "commitsCount": 1}, {"username": "curtisgibby", "commitsCount": 1}, {"username": "dinostheo", "commitsCount": 1}, {"username": "gdelmas", "commitsCount": 1}, {"username": "generalandrew", "commitsCount": 1}, {"username": "giltayar", "commitsCount": 1}, {"username": "hadighattas", "commitsCount": 1}, {"username": "haykam821", "commitsCount": 1}, {"username": "kharandziuk", "commitsCount": 1}, {"username": "kidmillions", "commitsCount": 1}, {"username": "kumarmj", "commitsCount": 1}, {"username": "lizhengnacl", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "piranna", "commitsCount": 1}, {"username": "polomsky", "commitsCount": 1}, {"username": "qbolec", "commitsCount": 1}, {"username": "s-leroux", "commitsCount": 1}, {"username": "s0", "commitsCount": 1}, {"username": "simonewebdesign", "commitsCount": 1}, {"username": "solodynamo", "commitsCount": 1}, {"username": "sophiebits", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tusbar", "commitsCount": 1}, {"username": "unional", "commitsCount": 1}, {"username": "wadie", "commitsCount": 1}, {"username": "yanca018", "commitsCount": 1}, {"username": "zetaben", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7626, "testsSize": 424953, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/chai.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/chai.svg", "content": "https://img.shields.io/npm/dm/chai.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square", "service": "https://api.travis-ci.org/chaijs/chai.svg?branch=master", "shields": "https://img.shields.io/travis/chaijs/chai/master.svg", "content": "https://img.shields.io/travis/chaijs/chai/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square", "service": "https://codecov.io/github/chaijs/chai/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/chaijs/chai.svg", "content": "https://img.shields.io/codecov/c/github/chaijs/chai.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/chaijs/chai.svg?style=flat-square", "service": "https://david-dm.org/chaijs/chai.svg", "shields": "https://img.shields.io/david/chaijs/chai.svg", "content": "https://img.shields.io/david/chaijs/chai.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "coverage": 0.94, "outdatedDependencies": {"deep-eql": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.991, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 8028, "downloadsCount": 15275210, "downloadsAcceleration": 26655.97452435312, "dependentsCount": 5314}, "maintenance": {"releasesFrequency": 0.07397260273972603, "commitsFrequency": 0.7552910958904109, "openIssues": 1, "issuesDistribution": 0.4425492395514394}}, "score": {"final": 0.8027626515279422, "detail": {"quality": 0.9733400672041111, "popularity": 0.739617555254551, "maintenance": 0.7196985343646172}}}}, {"babel-core": {"analyzedAt": "2020-06-27T14:26:34.646Z", "collected": {"metadata": {"name": "babel-core", "scope": "unscoped", "version": "6.26.3", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2018-04-27T09:47:04.101Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-core", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-code-frame": "^6.26.0", "babel-generator": "^6.26.0", "babel-helpers": "^6.24.1", "babel-messages": "^6.23.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "babel-template": "^6.26.0", "babel-traverse": "^6.26.0", "babel-types": "^6.26.0", "babylon": "^6.18.0", "convert-source-map": "^1.5.1", "debug": "^2.6.9", "json5": "^0.5.1", "lodash": "^4.17.4", "minimatch": "^3.0.4", "path-is-absolute": "^1.0.1", "private": "^0.1.8", "slash": "^1.0.0", "source-map": "^0.5.7"}, "devDependencies": {"babel-helper-fixtures": "^6.26.2", "babel-helper-transform-fixture-test-runner": "^6.26.2", "babel-polyfill": "^6.26.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-core\n\n> Babel compiler core.\n\n\n```javascript\nvar babel = require(\"babel-core\");\nimport { transform } from 'babel-core';\nimport * as babel from 'babel-core';\n```\n\nAll transformations will use your local configuration files (.babelrc or in package.json). See [options](#options) to disable it.\n\n## babel.transform(code: string, [options?](#options): Object)\n\nTransforms the passed in `code`. Returning an object with the generated code,\nsource map, and AST.\n\n```js\nbabel.transform(code, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nvar result = babel.transform(\"code();\", options);\nresult.code;\nresult.map;\nresult.ast;\n```\n\n## babel.transformFile(filename: string, [options?](#options): Object, callback: Function)\n\nAsynchronously transforms the entire contents of a file.\n\n```js\nbabel.transformFile(filename, options, callback)\n```\n\n**Example**\n\n```js\nbabel.transformFile(\"filename.js\", options, function (err, result) {\n  result; // => { code, map, ast }\n});\n```\n\n## babel.transformFileSync(filename: string, [options?](#options): Object)\n\nSynchronous version of `babel.transformFile`. Returns the transformed contents of\nthe `filename`.\n\n```js\nbabel.transformFileSync(filename, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nbabel.transformFileSync(\"filename.js\", options).code;\n```\n\n## babel.transformFromAst(ast: Object, code?: string, [options?](#options): Object)\n\nGiven, an [AST](https://astexplorer.net/), transform it.\n\n```js\nconst code = \"if (true) return;\";\nconst ast = babylon.parse(code, { allowReturnOutsideFunction: true });\nconst { code, map, ast } = babel.transformFromAst(ast, code, options);\n```\n\n## Options\n\n> #### Babel CLI\n> \n> You can pass these options from the Babel CLI like so:\n> \n> `babel --name=value`\n\nFollowing is a table of the options you can use:\n\n| Option                   | Default              | Description                     |\n| ------------------------ | -------------------- | ------------------------------- |\n| `ast`                    | `true`               | Include the AST in the returned object |\n| `auxiliaryCommentAfter`  | `null`               | Attach a comment after all non-user injected code. |\n| `auxiliaryCommentBefore` | `null`               | Attach a comment before all non-user injected code. |\n| `babelrc`                | `true`               | Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, [use `--no-babelrc` instead](https://babeljs.io/docs/en/babel-cli#ignoring-babelrc). |\n| `code`                   | `true`               | Enable code generation |\n| `comments`               | `true`               | Output comments in generated output. |\n| `compact`                | `\"auto\"`             | Do not include superfluous whitespace characters and line terminators. When set to `\"auto\"` compact is set to `true` on input sizes of >500KB. |\n| `env`                    | `{}`                 | This is an object of keys that represent different environments. For example, you may have: `{ env: { production: { /* specific options */ } } }` which will use those options when the environment variable `BABEL_ENV` is set to `\"production\"`. If `BABEL_ENV` isn't set then `NODE_ENV` will be used, if it's not set then it defaults to `\"development\"` |\n| `extends`                | `null`               | A path to an `.babelrc` file to extend |\n| `filename`               | `\"unknown\"`          | Filename for use in errors etc. |\n| `filenameRelative`       | `(filename)`         | Filename relative to `sourceRoot`. |\n| `generatorOpts`          | `{}`                 | An object containing the options to be passed down to the babel code generator, babel-generator |\n| `getModuleId`            | `null`               | Specify a custom callback to generate a module id with. Called as `getModuleId(moduleName)`. If falsy value is returned then the generated module id is used. |\n| `highlightCode`          | `true`               | ANSI highlight syntax error code frames |\n| `ignore`                 | `null`               | Opposite to the `only` option. `ignore` is disregarded if `only` is specified. |\n| `inputSourceMap`         | `null`               | A source map object that the output source map will be based on. |\n| `minified`               | `false`              | Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping `()` from `new` when safe) |\n| `moduleId`               | `null`               | Specify a custom name for module ids. |\n| `moduleIds`              | `false`              | If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for `common` modules) |\n| `moduleRoot`             | `(sourceRoot)`       | Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions. |\n| `only`                   | `null`               | A [glob](https://github.com/isaacs/minimatch), regex, or mixed array of both, matching paths to **only** compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it's returned verbatim. |\n| `parserOpts`             | `{}`                 | An object containing the options to be passed down to the babel parser, babylon |\n| `plugins`                | `[]`                 | List of [plugins](https://babeljs.io/docs/en/plugins) to load and use. |\n| `presets`                | `[]`                 | List of [presets](https://babeljs.io/docs/en/plugins#presets) (a set of plugins) to load and use. |\n| `retainLines`            | `false`              | Retain line numbers. This will lead to wacky code but is handy for scenarios where you can't use source maps. (**NOTE:** This will not retain the columns) |\n| `resolveModuleSource`    | `null`               | Resolve a module source ie. `import \"SOURCE\";` to a custom value. Called as `resolveModuleSource(source, filename)`. |\n| `shouldPrintComment`     | `null`               | An optional callback that controls whether a comment should be output or not. Called as `shouldPrintComment(commentContents)`. **NOTE:** This overrides the `comment` option when used. |\n| `sourceFileName`         | `(filenameRelative)` | Set `sources[0]` on returned source map. |\n| `sourceMaps`             | `false`              | If truthy, adds a `map` property to returned output. If set to `\"inline\"`, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to `\"both\"` then a `map` property is returned as well as a source map comment appended. **This does not emit sourcemap files by itself!** To have sourcemaps emitted using the CLI, you must pass it the `--source-maps` option. |\n| `sourceMapTarget`        | `(filenameRelative)` | Set `file` on returned source map. |\n| `sourceRoot`             | `(moduleRoot)`       | The root from which all sources are relative. |\n| `sourceType`             | `\"module\"`           | Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\". |\n| `wrapPluginVisitorMethod`| `null`               | An optional callback that can be used to wrap visitor methods. **NOTE:** This is useful for things like introspection, and not really needed for implementing anything. Called as `wrapPluginVisitorMethod(pluginAlias, visitorType, callback)`."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 897598}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4540333}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 23315197}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 74227455}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 146263582}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 296343081}], "dependentsCount": 9684, "starsCount": 149}, "github": {"homepage": "https://babel.dev", "starsCount": 36884, "forksCount": 4345, "subscribersCount": 863, "issues": {"count": 11667, "openCount": 796, "distribution": {"3600": 2465, "10800": 920, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1008, "2624400": 844, "7873200": 838, "23619600": 850, "70858800": 1090, "212576400": 275}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 481}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 200}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 32}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 151}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 381}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 800}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8026, "testsSize": 12417762, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "json5": {"required": "^0.5.1", "stable": "2.1.3", "latest": "2.1.3"}, "debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "source-map": {"required": "^0.5.7", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 42340, "downloadsCount": 24742485, "downloadsAcceleration": -8512.253805175074, "dependentsCount": 9684}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23764412920182798}}, "score": {"final": 0.7391184994691745, "detail": {"quality": 0.9252009260476962, "popularity": 0.7501758651555134, "maintenance": 0.5685619110012458}}}}, {"react": {"analyzedAt": "2020-07-01T14:28:44.297Z", "collected": {"metadata": {"name": "react", "scope": "unscoped", "version": "16.13.1", "description": "React is a JavaScript library for building user interfaces.", "keywords": ["react"], "date": "2020-03-19T19:53:13.309Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react"}, "links": {"npm": "https://www.npmjs.com/package/react", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2"}, "releases": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 5}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 27}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 66}, {"from": "2018-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 124}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-30T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1499597}, {"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 7707598}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 32524936}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 100543764}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 190360532}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 337990424}], "dependentsCount": 41602, "starsCount": 754}, "github": {"homepage": "https://reactjs.org", "starsCount": 151317, "forksCount": 29550, "subscribersCount": 6659, "issues": {"count": 19003, "openCount": 615, "distribution": {"3600": 3839, "10800": 1835, "32400": 1879, "97200": 2359, "291600": 1812, "874800": 1677, "2624400": 1364, "7873200": 1236, "23619600": 1440, "70858800": 1203, "212576400": 359}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1385}, {"username": "bvaughn", "commitsCount": 1220}, {"username": "sophiebits", "commitsCount": 875}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 700}, {"username": "acdlite", "commitsCount": 692}, {"username": "trueadm", "commitsCount": 393}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 56}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 28}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "rickhanlonii", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "jddxf", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 8}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 27}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 277}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 617}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1300}], "statuses": [{"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 447753, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.679, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 188380, "downloadsCount": 33514588, "downloadsAcceleration": 72430.18028919335, "dependentsCount": 41602}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.42747533275912825}}, "score": {"final": 0.938238091102586, "detail": {"quality": 0.9000289216649932, "popularity": 0.9353058515018497, "maintenance": 0.9739210473641162}}}}, {"babel-loader": {"analyzedAt": "2020-06-14T06:24:38.180Z", "collected": {"metadata": {"name": "babel-loader", "scope": "unscoped", "version": "8.1.0", "description": "babel module loader for webpack", "keywords": ["webpack", "loader", "babel", "es6", "transpiler", "module"], "date": "2020-03-20T14:51:00.743Z", "author": {"name": "Luis Couto", "email": "hello@luiscouto.pt"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-loader", "homepage": "https://github.com/babel/babel-loader", "repository": "https://github.com/babel/babel-loader", "bugs": "https://github.com/babel/babel-loader/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^2.1.0", "loader-utils": "^1.4.0", "mkdirp": "^0.5.3", "pify": "^4.0.1", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.2.0", "@babel/core": "^7.2.0", "@babel/preset-env": "^7.2.0", "ava": "^2.4.0", "babel-eslint": "^10.0.1", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-react-intl": "^4.1.19", "cross-env": "^6.0.0", "eslint": "^6.5.1", "eslint-config-babel": "^9.0.0", "eslint-config-prettier": "^6.3.0", "eslint-plugin-flowtype": "^4.3.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^3.0.7", "lint-staged": "^9.4.1", "nyc": "^14.1.1", "prettier": "^1.15.3", "react": "^16.0.0", "react-intl": "^3.3.2", "react-intl-webpack-plugin": "^0.3.0", "rimraf": "^3.0.0", "webpack": "^4.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0", "webpack": ">=2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "> This README is for babel-loader v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/babel-loader/tree/7.x) for docs with Babel v6\n\n[![NPM Status](https://img.shields.io/npm/v/babel-loader.svg?style=flat)](https://www.npmjs.com/package/babel-loader)\n[![Build Status](https://travis-ci.org/babel/babel-loader.svg?branch=master)](https://travis-ci.org/babel/babel-loader)\n[![Build Status](https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true)](https://ci.appveyor.com/project/babel/babel-loader/branch/master)\n[![codecov](https://codecov.io/gh/babel/babel-loader/branch/master/graph/badge.svg)](https://codecov.io/gh/babel/babel-loader)\n\n<div align=\"center\">\n  <a href=\"https://github.com/babel/babel\">\n    <img src=\"https://rawgit.com/babel/logo/master/babel.svg\" alt=\"Babel logo\" width=\"200\" height=\"200\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img src=\"https://webpack.js.org/assets/icon-square-big.svg\" alt=\"webpack logo\" width=\"200\" height=\"200\">\n  </a>\n</div>\n\n<h1 align=\"center\">Babel Loader</h1>\n\nThis package allows transpiling JavaScript files using [Babel](https://github.com/babel/babel) and [webpack](https://github.com/webpack/webpack).\n\n**Note**: Issues with the output should be reported on the Babel [Issues](https://github.com/babel/babel/issues) tracker.\n\n<h2 align=\"center\">Install</h2>\n\n> webpack 4.x | babel-loader 8.x | babel 7.x\n\n```bash\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\n```\n\n<h2 align=\"center\">Usage</h2>\n\nwebpack documentation: [Loaders](https://webpack.js.org/loaders/)\n\nWithin your webpack configuration object, you'll need to add the babel-loader to the list of modules, like so:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env']\n        }\n      }\n    }\n  ]\n}\n```\n\n### Options\n\nSee the `babel` [options](https://babeljs.io/docs/en/options).\n\nYou can pass options to the loader by using the [`options`](https://webpack.js.org/configuration/module/#rule-options-rule-query) property:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env'],\n          plugins: ['@babel/plugin-proposal-object-rest-spread']\n        }\n      }\n    }\n  ]\n}\n```\n\nThis loader also supports the following loader-specific option:\n\n* `cacheDirectory`: Default `false`. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to `true` in options (`{cacheDirectory: true}`), the loader will use the default cache directory in `node_modules/.cache/babel-loader` or fallback to the default OS temporary file directory if no `node_modules` folder could be found in any root directory.\n\n* `cacheIdentifier`: Default is a string composed by the `@babel/core`'s version, the `babel-loader`'s version, the contents of `.babelrc` file if it exists, and the value of the environment variable `BABEL_ENV` with a fallback to the `NODE_ENV` environment variable. This can be set to a custom value to force cache busting if the identifier changes.\n\n* `cacheCompression`: Default `true`. When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to `false` -- your project may benefit from this if it transpiles thousands of files.\n\n* `customize`: Default `null`. The path of a module that exports a `custom` callback [like the one that you'd pass to `.custom()`](#customized-loader). Since you already have to make a new file to use this, it is recommended that you instead use `.custom` to create a wrapper loader. Only use this if you _must_ continue using `babel-loader` directly, but still want to customize.\n\n## Troubleshooting\n\n### babel-loader is slow!\n\nMake sure you are transforming as few files as possible. Because you are probably matching `/\\.m?js$/`, you might be transforming the `node_modules` folder or other unwanted source.\n\nTo exclude `node_modules`, see the `exclude` option in the `loaders` config as documented above.\n\nYou can also speed up babel-loader by as much as 2x by using the `cacheDirectory` option. This will cache transformations to the filesystem.\n\n### Babel is injecting helpers into each file and bloating my code!\n\nBabel uses very small helpers for common functions such as `_extend`. By default, this will be added to every file that requires it.\n\nYou can instead require the Babel runtime as a separate module to avoid the duplication.\n\nThe following configuration disables automatic per-file runtime injection in Babel, requiring `@babel/plugin-transform-runtime` instead and making all helper references use it.\n\nSee the [docs](https://babeljs.io/docs/plugins/transform-runtime/) for more information.\n\n**NOTE**: You must run `npm install -D @babel/plugin-transform-runtime` to include this in your project and `@babel/runtime` itself as a dependency with `npm install @babel/runtime`.\n\n```javascript\nrules: [\n  // the 'transform-runtime' plugin tells Babel to\n  // require the runtime instead of inlining it.\n  {\n    test: /\\.m?js$/,\n    exclude: /(node_modules|bower_components)/,\n    use: {\n      loader: 'babel-loader',\n      options: {\n        presets: ['@babel/preset-env'],\n        plugins: ['@babel/plugin-transform-runtime']\n      }\n    }\n  }\n]\n```\n\n#### **NOTE**: transform-runtime & custom polyfills (e.g. Promise library)\n\nSince [@babel/plugin-transform-runtime](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime) includes a polyfill that includes a custom [regenerator-runtime](https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js) and [core-js](https://github.com/zloirock/core-js), the following usual shimming method using `webpack.ProvidePlugin` will not work:\n\n```javascript\n// ...\n        new webpack.ProvidePlugin({\n            'Promise': 'bluebird'\n        }),\n// ...\n```\n\nThe following approach will not work either:\n\n```javascript\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\nvar promise = new Promise;\n```\n\nwhich outputs to (using `runtime`):\n\n```javascript\n'use strict';\n\nvar _Promise = require('@babel/runtime/core-js/promise')['default'];\n\nrequire('@babel/runtime/core-js/promise')['default'] = require('bluebird');\n\nvar promise = new _Promise();\n```\n\nThe previous `Promise` library is referenced and used before it is overridden.\n\nOne approach is to have a \"bootstrap\" step in your application that would first override the default globals before your application:\n\n```javascript\n// bootstrap.js\n\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\n// ...\n\nrequire('./app');\n```\n\n### The Node.js API for `babel` has been moved to `babel-core`.\n\nIf you receive this message, it means that you have the npm package `babel` installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel',\n  }\n```\n\nwebpack then tries to load the `babel` package instead of the `babel-loader`.\n\nTo fix this, you should uninstall the npm package `babel`, as it is deprecated in Babel v6. (Instead, install `@babel/cli` or `@babel/core`.)\nIn the case one of your dependencies is installing `babel` and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel-loader',\n  }\n```\n\n## Customize config based on webpack target\n\nWebpack supports bundling multiple [targets](https://webpack.js.org/concepts/targets/). For cases where you may want different Babel configurations for each target (like `web` _and_ `node`), this loader provides a `target` property via Babel's [caller](https://babeljs.io/docs/en/config-files#apicallercb) API.\n\nFor example, to change the environment targets passed to `@babel/preset-env` based on the webpack target:\n\n```javascript\n// babel.config.js\n\nmodule.exports = api => {\n  return {\n    plugins: [\n      \"@babel/plugin-proposal-nullish-coalescing-operator\",\n      \"@babel/plugin-proposal-optional-chaining\"\n    ],\n    presets: [\n      [\n        \"@babel/preset-env\",\n        {\n          useBuiltIns: \"entry\",\n          // caller.target will be the same as the target option from webpack\n          targets: api.caller(caller => caller && caller.target === \"node\")\n            ? { node: \"current\" }\n            : { chrome: \"58\", ie: \"11\" }\n        }\n      ]\n    ]\n  }\n}\n```\n\n## Customized Loader\n\n`babel-loader` exposes a loader-builder utility that allows users to add custom handling\nof Babel's configuration for each file that it processes.\n\n`.custom` accepts a callback that will be called with the loader's instance of\n`babel` so that tooling can ensure that it using exactly the same `@babel/core`\ninstance as the loader itself.\n\nIn cases where you want to customize without actually having a file to call `.custom`, you\nmay also pass the `customize` option with a string pointing at a file that exports\nyour `custom` callback function.\n\n### Example\n\n```js\n// Export from \"./my-custom-loader.js\" or whatever you want.\nmodule.exports = require(\"babel-loader\").custom(babel => {\n  function myPlugin() {\n    return {\n      visitor: {},\n    };\n  }\n\n  return {\n    // Passed the loader options.\n    customOptions({ opt1, opt2, ...loader }) {\n      return {\n        // Pull out any custom options that the loader might have.\n        custom: { opt1, opt2 },\n\n        // Pass the options back with the two custom options removed.\n        loader,\n      };\n    },\n\n    // Passed Babel's 'PartialConfig' object.\n    config(cfg) {\n      if (cfg.hasFilesystemConfig()) {\n        // Use the normal config\n        return cfg.options;\n      }\n\n      return {\n        ...cfg.options,\n        plugins: [\n          ...(cfg.options.plugins || []),\n\n          // Include a custom plugin in the options.\n          myPlugin,\n        ],\n      };\n    },\n\n    result(result) {\n      return {\n        ...result,\n        code: result.code + \"\\n// Generated by some custom loader\",\n      };\n    },\n  };\n});\n```\n\n```js\n// And in your Webpack config\nmodule.exports = {\n  // ..\n  module: {\n    rules: [{\n      // ...\n      loader: path.join(__dirname, 'my-custom-loader.js'),\n      // ...\n    }]\n  }\n};\n```\n\n### `customOptions(options: Object): { custom: Object, loader: Object }`\n\nGiven the loader's options, split custom options out of `babel-loader`'s\noptions.\n\n\n### `config(cfg: PartialConfig): Object`\n\nGiven Babel's `PartialConfig` object, return the `options` object that should\nbe passed to `babel.transform`.\n\n\n### `result(result: Result): Result`\n\nGiven Babel's result object, allow loaders to make additional tweaks to it.\n\n\n## License\n[MIT](https://couto.mit-license.org/)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 363199}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8337418}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 34678955}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 106350422}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 183673512}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 330703324}], "dependentsCount": 10739, "starsCount": 119}, "github": {"starsCount": 4211, "forksCount": 386, "subscribersCount": 78, "issues": {"count": 834, "openCount": 52, "distribution": {"3600": 148, "10800": 65, "32400": 66, "97200": 66, "291600": 69, "874800": 69, "2624400": 74, "7873200": 71, "23619600": 81, "70858800": 94, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "danez", "commitsCount": 107}, {"username": "Couto", "commitsCount": 86}, {"username": "loganfsmyth", "commitsCount": 26}, {"username": "greenkeeper[bot]", "commitsCount": 25}, {"username": "hzoo", "commitsCount": 16}, {"username": "sebmck", "commitsCount": 14}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 5}, {"username": "existentialism", "commitsCount": 4}, {"username": "STRML", "commitsCount": 3}, {"username": "d3viant0ne", "commitsCount": 3}, {"username": "jupl", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "JLHwung", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "gaearon", "commitsCount": 2}, {"username": "hawkrives", "commitsCount": 2}, {"username": "hiroppy", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "mlegenhausen", "commitsCount": 2}, {"username": "tricknotes", "commitsCount": 2}, {"username": "yuyokk", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "DanielApt", "commitsCount": 1}, {"username": "Delagen", "commitsCount": 1}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "MoOx", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Ognian", "commitsCount": 1}, {"username": "Oliboy50", "commitsCount": 1}, {"username": "PatNeedham", "commitsCount": 1}, {"username": "Rob-ot", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "YonatanKra", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adrienharnay", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "alexander-schranz", "commitsCount": 1}, {"username": "alexturpin", "commitsCount": 1}, {"username": "andreypopp", "commitsCount": 1}, {"username": "anilanar", "commitsCount": 1}, {"username": "bfanger", "commitsCount": 1}, {"username": "bjornstar", "commitsCount": 1}, {"username": "chrisvasz", "commitsCount": 1}, {"username": "creeperyang", "commitsCount": 1}, {"username": "dashed", "commitsCount": 1}, {"username": "davidtheclark", "commitsCount": 1}, {"username": "dferber90", "commitsCount": 1}, {"username": "didoarellano", "commitsCount": 1}, {"username": "eubenesa", "commitsCount": 1}, {"username": "eur00t", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gpbl", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "hantq", "commitsCount": 1}, {"username": "hedgepigdaniel", "commitsCount": 1}, {"username": "iansu", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jagzviruz", "commitsCount": 1}, {"username": "jennings", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "jrios", "commitsCount": 1}, {"username": "jscheid", "commitsCount": 1}, {"username": "koalex", "commitsCount": 1}, {"username": "leonaves", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "lukejagodzinski", "commitsCount": 1}, {"username": "moimael", "commitsCount": 1}, {"username": "nicolo-ribaudo", "commitsCount": 1}, {"username": "nikopavlica", "commitsCount": 1}, {"username": "ogonkov", "commitsCount": 1}, {"username": "philipwalton", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "popuguytheparrot", "commitsCount": 1}, {"username": "privatenumber", "commitsCount": 1}, {"username": "ramasilveyra", "commitsCount": 1}, {"username": "rvgrinsven", "commitsCount": 1}, {"username": "sandofvega", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sidraval", "commitsCount": 1}, {"username": "sohkai", "commitsCount": 1}, {"username": "taion", "commitsCount": 1}, {"username": "thymikee", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "timse", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 17}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 11142, "testsSize": 27135, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-loader.svg?style=flat", "shields": "https://img.shields.io/npm/v/babel-loader.svg", "content": "https://img.shields.io/npm/v/babel-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/babel/babel-loader.svg?branch=master", "service": "https://api.travis-ci.org/babel/babel-loader.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-loader/master.svg", "content": "https://img.shields.io/travis/babel/babel-loader/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master", "shields": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.64, "outdatedDependencies": {"pify": {"required": "^4.0.1", "stable": "5.0.0", "latest": "5.0.0"}, "loader-utils": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "find-cache-dir": {"required": "^2.1.0", "stable": "3.3.1", "latest": "3.3.1"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.946, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4886, "downloadsCount": 35450140.666666664, "downloadsAcceleration": 91075.13961187218, "dependentsCount": 10739}, "maintenance": {"releasesFrequency": 0.6044520547945206, "commitsFrequency": 0.6156164383561644, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7917115194776204, "detail": {"quality": 0.9305566395059038, "popularity": 0.8040415225003457, "maintenance": 0.6603714135735093}}}}, {"jest": {"analyzedAt": "2020-06-23T17:11:28.446Z", "collected": {"metadata": {"name": "jest", "scope": "unscoped", "version": "26.1.0", "description": "Delightful JavaScript Testing.", "keywords": ["ava", "babel", "coverage", "easy", "expect", "facebook", "immersive", "instant", "jasmine", "jest", "jsdom", "mocha", "mocking", "painless", "qunit", "runner", "sandboxed", "snapshot", "tap", "tape", "test", "testing", "typescript", "watch"], "date": "2020-06-23T15:16:03.909Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git"}, "links": {"npm": "https://www.npmjs.com/package/jest", "homepage": "https://jestjs.io/", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/core": "^26.1.0", "import-local": "^3.0.2", "jest-cli": "^26.1.0"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 23}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 24}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 26}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 61}], "readme": "# Jest\n\n\ud83c\udccf Delightful JavaScript Testing\n\n- **\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb Developer Ready**: Complete and ready to set-up JavaScript testing solution. Works out of the box for any React project.\n\n- **\ud83c\udfc3\ud83c\udffd Instant Feedback**: Failed tests run first. Fast interactive mode can switch between running all tests or only test files related to changed files.\n\n- **\ud83d\udcf8 Snapshot Testing**: Jest can [capture snapshots](https://jestjs.io/docs/snapshot-testing.html) of React trees or other serializable values to simplify UI testing.\n\nRead More: https://jestjs.io/"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 6227853}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 30309951}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 93656689}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 166936625}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 291226993}], "dependentsCount": 5658, "starsCount": 91}, "github": {"homepage": "https://jestjs.io", "starsCount": 31480, "forksCount": 4470, "subscribersCount": 527, "issues": {"count": 10149, "openCount": 1108, "distribution": {"3600": 2114, "10800": 934, "32400": 937, "97200": 1307, "291600": 936, "874800": 814, "2624400": 736, "7873200": 739, "23619600": 663, "70858800": 812, "212576400": 157}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 629}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "jeysal", "commitsCount": 55}, {"username": "rubennorte", "commitsCount": 55}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "Connormiha", "commitsCount": 38}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "kenrick95", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 207}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 331}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 588}], "statuses": [{"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 551, "testsSize": 2251281, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 36668, "downloadsCount": 31218896.333333332, "downloadsAcceleration": 85498.26230974123, "dependentsCount": 5658}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.41009684640616173}}, "score": {"final": 0.9229637631154317, "detail": {"quality": 0.9487843908839052, "popularity": 0.8539169337998949, "maintenance": 0.969878625772277}}}}, {"lodash": {"analyzedAt": "2020-06-26T20:59:44.601Z", "collected": {"metadata": {"name": "lodash", "scope": "unscoped", "version": "4.17.15", "description": "Lodash modular utilities.", "keywords": ["modules", "stdlib", "util"], "date": "2019-07-19T02:28:46.584Z", "author": {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "username": "jdalton"}, "publisher": {"username": "jdalton", "email": "john.david.dalton@gmail.com"}, "maintainers": [{"username": "jdalton", "email": "john.david.dalton@gmail.com"}, {"username": "mathias", "email": "mathias@qiwi.be"}], "contributors": [{"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Mathias Bynens", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/lodash/lodash.git"}, "links": {"npm": "https://www.npmjs.com/package/lodash", "homepage": "https://lodash.com/", "repository": "https://github.com/lodash/lodash", "bugs": "https://github.com/lodash/lodash/issues"}, "license": "MIT", "devDependencies": {"async": "^2.1.4", "benchmark": "^2.1.3", "chalk": "^1.1.3", "cheerio": "^0.22.0", "codecov.io": "~0.1.6", "coveralls": "^2.11.15", "curl-amd": "~0.8.12", "docdown": "~0.7.2", "dojo": "^1.12.1", "ecstatic": "^2.2.2", "eslint": "^6.2.0", "eslint-plugin-import": "^2.18.2", "esm": "^3.1.3", "fs-extra": "~1.0.0", "glob": "^7.1.1", "istanbul": "0.4.5", "jquery": "^3.4.1", "lodash": "4.17.11", "lodash-doc-globals": "^0.1.1", "markdown-doctest": "^0.9.1", "mocha": "^5.2.0", "optional-dev-dependency": "^2.0.0", "platform": "^1.3.3", "qunit-extras": "^3.0.0", "qunitjs": "^2.1.0", "request": "^2.79.0", "requirejs": "^2.3.2", "sauce-tunnel": "^2.5.0", "uglify-js": "2.7.5", "webpack": "^1.14.0"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available."}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4863595}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 21777227}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 111803197}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 341866516}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 675547728}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1322948506}], "dependentsCount": 82036, "starsCount": 1499}, "github": {"homepage": "https://lodash.com/", "starsCount": 45353, "forksCount": 5010, "subscribersCount": 868, "issues": {"count": 4816, "openCount": 135, "distribution": {"3600": 2144, "10800": 848, "32400": 950, "97200": 312, "291600": 205, "874800": 139, "2624400": 69, "7873200": 66, "23619600": 71, "70858800": 11, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jdalton", "commitsCount": 6643}, {"username": "jashkenas", "commitsCount": 314}, {"username": "falsyvalues", "commitsCount": 77}, {"username": "greenkeeperio-bot", "commitsCount": 46}, {"username": "bnjmnt4n", "commitsCount": 39}, {"username": "blikblum", "commitsCount": 38}, {"username": "ratbeard", "commitsCount": 22}, {"username": "ryantenney", "commitsCount": 22}, {"username": "braddunbar", "commitsCount": 21}, {"username": "megawac", "commitsCount": 19}, {"username": "jfmengels", "commitsCount": 18}, {"username": "mathiasbynens", "commitsCount": 10}, {"username": "octatone", "commitsCount": 9}, {"username": "phated", "commitsCount": 8}, {"username": "iamnoah", "commitsCount": 7}, {"username": "jridgewell", "commitsCount": 7}, {"username": "michaelficarra", "commitsCount": 7}, {"username": "samuelclay", "commitsCount": 7}, {"username": "rheh", "commitsCount": 6}, {"username": "AdamCraven", "commitsCount": 5}, {"username": "FilipZawada", "commitsCount": 5}, {"username": "danallison", "commitsCount": 5}, {"username": "danheberden", "commitsCount": 5}, {"username": "octref", "commitsCount": 5}, {"username": "pimterry", "commitsCount": 5}, {"username": "billyjanitsch", "commitsCount": 4}, {"username": "dr-skot", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "shinuza", "commitsCount": 4}, {"username": "tomByrer", "commitsCount": 4}, {"username": "younesfkihi", "commitsCount": 4}, {"username": "102", "commitsCount": 3}, {"username": "aretecode", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "craigmichaelmartin", "commitsCount": 3}, {"username": "danjm", "commitsCount": 3}, {"username": "jamiebuilds", "commitsCount": 3}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "kishanov", "commitsCount": 3}, {"username": "lifesinger", "commitsCount": 3}, {"username": "moonformeli", "commitsCount": 3}, {"username": "rfletcher", "commitsCount": 3}, {"username": "Delapouite", "commitsCount": 2}, {"username": "DmitryBaranovskiy", "commitsCount": 2}, {"username": "JeffAMcGee", "commitsCount": 2}, {"username": "Keith-CY", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "alanhogan", "commitsCount": 2}, {"username": "alireza-mh", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "beaugunderson", "commitsCount": 2}, {"username": "bjh", "commitsCount": 2}, {"username": "brianhaveri", "commitsCount": 2}, {"username": "chaoflow", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "gu-xionghong", "commitsCount": 2}, {"username": "h7lin", "commitsCount": 2}, {"username": "islemaster", "commitsCount": 2}, {"username": "jayphelps", "commitsCount": 2}, {"username": "jpiccari", "commitsCount": 2}, {"username": "jrburke", "commitsCount": 2}, {"username": "kevinji", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 2}, {"username": "malclocke", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "maw", "commitsCount": 2}, {"username": "mcmire", "commitsCount": 2}, {"username": "saravyas", "commitsCount": 2}, {"username": "steelsojka", "commitsCount": 2}, {"username": "terinjokes", "commitsCount": 2}, {"username": "think2011", "commitsCount": 2}, {"username": "timmywil", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "yuchi", "commitsCount": 2}, {"username": "yuxino", "commitsCount": 2}, {"username": "43081j", "commitsCount": 1}, {"username": "Jack-Works", "commitsCount": 1}, {"username": "Mohit21GoJs", "commitsCount": 1}, {"username": "RajuPedda", "commitsCount": 1}, {"username": "abdullahtariq1171", "commitsCount": 1}, {"username": "anatoliy8493", "commitsCount": 1}, {"username": "asilinwei", "commitsCount": 1}, {"username": "camjc", "commitsCount": 1}, {"username": "carbureted", "commitsCount": 1}, {"username": "cooperka", "commitsCount": 1}, {"username": "dracos", "commitsCount": 1}, {"username": "dwelle", "commitsCount": 1}, {"username": "dwesty17", "commitsCount": 1}, {"username": "fs-projects", "commitsCount": 1}, {"username": "futurist", "commitsCount": 1}, {"username": "gwwar", "commitsCount": 1}, {"username": "jacob87o2", "commitsCount": 1}, {"username": "lirantal", "commitsCount": 1}, {"username": "lvzhenbang", "commitsCount": 1}, {"username": "niexias", "commitsCount": 1}, {"username": "phapdinh", "commitsCount": 1}, {"username": "prog1dev", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tkrugg", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 42}]}, "source": {"files": {"readmeSize": 3208, "testsSize": 701226, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 0.33}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6495, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 52830, "downloadsCount": 113955505.33333333, "downloadsAcceleration": 57695.81426940637, "dependentsCount": 82036}, "maintenance": {"releasesFrequency": 0.25890410958904114, "commitsFrequency": 0.7282705479452054, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.9312210877482308, "detail": {"quality": 0.9394630038766539, "popularity": 0.9495414150364425, "maintenance": 0.9058362609213706}}}}, {"babel-eslint": {"analyzedAt": "2020-05-05T01:52:29.234Z", "collected": {"metadata": {"name": "babel-eslint", "scope": "unscoped", "version": "10.1.0", "description": "Custom parser for ESLint", "date": "2020-02-26T00:13:23.677Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jameshenry", "email": "npm@jameshenry.email"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "monastic.panic", "email": "monastic.panic@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "sebmck", "email": "npm@sebastian.barretomckenzie.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-eslint", "homepage": "https://github.com/babel/babel-eslint", "repository": "https://github.com/babel/babel-eslint", "bugs": "https://github.com/babel/babel-eslint/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "@babel/parser": "^7.7.0", "@babel/traverse": "^7.7.0", "@babel/types": "^7.7.0", "eslint-visitor-keys": "^1.0.0", "resolve": "^1.12.0"}, "devDependencies": {"babel-eslint": "^8.2.6", "dedent": "^0.7.0", "eslint": "^5.6.0", "eslint-config-babel": "^7.0.1", "eslint-plugin-flowtype": "^2.30.3", "eslint-plugin-import": "^2.14.0", "eslint-plugin-prettier": "^2.1.2", "espree": "^3.5.2", "husky": "^1.0.0-rc.13", "lint-staged": "^7.2.2", "mocha": "^5.0.1", "prettier": "^1.4.4"}, "peerDependencies": {"eslint": ">= 4.12.1"}, "releases": [{"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 4}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 6}, {"from": "2018-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# babel-eslint [![npm](https://img.shields.io/npm/v/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint) [![travis](https://img.shields.io/travis/babel/babel-eslint/master.svg)](https://travis-ci.org/babel/babel-eslint) [![npm-downloads](https://img.shields.io/npm/dm/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint)\n\n**babel-eslint** allows you to lint **ALL** valid Babel code with the fantastic\n[ESLint](https://github.com/eslint/eslint).\n\n### Why Use babel-eslint\n\nYou only need to use babel-eslint if you are using types (Flow) or experimental features not supported in ESLint itself yet. Otherwise try the default parser (you don't have to use it just because you are using Babel).\n\n---\n\n> If there is an issue, first check if it can be reproduced with the regular parser or with the latest versions of `eslint` and `babel-eslint`!\n\nFor questions and support please visit the [`#discussion`](https://babeljs.slack.com/messages/discussion/) babel slack channel (sign up [here](https://github.com/babel/notes/issues/38)) or eslint [gitter](https://gitter.im/eslint/eslint)!\n\n> Note that the `ecmaFeatures` config property may still be required for ESLint to work properly with features not in ECMAScript 5 by default. Examples are `globalReturn` and `modules`).\n\n## Known Issues\n\nFlow:\n> Check out [eslint-plugin-flowtype](https://github.com/gajus/eslint-plugin-flowtype): An `eslint` plugin that makes flow type annotations global variables and marks declarations as used. Solves the problem of false positives with `no-undef` and `no-unused-vars`.\n- `no-undef` for global flow types: `ReactElement`, `ReactClass` [#130](https://github.com/babel/babel-eslint/issues/130#issuecomment-111215076)\n  - Workaround: define types as globals in `.eslintrc` or define types and import them `import type ReactElement from './types'`\n- `no-unused-vars/no-undef` with Flow declarations (`declare module A {}`) [#132](https://github.com/babel/babel-eslint/issues/132#issuecomment-112815926)\n\nModules/strict mode\n- `no-unused-vars: [2, {vars: local}]` [#136](https://github.com/babel/babel-eslint/issues/136)\n\nPlease check out [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react) for React/JSX issues\n- `no-unused-vars` with jsx\n\nPlease check out [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) for other issues\n\n## How does it work?\n\nESLint allows custom parsers. This is great but some of the syntax nodes that Babel supports\naren't supported by ESLint. When using this plugin, ESLint is monkeypatched and your code is\ntransformed into code that ESLint can understand. All location info such as line numbers,\ncolumns is also retained so you can track down errors with ease.\n\nBasically `babel-eslint` exports an [`index.js`](/index.js) that a linter can use.\nIt just needs to export a `parse` method that takes in a string of code and outputs an AST.\n\n## Usage\n\n### Supported ESLint versions\n\nESLint | babel-eslint\n------------ | -------------\n4.x | >= 6.x\n3.x | >= 6.x\n2.x | >= 6.x\n1.x | >= 5.x\n\n### Install\n\nEnsure that you have substituted the correct version lock for `eslint` and `babel-eslint` into this command:\n\n```sh\n$ npm install eslint@4.x babel-eslint@8 --save-dev\n# or\n$ yarn add eslint@4.x babel-eslint@8 -D\n```\n\n### Setup\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    \"strict\": 0\n  }\n}\n```\n\nCheck out the [ESLint docs](http://eslint.org/docs/rules/) for all possible rules.\n\n### Configuration\n\n- `sourceType` can be set to `'module'`(default) or `'script'` if your code isn't using ECMAScript modules.\n- `allowImportExportEverywhere` (default `false`) can be set to `true` to allow import and export declarations to appear anywhere a statement is allowed if your build environment supports that. Otherwise import and export declarations can only appear at a program's top level.\n- `codeFrame` (default `true`) can be set to `false` to disable the code frame in the reporter. This is useful since some eslint formatters don't play well with it.\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"allowImportExportEverywhere\": false,\n    \"codeFrame\": true\n  }\n}\n```\n\n### Run\n\n```sh\n$ eslint your-files-here\n```"}, "npm": {"downloads": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 1064340}, {"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5887517}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 25189796}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 73192669}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 127732226}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 239659761}], "dependentsCount": 7671, "starsCount": 75}, "github": {"homepage": "https://github.com/babel/babel-eslint/issues/88", "starsCount": 2916, "forksCount": 220, "subscribersCount": 57, "issues": {"count": 820, "openCount": 108, "distribution": {"3600": 149, "10800": 48, "32400": 65, "97200": 83, "291600": 68, "874800": 70, "2624400": 76, "7873200": 81, "23619600": 67, "70858800": 76, "212576400": 37}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 222}, {"username": "sebmck", "commitsCount": 66}, {"username": "danez", "commitsCount": 30}, {"username": "kaicataldo", "commitsCount": 17}, {"username": "zertosh", "commitsCount": 17}, {"username": "existentialism", "commitsCount": 16}, {"username": "mysticatea", "commitsCount": 9}, {"username": "BenoitZugmeyer", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 7}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "rubennorte", "commitsCount": 5}, {"username": "fatfisz", "commitsCount": 4}, {"username": "josh", "commitsCount": 4}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "soda0289", "commitsCount": 3}, {"username": "Cellule", "commitsCount": 2}, {"username": "Couto", "commitsCount": 2}, {"username": "bgw", "commitsCount": 2}, {"username": "douglasduteil", "commitsCount": 2}, {"username": "kesne", "commitsCount": 2}, {"username": "leebyron", "commitsCount": 2}, {"username": "Constellation", "commitsCount": 1}, {"username": "Globegitter", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "MethodGrab", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "ahomu", "commitsCount": 1}, {"username": "alexkuz", "commitsCount": 1}, {"username": "aoberoi", "commitsCount": 1}, {"username": "bary12", "commitsCount": 1}, {"username": "borela", "commitsCount": 1}, {"username": "bryanrsmith", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "clemmy", "commitsCount": 1}, {"username": "danharper", "commitsCount": 1}, {"username": "ecbrodie", "commitsCount": 1}, {"username": "edmorley", "commitsCount": 1}, {"username": "emersonlaurentino", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gmaclennan", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "jmurretxactly", "commitsCount": 1}, {"username": "joa", "commitsCount": 1}, {"username": "jony89", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "neverendingqs", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "ota-meshi", "commitsCount": 1}, {"username": "paramaggarwal", "commitsCount": 1}, {"username": "rattrayalex", "commitsCount": 1}, {"username": "rhettlivingston", "commitsCount": 1}, {"username": "skyrpex", "commitsCount": 1}, {"username": "stevenjob", "commitsCount": 1}, {"username": "vaibhavmule", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "viztor", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4261, "testsSize": 69362}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-eslint.svg", "shields": "https://img.shields.io/npm/v/babel-eslint.svg", "content": "https://img.shields.io/npm/v/babel-eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "service": "https://api.travis-ci.org/babel/babel-eslint.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "content": "https://img.shields.io/travis/babel/babel-eslint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-eslint.svg", "shields": "https://img.shields.io/npm/dm/babel-eslint.svg", "content": "https://img.shields.io/npm/dm/babel-eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3330, "downloadsCount": 24397556.333333332, "downloadsAcceleration": 59019.793645357684, "dependentsCount": 7671}, "maintenance": {"releasesFrequency": 0.8482876712328767, "commitsFrequency": 0.3890753424657534, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7846220262267618, "detail": {"quality": 0.9681725440576688, "popularity": 0.7533703359570015, "maintenance": 0.6585447012128876}}}}, {"@types/node": {"analyzedAt": "2019-10-30T15:45:53.550Z", "collected": {"metadata": {"name": "@types/node", "scope": "types", "version": "12.12.2", "description": "TypeScript definitions for Node.js", "date": "2019-10-30T15:45:00.019Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Microsoft TypeScript", "url": "https://github.com/Microsoft"}, {"name": "DefinitelyTyped", "url": "https://github.com/DefinitelyTyped"}, {"name": "Alberto Schiabel", "url": "https://github.com/jkomyno"}, {"name": "Alexander T.", "url": "https://github.com/a-tarasyuk"}, {"name": "Alvis HT Tang", "url": "https://github.com/alvis"}, {"name": "Andrew Makarov", "url": "https://github.com/r3nya"}, {"name": "Benjamin Toueg", "url": "https://github.com/btoueg"}, {"name": "Bruno Scheufler", "url": "https://github.com/brunoscheufler"}, {"name": "Chigozirim C.", "url": "https://github.com/smac89"}, {"name": "Christian Vaagland Tellnes", "url": "https://github.com/tellnes"}, {"name": "David Junger", "url": "https://github.com/touffy"}, {"name": "Deividas Bakanas", "url": "https://github.com/DeividasBakanas"}, {"name": "Eugene Y. Q. Shen", "url": "https://github.com/eyqs"}, {"name": "Flarna", "url": "https://github.com/Flarna"}, {"name": "Hannes Magnusson", "url": "https://github.com/Hannes-Magnusson-CK"}, {"name": "Ho\u00e0ng V\u0103n Kh\u1ea3i", "url": "https://github.com/KSXGitHub"}, {"name": "Huw", "url": "https://github.com/hoo29"}, {"name": "Kelvin Jin", "url": "https://github.com/kjin"}, {"name": "Klaus Meinhardt", "url": "https://github.com/ajafff"}, {"name": "Lishude", "url": "https://github.com/islishude"}, {"name": "Mariusz Wiktorczyk", "url": "https://github.com/mwiktorczyk"}, {"name": "Mohsen Azimi", "url": "https://github.com/mohsen1"}, {"name": "Nicolas Even", "url": "https://github.com/n-e"}, {"name": "Nicolas Voigt", "url": "https://github.com/octo-sniffle"}, {"name": "Nikita Galkin", "url": "https://github.com/galkin"}, {"name": "Parambir Singh", "url": "https://github.com/parambirs"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}, {"name": "Simon Schick", "url": "https://github.com/SimonSchick"}, {"name": "Thomas den Hollander", "url": "https://github.com/ThomasdenH"}, {"name": "Wilco Bakker", "url": "https://github.com/WilcoBakker"}, {"name": "wwwy3y3", "url": "https://github.com/wwwy3y3"}, {"name": "Zane Hannan AU", "url": "https://github.com/ZaneHannanAU"}, {"name": "Samuel Ainsworth", "url": "https://github.com/samuela"}, {"name": "Kyle Uehlein", "url": "https://github.com/kuehlein"}, {"name": "Jordi Oliveras Rovira", "url": "https://github.com/j-oliveras"}, {"name": "Thanik Bhongbhibhat", "url": "https://github.com/bhongy"}, {"name": "Marcin Kopacz", "url": "https://github.com/chyzwar"}, {"name": "Trivikram Kamat", "url": "https://github.com/trivikr"}, {"name": "Minh Son Nguyen", "url": "https://github.com/nguymin4"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/node"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fnode", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 27}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 50}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 96}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 212}, {"from": "2017-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 462}], "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Oct 2019 15:44:41 GMT\r\n * Dependencies: none\r\n * Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Ho\u00e0ng V\u0103n Kh\u1ea3i <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Nikita Galkin <https://github.com/galkin>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>, Marcin Kopacz <https://github.com/chyzwar>, Trivikram Kamat <https://github.com/trivikr>, and Minh Son Nguyen <https://github.com/nguymin4>."}, "npm": {"downloads": [{"from": "2019-10-29T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 3322016}, {"from": "2019-10-23T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 17892909}, {"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 74095524}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 209443714}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 391479005}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 656625029}], "dependentsCount": 8111, "starsCount": 22}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 22, "downloadsCount": 69814571.33333333, "downloadsAcceleration": 261697.19918188732, "dependentsCount": 8111}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-node-9knchk0mndn/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-24T10:33:01.003Z"}, "score": {"final": 0.4167585025841909, "detail": {"quality": 0.19891579971391418, "popularity": 0.686905988581, "maintenance": 0.3333333333333333}}}}, {"eslint-plugin-import": {"analyzedAt": "2020-06-27T06:22:07.548Z", "collected": {"metadata": {"name": "eslint-plugin-import", "scope": "unscoped", "version": "2.22.0", "description": "Import with sanity.", "keywords": ["eslint", "eslintplugin", "es6", "jsnext", "modules", "import", "export"], "date": "2020-06-27T06:21:36.457Z", "author": {"name": "Ben Mosher", "email": "me@benmosher.com", "username": "benmosher"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "benmosher", "email": "me@benmosher.com"}, {"username": "jfmengels", "email": "jfm.engels@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/benmosher/eslint-plugin-import.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-import", "homepage": "https://github.com/benmosher/eslint-plugin-import", "repository": "https://github.com/benmosher/eslint-plugin-import", "bugs": "https://github.com/benmosher/eslint-plugin-import/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "array.prototype.flat": "^1.2.3", "contains-path": "^0.1.0", "debug": "^2.6.9", "doctrine": "1.5.0", "eslint-import-resolver-node": "^0.3.3", "eslint-module-utils": "^2.6.0", "has": "^1.0.3", "minimatch": "^3.0.4", "object.values": "^1.1.1", "read-pkg-up": "^2.0.0", "resolve": "^1.17.0", "tsconfig-paths": "^3.9.0"}, "devDependencies": {"@eslint/import-test-order-redirect-scoped": "file:./tests/files/order-redirect-scoped", "@test-scope/some-module": "file:./tests/files/symlinked-module", "@typescript-eslint/parser": "^2.23.0 || ^3.3.0", "array.prototype.flatmap": "^1.2.3", "babel-cli": "^6.26.0", "babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-plugin-istanbul": "^4.1.6", "babel-plugin-module-resolver": "^2.7.1", "babel-preset-es2015-argon": "latest", "babel-preset-flow": "^6.23.0", "babel-register": "^6.26.0", "babylon": "^6.18.0", "chai": "^4.2.0", "coveralls": "^3.0.6", "cross-env": "^4.0.0", "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0", "eslint-import-resolver-node": "file:./resolvers/node", "eslint-import-resolver-typescript": "^1.0.2", "eslint-import-resolver-webpack": "file:./resolvers/webpack", "eslint-import-test-order-redirect": "file:./tests/files/order-redirect", "eslint-module-utils": "file:./utils", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-import": "2.x", "eslint-plugin-json": "^2.1.1", "fs-copy-file-sync": "^1.1.1", "glob": "^7.1.6", "in-publish": "^2.0.1", "linklocal": "^2.8.2", "lodash.isarray": "^4.0.0", "mocha": "^3.5.3", "npm-which": "^3.0.1", "nyc": "^11.9.0", "redux": "^3.7.2", "rimraf": "^2.7.1", "semver": "^6.3.0", "sinon": "^2.4.1", "typescript": "~3.9.5", "typescript-eslint-parser": "^22.0.0"}, "peerDependencies": {"eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 10}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 18}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-import\n\n[![build status](https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master)](https://travis-ci.org/benmosher/eslint-plugin-import)\n[![Coverage Status](https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master)](https://coveralls.io/github/benmosher/eslint-plugin-import?branch=master)\n[![win32 build status](https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true)](https://ci.appveyor.com/project/benmosher/eslint-plugin-import/branch/master)\n[![npm](https://img.shields.io/npm/v/eslint-plugin-import.svg)](https://www.npmjs.com/package/eslint-plugin-import)\n[![npm downloads](https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000)](http://www.npmtrends.com/eslint-plugin-import)\n\nThis plugin intends to support linting of ES2015+ (ES6+) import/export syntax, and prevent issues with misspelling of file paths and import names. All the goodness that the ES2015+ static module syntax intends to provide, marked up in your editor.\n\n**IF YOU ARE USING THIS WITH SUBLIME**: see the [bottom section](#sublimelinter-eslint) for important info.\n\n## Rules\n\n### Static analysis\n\n* Ensure imports point to a file/module that can be resolved. ([`no-unresolved`])\n* Ensure named imports correspond to a named export in the remote file. ([`named`])\n* Ensure a default export is present, given a default import. ([`default`])\n* Ensure imported namespaces contain dereferenced properties as they are dereferenced. ([`namespace`])\n* Restrict which files can be imported in a given folder ([`no-restricted-paths`])\n* Forbid import of modules using absolute paths ([`no-absolute-path`])\n* Forbid `require()` calls with expressions ([`no-dynamic-require`])\n* Prevent importing the submodules of other modules ([`no-internal-modules`])\n* Forbid webpack loader syntax in imports ([`no-webpack-loader-syntax`])\n* Forbid a module from importing itself ([`no-self-import`])\n* Forbid a module from importing a module with a dependency path back to itself ([`no-cycle`])\n* Prevent unnecessary path segments in import and require statements ([`no-useless-path-segments`])\n* Forbid importing modules from parent directories ([`no-relative-parent-imports`])\n\n[`no-unresolved`]: ./docs/rules/no-unresolved.md\n[`named`]: ./docs/rules/named.md\n[`default`]: ./docs/rules/default.md\n[`namespace`]: ./docs/rules/namespace.md\n[`no-restricted-paths`]: ./docs/rules/no-restricted-paths.md\n[`no-absolute-path`]: ./docs/rules/no-absolute-path.md\n[`no-dynamic-require`]: ./docs/rules/no-dynamic-require.md\n[`no-internal-modules`]: ./docs/rules/no-internal-modules.md\n[`no-webpack-loader-syntax`]: ./docs/rules/no-webpack-loader-syntax.md\n[`no-self-import`]: ./docs/rules/no-self-import.md\n[`no-cycle`]: ./docs/rules/no-cycle.md\n[`no-useless-path-segments`]: ./docs/rules/no-useless-path-segments.md\n[`no-relative-parent-imports`]: ./docs/rules/no-relative-parent-imports.md\n\n### Helpful warnings\n\n\n* Report any invalid exports, i.e. re-export of the same name ([`export`])\n* Report use of exported name as identifier of default export ([`no-named-as-default`])\n* Report use of exported name as property of default export ([`no-named-as-default-member`])\n* Report imported names marked with `@deprecated` documentation tag ([`no-deprecated`])\n* Forbid the use of extraneous packages ([`no-extraneous-dependencies`])\n* Forbid the use of mutable exports with `var` or `let`. ([`no-mutable-exports`])\n* Report modules without exports, or exports without matching import in another module ([`no-unused-modules`])\n\n[`export`]: ./docs/rules/export.md\n[`no-named-as-default`]: ./docs/rules/no-named-as-default.md\n[`no-named-as-default-member`]: ./docs/rules/no-named-as-default-member.md\n[`no-deprecated`]: ./docs/rules/no-deprecated.md\n[`no-extraneous-dependencies`]: ./docs/rules/no-extraneous-dependencies.md\n[`no-mutable-exports`]: ./docs/rules/no-mutable-exports.md\n[`no-unused-modules`]: ./docs/rules/no-unused-modules.md\n\n### Module systems\n\n* Report potentially ambiguous parse goal (`script` vs. `module`) ([`unambiguous`])\n* Report CommonJS `require` calls and `module.exports` or `exports.*`. ([`no-commonjs`])\n* Report AMD `require` and `define` calls. ([`no-amd`])\n* No Node.js builtin modules. ([`no-nodejs-modules`])\n\n[`unambiguous`]: ./docs/rules/unambiguous.md\n[`no-commonjs`]: ./docs/rules/no-commonjs.md\n[`no-amd`]: ./docs/rules/no-amd.md\n[`no-nodejs-modules`]: ./docs/rules/no-nodejs-modules.md\n\n\n### Style guide\n\n* Ensure all imports appear before other statements ([`first`])\n* Ensure all exports appear after other statements ([`exports-last`])\n* Report repeated import of the same module in multiple places ([`no-duplicates`])\n* Forbid namespace (a.k.a. \"wildcard\" `*`) imports ([`no-namespace`])\n* Ensure consistent use of file extension within the import path ([`extensions`])\n* Enforce a convention in module import order ([`order`])\n* Enforce a newline after import statements ([`newline-after-import`])\n* Prefer a default export if module exports a single name ([`prefer-default-export`])\n* Limit the maximum number of dependencies a module can have ([`max-dependencies`])\n* Forbid unassigned imports ([`no-unassigned-import`])\n* Forbid named default exports ([`no-named-default`])\n* Forbid default exports ([`no-default-export`])\n* Forbid named exports ([`no-named-export`])\n* Forbid anonymous values as default exports ([`no-anonymous-default-export`])\n* Prefer named exports to be grouped together in a single export declaration ([`group-exports`])\n* Enforce a leading comment with the webpackChunkName for dynamic imports ([`dynamic-import-chunkname`])\n\n[`first`]: ./docs/rules/first.md\n[`exports-last`]: ./docs/rules/exports-last.md\n[`no-duplicates`]: ./docs/rules/no-duplicates.md\n[`no-namespace`]: ./docs/rules/no-namespace.md\n[`extensions`]: ./docs/rules/extensions.md\n[`order`]: ./docs/rules/order.md\n[`newline-after-import`]: ./docs/rules/newline-after-import.md\n[`prefer-default-export`]: ./docs/rules/prefer-default-export.md\n[`max-dependencies`]: ./docs/rules/max-dependencies.md\n[`no-unassigned-import`]: ./docs/rules/no-unassigned-import.md\n[`no-named-default`]: ./docs/rules/no-named-default.md\n[`no-anonymous-default-export`]: ./docs/rules/no-anonymous-default-export.md\n[`group-exports`]: ./docs/rules/group-exports.md\n[`no-default-export`]: ./docs/rules/no-default-export.md\n[`no-named-export`]: ./docs/rules/no-named-export.md\n[`dynamic-import-chunkname`]: ./docs/rules/dynamic-import-chunkname.md\n\n## `eslint-plugin-import` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `eslint-plugin-import` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-import?utm_source=npm-eslint-plugin-import&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install eslint-plugin-import -g\n```\n\nor if you manage ESLint as a dev dependency:\n\n```sh\n# inside your project's working tree\nnpm install eslint-plugin-import --save-dev\n```\n\nAll rules are off by default. However, you may configure them manually\nin your `.eslintrc.(yml|json|js)`, or extend one of the canned configs:\n\n```yaml\n---\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n\n# or configure manually:\nplugins:\n  - import\n\nrules:\n  import/no-unresolved: [2, {commonjs: true, amd: true}]\n  import/named: 2\n  import/namespace: 2\n  import/default: 2\n  import/export: 2\n  # etc...\n```\n\n# TypeScript\n\nYou may use the following shortcut or assemble your own config using the granular settings described below.\n\nMake sure you have installed [`@typescript-eslint/parser`] which is used in the following configuration. Unfortunately NPM does not allow to list optional peer dependencies.\n\n```yaml\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n  - plugin:import/typescript # this line does the trick\n```\n\n[`@typescript-eslint/parser`]: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser\n\n# Resolvers\n\nWith the advent of module bundlers and the current state of modules and module\nsyntax specs, it's not always obvious where `import x from 'module'` should look\nto find the file behind `module`.\n\nUp through v0.10ish, this plugin has directly used substack's [`resolve`] plugin,\nwhich implements Node's import behavior. This works pretty well in most cases.\n\nHowever, webpack allows a number of things in import module source strings that\nNode does not, such as loaders (`import 'file!./whatever'`) and a number of\naliasing schemes, such as [`externals`]: mapping a module id to a global name at\nruntime (allowing some modules to be included more traditionally via script tags).\n\nIn the interest of supporting both of these, v0.11 introduces resolvers.\n\nCurrently [Node] and [webpack] resolution have been implemented, but the\nresolvers are just npm packages, so [third party packages are supported](https://github.com/benmosher/eslint-plugin-import/wiki/Resolvers) (and encouraged!).\n\nYou can reference resolvers in several ways (in order of precedence):\n\n- as a conventional `eslint-import-resolver` name, like `eslint-import-resolver-foo`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  # uses 'eslint-import-resolver-foo':\n  import/resolver: foo\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      foo: { someConfig: value }\n    }\n  }\n}\n```\n\n- with a full npm module name, like `my-awesome-npm-module`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/resolver: 'my-awesome-npm-module'\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      'my-awesome-npm-module': { someConfig: value }\n    }\n  }\n}\n```\n\n- with a filesystem path to resolver, defined in this example as a `computed property` name:\n\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      [path.resolve('../../../my-resolver')]: { someConfig: value }\n    }\n  }\n}\n```\n\nRelative paths will be resolved relative to the source's nearest `package.json` or\nthe process's current working directory if no `package.json` is found.\n\n\n\nIf you are interesting in writing a resolver, see the [spec](./resolvers/README.md) for more details.\n\n[`resolve`]: https://www.npmjs.com/package/resolve\n[`externals`]: http://webpack.github.io/docs/library-and-externals.html\n\n[Node]: https://www.npmjs.com/package/eslint-import-resolver-node\n[webpack]: https://www.npmjs.com/package/eslint-import-resolver-webpack\n\n# Settings\n\nYou may set the following settings in your `.eslintrc`:\n\n#### `import/extensions`\n\nA list of file extensions that will be parsed as modules and inspected for\n`export`s.\n\nThis defaults to `['.js']`, unless you are using the `react` shared config,\nin which case it is specified as `['.js', '.jsx']`.\n\n```js\n\"settings\": {\n  \"import/extensions\": [\n    \".js\",\n    \".jsx\"\n  ]\n}\n```\n\nIf you require more granular extension definitions, you can use:\n\n```js\n\"settings\": {\n  \"import/resolver\": {\n    \"node\": {\n      \"extensions\": [\n        \".js\",\n        \".jsx\"\n      ]\n    }\n  }\n}\n```\n\nNote that this is different from (and likely a subset of) any `import/resolver`\nextensions settings, which may include `.json`, `.coffee`, etc. which will still\nfactor into the `no-unresolved` rule.\n\nAlso, the following `import/ignore` patterns will overrule this list.\n\n#### `import/ignore`\n\nA list of regex strings that, if matched by a path, will\nnot report the matching module if no `export`s are found.\nIn practice, this means rules other than [`no-unresolved`](./docs/rules/no-unresolved.md#ignore) will not report on any\n`import`s with (absolute filesystem) paths matching this pattern.\n\n`no-unresolved` has its own [`ignore`](./docs/rules/no-unresolved.md#ignore) setting.\n\n```yaml\nsettings:\n  import/ignore:\n    - \\.coffee$          # fraught with parse errors\n    - \\.(scss|less|css)$ # can't parse unprocessed CSS modules, either\n```\n\n#### `import/core-modules`\n\nAn array of additional modules to consider as \"core\" modules--modules that should\nbe considered resolved but have no path on the filesystem. Your resolver may\nalready define some of these (for example, the Node resolver knows about `fs` and\n`path`), so you need not redefine those.\n\nFor example, Electron exposes an `electron` module:\n\n```js\nimport 'electron'  // without extra config, will be flagged as unresolved!\n```\n\nthat would otherwise be unresolved. To avoid this, you may provide `electron` as a\ncore module:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/core-modules: [ electron ]\n```\n\nIn Electron's specific case, there is a shared config named `electron`\nthat specifies this for you.\n\nContribution of more such shared configs for other platforms are welcome!\n\n#### `import/external-module-folders`\n\nAn array of folders. Resolved modules only from those folders will be considered as \"external\". By default - `[\"node_modules\"]`. Makes sense if you have configured your path or webpack to handle your internal paths differently and want to consider modules from some folders, for example `bower_components` or `jspm_modules`, as \"external\".\n\nThis option is also useful in a monorepo setup: list here all directories that contain monorepo's packages and they will be treated as external ones no matter which resolver is used.\n\nEach item in this array is either a folder's name, its subpath, or its absolute prefix path:\n\n- `jspm_modules` will match any file or folder named `jspm_modules` or which has a direct or non-direct parent named `jspm_modules`, e.g. `/home/me/project/jspm_modules` or `/home/me/project/jspm_modules/some-pkg/index.js`.\n\n- `packages/core` will match any path that contains these two segments, for example `/home/me/project/packages/core/src/utils.js`.\n\n- `/home/me/project/packages` will only match files and directories inside this directory, and the directory itself.\n\nPlease note that incomplete names are not allowed here so `components` won't match `bower_components` and `packages/ui` won't match `packages/ui-utils` (but will match `packages/ui/utils`).\n\n#### `import/parsers`\n\nA map from parsers to file extension arrays. If a file extension is matched, the\ndependency parser will require and use the map key as the parser instead of the\nconfigured ESLint parser. This is useful if you're inter-op-ing with TypeScript\ndirectly using webpack, for example:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/parsers:\n    @typescript-eslint/parser: [ .ts, .tsx ]\n```\n\nIn this case, [`@typescript-eslint/parser`](https://www.npmjs.com/package/@typescript-eslint/parser)\nmust be installed and require-able from the running `eslint` module's location\n(i.e., install it as a peer of ESLint).\n\nThis is currently only tested with `@typescript-eslint/parser` (and its predecessor,\n`typescript-eslint-parser`) but should theoretically work with any moderately\nESTree-compliant parser.\n\nIt's difficult to say how well various plugin features will be supported, too,\ndepending on how far down the rabbit hole goes. Submit an issue if you find strange\nbehavior beyond here, but steel your heart against the likely outcome of closing\nwith `wontfix`.\n\n\n#### `import/resolver`\n\nSee [resolvers](#resolvers).\n\n#### `import/cache`\n\nSettings for cache behavior. Memoization is used at various levels to avoid the copious amount of `fs.statSync`/module parse calls required to correctly report errors.\n\nFor normal `eslint` console runs, the cache lifetime is irrelevant, as we can strongly assume that files should not be changing during the lifetime of the linter process (and thus, the cache in memory)\n\nFor long-lasting processes, like [`eslint_d`] or [`eslint-loader`], however, it's important that there be some notion of staleness.\n\nIf you never use [`eslint_d`] or [`eslint-loader`], you may set the cache lifetime to `Infinity` and everything should be fine:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: \u221e  # or Infinity\n```\n\nOtherwise, set some integer, and cache entries will be evicted after that many seconds have elapsed:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: 5  # 30 is the default\n```\n\n[`eslint_d`]: https://www.npmjs.com/package/eslint_d\n[`eslint-loader`]: https://www.npmjs.com/package/eslint-loader\n\n#### `import/internal-regex`\n\nA regex for packages should be treated as internal. Useful when you are utilizing a monorepo setup or developing a set of packages that depend on each other.\n\nBy default, any package referenced from [`import/external-module-folders`](#importexternal-module-folders) will be considered as \"external\", including packages in a monorepo like yarn workspace or lerna environment. If you want to mark these packages as \"internal\" this will be useful.\n\nFor example, if your packages in a monorepo are all in `@scope`, you can configure `import/internal-regex` like this\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/internal-regex: ^@scope/\n```\n\n\n## SublimeLinter-eslint\n\nSublimeLinter-eslint introduced a change to support `.eslintignore` files\nwhich altered the way file paths are passed to ESLint when linting during editing.\nThis change sends a relative path instead of the absolute path to the file (as ESLint\nnormally provides), which can make it impossible for this plugin to resolve dependencies\non the filesystem.\n\nThis workaround should no longer be necessary with the release of ESLint 2.0, when\n`.eslintignore` will be updated to work more like a `.gitignore`, which should\nsupport proper ignoring of absolute paths via `--stdin-filename`.\n\nIn the meantime, see [roadhump/SublimeLinter-eslint#58](https://github.com/roadhump/SublimeLinter-eslint/issues/58)\nfor more details and discussion, but essentially, you may find you need to add the following\n`SublimeLinter` config to your Sublime project file:\n\n```json\n{\n    \"folders\":\n    [\n        {\n            \"path\": \"code\"\n        }\n    ],\n    \"SublimeLinter\":\n    {\n        \"linters\":\n        {\n            \"eslint\":\n            {\n                \"chdir\": \"${project}/code\"\n            }\n        }\n    }\n}\n```\n\nNote that `${project}/code` matches the `code` provided at `folders[0].path`.\n\nThe purpose of the `chdir` setting, in this case, is to set the working directory\nfrom which ESLint is executed to be the same as the directory on which SublimeLinter-eslint\nbases the relative path it provides.\n\nSee the SublimeLinter docs on [`chdir`](http://www.sublimelinter.com/en/latest/linter_settings.html#chdir)\nfor more information, in case this does not work with your project.\n\nIf you are not using `.eslintignore`, or don't have a Sublime project file, you can also\ndo the following via a `.sublimelinterrc` file in some ancestor directory of your\ncode:\n\n```json\n{\n  \"linters\": {\n    \"eslint\": {\n      \"args\": [\"--stdin-filename\", \"@\"]\n    }\n  }\n}\n```\n\nI also found that I needed to set `rc_search_limit` to `null`, which removes the file\nhierarchy search limit when looking up the directory tree for `.sublimelinterrc`:\n\nIn Package Settings / SublimeLinter / User Settings:\n```json\n{\n  \"user\": {\n    \"rc_search_limit\": null\n  }\n}\n```\n\nI believe this defaults to `3`, so you may not need to alter it depending on your\nproject folder max depth."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1201169}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6112263}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 30955610}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 92423529}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 167808087}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 287666085}], "dependentsCount": 7670, "starsCount": 48}, "github": {"starsCount": 2610, "forksCount": 886, "subscribersCount": 30, "issues": {"count": 1806, "openCount": 298, "distribution": {"3600": 146, "10800": 89, "32400": 116, "97200": 222, "291600": 154, "874800": 187, "2624400": 180, "7873200": 197, "23619600": 193, "70858800": 177, "212576400": 145}, "isDisabled": false}, "contributors": [{"username": "benmosher", "commitsCount": 835}, {"username": "ljharb", "commitsCount": 130}, {"username": "jfmengels", "commitsCount": 35}, {"username": "greenkeeperio-bot", "commitsCount": 28}, {"username": "rfermann", "commitsCount": 27}, {"username": "golopot", "commitsCount": 18}, {"username": "sompylasar", "commitsCount": 17}, {"username": "graingert", "commitsCount": 12}, {"username": "josh", "commitsCount": 9}, {"username": "le0nik", "commitsCount": 9}, {"username": "sheepsteak", "commitsCount": 9}, {"username": "k15a", "commitsCount": 8}, {"username": "manuth", "commitsCount": 8}, {"username": "christophercurrie", "commitsCount": 7}, {"username": "knpwrs", "commitsCount": 7}, {"username": "Arcanemagus", "commitsCount": 6}, {"username": "lydell", "commitsCount": 6}, {"username": "singles", "commitsCount": 6}, {"username": "byteme980", "commitsCount": 5}, {"username": "futpib", "commitsCount": 5}, {"username": "j-f1", "commitsCount": 5}, {"username": "ljqx", "commitsCount": 5}, {"username": "millerized", "commitsCount": 5}, {"username": "tizmagik", "commitsCount": 5}, {"username": "yp", "commitsCount": 5}, {"username": "bmish", "commitsCount": 4}, {"username": "danny-andrews", "commitsCount": 4}, {"username": "kevin940726", "commitsCount": 4}, {"username": "mplewis", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "zloirock", "commitsCount": 4}, {"username": "1pete", "commitsCount": 3}, {"username": "bradzacher", "commitsCount": 3}, {"username": "gajus", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "lo1tuma", "commitsCount": 3}, {"username": "lukeapage", "commitsCount": 3}, {"username": "preco21", "commitsCount": 3}, {"username": "schmod", "commitsCount": 3}, {"username": "scottnonnenberg", "commitsCount": 3}, {"username": "silvenon", "commitsCount": 3}, {"username": "spencerhakim", "commitsCount": 3}, {"username": "swernerx", "commitsCount": 3}, {"username": "syymza", "commitsCount": 3}, {"username": "timkraut", "commitsCount": 3}, {"username": "AamuLumi", "commitsCount": 2}, {"username": "AdamSelene", "commitsCount": 2}, {"username": "Kiwka", "commitsCount": 2}, {"username": "Mairu", "commitsCount": 2}, {"username": "Satyam", "commitsCount": 2}, {"username": "adjerbetian", "commitsCount": 2}, {"username": "arcanis", "commitsCount": 2}, {"username": "beatrizrezener", "commitsCount": 2}, {"username": "brendo", "commitsCount": 2}, {"username": "briandipalma", "commitsCount": 2}, {"username": "chrislloyd", "commitsCount": 2}, {"username": "daltones", "commitsCount": 2}, {"username": "duncanbeevers", "commitsCount": 2}, {"username": "echenley", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 2}, {"username": "giodamelio", "commitsCount": 2}, {"username": "gmathieu", "commitsCount": 2}, {"username": "isiahmeadows", "commitsCount": 2}, {"username": "jameslnewell", "commitsCount": 2}, {"username": "jeffshaver", "commitsCount": 2}, {"username": "joaovieira", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "julien1619", "commitsCount": 2}, {"username": "justinanastos", "commitsCount": 2}, {"username": "kamalbennani", "commitsCount": 2}, {"username": "kirill-konshin", "commitsCount": 2}, {"username": "kmui2", "commitsCount": 2}, {"username": "laysent", "commitsCount": 2}, {"username": "manovotny", "commitsCount": 2}, {"username": "nevir", "commitsCount": 2}, {"username": "nosnickid", "commitsCount": 2}, {"username": "ntdb", "commitsCount": 2}, {"username": "patrick-steele-idem", "commitsCount": 2}, {"username": "pcorpet", "commitsCount": 2}, {"username": "saschanaz", "commitsCount": 2}, {"username": "sharmilajesupaul", "commitsCount": 2}, {"username": "skozin", "commitsCount": 2}, {"username": "sonicdoe", "commitsCount": 2}, {"username": "spalger", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "tihonove", "commitsCount": 2}, {"username": "toshafed", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "xjamundx", "commitsCount": 2}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "Maxim-Mazurok", "commitsCount": 1}, {"username": "MikeyBeLike", "commitsCount": 1}, {"username": "adamborowski", "commitsCount": 1}, {"username": "barbogast", "commitsCount": 1}, {"username": "be5invis", "commitsCount": 1}, {"username": "fernandopasik", "commitsCount": 1}, {"username": "malykhinvi", "commitsCount": 1}, {"username": "nicolashenry", "commitsCount": 1}, {"username": "noelebrun", "commitsCount": 1}, {"username": "taye", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 10}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 39}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 68}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 114}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 190}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 19447, "testsSize": 428856, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "service": "https://api.travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "shields": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master", "shields": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000", "shields": "https://img.shields.io/npm/dt/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/dt/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"contains-path": {"required": "^0.1.0", "stable": "1.0.0", "latest": "1.0.0"}, "read-pkg-up": {"required": "^2.0.0", "stable": "7.0.1", "latest": "7.0.1"}, "doctrine": {"required": "1.5.0", "stable": "3.0.0", "latest": "3.0.0"}, "debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9095, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 3674, "downloadsCount": 30807843, "downloadsAcceleration": 96967.07402968034, "dependentsCount": 7670}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7829639595055572, "detail": {"quality": 0.9268120363639036, "popularity": 0.7759629007515797, "maintenance": 0.6666666666666666}}}}, {"react-dom": {"analyzedAt": "2020-06-19T18:12:45.351Z", "collected": {"metadata": {"name": "react-dom", "scope": "unscoped", "version": "16.13.1", "description": "React package for working with the DOM.", "keywords": ["react"], "date": "2020-03-19T19:53:23.004Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react-dom"}, "links": {"npm": "https://www.npmjs.com/package/react-dom", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2", "scheduler": "^0.19.1"}, "peerDependencies": {"react": "^16.13.1"}, "releases": [{"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 0}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 5}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 25}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 64}, {"from": "2018-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 125}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1340722}, {"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 7140428}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 30998379}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 94831472}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 168640698}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 303312991}], "dependentsCount": 28246, "starsCount": 214}, "github": {"homepage": "https://reactjs.org", "starsCount": 150746, "forksCount": 29399, "subscribersCount": 6668, "issues": {"count": 18948, "openCount": 642, "distribution": {"3600": 3832, "10800": 1831, "32400": 1872, "97200": 2348, "291600": 1810, "874800": 1675, "2624400": 1369, "7873200": 1219, "23619600": 1437, "70858800": 1197, "212576400": 358}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1382}, {"username": "bvaughn", "commitsCount": 1216}, {"username": "sophiebits", "commitsCount": 874}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 700}, {"username": "acdlite", "commitsCount": 692}, {"username": "trueadm", "commitsCount": 392}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 55}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 28}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "rickhanlonii", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 5}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 42}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 336}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 626}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1322}], "statuses": [{"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_persistent", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_flow", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod_www", "state": "pending"}, {"context": "ci/circleci: yarn_lint", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_build", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_www", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod_www_variant", "state": "pending"}, {"context": "ci/circleci: setup", "state": "success"}, {"context": "ci/circleci: yarn_test", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod_www", "state": "pending"}, {"context": "ci/circleci: yarn_test_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_test_www", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_build", "state": "pending"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1776390, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.5137222222222222, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 187127, "downloadsCount": 31610490.666666668, "downloadsAcceleration": 77045.76872146121, "dependentsCount": 28246}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4280582849715589}}, "score": {"final": 0.9284467357237989, "detail": {"quality": 0.8744502388763594, "popularity": 0.9291285880987417, "maintenance": 0.9740475949323755}}}}, {"babel-cli": {"analyzedAt": "2020-06-23T02:42:54.834Z", "collected": {"metadata": {"name": "babel-cli", "scope": "unscoped", "version": "6.26.0", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2017-08-16T15:54:25.041Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-cli", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-core": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "commander": "^2.11.0", "convert-source-map": "^1.5.0", "fs-readdir-recursive": "^1.0.0", "glob": "^7.1.2", "lodash": "^4.17.4", "output-file-sync": "^1.1.2", "path-is-absolute": "^1.0.1", "slash": "^1.0.0", "source-map": "^0.5.6", "v8flags": "^2.1.1", "chokidar": "^1.6.1"}, "devDependencies": {"babel-helper-fixtures": "^6.26.0"}, "optionalDependencies": {"chokidar": "^1.6.1"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-cli\n\n> Babel command line.\n \nIn addition, various entry point scripts live in the top-level package at `babel-cli/bin`.\n\nThere are some shell-executable utility scripts, `babel-external-helpers.js` and `babel-node.js`, and the main Babel cli script, `babel.js`.\n\n## Install\n\n```sh\nnpm install --save-dev babel-cli\n```\n\n## Usage \n\n```sh\nbabel script.js\n```\n\nFor more in depth documentation see: http://babeljs.io/docs/usage/cli/"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 440504}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 2093216}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 6630270}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 13043145}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 29173234}], "dependentsCount": 3044, "starsCount": 92}, "github": {"homepage": "https://babel.dev", "starsCount": 36859, "forksCount": 4333, "subscribersCount": 867, "issues": {"count": 11653, "openCount": 794, "distribution": {"3600": 2464, "10800": 919, "32400": 1071, "97200": 1242, "291600": 1057, "874800": 1005, "2624400": 851, "7873200": 832, "23619600": 849, "70858800": 1088, "212576400": 275}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 481}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 199}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 3}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 66}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 149}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 395}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 798}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8026, "testsSize": 12368687, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "output-file-sync": {"required": "^1.1.2", "stable": "2.0.1", "latest": "2.0.1"}, "path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "v8flags": {"required": "^2.1.1", "stable": "3.2.0", "latest": "3.2.0"}, "source-map": {"required": "^0.5.6", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "chokidar": {"required": "^1.6.1", "stable": "3.4.0", "latest": "3.4.0"}, "commander": {"required": "^2.11.0", "stable": "5.1.0", "latest": "6.0.0-0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 42250, "downloadsCount": 2210090, "downloadsAcceleration": -4404.38841324201, "dependentsCount": 3044}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2375836089673662}}, "score": {"final": 0.6883625671035501, "detail": {"quality": 0.9252009260476962, "popularity": 0.6052028595223644, "maintenance": 0.5685179670183249}}}}, {"rimraf": {"analyzedAt": "2020-06-27T01:49:53.219Z", "collected": {"metadata": {"name": "rimraf", "scope": "unscoped", "version": "3.0.2", "description": "A deep deletion module for node (like `rm -rf`)", "date": "2020-02-09T06:18:37.504Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/rimraf.git"}, "links": {"npm": "https://www.npmjs.com/package/rimraf", "homepage": "https://github.com/isaacs/rimraf#readme", "repository": "https://github.com/isaacs/rimraf", "bugs": "https://github.com/isaacs/rimraf/issues"}, "license": "ISC", "dependencies": {"glob": "^7.1.3"}, "devDependencies": {"mkdirp": "^0.5.1", "tap": "^12.1.1"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Build Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf) [![Dependency Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf) [![devDependency Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)\n\nThe [UNIX command](http://en.wikipedia.org/wiki/Rm_(Unix)) `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, [opts], callback)`\n\nThe first parameter will be interpreted as a globbing pattern for files. If you\nwant to disable globbing you can do so with `opts.disableGlob` (defaults to\n`false`). This might be handy, for instance, if you have filenames that contain\nglobbing wildcard characters.\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* Windows: `EBUSY` and `ENOTEMPTY` - rimraf will back off a maximum of\n  `opts.maxBusyTries` times before giving up, adding 100ms of wait\n  between each attempt.  The default `maxBusyTries` is 3.\n* `ENOENT` - If the file doesn't exist, rimraf will return\n  successfully, since your desired outcome is already the case.\n* `EMFILE` - Since `readdir` requires opening a file descriptor, it's\n  possible to hit `EMFILE` if too many file descriptors are in use.\n  In the sync case, there's nothing to be done for this.  But in the\n  async case, rimraf will gradually back off with timeouts up to\n  `opts.emfileWait` ms, which defaults to 1000.\n\n## options\n\n* unlink, chmod, stat, lstat, rmdir, readdir,\n  unlinkSync, chmodSync, statSync, lstatSync, rmdirSync, readdirSync\n\n    In order to use a custom file system library, you can override\n    specific fs functions on the options object.\n\n    If any of these functions are present on the options object, then\n    the supplied function will be used instead of the default fs\n    method.\n\n    Sync methods are only relevant for `rimraf.sync()`, of course.\n\n    For example:\n\n    ```javascript\n    var myCustomFS = require('some-custom-fs')\n\n    rimraf('some-thing', myCustomFS, callback)\n    ```\n\n* maxBusyTries\n\n    If an `EBUSY`, `ENOTEMPTY`, or `EPERM` error code is encountered\n    on Windows systems, then rimraf will retry with a linear backoff\n    wait of 100ms longer on each try.  The default maxBusyTries is 3.\n\n    Only relevant for async usage.\n\n* emfileWait\n\n    If an `EMFILE` error is encountered, then rimraf will retry\n    repeatedly with a linear backoff of 1ms longer on each try, until\n    the timeout counter hits this max.  The default limit is 1000.\n\n    If you repeatedly encounter `EMFILE` errors, then consider using\n    [graceful-fs](http://npm.im/graceful-fs) in your program.\n\n    Only relevant for async usage.\n\n* glob\n\n    Set to `false` to disable [glob](http://npm.im/glob) pattern\n    matching.\n\n    Set to an object to pass options to the glob module.  The default\n    glob options are `{ nosort: true, silent: true }`.\n\n    Glob version 6 is used in this module.\n\n    Relevant for both sync and async usage.\n\n* disableGlob\n\n    Set to any non-falsey value to disable globbing entirely.\n    (Equivalent to setting `glob: false`.)\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that's not so good.  Use\nthe async API.  It's better.\n\n## CLI\n\nIf installed with `npm install rimraf -g` it can be used as a global\ncommand `rimraf <path> [<path> ...]` which is useful for cross platform support.\n\n## mkdirp\n\nIf you need to create a directory recursively, check out\n[mkdirp](https://github.com/substack/node-mkdirp)."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5604655}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 28643478}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 144048218}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 420646935}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 757698330}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1235905940}], "dependentsCount": 9486, "starsCount": 320}, "github": {"starsCount": 3816, "forksCount": 213, "subscribersCount": 43, "issues": {"count": 215, "openCount": 55, "distribution": {"3600": 17, "10800": 21, "32400": 11, "97200": 19, "291600": 18, "874800": 9, "2624400": 6, "7873200": 23, "23619600": 28, "70858800": 31, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 154}, {"username": "PeterDaveHello", "commitsCount": 3}, {"username": "yosefd", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "Tidyzq", "commitsCount": 1}, {"username": "aslushnikov", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "cowboy", "commitsCount": 1}, {"username": "jkozera", "commitsCount": 1}, {"username": "josiasmontag", "commitsCount": 1}, {"username": "marr", "commitsCount": 1}, {"username": "mmalecki", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}, {"username": "quetzalcoatl", "commitsCount": 1}, {"username": "ritch", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "tomByrer", "commitsCount": 1}, {"username": "wvl", "commitsCount": 1}, {"username": "zerok", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3600, "testsSize": 10271, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/rimraf.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/rimraf.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/rimraf/master.svg", "content": "https://img.shields.io/travis/isaacs/rimraf/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf.svg", "service": "https://david-dm.org/isaacs/rimraf.svg", "shields": "https://img.shields.io/david/isaacs/rimraf.svg", "content": "https://img.shields.io/david/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "service": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "shields": "https://img.shields.io/david/dev/isaacs/rimraf.svg", "content": "https://img.shields.io/david/dev/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "coverage": 0.73}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.9595, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4414, "downloadsCount": 140215645, "downloadsAcceleration": 559738.772716895, "dependentsCount": 9486}, "maintenance": {"releasesFrequency": 0.7642979452054794, "commitsFrequency": 0.39410958904109594, "openIssues": 0.9069767441860466, "issuesDistribution": 0}}, "score": {"final": 0.8203282022634395, "detail": {"quality": 0.9765198666982468, "popularity": 0.8485459598039049, "maintenance": 0.6582318752074253}}}}, {"babel-preset-es2015": {"analyzedAt": "2020-06-12T08:06:30.193Z", "collected": {"metadata": {"name": "babel-preset-es2015", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all es2015 plugins.", "date": "2017-04-07T15:19:43.605Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-es2015", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.24.1", "babel-plugin-transform-es2015-classes": "^6.24.1", "babel-plugin-transform-es2015-computed-properties": "^6.24.1", "babel-plugin-transform-es2015-destructuring": "^6.22.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.24.1", "babel-plugin-transform-es2015-for-of": "^6.22.0", "babel-plugin-transform-es2015-function-name": "^6.24.1", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.24.1", "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1", "babel-plugin-transform-es2015-modules-systemjs": "^6.24.1", "babel-plugin-transform-es2015-modules-umd": "^6.24.1", "babel-plugin-transform-es2015-object-super": "^6.24.1", "babel-plugin-transform-es2015-parameters": "^6.24.1", "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.24.1", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.22.0", "babel-plugin-transform-es2015-unicode-regex": "^6.24.1", "babel-plugin-transform-regenerator": "^6.24.1"}, "devDependencies": {"babel-helper-transform-fixture-test-runner": "^6.24.1", "babel-helper-plugin-test-runner": "^6.24.1"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 1}], "deprecated": "\ud83d\ude4c  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!", "hasTestScript": true, "readme": "# babel-preset-es2015\n\n> Babel preset for all es2015 plugins.\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-es2015\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"es2015\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets es2015\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"es2015\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable \"spec\" transformations for any plugins in this preset that allow them."}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 169343}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 916623}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4041305}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 12503299}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 24208530}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 51603138}], "dependentsCount": 5333, "starsCount": 84}, "github": {"homepage": "https://babel.dev", "starsCount": 36772, "forksCount": 4311, "subscribersCount": 867, "issues": {"count": 11632, "openCount": 793, "distribution": {"3600": 2464, "10800": 919, "32400": 1067, "97200": 1242, "291600": 1060, "874800": 1009, "2624400": 849, "7873200": 813, "23619600": 847, "70858800": 1091, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 61}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 208}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 416}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 795}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12325222, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.7364999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42133, "downloadsCount": 4167766.3333333335, "downloadsAcceleration": -3388.730136986298, "dependentsCount": 5333}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23995269539214686}}, "score": {"final": 0.6117168933539002, "detail": {"quality": 0.611940592934839, "popularity": 0.6530120239182591, "maintenance": 0.5702300202915939}}}}, {"@babel/core": {"analyzedAt": "2020-06-30T13:41:49.413Z", "collected": {"metadata": {"name": "@babel/core", "scope": "babel", "version": "7.10.4", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2020-06-30T13:13:27.496Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-core"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcore", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.10.4", "@babel/generator": "^7.10.4", "@babel/helper-module-transforms": "^7.10.4", "@babel/helpers": "^7.10.4", "@babel/parser": "^7.10.4", "@babel/template": "^7.10.4", "@babel/traverse": "^7.10.4", "@babel/types": "^7.10.4", "convert-source-map": "^1.7.0", "debug": "^4.1.0", "gensync": "^1.0.0-beta.1", "json5": "^2.1.2", "lodash": "^4.17.13", "resolve": "^1.3.2", "semver": "^5.4.1", "source-map": "^0.5.0"}, "devDependencies": {"@babel/helper-transform-fixture-test-runner": "^7.10.4"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 5}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 11}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 23}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 50}], "readme": "# @babel/core\n\n> Babel compiler core.\n\nSee our website [@babel/core](https://babeljs.io/docs/en/next/babel-core.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20core%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/core\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/core --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3130276}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 17845177}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 71129326}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 211049227}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 386930752}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 626876553}], "dependentsCount": 8500, "starsCount": 3}, "github": {"homepage": "https://babel.dev", "starsCount": 36907, "forksCount": 4352, "subscribersCount": 865, "issues": {"count": 11675, "openCount": 796, "distribution": {"3600": 2467, "10800": 919, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1011, "2624400": 845, "7873200": 837, "23619600": 854, "70858800": 1089, "212576400": 276}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 482}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 201}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 36}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 145}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 385}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 414, "testsSize": 164345, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.4.1", "stable": "7.3.2", "latest": "7.3.2"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 42226, "downloadsCount": 70349742.33333333, "downloadsAcceleration": 271413.2014459665, "dependentsCount": 8500}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2370762220708152}}, "score": {"final": 0.9165289486221377, "detail": {"quality": 0.9482025266717101, "popularity": 0.9172004643125441, "maintenance": 0.8887086517463834}}}}, {"prettier": {"analyzedAt": "2020-06-07T08:21:12.524Z", "collected": {"metadata": {"name": "prettier", "scope": "unscoped", "version": "2.0.5", "description": "Prettier is an opinionated code formatter", "date": "2020-04-21T17:05:57.825Z", "author": {"name": "James Long"}, "publisher": {"username": "thorn0", "email": "georgii.dolzhykov@gmail.com"}, "maintainers": [{"username": "azz", "email": "derflatulator@gmail.com"}, {"username": "duailibe", "email": "lucasds@gmail.com"}, {"username": "ikatyang", "email": "ikatyang@gmail.com"}, {"username": "jlongster", "email": "longster@gmail.com"}, {"username": "suchipi", "email": "me@suchipi.com"}, {"username": "vjeux", "email": "vjeuxx@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/prettier", "homepage": "https://prettier.io", "repository": "https://github.com/prettier/prettier", "bugs": "https://github.com/prettier/prettier/issues"}, "license": "MIT", "dependencies": {"@angular/compiler": "9.1.9", "@babel/code-frame": "7.10.1", "@babel/parser": "7.10.2", "@glimmer/syntax": "0.53.0", "@iarna/toml": "2.2.5", "@typescript-eslint/typescript-estree": "3.1.0", "angular-estree-parser": "2.0.3", "angular-html-parser": "1.7.0", "camelcase": "6.0.0", "chalk": "4.0.0", "ci-info": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "cjk-regex": "2.0.0", "cosmiconfig": "6.0.0", "dashify": "2.0.0", "diff": "4.0.2", "editorconfig": "0.15.3", "editorconfig-to-prettier": "0.1.1", "escape-string-regexp": "4.0.0", "esutils": "2.0.3", "fast-glob": "3.2.2", "find-parent-dir": "0.3.0", "find-project-root": "1.1.1", "flow-parser": "0.126.1", "get-stream": "5.1.0", "globby": "11.0.1", "graphql": "15.0.0", "html-element-attributes": "2.2.1", "html-styles": "1.0.0", "html-tag-names": "1.1.5", "ignore": "4.0.6", "jest-docblock": "26.0.0", "json-stable-stringify": "1.0.1", "leven": "3.1.0", "lines-and-columns": "1.1.6", "linguist-languages": "7.9.0", "lodash": "4.17.15", "mem": "6.1.0", "minimatch": "3.0.4", "minimist": "1.2.5", "n-readlines": "1.0.0", "outdent": "0.7.1", "parse-srcset": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "please-upgrade-node": "3.2.0", "postcss-less": "3.1.4", "postcss-media-query-parser": "0.2.3", "postcss-scss": "2.1.1", "postcss-selector-parser": "2.2.3", "postcss-values-parser": "2.0.1", "regexp-util": "1.2.2", "remark-math": "1.0.6", "remark-parse": "5.0.0", "resolve": "1.17.0", "semver": "7.3.2", "string-width": "4.2.0", "tslib": "1.13.0", "typescript": "3.9.5", "unicode-regex": "3.0.0", "unified": "9.0.0", "vnopts": "1.0.2", "yaml-unist-parser": "1.2.1"}, "devDependencies": {"@babel/core": "7.10.2", "@babel/preset-env": "7.10.2", "@rollup/plugin-alias": "3.1.0", "@rollup/plugin-babel": "5.0.2", "@rollup/plugin-commonjs": "12.0.0", "@rollup/plugin-json": "4.0.3", "@rollup/plugin-node-resolve": "8.0.0", "@rollup/plugin-replace": "2.3.2", "babel-loader": "8.1.0", "benchmark": "2.1.4", "builtin-modules": "3.1.0", "codecov": "3.7.0", "cross-env": "7.0.2", "cspell": "4.0.63", "eslint": "7.1.0", "eslint-config-prettier": "6.11.0", "eslint-formatter-friendly": "7.0.0", "eslint-plugin-import": "2.20.2", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-react": "7.20.0", "eslint-plugin-unicorn": "20.1.0", "execa": "4.0.2", "jest": "26.0.1", "jest-snapshot-serializer-ansi": "1.0.0", "jest-snapshot-serializer-raw": "1.1.0", "jest-watch-typeahead": "0.6.0", "prettier": "2.0.5", "rimraf": "3.0.2", "rollup": "2.13.1", "rollup-plugin-node-globals": "1.4.0", "rollup-plugin-terser": "6.1.0", "shelljs": "0.8.4", "snapshot-diff": "0.8.0", "strip-ansi": "6.0.0", "synchronous-promise": "2.0.13", "tempy": "0.5.0", "terser-webpack-plugin": "3.0.3", "webpack": "4.43.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 30}], "hasSelectiveFiles": true, "readme": "![Prettier Banner](https://raw.githubusercontent.com/prettier/prettier-logo/master/images/prettier-banner-light.png)\n\n<h2 align=\"center\">Opinionated Code Formatter</h2>\n\n<p align=\"center\">\n  <em>\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  </em>\n  <br />\n  <em>\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  </em>\n  <br />\n  <em>\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  </em>\n  <br />\n  <em>\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  </em>\n  <br />\n  <em>\n    <a href=\"https://prettier.io/docs/en/plugins.html\">\n      Your favorite language?\n    </a>\n  </em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3AProd+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Prod?label=Prod&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ADev+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Dev?label=Dev&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ALint+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Lint?label=Lint&style=flat-square\"></a>\n  <a href=\"https://codecov.io/gh/prettier/prettier\">\n    <img alt=\"Codecov Coverage Status\" src=\"https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/acdlite/status/974390255393505280\">\n    <img alt=\"Blazing Fast\" src=\"https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square\"></a>\n  <br/>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"npm version\" src=\"https://img.shields.io/npm/v/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"weekly downloads from npm\" src=\"https://img.shields.io/npm/dw/prettier.svg?style=flat-square\"></a>\n  <a href=\"#badge\">\n    <img alt=\"code style: prettier\" src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\"></a>\n  <a href=\"https://gitter.im/jlongster/prettier\">\n    <img alt=\"Chat on Gitter\" src=\"https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/PrettierCode\">\n    <img alt=\"Follow Prettier on Twitter\" src=\"https://img.shields.io/twitter/follow/prettiercode.svg?label=follow+prettier&style=flat-square\"></a>\n</p>\n\n## Intro\n\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\n\n### Input\n\n<!-- prettier-ignore -->\n```js\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\n```\n\n### Output\n\n```js\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\n```\n\nPrettier can be run [in your editor](http://prettier.io/docs/en/editors.html) on-save, in a [pre-commit hook](https://prettier.io/docs/en/precommit.html), or in [CI environments](https://prettier.io/docs/en/cli.html#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\n---\n\n**[Documentation](https://prettier.io/docs/en/)**\n\n<!-- prettier-ignore -->\n[Install](https://prettier.io/docs/en/install.html) \u00b7\n[Options](https://prettier.io/docs/en/options.html) \u00b7\n[CLI](https://prettier.io/docs/en/cli.html) \u00b7\n[API](https://prettier.io/docs/en/api.html)\n\n**[Playground](https://prettier.io/playground/)**\n\n---\n\n## Badge\n\nShow the world you're using _Prettier_ \u2192 [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\n```md\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 450346}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8908846}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 37274581}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 108918013}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 187419957}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 325686336}], "dependentsCount": 4178, "starsCount": 62}, "github": {"homepage": "https://prettier.io", "starsCount": 36715, "forksCount": 2359, "subscribersCount": 415, "issues": {"count": 8413, "openCount": 700, "distribution": {"3600": 1643, "10800": 928, "32400": 902, "97200": 1153, "291600": 910, "874800": 711, "2624400": 633, "7873200": 485, "23619600": 380, "70858800": 498, "212576400": 170}, "isDisabled": false}, "contributors": [{"username": "vjeux", "commitsCount": 570}, {"username": "ikatyang", "commitsCount": 430}, {"username": "fisker", "commitsCount": 352}, {"username": "duailibe", "commitsCount": 284}, {"username": "azz", "commitsCount": 241}, {"username": "thorn0", "commitsCount": 150}, {"username": "lydell", "commitsCount": 146}, {"username": "jlongster", "commitsCount": 128}, {"username": "evilebottnawi", "commitsCount": 116}, {"username": "josephfrazier", "commitsCount": 92}, {"username": "existentialism", "commitsCount": 80}, {"username": "sosukesuzuki", "commitsCount": 63}, {"username": "j-f1", "commitsCount": 46}, {"username": "lipis", "commitsCount": 46}, {"username": "suchipi", "commitsCount": 35}, {"username": "yamafaktory", "commitsCount": 34}, {"username": "despairblue", "commitsCount": 27}, {"username": "bakkot", "commitsCount": 24}, {"username": "JamesHenry", "commitsCount": 22}, {"username": "rattrayalex", "commitsCount": 22}, {"username": "karl", "commitsCount": 19}, {"username": "dcyriller", "commitsCount": 17}, {"username": "kachkaev", "commitsCount": 17}, {"username": "SimenB", "commitsCount": 14}, {"username": "mitermayer", "commitsCount": 12}, {"username": "bnjmnt4n", "commitsCount": 11}, {"username": "stubailo", "commitsCount": 9}, {"username": "okonet", "commitsCount": 8}, {"username": "rogeliog", "commitsCount": 8}, {"username": "JounQin", "commitsCount": 7}, {"username": "Shinigami92", "commitsCount": 7}, {"username": "ad1992", "commitsCount": 7}, {"username": "hzoo", "commitsCount": 7}, {"username": "sasurau4", "commitsCount": 7}, {"username": "knowbody", "commitsCount": 6}, {"username": "tchak", "commitsCount": 6}, {"username": "thymikee", "commitsCount": 6}, {"username": "Cryrivers", "commitsCount": 5}, {"username": "GavinJoyce", "commitsCount": 5}, {"username": "asottile", "commitsCount": 5}, {"username": "dependabot[bot]", "commitsCount": 5}, {"username": "jackyho112", "commitsCount": 5}, {"username": "karlhorky", "commitsCount": 5}, {"username": "umidbekkarimov", "commitsCount": 5}, {"username": "yangsu", "commitsCount": 5}, {"username": "czosel", "commitsCount": 4}, {"username": "jridgewell", "commitsCount": 4}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "prigara", "commitsCount": 4}, {"username": "rcoedo", "commitsCount": 4}, {"username": "sompylasar", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "voithos", "commitsCount": 4}, {"username": "warrenseine", "commitsCount": 4}, {"username": "BPScott", "commitsCount": 3}, {"username": "CiGit", "commitsCount": 3}, {"username": "Haroenv", "commitsCount": 3}, {"username": "amasad", "commitsCount": 3}, {"username": "bd82", "commitsCount": 3}, {"username": "brainkim", "commitsCount": 3}, {"username": "cola119", "commitsCount": 3}, {"username": "coliff", "commitsCount": 3}, {"username": "danez", "commitsCount": 3}, {"username": "danharper", "commitsCount": 3}, {"username": "darahak", "commitsCount": 3}, {"username": "ericsakmar", "commitsCount": 3}, {"username": "johann-sonntagbauer", "commitsCount": 3}, {"username": "mattleff", "commitsCount": 3}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "ntotten", "commitsCount": 3}, {"username": "onurtemizkan", "commitsCount": 3}, {"username": "rhengles", "commitsCount": 3}, {"username": "shisama", "commitsCount": 3}, {"username": "tgriesser", "commitsCount": 3}, {"username": "adek05", "commitsCount": 2}, {"username": "aquibm", "commitsCount": 2}, {"username": "beausmith", "commitsCount": 2}, {"username": "chadian", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "dangmai", "commitsCount": 2}, {"username": "fvictorio", "commitsCount": 2}, {"username": "g-harel", "commitsCount": 2}, {"username": "gkz", "commitsCount": 2}, {"username": "gnapse", "commitsCount": 2}, {"username": "jablko", "commitsCount": 2}, {"username": "jaideng123", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "jbrown215", "commitsCount": 2}, {"username": "jsnajdr", "commitsCount": 2}, {"username": "kaicataldo", "commitsCount": 2}, {"username": "kddeisz", "commitsCount": 2}, {"username": "mahirshah", "commitsCount": 2}, {"username": "matthew-gerstman", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "robert-j-webb", "commitsCount": 2}, {"username": "selvazhagan", "commitsCount": 2}, {"username": "sh7dm", "commitsCount": 2}, {"username": "wuweiweiwu", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 142}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 448}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 791}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1174}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 4159, "testsSize": 8528172, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square", "service": "https://codecov.io/github/prettier/prettier/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/prettier/prettier.svg", "content": "https://img.shields.io/codecov/c/github/prettier/prettier.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/prettier.svg", "content": "https://img.shields.io/npm/v/prettier.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/dw/prettier.svg", "content": "https://img.shields.io/npm/dw/prettier.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square", "service": "https://badges.gitter.im/jlongster/prettier.svg", "shields": "https://img.shields.io/gitter/room/jlongster/prettier.svg", "content": "https://img.shields.io/gitter/room/jlongster/prettier.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"parse-srcset": {"required": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "stable": "1.0.2", "latest": "1.0.2"}, "ci-info": {"required": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "stable": "2.0.0", "latest": "2.0.0"}, "tslib": {"required": "1.13.0", "stable": "2.0.0", "latest": "2.0.0"}, "remark-math": {"required": "1.0.6", "stable": "2.0.1", "latest": "2.0.1"}, "remark-parse": {"required": "5.0.0", "stable": "8.0.2", "latest": "8.0.2"}, "postcss-selector-parser": {"required": "2.2.3", "stable": "6.0.2", "latest": "3.1.2"}, "postcss-values-parser": {"required": "2.0.1", "stable": "3.2.1", "latest": "3.2.1"}, "ignore": {"required": "4.0.6", "stable": "5.1.8", "latest": "5.1.8"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6955, "health": 0.7333333333333334, "branding": 1}, "popularity": {"communityInterest": 39649, "downloadsCount": 36306004.333333336, "downloadsAcceleration": 124781.33841324205, "dependentsCount": 4178}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.46399702138277754}}, "score": {"final": 0.9271386440562006, "detail": {"quality": 0.9473681735749978, "popularity": 0.856090465652567, "maintenance": 0.9808472257294365}}}}, {"babel-preset-env": {"analyzedAt": "2020-06-10T15:15:14.576Z", "collected": {"metadata": {"name": "babel-preset-env", "scope": "unscoped", "version": "1.7.0", "description": "A Babel preset for each environment.", "date": "2018-05-10T14:31:21.930Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-preset-env.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel-preset-env", "bugs": "https://github.com/babel/babel-preset-env/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-syntax-trailing-function-commas": "^6.22.0", "babel-plugin-transform-async-to-generator": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.23.0", "babel-plugin-transform-es2015-classes": "^6.23.0", "babel-plugin-transform-es2015-computed-properties": "^6.22.0", "babel-plugin-transform-es2015-destructuring": "^6.23.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.22.0", "babel-plugin-transform-es2015-for-of": "^6.23.0", "babel-plugin-transform-es2015-function-name": "^6.22.0", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.22.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0", "babel-plugin-transform-es2015-modules-systemjs": "^6.23.0", "babel-plugin-transform-es2015-modules-umd": "^6.23.0", "babel-plugin-transform-es2015-object-super": "^6.22.0", "babel-plugin-transform-es2015-parameters": "^6.23.0", "babel-plugin-transform-es2015-shorthand-properties": "^6.22.0", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.22.0", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.23.0", "babel-plugin-transform-es2015-unicode-regex": "^6.22.0", "babel-plugin-transform-exponentiation-operator": "^6.22.0", "babel-plugin-transform-regenerator": "^6.22.0", "browserslist": "^3.2.6", "invariant": "^2.2.2", "semver": "^5.3.0"}, "devDependencies": {"babel-cli": "^6.23.0", "babel-eslint": "^7.1.1", "babel-helper-fixtures": "^6.22.0", "babel-helper-plugin-test-runner": "^6.22.0", "babel-plugin-istanbul": "^3.1.2", "babel-preset-env": "^1.4.0", "babel-register": "^6.23.0", "chai": "^3.5.0", "codecov": "^1.0.1", "compat-table": "github:kangax/compat-table#957f1ff15972e8fb2892a172f985e9af27bf1c75", "eslint": "^3.17.1", "eslint-config-babel": "^6.0.0", "eslint-plugin-flowtype": "^2.29.1", "fs-extra": "~2.0.0", "lodash": "^4.17.4", "mocha": "^3.2.0", "nyc": "^10.1.2", "electron-to-chromium": "^1.3.11", "rimraf": "^2.6.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# Now that `babel-preset-env` has stabilized, it has been [moved into the main Babel mono-repo](https://github.com/babel/babel/tree/master/packages/babel-preset-env) and this repo has been archived.\n\nThe move makes it much easier to release and develop in sync with the rest of Babel!\n\nThis repo will be made read-only, as all of the issues/labels have been moved over as well. Please report any bugs and open pull requests over on the [main mono-repo](https://github.com/babel/babel).\n\n---\n\n# babel-preset-env [![npm](https://img.shields.io/npm/v/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![travis](https://img.shields.io/travis/babel/babel-preset-env/master.svg)](https://travis-ci.org/babel/babel-preset-env) [![npm-downloads](https://img.shields.io/npm/dm/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![codecov](https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200)](https://codecov.io/github/babel/babel-preset-env)\n\n> A Babel preset that compiles [ES2015+](https://github.com/tc39/proposals/blob/master/finished-proposals.md) down to ES5 by automatically determining the Babel plugins and polyfills you need based on your targeted browser or runtime environments.\n\n```sh\nnpm install babel-preset-env --save-dev\n```\n\nWithout any configuration options, babel-preset-env behaves exactly the same as babel-preset-latest (or babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 together).\n\n> However, we don't recommend using `preset-env` this way because it doesn't take advantage of it's greater capabilities of targeting specific browsers.\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\nYou can also configure it to only include the polyfills and transforms needed for the browsers you support. Compiling only what's needed can make your bundles smaller and your life easier.\n\nThis example only includes the polyfills and code transforms needed for coverage of users > 0.25%, ignoring Internet Explorer 11 and Opera Mini.. We use [browserslist](https://github.com/ai/browserslist) to parse this information, so you can use [any valid query format supported by browserslist](https://github.com/ai/browserslist#queries).\n\n```js\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        // The % refers to the global coverage of users from browserslist\n        \"browsers\": [ \">0.25%\", \"not ie 11\", \"not op_mini all\"]\n      }\n    }]\n  ]\n}\n```\n\n> You can also target individual versions of browsers instead of using a query with `\"targets\": { \"chrome\": \"52\" }`.\n\nSimilarly, if you're targeting Node.js instead of the browser, you can configure babel-preset-env to only include the polyfills and transforms necessary for a particular version:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"6.10\"\n      }\n    }]\n  ]\n}\n```\n\nFor convenience, you can use `\"node\": \"current\"` to only include the necessary polyfills and transforms for the Node.js version that you use to run Babel:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\nCheck out the many options (especially `useBuiltIns` to polyfill less)!\n\n- [How it Works](#how-it-works)\n- [Install](#install)\n- [Usage](#usage)\n- [Options](#options)\n- [Examples](#examples)\n- [Caveats](#caveats)\n- [Other Cool Projects](#other-cool-projects)\n\n## How it Works\n\n### Determine environment support for ECMAScript features\n\nUse external data such as [`compat-table`](https://github.com/kangax/compat-table) to determine browser support. (We should create PRs there when necessary)\n\n![](https://cloud.githubusercontent.com/assets/588473/19214029/58deebce-8d48-11e6-9004-ee3fbcb75d8b.png)\n\nWe can periodically run [build-data.js](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which generates [plugins.json](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json).\n\nRef: [#7](https://github.com/babel/babel-preset-env/issues/7)\n\n### Maintain a mapping between JavaScript features and Babel plugins\n\n> Currently located at [plugin-features.js](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js).\n\nThis should be straightforward to do in most cases. There might be cases where plugins should be split up more or certain plugins aren't standalone enough (or impossible to do).\n\n### Support all plugins in Babel that are considered `latest`\n\n> Default behavior without options is the same as `babel-preset-latest`.\n\nIt won't include `stage-x` plugins. env will support all plugins in what we consider the latest version of JavaScript (by matching what we do in [`babel-preset-latest`](http://babeljs.io/docs/plugins/preset-latest/)).\n\nRef: [#14](https://github.com/babel/babel-preset-env/issues/14)\n\n### Determine the lowest common denominator of plugins to be included in the preset\n\nIf you are targeting IE 8 and Chrome 55 it will include all plugins required by IE 8 since you would need to support both still.\n\n### Support a target option `\"node\": \"current\"` to compile for the currently running node version.\n\nFor example, if you are building on Node 6, arrow functions won't be converted, but they will if you build on Node 0.12.\n\n### Support a `browsers` option like autoprefixer\n\nUse [browserslist](https://github.com/ai/browserslist) to declare supported environments by performing queries like `> 1%, last 2 versions`.\n\nRef: [#19](https://github.com/babel/babel-preset-env/pull/19)\n\n## Install\n\nWith [npm](https://www.npmjs.com):\n\n```sh\nnpm install --save-dev babel-preset-env\n```\n\nOr [yarn](https://yarnpkg.com):\n\n```sh\nyarn add babel-preset-env --dev\n```\n\n## Usage\n\nThe default behavior without options runs all transforms (behaves the same as [babel-preset-latest](https://babeljs.io/docs/plugins/preset-latest/)).\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\n## Options\n\nFor more information on setting options for a preset, refer to the [plugin/preset options](http://babeljs.io/docs/plugins/#plugin-preset-options) documentation.\n\n### `targets`\n\n`{ [string]: number | string }`, defaults to `{}`.\n\nTakes an object of environment versions to support.\n\nEach target environment takes a number or a string (we recommend using a string when specifying minor versions like `node: \"6.10\"`).\n\nExample environments: `chrome`, `opera`, `edge`, `firefox`, `safari`, `ie`, `ios`, `android`, `node`, `electron`.\n\nThe [data](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) for this is generated by running the [build-data script](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which pulls in data from [compat-table](https://kangax.github.io/compat-table).\n\n### `targets.node`\n\n`number | string | \"current\" | true`\n\nIf you want to compile against the current node version, you can specify `\"node\": true` or `\"node\": \"current\"`, which would be the same as `\"node\": process.versions.node`.\n\n### `targets.browsers`\n\n`Array<string> | string`\n\nA query to select browsers (ex: last 2 versions, > 5%) using [browserslist](https://github.com/ai/browserslist).\n\nNote, browsers' results are overridden by explicit items from `targets`.\n\n### `targets.uglify`\n\n`true`\n\nWhen using `uglify-js` to minify your code, you may run into syntax errors when targeting later browsers since `uglify-js` does not support any ES2015+ syntax.\n\nTo prevent these errors - set the `uglify` option to `true`, which enables all transformation plugins and as a result, your code is fully compiled to ES5. However, the `useBuiltIns` option will still work as before and only include the polyfills that your target(s) need.\n\n> Uglify has support for ES2015 syntax via [uglify-es](https://github.com/mishoo/UglifyJS2/tree/harmony). If you are using syntax unsupported by `uglify-es`, we recommend using [babel-minify](https://github.com/babel/minify).\n\n> Note: This option is deprecated in 2.x and replaced with a [`forceAllTransforms` option](https://github.com/babel/babel-preset-env/pull/264).\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable more spec compliant, but potentially slower, transformations for any plugins in this preset that support them.\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `debug`\n\n`boolean`, defaults to `false`.\n\nOutputs the targets/plugins used and the version specified in [plugin data version](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) to `console.log`.\n\n### `include`\n\n`Array<string>`, defaults to `[]`.\n\n> NOTE: `whitelist` is deprecated and will be removed in the next major in favor of this.\n\nAn array of plugins to always include.\n\nValid options include any:\n\n- [Babel plugins](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js) - both with (`babel-plugin-transform-es2015-spread`) and without prefix (`transform-es2015-spread`) are supported.\n\n- [Built-ins](https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js), such as `map`, `set`, or `object.assign`.\n\nThis option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn't work.\n\nFor example, Node 4 supports native classes but not spread. If `super` is used with a spread argument, then the `transform-es2015-classes` transform needs to be `include`d, as it is not possible to transpile a spread with `super` otherwise.\n\n> NOTE: The `include` and `exclude` options _only_ work with the [plugins included with this preset](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js); so, for example, including `transform-do-expressions` or excluding `transform-function-bind` will throw errors. To use a plugin _not_ included with this preset, add them to your [config](https://babeljs.io/docs/usage/babelrc/) directly.\n\n### `exclude`\n\n`Array<string>`, defaults to `[]`.\n\nAn array of plugins to always exclude/remove.\n\nThe possible options are the same as the `include` option.\n\nThis option is useful for \"blacklisting\" a transform like `transform-regenerator` if you don't use generators and don't want to include `regeneratorRuntime` (when using `useBuiltIns`) or for using another plugin like [fast-async](https://github.com/MatAtBread/fast-async) instead of [Babel's async-to-gen](http://babeljs.io/docs/plugins/transform-async-generator-functions/).\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nA way to apply `babel-preset-env` for polyfills (via \"babel-polyfill\").\n\n> NOTE: This does not currently polyfill experimental/stage-x built-ins like the regular \"babel-polyfill\" does.\n> This will only work with npm >= 3 (which should be used with Babel 6 anyway)\n\n```\nnpm install babel-polyfill --save\n```\n\nThis option enables a new plugin that replaces the statement `import \"babel-polyfill\"` or `require(\"babel-polyfill\")` with individual requires for `babel-polyfill` based on environment.\n\n> NOTE: Only use `require(\"babel-polyfill\");` once in your whole app.\n> Multiple imports or requires of `babel-polyfill` will throw an error since it can cause global collisions and other issues that are hard to trace.\n> We recommend creating a single entry file that only contains the `require` statement.\n\n**In**\n\n```js\nimport \"babel-polyfill\";\n```\n\n**Out (different based on environment)**\n\n```js\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es7.string.pad-end\";\nimport \"core-js/modules/web.timers\";\nimport \"core-js/modules/web.immediate\";\nimport \"core-js/modules/web.dom.iterable\";\n```\n\nThis will also work for `core-js` directly (`import \"core-js\";`)\n\n```\nnpm install core-js --save\n```\n\n---\n\n## Examples\n\n### Export with various targets\n\n```js\nexport class A {}\n```\n\n#### Target only Chrome 52\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n#### Target Chrome 52 with webpack 2/rollup and loose mode\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      },\n      \"modules\": false,\n      \"loose\": true\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport class A {}\n```\n\n#### Target specific browsers via browserslist\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52,\n        \"browsers\": [\"last 2 versions\", \"safari 7\"]\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport var A = function A() {\n  _classCallCheck(this, A);\n};\n```\n\n#### Target latest node via `node: true` or `node: \"current\"`\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n### Show debug output\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [ \"env\", {\n      \"targets\": {\n        \"safari\": 10\n      },\n      \"modules\": false,\n      \"useBuiltIns\": true,\n      \"debug\": true\n    }]\n  ]\n}\n```\n\n**stdout**\n\n```sh\nUsing targets:\n{\n  \"safari\": 10\n}\n\nModules transform: false\n\nUsing plugins:\n  transform-exponentiation-operator {}\n  transform-async-to-generator {}\n\nUsing polyfills:\n  es7.object.values {}\n  es7.object.entries {}\n  es7.object.get-own-property-descriptors {}\n  web.timers {}\n  web.immediate {}\n  web.dom.iterable {}\n```\n\n### Include and exclude specific plugins/built-ins\n\n> always include arrow functions, explicitly exclude generators\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 versions\", \"safari >= 7\"]\n      },\n      \"include\": [\"transform-es2015-arrow-functions\", \"es6.map\"],\n      \"exclude\": [\"transform-regenerator\", \"es6.set\"]\n    }]\n  ]\n}\n```\n\n## Caveats\n\nIf you get a `SyntaxError: Unexpected token ...` error when using the [object-rest-spread](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread) transform then make sure the plugin has been updated to, at least, `v6.19.0`.\n\n## Other Cool Projects\n\n- [babel-preset-modern-browsers](https://github.com/christophehurpeau/babel-preset-modern-browsers)\n- ?"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 316148}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1672594}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7148841}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 22040524}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 42275200}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 90852689}], "dependentsCount": 3547, "starsCount": 71}, "github": {"homepage": "https://github.com/babel/babel/tree/master/packages/babel-preset-env", "starsCount": 3570, "forksCount": 192, "subscribersCount": 65, "issues": {"count": 458, "openCount": 1, "distribution": {"3600": 111, "10800": 36, "32400": 42, "97200": 54, "291600": 43, "874800": 41, "2624400": 38, "7873200": 36, "23619600": 44, "70858800": 12, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 121}, {"username": "existentialism", "commitsCount": 77}, {"username": "yavorsky", "commitsCount": 31}, {"username": "baer", "commitsCount": 10}, {"username": "alxpy", "commitsCount": 3}, {"username": "chicoxyzzy", "commitsCount": 2}, {"username": "Gerhut", "commitsCount": 1}, {"username": "Kilian", "commitsCount": 1}, {"username": "aaronang", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "bakkot", "commitsCount": 1}, {"username": "basicdays", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "corysimmons", "commitsCount": 1}, {"username": "darahak", "commitsCount": 1}, {"username": "devdevil666", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "imrobinized", "commitsCount": 1}, {"username": "josephrexme", "commitsCount": 1}, {"username": "jthegedus", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "leggiero", "commitsCount": 1}, {"username": "matthiaskern", "commitsCount": 1}, {"username": "mikegreiling", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "rmariuzzo", "commitsCount": 1}, {"username": "rohmanhm", "commitsCount": 1}, {"username": "roman-yakobnyuk", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suchipi", "commitsCount": 1}, {"username": "valscion", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "xtuc", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 14306, "testsSize": 77503, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-preset-env.svg", "shields": "https://img.shields.io/npm/v/babel-preset-env.svg", "content": "https://img.shields.io/npm/v/babel-preset-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "service": "https://api.travis-ci.org/babel/babel-preset-env.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/travis/babel/babel-preset-env/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-preset-env.svg", "shields": "https://img.shields.io/npm/dm/babel-preset-env.svg", "content": "https://img.shields.io/npm/dm/babel-preset-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel-preset-env/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "outdatedDependencies": {"semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "browserslist": {"required": "^3.2.6", "stable": "4.12.0", "latest": "4.12.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8666666666666667, "branding": 1}, "popularity": {"communityInterest": 3934, "downloadsCount": 7346841.333333333, "downloadsAcceleration": -6166.507800608822, "dependentsCount": 3547}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.83104571695586, "detail": {"quality": 0.9434215266992355, "popularity": 0.5658759470806494, "maintenance": 0.9998933641938921}}}}, {"css-loader": {"analyzedAt": "2020-06-13T14:27:25.197Z", "collected": {"metadata": {"name": "css-loader", "scope": "unscoped", "version": "3.6.0", "description": "css loader module for webpack", "keywords": ["webpack", "css", "loader", "url", "import"], "date": "2020-06-13T14:27:06.915Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/css-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/css-loader", "homepage": "https://github.com/webpack-contrib/css-loader", "repository": "https://github.com/webpack-contrib/css-loader", "bugs": "https://github.com/webpack-contrib/css-loader/issues"}, "license": "MIT", "dependencies": {"camelcase": "^5.3.1", "cssesc": "^3.0.0", "icss-utils": "^4.1.1", "loader-utils": "^1.2.3", "normalize-path": "^3.0.0", "postcss": "^7.0.32", "postcss-modules-extract-imports": "^2.0.0", "postcss-modules-local-by-default": "^3.0.2", "postcss-modules-scope": "^2.2.0", "postcss-modules-values": "^3.0.0", "postcss-value-parser": "^4.1.0", "schema-utils": "^2.7.0", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/preset-env": "^7.10.2", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.5.1", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.1", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.21.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.5.4", "lint-staged": "^10.2.10", "memfs": "^3.2.0", "npm-run-all": "^4.1.5", "postcss-loader": "^3.0.0", "postcss-preset-env": "^6.7.0", "prettier": "^2.0.5", "sass": "^1.26.8", "sass-loader": "^8.0.2", "standard-version": "^8.0.0", "strip-ansi": "^6.0.0", "url-loader": "^4.1.0", "webpack": "^4.43.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 7}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img width=\"180\" height=\"180\" vspace=\"20\"\n    src=\"https://cdn.worldvectorlogo.com/logos/css-3.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# css-loader\n\nThe `css-loader` interprets `@import` and `url()` like `import/require()` and will resolve them.\n\n## Getting Started\n\nTo begin, you'll need to install `css-loader`:\n\n```console\nnpm install --save-dev css-loader\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**file.js**\n\n```js\nimport css from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader) and the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see [below](https://github.com/webpack-contrib/css-loader#assets)).\n\nAnd run `webpack` via your preferred method.\n\n### `toString`\n\nYou can also use the css-loader results directly as a string, such as in Angular's component style.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['to-string-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nor\n\n```js\nconst css = require('./test.css').toString();\n\nconsole.log(css); // {String}\n```\n\nIf there are SourceMaps, they will also be included in the result string.\n\nIf, for one reason or another, you need to extract CSS as a\nplain string resource (i.e. not wrapped in a JS module) you\nmight want to check out the [extract-loader](https://github.com/peerigon/extract-loader).\nIt's useful when you, for instance, need to post process the CSS as a string.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'handlebars-loader', // handlebars loader expects raw resource string\n          'extract-loader',\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|                    Name                     |            Type             | Default  | Description                                                            |\n| :-----------------------------------------: | :-------------------------: | :------: | :--------------------------------------------------------------------- |\n|              **[`url`](#url)**              |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `url`/`image-set` functions handling                  |\n|           **[`import`](#import)**           |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `@import` at-rules handling                           |\n|          **[`modules`](#modules)**          | `{Boolean\\|String\\|Object}` | `false`  | Enables/Disables CSS Modules and their configuration                   |\n|        **[`sourceMap`](#sourcemap)**        |         `{Boolean}`         | `false`  | Enables/Disables generation of source maps                             |\n|    **[`importLoaders`](#importloaders)**    |         `{Number}`          |   `0`    | Enables/Disables or setups number of loaders applied before CSS loader |\n| **[`localsConvention`](#localsconvention)** |         `{String}`          | `'asIs'` | Style of exported classnames                                           |\n|       **[`onlyLocals`](#onlylocals)**       |         `{Boolean}`         | `false`  | Export only locals                                                     |\n|         **[`esModule`](#esmodule)**         |         `{Boolean}`         | `false`  | Use ES modules syntax                                                  |\n\n### `url`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `url`/`image-set` functions handling.\nControl `url()` resolving. Absolute URLs and root-relative URLs are not resolving.\n\nExamples resolutions:\n\n```\nurl(image.png) => require('./image.png')\nurl('image.png') => require('./image.png')\nurl(./image.png) => require('./image.png')\nurl('./image.png') => require('./image.png')\nurl('http://dontwritehorriblecode.com/2112.png') => require('http://dontwritehorriblecode.com/2112.png')\nimage-set(url('image2x.png') 1x, url('image1x.png') 2x) => require('./image1x.png') and require('./image2x.png')\n```\n\nTo import assets from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\nurl(~module/image.png) => require('module/image.png')\nurl('~module/image.png') => require('module/image.png')\nurl(~aliasDirectory/image.png) => require('otherDirectory/image.png')\n```\n\n#### `Boolean`\n\nEnable/disable `url()` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `url()`. All filtered `url()` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: (url, resourcePath) => {\n            // resourcePath - path to css file\n\n            // Don't handle `img.png` urls\n            if (url.includes('img.png')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `import`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `@import` at-rules handling.\nControl `@import` resolving. Absolute urls in `@import` will be moved in runtime code.\n\nExamples resolutions:\n\n```\n@import 'style.css' => require('./style.css')\n@import url(style.css) => require('./style.css')\n@import url('style.css') => require('./style.css')\n@import './style.css' => require('./style.css')\n@import url(./style.css) => require('./style.css')\n@import url('./style.css') => require('./style.css')\n@import url('http://dontwritehorriblecode.com/style.css') => @import url('http://dontwritehorriblecode.com/style.css') in runtime\n```\n\nTo import styles from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\n@import url(~module/style.css) => require('module/style.css')\n@import url('~module/style.css') => require('module/style.css')\n@import url(~aliasDirectory/style.css) => require('otherDirectory/style.css')\n```\n\n#### `Boolean`\n\nEnable/disable `@import` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `@import`. All filtered `@import` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: (parsedImport, resourcePath) => {\n            // parsedImport.url - url of `@import`\n            // parsedImport.media - media query of `@import`\n            // resourcePath - path to css file\n\n            // Don't handle `style.css` import\n            if (parsedImport.url.includes('style.css')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `modules`\n\nType: `Boolean|String|Object`\nDefault: `false`\n\nEnables/Disables CSS Modules and their configuration.\n\nThe `modules` option enables/disables the **[CSS Modules](https://github.com/css-modules/css-modules)** specification and setup basic behaviour.\n\nUsing `false` value increase performance because we avoid parsing **CSS Modules** features, it will be useful for developers who use vanilla css or use other technologies.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Features`\n\n##### `Scope`\n\nUsing `local` value requires you to specify `:global` classes.\nUsing `global` value requires you to specify `:local` classes.\nUsing `pure` value requires selectors must contain at least one local class or id.\n\nYou can find more information [here](https://github.com/css-modules/css-modules).\n\nStyles can be locally scoped to avoid globally scoping styles.\n\nThe syntax `:local(.className)` can be used to declare `className` in the local scope. The local identifiers are exported by the module.\n\nWith `:local` (without brackets) local mode can be switched on for this selector.\nThe `:global(.className)` notation can be used to declare an explicit global selector.\nWith `:global` (without brackets) global mode can be switched on for this selector.\n\nThe loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.\n\n```css\n:local(.className) {\n  background: red;\n}\n:local .className {\n  color: green;\n}\n:local(.className .subClass) {\n  color: green;\n}\n:local .className .subClass :global(.global-class-name) {\n  color: blue;\n}\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n}\n._23_aKvs-b8bW2Vg3fwHozO {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 .global-class-name {\n  color: blue;\n}\n```\n\n> \u2139\ufe0f Identifiers are exported\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1',\n};\n```\n\nCamelCase is recommended for local selectors. They are easier to use within the imported JS module.\n\nYou can use `:local(#someId)`, but this is not recommended. Use classes instead of ids.\n\n##### `Composing`\n\nWhen declaring a local classname you can compose a local class from another local classname.\n\n```css\n:local(.className) {\n  background: red;\n  color: yellow;\n}\n\n:local(.subClass) {\n  composes: className;\n  background: blue;\n}\n```\n\nThis doesn't result in any change to the CSS itself but exports multiple classnames.\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1 _23_aKvs-b8bW2Vg3fwHozO',\n};\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n  color: yellow;\n}\n\n._13LGdX8RMStbBE9w-t0gZ1 {\n  background: blue;\n}\n```\n\n##### `Importing`\n\nTo import a local classname from another module.\n\n```css\n:local(.continueButton) {\n  composes: button from 'library/button.css';\n  background: red;\n}\n```\n\n```css\n:local(.nameEdit) {\n  composes: edit highlight from './edit.css';\n  background: red;\n}\n```\n\nTo import from multiple modules use multiple `composes:` rules.\n\n```css\n:local(.className) {\n  composes: edit hightlight from './edit.css';\n  composes: button from 'module/button.css';\n  composes: classFromThisModule;\n  background: red;\n}\n```\n\n##### `Values`\n\nYou can use `@value` to specific values to be reused throughout a document.\n\nWe recommend use prefix `v-` for values, `s-` for selectors and `m-` for media at-rules.\n\n```css\n@value v-primary: #BF4040;\n@value s-black: black-selector;\n@value m-large: (min-width: 960px);\n\n.header {\n  color: v-primary;\n  padding: 0 10px;\n}\n\n.s-black {\n  color: black;\n}\n\n@media m-large {\n  .header {\n    padding: 0 20px;\n  }\n}\n```\n\n#### `Boolean`\n\nEnable **CSS Modules** features.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nEnable **CSS Modules** features and setup `mode`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          // Using `local` value has same effect like using `modules: true`\n          modules: 'global',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Object`\n\nEnable **CSS Modules** features and setup options for them.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'local',\n            exportGlobals: true,\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n            context: path.resolve(__dirname, 'src'),\n            hashPrefix: 'my-custom-hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `auto`\n\nType: `Boolean|RegExp|Function`\nDefault: `'undefined'`\n\nAllows auto enable css modules based on filename.\n\n###### `Boolean`\n\nPossible values:\n\n- `true` - enable css modules for all files for which `/\\.module\\.\\w+$/i.test(filename)` return true\n- `false` - disable css modules\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `RegExp`\n\nEnable css modules for files based on the filename satisfying your regex check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: /\\.custom-module\\.\\w+$/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nEnable css modules for files based on the filename satisfying your filter function check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: (resourcePath) => resourcePath.endsWith('.custom-module.css'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `mode`\n\nType: `String|Function`\nDefault: `'local'`\n\nSetup `mode` option. You can omit the value when you want `local` mode.\n\n###### `String`\n\nPossible values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'global',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nAllows set different values for the `mode` option based on a filename\n\nPossible return values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            // Callback must return \"local\", \"global\", or \"pure\" values\n            mode: (resourcePath) => {\n              if (/pure.css$/i.test(resourcePath)) {\n                return 'pure';\n              }\n\n              if (/global.css$/i.test(resourcePath)) {\n                return 'global';\n              }\n\n              return 'local';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `exportGlobals`\n\nType: `Boolean`\nDefault: `false`\n\nAllow `css-loader` to export names from global class or id, so you can use that as local name.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            exportGlobals: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentName`\n\nType: `String`\nDefault: `'[hash:base64]'`\n\nYou can configure the generated ident with the `localIdentName` query parameter.\nSee [loader-utils's documentation](https://github.com/webpack/loader-utils#interpolatename) for more information on options.\n\nRecommendations:\n\n- use `'[path][name]__[local]'` for development\n- use `'[hash:base64]'` for production\n\nThe `[local]` placeholder contains original class.\n\n**Note:** all reserved (`<>:\"/\\|?*`) and control filesystem characters (excluding characters in the `[local]` placeholder) will be converted to `-`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `context`\n\nType: `String`\nDefault: `undefined`\n\nAllow to redefine basic loader context for local ident name.\nBy default we use `rootContext` of loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            context: path.resolve(__dirname, 'context'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `hashPrefix`\n\nType: `String`\nDefault: `undefined`\n\nAllow to add custom hash to generate more unique classes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            hashPrefix: 'hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `getLocalIdent`\n\nType: `Function`\nDefault: `undefined`\n\nYou can also specify the absolute path to your custom `getLocalIdent` function to generate classname based on a different schema.\nBy default we use built-in function to generate a classname.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            getLocalIdent: (context, localIdentName, localName, options) => {\n              return 'whatever_random_class_name';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentRegExp`\n\nType: `String|RegExp`\nDefault: `undefined`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentRegExp: /page-(.*)\\.css/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: `false`\n\nEnables/Disables generation of source maps.\n\nTo include source maps set the `sourceMap` option.\n\nThey are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          sourceMap: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `importLoaders`\n\nType: `Number`\nDefault: `0`\n\nEnables/Disables or setups number of loaders applied before CSS loader.\n\nThe option `importLoaders` allows you to configure how many loaders before `css-loader` should be applied to `@import`ed resources.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 2,\n              // 0 => no loaders (default);\n              // 1 => postcss-loader;\n              // 2 => postcss-loader, sass-loader\n            },\n          },\n          'postcss-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThis may change in the future when the module system (i. e. webpack) supports loader matching by origin.\n\n### `localsConvention`\n\nType: `String`\nDefault: `'asIs'`\n\nStyle of exported classnames.\n\nBy default, the exported JSON keys mirror the class names (i.e `asIs` value).\n\n|         Name          |    Type    | Description                                                                                      |\n| :-------------------: | :--------: | :----------------------------------------------------------------------------------------------- |\n|     **`'asIs'`**      | `{String}` | Class names will be exported as is.                                                              |\n|   **`'camelCase'`**   | `{String}` | Class names will be camelized, the original class name will not to be removed from the locals    |\n| **`'camelCaseOnly'`** | `{String}` | Class names will be camelized, the original class name will be removed from the locals           |\n|    **`'dashes'`**     | `{String}` | Only dashes in class names will be camelized                                                     |\n|  **`'dashesOnly'`**   | `{String}` | Dashes in class names will be camelized, the original class name will be removed from the locals |\n\n**file.css**\n\n```css\n.class-name {\n}\n```\n\n**file.js**\n\n```js\nimport { className } from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          localsConvention: 'camelCase',\n        },\n      },\n    ],\n  },\n};\n```\n\n### `onlyLocals`\n\nType: `Boolean`\nDefault: `false`\n\nExport only locals.\n\n**Useful** when you use **css modules** for pre-rendering (for example SSR).\nFor pre-rendering with `mini-css-extract-plugin` you should use this option instead of `style-loader!css-loader` **in the pre-rendering bundle**.\nIt doesn't embed CSS but only exports the identifier mappings.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          onlyLocals: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `css-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Assets\n\nThe following `webpack.config.js` can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as [Data URLs](https://tools.ietf.org/html/rfc2397) and copy larger files to the output directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n### Extract\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\n- This can be achieved by using the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract the CSS when running in production mode.\n\n- As an alternative, if seeking better development performance and css outputs that mimic production. [extract-css-chunks-webpack-plugin](https://github.com/faceyspacey/extract-css-chunks-webpack-plugin) offers a hot module reload friendly, extended version of mini-css-extract-plugin. HMR real CSS files in dev, works like mini-css in non-dev\n\n### Pure CSS, CSS modules and PostCSS\n\nWhen you have pure CSS (without CSS modules), CSS modules and PostCSS in your project you can use this setup:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        // For CSS modules\n        // For pure CSS - /\\.css$/i,\n        // For Sass/SCSS - /\\.((c|sa|sc)ss)$/i,\n        // For Less - /\\.((c|le)ss)$/i,\n        test: /\\.((c|sa|sc)ss)$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              // Run `postcss-loader` on each CSS `@import`, do not forget that `sass-loader` compile non CSS `@import`'s into a single file\n              // If you need run `sass-loader` and `postcss-loader` on each CSS `@import` please set it to `2`\n              importLoaders: 1,\n              // Automatically enable css modules for files satisfying `/\\.module\\.\\w+$/i` RegExp.\n              modules: { auto: true },\n            },\n          },\n          {\n            loader: 'postcss-loader',\n            options: { plugins: () => [postcssPresetEnv({ stage: 0 })] },\n          },\n          // Can be `less-loader`\n          // The `test` property should be `\\.less/i`\n          {\n            test: /\\.s[ac]ss$/i,\n            loader: 'sass-loader',\n          },\n        ],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/css-loader.svg\n[npm-url]: https://npmjs.com/package/css-loader\n[node]: https://img.shields.io/node/v/css-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/css-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/css-loader\n[tests]: https://github.com/webpack-contrib/css-loader/workflows/css-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/css-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/css-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/css-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1460626}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9265212}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 39645508}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 115235161}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 201782007}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 351014965}], "dependentsCount": 9729, "starsCount": 99}, "github": {"starsCount": 3800, "forksCount": 538, "subscribersCount": 59, "issues": {"count": 1091, "openCount": 24, "distribution": {"3600": 250, "10800": 63, "32400": 63, "97200": 80, "291600": 64, "874800": 71, "2624400": 84, "7873200": 98, "23619600": 127, "70858800": 176, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 200}, {"username": "sokra", "commitsCount": 132}, {"username": "d3viant0ne", "commitsCount": 15}, {"username": "michael-ciniawsky", "commitsCount": 13}, {"username": "bebraw", "commitsCount": 8}, {"username": "SpaceK33z", "commitsCount": 6}, {"username": "markdalgleish", "commitsCount": 6}, {"username": "ShyykoSerhiy", "commitsCount": 5}, {"username": "joscha", "commitsCount": 5}, {"username": "jhnns", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "BPScott", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "andreypopp", "commitsCount": 2}, {"username": "ben-eb", "commitsCount": 2}, {"username": "cap-Bernardito", "commitsCount": 2}, {"username": "kgram", "commitsCount": 2}, {"username": "kud", "commitsCount": 2}, {"username": "lemieux", "commitsCount": 2}, {"username": "liambuchanan", "commitsCount": 2}, {"username": "mrsteele", "commitsCount": 2}, {"username": "shama", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "Antonio-Laguna", "commitsCount": 1}, {"username": "Atinux", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "ScriptedAlchemy", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "Solant", "commitsCount": 1}, {"username": "Stephanemw", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "ahoym", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alreadyExisted", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "bbtfr", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "charlesponti", "commitsCount": 1}, {"username": "christianvuerings", "commitsCount": 1}, {"username": "danny-andrews-snap", "commitsCount": 1}, {"username": "diagramatics", "commitsCount": 1}, {"username": "diegofaria", "commitsCount": 1}, {"username": "dreyescat", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "faergeek", "commitsCount": 1}, {"username": "fresheneesz", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "helloyou2012", "commitsCount": 1}, {"username": "hugihlynsson", "commitsCount": 1}, {"username": "jkiimm", "commitsCount": 1}, {"username": "joelgallant", "commitsCount": 1}, {"username": "jquense", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lamhieu-vk", "commitsCount": 1}, {"username": "lettertwo", "commitsCount": 1}, {"username": "liuliangsir", "commitsCount": 1}, {"username": "longlho", "commitsCount": 1}, {"username": "manuelbieh", "commitsCount": 1}, {"username": "mareksuscak", "commitsCount": 1}, {"username": "maxlapides", "commitsCount": 1}, {"username": "mjackson", "commitsCount": 1}, {"username": "mmrko", "commitsCount": 1}, {"username": "monteiz", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "moretti", "commitsCount": 1}, {"username": "mweibel", "commitsCount": 1}, {"username": "ndresx", "commitsCount": 1}, {"username": "no1melman", "commitsCount": 1}, {"username": "oliverwoodings", "commitsCount": 1}, {"username": "petehunt", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "philipbordallo", "commitsCount": 1}, {"username": "princed", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "sanpoChew", "commitsCount": 1}, {"username": "seuros", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "sodatea", "commitsCount": 1}, {"username": "spencerbyw", "commitsCount": 1}, {"username": "swernerx", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "yavorsky", "commitsCount": 1}, {"username": "ziir", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 25}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 31}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 72}]}, "source": {"files": {"readmeSize": 26212, "testsSize": 2680041, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/css-loader.svg", "shields": "https://img.shields.io/npm/v/css-loader.svg", "content": "https://img.shields.io/npm/v/css-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/css-loader.svg", "service": "https://david-dm.org/webpack-contrib/css-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/css-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/css-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"camelcase": {"required": "^5.3.1", "stable": "6.0.0", "latest": "6.0.0"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7454999999999999, "health": 0.5384615384615384, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4582, "downloadsCount": 38411720.333333336, "downloadsAcceleration": 129789.60302511416, "dependentsCount": 9729}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8954280821917808, "openIssues": 1, "issuesDistribution": 0.018372403247356672}}, "score": {"final": 0.7962621213280523, "detail": {"quality": 0.9131107769559872, "popularity": 0.806985994232435, "maintenance": 0.6853822578854399}}}}, {"chalk": {"analyzedAt": "2020-06-20T17:33:57.453Z", "collected": {"metadata": {"name": "chalk", "scope": "unscoped", "version": "4.1.0", "description": "Terminal string styling done right", "keywords": ["color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2020-06-09T07:43:42.525Z", "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/chalk.git"}, "links": {"npm": "https://www.npmjs.com/package/chalk", "homepage": "https://github.com/chalk/chalk#readme", "repository": "https://github.com/chalk/chalk", "bugs": "https://github.com/chalk/chalk/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^4.1.0", "supports-color": "^7.1.0"}, "devDependencies": {"ava": "^2.4.0", "coveralls": "^3.0.7", "execa": "^4.0.0", "import-fresh": "^3.1.0", "matcha": "^0.7.0", "nyc": "^15.0.0", "resolve-from": "^5.0.0", "tsd": "^0.7.4", "xo": "^0.28.2"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![npm dependents](https://badgen.net/npm/dependents/chalk)](https://www.npmjs.com/package/chalk?activeTab=dependents) [![Downloads](https://badgen.net/npm/dt/chalk)](https://www.npmjs.com/package/chalk) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) ![TypeScript-ready](https://img.shields.io/npm/types/chalk.svg) [![run on repl.it](https://repl.it/badge/github/chalk/chalk)](https://repl.it/github/chalk/chalk)\n\n<img src=\"https://cdn.jsdelivr.net/gh/chalk/ansi-styles@8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~50,000 packages](https://www.npmjs.com/browse/depended/chalk) as of January 1, 2020\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.level\n\nSpecifies the level of color support.\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.Instance({level: 0});\n```\n\n| Level | Description |\n| :---: | :--- |\n| `0` | All colors disabled |\n| `1` | Basic color support (16 colors) |\n| `2` | 256 color support |\n| `3` | Truecolor support (16 million colors) |\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n### chalk.stderr and chalk.stderr.supportsColor\n\n`chalk.stderr` contains a separate instance configured with color support detected for `stderr` stream instead of `stdout`. Override rules from `chalk.supportsColor` apply to this too. `chalk.stderr.supportsColor` is exposed for convenience.\n\n## Styles\n\n### Modifiers\n\n- `reset` - Resets the current color chain.\n- `bold` - Make text bold.\n- `dim` - Emitting only a small amount of light.\n- `italic` - Make text italic. *(Not widely supported)*\n- `underline` - Make text underline. *(Not widely supported)*\n- `inverse`- Inverse background and foreground colors.\n- `hidden` - Prints the text, but makes it invisible.\n- `strikethrough` - Puts a horizontal line through the center of the text. *(Not widely supported)*\n- `visible`- Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic.\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](https://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n\tThere are {bold 5280 feet} in a mile.\n\tIn {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following three statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk.bold.rgb(10, 100, 200)`Hello!`);\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- [`ansi`](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) - Example: `chalk.ansi(31).bgAnsi(93)('red on yellowBright')`\n- [`ansi256`](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) - Example: `chalk.bgAnsi256(194)('Honeydew, more or less')`\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [Windows Terminal](https://github.com/microsoft/terminal) instead of `cmd.exe`.\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n## chalk for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-chalk?utm_source=npm-chalk&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7480506}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 48171335}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 201839494}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 570348872}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 977967889}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1687521108}], "dependentsCount": 49654, "starsCount": 933}, "github": {"starsCount": 14650, "forksCount": 561, "subscribersCount": 139, "issues": {"count": 406, "openCount": 12, "distribution": {"3600": 101, "10800": 40, "32400": 37, "97200": 40, "291600": 24, "874800": 32, "2624400": 35, "7873200": 37, "23619600": 41, "70858800": 19, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 146}, {"username": "Qix-", "commitsCount": 34}, {"username": "kevva", "commitsCount": 3}, {"username": "pedrottimark", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "stroncium", "commitsCount": 3}, {"username": "LitoMore", "commitsCount": 2}, {"username": "Richienb", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "calebboyd", "commitsCount": 2}, {"username": "nazrhyn", "commitsCount": 2}, {"username": "popey456963", "commitsCount": 2}, {"username": "seanmonstar", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "vadimdemedes", "commitsCount": 2}, {"username": "AndrewKvalheim", "commitsCount": 1}, {"username": "BendingBender", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "GeorgeGkas", "commitsCount": 1}, {"username": "Haroenv", "commitsCount": 1}, {"username": "KSXGitHub", "commitsCount": 1}, {"username": "L1fescape", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "apsknight", "commitsCount": 1}, {"username": "atifaziz", "commitsCount": 1}, {"username": "bmeck", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "danielhusar", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "eankeen", "commitsCount": 1}, {"username": "farnabaz", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "keis", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "marado", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "martinheidegger", "commitsCount": 1}, {"username": "mischah", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "partheseas", "commitsCount": 1}, {"username": "paulmelnikow", "commitsCount": 1}, {"username": "saadq", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tom-sherman", "commitsCount": 1}, {"username": "toonijn", "commitsCount": 1}, {"username": "vanbujm", "commitsCount": 1}, {"username": "weikinhuang", "commitsCount": 1}, {"username": "yungsters", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 8}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 9}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 31}]}, "source": {"files": {"readmeSize": 11949, "testsSize": 16265}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/chalk.svg?branch=master", "service": "https://api.travis-ci.org/chalk/chalk.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/chalk/master.svg", "content": "https://img.shields.io/travis/chalk/chalk/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/chalk/chalk/master.svg", "content": "https://img.shields.io/coveralls/chalk/chalk/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/types/chalk.svg", "shields": "https://img.shields.io/npm/types/chalk.svg", "content": "https://img.shields.io/npm/types/chalk.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "types"}}}], "linters": ["editorconfig", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.75, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 16335, "downloadsCount": 190116290.66666666, "downloadsAcceleration": 728611.7673706242, "dependentsCount": 49654}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9663707204366847, "detail": {"quality": 0.9544871811632935, "popularity": 0.9430339674852417, "maintenance": 0.9998933641938921}}}}, {"@babel/preset-env": {"analyzedAt": "2020-06-30T13:43:11.668Z", "collected": {"metadata": {"name": "@babel/preset-env", "scope": "babel", "version": "7.10.4", "description": "A Babel preset for each environment.", "date": "2020-06-30T13:13:44.282Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-env"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/compat-data": "^7.10.4", "@babel/helper-compilation-targets": "^7.10.4", "@babel/helper-module-imports": "^7.10.4", "@babel/helper-plugin-utils": "^7.10.4", "@babel/plugin-proposal-async-generator-functions": "^7.10.4", "@babel/plugin-proposal-class-properties": "^7.10.4", "@babel/plugin-proposal-dynamic-import": "^7.10.4", "@babel/plugin-proposal-json-strings": "^7.10.4", "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.4", "@babel/plugin-proposal-numeric-separator": "^7.10.4", "@babel/plugin-proposal-object-rest-spread": "^7.10.4", "@babel/plugin-proposal-optional-catch-binding": "^7.10.4", "@babel/plugin-proposal-optional-chaining": "^7.10.4", "@babel/plugin-proposal-private-methods": "^7.10.4", "@babel/plugin-proposal-unicode-property-regex": "^7.10.4", "@babel/plugin-syntax-async-generators": "^7.8.0", "@babel/plugin-syntax-class-properties": "^7.10.4", "@babel/plugin-syntax-dynamic-import": "^7.8.0", "@babel/plugin-syntax-json-strings": "^7.8.0", "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0", "@babel/plugin-syntax-numeric-separator": "^7.10.4", "@babel/plugin-syntax-object-rest-spread": "^7.8.0", "@babel/plugin-syntax-optional-catch-binding": "^7.8.0", "@babel/plugin-syntax-optional-chaining": "^7.8.0", "@babel/plugin-syntax-top-level-await": "^7.10.4", "@babel/plugin-transform-arrow-functions": "^7.10.4", "@babel/plugin-transform-async-to-generator": "^7.10.4", "@babel/plugin-transform-block-scoped-functions": "^7.10.4", "@babel/plugin-transform-block-scoping": "^7.10.4", "@babel/plugin-transform-classes": "^7.10.4", "@babel/plugin-transform-computed-properties": "^7.10.4", "@babel/plugin-transform-destructuring": "^7.10.4", "@babel/plugin-transform-dotall-regex": "^7.10.4", "@babel/plugin-transform-duplicate-keys": "^7.10.4", "@babel/plugin-transform-exponentiation-operator": "^7.10.4", "@babel/plugin-transform-for-of": "^7.10.4", "@babel/plugin-transform-function-name": "^7.10.4", "@babel/plugin-transform-literals": "^7.10.4", "@babel/plugin-transform-member-expression-literals": "^7.10.4", "@babel/plugin-transform-modules-amd": "^7.10.4", "@babel/plugin-transform-modules-commonjs": "^7.10.4", "@babel/plugin-transform-modules-systemjs": "^7.10.4", "@babel/plugin-transform-modules-umd": "^7.10.4", "@babel/plugin-transform-named-capturing-groups-regex": "^7.10.4", "@babel/plugin-transform-new-target": "^7.10.4", "@babel/plugin-transform-object-super": "^7.10.4", "@babel/plugin-transform-parameters": "^7.10.4", "@babel/plugin-transform-property-literals": "^7.10.4", "@babel/plugin-transform-regenerator": "^7.10.4", "@babel/plugin-transform-reserved-words": "^7.10.4", "@babel/plugin-transform-shorthand-properties": "^7.10.4", "@babel/plugin-transform-spread": "^7.10.4", "@babel/plugin-transform-sticky-regex": "^7.10.4", "@babel/plugin-transform-template-literals": "^7.10.4", "@babel/plugin-transform-typeof-symbol": "^7.10.4", "@babel/plugin-transform-unicode-escapes": "^7.10.4", "@babel/plugin-transform-unicode-regex": "^7.10.4", "@babel/preset-modules": "^0.1.3", "@babel/types": "^7.10.4", "browserslist": "^4.12.0", "core-js-compat": "^3.6.2", "invariant": "^2.2.2", "levenary": "^1.1.1", "semver": "^5.5.0"}, "devDependencies": {"@babel/cli": "^7.10.4", "@babel/core": "^7.10.4", "@babel/helper-fixtures": "^7.10.4", "@babel/helper-plugin-test-runner": "^7.10.4", "@babel/plugin-syntax-dynamic-import": "^7.2.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 13}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 27}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 52}], "readme": "# @babel/preset-env\n\n> A Babel preset for each environment.\n\nSee our website [@babel/preset-env](https://babeljs.io/docs/en/next/babel-preset-env.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20preset-env%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-env\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-env --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2173430}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 12345981}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 49626835}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 150312334}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 277812742}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 465609494}], "dependentsCount": 5348, "starsCount": 9}, "github": {"homepage": "https://babel.dev", "starsCount": 36907, "forksCount": 4352, "subscribersCount": 865, "issues": {"count": 11675, "openCount": 796, "distribution": {"3600": 2467, "10800": 919, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1011, "2624400": 845, "7873200": 837, "23619600": 854, "70858800": 1089, "212576400": 276}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 482}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 201}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 36}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 145}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 385}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 466, "testsSize": 723817, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.5.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.96875, "branding": 1}, "popularity": {"communityInterest": 42232, "downloadsCount": 50104111.333333336, "downloadsAcceleration": 161586.76423135458, "dependentsCount": 5348}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2370762220708152}}, "score": {"final": 0.9072503388611453, "detail": {"quality": 0.9572191160753015, "popularity": 0.8829616455066305, "maintenance": 0.8887086517463834}}}}, {"gulp": {"analyzedAt": "2020-06-26T20:54:39.938Z", "collected": {"metadata": {"name": "gulp", "scope": "unscoped", "version": "4.0.2", "description": "The streaming build system.", "keywords": ["build", "stream", "system", "make", "tool", "asset", "pipeline", "series", "parallel", "streaming"], "date": "2019-05-06T17:49:36.803Z", "author": {"name": "Gulp Team", "email": "team@gulpjs.com", "url": "https://gulpjs.com/"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "contributors": [{"name": "Eric Schoffstall", "email": "yo@contra.io"}, {"name": "Blaine Bublitz", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/gulpjs/gulp.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp", "homepage": "https://gulpjs.com", "repository": "https://github.com/gulpjs/gulp", "bugs": "https://github.com/gulpjs/gulp/issues"}, "license": "MIT", "dependencies": {"glob-watcher": "^5.0.3", "gulp-cli": "^2.2.0", "undertaker": "^1.2.1", "vinyl-fs": "^3.0.0"}, "devDependencies": {"coveralls": "github:phated/node-coveralls#2.x", "eslint": "^2.13.1", "eslint-config-gulp": "^3.0.1", "expect": "^1.20.2", "mkdirp": "^0.5.1", "mocha": "^3.0.0", "nyc": "^10.3.2", "rimraf": "^2.6.3"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <a href=\"https://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n  <p align=\"center\">The streaming build system</p>\n</p>\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Azure Pipelines Build Status][azure-pipelines-image]][azure-pipelines-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![OpenCollective Backers][backer-badge]][backer-url] [![OpenCollective Sponsors][sponsor-badge]][sponsor-url] [![Gitter chat][gitter-image]][gitter-url]\n\n\n## What is gulp?\n\n- **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\n- **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\n- **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations\n- **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use\n\n## What's new in 4.0?!\n\n* The task system was rewritten from the ground-up, allowing task composition using `series()` and `parallel()` methods\n* The watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system\n* First-class support was added for incremental builds using `lastRun()`\n* A `symlink()` method was exposed to create symlinks instead of copying files\n* Built-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\n* Task registration of exported functions - using node or ES exports - is now recommended\n* Custom registries were designed, allowing for shared tasks or augmented functionality\n* Stream implementations were improved, allowing for better conditional and phased builds\n\n## Installation\n\nFollow our [Quick Start guide][quick-start].\n\n## Roadmap\n\nFind out about all our work-in-progress and outstanding issues at https://github.com/orgs/gulpjs/projects.\n\n## Documentation\n\nCheck out the [Getting Started guide][getting-started-guide] and [API docs][api-docs] on our website!\n\n__Excuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.__\n\n## Sample `gulpfile.js`\n\nThis file will give you a taste of what gulp does.\n\n```js\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n */\nfunction clean() {\n  // You can use multiple globbing patterns as you would with `gulp.src`,\n  // for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n/*\n * Define our tasks using plain functions\n */\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n */\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n/*\n * You can use CommonJS `exports` module notation to declare tasks\n */\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n/*\n * Define default task that can be called by just running `gulp` from cli\n */\nexports.default = build;\n```\n\n## Use latest JavaScript version in your gulpfile\n\n__Most new versions of node support most features that Babel provides, except the `import`/`export` syntax. When only that syntax is desired, rename to `gulpfile.esm.js`, install the [esm][esm-module] module, and skip the Babel portion below.__\n\nNode already supports a lot of __ES2015+__ features, but to avoid compatibility problems we suggest to install Babel and rename your `gulpfile.js` to `gulpfile.babel.js`.\n\n```sh\nnpm install --save-dev @babel/register @babel/core @babel/preset-env\n```\n\nThen create a **.babelrc** file with the preset configuration.\n\n```js\n{\n  \"presets\": [ \"@babel/preset-env\" ]\n}\n```\n\nAnd here's the same sample from above written in **ES2015+**.\n\n```js\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/*\n * For small tasks you can export arrow functions\n */\nexport const clean = () => del([ 'assets' ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n /*\n  * You could even use `export as` to rename exported tasks\n  */\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n/*\n * Export a default task\n */\nexport default build;\n```\n\n## Incremental Builds\n\nYou can filter out unchanged files between runs of a task using\nthe `gulp.src` function's `since` option and `gulp.lastRun`:\n```js\nconst paths = {\n  ...\n  images: {\n    src: 'src/images/**/*.{jpg,jpeg,png}',\n    dest: 'build/img/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin({optimizationLevel: 5}))\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\n```\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the `watch` task when running the `images` task\nfor a second time.\n\n## Want to contribute?\n\nAnyone can help make this project better - check out our [Contributing guide](/CONTRIBUTING.md)!\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities.\n\n[![Backers][backers-image]][support-url]\n\n## Sponsors\n\nBecome a sponsor to get your logo on our README on Github.\n\n[![Sponsors][sponsors-image]][support-url]\n\n[downloads-image]: https://img.shields.io/npm/dm/gulp.svg\n[npm-url]: https://www.npmjs.com/package/gulp\n[npm-image]: https://img.shields.io/npm/v/gulp.svg\n\n[azure-pipelines-url]: https://dev.azure.com/gulpjs/gulp/_build/latest?definitionId=1&branchName=master\n[azure-pipelines-image]: https://dev.azure.com/gulpjs/gulp/_apis/build/status/gulp?branchName=master\n\n[travis-url]: https://travis-ci.org/gulpjs/gulp\n[travis-image]: https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/gulp\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/gulp\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n\n[backer-url]: #backers\n[backer-badge]: https://opencollective.com/gulpjs/backers/badge.svg?color=blue\n[sponsor-url]: #sponsors\n[sponsor-badge]: https://opencollective.com/gulpjs/sponsors/badge.svg?color=blue\n\n[support-url]: https://opencollective.com/gulpjs#support\n\n[backers-image]: https://opencollective.com/gulpjs/backers.svg\n[sponsors-image]: https://opencollective.com/gulpjs/sponsors.svg\n\n[quick-start]: https://gulpjs.com/docs/en/getting-started/quick-start\n[getting-started-guide]: https://gulpjs.com/docs/en/getting-started/quick-start\n[api-docs]: https://gulpjs.com/docs/en/api/concepts"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 251816}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1080284}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5595018}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 16731023}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 32914471}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 65850762}], "dependentsCount": 6709, "starsCount": 1429}, "github": {"homepage": "https://gulpjs.com", "starsCount": 31800, "forksCount": 4392, "subscribersCount": 1129, "issues": {"count": 2429, "openCount": 23, "distribution": {"3600": 724, "10800": 292, "32400": 373, "97200": 304, "291600": 188, "874800": 172, "2624400": 119, "7873200": 111, "23619600": 90, "70858800": 41, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "contra", "commitsCount": 284}, {"username": "phated", "commitsCount": 123}, {"username": "robrich", "commitsCount": 43}, {"username": "janiceilene", "commitsCount": 36}, {"username": "sindresorhus", "commitsCount": 23}, {"username": "tkellen", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 10}, {"username": "lubelski", "commitsCount": 10}, {"username": "stryju", "commitsCount": 10}, {"username": "stevemao", "commitsCount": 9}, {"username": "callumacrae", "commitsCount": 8}, {"username": "nalbion", "commitsCount": 6}, {"username": "arvindr21", "commitsCount": 5}, {"username": "dinoboff", "commitsCount": 5}, {"username": "jamescrowley", "commitsCount": 5}, {"username": "stevelacy", "commitsCount": 5}, {"username": "terinjokes", "commitsCount": 5}, {"username": "AntouanK", "commitsCount": 4}, {"username": "appleboy", "commitsCount": 4}, {"username": "kt3k", "commitsCount": 4}, {"username": "lazd", "commitsCount": 4}, {"username": "lisposter", "commitsCount": 4}, {"username": "pdehaan", "commitsCount": 4}, {"username": "pkozlowski-opensource", "commitsCount": 4}, {"username": "staxmanade", "commitsCount": 4}, {"username": "CaryLandholt", "commitsCount": 3}, {"username": "SyntaxRules", "commitsCount": 3}, {"username": "asfktz", "commitsCount": 3}, {"username": "beenanner", "commitsCount": 3}, {"username": "breyed", "commitsCount": 3}, {"username": "hughsk", "commitsCount": 3}, {"username": "jedmao", "commitsCount": 3}, {"username": "sanfords", "commitsCount": 3}, {"username": "subhaze", "commitsCount": 3}, {"username": "t3chnoboy", "commitsCount": 3}, {"username": "LoganArnett", "commitsCount": 2}, {"username": "PatrickJS", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "ajoslin", "commitsCount": 2}, {"username": "azu", "commitsCount": 2}, {"username": "azweb76", "commitsCount": 2}, {"username": "baer", "commitsCount": 2}, {"username": "bhough", "commitsCount": 2}, {"username": "carpasse", "commitsCount": 2}, {"username": "chalkers", "commitsCount": 2}, {"username": "cognitom", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "darsain", "commitsCount": 2}, {"username": "devWayne", "commitsCount": 2}, {"username": "erquhart", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "fidian", "commitsCount": 2}, {"username": "fritx", "commitsCount": 2}, {"username": "grmlin", "commitsCount": 2}, {"username": "him2him2", "commitsCount": 2}, {"username": "jamiebuilds", "commitsCount": 2}, {"username": "kauegimenes", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "klausbayrhammer", "commitsCount": 2}, {"username": "laurelnaiad", "commitsCount": 2}, {"username": "mariuszskon", "commitsCount": 2}, {"username": "megakote", "commitsCount": 2}, {"username": "shakyShane", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tomByrer", "commitsCount": 2}, {"username": "willpracht", "commitsCount": 2}, {"username": "GAumala", "commitsCount": 1}, {"username": "Lucretiel", "commitsCount": 1}, {"username": "MattSturgeon", "commitsCount": 1}, {"username": "SomethingNew71", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaronhooper", "commitsCount": 1}, {"username": "b3none", "commitsCount": 1}, {"username": "chalkygames123", "commitsCount": 1}, {"username": "chinhdo", "commitsCount": 1}, {"username": "chrisanderss0n", "commitsCount": 1}, {"username": "chrisjlee", "commitsCount": 1}, {"username": "cssmagic", "commitsCount": 1}, {"username": "dacodekid", "commitsCount": 1}, {"username": "ddprrt", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "dirkpuge", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "jakearchibald", "commitsCount": 1}, {"username": "jeremenichelli", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "limdauto", "commitsCount": 1}, {"username": "martinvd", "commitsCount": 1}, {"username": "mikestreety", "commitsCount": 1}, {"username": "mimoduo", "commitsCount": 1}, {"username": "nmccready", "commitsCount": 1}, {"username": "ptb", "commitsCount": 1}, {"username": "ralomach", "commitsCount": 1}, {"username": "rninne", "commitsCount": 1}, {"username": "schlpbch", "commitsCount": 1}, {"username": "sttk", "commitsCount": 1}, {"username": "tonyhallett", "commitsCount": 1}, {"username": "xiaoyu2er", "commitsCount": 1}, {"username": "yanxyz", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 9}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 13}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 9045, "testsSize": 15922, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/gulp.svg", "shields": "https://img.shields.io/npm/dm/gulp.svg", "content": "https://img.shields.io/npm/dm/gulp.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/gulp.svg", "shields": "https://img.shields.io/npm/v/gulp.svg", "content": "https://img.shields.io/npm/v/gulp.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci", "service": "https://api.travis-ci.org/gulpjs/gulp.svg", "shields": "https://img.shields.io/travis/gulpjs/gulp.svg", "content": "https://img.shields.io/travis/gulpjs/gulp.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor", "service": "https://ci.appveyor.com/api/projects/status/gulpjs/gulp", "shields": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg", "content": "https://img.shields.io/appveyor/ci/gulpjs/gulp.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "service": "https://coveralls.io/repos/gulpjs/gulp/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "content": "https://img.shields.io/coveralls/gulpjs/gulp/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://badges.gitter.im/gulpjs/gulp.svg", "service": "https://badges.gitter.im/gulpjs/gulp.svg", "shields": "https://img.shields.io/gitter/room/gulpjs/gulp.svg", "content": "https://img.shields.io/gitter/room/gulpjs/gulp.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.875, "health": 1, "branding": 1}, "popularity": {"communityInterest": 38849, "downloadsCount": 5577007.666666667, "downloadsAcceleration": 2133.1697678843193, "dependentsCount": 6709}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.7119349315068493, "openIssues": 1, "issuesDistribution": 0.8475218002972738}}, "score": {"final": 0.7896298203086066, "detail": {"quality": 0.9832341001871262, "popularity": 0.721707086813412, "maintenance": 0.6916060281936416}}}}, {"eslint-plugin-react": {"analyzedAt": "2020-06-30T20:22:51.485Z", "collected": {"metadata": {"name": "eslint-plugin-react", "scope": "unscoped", "version": "7.20.3", "description": "React specific linting rules for ESLint", "keywords": ["eslint", "eslint-plugin", "eslintplugin", "react"], "date": "2020-06-30T20:22:25.907Z", "author": {"name": "Yannick Croissant", "email": "yannick.croissant+npm@gmail.com", "username": "yannickcr"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "yannickcr", "email": "yannick.croissant+npm@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/yannickcr/eslint-plugin-react.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-react", "homepage": "https://github.com/yannickcr/eslint-plugin-react", "repository": "https://github.com/yannickcr/eslint-plugin-react", "bugs": "https://github.com/yannickcr/eslint-plugin-react/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "array.prototype.flatmap": "^1.2.3", "doctrine": "^2.1.0", "has": "^1.0.3", "jsx-ast-utils": "^2.4.1", "object.entries": "^1.1.2", "object.fromentries": "^2.0.2", "object.values": "^1.1.1", "prop-types": "^15.7.2", "resolve": "^1.17.0", "string.prototype.matchall": "^4.0.2"}, "devDependencies": {"@types/eslint": "^7.2.0", "@types/estree": "0.0.45", "@types/node": "^14.0.14", "@typescript-eslint/parser": "^2.34.0", "babel-eslint": "^8.2.6", "coveralls": "^3.1.0", "eslint": "^3 || ^4 || ^5 || ^6 || ^7", "eslint-config-airbnb-base": "^14.2.0", "eslint-plugin-eslint-plugin": "^2.3.0", "eslint-plugin-import": "^2.22.0", "espree": "^3.5.4", "istanbul": "^0.4.5", "markdown-magic": "^1.0.0", "mocha": "^5.2.0", "semver": "^6.3.0", "sinon": "^7.5.0", "typescript": "^3.9.5", "typescript-eslint-parser": "^20.1.1"}, "peerDependencies": {"eslint": "^3 || ^4 || ^5 || ^6 || ^7"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 8}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 13}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 24}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "ESLint-plugin-React\n===================\n\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][deps-image]][deps-url] [![Coverage Status][coverage-image]][coverage-url] [![Code Climate][climate-image]][climate-url] [![Tidelift][tidelift-image]][tidelift-url]\n\nReact specific linting rules for ESLint\n\n# Installation\n\nInstall [ESLint](https://www.github.com/eslint/eslint) either locally or globally. (Note that locally, per project, is strongly preferred)\n\n```sh\n$ npm install eslint --save-dev\n```\n\nIf you installed `ESLint` globally, you have to install React plugin globally too. Otherwise, install it locally.\n\n```sh\n$ npm install eslint-plugin-react --save-dev\n```\n\n# Configuration\n\nUse [our preset](#recommended) to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\"\n  ]\n```\n\nYou should also specify settings that will be shared across all the plugin rules. ([More about eslint shared settings](https://eslint.org/docs/user-guide/configuring#adding-shared-settings))\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createReactClass\", // Regex for Component Factory to use,\n                                         // default to \"createReactClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed.\n                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.\n                           // default to latest and warns if missing\n                           // It will default to \"detect\" in the future\n      \"flowVersion\": \"0.53\" // Flow version\n    },\n    \"propWrapperFunctions\": [\n        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.\n        \"forbidExtraProps\",\n        {\"property\": \"freeze\", \"object\": \"Object\"},\n        {\"property\": \"myFavoriteWrapper\"}\n    ],\n    \"linkComponents\": [\n      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />\n      \"Hyperlink\",\n      {\"name\": \"Link\", \"linkAttribute\": \"to\"}\n    ]\n  }\n}\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"react\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nEnable JSX support.\n\nWith ESLint 2+\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n# List of supported rules\n\n<!-- AUTO-GENERATED-CONTENT:START (BASIC_RULES) -->\n* [react/boolean-prop-naming](docs/rules/boolean-prop-naming.md): Enforces consistent naming for boolean props\n* [react/button-has-type](docs/rules/button-has-type.md): Forbid \"button\" element without an explicit \"type\" attribute\n* [react/default-props-match-prop-types](docs/rules/default-props-match-prop-types.md): Enforce all defaultProps are defined and not \"required\" in propTypes.\n* [react/destructuring-assignment](docs/rules/destructuring-assignment.md): Enforce consistent usage of destructuring assignment of props, state, and context\n* [react/display-name](docs/rules/display-name.md): Prevent missing displayName in a React component definition\n* [react/forbid-component-props](docs/rules/forbid-component-props.md): Forbid certain props on components\n* [react/forbid-dom-props](docs/rules/forbid-dom-props.md): Forbid certain props on DOM Nodes\n* [react/forbid-elements](docs/rules/forbid-elements.md): Forbid certain elements\n* [react/forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md): Forbid using another component's propTypes\n* [react/forbid-prop-types](docs/rules/forbid-prop-types.md): Forbid certain propTypes\n* [react/function-component-definition](docs/rules/function-component-definition.md): Standardize the way function component get defined (fixable)\n* [react/no-access-state-in-setstate](docs/rules/no-access-state-in-setstate.md): Reports when this.state is accessed within setState\n* [react/no-adjacent-inline-elements](docs/rules/no-adjacent-inline-elements.md): Prevent adjacent inline elements not separated by whitespace.\n* [react/no-array-index-key](docs/rules/no-array-index-key.md): Prevent usage of Array index in keys\n* [react/no-children-prop](docs/rules/no-children-prop.md): Prevent passing of children as props.\n* [react/no-danger](docs/rules/no-danger.md): Prevent usage of dangerous JSX props\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md): Report when a DOM element is using both children and dangerouslySetInnerHTML\n* [react/no-deprecated](docs/rules/no-deprecated.md): Prevent usage of deprecated methods\n* [react/no-did-mount-set-state](docs/rules/no-did-mount-set-state.md): Prevent usage of setState in componentDidMount\n* [react/no-did-update-set-state](docs/rules/no-did-update-set-state.md): Prevent usage of setState in componentDidUpdate\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md): Prevent direct mutation of this.state\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md): Prevent usage of findDOMNode\n* [react/no-is-mounted](docs/rules/no-is-mounted.md): Prevent usage of isMounted\n* [react/no-multi-comp](docs/rules/no-multi-comp.md): Prevent multiple component definition per file\n* [react/no-redundant-should-component-update](docs/rules/no-redundant-should-component-update.md): Flag shouldComponentUpdate when extending PureComponent\n* [react/no-render-return-value](docs/rules/no-render-return-value.md): Prevent usage of the return value of React.render\n* [react/no-set-state](docs/rules/no-set-state.md): Prevent usage of setState\n* [react/no-string-refs](docs/rules/no-string-refs.md): Prevent string definitions for references and prevent referencing this.refs\n* [react/no-this-in-sfc](docs/rules/no-this-in-sfc.md): Report \"this\" being used in stateless components\n* [react/no-typos](docs/rules/no-typos.md): Prevent common typos\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md): Detect unescaped HTML entities, which might represent malformed tags\n* [react/no-unknown-property](docs/rules/no-unknown-property.md): Prevent usage of unknown DOM property (fixable)\n* [react/no-unsafe](docs/rules/no-unsafe.md): Prevent usage of unsafe lifecycle methods\n* [react/no-unused-prop-types](docs/rules/no-unused-prop-types.md): Prevent definitions of unused prop types\n* [react/no-unused-state](docs/rules/no-unused-state.md): Prevent definition of unused state fields\n* [react/no-will-update-set-state](docs/rules/no-will-update-set-state.md): Prevent usage of setState in componentWillUpdate\n* [react/prefer-es6-class](docs/rules/prefer-es6-class.md): Enforce ES5 or ES6 class for React Components\n* [react/prefer-read-only-props](docs/rules/prefer-read-only-props.md): Require read-only props. (fixable)\n* [react/prefer-stateless-function](docs/rules/prefer-stateless-function.md): Enforce stateless components to be written as a pure function\n* [react/prop-types](docs/rules/prop-types.md): Prevent missing props validation in a React component definition\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md): Prevent missing React when using JSX\n* [react/require-default-props](docs/rules/require-default-props.md): Enforce a defaultProps definition for every prop that is not a required prop.\n* [react/require-optimization](docs/rules/require-optimization.md): Enforce React components to have a shouldComponentUpdate method\n* [react/require-render-return](docs/rules/require-render-return.md): Enforce ES5 or ES6 class for returning value in render function\n* [react/self-closing-comp](docs/rules/self-closing-comp.md): Prevent extra closing tags for components without children (fixable)\n* [react/sort-comp](docs/rules/sort-comp.md): Enforce component methods order\n* [react/sort-prop-types](docs/rules/sort-prop-types.md): Enforce propTypes declarations alphabetical sorting\n* [react/state-in-constructor](docs/rules/state-in-constructor.md): State initialization in an ES6 class component should be in a constructor\n* [react/static-property-placement](docs/rules/static-property-placement.md): Defines where React component static properties should be positioned.\n* [react/style-prop-object](docs/rules/style-prop-object.md): Enforce style prop value is an object\n* [react/void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md): Prevent passing of children to void DOM elements (e.g. `<br />`).\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## JSX-specific rules\n\n<!-- AUTO-GENERATED-CONTENT:START (JSX_RULES) -->\n* [react/jsx-boolean-value](docs/rules/jsx-boolean-value.md): Enforce boolean attributes notation in JSX (fixable)\n* [react/jsx-child-element-spacing](docs/rules/jsx-child-element-spacing.md): Ensures inline tags are not rendered without spaces between them\n* [react/jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md): Validate closing bracket location in JSX (fixable)\n* [react/jsx-closing-tag-location](docs/rules/jsx-closing-tag-location.md): Validate closing tag location for multiline JSX (fixable)\n* [react/jsx-curly-brace-presence](docs/rules/jsx-curly-brace-presence.md): Disallow unnecessary JSX expressions when literals alone are sufficient or enfore JSX expressions on literals in JSX children or attributes (fixable)\n* [react/jsx-curly-newline](docs/rules/jsx-curly-newline.md): Enforce consistent line breaks inside jsx curly (fixable)\n* [react/jsx-curly-spacing](docs/rules/jsx-curly-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes (fixable)\n* [react/jsx-equals-spacing](docs/rules/jsx-equals-spacing.md): Disallow or enforce spaces around equal signs in JSX attributes (fixable)\n* [react/jsx-filename-extension](docs/rules/jsx-filename-extension.md): Restrict file extensions that may contain JSX\n* [react/jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md): Ensure proper position of the first property in JSX (fixable)\n* [react/jsx-fragments](docs/rules/jsx-fragments.md): Enforce shorthand or standard form for React fragments (fixable)\n* [react/jsx-handler-names](docs/rules/jsx-handler-names.md): Enforce event handler naming conventions in JSX\n* [react/jsx-indent](docs/rules/jsx-indent.md): Validate JSX indentation (fixable)\n* [react/jsx-indent-props](docs/rules/jsx-indent-props.md): Validate props indentation in JSX (fixable)\n* [react/jsx-key](docs/rules/jsx-key.md): Report missing `key` props in iterators/collection literals\n* [react/jsx-max-depth](docs/rules/jsx-max-depth.md): Validate JSX maximum depth\n* [react/jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md): Limit maximum of props on a single line in JSX (fixable)\n* [react/jsx-no-bind](docs/rules/jsx-no-bind.md): Prevents usage of Function.prototype.bind and arrow functions in React component props\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md): Comments inside children section of tag should be placed inside braces\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md): Enforce no duplicate props\n* [react/jsx-no-literals](docs/rules/jsx-no-literals.md): Prevent using string literals in React component definition\n* [react/jsx-no-script-url](docs/rules/jsx-no-script-url.md): Forbid `javascript:` URLs\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md): Forbid `target=\"_blank\"` attribute without `rel=\"noreferrer\"`\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md): Disallow undeclared variables in JSX\n* [react/jsx-no-useless-fragment](docs/rules/jsx-no-useless-fragment.md): Disallow unnecessary fragments (fixable)\n* [react/jsx-one-expression-per-line](docs/rules/jsx-one-expression-per-line.md): Limit to one expression per line in JSX (fixable)\n* [react/jsx-pascal-case](docs/rules/jsx-pascal-case.md): Enforce PascalCase for user-defined JSX components\n* [react/jsx-props-no-multi-spaces](docs/rules/jsx-props-no-multi-spaces.md): Disallow multiple spaces between inline JSX props (fixable)\n* [react/jsx-props-no-spreading](docs/rules/jsx-props-no-spreading.md): Prevent JSX prop spreading\n* [react/jsx-sort-default-props](docs/rules/jsx-sort-default-props.md): Enforce default props alphabetical sorting\n* [react/jsx-sort-props](docs/rules/jsx-sort-props.md): Enforce props alphabetical sorting (fixable)\n* [react/jsx-space-before-closing](docs/rules/jsx-space-before-closing.md): Validate spacing before closing bracket in JSX (fixable)\n* [react/jsx-tag-spacing](docs/rules/jsx-tag-spacing.md): Validate whitespace in and around the JSX opening and closing brackets (fixable)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md): Prevent React to be marked as unused\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md): Prevent variables used in JSX to be marked as unused\n* [react/jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md): Prevent missing parentheses around multilines JSX (fixable)\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## Other useful plugins\n\n- Rules of Hooks: [eslint-plugin-react-hooks](https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks)\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n# Shareable configurations\n\n## Recommended\n\nThis plugin exports a `recommended` configuration that enforces React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\nThe rules enabled in this configuration are:\n\n* [react/display-name](docs/rules/display-name.md)\n* [react/jsx-key](docs/rules/jsx-key.md)\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md)\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md)\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md)\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md)\n* [react/no-children-prop](docs/rules/no-children-prop.md)\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md)\n* [react/no-deprecated](docs/rules/no-deprecated.md)\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md)\n* [react/no-is-mounted](docs/rules/no-is-mounted.md)\n* [react/no-render-return-value](docs/rules/no-render-return-value.md)\n* [react/no-string-refs](docs/rules/no-string-refs.md)\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md)\n* [react/no-unknown-property](docs/rules/no-unknown-property.md)\n* [react/prop-types](docs/rules/prop-types.md)\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)\n* [react/require-render-return](docs/rules/require-render-return.md)\n\n## All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options).\n\n# License\n\nESLint-plugin-React is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[travis-url]: https://travis-ci.org/yannickcr/eslint-plugin-react\n[travis-image]: https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg\n\n[deps-url]: https://david-dm.org/yannickcr/eslint-plugin-react\n[deps-image]: https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg\n\n[coverage-url]: https://coveralls.io/r/yannickcr/eslint-plugin-react?branch=master\n[coverage-image]: https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg\n\n[climate-url]: https://codeclimate.com/github/yannickcr/eslint-plugin-react\n[climate-image]: https://img.shields.io/codeclimate/maintainability/yannickcr/eslint-plugin-react.svg\n\n[status-url]: https://github.com/yannickcr/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/github/last-commit/yannickcr/eslint-plugin-react.svg\n\n[tidelift-url]: https://tidelift.com/subscription/pkg/npm-eslint-plugin-react?utm_source=npm-eslint-plugin-react&utm_medium=referral&utm_campaign=readme\n[tidelift-image]: https://tidelift.com/badges/github/yannickcr/eslint-plugin-react?style=flat"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1128440}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6202887}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 24997677}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 77877082}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 146366200}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 251042837}], "dependentsCount": 7253, "starsCount": 95}, "github": {"starsCount": 6443, "forksCount": 1809, "subscribersCount": 92, "issues": {"count": 2690, "openCount": 487, "distribution": {"3600": 263, "10800": 174, "32400": 246, "97200": 278, "291600": 248, "874800": 256, "2624400": 250, "7873200": 180, "23619600": 224, "70858800": 288, "212576400": 283}, "isDisabled": false}, "contributors": [{"username": "yannickcr", "commitsCount": 510}, {"username": "ljharb", "commitsCount": 179}, {"username": "jseminck", "commitsCount": 87}, {"username": "alexzherdev", "commitsCount": 66}, {"username": "jackyho112", "commitsCount": 63}, {"username": "lencioni", "commitsCount": 51}, {"username": "golopot", "commitsCount": 45}, {"username": "jomasti", "commitsCount": 44}, {"username": "sergei-startsev", "commitsCount": 20}, {"username": "pfhayes", "commitsCount": 19}, {"username": "DianaSuvorova", "commitsCount": 18}, {"username": "TSMMark", "commitsCount": 15}, {"username": "petersendidit", "commitsCount": 14}, {"username": "webOS101", "commitsCount": 13}, {"username": "CalebMorris", "commitsCount": 12}, {"username": "ThiefMaster", "commitsCount": 12}, {"username": "snowypowers", "commitsCount": 12}, {"username": "fatfisz", "commitsCount": 11}, {"username": "yepninja", "commitsCount": 11}, {"username": "brettdh", "commitsCount": 10}, {"username": "jaaberg", "commitsCount": 10}, {"username": "AlexKVal", "commitsCount": 9}, {"username": "dustinsoftware", "commitsCount": 9}, {"username": "drx", "commitsCount": 8}, {"username": "justinanastos", "commitsCount": 8}, {"username": "deecewan", "commitsCount": 7}, {"username": "lukyth", "commitsCount": 7}, {"username": "zertosh", "commitsCount": 7}, {"username": "Daniel15", "commitsCount": 6}, {"username": "RDGthree", "commitsCount": 6}, {"username": "arperry", "commitsCount": 6}, {"username": "dfilipidisz", "commitsCount": 6}, {"username": "kentor", "commitsCount": 6}, {"username": "toshi-toma", "commitsCount": 6}, {"username": "vitorbal", "commitsCount": 6}, {"username": "Cellule", "commitsCount": 5}, {"username": "EvHaus", "commitsCount": 5}, {"username": "haridusenadeera", "commitsCount": 5}, {"username": "kaykayehnn", "commitsCount": 5}, {"username": "tanmoyopenroot", "commitsCount": 5}, {"username": "yuri-sakharov", "commitsCount": 5}, {"username": "Calyhre", "commitsCount": 4}, {"username": "ColCh", "commitsCount": 4}, {"username": "Hypnosphi", "commitsCount": 4}, {"username": "b0gok", "commitsCount": 4}, {"username": "benstepp", "commitsCount": 4}, {"username": "davazp", "commitsCount": 4}, {"username": "eelyafi", "commitsCount": 4}, {"username": "ferhatelmas", "commitsCount": 4}, {"username": "gbakernet", "commitsCount": 4}, {"username": "himynameisdave", "commitsCount": 4}, {"username": "nosilleg", "commitsCount": 4}, {"username": "pawelnvk", "commitsCount": 4}, {"username": "silvenon", "commitsCount": 4}, {"username": "vedadeepta", "commitsCount": 4}, {"username": "ManThursday", "commitsCount": 3}, {"username": "Miziak", "commitsCount": 3}, {"username": "MrHen", "commitsCount": 3}, {"username": "Slumber86", "commitsCount": 3}, {"username": "amerryma", "commitsCount": 3}, {"username": "benmosher", "commitsCount": 3}, {"username": "christophehurpeau", "commitsCount": 3}, {"username": "davidyorr", "commitsCount": 3}, {"username": "dguo", "commitsCount": 3}, {"username": "dreid", "commitsCount": 3}, {"username": "ethanjgoldberg", "commitsCount": 3}, {"username": "evcohen", "commitsCount": 3}, {"username": "gfx", "commitsCount": 3}, {"username": "gitim", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "jakemmarsh", "commitsCount": 3}, {"username": "jenil94", "commitsCount": 3}, {"username": "jetpacmonkey", "commitsCount": 3}, {"username": "jkimbo", "commitsCount": 3}, {"username": "jsnajdr", "commitsCount": 3}, {"username": "louisscruz", "commitsCount": 3}, {"username": "lynxtaa", "commitsCount": 3}, {"username": "marcelmokos", "commitsCount": 3}, {"username": "mathieumg", "commitsCount": 3}, {"username": "pwmckenna", "commitsCount": 3}, {"username": "randycoulman", "commitsCount": 3}, {"username": "shmuga", "commitsCount": 3}, {"username": "wbinnssmith", "commitsCount": 3}, {"username": "wyze", "commitsCount": 3}, {"username": "xeodou", "commitsCount": 3}, {"username": "ybiquitous", "commitsCount": 3}, {"username": "abhishekdev", "commitsCount": 2}, {"username": "coryhouse", "commitsCount": 2}, {"username": "dmason30", "commitsCount": 2}, {"username": "doochik", "commitsCount": 2}, {"username": "dozoisch", "commitsCount": 2}, {"username": "guliashvili", "commitsCount": 2}, {"username": "hank121314", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "rafbgarcia", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "tom-nexudus", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}, {"username": "yacinehmito", "commitsCount": 2}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 10}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 17}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 29}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 69}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 150}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 17091, "testsSize": 1339622, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-react.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "service": "https://api.travis-ci.org/yannickcr/eslint-plugin-react.svg?branch=master", "shields": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "service": "https://david-dm.org/yannickcr/eslint-plugin-react/dev-status.svg", "shields": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "content": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "service": "https://coveralls.io/repos/yannickcr/eslint-plugin-react/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"doctrine": {"required": "^2.1.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.822, "health": 0.8181818181818181, "branding": 0.6}, "popularity": {"communityInterest": 8539, "downloadsCount": 25959027.333333332, "downloadsAcceleration": 67706.06662861494, "dependentsCount": 7253}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8035596416438994, "detail": {"quality": 0.9725353444232684, "popularity": 0.7956162999531019, "maintenance": 0.6666666666666666}}}}, {"tslint": {"analyzedAt": "2020-05-15T19:40:45.240Z", "collected": {"metadata": {"name": "tslint", "scope": "unscoped", "version": "6.1.2", "description": "An extensible static analysis linter for the TypeScript language", "keywords": ["cli", "typescript", "linter"], "date": "2020-04-27T02:21:04.328Z", "publisher": {"username": "palantir", "email": "pt-vendor-npm@palantir.com"}, "maintainers": [{"username": "palantir", "email": "pt-vendor-npm@palantir.com"}], "repository": {"type": "git", "url": "git+https://github.com/palantir/tslint.git"}, "links": {"npm": "https://www.npmjs.com/package/tslint", "homepage": "https://palantir.github.io/tslint", "repository": "https://github.com/palantir/tslint", "bugs": "https://github.com/palantir/tslint/issues"}, "license": "Apache-2.0", "dependencies": {"@babel/code-frame": "^7.0.0", "builtin-modules": "^1.1.1", "chalk": "^2.3.0", "commander": "^2.12.1", "diff": "^4.0.1", "glob": "^7.1.1", "js-yaml": "^3.13.1", "minimatch": "^3.0.4", "mkdirp": "^0.5.3", "resolve": "^1.3.2", "semver": "^5.3.0", "tslib": "^1.10.0", "tsutils": "^2.29.0"}, "devDependencies": {"@octokit/rest": "^16.24.3", "@types/babel__code-frame": "^7.0.1", "@types/chai": "^3.5.0", "@types/diff": "^3.2.0", "@types/glob": "^5.0.30", "@types/js-yaml": "^3.5.31", "@types/minimatch": "^2.0.29", "@types/mkdirp": "^0.5.2", "@types/mocha": "^5.2.6", "@types/node": "^7.0.29", "@types/resolve": "^0.0.4", "@types/rimraf": "^2.0.2", "@types/semver": "^5.3.30", "chai": "^3.5.0", "husky": "^0.14.3", "json-stringify-pretty-compact": "^1.2.0", "mocha": "^6.1.4", "npm-run-all": "^4.0.2", "nyc": "^14.1.1", "prettier": "~1.16.4", "rimraf": "^2.5.4", "ts-node": "^3.3.0", "tslint": "~5.13.0", "tslint-config-prettier": "^1.18.0", "tslint-plugin-prettier": "^2.0.1", "tslint-test-config-non-relative": "file:test/external/tslint-test-config-non-relative", "typescript": "~3.8.2", "yarn-deduplicate": "^1.1.1"}, "peerDependencies": {"typescript": ">=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >=3.0.0-dev || >= 3.1.0-dev || >= 3.2.0-dev"}, "releases": [{"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 2}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 4}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 5}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 12}, {"from": "2018-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 20}], "deprecated": "TSLint has been deprecated in favor of ESLint. Please see https://github.com/palantir/tslint/issues/4534 for more information.", "hasTestScript": true, "readme": "[![NPM version](https://badge.fury.io/js/tslint.svg)](https://badge.fury.io/js/tslint)\n[![Downloads](https://img.shields.io/npm/dm/tslint.svg)](https://npmjs.org/package/tslint)\n[![Dependency Status](https://david-dm.org/palantir/tslint.svg)](https://david-dm.org/palantir/tslint)\n[![devDependency Status](https://david-dm.org/palantir/tslint/dev-status.svg)](https://david-dm.org/palantir/tslint/?type=dev)\n[![peerDependency Status](https://david-dm.org/palantir/tslint/peer-status.svg)](https://david-dm.org/palantir/tslint/?type=peer)\n[![Circle CI](https://circleci.com/gh/palantir/tslint.svg?style=svg)](https://circleci.com/gh/palantir/tslint)\n\n# TSLint\n\n:warning: __TSLint is deprecated.__\n\n> See this issue for more details: [Roadmap: TSLint &rarr; ESLint](https://github.com/palantir/tslint/issues/4534). If you're interested in helping with the TSLint/ESLint migration, please check out our [OSS Fellowship](https://medium.com/palantir/fellowships-for-open-source-developers-3892e6b75ee1) program.\n\nTSLint is an extensible static analysis tool that checks [TypeScript](https://github.com/Microsoft/TypeScript) code for readability, maintainability, and functionality errors. It is widely supported across modern editors & build systems and can be customized with your own lint rules, configurations, and formatters.\n\nTSLint currently supports:\n\n-   an extensive set of core rules\n-   custom lint rules\n-   custom formatters (failure reporters)\n-   inline disabling and enabling of rules with comment flags in source code\n-   configuration presets (`tslint:latest`, `tslint-react`, etc.) and plugin composition\n-   automatic fixing of formatting & style violations\n-   integration with [MSBuild](https://github.com/joshuakgoldberg/tslint.msbuild), [Grunt](https://github.com/palantir/grunt-tslint), [Gulp](https://github.com/panuhorsmalahti/gulp-tslint), [Atom](https://github.com/AtomLinter/linter-tslint), [Eclipse](https://github.com/palantir/eclipse-tslint), [Emacs](https://www.flycheck.org/), [Sublime](https://packagecontrol.io/packages/SublimeLinter-contrib-tslint), [Vim](https://github.com/scrooloose/syntastic), [Visual Studio 2015](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebAnalyzer), [Visual Studio 2017](https://marketplace.visualstudio.com/items?itemName=RichNewman.TypeScriptAnalyzer), [Visual Studio code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-tslint-plugin) (alternative: use [this extension](https://marketplace.visualstudio.com/items?itemName=eg2.tslint) for TS <3.2), [WebStorm](https://www.jetbrains.com/webstorm/help/tslint.html) and [more](https://palantir.github.io/tslint/usage/third-party-tools/)\n\n## Installation & Usage\n\nPlease refer to the full installation & usage documentation on the [TSLint website](https://palantir.github.io/tslint/). There, you'll find information about\n\n-   [configuration](https://palantir.github.io/tslint/usage/configuration/),\n-   [core rules](https://palantir.github.io/tslint/rules/),\n-   [core formatters](https://palantir.github.io/tslint/formatters/), and\n-   [customization of TSLint](https://palantir.github.io/tslint/develop/custom-rules/).\n-   [inline disabling and enabling of rules with comment flags](https://palantir.github.io/tslint/usage/rule-flags/)\n\n## TSLint Playground\n\nThere is a sandbox environment for TSLint at [palantir.github.io/tslint-playground](https://palantir.github.io/tslint-playground/), which can be used to test rules and see how TSLint works. Issues can be filed against `tslint-playground` [here](https://github.com/palantir/tslint-playground).\n\n## Custom Rules & Plugins\n\n#### Custom rule sets from Palantir\n\n-   [tslint-react](https://github.com/palantir/tslint-react) - Lint rules related to React & JSX.\n-   [tslint-blueprint](https://github.com/palantir/tslint-blueprint) - Lint rules to enforce best practices with [blueprintjs libraries](https://github.com/palantir/blueprint)\n\n#### Custom rule sets from the community\n\nIf we don't have all the rules you're looking for, you can either write your own [custom rules](https://palantir.github.io/tslint/develop/custom-rules/) or use rules implementations developed by the community. The repos below are a good source of custom rules:\n\n-   [ESLint rules for TSLint](https://github.com/buzinas/tslint-eslint-rules) - Improve your TSLint with the missing ESLint Rules\n-   [tslint-microsoft-contrib](https://github.com/Microsoft/tslint-microsoft-contrib) - A set of TSLint rules used on some Microsoft projects\n-   [codelyzer](https://github.com/mgechev/codelyzer) - A set of tslint rules for static code analysis of Angular TypeScript projects\n-   [vrsource-tslint-rules](https://github.com/vrsource/vrsource-tslint-rules)\n-   [tslint-immutable](https://github.com/jonaskello/tslint-immutable) - TSLint rules to disable mutation in TypeScript\n-   [tslint-consistent-codestyle](https://github.com/ajafff/tslint-consistent-codestyle) - TSLint rules to enforce consistent code style in TypeScript\n-   [tslint-sonarts](https://github.com/SonarSource/SonarTS) - Bug-finding rules based on advanced code models to spot hard to find errors in TypeScript\n-   [tslint-clean-code](https://github.com/Glavin001/tslint-clean-code) - A set of TSLint rules inspired by the Clean Code handbook\n-   [rxjs-tslint-rules](https://github.com/cartant/rxjs-tslint-rules) - TSLint rules for RxJS\n\n## Development\n\nPrerequisites:\n\n-   `node` v7+\n-   `yarn` v1.0+\n\n#### Quick Start\n\n```bash\ngit clone git@github.com:palantir/tslint.git --config core.autocrlf=input --config core.eol=lf\nyarn\nyarn compile\nyarn test\n```"}, "npm": {"downloads": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 630658}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3332258}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 14271845}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 42800393}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 78883606}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 149365889}], "dependentsCount": 1923, "starsCount": 69}, "github": {"homepage": "http://palantir.github.io/tslint/", "starsCount": 5758, "forksCount": 942, "subscribersCount": 115, "issues": {"count": 4903, "openCount": 4, "distribution": {"3600": 572, "10800": 306, "32400": 314, "97200": 497, "291600": 441, "874800": 553, "2624400": 516, "7873200": 433, "23619600": 453, "70858800": 622, "212576400": 196}, "isDisabled": false}, "contributors": [{"username": "ashwinr", "commitsCount": 349}, {"username": "adidahiya", "commitsCount": 274}, {"username": "ajafff", "commitsCount": 253}, {"username": "andy-hanson", "commitsCount": 187}, {"username": "nchen63", "commitsCount": 146}, {"username": "gscshoyru", "commitsCount": 130}, {"username": "JKillian", "commitsCount": 71}, {"username": "JoshuaKGoldberg", "commitsCount": 68}, {"username": "DickvdBrink", "commitsCount": 49}, {"username": "andy-ms", "commitsCount": 23}, {"username": "YuichiNukiyama", "commitsCount": 20}, {"username": "IllusionMH", "commitsCount": 19}, {"username": "leeavital", "commitsCount": 19}, {"username": "chrismbarr", "commitsCount": 18}, {"username": "michaelgmiller", "commitsCount": 13}, {"username": "mprobst", "commitsCount": 13}, {"username": "weswigham", "commitsCount": 13}, {"username": "johnwiseheart", "commitsCount": 10}, {"username": "rrogowski", "commitsCount": 10}, {"username": "tanmoyopenroot", "commitsCount": 10}, {"username": "bowenni", "commitsCount": 9}, {"username": "derekcicerone", "commitsCount": 9}, {"username": "nomaed", "commitsCount": 9}, {"username": "am11", "commitsCount": 8}, {"username": "fent", "commitsCount": 8}, {"username": "alexeagle", "commitsCount": 7}, {"username": "bjornstar", "commitsCount": 7}, {"username": "rwaskiewicz", "commitsCount": 7}, {"username": "thmiceli", "commitsCount": 7}, {"username": "HamletDRC", "commitsCount": 6}, {"username": "NaridaL", "commitsCount": 6}, {"username": "ScottSWu", "commitsCount": 6}, {"username": "VincentLanglet", "commitsCount": 6}, {"username": "ericbf", "commitsCount": 6}, {"username": "mohsen1", "commitsCount": 6}, {"username": "pe8ter", "commitsCount": 6}, {"username": "reduckted", "commitsCount": 6}, {"username": "xt0rted", "commitsCount": 6}, {"username": "bencoveney", "commitsCount": 5}, {"username": "calebegg", "commitsCount": 5}, {"username": "donaldpipowitch", "commitsCount": 5}, {"username": "gtanner", "commitsCount": 5}, {"username": "mateuszwitkowski", "commitsCount": 5}, {"username": "myitcv", "commitsCount": 5}, {"username": "pablobirukov", "commitsCount": 5}, {"username": "vvakame", "commitsCount": 5}, {"username": "304NotModified", "commitsCount": 4}, {"username": "ThomasdenH", "commitsCount": 4}, {"username": "cyrilgandon", "commitsCount": 4}, {"username": "danvk", "commitsCount": 4}, {"username": "ericanderson", "commitsCount": 4}, {"username": "mmv", "commitsCount": 4}, {"username": "neoGeneva", "commitsCount": 4}, {"username": "patsissons", "commitsCount": 4}, {"username": "sbj42", "commitsCount": 4}, {"username": "wereHamster", "commitsCount": 4}, {"username": "yyoshiki41", "commitsCount": 4}, {"username": "Pajn", "commitsCount": 3}, {"username": "aboyton", "commitsCount": 3}, {"username": "aprilrd", "commitsCount": 3}, {"username": "arusakov", "commitsCount": 3}, {"username": "bolatovumar", "commitsCount": 3}, {"username": "enessoylu", "commitsCount": 3}, {"username": "fisx", "commitsCount": 3}, {"username": "fondasimone", "commitsCount": 3}, {"username": "irfanhudda", "commitsCount": 3}, {"username": "ksvitkovsky", "commitsCount": 3}, {"username": "mgechev", "commitsCount": 3}, {"username": "nikklassen", "commitsCount": 3}, {"username": "olore", "commitsCount": 3}, {"username": "timocov", "commitsCount": 3}, {"username": "vedadeepta", "commitsCount": 3}, {"username": "vgrigoriu", "commitsCount": 3}, {"username": "ColCh", "commitsCount": 2}, {"username": "DanielKucal", "commitsCount": 2}, {"username": "NN---", "commitsCount": 2}, {"username": "abierbaum", "commitsCount": 2}, {"username": "amacleay", "commitsCount": 2}, {"username": "berickson1", "commitsCount": 2}, {"username": "cheeZery", "commitsCount": 2}, {"username": "ethanresnick", "commitsCount": 2}, {"username": "guidsdo", "commitsCount": 2}, {"username": "ikatyang", "commitsCount": 2}, {"username": "jbsingh", "commitsCount": 2}, {"username": "jez9999", "commitsCount": 2}, {"username": "jmlopez-rod", "commitsCount": 2}, {"username": "joscha", "commitsCount": 2}, {"username": "keradus", "commitsCount": 2}, {"username": "lijunle", "commitsCount": 2}, {"username": "mbelsky", "commitsCount": 2}, {"username": "mitchellwills", "commitsCount": 2}, {"username": "mogzol", "commitsCount": 2}, {"username": "no23reason", "commitsCount": 2}, {"username": "nrathi", "commitsCount": 2}, {"username": "piotrgajow", "commitsCount": 2}, {"username": "saberduck", "commitsCount": 2}, {"username": "ulrichb", "commitsCount": 2}, {"username": "vilic", "commitsCount": 2}, {"username": "vmk1vmk", "commitsCount": 2}], "commits": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 9}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 15}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 84}], "statuses": [{"context": "ci/circleci: test2.4", "state": "success"}, {"context": "ci/circleci: test3.8", "state": "success"}, {"context": "ci/circleci: testNext", "state": "success"}, {"context": "ci/circleci: test2.8", "state": "success"}, {"context": "ci/circleci: test3.1", "state": "success"}, {"context": "ci/circleci: test3.4", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: testRc", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: test2.1", "state": "success"}]}, "source": {"files": {"readmeSize": 5617, "testsSize": 1252717, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/tslint.svg", "shields": "https://img.shields.io/npm/dm/tslint.svg", "content": "https://img.shields.io/npm/dm/tslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint.svg", "service": "https://david-dm.org/palantir/tslint.svg", "shields": "https://img.shields.io/david/palantir/tslint.svg", "content": "https://img.shields.io/david/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/dev-status.svg", "service": "https://david-dm.org/palantir/tslint/dev-status.svg", "shields": "https://img.shields.io/david/dev/palantir/tslint.svg", "content": "https://img.shields.io/david/dev/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/peer-status.svg", "service": "https://david-dm.org/palantir/tslint/peer-status.svg", "shields": "https://img.shields.io/david/peer/palantir/tslint.svg", "content": "https://img.shields.io/david/peer/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "peer"}}}, {"urls": {"original": "https://circleci.com/gh/palantir/tslint.svg?style=svg", "service": "https://circleci.com/gh/palantir/tslint.svg", "shields": "https://img.shields.io/circleci/project/github/palantir/tslint.svg", "content": "https://img.shields.io/circleci/project/github/palantir/tslint.json"}, "info": {"service": "circleci", "type": "build"}}], "linters": ["editorconfig", "prettier", "tslint"], "outdatedDependencies": {"builtin-modules": {"required": "^1.1.1", "stable": "3.1.0", "latest": "3.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "tslib": {"required": "^1.10.0", "stable": "2.0.0", "latest": "2.0.0"}, "chalk": {"required": "^2.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "tsutils": {"required": "^2.29.0", "stable": "3.17.1", "latest": "3.17.1"}, "commander": {"required": "^2.12.1", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 6983, "downloadsCount": 14266797.666666666, "downloadsAcceleration": 23881.7987062405, "dependentsCount": 1923}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8277910958904109, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6441337141914631, "detail": {"quality": 0.5692737693360471, "popularity": 0.685840472243405, "maintenance": 0.6665926231584492}}}}, {"express": {"analyzedAt": "2020-06-26T20:55:57.196Z", "collected": {"metadata": {"name": "express", "scope": "unscoped", "version": "4.17.1", "description": "Fast, unopinionated, minimalist web framework", "keywords": ["express", "framework", "sinatra", "web", "rest", "restful", "router", "app", "api"], "date": "2019-05-26T04:25:34.606Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "dougwilson", "email": "doug@somethingdoug.com"}, "maintainers": [{"username": "dougwilson", "email": "doug@somethingdoug.com"}, {"username": "jasnell", "email": "jasnell@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}], "contributors": [{"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Ciaran Jessup", "email": "ciaranj@gmail.com"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "Jonathan Ong", "email": "me@jongleberry.com"}, {"name": "Roman Shtylman", "email": "shtylman+expressjs@gmail.com"}, {"name": "Young Jae Sim", "email": "hanul@hanul.me"}], "repository": {"type": "git", "url": "git+https://github.com/expressjs/express.git"}, "links": {"npm": "https://www.npmjs.com/package/express", "homepage": "http://expressjs.com/", "repository": "https://github.com/expressjs/express", "bugs": "https://github.com/expressjs/express/issues"}, "license": "MIT", "dependencies": {"accepts": "~1.3.7", "array-flatten": "1.1.1", "body-parser": "1.19.0", "content-disposition": "0.5.3", "content-type": "~1.0.4", "cookie": "0.4.0", "cookie-signature": "1.0.6", "debug": "2.6.9", "depd": "~1.1.2", "encodeurl": "~1.0.2", "escape-html": "~1.0.3", "etag": "~1.8.1", "finalhandler": "~1.1.2", "fresh": "0.5.2", "merge-descriptors": "1.0.1", "methods": "~1.1.2", "on-finished": "~2.3.0", "parseurl": "~1.3.3", "path-to-regexp": "0.1.7", "proxy-addr": "~2.0.5", "qs": "6.7.0", "range-parser": "~1.2.1", "safe-buffer": "5.1.2", "send": "0.17.1", "serve-static": "1.14.1", "setprototypeof": "1.1.1", "statuses": "~1.5.0", "type-is": "~1.6.18", "utils-merge": "1.0.1", "vary": "~1.1.2"}, "devDependencies": {"after": "0.8.2", "connect-redis": "3.4.1", "cookie-parser": "~1.4.4", "cookie-session": "1.3.3", "ejs": "2.6.1", "eslint": "2.13.1", "express-session": "1.16.1", "hbs": "4.0.4", "istanbul": "0.4.5", "marked": "0.6.2", "method-override": "3.0.0", "mocha": "5.2.0", "morgan": "1.9.1", "multiparty": "4.2.1", "pbkdf2-password": "1.2.1", "should": "13.2.3", "supertest": "3.3.0", "vhost": "~3.0.2"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2359474}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10658949}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 54269761}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 160279882}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 304141717}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 566469121}], "dependentsCount": 33637, "starsCount": 2566}, "github": {"homepage": "https://expressjs.com", "starsCount": 49098, "forksCount": 8194, "subscribersCount": 1808, "issues": {"count": 4304, "openCount": 149, "distribution": {"3600": 1099, "10800": 375, "32400": 433, "97200": 478, "291600": 349, "874800": 314, "2624400": 308, "7873200": 292, "23619600": 307, "70858800": 203, "212576400": 146}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 3527}, {"username": "dougwilson", "commitsCount": 987}, {"username": "jonathanong", "commitsCount": 65}, {"username": "defunctzombie", "commitsCount": 54}, {"username": "aheckmann", "commitsCount": 49}, {"username": "slaskis", "commitsCount": 21}, {"username": "ciaranj", "commitsCount": 16}, {"username": "blakeembrey", "commitsCount": 8}, {"username": "notrab", "commitsCount": 8}, {"username": "gmethvin", "commitsCount": 6}, {"username": "rauchg", "commitsCount": 6}, {"username": "riadhchtara", "commitsCount": 6}, {"username": "hiowenluke", "commitsCount": 5}, {"username": "swrh", "commitsCount": 5}, {"username": "chainhelen", "commitsCount": 4}, {"username": "kapouer", "commitsCount": 4}, {"username": "sorribas", "commitsCount": 4}, {"username": "wesleytodd", "commitsCount": 4}, {"username": "Fishrock123", "commitsCount": 3}, {"username": "crandmck", "commitsCount": 3}, {"username": "davglass", "commitsCount": 3}, {"username": "nick", "commitsCount": 3}, {"username": "nullfirm", "commitsCount": 3}, {"username": "oliversalzburg", "commitsCount": 3}, {"username": "sakateka", "commitsCount": 3}, {"username": "Hanul", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "Zoramite", "commitsCount": 2}, {"username": "agchou", "commitsCount": 2}, {"username": "angelsanz", "commitsCount": 2}, {"username": "bartsqueezy", "commitsCount": 2}, {"username": "bdotdub", "commitsCount": 2}, {"username": "benatkin", "commitsCount": 2}, {"username": "damphat", "commitsCount": 2}, {"username": "dpatti", "commitsCount": 2}, {"username": "dshaw", "commitsCount": 2}, {"username": "eivindfjeldstad", "commitsCount": 2}, {"username": "ericf", "commitsCount": 2}, {"username": "felixbuenemann", "commitsCount": 2}, {"username": "hacksparrow", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jakeg", "commitsCount": 2}, {"username": "jonjenkins", "commitsCount": 2}, {"username": "kavu", "commitsCount": 2}, {"username": "matheusazzi", "commitsCount": 2}, {"username": "redsquirrel", "commitsCount": 2}, {"username": "relvao", "commitsCount": 2}, {"username": "roark31337", "commitsCount": 2}, {"username": "saintedlama", "commitsCount": 2}, {"username": "seanjsong", "commitsCount": 2}, {"username": "shime", "commitsCount": 2}, {"username": "tritonrc", "commitsCount": 2}, {"username": "watch-the-stars", "commitsCount": 2}, {"username": "weaver", "commitsCount": 2}, {"username": "yamatt", "commitsCount": 2}, {"username": "A1vinSmith", "commitsCount": 1}, {"username": "AScriver", "commitsCount": 1}, {"username": "HubCodes", "commitsCount": 1}, {"username": "Jianru-Lin", "commitsCount": 1}, {"username": "KoyamaSohei", "commitsCount": 1}, {"username": "Lysander6", "commitsCount": 1}, {"username": "TomHoss", "commitsCount": 1}, {"username": "WORMSS", "commitsCount": 1}, {"username": "adisrivas", "commitsCount": 1}, {"username": "amfern", "commitsCount": 1}, {"username": "amitzur", "commitsCount": 1}, {"username": "ankon", "commitsCount": 1}, {"username": "asafdav2", "commitsCount": 1}, {"username": "baslr", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chillypepper", "commitsCount": 1}, {"username": "cirosantilli", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "davidwood", "commitsCount": 1}, {"username": "estrada9166", "commitsCount": 1}, {"username": "flxwu", "commitsCount": 1}, {"username": "g-k", "commitsCount": 1}, {"username": "gireeshpunathil", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iconoeugen", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "joshuacaron", "commitsCount": 1}, {"username": "kunalspathak", "commitsCount": 1}, {"username": "loganripplinger", "commitsCount": 1}, {"username": "lpage", "commitsCount": 1}, {"username": "mwanago", "commitsCount": 1}, {"username": "nacimgoura", "commitsCount": 1}, {"username": "oztune", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "potato4d", "commitsCount": 1}, {"username": "pravdomil", "commitsCount": 1}, {"username": "seppevs", "commitsCount": 1}, {"username": "stevenanthonyrevo", "commitsCount": 1}, {"username": "thevoidf", "commitsCount": 1}, {"username": "tonyspb", "commitsCount": 1}, {"username": "tunniclm", "commitsCount": 1}, {"username": "yaman-jain", "commitsCount": 1}, {"username": "yanokenken", "commitsCount": 1}, {"username": "zuohuadong", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 12}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 376367, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 1, "outdatedDependencies": {"cookie-signature": {"required": "1.0.6", "stable": "1.1.0", "latest": "1.1.0"}, "array-flatten": {"required": "1.1.1", "stable": "3.0.0", "latest": "3.0.0"}, "setprototypeof": {"required": "1.1.1", "stable": "1.2.0", "latest": "1.2.0"}, "depd": {"required": "~1.1.2", "stable": "2.0.0", "latest": "2.0.0"}, "safe-buffer": {"required": "5.1.2", "stable": "5.2.1", "latest": "5.2.1"}, "statuses": {"required": "~1.5.0", "stable": "2.0.0", "latest": "2.0.0"}, "cookie": {"required": "0.4.0", "stable": "0.4.1", "latest": "0.4.1"}, "debug": {"required": "2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "path-to-regexp": {"required": "0.1.7", "stable": "6.1.0", "latest": "6.1.0"}, "qs": {"required": "6.7.0", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 61765, "downloadsCount": 53426627.333333336, "downloadsAcceleration": 98681.96246194828, "dependentsCount": 33637}, "maintenance": {"releasesFrequency": 0.33595890410958906, "commitsFrequency": 0.713904109589041, "openIssues": 1, "issuesDistribution": 0.30637650561177826}}, "score": {"final": 0.9022627676895811, "detail": {"quality": 0.883291673557033, "popularity": 0.9424652860530492, "maintenance": 0.8783211871540115}}}}, {"webpack-dev-server": {"analyzedAt": "2020-06-20T12:28:53.894Z", "collected": {"metadata": {"name": "webpack-dev-server", "scope": "unscoped", "version": "3.11.0", "description": "Serves a webpack app. Updates the browser on changes.", "date": "2020-05-08T15:17:35.787Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "hiroppy", "email": "hello@hiroppy.me"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-dev-server.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-dev-server", "homepage": "https://github.com/webpack/webpack-dev-server#readme", "repository": "https://github.com/webpack/webpack-dev-server", "bugs": "https://github.com/webpack/webpack-dev-server/issues"}, "license": "MIT", "dependencies": {"ansi-html": "0.0.7", "bonjour": "^3.5.0", "chokidar": "^2.1.8", "compression": "^1.7.4", "connect-history-api-fallback": "^1.6.0", "debug": "^4.1.1", "del": "^4.1.1", "express": "^4.17.1", "html-entities": "^1.3.1", "http-proxy-middleware": "0.19.1", "import-local": "^2.0.0", "internal-ip": "^4.3.0", "ip": "^1.1.5", "is-absolute-url": "^3.0.3", "killable": "^1.0.1", "loglevel": "^1.6.8", "opn": "^5.5.0", "p-retry": "^3.0.1", "portfinder": "^1.0.26", "schema-utils": "^1.0.0", "selfsigned": "^1.10.7", "semver": "^6.3.0", "serve-index": "^1.9.1", "sockjs": "0.3.20", "sockjs-client": "1.4.0", "spdy": "^4.0.2", "strip-ansi": "^3.0.1", "supports-color": "^6.1.0", "url": "^0.11.0", "webpack-dev-middleware": "^3.7.2", "webpack-log": "^2.0.0", "ws": "^6.2.1", "yargs": "^13.3.2"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/runtime": "^7.9.6", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "babel-loader": "^8.1.0", "body-parser": "^1.19.0", "commitlint-azure-pipelines-cli": "^1.0.3", "copy-webpack-plugin": "^5.1.1", "css-loader": "^2.1.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-config-webpack": "^1.2.5", "eslint-plugin-import": "^2.20.2", "execa": "^1.0.0", "file-loader": "^5.1.0", "html-loader": "^0.5.5", "html-webpack-plugin": "^3.2.0", "husky": "^4.2.5", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.5.1", "less": "^3.11.1", "less-loader": "^5.0.0", "lint-staged": "^10.2.2", "marked": "^0.8.2", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "puppeteer": "^1.20.0", "rimraf": "^3.0.2", "standard-version": "^8.0.0", "style-loader": "^1.2.1", "supertest": "^4.0.2", "tcp-port-used": "^1.0.1", "typescript": "^3.8.3", "url-loader": "^3.0.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 10}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 35}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![downloads][downloads]][npm-url]\n[![contributors][contributors]][contributors-url]\n\n# webpack-dev-server\n\nUse [webpack](https://webpack.js.org) with a development server that provides\nlive reloading. This should be used for **development only**.\n\nIt uses [webpack-dev-middleware][middleware-url] under the hood, which provides\nfast in-memory access to the webpack assets.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Usage](#usage)\n  - [With the CLI](#with-the-cli)\n  - [With NPM Scripts](#with-npm-scripts)\n  - [The Result](#the-result)\n- [Browser Support](#browser-support)\n- [Support](#support)\n- [Contributing](#contributing)\n- [Attribution](#attribution)\n- [License](#license)\n\n## Getting Started\n\nFirst things first, install the module:\n\n```console\nnpm install webpack-dev-server --save-dev\n```\n\n_Note: While you can install and run webpack-dev-server globally, we recommend\ninstalling it locally. webpack-dev-server will always use a local installation\nover a global one._\n\n## Usage\n\nThere are two main, recommended methods of using the module:\n\n### With the CLI\n\nThe easiest way to use it is with the CLI. In the directory where your\n`webpack.config.js` is, run:\n\n```console\nnode_modules/.bin/webpack-dev-server\n```\n\n_**Note**: Many CLI options are available with `webpack-dev-server`. Explore this [link](https://webpack.js.org/configuration/dev-server/)._\n\n### With NPM Scripts\n\nNPM package.json scripts are a convenient and useful means to run locally installed\nbinaries without having to be concerned about their full paths. Simply define a\nscript as such:\n\n```json\n\"scripts\": {\n  \"start:dev\": \"webpack-dev-server\"\n}\n```\n\nAnd run the following in your terminal/console:\n\n```console\nnpm run start:dev\n```\n\nNPM will automagically reference the binary in `node_modules` for you, and\nexecute the file or command.\n\n### The Result\n\nEither method will start a server instance and begin listening for connections\nfrom `localhost` on port `8080`.\n\nwebpack-dev-server is configured by default to support live-reload of files as\nyou edit your assets while the server is running.\n\nSee [**the documentation**][docs-url] for more use cases and options.\n\n## Browser Support\n\nWhile `webpack-dev-server` transpiles the client (browser) scripts to an ES5\nstate, the project only officially supports the _last two versions of major\nbrowsers_. We simply don't have the resources to support every whacky\nbrowser out there.\n\nIf you find a bug with an obscure / old browser, we would actively welcome a\nPull Request to resolve the bug.\n\n## Support\n\nWe do our best to keep Issues in the repository focused on bugs, features, and\nneeded modifications to the code for the module. Because of that, we ask users\nwith general support, \"how-to\", or \"why isn't this working\" questions to try one\nof the other support channels that are available.\n\nYour first-stop-shop for support for webpack-dev-server should by the excellent\n[documentation][docs-url] for the module. If you see an opportunity for improvement\nof those docs, please head over to the [webpack.js.org repo][wjo-url] and open a\npull request.\n\nFrom there, we encourage users to visit the [webpack Gitter chat][chat-url] and\ntalk to the fine folks there. If your quest for answers comes up dry in chat,\nhead over to [StackOverflow][stack-url] and do a quick search or open a new\nquestion. Remember; It's always much easier to answer questions that include your\n`webpack.config.js` and relevant files!\n\nIf you're twitter-savvy you can tweet [#webpack][hash-url] with your question\nand someone should be able to reach out and lend a hand.\n\nIf you have discovered a :bug:, have a feature suggestion, or would like to see\na modification, please feel free to create an issue on Github. _Note: The issue\ntemplate isn't optional, so please be sure not to remove it, and please fill it\nout completely._\n\n## Contributing\n\nWe welcome your contributions! Please have a read of [CONTRIBUTING.md](CONTRIBUTING.md) for more information on how to get involved.\n\n## Attribution\n\nThis project is heavily inspired by [peerigon/nof5](https://github.com/peerigon/nof5).\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-dev-server.svg\n[npm-url]: https://npmjs.com/package/webpack-dev-server\n[node]: https://img.shields.io/node/v/webpack-dev-server.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack/webpack-dev-server.svg\n[deps-url]: https://david-dm.org/webpack/webpack-dev-server\n[tests]: https://dev.azure.com/webpack/webpack-dev-server/_apis/build/status/webpack.webpack-dev-server?branchName=master\n[tests-url]: https://dev.azure.com/webpack/webpack-dev-server/_build/latest?definitionId=7&branchName=master\n[cover]: https://codecov.io/gh/webpack/webpack-dev-server/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/webpack-dev-server\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[docs-url]: https://webpack.js.org/configuration/dev-server/#devserver\n[hash-url]: https://twitter.com/search?q=webpack\n[middleware-url]: https://github.com/webpack/webpack-dev-middleware\n[stack-url]: https://stackoverflow.com/questions/tagged/webpack-dev-server\n[uglify-url]: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n[wjo-url]: https://github.com/webpack/webpack.js.org\n[downloads]: https://img.shields.io/npm/dm/webpack-dev-server.svg\n[contributors-url]: https://github.com/webpack/webpack-dev-server/graphs/contributors\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-dev-server.svg"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1117271}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7176498}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 30823770}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 91596860}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 164654593}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 296782926}], "dependentsCount": 6918, "starsCount": 130}, "github": {"starsCount": 6316, "forksCount": 1105, "subscribersCount": 113, "issues": {"count": 2628, "openCount": 87, "distribution": {"3600": 361, "10800": 162, "32400": 194, "97200": 295, "291600": 275, "874800": 292, "2624400": 295, "7873200": 284, "23619600": 263, "70858800": 198, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "SpaceK33z", "commitsCount": 213}, {"username": "sokra", "commitsCount": 146}, {"username": "hiroppy", "commitsCount": 79}, {"username": "evilebottnawi", "commitsCount": 71}, {"username": "renovate[bot]", "commitsCount": 53}, {"username": "shellscape", "commitsCount": 48}, {"username": "Loonride", "commitsCount": 44}, {"username": "michael-ciniawsky", "commitsCount": 23}, {"username": "EslamHiko", "commitsCount": 11}, {"username": "SimenB", "commitsCount": 4}, {"username": "jamesgeorge007", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "mrsharpoblunto", "commitsCount": 4}, {"username": "nougad", "commitsCount": 4}, {"username": "yyx990803", "commitsCount": 4}, {"username": "3846masa", "commitsCount": 3}, {"username": "anikethsaha", "commitsCount": 3}, {"username": "arnihermann", "commitsCount": 3}, {"username": "filipesilva", "commitsCount": 3}, {"username": "jhnns", "commitsCount": 3}, {"username": "stutrek", "commitsCount": 3}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 3}, {"username": "MatthiasWinkelmann", "commitsCount": 2}, {"username": "Telokis", "commitsCount": 2}, {"username": "YoshinoriN", "commitsCount": 2}, {"username": "aves84", "commitsCount": 2}, {"username": "bhavya9107", "commitsCount": 2}, {"username": "chentsulin", "commitsCount": 2}, {"username": "coltonw", "commitsCount": 2}, {"username": "crohde7707", "commitsCount": 2}, {"username": "edi9999", "commitsCount": 2}, {"username": "elliottsj", "commitsCount": 2}, {"username": "everett1992", "commitsCount": 2}, {"username": "glenjamin", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koba04", "commitsCount": 2}, {"username": "mistic", "commitsCount": 2}, {"username": "mjackson", "commitsCount": 2}, {"username": "nekolab", "commitsCount": 2}, {"username": "odinho", "commitsCount": 2}, {"username": "orteth01", "commitsCount": 2}, {"username": "phairoh", "commitsCount": 2}, {"username": "radotzki", "commitsCount": 2}, {"username": "rishabh3112", "commitsCount": 2}, {"username": "ryanwholey", "commitsCount": 2}, {"username": "snitin315", "commitsCount": 2}, {"username": "svsool", "commitsCount": 2}, {"username": "troutowicz", "commitsCount": 2}, {"username": "usefulthink", "commitsCount": 2}, {"username": "watsoncj", "commitsCount": 2}, {"username": "yoannmoinet", "commitsCount": 2}, {"username": "zeen", "commitsCount": 2}, {"username": "zhangyuang", "commitsCount": 2}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "Ionaru", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "berthertogen", "commitsCount": 1}, {"username": "cben", "commitsCount": 1}, {"username": "chaos-git", "commitsCount": 1}, {"username": "digitaljohn", "commitsCount": 1}, {"username": "dmohns", "commitsCount": 1}, {"username": "elrumordelaluz", "commitsCount": 1}, {"username": "ematipico", "commitsCount": 1}, {"username": "ferdinando-ferreira", "commitsCount": 1}, {"username": "gabemeola", "commitsCount": 1}, {"username": "greim", "commitsCount": 1}, {"username": "heygrady", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jayjun", "commitsCount": 1}, {"username": "jdb8", "commitsCount": 1}, {"username": "jkrehm", "commitsCount": 1}, {"username": "jleifeld", "commitsCount": 1}, {"username": "jlguenego", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "joonas-lahtinen", "commitsCount": 1}, {"username": "jvasseur", "commitsCount": 1}, {"username": "lukebro", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "marcofugaro", "commitsCount": 1}, {"username": "mlrawlings", "commitsCount": 1}, {"username": "niedzielski", "commitsCount": 1}, {"username": "numb86", "commitsCount": 1}, {"username": "oNaiPs", "commitsCount": 1}, {"username": "orenfromberg", "commitsCount": 1}, {"username": "patrickhrastnik", "commitsCount": 1}, {"username": "pranshuchittora", "commitsCount": 1}, {"username": "rajkeshwar", "commitsCount": 1}, {"username": "rlamana", "commitsCount": 1}, {"username": "roblan", "commitsCount": 1}, {"username": "samsam2310", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "smelukov", "commitsCount": 1}, {"username": "sottar", "commitsCount": 1}, {"username": "tarrall", "commitsCount": 1}, {"username": "trescenzi", "commitsCount": 1}, {"username": "wood1986", "commitsCount": 1}, {"username": "yi-ge", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 48}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 193}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 5925, "testsSize": 336126, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/v/webpack-dev-server.svg", "content": "https://img.shields.io/npm/v/webpack-dev-server.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack/webpack-dev-server.svg", "service": "https://david-dm.org/webpack/webpack-dev-server.svg", "shields": "https://img.shields.io/david/webpack/webpack-dev-server.svg", "content": "https://img.shields.io/david/webpack/webpack-dev-server.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "content": "https://img.shields.io/npm/dm/webpack-dev-server.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"strip-ansi": {"required": "^3.0.1", "stable": "6.0.0", "latest": "6.0.0"}, "import-local": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "p-retry": {"required": "^3.0.1", "stable": "4.2.0", "latest": "4.2.0"}, "webpack-log": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "del": {"required": "^4.1.1", "stable": "5.1.0", "latest": "5.1.0"}, "internal-ip": {"required": "^4.3.0", "stable": "6.0.0", "latest": "6.0.0"}, "opn": {"required": "^5.5.0", "stable": "6.0.0", "latest": "6.0.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "ws": {"required": "^6.2.1", "stable": "7.3.0", "latest": "7.3.0"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "http-proxy-middleware": {"required": "0.19.1", "stable": "1.0.4", "latest": "0.19.2"}, "yargs": {"required": "^13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 7764, "downloadsCount": 30532286.666666668, "downloadsAcceleration": 78999.7312975647, "dependentsCount": 6918}, "maintenance": {"releasesFrequency": 0.9561643835616438, "commitsFrequency": 0.9354520547945205, "openIssues": 1, "issuesDistribution": 0.540581968821347}}, "score": {"final": 0.9074740145659979, "detail": {"quality": 0.9375315118157597, "popularity": 0.7989126842435409, "maintenance": 0.9902717758172307}}}}, {"webpack-cli": {"analyzedAt": "2020-06-18T12:36:48.182Z", "collected": {"metadata": {"name": "webpack-cli", "scope": "unscoped", "version": "3.3.12", "description": "CLI for webpack & friends", "keywords": ["webpack", "cli", "scaffolding", "module", "bundler", "web"], "date": "2020-06-18T12:35:37.901Z", "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ematipico", "email": "my.burning@gmail.com"}, {"username": "ev1stensberg", "email": "evenstensberg@gmail.com"}, {"username": "sendilkumarn", "email": "sendilkumarn@live.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-cli", "homepage": "https://github.com/webpack/webpack-cli#readme", "repository": "https://github.com/webpack/webpack-cli", "bugs": "https://github.com/webpack/webpack-cli/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.2", "cross-spawn": "^6.0.5", "enhanced-resolve": "^4.1.1", "findup-sync": "^3.0.0", "global-modules": "^2.0.0", "import-local": "^2.0.0", "interpret": "^1.4.0", "loader-utils": "^1.4.0", "supports-color": "^6.1.0", "v8-compile-cache": "^2.1.1", "yargs": "^13.3.2"}, "devDependencies": {"@babel/preset-env": "^7.8.3", "@babel/register": "7.8.3", "@commitlint/cli": "8.1.0", "@commitlint/config-lerna-scopes": "8.0.0", "@commitlint/travis-cli": "8.0.0", "@strictsoftware/typedoc-plugin-monorepo": "0.2.1", "@types/jest": "24.9.1", "@types/node": "12.0.8", "@typescript-eslint/eslint-plugin": "1.10.2", "@typescript-eslint/parser": "1.10.2", "babel-preset-env": "^1.7.0", "babel-preset-jest": "24.9.0", "codecov": "3.5.0", "commitizen": "4.0.3", "commitlint": "^8.1.0", "commitlint-config-cz": "0.12.0", "conventional-changelog-cli": "2.0.21", "cz-customizable": "6.2.0", "eslint": "5.16.0", "eslint-config-prettier": "5.0.0", "eslint-plugin-node": "9.1.0", "eslint-plugin-prettier": "3.1.0", "esm": "3.2.25", "execa": "1.0.0", "husky": "2.4.1", "jest": "24.9.0", "jest-cli": "24.9.0", "jest-junit": "6.4.0", "lerna": "3.15.0", "lint-staged": "8.2.1", "nyc": "14.1.1", "prettier": "1.18.2", "prettier-eslint-cli": "5.0.0", "readable-stream": "3.4.0", "rimraf": "2.6.3", "schema-utils": "1.0.0", "ts-jest": "24.0.2", "ts-node": "8.3.0", "typescript": "3.5.2", "webpack": "4.x.x", "webpack-dev-server": "3.7.2"}, "peerDependencies": {"webpack": "4.x.x"}, "releases": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 6}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 15}, {"from": "2018-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 32}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n    <a href=\"https://github.com/webpack/webpack-cli\">\n        <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n    </a>\n</div>\n\n<h1 align=\"center\">webpack CLI</h1>\n\n<p align=\"center\">\n  The official CLI of webpack\n</p>\n<br>\n\n[![npm][npm]][npm-url]\n[![Build Status][build-status]][build-status-url]\n[![Build2 Status][build-status-azure]][build-status-azure-url]\n[![deps][deps]][deps-url]\n[![Code Climate][maintainability]][maintainability-url]\n[![chat on gitter][chat]][chat-url]\n[![Install Size][size]][size-url]\n[![Downloads][downloads]][downloads-url]\n[![lerna][lerna]][lerna-url]\n[![GitHub contributors][contributors]][contributors-url]\n\n-   [About](#about)\n    -   [How to install](#how-to-install)\n-   [Packages](#packages)\n    -   [Commands](#commands)\n    -   [Utilities](#utilities)\n-   [Getting started](#getting-started)\n-   [webpack CLI Scaffolds](#webpack-cli-scaffolds)\n-   [Contributing and Internal Documentation](#contributing-and-internal-documentation)\n-   [Open Collective](#open-collective)\n\n## About\n\nwebpack CLI provides a flexible set of commands for developers to increase speed when setting up a custom webpack project. As of webpack v4, webpack is not expecting a configuration file, but often developers want to create a more custom webpack configuration based on their use-cases and needs. webpack CLI addresses these needs by providing a set of tools to improve the setup of custom webpack configuration.\n\n### How to install\n\nWhen you have followed the [Getting Started](https://webpack.js.org/guides/getting-started/) guide of webpack then webpack CLI is already installed!\n\nOtherwise `npm install --save-dev webpack-cli` or `yarn add webpack-cli --dev` will install it.\n\n## Packages\n\nWe organize webpack CLI as a multi-package repository using [lerna](https://github.com/lerna/lerna). Every command has a dedicated subfolder in the `packages` Folder. Here's a summary of commands provided by the CLI.\n\n### Commands\n\nSupporting developers is an important task for webpack CLI. Thus, webpack CLI provides different commands for many common tasks.\n\n-   [`webpack-cli init`](./packages/init/README.md#webpack-cli-init) - Create a new webpack configuration.\n-   [`webpack-cli info`](./packages/info/README.md#webpack-cli-info) - Returns information related to the local environment.\n-   [`webpack-cli migrate`](./packages/migrate/README.md#webpack-cli-migrate) - Migrate project from one version to another.\n-   [`webpack-cli generate-plugin`](./packages/generate-plugin/README.md#webpack-cli-generate-plugin) - Initiate new plugin project.\n-   [`webpack-cli generate-loader`](./packages/generate-loader/README.md#webpack-cli-generate-loader) - Initiate new loader project.\n-   [`webpack-cli serve`](./packages/serve/README.md#webpack-cli-serve) - Use webpack with a development server that provides live reloading.\n\n### Utilities\n\nThe project also has several utility packages which are used by other commands\n\n-   [`utils`](./packages/utils/README.md) - Several utilities used across webpack-cli.\n-   [`generators`](./packages/generators/README.md) - Contains all webpack-cli related yeoman generators.\n-   [`webpack-scaffold`](./packages/webpack-scaffold/README.md) - Utilities to create a webpack scaffold.\n\n## Getting started\n\nWhen you have followed the [Getting Started](https://webpack.js.org/guides/getting-started/) guide of webpack then webpack CLI is already installed! Otherwise, you would need to install webpack CLI and the packages you want to use. If we want to use the `init` command to create a new `webpack.config.js` configuration file:\n\n```sh\nnpm i webpack-cli @webpack-cli/init\nnpx webpack-cli init\n```\n\nYou will be prompted for some questions about what how you want to generate your config file when running the `init` command so webpack CLI can provide the best fitting configuration.\n\n## webpack CLI Scaffolds\n\nWith v3 of webpack CLI, we introduced scaffolding as an integral part of the CLI. Our goal is to simplify the creation of webpack configurations for different purposes. Additionally, sharing such solutions with the community is beneficial and with webpack, we want to allow this. We provide `webpack-scaffold` as a utility suite for creating these scaffolds. It contains functions that could be of use for creating a scaffold yourself.\n\nYou can read more about [Scaffolding](https://webpack.js.org/guides/scaffolding), learn [How to compose a webpack-scaffold?](https://webpack.js.org/contribute/writing-a-scaffold) or generate one with [webpack-scaffold-starter](https://github.com/rishabh3112/webpack-scaffold-starter).\n\n## Contributing and Internal Documentation\n\nThe webpack family welcomes any contributor, small or big. We are happy to elaborate, guide you through the source code and find issues you might want to work on! To get started have a look at our [documentation on contributing](./.github/CONTRIBUTING.md).\n\n## Open Collective\n\nIf you like **webpack**, please consider donating to our [Open Collective](https://opencollective.com/webpack) to help us maintain it.\n\n[build-status]: https://travis-ci.org/webpack/webpack-cli.svg\n[build-status-url]: https://travis-ci.org/webpack/webpack-cli\n[build-status-azure]: https://dev.azure.com/webpack/webpack/_apis/build/status/webpack.webpack-cli\n[build-status-azure-url]: https://dev.azure.com/webpack/webpack/_build/latest?definitionId=4\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-cli.svg\n[contributors-url]: https://github.com/webpack/webpack-cli/graphs/contributors\n[deps]: https://img.shields.io/david/webpack/webpack.svg\n[deps-url]: https://david-dm.org/webpack/webpack-cli\n[downloads]: https://img.shields.io/npm/dw/webpack-cli.svg\n[downloads-url]: https://www.npmjs.com/package/webpack-cli\n[lerna]: https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg\n[lerna-url]: http://www.lernajs.io/\n[npm]: https://img.shields.io/npm/v/webpack-cli.svg\n[npm-url]: https://www.npmjs.com/package/webpack-cli\n[maintainability]: https://codeclimate.com/github/webpack/webpack-cli/badges/gpa.svg\n[maintainability-url]: https://codeclimate.com/github/webpack/webpack-cli\n[size]: https://packagephobia.now.sh/badge?p=webpack-cli\n[size-url]: https://packagephobia.now.sh/result?p=webpack-cli"}, "npm": {"downloads": [{"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 762753}, {"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 3958237}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 16981839}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 50104116}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 89221701}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 158546018}], "dependentsCount": 2655, "starsCount": 10}, "github": {"homepage": "https://webpack.js.org/api/cli", "starsCount": 1865, "forksCount": 363, "subscribersCount": 52, "issues": {"count": 1631, "openCount": 93, "distribution": {"3600": 156, "10800": 66, "32400": 148, "97200": 233, "291600": 271, "874800": 236, "2624400": 184, "7873200": 170, "23619600": 103, "70858800": 59, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "evenstensberg", "commitsCount": 449}, {"username": "dhruvdutt", "commitsCount": 123}, {"username": "rishabh3112", "commitsCount": 112}, {"username": "anshumanv", "commitsCount": 81}, {"username": "jamesgeorge007", "commitsCount": 74}, {"username": "ematipico", "commitsCount": 66}, {"username": "misterdev", "commitsCount": 60}, {"username": "Loonride", "commitsCount": 58}, {"username": "snitin315", "commitsCount": 56}, {"username": "pranshuchittora", "commitsCount": 46}, {"username": "hemal7735", "commitsCount": 39}, {"username": "anikethsaha", "commitsCount": 22}, {"username": "abenezerabebe", "commitsCount": 19}, {"username": "okonet", "commitsCount": 19}, {"username": "lakatostamas", "commitsCount": 16}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "sendilkumarn", "commitsCount": 13}, {"username": "DanielaValero", "commitsCount": 10}, {"username": "kingdaro", "commitsCount": 10}, {"username": "pksjce", "commitsCount": 8}, {"username": "evilebottnawi", "commitsCount": 7}, {"username": "godcrampy", "commitsCount": 7}, {"username": "EvsChen", "commitsCount": 6}, {"username": "DanielRuf", "commitsCount": 5}, {"username": "EugeneHlushko", "commitsCount": 5}, {"username": "nilliams", "commitsCount": 5}, {"username": "PlayMa256", "commitsCount": 4}, {"username": "bitpshr", "commitsCount": 4}, {"username": "dylanonelson", "commitsCount": 4}, {"username": "sokra", "commitsCount": 4}, {"username": "TheLarkInn", "commitsCount": 3}, {"username": "anu-007", "commitsCount": 3}, {"username": "jbottigliero", "commitsCount": 3}, {"username": "ryanclark", "commitsCount": 3}, {"username": "smelukov", "commitsCount": 3}, {"username": "avivr", "commitsCount": 2}, {"username": "himanshu010", "commitsCount": 2}, {"username": "jayjun", "commitsCount": 2}, {"username": "julioxavierr", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "AjayPoshak", "commitsCount": 1}, {"username": "AviVahl", "commitsCount": 1}, {"username": "BrooonS", "commitsCount": 1}, {"username": "CroMarmot", "commitsCount": 1}, {"username": "FadySamirSadek", "commitsCount": 1}, {"username": "Mistyyyy", "commitsCount": 1}, {"username": "NaviMarella", "commitsCount": 1}, {"username": "Parikshit-Hooda", "commitsCount": 1}, {"username": "Zarthus", "commitsCount": 1}, {"username": "aman29271", "commitsCount": 1}, {"username": "amitport", "commitsCount": 1}, {"username": "andersk", "commitsCount": 1}, {"username": "armujahid", "commitsCount": 1}, {"username": "atenni", "commitsCount": 1}, {"username": "axe312ger", "commitsCount": 1}, {"username": "azure-pipelines[bot]", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "buoyantair", "commitsCount": 1}, {"username": "chaseadamsio", "commitsCount": 1}, {"username": "connorjclark", "commitsCount": 1}, {"username": "davidstaheli", "commitsCount": 1}, {"username": "dfederm", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eavichay", "commitsCount": 1}, {"username": "fokusferit", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "harikrishnana2021", "commitsCount": 1}, {"username": "ianjsikes", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jeffin143", "commitsCount": 1}, {"username": "jevancc", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kabirbaidhya", "commitsCount": 1}, {"username": "karanjthakkar", "commitsCount": 1}, {"username": "liquidslr", "commitsCount": 1}, {"username": "manu-chroma", "commitsCount": 1}, {"username": "maraisr", "commitsCount": 1}, {"username": "mohitm15", "commitsCount": 1}, {"username": "noscripter", "commitsCount": 1}, {"username": "ohana54", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "pastak", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "peter-mouland", "commitsCount": 1}, {"username": "prod3v3loper", "commitsCount": 1}, {"username": "qkdreyer", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "robertjmason", "commitsCount": 1}, {"username": "rossipedia", "commitsCount": 1}, {"username": "sfger", "commitsCount": 1}, {"username": "stephtr", "commitsCount": 1}, {"username": "sumit-gupta91", "commitsCount": 1}, {"username": "tabrindle", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "vagisha-nidhi", "commitsCount": 1}, {"username": "xlozinguez", "commitsCount": 1}, {"username": "xxczaki", "commitsCount": 1}], "commits": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 8}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 42}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 154}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 270}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 524}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6400, "testsSize": 174483, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/webpack/webpack-cli.svg", "service": "https://api.travis-ci.org/webpack/webpack-cli.svg", "shields": "https://img.shields.io/travis/webpack/webpack-cli.svg", "content": "https://img.shields.io/travis/webpack/webpack-cli.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://img.shields.io/david/webpack/webpack.svg", "service": "https://david-dm.org/webpack/webpack.svg", "shields": "https://img.shields.io/david/webpack/webpack.svg", "content": "https://img.shields.io/david/webpack/webpack.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/webpack-cli.svg", "shields": "https://img.shields.io/npm/dw/webpack-cli.svg", "content": "https://img.shields.io/npm/dw/webpack-cli.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/npm/v/webpack-cli.svg", "shields": "https://img.shields.io/npm/v/webpack-cli.svg", "content": "https://img.shields.io/npm/v/webpack-cli.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.47, "outdatedDependencies": {"import-local": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "findup-sync": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "loader-utils": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "interpret": {"required": "^1.4.0", "stable": "2.2.0", "latest": "2.2.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "cross-spawn": {"required": "^6.0.5", "stable": "7.0.3", "latest": "7.0.3"}, "chalk": {"required": "^2.4.2", "stable": "4.1.0", "latest": "4.1.0"}, "yargs": {"required": "^13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9205, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 2388, "downloadsCount": 16701372, "downloadsAcceleration": 48248.0281392694, "dependentsCount": 2655}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.7591154069240844}}, "score": {"final": 0.8651371288610925, "detail": {"quality": 0.9282886670037345, "popularity": 0.6769960771707568, "maintenance": 0.9991482907148783}}}}, {"rollup": {"analyzedAt": "2020-06-26T19:44:57.252Z", "collected": {"metadata": {"name": "rollup", "scope": "unscoped", "version": "2.18.1", "description": "Next-generation ES module bundler", "keywords": ["modules", "bundler", "bundling", "es6", "optimizer"], "date": "2020-06-26T19:44:06.908Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "eventualbuddha", "email": "me@brian-donovan.com"}, {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup", "homepage": "https://rollupjs.org/", "repository": "https://github.com/rollup/rollup", "bugs": "https://github.com/rollup/rollup/issues"}, "license": "MIT", "dependencies": {"fsevents": "~2.1.2"}, "devDependencies": {"@rollup/plugin-alias": "^3.1.1", "@rollup/plugin-buble": "^0.21.3", "@rollup/plugin-commonjs": "^13.0.0", "@rollup/plugin-json": "^4.1.0", "@rollup/plugin-node-resolve": "^8.0.1", "@rollup/plugin-replace": "^2.3.3", "@types/micromatch": "^4.0.1", "@types/node": "^14.0.11", "@types/require-relative": "^0.8.0", "@types/signal-exit": "^3.0.0", "@types/yargs-parser": "^15.0.0", "acorn": "^7.3.1", "acorn-class-fields": "^0.3.6", "acorn-jsx": "^5.2.0", "acorn-numeric-separator": "^0.3.2", "acorn-static-class-features": "^0.2.3", "acorn-walk": "^7.1.1", "buble": "^0.20.0", "chokidar": "^3.4.0", "codecov": "^3.7.0", "colorette": "^1.2.0", "core-js": "^3.6.5", "cross-os": "^1.3.0", "date-time": "^3.1.0", "es5-shim": "^4.5.14", "es6-shim": "^0.35.5", "eslint": "^7.2.0", "eslint-plugin-import": "^2.21.1", "execa": "^4.0.2", "fixturify": "^2.1.0", "hash.js": "^1.1.7", "husky": "^4.2.5", "is-reference": "^1.2.0", "lint-staged": "^10.2.9", "locate-character": "^2.0.5", "magic-string": "^0.25.7", "markdownlint-cli": "^0.23.1", "micromatch": "^4.0.2", "mocha": "^7.2.0", "node-fetch": "^2.6.0", "nyc": "^15.1.0", "prettier": "^2.0.5", "pretty-bytes": "^5.3.0", "pretty-ms": "^7.0.0", "require-relative": "^0.8.7", "requirejs": "^2.3.6", "rollup": "^2.18.0", "rollup-plugin-license": "^2.1.0", "rollup-plugin-string": "^3.0.0", "rollup-plugin-terser": "^6.1.0", "rollup-plugin-thatworks": "^1.0.4", "rollup-plugin-typescript": "^1.0.1", "rollup-pluginutils": "^2.8.2", "sander": "^0.6.0", "shx": "^0.3.2", "signal-exit": "^3.0.3", "source-map": "^0.7.3", "source-map-support": "^0.5.19", "sourcemap-codec": "^1.4.8", "systemjs": "^6.3.2", "terser": "^4.7.0", "tslib": "^2.0.0", "tslint": "^6.1.2", "typescript": "^3.9.5", "url-parse": "^1.4.7", "yargs-parser": "^18.1.3"}, "optionalDependencies": {"fsevents": "~2.1.2"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 14}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 46}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 67}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 116}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 206}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Rollup\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/rollup\">\n    <img src=\"https://img.shields.io/npm/v/rollup.svg\" alt=\"npm version\" >\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=rollup\">\n    <img src=\"https://packagephobia.now.sh/badge?p=rollup\" alt=\"install size\" >\n  </a>\n  <a href=\"https://codecov.io/gh/rollup/rollup\">\n    <img src=\"https://codecov.io/gh/rollup/rollup/graph/badge.svg\" alt=\"code coverage\" >\n  </a>\n  <a href=\"#backers\" alt=\"sponsors on Open Collective\">\n      <img src=\"https://opencollective.com/rollup/backers/badge.svg\" alt=\"backers\" >\n  </a> \n  <a href=\"#sponsors\" alt=\"Sponsors on Open Collective\">\n    <img src=\"https://opencollective.com/rollup/sponsors/badge.svg\" alt=\"sponsors\" >\n  </a> \n  <a href=\"https://github.com/rollup/rollup/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/rollup.svg\" alt=\"license\">\n  </a>\n  <a href=\"https://david-dm.org/rollup/rollup\">\n    <img src=\"https://david-dm.org/rollup/rollup/status.svg\" alt=\"dependency status\">\n  </a>\n  <a href='https://gitter.im/rollup/rollup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge'>\n    <img src='https://badges.gitter.im/rollup/rollup.svg' alt='Join the chat at https://gitter.im/rollup/rollup'>\n  </a>\n</p>\n\n\n## Overview\n\nRollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.\n\n## Quick Start Guide\n\nInstall with `npm install --global rollup`. Rollup can be used either through a [command line interface](https://rollupjs.org/#command-line-reference) with an optional configuration file, or else through its [JavaScript API](https://rollupjs.org/guide/en/#javascript-api). Run `rollup --help` to see the available options and parameters. The starter project templates, [rollup-starter-lib](https://github.com/rollup/rollup-starter-lib) and [rollup-starter-app](https://github.com/rollup/rollup-starter-app), demonstrate common configuration options, and more detailed instructions are available throughout the [user guide](https://rollupjs.org/).\n\n### Commands\n\nThese commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js.\n\nFor browsers:\n\n```bash\n# compile to a <script> containing a self-executing function\nrollup main.js --format iife --name \"myBundle\" --file bundle.js\n```\n\nFor Node.js:\n\n```bash\n# compile to a CommonJS module\nrollup main.js --format cjs --file bundle.js\n```\n\nFor both browsers and Node.js:\n\n```bash\n# UMD format requires a bundle name\nrollup main.js --format umd --name \"myBundle\" --file bundle.js\n```\n\n## Why\n\nDeveloping software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place [isn't necessarily the answer](https://medium.com/@Rich_Harris/small-modules-it-s-not-quite-that-simple-3ca532d65de4). Unfortunately, JavaScript has not historically included this capability as a core feature in the language.\n\nThis finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. The specification is now implemented in all major browsers and in Node.js behind the --experimental-modules flag for \".mjs\" files. Rollup allows you to write your code using this module system, either outputting optimized ES modules for use in these native environments, or compiling it back down to existing supported formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to *write future-proof code*, and you also get the tremendous benefits of...\n\n## Tree Shaking\n\nIn addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project.\n\nFor example, with CommonJS, the *entire tool or library must be imported*.\n\n```js\n// import the entire utils object with CommonJS\nvar utils = require( 'utils' );\nvar query = 'Rollup';\n// use the ajax method of the utils object\nutils.ajax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBut with ES modules, instead of importing the whole `utils` object, we can just import the one `ajax` function we need:\n\n```js\n// import the ajax function with an ES import statement\nimport { ajax } from 'utils';\nvar query = 'Rollup';\n// call the ajax function\najax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBecause Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit `import` and `export` statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.\n\n## Compatibility\n\n### Importing CommonJS\n\nRollup can import existing CommonJS modules [through a plugin](https://github.com/rollup/plugins/tree/master/packages/commonjs).\n\n### Publishing ES Modules\n\nTo make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the `main` property in your `package.json` file. If your `package.json` file also has a `module` field, ES-module-aware tools like Rollup and [webpack 2](https://webpack.js.org/) will [import the ES module version](https://github.com/rollup/rollup/wiki/pkg.module) directly.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/rollup/rollup/graphs/contributors\"><img src=\"https://opencollective.com/rollup/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/rollup#backer)]\n\n<a href=\"https://opencollective.com/rollup#backers\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/rollup#sponsor)]\n\n<a href=\"https://opencollective.com/rollup/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n\n[MIT](https://github.com/rollup/rollup/blob/master/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 398794}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1701445}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8550407}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23984647}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 39814893}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 62471528}], "dependentsCount": 1921, "starsCount": 84}, "github": {"homepage": "https://rollupjs.org", "starsCount": 18423, "forksCount": 887, "subscribersCount": 270, "issues": {"count": 3641, "openCount": 198, "distribution": {"3600": 409, "10800": 183, "32400": 205, "97200": 421, "291600": 450, "874800": 521, "2624400": 354, "7873200": 324, "23619600": 368, "70858800": 363, "212576400": 43}, "isDisabled": false}, "contributors": [{"username": "lukastaegert", "commitsCount": 1298}, {"username": "Rich-Harris", "commitsCount": 1088}, {"username": "guybedford", "commitsCount": 345}, {"username": "Victorystick", "commitsCount": 134}, {"username": "TrySound", "commitsCount": 51}, {"username": "eventualbuddha", "commitsCount": 26}, {"username": "kellyselden", "commitsCount": 22}, {"username": "Andarist", "commitsCount": 20}, {"username": "Permutatrix", "commitsCount": 19}, {"username": "alan-agius4", "commitsCount": 17}, {"username": "greenkeeperio-bot", "commitsCount": 17}, {"username": "ankeetmaini", "commitsCount": 16}, {"username": "kzc", "commitsCount": 14}, {"username": "unstubbable", "commitsCount": 14}, {"username": "mbostock", "commitsCount": 13}, {"username": "nicolo-ribaudo", "commitsCount": 13}, {"username": "shellscape", "commitsCount": 9}, {"username": "mnater", "commitsCount": 8}, {"username": "LongTengDao", "commitsCount": 7}, {"username": "adrianheine", "commitsCount": 7}, {"username": "mourner", "commitsCount": 7}, {"username": "bigtimebuddy", "commitsCount": 6}, {"username": "tivac", "commitsCount": 6}, {"username": "vijithassar", "commitsCount": 6}, {"username": "Comandeer", "commitsCount": 5}, {"username": "Swatinem", "commitsCount": 5}, {"username": "btd", "commitsCount": 5}, {"username": "lukeapage", "commitsCount": 5}, {"username": "monkeywithacupcake", "commitsCount": 5}, {"username": "tjenkinson", "commitsCount": 5}, {"username": "NaridaL", "commitsCount": 4}, {"username": "NotWoods", "commitsCount": 4}, {"username": "anandthakker", "commitsCount": 4}, {"username": "caccialdo", "commitsCount": 4}, {"username": "emilos", "commitsCount": 4}, {"username": "fatfisz", "commitsCount": 4}, {"username": "hh10k", "commitsCount": 4}, {"username": "kyle1320", "commitsCount": 4}, {"username": "manucorporat", "commitsCount": 4}, {"username": "nathancahill", "commitsCount": 4}, {"username": "FredyC", "commitsCount": 3}, {"username": "alalonde", "commitsCount": 3}, {"username": "brandonocasey", "commitsCount": 3}, {"username": "christopherthielen", "commitsCount": 3}, {"username": "futurist", "commitsCount": 3}, {"username": "gkatsev", "commitsCount": 3}, {"username": "jakearchibald", "commitsCount": 3}, {"username": "joeldenning", "commitsCount": 3}, {"username": "klaascuvelier", "commitsCount": 3}, {"username": "krzksz", "commitsCount": 3}, {"username": "marijnh", "commitsCount": 3}, {"username": "operandom", "commitsCount": 3}, {"username": "roastlechon", "commitsCount": 3}, {"username": "skeggse", "commitsCount": 3}, {"username": "vanruesc", "commitsCount": 3}, {"username": "IvanSanchez", "commitsCount": 2}, {"username": "KSXGitHub", "commitsCount": 2}, {"username": "MattiasBuelens", "commitsCount": 2}, {"username": "aearly", "commitsCount": 2}, {"username": "alippai", "commitsCount": 2}, {"username": "askbeka", "commitsCount": 2}, {"username": "asmockler", "commitsCount": 2}, {"username": "bfred-it", "commitsCount": 2}, {"username": "bitjson", "commitsCount": 2}, {"username": "brianmhunt", "commitsCount": 2}, {"username": "cameron-martin", "commitsCount": 2}, {"username": "chyzwar", "commitsCount": 2}, {"username": "cprecioso", "commitsCount": 2}, {"username": "curran", "commitsCount": 2}, {"username": "danez", "commitsCount": 2}, {"username": "diervo", "commitsCount": 2}, {"username": "dmitrage", "commitsCount": 2}, {"username": "erikdesjardins", "commitsCount": 2}, {"username": "evocateur", "commitsCount": 2}, {"username": "evs-chris", "commitsCount": 2}, {"username": "giraffate", "commitsCount": 2}, {"username": "jacksonrayhamilton", "commitsCount": 2}, {"username": "jeffjewiss", "commitsCount": 2}, {"username": "keithamus", "commitsCount": 2}, {"username": "ksvitkovsky", "commitsCount": 2}, {"username": "lukeed", "commitsCount": 2}, {"username": "maranomynet", "commitsCount": 2}, {"username": "misoguy", "commitsCount": 2}, {"username": "nolanlawson", "commitsCount": 2}, {"username": "phter", "commitsCount": 2}, {"username": "rail44", "commitsCount": 2}, {"username": "stasm", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "tehvgg", "commitsCount": 2}, {"username": "tu4mo", "commitsCount": 2}, {"username": "vforvova", "commitsCount": 2}, {"username": "Heerschop", "commitsCount": 1}, {"username": "dgoldstein0", "commitsCount": 1}, {"username": "jacksteamdev", "commitsCount": 1}, {"username": "jgravois", "commitsCount": 1}, {"username": "joeljeske", "commitsCount": 1}, {"username": "luwol03", "commitsCount": 1}, {"username": "mangs", "commitsCount": 1}, {"username": "zlamma", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 48}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 174}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 276}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 507}], "statuses": [{"context": "ci/circleci: analysis", "state": "pending"}]}, "source": {"files": {"readmeSize": 8500, "testsSize": 2637719, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/rollup.svg", "shields": "https://img.shields.io/npm/v/rollup.svg", "content": "https://img.shields.io/npm/v/rollup.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/rollup.svg", "shields": "https://img.shields.io/npm/l/rollup.svg", "content": "https://img.shields.io/npm/l/rollup.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://david-dm.org/rollup/rollup/status.svg", "service": "https://david-dm.org/rollup/rollup/status.svg", "shields": "https://img.shields.io/david/rollup/rollup/status.svg", "content": "https://img.shields.io/david/rollup/rollup/status.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/rollup/rollup.svg%27", "service": "https://badges.gitter.im/rollup/rollup.svg", "shields": "https://img.shields.io/gitter/room/rollup/rollup.svg", "content": "https://img.shields.io/gitter/room/rollup/rollup.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier", "tslint"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.819, "health": 1, "branding": 1}, "popularity": {"communityInterest": 19763, "downloadsCount": 7994882.333333333, "downloadsAcceleration": 40974.418550228314, "dependentsCount": 1921}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.3274154347521145}}, "score": {"final": 0.8728625064989397, "detail": {"quality": 0.9756520015029618, "popularity": 0.7158868688590081, "maintenance": 0.9417328627068526}}}}, {"sinon": {"analyzedAt": "2020-06-07T05:32:28.191Z", "collected": {"metadata": {"name": "sinon", "scope": "unscoped", "version": "9.0.2", "description": "JavaScript test spies, stubs and mocks.", "date": "2020-04-08T11:42:23.802Z", "author": {"name": "Christian Johansen"}, "publisher": {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}, "maintainers": [{"username": "cjohansen", "email": "christian@cjohansen.no"}, {"username": "fatso83", "email": "carlerik@gmail.com"}, {"username": "mantoni", "email": "mail@maxantoni.de"}, {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}], "contributors": [{"name": "Morgan Roderick", "email": "morgan@roderick.dk"}, {"name": "Christian Johansen", "email": "christian@cjohansen.no"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Phred", "email": "fearphage@gmail.com"}, {"name": "Jonny Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "lucasfcosta", "email": "fernandesdacostalucas@gmail.com"}, {"name": "dependabot-preview[bot]", "email": "27856297+dependabot-preview[bot]@users.noreply.github.com"}, {"name": "ben hockey", "email": "neonstalwart@gmail.com"}, {"name": "takasmiley", "email": "takasmiley@live.jp"}, {"name": "Tim Fischbach", "email": "mail@timfischbach.de"}, {"name": "H\u00e5vard Wormdal H\u00f8iby", "email": "havardwhoiby@gmail.com"}, {"name": "Tim Ruffles", "email": "timruffles@googlemail.com"}, {"name": "Piotr Jamroz", "email": "piotr.jamroz@ig.com"}, {"name": "Jonathan Sokolowski", "email": "jonathan.sokolowski@gmail.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Andreas Lind", "email": "andreas@one.com"}, {"name": "William Sears", "email": "MrBigDog2U@gmail.com"}, {"name": "Tim Perry", "email": "pimterry@gmail.com"}, {"name": "Mikhail Gusarov", "email": "mikhail@hola.org"}, {"name": "Marc Redemske", "email": "marc.redemske@gmail.com"}, {"name": "Dominykas Blyz\u030ce\u0307", "email": "hello@dominykas.com"}, {"name": "Felix Geisendo\u0308rfer", "email": "felix@debuggable.com"}, {"name": "kpdecker", "email": "kpdecker@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Cory", "email": "seeflanigan@gmail.com"}, {"name": "Tobias Ebno\u0308ther", "email": "ebi@gorn.ch"}, {"name": "Luis Cardoso", "email": "luis.cardoso@feedzai.com"}, {"name": "Tristan Koch", "email": "tristan.koch@1und1.de"}, {"name": "Adam Hull", "email": "adam@hmlad.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Aleck Greenham", "email": "greenhama13@gmail.com"}, {"name": "Flarna", "email": "deb2001-github@yahoo.de"}, {"name": "Doug Orleans", "email": "dougorleans@gmail.com"}, {"name": "Martin Sander", "email": "forke@uni-bonn.de"}, {"name": "Andrew Gurinovich", "email": "altmind@gmail.com"}, {"name": "Travis Kaufman", "email": "travis.kaufman@gmail.com"}, {"name": "Viktor Zozulyak", "email": "zozulyakviktor@gmail.com"}, {"name": "Mahmoud Gamal", "email": "mgamal@babbel.com"}, {"name": "Dustin Farris", "email": "dustin@farris.io"}, {"name": "Eyal Arubas", "email": "eyalarubas@gmail.com"}, {"name": "ben fleis", "email": "ben.fleis@gmail.com"}, {"name": "Benjamin Coe", "email": "ben@yesware.com"}, {"name": "dependabot[bot]", "email": "49699333+dependabot[bot]@users.noreply.github.com"}, {"name": "Marten Lienen", "email": "marten.lienen@gmail.com"}, {"name": "GCHQDeveloper500", "email": "32099399+GCHQDeveloper500@users.noreply.github.com"}, {"name": "Carolyn Stransky", "email": "carolynstransky@gmail.com"}, {"name": "zcicala", "email": "zcicala@fitbit.com"}, {"name": "Garrick Cheung", "email": "garrick@garrickcheung.com"}, {"name": "Konrad Holowinski", "email": "konrad.holowinski@gmail.com"}, {"name": "Jay Sherby", "email": "jaysherby@gmail.com"}, {"name": "Gavin Huang", "email": "gravof@gmail.com"}, {"name": "Krzysztof Kaczor", "email": "chris@kaczor.io"}, {"name": "Roman Potashow", "email": "justgook@gmail.com"}, {"name": "Soutaro Matsumoto", "email": "matsumoto@soutaro.com"}, {"name": "Rae Liu", "email": "happyaray@gmail.com"}, {"name": "Cormac Flynn", "email": "cormac.flynn@viadeoteam.com"}, {"name": "Ming Liu", "email": "vmliu1@gmail.com"}, {"name": "Garrick", "email": "gcheung@fitbit.com"}, {"name": "George Schneeloch", "email": "gschneel@mit.edu"}, {"name": "Jmeas", "email": "jellyes2@gmail.com"}, {"name": "Robin Pedersen", "email": "robinp@snap.tv"}, {"name": "Kir Chou", "email": "note351@hotmail.com"}, {"name": "Thomas Meyer", "email": "meyertee@gmail.com"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Dmitriy Kubyshkin", "email": "grassator@gmail.com"}, {"name": "Glen Mailer", "email": "glen.mailer@bskyb.com"}, {"name": "Tim Costa", "email": "tcosta@2u.com"}, {"name": "Florent Jaby", "email": "florent.jaby@gmail.com"}, {"name": "Islam Sharabash", "email": "islam.sharabash@gmail.com"}, {"name": "Scott Andrews", "email": "scothis@gmail.com"}, {"name": "geries", "email": "geries.handal@videoplaza.com"}, {"name": "M\u00e1rton Salomv\u00e1ry", "email": "salomvary@gmail.com"}, {"name": "August Lilleaas", "email": "august.lilleaas@gmail.com"}, {"name": "Tamas Szebeni", "email": "tamas_szebeni@epam.com"}, {"name": "Adhya Pranata", "email": "adhyapranata@gmail.com"}, {"name": "\u306a\u3064\u304d", "email": "i@ntk.me"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "James Garbutt", "email": "43081j@users.noreply.github.com"}, {"name": "Nathan Friedly", "email": "nathan@nfriedly.com"}, {"name": "Nathan Mahdavi", "email": "mail@nathanmahdavi.com"}, {"name": "Nathan Perry", "email": "nateperry333@gmail.com"}, {"name": "Nicholas Hinds", "email": "hindsn@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Alex Urbano", "email": "asgaroth.belem@gmail.com"}, {"name": "Jason Karns", "email": "jason.karns@gmail.com"}, {"name": "Jeffrey Falgout", "email": "jeffrey.falgout@gmail.com"}, {"name": "Jimmy Shimizu", "email": "jimmy.shimizu@springworks.se"}, {"name": "Elad Nachmias", "email": "theman@elad.im"}, {"name": "Andrzej Porebski", "email": "fkuciapa@yahoo.com"}, {"name": "Piotr Jamr\u00f3z", "email": "pm.jamroz@gmail.com"}, {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Jonathan Freeman", "email": "freethejazz@gmail.com"}, {"name": "Emma Bukacek", "email": "emma.bukacek@gmail.com"}, {"name": "Brandon Heyer", "email": "brandonheyer@gmail.com"}, {"name": "RealZogger", "email": "49367953+RealZogger@users.noreply.github.com"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Aaron", "email": "aaron.todd@gmail.com"}, {"name": "Alexander Schmidt", "email": "alexanderschmidt1@gmail.com"}, {"name": "Evan Lloyd", "email": "evan.u.lloyd@gmail.com"}, {"name": "Farid Neshat", "email": "FaridN_SOAD@yahoo.com"}, {"name": "Josh Graham", "email": "josh@canva.com"}, {"name": "Josh Greenberger", "email": "jdgreenb@usc.edu"}, {"name": "Satoshi Nakamura", "email": "snakamura@infoteria.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Simen Bekkhus", "email": "sbekkhus91@gmail.com"}, {"name": "G.Serebryanskyi", "email": "x5x3x5x@gmail.com"}, {"name": "Spencer Elliott", "email": "me@elliottsj.com"}, {"name": "Szymon Przybylski", "email": "szymon.przybylski@gmail.com"}, {"name": "Chris Breiding", "email": "chrisbreiding@gmail.com"}, {"name": "Tarjei Huse", "email": "tarjei.huse@gmail.com"}, {"name": "Louis Brunner", "email": "louis.brunner.fr@gmail.com"}, {"name": "Christoph Guttandin", "email": "chrisguttandin@media-codings.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "Zach Bloomquist", "email": "github@chary.us"}, {"name": "Marcus H\u00fcsgen", "email": "marcus.huesgen@lusini.com"}, {"name": "Henry Tung", "email": "henryptung@gmail.com"}, {"name": "Hugo Muller", "email": "hugo.muller@free.fr"}, {"name": "blacksun1", "email": "simon@blacksun.cx"}, {"name": "Mark Stacey", "email": "mark.stacey@amecfw.com"}, {"name": "Daniel Rey Lopez", "email": "daniel.rey.lopez@automattic.com"}, {"name": "gtothesquare", "email": "me@gerieshandal.com"}, {"name": "Afnizar Nur Ghifari", "email": "afnizarnur@users.noreply.github.com"}, {"name": "Martin Hansen", "email": "martin@martinhansen.no"}, {"name": "Igor Savin", "email": "kibertoad@gmail.com"}, {"name": "Matt Kern", "email": "matt@bloomcrush.com"}, {"name": "Irina Dumitrascu", "email": "me@dira.ro"}, {"name": "mohayonao", "email": "mohayonao@gmail.com"}, {"name": "Max Calabrese", "email": "max.calabrese@ymail.com"}, {"name": "nivsherf", "email": "nivsherf@gmail.com"}, {"name": "Alex Puchades", "email": "alex94puchades@gmail.com"}, {"name": "Michael Herman", "email": "hermanmu@gmail.com"}, {"name": "David Mott", "email": "dpmott@sep.com"}, {"name": "vitalets", "email": "vitalets@yandex-team.ru"}, {"name": "Jakob J\u00f3nasson", "email": "jakob.jonasson@gmail.com"}, {"name": "yoshimura-toshihide", "email": "toshihide0105yoshimura@gmail.com"}, {"name": "James Barwell", "email": "jb@jamesbarwell.co.uk"}, {"name": "Revath S Kumar", "email": "revathskumar@users.noreply.github.com"}, {"name": "Rich Hodgkins", "email": "rhodgkins@gmail.com"}, {"name": "Rodion Vynnychenko", "email": "roddiku@gmail.com"}, {"name": "Rodrigo Garc\u00eda", "email": "yo@rodrigogarcia.me"}, {"name": "Roland Warmerdam", "email": "roland@segment.com"}, {"name": "Ruwan Pradeep Geeganage", "email": "rpgeeganage@users.noreply.github.com"}, {"name": "Ryan Roemer", "email": "ryan@loose-bits.com"}, {"name": "Ryan Wholey", "email": "rjwholey@gmail.com"}, {"name": "STuFF", "email": "nchalleil@gmail.com"}, {"name": "Sam Landfried", "email": "samlandfried@gmail.com"}, {"name": "Scott Rudiger", "email": "scottrudiger@gmail.com"}, {"name": "Sergio Cinos", "email": "scinos@atlassian.com"}, {"name": "Shaine Hatch", "email": "shainehatch@overstock.com"}, {"name": "Shawn Krisman", "email": "skrisman@nodelings"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Simone Fonda", "email": "fonda@netseven.it"}, {"name": "Sinan Bolel", "email": "1915925+sbolel@users.noreply.github.com"}, {"name": "Stefan Weil", "email": "sw@weilnetz.de"}, {"name": "Stefan du Fresne", "email": "stefan@sdufresne.info"}, {"name": "StefanSchoof", "email": "Stefan.Schoof@direkt-gruppe.de"}, {"name": "Stephen Burrows", "email": "stephen.r.burrows@gmail.com"}, {"name": "Steven Lu", "email": "stevenlu443@gmail.com"}, {"name": "Sven Fuchs", "email": "svenfuchs@artweb-design.de"}, {"name": "S\u00f8ren Enem\u00e6rke", "email": "soren.enemaerke@gmail.com"}, {"name": "T1st3", "email": "contact@tiste.org"}, {"name": "TEHEK Firefox", "email": "tehek@tehek.net"}, {"name": "Tek Nynja", "email": "github@teknynja.com"}, {"name": "The Gitter Badger", "email": "badger@gitter.im"}, {"name": "Tieme van Veen", "email": "tiemevanveen@hotmail.com"}, {"name": "Tim Branyen", "email": "tim@tabdeveloper.com"}, {"name": "Tim Li", "email": "zhengang@sine.co"}, {"name": "Tim Wienk", "email": "tim@wienk.name"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tobias Mansfield-Williams", "email": "tmansfield-williams@esri.com"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Volkan Ozcelik", "email": "volkan.ozcelik@jivesoftware.com"}, {"name": "Vynce Montgomery", "email": "vynce.montgomery@gmail.com"}, {"name": "White, Ben", "email": "ben.white@jpmchase.com"}, {"name": "Whymarrh Whitby", "email": "whymarrh.whitby@gmail.com"}, {"name": "Will Butler", "email": "will@butlerhq.com"}, {"name": "William Meleyal", "email": "w.meleyal@wollzelle.com"}, {"name": "Yury Fedorov", "email": "10244414+orlangure@users.noreply.github.com"}, {"name": "Zakir", "email": "zak.saifi7@gmail.com"}, {"name": "Zhengang Li", "email": "huttli@users.noreply.github.com"}, {"name": "andrew", "email": "andrew.derozario@online-pajak.com"}, {"name": "charlierudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "clint", "email": "clint@wealthfront.com"}, {"name": "ehmicky", "email": "ehmicky@gmail.com"}, {"name": "goligo", "email": "ich@malte.de"}, {"name": "hannes", "email": "github@htmlcss.de"}, {"name": "hashchange", "email": "heim@zeilenwechsel.de"}, {"name": "ichthala", "email": "alice.mottola@gmail.com"}, {"name": "jamestalmage", "email": "james.talmage@jrtechnical.com"}, {"name": "jshayes", "email": "justin@yolk.ai"}, {"name": "kbackowski", "email": "kbackowski@gmail.com"}, {"name": "mareq", "email": "mareq@balint.eu"}, {"name": "mbehboodian", "email": "morteza6909@gmail.com"}, {"name": "ngryman", "email": "ngryman@gmail.com"}, {"name": "niftylettuce", "email": "niftylettuce@gmail.com"}, {"name": "simonzack", "email": "simonzack@gmail.com"}, {"name": "stevesouth", "email": "stephen.south@caplin.com"}, {"name": "stoically", "email": "stoically@protonmail.com"}, {"name": "thefourtheye", "email": "thefourtheye@users.noreply.github.com"}, {"name": "till", "email": "till@php.net"}, {"name": "vsa", "email": "vsa@users.noreply.github.com"}, {"name": "wwalser", "email": "waw325@gmail.com"}, {"name": "Xiao Ma", "email": "x@medium.com"}, {"name": "AJ Ortega", "email": "ajo@google.com"}, {"name": "AdilKhn", "email": "AdilKhn@users.noreply.github.com"}, {"name": "Aditya Vohra", "email": "avohra@yelp.com"}, {"name": "Adrian Phinney", "email": "adrian.phinney@bellaliant.net"}, {"name": "Adrian Schmidt", "email": "adrian.schmidt@lime.tech"}, {"name": "Akira Matsuda", "email": "ronnie@dio.jp"}, {"name": "Aleksey Bobyr", "email": "aleksey.bobyr@beetroot.se"}, {"name": "Alex Ghiculescu", "email": "alex@tanda.co"}, {"name": "Alex Kessaris", "email": "alex@artsy.ca"}, {"name": "Alex Tran", "email": "alex@Alexs-MacBook-Pro-2.local"}, {"name": "Alexander Aivars", "email": "alex@aivars.se"}, {"name": "Alexey Kucherenko", "email": "alexei.kucherenko@gmail.com"}, {"name": "Alexsey", "email": "agat00@gmail.com"}, {"name": "Alfonso Boza", "email": "alfonso@cloud.com"}, {"name": "Ali Shakiba", "email": "ali@shakiba.me"}, {"name": "Andrew Fong", "email": "afong@slack-corp.com"}, {"name": "Andrew Leschinsky", "email": "andrew@leschinsky.com"}, {"name": "Andrew Shirley", "email": "andrew@als-bi.com"}, {"name": "Antonio D'Ettole", "email": "antonio@brandwatch.com"}, {"name": "Auclair Emmanuel", "email": "auclair.emmanuel.prestataire@sfr.com"}, {"name": "Aziz Punjani", "email": "aziz.punjani@gmail.com"}, {"name": "Ben Brostoff", "email": "ben.brostoff@gmail.com"}, {"name": "Ben Lertlumprasertkul", "email": "Ben.Lertlumprasertkul@ig.com"}, {"name": "Bing Ren", "email": "bingtimren@gmail.com"}, {"name": "Blaine Bublitz", "email": "blaine@iceddev.com"}, {"name": "Blake Embrey", "email": "hello@blakeembrey.com"}, {"name": "Blake Israel", "email": "blake.israel@gatech.edu"}, {"name": "Boshen Chen", "email": "boshenc@gmail.com"}, {"name": "Brandon Au", "email": "brandon.au@drexel.edu"}, {"name": "Brett Zamir", "email": "brettz9@yahoo.com"}, {"name": "Brian Bleakley", "email": "brianbleakley@gmail.com"}, {"name": "Brian M Hunt", "email": "brianmhunt@gmail.com"}, {"name": "Burak Yi\u011fit Kaya", "email": "ben@byk.im"}, {"name": "C. T. Lin", "email": "chentsulin@gmail.com"}, {"name": "Dan Bird", "email": "danielsbird@gmail.com"}, {"name": "Dan Peddle", "email": "dazld@users.noreply.github.com"}, {"name": "Daryl Lau", "email": "daryl@goodeggs.com"}, {"name": "David Colucci", "email": "davidanthonycolucci@gmail.com"}, {"name": "David Hayes", "email": "drhayes@users.noreply.github.com"}, {"name": "David Hunt", "email": "davidhunt@Davids-MBP.local"}, {"name": "Dean Sofer", "email": "ProLoser@users.noreply.github.com"}, {"name": "Duc Tri Le", "email": "duc1@email.tiger-inc.com"}, {"name": "Eli White", "email": "github@eli-white.com"}, {"name": "Eric Stobbart", "email": "Eric_Stobbart@comcast.com"}, {"name": "Eric Wendelin", "email": "ewendelin@twitter.com"}, {"name": "Ericat", "email": "erica.salvaneschi@gmail.com"}, {"name": "Feiyang1", "email": "plane1113@gmail.com"}, {"name": "Felipe Carasso", "email": "felipe@carassonet.org"}, {"name": "Franck Romano", "email": "fra@octo.com"}, {"name": "GProst", "email": "gprostmail@gmail.com"}, {"name": "Gabe Jackson", "email": "gj@mail.co.de"}, {"name": "Gavin Boulton", "email": "gavin.boulton@digital.cabinet-office.gov.uk"}, {"name": "Gerhard St\u00f6bich", "email": "18708370+Flarna@users.noreply.github.com"}, {"name": "Gilad Peleg", "email": "giladp007@gmail.com"}, {"name": "Giorgos Giannoutsos", "email": "contact@nuc.gr"}, {"name": "Gord Tanner", "email": "gord@tinyhippos.com"}, {"name": "Gordon L. Hempton", "email": "ghempton@gmail.com"}, {"name": "Gvozd", "email": "gvozdev.viktor@gmail.com"}, {"name": "Harry Wolff", "email": "hswolff@gmail.com"}, {"name": "HugoMuller", "email": "hmu@debian-hmu-dev"}, {"name": "Ian Lewis", "email": "IanMLewis@gmail.com"}, {"name": "Ian Thomas", "email": "ian@ian-thomas.net"}, {"name": "Irving", "email": "Irvingb232@gmail.com"}, {"name": "Jack Brown", "email": "jack.brown@mi9.com.au"}, {"name": "Jacob Page", "email": "jpage@godaddy.com"}, {"name": "Jahangir Iqbal", "email": "35706211+jiqbal48@users.noreply.github.com"}, {"name": "Jake Champion", "email": "me@jakechampion.name"}, {"name": "James Beavers", "email": "jamesjbeavers@gmail.com"}, {"name": "James M. Greene", "email": "james.m.greene@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "Jan Such\u00fd", "email": "jan.sandokan@gmail.com"}, {"name": "Jani Hartikainen", "email": "jani.hartikainen@gmail.com"}, {"name": "Jason Anderson", "email": "diurnalist@gmail.com"}, {"name": "Joakim Wimmerstedt", "email": "joakim.wimmerstedt@gmail.com"}, {"name": "Jochen Preusche", "email": "iilei@users.noreply.github.com"}, {"name": "Johann Hubert Sonntagbauer", "email": "johann.sonntagbauer@gmx.at"}, {"name": "John Bernardo", "email": "jbernardo@linkedin.com"}, {"name": "Jonathan Roitgrund", "email": "jroitgrund@gmail.com"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com"}, {"name": "Jordan Hawker", "email": "hawker.jordan@gmail.com"}, {"name": "Joseph Evans", "email": "evonsdesigns@gmail.com"}, {"name": "Joseph Spens", "email": "joseph@workmarket.com"}, {"name": "Josh Goldberg", "email": "josh@fullscreenmario.com"}, {"name": "JoshuaCWebDeveloper", "email": "coosriverjoshua1@outlook.com"}, {"name": "Juntao Zeng", "email": "31234156+juntaozeng@users.noreply.github.com"}, {"name": "Kalisa Falzone", "email": "KalisaFalzone@users.noreply.github.com"}, {"name": "Katrina Theodosopoulos", "email": "katrinaelaine6@gmail.com"}, {"name": "Keith Rogers", "email": "git@keithrogers.eu"}, {"name": "Kelly Selden", "email": "kellyselden@gmail.com"}, {"name": "Kenneth Williams", "email": "scriptdaemon@gmail.com"}, {"name": "Kev", "email": "lineus@gmail.com"}, {"name": "Kevin Bosman", "email": "kevinbosman@users.noreply.github.com"}, {"name": "Kevin Ennis", "email": "kennis84@gmail.com"}, {"name": "Kevin Turner", "email": "kevin@decipherinc.com"}, {"name": "Kim Joar Bekkelund", "email": "kjbekkelund@gmail.com"}, {"name": "Kris Kowal", "email": "kris.kowal@cixar.com"}, {"name": "Kristian", "email": "krisham87@hotmail.com"}, {"name": "Kuba Orlik", "email": "kontakt@jakub-orlik.pl"}, {"name": "Kurt Ruppel", "email": "me@kurtruppel.com"}, {"name": "Lars Thorup", "email": "lars@zealake.com"}, {"name": "LboAnn", "email": "extend1994@gmail.com"}, {"name": "LostArchives", "email": "valentin.mullet@gmail.com"}, {"name": "Lucas Vieira", "email": "vieiralucas@users.noreply.github.com"}, {"name": "Luchs", "email": "Luchs@euirc.eu"}, {"name": "Maarten Tromp", "email": "maarten@nouncy.com"}, {"name": "Marco Ramirez", "email": "marco-ramirez@bankofamerica.com"}, {"name": "Marcos Vanetta", "email": "marcos_vanetta@condenast.com"}, {"name": "Mario Pareja", "email": "mpareja@360incentives.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Mark Gibson", "email": "mgibson@adaptavist.com"}, {"name": "Mark Stickley", "email": "markstickley@users.noreply.github.com"}, {"name": "Martin Brochhaus", "email": "mbrochh@gmail.com"}, {"name": "Martin K\u00f6rner", "email": "martin.koerner@objectfab.de"}, {"name": "Matthew Gabeler-Lee", "email": "mgabeler-lee@6river.com"}, {"name": "Matthew Williams", "email": "mrwillihog@users.noreply.github.com"}, {"name": "Max Klymyshyn", "email": "klymyshyn@gmail.com"}, {"name": "Michael David Kuckuk", "email": "mdk@kuckuk.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Michael Paulukonis", "email": "xraysmalevich@gmail.com"}, {"name": "Micha\u0142 Per\u0142akowski", "email": "michal@perlakowski.pl"}, {"name": "Mike Eve", "email": "ungrim97@gmail.com"}, {"name": "Mike Flanigan", "email": "mkflan@gmail.com"}, {"name": "Mikolaj Banasik", "email": "d1sover@gmail.com"}, {"name": "MouseZero", "email": "rm@mousezero.com"}, {"name": "Mustafa Sak", "email": "mustafa.sak@1und1.de"}, {"name": "Nelson Silva", "email": "nelson.silva@inevo.pt"}, {"name": "Nicholas Stephan", "email": "nicholas.stephan@gmail.com"}, {"name": "Nicu Micleu\u0219anu", "email": "micnic90@gmail.com"}, {"name": "Nikita Litvin", "email": "deltaidea@derpy.ru"}, {"name": "Niklas Andreasson", "email": "eaglus_@hotmail.com"}, {"name": "Noam Paz", "email": "noam.paz@gmail.com"}, {"name": "Olmo Maldonado", "email": "olmo.maldonado@gmail.com"}, {"name": "Paul Barry", "email": "paul@Pauls-Air.fios-router.home"}, {"name": "Pelle Wessman", "email": "pelle@kodfabrik.se"}, {"name": "Petar Dochev", "email": "dotchev@gmail.com"}, {"name": "Peter Grainger", "email": "peter@grainger.xyz"}, {"name": "Peter Zsoldos", "email": "peter.zsoldos@gmail.com"}, {"name": "Pia Mancini", "email": "piamancini@gmail.com"}, {"name": "Piper Chester", "email": "piperchester@users.noreply.github.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Rajeesh C V", "email": "cvrajeesh@gmail.com"}, {"name": "Raul Matei", "email": "raul.matei@8x8.com"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "ReadmeCritic", "email": "frankensteinbot@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/sinonjs/sinon.git"}, "links": {"npm": "https://www.npmjs.com/package/sinon", "homepage": "https://sinonjs.org/", "repository": "https://github.com/sinonjs/sinon", "bugs": "http://github.com/sinonjs/sinon/issues"}, "license": "BSD-3-Clause", "dependencies": {"@sinonjs/commons": "^1.7.2", "@sinonjs/fake-timers": "^6.0.1", "@sinonjs/formatio": "^5.0.1", "@sinonjs/samsam": "^5.0.3", "diff": "^4.0.2", "nise": "^4.0.1", "supports-color": "^7.1.0"}, "devDependencies": {"@babel/core": "^7.8.3", "@sinonjs/referee": "^4.0.0", "babel-plugin-istanbul": "^6.0.0", "babelify": "^10.0.0", "browserify": "^16.5.0", "dependency-check": "^4.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-config-sinon": "^3.0.0", "eslint-plugin-ie11": "^1.0.0", "eslint-plugin-local-rules": "^0.1.0", "eslint-plugin-mocha": "^6.1.0", "eslint-plugin-prettier": "^3.1.0", "esm": "^3.2.25", "husky": "^4.2.1", "lint-staged": "^10.0.7", "markdownlint-cli": "^0.22.0", "mocha": "^6.2.0", "mochify": "^6.6.0", "npm-run-all": "^4.1.5", "nyc": "^15.0.0", "prettier": "^1.18.2", "proxyquire": "^2.1.3", "proxyquire-universal": "^2.1.0", "proxyquireify": "^3.2.1", "puppeteer": "^2.1.0", "rimraf": "^3.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 46}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=center>\n    <a href=\"https://sinonjs.org\" title=\"Sinon.JS\">\n        <img alt=\"Sinon.JS\" src=\"https://sinonjs.org/assets/images/logo.png\">\n    </a>\n    <br>\n    Sinon.JS\n</h1>\n\n<p align=center>\n    Standalone and test framework agnostic JavaScript test spies, stubs and mocks (pronounced \"sigh-non\", named after <a href=\"https://en.wikipedia.org/wiki/Sinon\">Sinon, the warrior</a>).\n</p>\n\n<p align=center>\n<a href=\"https://www.npmjs.com/package/sinon\"><img src=\"https://img.shields.io/npm/v/sinon.svg?style=flat\" alt=\"npm version\"></a>\n<a href=\"https://gitter.im/sinonjs/sinon?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/sinonjs/sinon\"></a>\n<a href=\"http://travis-ci.org/sinonjs/sinon\"><img src=\"https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master\" alt=\"Build status\"></a>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/buildstatus/sinonjs\" alt=\"Sauce Test Status\"/></a>\n<a href=\"https://codecov.io/gh/sinonjs/sinon\"><img src=\"https://codecov.io/gh/sinonjs/sinon/branch/master/graph/badge.svg\" alt=\"Codecov status\"></a>\n<a href=\"#backers\"><img src=\"https://opencollective.com/sinon/backers/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"#sponsors\"><img src=\"https://opencollective.com/sinon/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"https://www.npmjs.com/package/sinon\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/sinon.svg\" alt=\"npm downloads per month\"></a>\n<a href=\"https://cdnjs.com/libraries/sinon.js\" target=\"_blank\"><img src=\"https://img.shields.io/cdnjs/v/sinon.js.svg\" alt=\"CDNJS version\"></a>\n<a href=\"CODE_OF_CONDUCT.md\"><img src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\" alt=\"Contributor Covenant\" /></a>\n</p>\n\n<p align=center>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/browser-matrix/sinonjs.svg\" alt=\"Sauce Test Status\"></a>\n</p>\n\n## Better docs?\n\nDo you wish that Sinon had better documentation?\n\nSo do we!\n\nWith your support, we can improve the documentation for everyone.\n\n1. [Donate to the campaign for better documentation](https://www.gofundme.com/f/sinon-docs)\n1. Spread the word of the campaign in your companies and on social media\n\nThank you!\n\n## Compatibility\n\nFor details on compatibility and browser support, please see [`COMPATIBILITY.md`](COMPATIBILITY.md)\n\n## Installation\n\nvia [npm](https://github.com/npm/npm)\n\n    $ npm install sinon\n\nor via sinon's browser builds available for download on the [homepage](https://sinonjs.org/releases/). There are also [npm based CDNs](https://sinonjs.org/releases#npm-cdns) one can use.\n\n## Usage\n\nSee the [sinon project homepage](https://sinonjs.org/) for documentation on usage.\n\nIf you have questions that are not covered by the documentation, you can [check out the `sinon` tag on Stack Overflow](https://stackoverflow.com/questions/tagged/sinon) or drop by <a href=\"irc://irc.freenode.net:6667/sinon.js\">#sinon.js on irc.freenode.net:6667</a>.\n\nYou can also search through the [Sinon.JS mailing list archives](http://groups.google.com/group/sinonjs).\n\n## Goals\n\n* No global pollution\n* Easy to use\n* Require minimal \u201cintegration\u201d\n* Easy to embed seamlessly with any testing framework\n* Easily fake any interface\n* Ship with ready-to-use fakes for XMLHttpRequest, timers and more\n\n## Contribute?\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details on how you can contribute to Sinon.JS\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/sinon#backer)]\n\n<a href=\"https://opencollective.com/sinon/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [[Become a sponsor](https://opencollective.com/sinon#sponsor)]\n\n<a href=\"https://opencollective.com/sinon/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/29/avatar.svg\"></a>\n\n## Licence\n\nSinon.js was released under [BSD-3](LICENSE)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 127648}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2662347}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11110439}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 33775029}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 61957610}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 116476267}], "dependentsCount": 1517, "starsCount": 192}, "github": {"homepage": "https://sinonjs.org/", "starsCount": 7991, "forksCount": 754, "subscribersCount": 101, "issues": {"count": 2265, "openCount": 41, "distribution": {"3600": 280, "10800": 174, "32400": 196, "97200": 282, "291600": 269, "874800": 247, "2624400": 193, "7873200": 202, "23619600": 149, "70858800": 180, "212576400": 93}, "isDisabled": false}, "contributors": [{"username": "mroderick", "commitsCount": 765}, {"username": "cjohansen", "commitsCount": 410}, {"username": "fatso83", "commitsCount": 292}, {"username": "mantoni", "commitsCount": 180}, {"username": "fearphage", "commitsCount": 102}, {"username": "jonnyreeves", "commitsCount": 65}, {"username": "lucasfcosta", "commitsCount": 48}, {"username": "neonstalwart", "commitsCount": 32}, {"username": "pimterry", "commitsCount": 14}, {"username": "tf", "commitsCount": 14}, {"username": "havardh", "commitsCount": 12}, {"username": "ig-pj", "commitsCount": 11}, {"username": "timruffles", "commitsCount": 11}, {"username": "jsok", "commitsCount": 10}, {"username": "mgred", "commitsCount": 10}, {"username": "domenic", "commitsCount": 9}, {"username": "papandreou", "commitsCount": 9}, {"username": "MrBigDog2U", "commitsCount": 8}, {"username": "dominykas", "commitsCount": 7}, {"username": "felixge", "commitsCount": 7}, {"username": "BryanDonovan", "commitsCount": 6}, {"username": "Flarna", "commitsCount": 6}, {"username": "kpdecker", "commitsCount": 6}, {"username": "altmind", "commitsCount": 5}, {"username": "dougo", "commitsCount": 5}, {"username": "ebi", "commitsCount": 5}, {"username": "greena13", "commitsCount": 5}, {"username": "hurrymaplelad", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "lfac-pt", "commitsCount": 5}, {"username": "marvinthepa", "commitsCount": 5}, {"username": "mhmoudgmal", "commitsCount": 5}, {"username": "seeflanigan", "commitsCount": 5}, {"username": "43081j", "commitsCount": 4}, {"username": "EyalAr", "commitsCount": 4}, {"username": "GCHQDeveloper500", "commitsCount": 4}, {"username": "benfleis", "commitsCount": 4}, {"username": "carolstran", "commitsCount": 4}, {"username": "cqql", "commitsCount": 4}, {"username": "dustinfarris", "commitsCount": 4}, {"username": "holowinski", "commitsCount": 4}, {"username": "krzkaczor", "commitsCount": 4}, {"username": "traviskaufman", "commitsCount": 4}, {"username": "zuzusik", "commitsCount": 4}, {"username": "Floby", "commitsCount": 3}, {"username": "GCheung55", "commitsCount": 3}, {"username": "adhyapranata", "commitsCount": 3}, {"username": "alex94cp", "commitsCount": 3}, {"username": "augustl", "commitsCount": 3}, {"username": "brandonheyer", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "grassator", "commitsCount": 3}, {"username": "ibash", "commitsCount": 3}, {"username": "jamesplease", "commitsCount": 3}, {"username": "ming-codes", "commitsCount": 3}, {"username": "nivsherf", "commitsCount": 3}, {"username": "noisecapella", "commitsCount": 3}, {"username": "note35", "commitsCount": 3}, {"username": "raejin", "commitsCount": 3}, {"username": "ropez", "commitsCount": 3}, {"username": "salomvary", "commitsCount": 3}, {"username": "scothis", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "soutaro", "commitsCount": 3}, {"username": "tszebeni", "commitsCount": 3}, {"username": "Alexsey", "commitsCount": 2}, {"username": "DanReyLop", "commitsCount": 2}, {"username": "HugoMuller", "commitsCount": 2}, {"username": "JoshuaKGoldberg", "commitsCount": 2}, {"username": "LouisBrunner", "commitsCount": 2}, {"username": "acud", "commitsCount": 2}, {"username": "afnizarnur", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "chrisbreiding", "commitsCount": 2}, {"username": "chrisguttandin", "commitsCount": 2}, {"username": "dependabot[bot]", "commitsCount": 2}, {"username": "dpmott", "commitsCount": 2}, {"username": "emmabukacek", "commitsCount": 2}, {"username": "evan-007", "commitsCount": 2}, {"username": "flotwig", "commitsCount": 2}, {"username": "genetique-techno", "commitsCount": 2}, {"username": "gyandeeps", "commitsCount": 2}, {"username": "ifrost", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jdgreenberger", "commitsCount": 2}, {"username": "johnfakerjohn", "commitsCount": 2}, {"username": "kobbikobb", "commitsCount": 2}, {"username": "mjcrouch", "commitsCount": 2}, {"username": "mjhea0", "commitsCount": 2}, {"username": "nfriedly", "commitsCount": 2}, {"username": "nhinds", "commitsCount": 2}, {"username": "nicojs", "commitsCount": 2}, {"username": "revathskumar", "commitsCount": 2}, {"username": "rgroothuijsen", "commitsCount": 2}, {"username": "scripter-co", "commitsCount": 2}, {"username": "seppevs", "commitsCount": 2}, {"username": "servel333", "commitsCount": 2}, {"username": "sprzybylski", "commitsCount": 2}, {"username": "tarjei", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 32}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 135}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 290}], "statuses": [{"context": "ci/circleci: saucelabs", "state": "success"}, {"context": "ci/circleci: integration-tests", "state": "success"}, {"context": "ci/circleci: node-10", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: node-12", "state": "success"}, {"context": "ci/circleci: node-13", "state": "success"}, {"context": "ci/circleci: install-dependencies", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 12745, "testsSize": 647315, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sinon.svg?style=flat", "shields": "https://img.shields.io/npm/v/sinon.svg", "content": "https://img.shields.io/npm/v/sinon.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master", "service": "https://api.travis-ci.org/sinonjs/sinon.svg?branch=master", "shields": "https://img.shields.io/travis/sinonjs/sinon/master.svg", "content": "https://img.shields.io/travis/sinonjs/sinon/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/sinon.svg", "shields": "https://img.shields.io/npm/dm/sinon.svg", "content": "https://img.shields.io/npm/dm/sinon.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 9137, "downloadsCount": 11258343, "downloadsAcceleration": 19082.697640791463, "dependentsCount": 1517}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.07446915345508076}}, "score": {"final": 0.7950062827489086, "detail": {"quality": 0.9991792301164556, "popularity": 0.6727799797377085, "maintenance": 0.7422272023022113}}}}, {"style-loader": {"analyzedAt": "2020-06-07T15:29:42.697Z", "collected": {"metadata": {"name": "style-loader", "scope": "unscoped", "version": "1.2.1", "description": "style loader module for webpack", "keywords": ["webpack"], "date": "2020-04-28T13:33:15.533Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/style-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/style-loader", "homepage": "https://github.com/webpack-contrib/style-loader", "repository": "https://github.com/webpack-contrib/style-loader", "bugs": "https://github.com/webpack-contrib/style-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.6"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.4.0", "cross-env": "^7.0.2", "css-loader": "^3.5.3", "del": "^5.1.0", "del-cli": "^3.0.0", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.4.0", "jsdom": "^15.2.1", "lint-staged": "^10.1.7", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^2.0.5", "sass": "^1.26.5", "sass-loader": "^8.0.2", "semver": "^7.3.2", "standard-version": "^7.1.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11", "webpack-dev-server": "^3.10.3"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Style Loader</h1>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# style-loader\n\nInject CSS into the DOM.\n\n## Getting Started\n\nTo begin, you'll need to install `style-loader`:\n\n```console\nnpm install --save-dev style-loader\n```\n\nIt's recommended to combine `style-loader` with the [`css-loader`](https://github.com/webpack-contrib/css-loader)\n\nThen add the loader to your `webpack` config. For example:\n\n**style.css**\n\n```css\nbody {\n  background: green;\n}\n```\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|              Name               |         Type         |  Default   | Description                                              |\n| :-----------------------------: | :------------------: | :--------: | :------------------------------------------------------- |\n| [**`injectType`**](#injecttype) |      `{String}`      | `styleTag` | Allows to setup how styles will be injected into the DOM |\n| [**`attributes`**](#attributes) |      `{Object}`      |    `{}`    | Adds custom attributes to tag                            |\n|     [**`insert`**](#insert)     | `{String\\|Function}` |   `head`   | Inserts tag at the given position into the DOM           |\n|       [**`base`**](#base)       |      `{Number}`      |   `true`   | Sets module ID base (DLLPlugin)                          |\n|   [**`esModule`**](#esmodule)   |     `{Boolean}`      |  `false`   | Use ES modules syntax                                    |\n\n### `injectType`\n\nType: `String`\nDefault: `styleTag`\n\nAllows to setup how styles will be injected into the DOM.\n\nPossible values:\n\n- `styleTag`\n- `singletonStyleTag`\n- `lazyStyleTag`\n- `lazySingletonStyleTag`\n- `linkTag`\n\n#### `styleTag`\n\nAutomatically injects styles into the DOM using multiple `<style></style>`. It is **default** behaviour.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\nExample with Locals (CSS Modules):\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          // The `injectType`  option can be avoided because it is default behaviour\n          { loader: 'style-loader', options: { injectType: 'styleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `singletonStyleTag`\n\nAutomatically injects styles into the DOM using one `<style></style>`.\n\n> \u26a0 Source maps do not work.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'singletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazyStyleTag`\n\nInjects styles into the DOM using multiple `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazyStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'lazyStyleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazySingletonStyleTag`\n\nInjects styles into the DOM using one `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazySingletonStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Source maps do not work.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'lazySingletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `linkTag`\n\nInjects styles into the DOM using multiple `<link rel=\"stylesheet\" href=\"path/to/file.css\">` .\n\n> \u2139\ufe0f The loader will dynamically insert the `<link href=\"path/to/file.css\" rel=\"stylesheet\">` tag at runtime via JavaScript. You should use [MiniCssExtractPlugin](https://webpack.js.org/plugins/mini-css-extract-plugin/) if you want to include a static `<link href=\"path/to/file.css\" rel=\"stylesheet\">`.\n\n```js\nimport './styles.css';\nimport './other-styles.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.link\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'linkTag' } },\n          { loader: 'file-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<link rel=\"stylesheet\" href=\"path/to/style.css\" />\n<link rel=\"stylesheet\" href=\"path/to/other-styles.css\" />\n```\n\n### `attributes`\n\nType: `Object`\nDefault: `{}`\n\nIf defined, the `style-loader` will attach given attributes with their values on `<style>` / `<link>` element.\n\n**component.js**\n\n```js\nimport style from './file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { attributes: { id: 'id' } } },\n          { loader: 'css-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\n```html\n<style id=\"id\"></style>\n```\n\n### `insert`\n\nType: `String|Function`\nDefault: `head`\n\nBy default, the `style-loader` appends `<style>`/`<link>` elements to the end of the style target, which is the `<head>` tag of the page unless specified by `insert`.\nThis will cause CSS created by the loader to take priority over CSS already present in the target.\nYou can use other values if the standard behavior is not suitable for you, but we do not recommend doing this.\nIf you target an [iframe](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) make sure you have sufficient access rights, the styles will be injected into the content document head.\n\n#### `String`\n\nAllows to setup custom [query selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) where styles inject into the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: 'body',\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nA new `<style>`/`<link>` elements will be inserted into at bottom of `body` tag.\n\n#### `Function`\n\nAllows to override default behavior and insert styles at any position.\n\n> \u26a0 Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n> \u26a0 Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                // eslint-disable-next-line no-underscore-dangle\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                // eslint-disable-next-line no-underscore-dangle\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nInsert styles at top of `head` tag.\n\n### `base`\n\nThis setting is primarily used as a workaround for [css clashes](https://github.com/webpack-contrib/style-loader/issues/163) when using one or more [DllPlugin](https://robertknight.github.io/posts/webpack-dll-plugins/)'s. `base` allows you to prevent either the _app_'s css (or _DllPlugin2_'s css) from overwriting _DllPlugin1_'s css by specifying a css module id base which is greater than the range used by _DllPlugin1_ e.g.:\n\n**webpack.dll1.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n**webpack.dll2.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 1000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n**webpack.app.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 2000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `style-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Source maps\n\nThe loader automatically inject source maps when previous loader emit them.\nTherefore, to generate source maps, set the `sourceMap` option to `true` for the previous loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Nonce\n\nThere are two ways to work with `nonce`:\n\n- using the `attributes` option\n- using the `__webpack_nonce__` variable\n\n> \u26a0 the `attributes` option takes precedence over the `__webpack_nonce__` variable\n\n#### `attributes`\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              attributes: {\n                nonce: '12345678',\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### `__webpack_nonce__`\n\n**create-nonce.js**\n\n```js\n__webpack_nonce__ = '12345678';\n```\n\n**component.js**\n\n```js\nimport './create-nonce.js';\nimport './style.css';\n```\n\nAlternative example for `require`:\n\n**component.js**\n\n```js\n__webpack_nonce__ = '12345678';\n\nrequire('./style.css');\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### Insert styles at top\n\nInserts styles at top of `head` tag.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Insert styles before target element\n\nInserts styles before `#id` element.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertBeforeAt(element) {\n                const parent = document.querySelector('head');\n                const target = document.querySelector('#id');\n\n                const lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, target);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/style-loader.svg\n[npm-url]: https://npmjs.com/package/style-loader\n[node]: https://img.shields.io/node/v/style-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/style-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/style-loader\n[tests]: https://github.com/webpack-contrib/style-loader/workflows/style-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/style-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/style-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/style-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=style-loader\n[size-url]: https://packagephobia.now.sh/result?p=style-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 416402}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8364092}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 34709213}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 103510726}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 182129839}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 323331817}], "dependentsCount": 8707, "starsCount": 97}, "github": {"starsCount": 1438, "forksCount": 429, "subscribersCount": 28, "issues": {"count": 472, "openCount": 14, "distribution": {"3600": 108, "10800": 23, "32400": 22, "97200": 46, "291600": 31, "874800": 32, "2624400": 26, "7873200": 37, "23619600": 66, "70858800": 72, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 70}, {"username": "sokra", "commitsCount": 53}, {"username": "d3viant0ne", "commitsCount": 21}, {"username": "michael-ciniawsky", "commitsCount": 20}, {"username": "diurnalist", "commitsCount": 7}, {"username": "elsbree", "commitsCount": 6}, {"username": "ekulabuhov", "commitsCount": 3}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "jonathantneal", "commitsCount": 2}, {"username": "lydell", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "sontek", "commitsCount": 2}, {"username": "svenheden", "commitsCount": 2}, {"username": "tgriesser", "commitsCount": 2}, {"username": "2color", "commitsCount": 1}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Et3rnel", "commitsCount": 1}, {"username": "FlyingDR", "commitsCount": 1}, {"username": "KonstantinKai", "commitsCount": 1}, {"username": "Lin84", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Nouzbe", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TaopaiC", "commitsCount": 1}, {"username": "Vasikaran", "commitsCount": 1}, {"username": "ahstro", "commitsCount": 1}, {"username": "akki-jat", "commitsCount": 1}, {"username": "alexbaumgertner", "commitsCount": 1}, {"username": "amoshydra", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "arseniew", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "backjo", "commitsCount": 1}, {"username": "blainekasten", "commitsCount": 1}, {"username": "brafdlog", "commitsCount": 1}, {"username": "brandondurham", "commitsCount": 1}, {"username": "crucialfelix", "commitsCount": 1}, {"username": "danielberndt", "commitsCount": 1}, {"username": "dimitarivanov", "commitsCount": 1}, {"username": "dkaoster", "commitsCount": 1}, {"username": "dlwalsh", "commitsCount": 1}, {"username": "drawyan", "commitsCount": 1}, {"username": "edave64", "commitsCount": 1}, {"username": "erictheswift", "commitsCount": 1}, {"username": "felixmosh", "commitsCount": 1}, {"username": "gregaou", "commitsCount": 1}, {"username": "gryzzly", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iamdavidfrancis", "commitsCount": 1}, {"username": "iancw", "commitsCount": 1}, {"username": "ilanc", "commitsCount": 1}, {"username": "jaesung2061", "commitsCount": 1}, {"username": "jasonenglish", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kabab", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "krail", "commitsCount": 1}, {"username": "krrg", "commitsCount": 1}, {"username": "liady", "commitsCount": 1}, {"username": "marcogrcr", "commitsCount": 1}, {"username": "mistadikay", "commitsCount": 1}, {"username": "nickdima", "commitsCount": 1}, {"username": "oskarer", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "pleunv", "commitsCount": 1}, {"username": "savelichalex", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sirlancelot", "commitsCount": 1}, {"username": "tigt", "commitsCount": 1}, {"username": "tomasAlabes", "commitsCount": 1}, {"username": "undoZen", "commitsCount": 1}, {"username": "verticalpalette", "commitsCount": 1}, {"username": "winterbe", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}, {"username": "zachlysobey", "commitsCount": 1}, {"username": "zxcabs", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 27}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 70}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 17830, "testsSize": 301065, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/style-loader.svg", "shields": "https://img.shields.io/npm/v/style-loader.svg", "content": "https://img.shields.io/npm/v/style-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/style-loader.svg", "service": "https://david-dm.org/webpack-contrib/style-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/style-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/style-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2070, "downloadsCount": 34503575.333333336, "downloadsAcceleration": 99281.25412861494, "dependentsCount": 8707}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9163614225473866, "detail": {"quality": 0.9979687284558839, "popularity": 0.7628341617166023, "maintenance": 0.9999395640280305}}}}, {"@types/jest": {"analyzedAt": "2018-05-18T00:17:51.042Z", "collected": {"metadata": {"name": "@types/jest", "scope": "types", "version": "22.2.3", "description": "TypeScript definitions for Jest", "date": "2018-04-11T19:13:04.094Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "Ivo Stratev", "url": "https://github.com/NoHomey"}, {"name": "jwbay", "url": "https://github.com/jwbay"}, {"name": "Alexey Svetliakov", "url": "https://github.com/asvetliakov"}, {"name": "Alex Jover Morales", "url": "https://github.com/alexjoverm"}, {"name": "Allan Lukwago", "url": "https://github.com/epicallan"}, {"name": "Ika", "url": "https://github.com/ikatyang"}, {"name": "Waseem Dahman", "url": "https://github.com/wsmd"}, {"name": "Jamie Mason", "url": "https://github.com/JamieMason"}, {"name": "Douglas Duteil", "url": "https://github.com/douglasduteil"}, {"name": "Ahn", "url": "https://github.com/AhnpGit"}, {"name": "Josh Goldberg", "url": "https://github.com/joshuakgoldberg"}, {"name": "Bradley Ayers", "url": "https://github.com/bradleyayers"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fjest"}, "license": "MIT", "releases": [{"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 6}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 16}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 33}, {"from": "2016-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 62}], "readme": "# Installation\r\n> `npm install --save @types/jest`\r\n\r\n# Summary\r\nThis package contains type definitions for Jest (http://facebook.github.io/jest/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jest\r\n\r\nAdditional Details\r\n * Last updated: Wed, 11 Apr 2018 19:11:59 GMT\r\n * Dependencies: none\r\n * Global values: afterAll, afterEach, beforeAll, beforeEach, describe, expect, fail, fdescribe, fit, it, jasmine, jest, pending, spyOn, test, xdescribe, xit, xtest\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, Ivo Stratev <https://github.com/NoHomey>, jwbay <https://github.com/jwbay>, Alexey Svetliakov <https://github.com/asvetliakov>, Alex Jover Morales <https://github.com/alexjoverm>, Allan Lukwago <https://github.com/epicallan>, Ika <https://github.com/ikatyang>, Waseem Dahman <https://github.com/wsmd>, Jamie Mason <https://github.com/JamieMason>, Douglas Duteil <https://github.com/douglasduteil>, Ahn <https://github.com/AhnpGit>, Josh Goldberg <https://github.com/joshuakgoldberg>, Bradley Ayers <https://github.com/bradleyayers>."}, "npm": {"downloads": [{"from": "2018-05-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 252371}, {"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1287714}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 3675932}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 5931806}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 8436358}], "dependentsCount": 157, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 1225310.6666666667, "downloadsAcceleration": 7412.914649923898, "dependentsCount": 157}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-jest-1mk3roru7vu/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-24T17:26:06.717Z"}, "score": {"final": 0.33558204999802227, "detail": {"quality": 0.3989157997139142, "popularity": 0.283544695477661, "maintenance": 0.3333333333333333}}}}, {"request": {"analyzedAt": "2020-05-11T15:30:57.526Z", "collected": {"metadata": {"name": "request", "scope": "unscoped", "version": "2.88.2", "description": "Simplified HTTP request client.", "keywords": ["http", "simple", "util", "utility"], "date": "2020-02-11T16:35:36.122Z", "author": {"name": "Mikeal Rogers", "email": "mikeal.rogers@gmail.com", "username": "mikeal"}, "publisher": {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, "maintainers": [{"username": "fredkschott", "email": "fkschott@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, {"username": "nylen", "email": "jnylen@gmail.com"}, {"username": "simov", "email": "simeonvelichkov@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/request/request.git"}, "links": {"npm": "https://www.npmjs.com/package/request", "homepage": "https://github.com/request/request#readme", "repository": "https://github.com/request/request", "bugs": "http://github.com/request/request/issues"}, "license": "Apache-2.0", "dependencies": {"aws-sign2": "~0.7.0", "aws4": "^1.8.0", "caseless": "~0.12.0", "combined-stream": "~1.0.6", "extend": "~3.0.2", "forever-agent": "~0.6.1", "form-data": "~2.3.2", "har-validator": "~5.1.3", "http-signature": "~1.2.0", "is-typedarray": "~1.0.0", "isstream": "~0.1.2", "json-stringify-safe": "~5.0.1", "mime-types": "~2.1.19", "oauth-sign": "~0.9.0", "performance-now": "^2.1.0", "qs": "~6.5.2", "safe-buffer": "^5.1.2", "tough-cookie": "~2.5.0", "tunnel-agent": "^0.6.0", "uuid": "^3.3.2"}, "devDependencies": {"bluebird": "^3.2.1", "browserify": "^13.0.1", "browserify-istanbul": "^2.0.0", "buffer-equal": "^1.0.0", "codecov": "^3.0.4", "coveralls": "^3.0.2", "function-bind": "^1.0.2", "karma": "^3.0.0", "karma-browserify": "^5.0.1", "karma-cli": "^1.0.0", "karma-coverage": "^1.0.0", "karma-phantomjs-launcher": "^1.0.0", "karma-tap": "^3.0.1", "nyc": "^14.1.1", "phantomjs-prebuilt": "^2.1.3", "rimraf": "^2.2.8", "server-destroy": "^1.0.1", "standard": "^9.0.0", "tape": "^4.6.0", "taper": "^0.5.0"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}], "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Deprecated!\n\nAs of Feb 11th 2020, request is fully deprecated. No new changes are expected land. In fact, none have landed for some time.\n\nFor more information about why request is deprecated and possible alternatives refer to\n[this issue](https://github.com/request/request/issues/3142).\n\n# Request - Simplified HTTP client\n\n[![npm package](https://nodei.co/npm/request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/request/)\n\n[![Build status](https://img.shields.io/travis/request/request/master.svg?style=flat-square)](https://travis-ci.org/request/request)\n[![Coverage](https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square)](https://codecov.io/github/request/request?branch=master)\n[![Coverage](https://img.shields.io/coveralls/request/request.svg?style=flat-square)](https://coveralls.io/r/request/request)\n[![Dependency Status](https://img.shields.io/david/request/request.svg?style=flat-square)](https://david-dm.org/request/request)\n[![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)\n[![Gitter](https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square)](https://gitter.im/request/request?utm_source=badge)\n\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```js\nconst request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});\n```\n\n\n## Table of contents\n\n- [Streaming](#streaming)\n- [Promises & Async/Await](#promises--asyncawait)\n- [Forms](#forms)\n- [HTTP Authentication](#http-authentication)\n- [Custom HTTP Headers](#custom-http-headers)\n- [OAuth Signing](#oauth-signing)\n- [Proxies](#proxies)\n- [Unix Domain Sockets](#unix-domain-sockets)\n- [TLS/SSL Protocol](#tlsssl-protocol)\n- [Support for HAR 1.2](#support-for-har-12)\n- [**All Available Options**](#requestoptions-callback)\n\nRequest also offers [convenience methods](#convenience-methods) like\n`request.defaults` and `request.post`, and there are\nlots of [usage examples](#examples) and several\n[debugging techniques](#debugging).\n\n\n---\n\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```js\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don\u2019t already provide one).\n\n```js\nfs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```js\nrequest.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))\n```\n\nRequest emits a \"response\" event when a response is received. The `response` argument will be an instance of [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n```js\nrequest\n  .get('http://google.com/img.png')\n  .on('response', function(response) {\n    console.log(response.statusCode) // 200\n    console.log(response.headers['content-type']) // 'image/png'\n  })\n  .pipe(request.put('http://mysite.com/img.png'))\n```\n\nTo easily handle errors when streaming requests, listen to the `error` event before piping:\n\n```js\nrequest\n  .get('http://mysite.com/doodle.png')\n  .on('error', function(err) {\n    console.error(err)\n  })\n  .pipe(fs.createWriteStream('doodle.png'))\n```\n\nNow let\u2019s get fancy.\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    if (req.method === 'PUT') {\n      req.pipe(request.put('http://mysite.com/doodle.png'))\n    } else if (req.method === 'GET' || req.method === 'HEAD') {\n      request.get('http://mysite.com/doodle.png').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    const x = request('http://mysite.com/doodle.png')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in \u2265 Node 0.5.x you can do one line proxying. :)\n\n```js\nreq.pipe(request('http://mysite.com/doodle.png')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```js\nconst r = request.defaults({'proxy':'http://localproxy.com'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    r.get('http://google.com/doodle.png').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Promises & Async/Await\n\n`request` supports both streaming and callback interfaces natively. If you'd like `request` to return a Promise instead, you can use an alternative interface wrapper for `request`. These wrappers can be useful if you prefer to work with Promises, or if you'd like to use `async`/`await` in ES2017.\n\nSeveral alternative interfaces are provided by the request team, including:\n- [`request-promise`](https://github.com/request/request-promise) (uses [Bluebird](https://github.com/petkaantonov/bluebird) Promises)\n- [`request-promise-native`](https://github.com/request/request-promise-native) (uses native Promises)\n- [`request-promise-any`](https://github.com/request/request-promise-any) (uses [any-promise](https://www.npmjs.com/package/any-promise) Promises)\n\nAlso, [`util.promisify`](https://nodejs.org/api/util.html#util_util_promisify_original), which is available from Node.js v8.0 can be used to convert a regular function that takes a callback to return a promise instead.\n\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\n\n#### application/x-www-form-urlencoded (URL-Encoded Forms)\n\nURL-encoded forms are simple.\n\n```js\nrequest.post('http://service.com/upload', {form:{key:'value'}})\n// or\nrequest.post('http://service.com/upload').form({key:'value'})\n// or\nrequest.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })\n```\n\n\n#### multipart/form-data (Multipart Form Uploads)\n\nFor `multipart/form-data` we use the [form-data](https://github.com/form-data/form-data) library by [@felixge](https://github.com/felixge). For the most cases, you can pass your upload form data via the `formData` option.\n\n\n```js\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});\n```\n\nFor advanced cases, you can access the form-data object itself via `r.form()`. This can be modified until the request is fired on the next cycle of the event-loop. (Note that this calling `form()` will clear the currently set form data for that request.)\n\n```js\n// NOTE: Advanced use-case, for normal use see 'formData' usage above\nconst r = request.post('http://service.com/upload', function optionalCallback(err, httpResponse, body) {...})\nconst form = r.form();\nform.append('my_field', 'my_value');\nform.append('my_buffer', Buffer.from([1, 2, 3]));\nform.append('custom_file', fs.createReadStream(__dirname + '/unicycle.jpg'), {filename: 'unicycle.jpg'});\n```\nSee the [form-data README](https://github.com/form-data/form-data) for more information & examples.\n\n\n#### multipart/related\n\nSome variations in different HTTP implementations require a newline/CRLF before, after, or both before and after the boundary of a `multipart/related` request (using the multipart option). This has been observed in the .NET WebAPI version 4.0. You can turn on a boundary preambleCRLF or postamble by passing them as `true` to your request options.\n\n```js\n  request({\n    method: 'PUT',\n    preambleCRLF: true,\n    postambleCRLF: true,\n    uri: 'http://service.com/upload',\n    multipart: [\n      {\n        'content-type': 'application/json',\n        body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n      },\n      { body: 'I am an attachment' },\n      { body: fs.createReadStream('image.png') }\n    ],\n    // alternatively pass an object containing additional options\n    multipart: {\n      chunked: false,\n      data: [\n        {\n          'content-type': 'application/json',\n          body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        },\n        { body: 'I am an attachment' }\n      ]\n    }\n  },\n  function (error, response, body) {\n    if (error) {\n      return console.error('upload failed:', error);\n    }\n    console.log('Upload successful!  Server responded with:', body);\n  })\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## HTTP Authentication\n\n```js\nrequest.get('http://some.server.com/').auth('username', 'password', false);\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n// or\nrequest.get('http://some.server.com/').auth(null, null, true, 'bearerToken');\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'bearer': 'bearerToken'\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values:\n\n- `user` || `username`\n- `pass` || `password`\n- `sendImmediately` (optional)\n- `bearer` (optional)\n\nThe method form takes parameters\n`auth(username, password, sendImmediately, bearer)`.\n\n`sendImmediately` defaults to `true`, which causes a basic or bearer\nauthentication header to be sent. If `sendImmediately` is `false`, then\n`request` will retry with a proper authentication header after receiving a\n`401` response from the server (which must contain a `WWW-Authenticate` header\nindicating the required authentication method).\n\nNote that you can also specify basic authentication using the URL itself, as\ndetailed in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). Simply pass the\n`user:password` before the host with an `@` sign:\n\n```js\nconst username = 'username',\n    password = 'password',\n    url = 'http://' + username + ':' + password + '@some.server.com';\n\nrequest({url}, function (error, response, body) {\n   // Do more stuff with 'body' here\n});\n```\n\nDigest authentication is supported, but it only works with `sendImmediately`\nset to `false`; otherwise `request` will send basic authentication on the\ninitial request, which will probably cause the request to fail.\n\nBearer authentication is supported, and is activated when the `bearer` value is\navailable. The value may be either a `String` or a `Function` returning a\n`String`. Using a function to supply the bearer token is particularly useful if\nused in conjunction with `defaults` to allow a single function to supply the\nlast known token at the time of sending a request, or to compute one on the fly.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```js\nconst request = require('request');\n\nconst options = {\n  url: 'https://api.github.com/repos/request/request',\n  headers: {\n    'User-Agent': 'request'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    console.log(info.stargazers_count + \" Stars\");\n    console.log(info.forks_count + \" Forks\");\n  }\n}\n\nrequest(options, callback);\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## OAuth Signing\n\n[OAuth version 1.0](https://tools.ietf.org/html/rfc5849) is supported. The\ndefault signing algorithm is\n[HMAC-SHA1](https://tools.ietf.org/html/rfc5849#section-3.4.2):\n\n```js\n// OAuth1.0 - 3-legged server side flow (Twitter example)\n// step 1\nconst qs = require('querystring')\n  , oauth =\n    { callback: 'http://mysite.com/callback/'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = 'https://api.twitter.com/oauth/request_token'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n\n  // step 2\n  const req_data = qs.parse(body)\n  const uri = 'https://api.twitter.com/oauth/authenticate'\n    + '?' + qs.stringify({oauth_token: req_data.oauth_token})\n  // redirect the user to the authorize uri\n\n  // step 3\n  // after the user is redirected back to your server\n  const auth_data = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: auth_data.oauth_token\n      , token_secret: req_data.oauth_token_secret\n      , verifier: auth_data.oauth_verifier\n      }\n    , url = 'https://api.twitter.com/oauth/access_token'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    // ready to make signed requests on behalf of the user\n    const perm_data = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_data.oauth_token\n        , token_secret: perm_data.oauth_token_secret\n        }\n      , url = 'https://api.twitter.com/1.1/users/show.json'\n      , qs =\n        { screen_name: perm_data.screen_name\n        , user_id: perm_data.user_id\n        }\n      ;\n    request.get({url:url, oauth:oauth, qs:qs, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\nFor [RSA-SHA1 signing](https://tools.ietf.org/html/rfc5849#section-3.4.3), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'RSA-SHA1'`\n* Instead of `consumer_secret`, specify a `private_key` string in\n  [PEM format](http://how2ssl.com/articles/working_with_pem_files/)\n\nFor [PLAINTEXT signing](http://oauth.net/core/1.0/#anchor22), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'PLAINTEXT'`\n\nTo send OAuth parameters via query params or in a post body as described in The\n[Consumer Request Parameters](http://oauth.net/core/1.0/#consumer_req_param)\nsection of the oauth1 spec:\n* Pass `transport_method : 'query'` or `transport_method : 'body'` in the OAuth\n  options object.\n* `transport_method` defaults to `'header'`\n\nTo use [Request Body Hash](https://oauth.googlecode.com/svn/spec/ext/body_hash/1.0/oauth-bodyhash.html) you can either\n* Manually generate the body hash and pass it as a string `body_hash: '...'`\n* Automatically generate the body hash by passing `body_hash: true`\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Proxies\n\nIf you specify a `proxy` option, then the request (and any subsequent\nredirects) will be sent via a connection to the proxy server.\n\nIf your endpoint is an `https` url, and you are using a proxy, then\nrequest will send a `CONNECT` request to the proxy server *first*, and\nthen use the supplied connection to connect to the endpoint.\n\nThat is, first it will make a request like:\n\n```\nHTTP/1.1 CONNECT endpoint-server.com:80\nHost: proxy-server.com\nUser-Agent: whatever user agent you specify\n```\n\nand then the proxy server make a TCP connection to `endpoint-server`\non port `80`, and return a response that looks like:\n\n```\nHTTP/1.1 200 OK\n```\n\nAt this point, the connection is left open, and the client is\ncommunicating directly with the `endpoint-server.com` machine.\n\nSee [the wikipedia page on HTTP Tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel)\nfor more information.\n\nBy default, when proxying `http` traffic, request will simply make a\nstandard proxied `http` request. This is done by making the `url`\nsection of the initial line of the request a fully qualified url to\nthe endpoint.\n\nFor example, it will make a single request that looks like:\n\n```\nHTTP/1.1 GET http://endpoint-server.com/some-url\nHost: proxy-server.com\nOther-Headers: all go here\n\nrequest body or whatever\n```\n\nBecause a pure \"http over http\" tunnel offers no additional security\nor other features, it is generally simpler to go with a\nstraightforward HTTP proxy in this case. However, if you would like\nto force a tunneling proxy, you may set the `tunnel` option to `true`.\n\nYou can also make a standard proxied `http` request by explicitly setting\n`tunnel : false`, but **note that this will allow the proxy to see the traffic\nto/from the destination server**.\n\nIf you are using a tunneling proxy, you may set the\n`proxyHeaderWhiteList` to share certain headers with the proxy.\n\nYou can also set the `proxyHeaderExclusiveList` to share certain\nheaders only with the proxy and not with destination host.\n\nBy default, this set is:\n\n```\naccept\naccept-charset\naccept-encoding\naccept-language\naccept-ranges\ncache-control\ncontent-encoding\ncontent-language\ncontent-length\ncontent-location\ncontent-md5\ncontent-range\ncontent-type\nconnection\ndate\nexpect\nmax-forwards\npragma\nproxy-authorization\nreferer\nte\ntransfer-encoding\nuser-agent\nvia\n```\n\nNote that, when using a tunneling proxy, the `proxy-authorization`\nheader and any headers from custom `proxyHeaderExclusiveList` are\n*never* sent to the endpoint server, but only to the proxy server.\n\n\n### Controlling proxy behaviour using environment variables\n\nThe following environment variables are respected by `request`:\n\n * `HTTP_PROXY` / `http_proxy`\n * `HTTPS_PROXY` / `https_proxy`\n * `NO_PROXY` / `no_proxy`\n\nWhen `HTTP_PROXY` / `http_proxy` are set, they will be used to proxy non-SSL requests that do not have an explicit `proxy` configuration option present. Similarly, `HTTPS_PROXY` / `https_proxy` will be respected for SSL requests that do not have an explicit `proxy` configuration option. It is valid to define a proxy in one of the environment variables, but then override it for a specific request, using the `proxy` configuration option. Furthermore, the `proxy` configuration option can be explicitly set to false / null to opt out of proxying altogether for that request.\n\n`request` is also aware of the `NO_PROXY`/`no_proxy` environment variables. These variables provide a granular way to opt out of proxying, on a per-host basis. It should contain a comma separated list of hosts to opt out of proxying. It is also possible to opt of proxying when a particular destination port is used. Finally, the variable may be set to `*` to opt out of the implicit proxy configuration of the other environment variables.\n\nHere's some examples of valid `no_proxy` values:\n\n * `google.com` - don't proxy HTTP/HTTPS requests to Google.\n * `google.com:443` - don't proxy HTTPS requests to Google, but *do* proxy HTTP requests to Google.\n * `google.com:443, yahoo.com:80` - don't proxy HTTPS requests to Google, and don't proxy HTTP requests to Yahoo!\n * `*` - ignore `https_proxy`/`http_proxy` environment variables altogether.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## UNIX Domain Sockets\n\n`request` supports making requests to [UNIX Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket). To make one, use the following URL scheme:\n\n```js\n/* Pattern */ 'http://unix:SOCKET:PATH'\n/* Example */ request.get('http://unix:/absolute/path/to/unix.socket:/request/path')\n```\n\nNote: The `SOCKET` path is assumed to be absolute to the root of the host file system.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## TLS/SSL Protocol\n\nTLS/SSL Protocol options, such as `cert`, `key` and `passphrase`, can be\nset directly in `options` object, in the `agentOptions` property of the `options` object, or even in `https.globalAgent.options`. Keep in mind that, although `agentOptions` allows for a slightly wider range of configurations, the recommended way is via `options` object directly, as using `agentOptions` or `https.globalAgent.options` would not be applied in the same way in proxied environments (as data travels through a TLS connection instead of an http/https agent).\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , caFile = path.resolve(__dirname, 'ssl/ca.cert.pem')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    cert: fs.readFileSync(certFile),\n    key: fs.readFileSync(keyFile),\n    passphrase: 'password',\n    ca: fs.readFileSync(caFile)\n};\n\nrequest.get(options);\n```\n\n### Using `options.agentOptions`\n\nIn the example below, we call an API that requires client side SSL certificate\n(in PEM format) with passphrase protected private key (in PEM format) and disable the SSLv3 protocol:\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        cert: fs.readFileSync(certFile),\n        key: fs.readFileSync(keyFile),\n        // Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:\n        // pfx: fs.readFileSync(pfxFilePath),\n        passphrase: 'password',\n        securityOptions: 'SSL_OP_NO_SSLv3'\n    }\n};\n\nrequest.get(options);\n```\n\nIt is able to force using SSLv3 only by specifying `secureProtocol`:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        secureProtocol: 'SSLv3_method'\n    }\n});\n```\n\nIt is possible to accept other certificates than those signed by generally allowed Certificate Authorities (CAs).\nThis can be useful, for example,  when using self-signed certificates.\nTo require a different root certificate, you can specify the signing CA by adding the contents of the CA's certificate file to the `agentOptions`.\nThe certificate the domain presents must be signed by the root certificate specified:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: fs.readFileSync('ca.cert.pem')\n    }\n});\n```\n\nThe `ca` value can be an array of certificates, in the event you have a private or internal corporate public-key infrastructure hierarchy. For example, if you want to connect to https://api.some-server.com which presents a key chain consisting of:\n1. its own public key, which is signed by:\n2. an intermediate \"Corp Issuing Server\", that is in turn signed by: \n3. a root CA \"Corp Root CA\";\n\nyou can configure your request as follows:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: [\n          fs.readFileSync('Corp Issuing Server.pem'),\n          fs.readFileSync('Corp Root CA.pem')\n        ]\n    }\n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Support for HAR 1.2\n\nThe `options.har` property will override the values: `url`, `method`, `qs`, `headers`, `form`, `formData`, `body`, `json`, as well as construct multipart data and read files from disk when `request.postData.params[].fileName` is present without a matching `value`.\n\nA validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.\n\n```js\n  const request = require('request')\n  request({\n    // will be ignored\n    method: 'GET',\n    uri: 'http://www.google.com',\n\n    // HTTP Archive Request Object\n    har: {\n      url: 'http://www.mockbin.com/har',\n      method: 'POST',\n      headers: [\n        {\n          name: 'content-type',\n          value: 'application/x-www-form-urlencoded'\n        }\n      ],\n      postData: {\n        mimeType: 'application/x-www-form-urlencoded',\n        params: [\n          {\n            name: 'foo',\n            value: 'bar'\n          },\n          {\n            name: 'hello',\n            value: 'world'\n          }\n        ]\n      }\n    }\n  })\n\n  // a POST request will be sent to http://www.mockbin.com\n  // with body an application/x-www-form-urlencoded body:\n  // foo=bar&hello=world\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n- `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n- `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain. If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.\n- `method` - http method (default: `\"GET\"`)\n- `headers` - http headers (default: `{}`)\n\n---\n\n- `qs` - object containing querystring values to be appended to the `uri`\n- `qsParseOptions` - object containing options to pass to the [qs.parse](https://github.com/hapijs/qs#parsing-objects) method. Alternatively pass options to the [querystring.parse](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_parse_str_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`\n- `qsStringifyOptions` - object containing options to pass to the [qs.stringify](https://github.com/hapijs/qs#stringifying) method. Alternatively pass options to the  [querystring.stringify](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`. For example, to change the way arrays are converted to query strings using the `qs` module pass the `arrayFormat` option with one of `indices|brackets|repeat`\n- `useQuerystring` - if true, use `querystring` to stringify and parse\n  querystrings, otherwise use `qs` (default: `false`). Set this option to\n  `true` if you need arrays to be serialized as `foo=bar&foo=baz` instead of the\n  default `foo[0]=bar&foo[1]=baz`.\n\n---\n\n- `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer`, `String` or `ReadStream`. If `json` is `true`, then `body` must be a JSON-serializable object.\n- `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded` header. When passed no options, a `FormData` instance is returned (and is piped to request). See \"Forms\" section above.\n- `formData` - data to pass for a `multipart/form-data` request. See\n  [Forms](#forms) section above.\n- `multipart` - array of objects which contain their own headers and `body`\n  attributes. Sends a `multipart/related` request. See [Forms](#forms) section\n  above.\n  - Alternatively you can pass in an object `{chunked: false, data: []}` where\n    `chunked` is used to specify whether the request is sent in\n    [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding)\n    In non-chunked requests, data items with body streams are not allowed.\n- `preambleCRLF` - append a newline/CRLF before the boundary of your `multipart/form-data` request.\n- `postambleCRLF` - append a newline/CRLF at the end of the boundary of your `multipart/form-data` request.\n- `json` - sets `body` to JSON representation of value and adds `Content-type: application/json` header. Additionally, parses the response body as JSON.\n- `jsonReviver` - a [reviver function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) that will be passed to `JSON.parse()` when parsing a JSON response body.\n- `jsonReplacer` - a [replacer function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that will be passed to `JSON.stringify()` when stringifying a JSON request body.\n\n---\n\n- `auth` - a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional). See documentation above.\n- `oauth` - options for OAuth HMAC-SHA1 signing. See documentation above.\n- `hawk` - options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n- `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`, and optionally `session` (note that this only works for services that require session as part of the canonical string). Also requires the property `bucket`, unless you\u2019re specifying your `bucket` as part of the path, or the request doesn\u2019t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter `sign_version` with value `4` otherwise the default is version 2. If you are using SigV4, you can also include a `service` property that specifies the service name. **Note:** you need to `npm install aws4` first.\n- `httpSignature` - options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n\n---\n\n- `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`). This property can also be implemented as function which gets `response` object as a single argument and should return `true` if redirects should continue or `false` otherwise.\n- `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n- `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)\n- `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n- `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.\n\n---\n\n- `encoding` - encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`. Anything else **(including the default value of `undefined`)** will be passed as the [encoding](http://nodejs.org/api/buffer.html#buffer_buffer) parameter to `toString()` (meaning this is effectively `utf8` by default). (**Note:** if you expect binary data, you should set `encoding: null`.)\n- `gzip` - if `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response. **Note:** Automatic decoding of the response content is performed on the body data returned through `request` (both through the `request` stream and passed to the callback function) but is not performed on the `response` stream (available from the `response` event) which is the unmodified `http.IncomingMessage` object which may contain compressed data. See example below.\n- `jar` - if `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n\n---\n\n- `agent` - `http(s).Agent` instance to use\n- `agentClass` - alternatively specify your agent's class name\n- `agentOptions` - and pass its options. **Note:** for HTTPS see [tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback) and the [documentation above](#using-optionsagentoptions).\n- `forever` - set to `true` to use the [forever-agent](https://github.com/request/forever-agent) **Note:** Defaults to `http(s).Agent({keepAlive:true})` in node 0.12+\n- `pool` - an object describing which agents to use for the request. If this option is omitted the request will use the global agent (as long as your options allow for it). Otherwise, request will search the pool for your custom agent. If no custom agent is found, a new agent will be created and added to the pool. **Note:** `pool` is used only when the `agent` option is not specified.\n  - A `maxSockets` property can also be provided on the `pool` object to set the max number of sockets for all agents created (ex: `pool: {maxSockets: Infinity}`).\n  - Note that if you are sending multiple requests in a loop and creating\n    multiple new `pool` objects, `maxSockets` will not work as intended. To\n    work around this, either use [`request.defaults`](#requestdefaultsoptions)\n    with your pool options or create the pool object with the `maxSockets`\n    property outside of the loop.\n- `timeout` - integer containing number of milliseconds, controls two timeouts.\n  - **Read timeout**: Time to wait for a server to send response headers (and start the response body) before aborting the request.\n  - **Connection timeout**: Sets the socket to timeout after `timeout` milliseconds of inactivity. Note that increasing the timeout beyond the OS-wide TCP connection timeout will not have any effect ([the default in Linux can be anywhere from 20-120 seconds][linux-timeout])\n\n[linux-timeout]: http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout\n\n---\n\n- `localAddress` - local interface to bind for network connections.\n- `proxy` - an HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n- `strictSSL` - if `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n- `tunnel` - controls the behavior of\n  [HTTP `CONNECT` tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_tunneling)\n  as follows:\n   - `undefined` (default) - `true` if the destination is `https`, `false` otherwise\n   - `true` - always tunnel to the destination by making a `CONNECT` request to\n     the proxy\n   - `false` - request the destination as a `GET` request.\n- `proxyHeaderWhiteList` - a whitelist of headers to send to a\n  tunneling proxy.\n- `proxyHeaderExclusiveList` - a whitelist of headers to send\n  exclusively to a tunneling proxy and not to destination.\n\n---\n\n- `time` - if `true`, the request-response cycle (including all redirects) is timed at millisecond resolution. When set, the following properties are added to the response object:\n  - `elapsedTime` Duration of the entire request/response in milliseconds (*deprecated*).\n  - `responseStartTime` Timestamp when the response began (in Unix Epoch milliseconds) (*deprecated*).\n  - `timingStart` Timestamp of the start of the request (in Unix Epoch milliseconds).\n  - `timings` Contains event timestamps in millisecond resolution relative to `timingStart`. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `socket` Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_socket) module's `socket` event fires. This happens when the socket is assigned to the request.\n    - `lookup` Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_lookup) module's `lookup` event fires. This happens when the DNS has been resolved.\n    - `connect`: Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_connect) module's `connect` event fires. This happens when the server acknowledges the TCP connection.\n    - `response`: Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_response) module's `response` event fires. This happens when the first bytes are received from the server.\n    - `end`: Relative timestamp when the last bytes of the response are received.\n  - `timingPhases` Contains the durations of each request phase. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `wait`: Duration of socket initialization (`timings.socket`)\n    - `dns`: Duration of DNS lookup (`timings.lookup` - `timings.socket`)\n    - `tcp`: Duration of TCP connection (`timings.connect` - `timings.socket`)\n    - `firstByte`: Duration of HTTP server response (`timings.response` - `timings.connect`)\n    - `download`: Duration of HTTP download (`timings.end` - `timings.response`)\n    - `total`: Duration entire HTTP round-trip (`timings.end`)\n\n- `har` - a [HAR 1.2 Request Object](http://www.softwareishard.com/blog/har-12-spec/#request), will be processed from HAR format into options overwriting matching values *(see the [HAR 1.2 section](#support-for-har-12) for details)*\n- `callback` - alternatively pass the request's callback in the options object\n\nThe callback argument gets 3 arguments:\n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) object (Response object)\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n\n### request.defaults(options)\n\nThis method **returns a wrapper** around the normal request API that defaults\nto whatever options you pass to it.\n\n**Note:** `request.defaults()` **does not** modify the global request API;\ninstead, it **returns a wrapper** that has your default settings applied to it.\n\n**Note:** You can call `.defaults()` on the wrapper that is returned from\n`request.defaults` to add/override defaults that were previously defaulted.\n\nFor example:\n```js\n//requests using baseRequest() will set the 'x-token' header\nconst baseRequest = request.defaults({\n  headers: {'x-token': 'my-token'}\n})\n\n//requests using specialRequest() will include the 'x-token' header set in\n//baseRequest and will also include the 'special' header\nconst specialRequest = baseRequest.defaults({\n  headers: {special: 'special value'}\n})\n```\n\n### request.METHOD()\n\nThese HTTP method convenience functions act just like `request()` but with a default method already set for you:\n\n- *request.get()*: Defaults to `method: \"GET\"`.\n- *request.post()*: Defaults to `method: \"POST\"`.\n- *request.put()*: Defaults to `method: \"PUT\"`.\n- *request.patch()*: Defaults to `method: \"PATCH\"`.\n- *request.del() / request.delete()*: Defaults to `method: \"DELETE\"`.\n- *request.head()*: Defaults to `method: \"HEAD\"`.\n- *request.options()*: Defaults to `method: \"OPTIONS\"`.\n\n### request.cookie()\n\nFunction that creates a new cookie.\n\n```js\nrequest.cookie('key1=value1')\n```\n### request.jar()\n\nFunction that creates a new cookie jar.\n\n```js\nrequest.jar()\n```\n\n### response.caseless.get('header-name')\n\nFunction that returns the specified response header field using a [case-insensitive match](https://tools.ietf.org/html/rfc7230#section-3.2)\n\n```js\nrequest('http://www.google.com', function (error, response, body) {\n  // print the Content-Type header even if the server returned it as 'content-type' (lowercase)\n  console.log('Content-Type is:', response.caseless.get('Content-Type')); \n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Debugging\n\nThere are at least three ways to debug the operation of `request`:\n\n1. Launch the node process like `NODE_DEBUG=request node script.js`\n   (`lib,request,otherlib` works too).\n\n2. Set `require('request').debug = true` at any time (this does the same thing\n   as #1).\n\n3. Use the [request-debug module](https://github.com/request/request-debug) to\n   view request and response headers and bodies.\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Timeouts\n\nMost requests to external servers should have a timeout attached, in case the\nserver is not responding in a timely manner. Without a timeout, your code may\nhave a socket open/consume resources for minutes or more.\n\nThere are two main types of timeouts: **connection timeouts** and **read\ntimeouts**. A connect timeout occurs if the timeout is hit while your client is\nattempting to establish a connection to a remote machine (corresponding to the\n[connect() call][connect] on the socket). A read timeout occurs any time the\nserver is too slow to send back a part of the response.\n\nThese two situations have widely different implications for what went wrong\nwith the request, so it's useful to be able to distinguish them. You can detect\ntimeout errors by checking `err.code` for an 'ETIMEDOUT' value. Further, you\ncan detect whether the timeout was a connection timeout by checking if the\n`err.connect` property is set to `true`.\n\n```js\nrequest.get('http://10.255.255.1', {timeout: 1500}, function(err) {\n    console.log(err.code === 'ETIMEDOUT');\n    // Set to `true` if the timeout was a connection timeout, `false` or\n    // `undefined` otherwise.\n    console.log(err.connect === true);\n    process.exit(0);\n});\n```\n\n[connect]: http://linux.die.net/man/2/connect\n\n## Examples:\n\n```js\n  const request = require('request')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand\n    , multipart:\n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)\n      } else {\n        console.log('error: '+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nFor backwards-compatibility, response compression is not supported by default.\nTo accept gzip-compressed responses, set the `gzip` option to `true`. Note\nthat the body data passed through `request` is automatically decompressed\nwhile the response object is unmodified and will contain compressed data if\nthe server sent a compressed response.\n\n```js\n  const request = require('request')\n  request(\n    { method: 'GET'\n    , uri: 'http://www.google.com'\n    , gzip: true\n    }\n  , function (error, response, body) {\n      // body is the decompressed response body\n      console.log('server encoded the data as: ' + (response.headers['content-encoding'] || 'identity'))\n      console.log('the decoded data is: ' + body)\n    }\n  )\n  .on('data', function(data) {\n    // decompressed data as it is received\n    console.log('decoded chunk: ' + data)\n  })\n  .on('response', function(response) {\n    // unmodified http.IncomingMessage object\n    response.on('data', function(data) {\n      // compressed data as it is received\n      console.log('received ' + data.length + ' bytes of compressed data')\n    })\n  })\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```js\nconst request = request.defaults({jar: true})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie jar (instead of `request`\u2019s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```js\nconst j = request.jar()\nconst request = request.defaults({jar:j})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nOR\n\n```js\nconst j = request.jar();\nconst cookie = request.cookie('key1=value1');\nconst url = 'http://www.google.com';\nj.setCookie(cookie, url);\nrequest({url: url, jar: j}, function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie store (such as a\n[`FileCookieStore`](https://github.com/mitsuru/tough-cookie-filestore)\nwhich supports saving to and restoring from JSON files), pass it as a parameter\nto `request.jar()`:\n\n```js\nconst FileCookieStore = require('tough-cookie-filestore');\n// NOTE - currently the 'cookies.json' file must already exist!\nconst j = request.jar(new FileCookieStore('cookies.json'));\nrequest = request.defaults({ jar : j })\nrequest('http://www.google.com', function() {\n  request('http://images.google.com')\n})\n```\n\nThe cookie store must be a\n[`tough-cookie`](https://github.com/SalesforceEng/tough-cookie)\nstore and it must support synchronous operations; see the\n[`CookieStore` API docs](https://github.com/SalesforceEng/tough-cookie#api)\nfor details.\n\nTo inspect your cookie jar after a request:\n\n```js\nconst j = request.jar()\nrequest({url: 'http://www.google.com', jar: j}, function () {\n  const cookie_string = j.getCookieString(url); // \"key1=value1; key2=value2; ...\"\n  const cookies = j.getCookies(url);\n  // [{key: 'key1', value: 'value1', domain: \"www.google.com\", ...}, ...]\n})\n```\n\n[back to top](#table-of-contents)"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1136563}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 19712234}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 80258274}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 247597769}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 438099287}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 828299964}], "dependentsCount": 38242, "starsCount": 1506}, "github": {"starsCount": 24551, "forksCount": 2914, "subscribersCount": 449, "issues": {"count": 3294, "openCount": 185, "distribution": {"3600": 327, "10800": 140, "32400": 166, "97200": 299, "291600": 259, "874800": 284, "2624400": 242, "7873200": 208, "23619600": 257, "70858800": 732, "212576400": 380}, "isDisabled": false}, "contributors": [{"username": "mikeal", "commitsCount": 367}, {"username": "simov", "commitsCount": 259}, {"username": "nylen", "commitsCount": 168}, {"username": "greenkeeperio-bot", "commitsCount": 49}, {"username": "seanstrom", "commitsCount": 35}, {"username": "isaacs", "commitsCount": 31}, {"username": "eiriksm", "commitsCount": 21}, {"username": "mscdex", "commitsCount": 15}, {"username": "ahmadnassri", "commitsCount": 13}, {"username": "Turbo87", "commitsCount": 12}, {"username": "froatsnook", "commitsCount": 12}, {"username": "papandreou", "commitsCount": 11}, {"username": "nicjansma", "commitsCount": 10}, {"username": "tikotzky", "commitsCount": 10}, {"username": "lalitkapoor", "commitsCount": 9}, {"username": "mmalecki", "commitsCount": 9}, {"username": "csainty", "commitsCount": 8}, {"username": "RReverser", "commitsCount": 7}, {"username": "reconbot", "commitsCount": 7}, {"username": "jhs", "commitsCount": 6}, {"username": "FredKSchott", "commitsCount": 5}, {"username": "aesopwolf", "commitsCount": 5}, {"username": "benatkin", "commitsCount": 5}, {"username": "charlespwd", "commitsCount": 5}, {"username": "janjongboom", "commitsCount": 5}, {"username": "joaojeronimo", "commitsCount": 5}, {"username": "kevinoid", "commitsCount": 5}, {"username": "twilson63", "commitsCount": 5}, {"username": "0x4139", "commitsCount": 4}, {"username": "aaron-em", "commitsCount": 4}, {"username": "emkay", "commitsCount": 4}, {"username": "guimon", "commitsCount": 4}, {"username": "hueniverse", "commitsCount": 4}, {"username": "mafintosh", "commitsCount": 4}, {"username": "noway", "commitsCount": 4}, {"username": "rwky", "commitsCount": 4}, {"username": "tbuchok", "commitsCount": 4}, {"username": "vpulim", "commitsCount": 4}, {"username": "wprl", "commitsCount": 4}, {"username": "DullReferenceException", "commitsCount": 3}, {"username": "Filirom1", "commitsCount": 3}, {"username": "Stanley", "commitsCount": 3}, {"username": "ZJONSSON", "commitsCount": 3}, {"username": "dai-shi", "commitsCount": 3}, {"username": "diversario", "commitsCount": 3}, {"username": "hypesystem", "commitsCount": 3}, {"username": "lexander", "commitsCount": 3}, {"username": "mitsuru", "commitsCount": 3}, {"username": "nlf", "commitsCount": 3}, {"username": "polotek", "commitsCount": 3}, {"username": "stash", "commitsCount": 3}, {"username": "thejh", "commitsCount": 3}, {"username": "watson", "commitsCount": 3}, {"username": "zertosh", "commitsCount": 3}, {"username": "Cauldrath", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 2}, {"username": "JoshWillik", "commitsCount": 2}, {"username": "LoicMahieu", "commitsCount": 2}, {"username": "Marsup", "commitsCount": 2}, {"username": "ReadmeCritic", "commitsCount": 2}, {"username": "SamPlacette", "commitsCount": 2}, {"username": "YasharF", "commitsCount": 2}, {"username": "aj0strow", "commitsCount": 2}, {"username": "akshayp", "commitsCount": 2}, {"username": "alexindigo", "commitsCount": 2}, {"username": "apoco", "commitsCount": 2}, {"username": "bcoe", "commitsCount": 2}, {"username": "calibr", "commitsCount": 2}, {"username": "cappslock", "commitsCount": 2}, {"username": "clement", "commitsCount": 2}, {"username": "crocket", "commitsCount": 2}, {"username": "daniel347x", "commitsCount": 2}, {"username": "davidlehn", "commitsCount": 2}, {"username": "dotcypress", "commitsCount": 2}, {"username": "drudge", "commitsCount": 2}, {"username": "goatslacker", "commitsCount": 2}, {"username": "itay", "commitsCount": 2}, {"username": "jhurliman", "commitsCount": 2}, {"username": "joemccann", "commitsCount": 2}, {"username": "jongyoonlee", "commitsCount": 2}, {"username": "joshux", "commitsCount": 2}, {"username": "jplock", "commitsCount": 2}, {"username": "jrgm", "commitsCount": 2}, {"username": "jvmccarthy", "commitsCount": 2}, {"username": "kevinburke", "commitsCount": 2}, {"username": "mbrevoort", "commitsCount": 2}, {"username": "mgenereu", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "paulirish", "commitsCount": 2}, {"username": "poislagarde", "commitsCount": 2}, {"username": "pvoznenko", "commitsCount": 2}, {"username": "shimaore", "commitsCount": 2}, {"username": "substack", "commitsCount": 2}, {"username": "tgohn", "commitsCount": 2}, {"username": "timshadel", "commitsCount": 2}, {"username": "vohof", "commitsCount": 2}, {"username": "zephrax", "commitsCount": 2}, {"username": "andresroberto", "commitsCount": 1}, {"username": "gr2m", "commitsCount": 1}, {"username": "odykyi", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "coverage/coveralls", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 46386, "testsSize": 283479, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/request.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/request.svg", "content": "https://img.shields.io/npm/v/request.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://img.shields.io/travis/request/request/master.svg?style=flat-square", "service": "https://api.travis-ci.org/request/request.svg?branch=master", "shields": "https://img.shields.io/travis/request/request/master.svg", "content": "https://img.shields.io/travis/request/request/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square", "service": "https://codecov.io/github/request/request/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/request/request.svg", "content": "https://img.shields.io/codecov/c/github/request/request.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/coveralls/request/request.svg?style=flat-square", "service": "https://coveralls.io/repos/request/request/badge.svg", "shields": "https://img.shields.io/coveralls/request/request.svg", "content": "https://img.shields.io/coveralls/request/request.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/request/request.svg?style=flat-square", "service": "https://david-dm.org/request/request.svg", "shields": "https://img.shields.io/david/request/request.svg", "content": "https://img.shields.io/david/request/request.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["standard"], "coverage": 0.96, "outdatedDependencies": {"uuid": {"required": "^3.3.2", "stable": "8.0.0", "latest": "8.0.0"}, "form-data": {"required": "~2.3.2", "stable": "3.0.0", "latest": "3.0.0"}, "http-signature": {"required": "~1.2.0", "stable": "1.3.4", "latest": "1.3.4"}, "tough-cookie": {"required": "~2.5.0", "stable": "4.0.0", "latest": "4.0.0"}, "qs": {"required": "~6.5.2", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.9315, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 29520, "downloadsCount": 82532589.66666667, "downloadsAcceleration": 142632.6970129375, "dependentsCount": 38242}, "maintenance": {"releasesFrequency": 0.3236301369863014, "commitsFrequency": 0.13952054794520546, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6948630023776139, "detail": {"quality": 0.5797641140938379, "popularity": 0.9400170098325137, "maintenance": 0.5483651848802366}}}}, {"cross-env": {"analyzedAt": "2020-06-25T14:27:44.119Z", "collected": {"metadata": {"name": "cross-env", "scope": "unscoped", "version": "7.0.2", "description": "Run scripts that set and use environment variables across platforms", "keywords": ["cross-environment", "environment variable", "windows"], "date": "2020-03-05T20:32:09.373Z", "author": {"name": "Kent C. Dodds", "email": "me@kentcdodds.com", "url": "https://kentcdodds.com"}, "publisher": {"username": "kentcdodds", "email": "me@kentcdodds.com"}, "maintainers": [{"username": "kentcdodds", "email": "kent@doddsfamily.us"}], "repository": {"type": "git", "url": "git+https://github.com/kentcdodds/cross-env.git"}, "links": {"npm": "https://www.npmjs.com/package/cross-env", "homepage": "https://github.com/kentcdodds/cross-env#readme", "repository": "https://github.com/kentcdodds/cross-env", "bugs": "https://github.com/kentcdodds/cross-env/issues"}, "license": "MIT", "dependencies": {"cross-spawn": "^7.0.1"}, "devDependencies": {"kcd-scripts": "^5.2.0"}, "releases": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 4}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 9}, {"from": "2018-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n<h1>cross-env \ud83d\udd00</h1>\n\nRun scripts that set and use environment variables across platforms\n\n</div>\n\n<hr />\n\n[![Travis Build Status][build-badge]][build]\n[![AppVeyor Build Status][win-build-badge]][win-build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package] [![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-20-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs] [![Code of Conduct][coc-badge]][coc]\n[![downloads][downloads-badge]][npmtrends]\n\n## The problem\n\nMost Windows command prompts will choke when you set environment variables with\n`NODE_ENV=production` like that. (The exception is [Bash on Windows][win-bash],\nwhich uses native Bash.) Similarly, there's a difference in how windows and\nPOSIX commands utilize environment variables. With POSIX, you use: `$ENV_VAR`\nand on windows you use `%ENV_VAR%`.\n\n## This solution\n\n`cross-env` makes it so you can have a single command without worrying about\nsetting or using the environment variable properly for the platform. Just set it\nlike you would if it's running on a POSIX system, and `cross-env` will take care\nof setting it properly.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [`cross-env` vs `cross-env-shell`](#cross-env-vs-cross-env-shell)\n- [Windows Issues](#windows-issues)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev cross-env\n```\n\n> WARNING! Make sure that when you're installing packages that you spell things\n> correctly to avoid [mistakenly installing malware][malware]\n\n> NOTE : Version 7 of cross-env only supports Node.js 10 and higher, to use it on\n> Node.js 8 or lower install version 6 `npm install --save-dev cross-env@6`\n\n## Usage\n\nI use this in my npm scripts:\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"cross-env NODE_ENV=production webpack --config build/webpack.config.js\"\n  }\n}\n```\n\nUltimately, the command that is executed (using [`cross-spawn`][cross-spawn])\nis:\n\n```\nwebpack --config build/webpack.config.js\n```\n\nThe `NODE_ENV` environment variable will be set by `cross-env`\n\nYou can also split a command into several ones, or separate the environment\nvariables declaration from the actual command execution. You can do it this way:\n\n```json\n{\n  \"scripts\": {\n    \"parentScript\": \"cross-env GREET=\\\"Joe\\\" npm run childScript\",\n    \"childScript\": \"cross-env-shell \\\"echo Hello $GREET\\\"\"\n  }\n}\n```\n\nWhere `childScript` holds the actual command to execute and `parentScript` sets\nthe environment variables to use. Then instead of run the childScript you run\nthe parent. This is quite useful for launching the same command with different\nenv variables or when the environment variables are too long to have everything\nin one line. It also means that you can use `$GREET` env var syntax even on\nWindows which would usually require it to be `%GREET%`.\n\nIf you precede a dollar sign with an odd number of backslashes the expression\nstatement will not be replaced. Note that this means backslashes after the JSON\nstring escaping took place. `\"FOO=\\\\$BAR\"` will not be replaced.\n`\"FOO=\\\\\\\\$BAR\"` will be replaced though.\n\nLastly, if you want to pass a JSON string (e.g., when using [ts-loader]), you\ncan do as follows:\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"cross-env TS_NODE_COMPILER_OPTIONS={\\\\\\\"module\\\\\\\":\\\\\\\"commonjs\\\\\\\"} node some_file.test.ts\"\n  }\n}\n```\n\nPay special attention to the **triple backslash** `(\\\\\\)` **before** the\n**double quotes** `(\")` and the **absence** of **single quotes** `(')`. Both of\nthese conditions have to be met in order to work both on Windows and UNIX.\n\n## `cross-env` vs `cross-env-shell`\n\nThe `cross-env` module exposes two bins: `cross-env` and `cross-env-shell`. The\nfirst one executes commands using [`cross-spawn`][cross-spawn], while the second\none uses the `shell` option from Node's `spawn`.\n\nThe main use case for `cross-env-shell` is when you need an environment variable\nto be set across an entire inline shell script, rather than just one command.\n\nFor example, if you want to have the environment variable apply to several\ncommands in series then you will need to wrap those in quotes and use\n`cross-env-shell` instead of `cross-env`.\n\n```json\n{\n  \"scripts\": {\n    \"greet\": \"cross-env-shell GREETING=Hi NAME=Joe \\\"echo $GREETING && echo $NAME\\\"\"\n  }\n}\n```\n\nThe rule of thumb is: if you want to pass to `cross-env` a command that contains\nspecial shell characters _that you want interpreted_, then use\n`cross-env-shell`. Otherwise stick to `cross-env`.\n\nOn Windows you need to use `cross-env-shell`, if you want to handle\n[signal events](https://nodejs.org/api/process.html#process_signal_events)\ninside of your program. A common case for that is when you want to capture a\n`SIGINT` event invoked by pressing `Ctrl + C` on the command-line interface.\n\n## Windows Issues\n\nPlease note that `npm` uses `cmd` by default and that doesn't support command\nsubstitution, so if you want to leverage that, then you need to update your\n`.npmrc` to set the `script-shell` to powershell.\n[Learn more here](https://github.com/kentcdodds/cross-env/issues/192#issuecomment-513341729).\n\n## Inspiration\n\nI originally created this to solve a problem I was having with my npm scripts in\n[angular-formly][angular-formly]. This made contributing to the project much\neasier for Windows users.\n\n## Other Solutions\n\n- [`env-cmd`](https://github.com/toddbluhm/env-cmd) - Reads environment\n  variables from a file instead\n- [`@naholyr/cross-env`](https://www.npmjs.com/package/@naholyr/cross-env) -\n  `cross-env` with support for setting default values\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://kentcdodds.com\"><img src=\"https://avatars.githubusercontent.com/u/1500684?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#infra-kentcdodds\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://zhuangya.me\"><img src=\"https://avatars1.githubusercontent.com/u/499038?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ya Zhuang </b></sub></a><br /><a href=\"#plugin-zhuangya\" title=\"Plugin/utility libraries\">\ud83d\udd0c</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=zhuangya\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://wopian.me\"><img src=\"https://avatars3.githubusercontent.com/u/3440094?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>James Harris</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=wopian\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/compumike08\"><img src=\"https://avatars1.githubusercontent.com/u/8941730?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>compumike08</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Acompumike08\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/danielo515\"><img src=\"https://avatars1.githubusercontent.com/u/2270425?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rodr\u00edguez Rivero</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Adanielo515\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/inyono\"><img src=\"https://avatars2.githubusercontent.com/u/1508477?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonas Keinholz</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ainyono\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/hgwood\"><img src=\"https://avatars3.githubusercontent.com/u/1656170?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hugo Wood</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ahgwood\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/thomasthiebaud\"><img src=\"https://avatars0.githubusercontent.com/u/3715715?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thiebaud Thomas</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Athomasthiebaud\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://daniel.blog\"><img src=\"https://avatars1.githubusercontent.com/u/1715800?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rey L\u00f3pez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"http://amilajack.com\"><img src=\"https://avatars2.githubusercontent.com/u/6374832?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amila Welihinda</b></sub></a><br /><a href=\"#infra-amilajack\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/paulcbetts\"><img src=\"https://avatars1.githubusercontent.com/u/1396?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Betts</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Apaulcbetts\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=paulcbetts\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/turnerhayes\"><img src=\"https://avatars1.githubusercontent.com/u/6371670?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Turner Hayes</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Aturnerhayes\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sudo-suhas\"><img src=\"https://avatars2.githubusercontent.com/u/22251956?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Suhas Karanth</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sventschui\"><img src=\"https://avatars3.githubusercontent.com/u/512692?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sven</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#example-sventschui\" title=\"Examples\">\ud83d\udca1</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/NicoZelaya\"><img src=\"https://avatars0.githubusercontent.com/u/5522668?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>D. Nicol\u00e1s Lopez Zelaya</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=NicoZelaya\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"http://bithavoc.io\"><img src=\"https://avatars3.githubusercontent.com/u/219289?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Johan Hernandez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bithavoc\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jnielson94\"><img src=\"https://avatars3.githubusercontent.com/u/13559161?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jordan Nielson</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ajnielson94\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://nz.linkedin.com/in/jsonc11\"><img src=\"https://avatars0.githubusercontent.com/u/5185660?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jason Cooke</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=Jason-Cooke\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bibo5088\"><img src=\"https://avatars0.githubusercontent.com/u/17709887?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>bibo5088</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bibo5088\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://codefund.io\"><img src=\"https://avatars2.githubusercontent.com/u/12481?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric Berry</b></sub></a><br /><a href=\"#fundingFinding-coderberry\" title=\"Funding Finding\">\ud83d\udd0d</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Micha\u00ebl De Boey</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=MichaelDeBoey\" title=\"Code\">\ud83d\udcbb</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/lauriii\"><img src=\"https://avatars0.githubusercontent.com/u/1845495?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lauri Eskola</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=lauriii\" title=\"Documentation\">\ud83d\udcd6</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n> Note: this was added late into the project. If you've contributed to this\n> project in any way, please make a pull request to add yourself to the list by\n> following the instructions in the `CONTRIBUTING.md`\n\n## LICENSE\n\nMIT\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]:\n  https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square\n[build]: https://travis-ci.org/kentcdodds/cross-env\n[win-build-badge]:\n  https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square\n[win-build]: https://ci.appveyor.com/project/kentcdodds/cross-env\n[coverage-badge]:\n  https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/cross-env\n[version-badge]: https://img.shields.io/npm/v/cross-env.svg?style=flat-square\n[package]: https://www.npmjs.com/package/cross-env\n[downloads-badge]: https://img.shields.io/npm/dm/cross-env.svg?style=flat-square\n[npmtrends]: https://www.npmtrends.com/cross-env\n[license-badge]: https://img.shields.io/npm/l/cross-env.svg?style=flat-square\n[license]: https://github.com/kentcdodds/cross-env/blob/master/other/LICENSE\n[prs-badge]:\n  https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]:\n  https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]:\n  https://github.com/kentcdodds/cross-env/blob/master/other/CODE_OF_CONDUCT.md\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[win-bash]: https://msdn.microsoft.com/en-us/commandline/wsl/about\n[angular-formly]: https://github.com/formly-js/angular-formly\n[cross-spawn]: https://www.npmjs.com/package/cross-spawn\n[ts-loader]: https://www.npmjs.com/package/ts-loader\n[malware]:\n  http://blog.npmjs.org/post/163723642530/crossenv-malware-on-the-npm-registry"}, "npm": {"downloads": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 479623}, {"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 2109951}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 10819560}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 31191757}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 56322147}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 98277349}], "dependentsCount": 2199, "starsCount": 297}, "github": {"homepage": "https://www.npmjs.com/package/cross-env", "starsCount": 4825, "forksCount": 197, "subscribersCount": 34, "issues": {"count": 238, "openCount": 8, "distribution": {"3600": 71, "10800": 24, "32400": 30, "97200": 29, "291600": 12, "874800": 12, "2624400": 21, "7873200": 12, "23619600": 20, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kentcdodds", "commitsCount": 26}, {"username": "sudo-suhas", "commitsCount": 6}, {"username": "MichaelDeBoey", "commitsCount": 5}, {"username": "NogsMPLS", "commitsCount": 5}, {"username": "hgwood", "commitsCount": 5}, {"username": "DanReyLop", "commitsCount": 4}, {"username": "EnzoMartin", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "bennyn", "commitsCount": 2}, {"username": "bibo5088", "commitsCount": 2}, {"username": "coderberry", "commitsCount": 2}, {"username": "compumike08", "commitsCount": 2}, {"username": "danielo515", "commitsCount": 2}, {"username": "inyono", "commitsCount": 2}, {"username": "wopian", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "Apidcloud", "commitsCount": 1}, {"username": "AshikNesin", "commitsCount": 1}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Jason-Cooke", "commitsCount": 1}, {"username": "NicoZelaya", "commitsCount": 1}, {"username": "achingbrain", "commitsCount": 1}, {"username": "allcontributors[bot]", "commitsCount": 1}, {"username": "alonbardavid", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "anishkny", "commitsCount": 1}, {"username": "baerrach", "commitsCount": 1}, {"username": "bithavoc", "commitsCount": 1}, {"username": "devuxer", "commitsCount": 1}, {"username": "greggman", "commitsCount": 1}, {"username": "igorklopov", "commitsCount": 1}, {"username": "jiangyuan", "commitsCount": 1}, {"username": "jnielson94", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "lauriii", "commitsCount": 1}, {"username": "marcioj", "commitsCount": 1}, {"username": "markwoon", "commitsCount": 1}, {"username": "mastilver", "commitsCount": 1}, {"username": "naholyr", "commitsCount": 1}, {"username": "nkbt", "commitsCount": 1}, {"username": "nolanlawson", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "sazo", "commitsCount": 1}, {"username": "thomasthiebaud", "commitsCount": 1}, {"username": "toddbluhm", "commitsCount": 1}, {"username": "turnerhayes", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 4}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 13}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 21}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 17442, "testsSize": 12985, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square", "service": "https://api.travis-ci.org/kentcdodds/cross-env.svg", "shields": "https://img.shields.io/travis/kentcdodds/cross-env.svg", "content": "https://img.shields.io/travis/kentcdodds/cross-env.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/kentcdodds/cross-env", "shields": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg", "content": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square", "service": "https://codecov.io/github/kentcdodds/cross-env/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg", "content": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/cross-env.svg", "content": "https://img.shields.io/npm/v/cross-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/cross-env.svg", "content": "https://img.shields.io/npm/dm/cross-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/l/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/l/cross-env.svg", "content": "https://img.shields.io/npm/l/cross-env.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}], "linters": ["eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 5400, "downloadsCount": 10397252.333333334, "downloadsAcceleration": 33761.69868721461, "dependentsCount": 2199}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8859256427106605, "detail": {"quality": 0.9995210909668031, "popularity": 0.6745903941507359, "maintenance": 0.9998933641938921}}}}, {"husky": {"analyzedAt": "2020-06-07T06:04:20.354Z", "collected": {"metadata": {"name": "husky", "scope": "unscoped", "version": "4.2.5", "description": "Prevents bad commit or push (git hooks, pre-commit/precommit, pre-push/prepush, post-merge/postmerge and all that stuff...)", "keywords": ["git", "hook", "hooks", "pre-commit", "precommit", "post-commit", "postcommit", "pre-push", "prepush", "post-merge", "postmerge", "test", "lint"], "date": "2020-04-09T21:29:01.887Z", "author": {"name": "Typicode", "email": "typicode@gmail.com", "username": "typicode"}, "publisher": {"username": "typicode", "email": "typicode@gmail.com"}, "maintainers": [{"username": "typicode", "email": "typicode@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/typicode/husky.git"}, "links": {"npm": "https://www.npmjs.com/package/husky", "homepage": "https://github.com/typicode/husky#readme", "repository": "https://github.com/typicode/husky", "bugs": "https://github.com/typicode/husky/issues"}, "license": "MIT", "dependencies": {"chalk": "^4.0.0", "ci-info": "^2.0.0", "compare-versions": "^3.6.0", "cosmiconfig": "^6.0.0", "find-versions": "^3.2.0", "opencollective-postinstall": "^2.0.2", "pkg-dir": "^4.2.0", "please-upgrade-node": "^3.2.0", "slash": "^3.0.0", "which-pm-runs": "^1.0.0"}, "devDependencies": {"@types/ci-info": "^2.0.0", "@types/cosmiconfig": "^6.0.0", "@types/jest": "^25.2.1", "@types/mkdirp": "^1.0.0", "@types/node": "^13.11.1", "@typescript-eslint/eslint-plugin": "^2.27.0", "@typescript-eslint/parser": "^2.27.0", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-config-xo-space": "^0.24.0", "eslint-plugin-prettier": "^3.1.2", "formatree": "^1.0.2", "jest": "^25.3.0", "markdown-toc": "^1.2.0", "mkdirp": "^1.0.4", "pinst": "^2.0.0", "pkg-ok": "^2.3.1", "prettier": "^2.0.4", "tempy": "^0.5.0", "ts-jest": "^25.3.1", "type-fest": "^0.13.1", "typescript": "^3.8.3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 19}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 64}], "hasTestScript": true, "readme": "# Husky\n\n[![Financial Contributors on Open Collective](https://opencollective.com/husky/all/badge.svg?label=financial+contributors)](https://opencollective.com/husky) [![](https://img.shields.io/npm/dm/husky.svg?style=flat)](https://www.npmjs.org/package/husky) [![Mac/Linux Build Status](https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20%26%20Linux)](https://travis-ci.org/typicode/husky) [![Windows Build status](https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows)](https://ci.appveyor.com/project/typicode/husky)\n\n> Git hooks made easy\n\nHusky can prevent bad `git commit`, `git push` and more \ud83d\udc36 _woof!_\n\n## Install\n\n```sh\nnpm install husky --save-dev\n```\n\n```js\n// package.json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n```sh\ngit commit -m 'Keep calm and commit'\n```\n\n_Existing hooks are kept. Requires Node `>= 10` and Git `>= 2.13.0`._\n\n## Reinstall\n\nIf Husky is already in your `node_modules` or `pnp.js` (Yarn 2) and you want to reinstall hooks, you can run `npm rebuild` or `yarn rebuild`.\n\n## Uninstall\n\n```sh\nnpm uninstall husky\n```\n\n_Git hooks installed by husky will be removed._\n\n## Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/husky/contribute)]\n\n### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/husky/contribute)]\n\n<!-- oc -->\n#### Gold Sponsors ($500/mo)\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/0/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/1/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/2/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/3/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/4/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/5/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/6/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/7/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/8/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/9/avatar.svg\" height=\"60px\"></a>\n\n#### Silver Sponsors ($250/mo)\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/0/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/1/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/2/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/3/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/4/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/5/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/6/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/7/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/8/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/9/avatar.svg\" height=\"45px\"></a>\n\n#### Bronze Sponsors ($100/mo)\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/avatar.svg\" height=\"30px\"></a>\n<!-- oc-end -->\n\n### Individuals\n\n<a href=\"https://opencollective.com/husky\"><img src=\"https://opencollective.com/husky/individuals.svg?width=890\" height=\"100px\"></a>\n\n## Used by\n\n* [webpack](https://github.com/webpack/webpack)\n* [babel](https://github.com/babel/babel)\n* [create-react-app](https://github.com/facebookincubator/create-react-app)\n* ... and many other awesome projects\n\n## Guides\n\n<!-- toc -->\n\n  * [Upgrading from 0.14](#upgrading-from-014)\n  * [Supported hooks](#supported-hooks)\n  * [Access Git params and stdin](#access-git-params-and-stdin)\n  * [Skip all hooks (rebase)](#skip-all-hooks-rebase)\n  * [Disable auto-install](#disable-auto-install)\n  * [CI servers](#ci-servers)\n  * [Monorepos](#monorepos)\n  * [Node version managers](#node-version-managers)\n  * [Local commands (~/.huskyrc)](#local-commands-huskyrc)\n  * [Multiple commands](#multiple-commands)\n  * [Troubleshoot](#troubleshoot)\n    + [Debug messages](#debug-messages)\n    + [Hooks aren't running](#hooks-arent-running)\n    + [Commits aren't blocked](#commits-arent-blocked)\n    + [Commits are slow](#commits-are-slow)\n    + [Testing husky in a new repo](#testing-husky-in-a-new-repo)\n    + [ENOENT error 'node_modules/husky/.git/hooks'](#enoent-error-node_moduleshuskygithooks)\n\n<!-- tocstop -->\n\n### Upgrading from 0.14\n\nRun `husky-upgrade` to automatically upgrade your configuration:\n\n```\nnpx --no-install husky-upgrade\n```\n\nYou can also do it manually. Move your existing hooks to `husky.hooks` field and use raw Git hooks names. Also, if you were using `GIT_PARAMS` env variable, rename it to `HUSKY_GIT_PARAMS`.\n\n```diff\n{\n  \"scripts\": {\n-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n  },\n+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n}\n```\n\nStarting with `1.0.0`, husky can be configured using `.huskyrc`, `.huskyrc.json`, `.huskyrc.js` or `husky.config.js` file.\n\n```js\n// .huskyrc\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test\"\n  }\n}\n```\n\n### Supported hooks\n\nHusky supports all Git hooks defined [here](https://git-scm.com/docs/githooks). Server-side hooks (`pre-receive`, `update` and `post-receive`) aren't supported.\n\n### Access Git params and stdin\n\nGit hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via `HUSKY_GIT_PARAMS` and `HUSKY_GIT_STDIN` environment variables.\n\n```\n\"commit-msg\": \"echo $HUSKY_GIT_PARAMS\"\n```\n\n### Skip all hooks (rebase)\n\nDuring a rebase you may want to skip all hooks, you can use `HUSKY_SKIP_HOOKS` environment variable.\n\n```sh\nHUSKY_SKIP_HOOKS=1 git rebase ...\n```\n\n### Disable auto-install\n\nIf you don't want husky to automatically install Git hooks, simply set `HUSKY_SKIP_INSTALL` environment variable.\n\n```sh\nHUSKY_SKIP_INSTALL=1 npm install\n```\n\n### CI servers\n\nBy default, Husky won't install on CI servers.\n\n### Monorepos\n\nIf you have a multi-package repository, it's __recommended__ to use tools like [lerna](https://github.com/lerna/lerna) and have husky installed ONLY in the root `package.json` to act as the source of truth.\n\nGenerally speaking, you should AVOID defining husky in multiple `package.json`, as each package would overwrite previous husky installation.\n\n```sh\n.\n\u2514\u2500\u2500 root\n    \u251c\u2500\u2500 .git\n    \u251c\u2500\u2500 package.json \ud83d\udc36 # Add husky here\n    \u2514\u2500\u2500 packages\n        \u251c\u2500\u2500 A\n        \u2502   \u2514\u2500\u2500 package.json\n        \u251c\u2500\u2500 B\n        \u2502   \u2514\u2500\u2500 package.json\n        \u2514\u2500\u2500 C\n            \u2514\u2500\u2500 package.json\n```\n\n```js\n// root/package.json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"husky\": \"...\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lerna run test\"\n    }\n  }\n}\n```\n\n### Node version managers\n\nIf you're on Windows, husky will simply use the version installed globally on your system.\n\nFor macOS and Linux users:\n- if you're running `git` commands in the terminal, husky will use the version defined in your shell `PATH`. In other words, if you're a `nvm` user, husky will use the version that you've set with `nvm`.\n- if you're using a GUI client and `nvm`, it may have a different `PATH` and not load `nvm`, in this case the highest `node` version installed by `nvm` will usually be picked. You can also check `~/.node_path` to see which version is used by GUIs and edit if you want to use something else.\n\n### Local commands (~/.huskyrc)\n\nHusky will source `~/.huskyrc` file if it exists before running hook scripts.\nYou can use it, for example, to load a node version manager or run some `shell` commands before hooks.\n\n```sh\n# ~/.huskyrc\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n```\n\n### Multiple commands\n\nBy design and just like `scripts` defined in `package.json`, husky will run hook scripts as a single command. \n\n```json\n\"pre-commit\": \"cmd && cmd\"\n```\n\nThat said, if you prefer to use an array, the recommended approach is to define them in `.huskyrc.js` or `husky.config.js`.\n\n```js\nconst tasks = arr => arr.join(' && ')\n\nmodule.exports = {\n  'hooks': {\n    'pre-commit': tasks([\n      'cmd',\n      'cmd'\n    ])\n  }\n}\n```\n\nTools like [npm-run-all](https://github.com/mysticatea/npm-run-all) can help too.\n\n### Troubleshoot\n\n#### Debug messages\n\n`HUSKY_DEBUG=1` can provide additional information when running commands.\n\n```\nHUSKY_DEBUG=1 npm install husky --save-dev\nHUSKY_DEBUG=1 git commit ...\n```\n\n#### Hooks aren't running\n\nCheck if hooks were installed. Verify that `.git/hooks/pre-commit` exists and have husky code. It should start with:\n\n```sh\n#!/bin/sh\n# husky...\n```\n\nIf not, you may have another Git hooks manager defined in your `package.json` overwriting husky's hooks. Check also the output during install, you should see:\n\n```\nhusky > Setting up git hooks\nhusky > Done\n```\n\n#### Commits aren't blocked\n\nFor a commit to be blocked, `pre-commit` script must exit with a non-zero exit code. If you commit isn't blocked, check your script exit code.\n\n#### Commits are slow\n\nHusky is fast and only adds a few tenth of seconds to commits (`~0.3s` on a low-end PC). So it's most probably related to how many things are done during `pre-commit`. You can often improve this by using cache on your tools (babel, eslint, ...) and using [lint-staged](https://github.com/okonet/lint-staged).\n\n#### Testing husky in a new repo\n\nTo isolate your issue, you can also create a new repo:\n\n```sh\nmkdir foo && cd foo\ngit init && npm init -y\nnpm install husky --save-dev\n\n# Add a failing pre-commit hook to your package.json:\n# \"pre-commit\": \"echo \\\"this should fail\\\" && exit 1\"\n\n# Make a commit\n```\n\n#### ENOENT error 'node_modules/husky/.git/hooks'\n\nVerify that your version of Git is `>=2.13.0`.\n\n## See also\n\n* [pkg-ok](https://github.com/typicode/pkg-ok) - Prevents publishing a module with bad paths or incorrect line endings\n* [please-upgrade-node](https://github.com/typicode/please-upgrade-node) - Show a message to upgrade Node instead of a stacktrace in your CLIs\n* [pinst](https://github.com/typicode/pinst) - dev only postinstall hook\n\n## Patreon\n\nPeople and companies supporting via Patreon: [thanks](https://thanks.typicode.com)\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 152782}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3264877}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13764055}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41413709}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 71621301}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 121303813}], "dependentsCount": 905, "starsCount": 134}, "github": {"starsCount": 19175, "forksCount": 675, "subscribersCount": 135, "issues": {"count": 732, "openCount": 171, "distribution": {"3600": 73, "10800": 25, "32400": 33, "97200": 59, "291600": 58, "874800": 71, "2624400": 75, "7873200": 88, "23619600": 87, "70858800": 116, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "typicode", "commitsCount": 490}, {"username": "branneman", "commitsCount": 3}, {"username": "jetersen", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "boxfoot", "commitsCount": 2}, {"username": "AluisioASG", "commitsCount": 1}, {"username": "Calinou", "commitsCount": 1}, {"username": "DAB0mB", "commitsCount": 1}, {"username": "FJunior225", "commitsCount": 1}, {"username": "G-Rath", "commitsCount": 1}, {"username": "JHilker", "commitsCount": 1}, {"username": "Judahmeek", "commitsCount": 1}, {"username": "MrRio", "commitsCount": 1}, {"username": "afc163", "commitsCount": 1}, {"username": "ahutchings", "commitsCount": 1}, {"username": "alebelcor", "commitsCount": 1}, {"username": "alexeyten", "commitsCount": 1}, {"username": "andywer", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "azu", "commitsCount": 1}, {"username": "behnammodi", "commitsCount": 1}, {"username": "bobrippling", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "configurator", "commitsCount": 1}, {"username": "conord33", "commitsCount": 1}, {"username": "dhruvdutt", "commitsCount": 1}, {"username": "emily-curry", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "guidoscheffler", "commitsCount": 1}, {"username": "hunnble", "commitsCount": 1}, {"username": "iliyanyotov", "commitsCount": 1}, {"username": "jascodes", "commitsCount": 1}, {"username": "klmdb", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "luiscoms", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "monkindey", "commitsCount": 1}, {"username": "nick-woodward", "commitsCount": 1}, {"username": "nilswindisch", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "onbjerg", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "ozzywalsh", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "rainboxx", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "spoike", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "wsmd", "commitsCount": 1}, {"username": "xenyal", "commitsCount": 1}, {"username": "yanamura", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yurasid", "commitsCount": 1}, {"username": "zhangciwu", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 67}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 175}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 13914, "testsSize": 18324, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/husky.svg?style=flat", "shields": "https://img.shields.io/npm/dm/husky.svg", "content": "https://img.shields.io/npm/dm/husky.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20&%20Linux", "service": "https://api.travis-ci.org/typicode/husky.svg?branch=master", "shields": "https://img.shields.io/travis/typicode/husky/master.svg", "content": "https://img.shields.io/travis/typicode/husky/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows", "service": "https://ci.appveyor.com/api/projects/status/typicode/husky/branch/master", "shields": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg", "content": "https://img.shields.io/appveyor/ci/typicode/husky/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 20177, "downloadsCount": 13804569.666666666, "downloadsAcceleration": 48004.88065068491, "dependentsCount": 905}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9720342465753424, "openIssues": 0.9439890710382514, "issuesDistribution": 0}}, "score": {"final": 0.7762843159031783, "detail": {"quality": 0.9782284044490229, "popularity": 0.7128123247333653, "maintenance": 0.6666613740336961}}}}, {"node-sass": {"analyzedAt": "2020-06-20T07:24:48.007Z", "collected": {"metadata": {"name": "node-sass", "scope": "unscoped", "version": "4.14.1", "description": "Wrapper around libsass", "keywords": ["css", "libsass", "preprocessor", "sass", "scss", "style"], "date": "2020-05-04T23:42:29.967Z", "author": {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com", "url": "http://andrew.github.com"}, "publisher": {"username": "xzyfer", "email": "xzyfer@gmail.com"}, "maintainers": [{"username": "saperski", "email": "npm@saper.info"}, {"username": "xzyfer", "email": "xzyfer@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sass/node-sass.git"}, "links": {"npm": "https://www.npmjs.com/package/node-sass", "homepage": "https://github.com/sass/node-sass", "repository": "https://github.com/sass/node-sass", "bugs": "https://github.com/sass/node-sass/issues"}, "license": "MIT", "dependencies": {"async-foreach": "^0.1.3", "chalk": "^1.1.1", "cross-spawn": "^3.0.0", "gaze": "^1.0.0", "get-stdin": "^4.0.1", "glob": "^7.0.3", "in-publish": "^2.0.0", "lodash": "^4.17.15", "meow": "^3.7.0", "mkdirp": "^0.5.1", "nan": "^2.13.2", "node-gyp": "^3.8.0", "npmlog": "^4.0.0", "request": "^2.88.0", "sass-graph": "2.2.5", "stdout-stream": "^1.4.0", "true-case-path": "^1.0.2"}, "devDependencies": {"coveralls": "^3.0.2", "eslint": "^3.4.0", "fs-extra": "^0.30.0", "istanbul": "^0.4.2", "mocha": "^3.1.2", "mocha-lcov-reporter": "^1.2.0", "object-merge": "^2.5.1", "read-yaml": "^1.0.0", "rimraf": "^2.5.2", "sass-spec": "git+https://github.com/sass/sass-spec.git#dc2d573", "unique-temp-dir": "^1.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 3}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-sass\n\n#### Supported Node.js versions vary by release, please consult the [releases page](https://github.com/sass/node-sass/releases). Below is a quick guide for minimum support:\n\nNodeJS  | Minimum node-sass version | Node Module\n--------|--------------------------|------------\nNode 14 | 4.14+                    | 83\nNode 13 | 4.13+                    | 79\nNode 12 | 4.12+                    | 72\nNode 11 | 4.10+                    | 67\nNode 10 | 4.9+                     | 64\nNode 8  | 4.5.3+                   | 57\n\n<table>\n  <tr>\n    <td>\n      <img width=\"77px\" alt=\"Sass logo\" src=\"https://rawgit.com/sass/node-sass/master/media/logo.svg\" />\n    </td>\n    <td valign=\"bottom\" align=\"right\">\n      <a href=\"https://www.npmjs.com/package/node-sass\">\n        <img width=\"100%\" src=\"https://nodei.co/npm/node-sass.png?downloads=true&downloadRank=true&stars=true\">\n      </a>\n    </td>\n  </tr>\n</table>\n\n[![Build Status](https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat)](https://travis-ci.org/sass/node-sass)\n[![Build status](https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true)](https://ci.appveyor.com/project/sass/node-sass/branch/master)\n[![npm version](https://badge.fury.io/js/node-sass.svg)](http://badge.fury.io/js/node-sass)\n[![Dependency Status](https://david-dm.org/sass/node-sass.svg?theme=shields.io)](https://david-dm.org/sass/node-sass)\n[![devDependency Status](https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io)](https://david-dm.org/sass/node-sass#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master)](https://coveralls.io/r/sass/node-sass?branch=master)\n[![Inline docs](http://inch-ci.org/github/sass/node-sass.svg?branch=master)](http://inch-ci.org/github/sass/node-sass)\n[![Join us in Slack](https://libsass-slack.herokuapp.com/badge.svg)](https://libsass-slack.herokuapp.com/)\n\nNode-sass is a library that provides binding for Node.js to [LibSass], the C version of the popular stylesheet preprocessor, Sass.\n\nIt allows you to natively compile .scss files to css at incredible speed and automatically via a connect middleware.\n\nFind it on npm: <https://www.npmjs.com/package/node-sass>\n\nFollow @nodesass on twitter for release updates: <https://twitter.com/nodesass>\n\n## Install\n\n```shell\nnpm install node-sass\n```\n\nSome users have reported issues installing on Ubuntu due to `node` being registered to another package. [Follow the official NodeJS docs](https://github.com/nodesource/distributions/blob/master/README.md#debinstall) to install NodeJS so that `#!/usr/bin/env node` correctly resolves.\n\nCompiling on Windows machines requires the [node-gyp prerequisites](https://github.com/nodejs/node-gyp#on-windows).\n\nAre you seeing the following error? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md#installing-node-sass-4x-with-node--4).**\n\n```\nSyntaxError: Use of const in strict mode.\n```\n\n**Having installation troubles? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md).**\n\n### Install from mirror in China\n\n```shell\nnpm install -g mirror-config-china --registry=http://registry.npm.taobao.org\nnpm install node-sass\n```\n\n## Usage\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});\n```\n\n## Options\n\n### file\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nPath to a file for [LibSass] to compile.\n\n### data\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nA string to pass to [LibSass] to compile. It is recommended that you use `includePaths` in conjunction with this so that [LibSass] can find files when using the `@import` directive.\n\n### importer (>= v2.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n* Type: `Function | Function[]` signature `function(url, prev, done)`\n* Default: `undefined`\n\nFunction Parameters and Information:\n\n* `url (String)` - the path in import **as-is**, which [LibSass] encountered\n* `prev (String)` - the previously resolved path\n* `done (Function)` - a callback function to invoke on async completion, takes an object literal containing\n  * `file (String)` - an alternate path for [LibSass] to use **OR**\n  * `contents (String)` - the imported contents (for example, read from memory or the file system)\n\nHandles when [LibSass] encounters the `@import` directive. A custom importer allows extension of the [LibSass] engine in both a synchronous and asynchronous manner. In both cases, the goal is to either `return` or call `done()` with an object literal. Depending on the value of the object literal, one of two things will happen.\n\nWhen returning or calling `done()` with `{ file: \"String\" }`, the new file path will be assumed for the `@import`. It's recommended to be mindful of the value of `prev` in instances where relative path resolution may be required.\n\nWhen returning or calling `done()` with `{ contents: \"String\" }`, the string value will be used as if the file was read in through an external source.\n\nStarting from v3.0.0:\n\n* `this` refers to a contextual scope for the immediate run of `sass.render` or `sass.renderSync`\n\n* importers can return error and LibSass will emit that error in response. For instance:\n\n  ```javascript\n  done(new Error('doesn\\'t exist!'));\n  // or return synchronously\n  return new Error('nothing to do here');\n  ```\n\n* importer can be an array of functions, which will be called by LibSass in the order of their occurrence in array. This helps user specify special importer for particular kind of path (filesystem, http). If an importer does not want to handle a particular path, it should return `null`. See [functions section](#functions--v300---experimental) for more details on Sass types.\n\n### functions (>= v3.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n`functions` is an `Object` that holds a collection of custom functions that may be invoked by the sass files being compiled. They may take zero or more input parameters and must return a value either synchronously (`return ...;`) or asynchronously (`done();`). Those parameters will be instances of one of the constructors contained in the `require('node-sass').types` hash. The return value must be of one of these types as well. See the list of available types below:\n\n#### types.Number(value [, unit = \"\"])\n\n* `getValue()`/ `setValue(value)` : gets / sets the numerical portion of the number\n* `getUnit()` / `setUnit(unit)` : gets / sets the unit portion of the number\n\n#### types.String(value)\n\n* `getValue()` / `setValue(value)` : gets / sets the enclosed string\n\n#### types.Color(r, g, b [, a = 1.0]) or types.Color(argb)\n\n* `getR()` / `setR(value)` : red component (integer from `0` to `255`)\n* `getG()` / `setG(value)` : green component (integer from `0` to `255`)\n* `getB()` / `setB(value)` : blue component (integer from `0` to `255`)\n* `getA()` / `setA(value)` : alpha component (number from `0` to `1.0`)\n\nExample:\n\n```javascript\nvar Color = require('node-sass').types.Color,\n  c1 = new Color(255, 0, 0),\n  c2 = new Color(0xff0088cc);\n```\n\n#### types.Boolean(value)\n\n* `getValue()` : gets the enclosed boolean\n* `types.Boolean.TRUE` : Singleton instance of `types.Boolean` that holds \"true\"\n* `types.Boolean.FALSE` : Singleton instance of `types.Boolean` that holds \"false\"\n\n#### types.List(length [, commaSeparator = true])\n\n* `getValue(index)` / `setValue(index, value)` : `value` must itself be an instance of one of the constructors in `sass.types`.\n* `getSeparator()` / `setSeparator(isComma)` : whether to use commas as a separator\n* `getLength()`\n\n#### types.Map(length)\n\n* `getKey(index)` / `setKey(index, value)`\n* `getValue(index)` / `setValue(index, value)`\n* `getLength()`\n\n#### types.Null()\n\n* `types.Null.NULL` : Singleton instance of `types.Null`.\n\n#### Example\n\n```javascript\nsass.renderSync({\n  data: '#{headings(2,5)} { color: #08c; }',\n  functions: {\n    'headings($from: 0, $to: 6)': function(from, to) {\n      var i, f = from.getValue(), t = to.getValue(),\n          list = new sass.types.List(t - f + 1);\n\n      for (i = f; i <= t; i++) {\n        list.setValue(i - f, new sass.types.String('h' + i));\n      }\n\n      return list;\n    }\n  }\n});\n```\n\n### includePaths\n\n* Type: `Array<String>`\n* Default: `[]`\n\nAn array of paths that [LibSass] can look in to attempt to resolve your `@import` declarations. When using `data`, it is recommended that you use this.\n\n### indentedSyntax\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` values enable [Sass Indented Syntax](https://sass-lang.com/documentation/file.INDENTED_SYNTAX.html) for parsing the data string or file.\n\n__Note:__ node-sass/libsass will compile a mixed library of scss and indented syntax (.sass) files with the Default setting (false) as long as .sass and .scss extensions are used in filenames.\n\n### indentType (>= v3.0.0)\n\n* Type: `String`\n* Default: `space`\n\nUsed to determine whether to use space or tab character for indentation.\n\n### indentWidth (>= v3.0.0)\n\n* Type: `Number`\n* Default: `2`\n* Maximum: `10`\n\nUsed to determine the number of spaces or tabs to be used for indentation.\n\n### linefeed (>= v3.0.0)\n\n* Type: `String`\n* Default: `lf`\n\nUsed to determine whether to use `cr`, `crlf`, `lf` or `lfcr` sequence for line break.\n\n### omitSourceMapUrl\n\n* Type: `Boolean`\n* Default: `false`\n\n**Special:** When using this, you should also specify `outFile` to avoid unexpected behavior.\n\n`true` values disable the inclusion of source map information in the output file.\n\n### outFile\n\n* Type: `String | null`\n* Default: `null`\n\n**Special:** Required when `sourceMap` is a truthy value\n\nSpecify the intended location of the output file. Strongly recommended when outputting source maps so that they can properly refer back to their intended files.\n\n**Attention** enabling this option will **not** write the file on disk for you, it's for internal reference purpose only (to generate the map for example).\n\nExample on how to write it on the disk\n\n```javascript\nsass.render({\n    ...\n    outFile: yourPathTotheFile,\n  }, function(error, result) { // node-style callback from v3.0.0 onwards\n    if(!error){\n      // No errors during the compilation, write this result on the disk\n      fs.writeFile(yourPathTotheFile, result.css, function(err){\n        if(!err){\n          //file written on disk\n        }\n      });\n    }\n  });\n});\n```\n\n### outputStyle\n\n* Type: `String`\n* Default: `nested`\n* Values: `nested`, `expanded`, `compact`, `compressed`\n\nDetermines the output format of the final CSS style.\n\n### precision\n\n* Type: `Integer`\n* Default: `5`\n\nUsed to determine how many digits after the decimal will be allowed. For instance, if you had a decimal number of `1.23456789` and a precision of `5`, the result will be `1.23457` in the final CSS.\n\n### sourceComments\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` Enables the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins.\n\n### sourceMap\n\n* Type: `Boolean | String | undefined`\n* Default: `undefined`\n\nEnables source map generation during `render` and `renderSync`.\n\nWhen `sourceMap === true`, the value of `outFile` is used as the target output location for the source map with the suffix `.map` appended. If no `outFile` is set, `sourceMap` parameter is ignored.\n\nWhen `typeof sourceMap === \"string\"`, the value of `sourceMap` will be used as the writing location for the file.\n\n### sourceMapContents\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` includes the `contents` in the source map information\n\n### sourceMapEmbed\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` embeds the source map as a data URI\n\n### sourceMapRoot\n\n* Type: `String`\n* Default: `undefined`\n\nthe value will be emitted as `sourceRoot` in the source map information\n\n## `render` Callback (>= v3.0.0)\n\nnode-sass supports standard node style asynchronous callbacks with the signature of `function(err, result)`. In error conditions, the `error` argument is populated with the error object. In success conditions, the `result` object is populated with an object describing the result of the render call.\n\n### Error Object\n\n* `message` (String) - The error message.\n* `line` (Number) - The line number of error.\n* `column` (Number) - The column number of error.\n* `status` (Number) - The status code.\n* `file` (String) - The filename of error. In case `file` option was not set (in favour of `data`), this will reflect the value `stdin`.\n\n### Result Object\n\n* `css` (Buffer) - The compiled CSS. Write this to a file, or serve it out as needed.\n* `map` (Buffer) - The source map\n* `stats` (Object) - An object containing information about the compile. It contains the following keys:\n  * `entry` (String) - The path to the scss file, or `data` if the source was not a file\n  * `start` (Number) - Date.now() before the compilation\n  * `end` (Number) - Date.now() after the compilation\n  * `duration` (Number) - *end* - *start*\n  * `includedFiles` (Array) - Absolute paths to all related scss files in no particular order.\n\n### Examples\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: '/path/to/myFile.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash, this.callback contains the node-style callback\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  },\n  includePaths: [ 'lib/', 'mod/' ],\n  outputStyle: 'compressed'\n}, function(error, result) { // node-style callback from v3.0.0 onwards\n  if (error) {\n    console.log(error.status); // used to be \"code\" in v2x and below\n    console.log(error.column);\n    console.log(error.message);\n    console.log(error.line);\n  }\n  else {\n    console.log(result.css.toString());\n\n    console.log(result.stats);\n\n    console.log(result.map.toString());\n    // or better\n    console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\n  }\n});\n// OR\nvar result = sass.renderSync({\n  file: '/path/to/file.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  outputStyle: 'compressed',\n  outFile: '/to/my/output.css',\n  sourceMap: true, // or an absolute or relative (to outFile) path\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  }\n});\n\nconsole.log(result.css);\nconsole.log(result.map);\nconsole.log(result.stats);\n```\n\n### Special behaviours\n\n* In the case that both `file` and `data` options are set, node-sass will give precedence to `data` and use `file` to calculate paths in sourcemaps.\n\n### Version information (>= v2.0.0)\n\nBoth `node-sass` and `libsass` version info is now exposed via the `info` method:\n\n```javascript\nvar sass = require('node-sass');\n\nconsole.log(sass.info);\n\n/*\n  it will output something like:\n\n  node-sass       2.0.1   (Wrapper)       [JavaScript]\n  libsass         3.1.0   (Sass Compiler) [C/C++]\n*/\n```\n\nSince node-sass >=v3.0.0 LibSass version is determined at run time.\n\n## Integrations\n\nListing of community uses of node-sass in build tools and frameworks.\n\n### Brackets extension\n\n[@jasonsanjose](https://github.com/jasonsanjose) has created a [Brackets](http://brackets.io) extension based on node-sass: <https://github.com/jasonsanjose/brackets-sass>. When editing Sass files, the extension compiles changes on save. The extension also integrates with Live Preview to show Sass changes in the browser without saving or compiling.\n\n### Brunch plugin\n\n[Brunch](http://brunch.io)'s official sass plugin uses node-sass by default, and automatically falls back to ruby if use of Compass is detected: <https://github.com/brunch/sass-brunch>\n\n### Connect/Express middleware\n\nRecompile `.scss` files automatically for connect and express based http servers.\n\nThis functionality has been moved to [`node-sass-middleware`](https://github.com/sass/node-sass-middleware) in node-sass v1.0.0\n\n### DocPad Plugin\n\n[@10xLaCroixDrinker](https://github.com/10xLaCroixDrinker) wrote a [DocPad](http://docpad.org/) plugin that compiles `.scss` files using node-sass: <https://github.com/10xLaCroixDrinker/docpad-plugin-nodesass>\n\n### Duo.js extension\n\n[@stephenway](https://github.com/stephenway) has created an extension that transpiles Sass to CSS using node-sass with [duo.js](http://duojs.org/)\n<https://github.com/duojs/sass>\n\n### Grunt extension\n\n[@sindresorhus](https://github.com/sindresorhus/) has created a set of grunt tasks based on node-sass: <https://github.com/sindresorhus/grunt-sass>\n\n### Gulp extension\n\n[@dlmanning](https://github.com/dlmanning/) has created a gulp sass plugin based on node-sass: <https://github.com/dlmanning/gulp-sass>\n\n### Harp\n\n[@sintaxi](https://github.com/sintaxi)\u2019s Harp web server implicitly compiles `.scss` files using node-sass: <https://github.com/sintaxi/harp>\n\n### Metalsmith plugin\n\n[@stevenschobert](https://github.com/stevenschobert/) has created a metalsmith plugin based on node-sass: <https://github.com/stevenschobert/metalsmith-sass>\n\n### Meteor plugin\n\n[@fourseven](https://github.com/fourseven) has created a meteor plugin based on node-sass: <https://github.com/fourseven/meteor-scss>\n\n### Mimosa module\n\n[@dbashford](https://github.com/dbashford) has created a Mimosa module for sass which includes node-sass: <https://github.com/dbashford/mimosa-sass>\n\n## Example App\n\nThere is also an example connect app here: <https://github.com/andrew/node-sass-example>\n\n## Rebuilding binaries\n\nNode-sass includes pre-compiled binaries for popular platforms, to add a binary for your platform follow these steps:\n\nCheck out the project:\n\n```bash\ngit clone --recursive https://github.com/sass/node-sass.git\ncd node-sass\nnpm install\nnode scripts/build -f  # use -d switch for debug release\n# if succeeded, it will generate and move\n# the binary in vendor directory.\n```\n\n## Command Line Interface\n\nThe interface for command-line usage is fairly simplistic at this stage, as seen in the following usage section.\n\nOutput will be sent to stdout if the `--output` flag is omitted.\n\n### Usage\n\n `node-sass [options] <input> [output]`\n Or:\n `cat <input> | node-sass > output`\n\nExample:\n\n`node-sass src/style.scss dest/style.css`\n\n **Options:**\n\n```bash\n    -w, --watch                Watch a directory or file\n    -r, --recursive            Recursively watch directories or files\n    -o, --output               Output directory\n    -x, --omit-source-map-url  Omit source map URL comment from output\n    -i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n    -q, --quiet                Suppress log output except on error\n    -v, --version              Prints version info\n    --output-style             CSS output style (nested | expanded | compact | compressed)\n    --indent-type              Indent type for output CSS (space | tab)\n    --indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n    --linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n    --source-comments          Include debug info in output\n    --source-map               Emit source map\n    --source-map-contents      Embed include contents in map\n    --source-map-embed         Embed sourceMappingUrl as data URI\n    --source-map-root          Base path, will be emitted in source-map as is\n    --include-path             Path to look for imported files\n    --follow                   Follow symlinked directories\n    --precision                The amount of precision allowed in decimal numbers\n    --error-bell               Output a bell character on errors\n    --importer                 Path to .js file containing custom importer\n    --functions                Path to .js file containing custom functions\n    --help                     Print usage info\n```\n\nThe `input` can be either a single `.scss` or `.sass`, or a directory. If the input is a directory the `--output` flag must also be supplied.\n\nAlso, note `--importer` takes the (absolute or relative to pwd) path to a js file, which needs to have a default `module.exports` set to the importer function. See our test [fixtures](https://github.com/sass/node-sass/tree/974f93e76ddd08ea850e3e663cfe64bb6a059dd3/test/fixtures/extras) for example.\n\nThe `--source-map` option accepts a boolean value, in which case it replaces destination extension with `.css.map`. It also accepts path to `.map` file and even path to the desired directory.\nWhen compiling a directory `--source-map` can either be a boolean value or a directory.\n\n## Binary configuration parameters\n\nnode-sass supports different configuration parameters to change settings related to the sass binary such as binary name, binary path or alternative download path. Following parameters are supported by node-sass:\n\nVariable name    | .npmrc parameter | Process argument   | Value\n-----------------|------------------|--------------------|------\nSASS_BINARY_NAME | sass_binary_name | --sass-binary-name | path\nSASS_BINARY_SITE | sass_binary_site | --sass-binary-site | URL\nSASS_BINARY_PATH | sass_binary_path | --sass-binary-path | path\nSASS_BINARY_DIR  | sass_binary_dir  | --sass-binary-dir  | path\n\nThese parameters can be used as environment variable:\n\n* E.g. `export SASS_BINARY_SITE=http://example.com/`\n\nAs local or global [.npmrc](https://docs.npmjs.com/misc/config) configuration file:\n\n* E.g. `sass_binary_site=http://example.com/`\n\nAs a process argument:\n\n* E.g. `npm install node-sass --sass-binary-site=http://example.com/`\n\n## Post-install Build\n\nInstall runs only two Mocha tests to see if your machine can use the pre-built [LibSass] which will save some time during install. If any tests fail it will build from source.\n\n## Maintainers\n\nThis module is brought to you and maintained by the following people:\n\n* Michael Mifsud - Project Lead ([Github](https://github.com/xzyfer) / [Twitter](https://twitter.com/xzyfer))\n* Andrew Nesbitt ([Github](https://github.com/andrew) / [Twitter](https://twitter.com/teabass))\n* Dean Mao ([Github](https://github.com/deanmao) / [Twitter](https://twitter.com/deanmao))\n* Brett Wilkins ([Github](https://github.com/bwilkins) / [Twitter](https://twitter.com/bjmaz))\n* Keith Cirkel ([Github](https://github.com/keithamus) / [Twitter](https://twitter.com/Keithamus))\n* Laurent Goderre ([Github](https://github.com/laurentgoderre) / [Twitter](https://twitter.com/laurentgoderre))\n* Nick Schonning ([Github](https://github.com/nschonni) / [Twitter](https://twitter.com/nschonni))\n* Adeel Mujahid ([Github](https://github.com/am11) / [Twitter](https://twitter.com/adeelbm))\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here.](https://github.com/sass/node-sass/graphs/contributors)\n\n### Note on Patches/Pull Requests\n\nCheck out our [Contributing guide](/.github/CONTRIBUTING.md)\n\n## Copyright\n\nCopyright (c) 2015 Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass/blob/master/LICENSE) for details.\n\n[LibSass]: https://github.com/sass/libsass"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 759780}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4855218}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20867387}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 63141141}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 116030912}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 215476344}], "dependentsCount": 6941, "starsCount": 260}, "github": {"homepage": "https://npmjs.org/package/node-sass", "starsCount": 7236, "forksCount": 1109, "subscribersCount": 204, "issues": {"count": 2922, "openCount": 140, "distribution": {"3600": 776, "10800": 292, "32400": 324, "97200": 319, "291600": 223, "874800": 241, "2624400": 182, "7873200": 212, "23619600": 160, "70858800": 96, "212576400": 97}, "isDisabled": false}, "contributors": [{"username": "xzyfer", "commitsCount": 283}, {"username": "am11", "commitsCount": 200}, {"username": "andrew", "commitsCount": 146}, {"username": "nschonni", "commitsCount": 95}, {"username": "saper", "commitsCount": 85}, {"username": "deanmao", "commitsCount": 42}, {"username": "kevva", "commitsCount": 35}, {"username": "bwilkins", "commitsCount": 11}, {"username": "LaurentGoderre", "commitsCount": 9}, {"username": "arian", "commitsCount": 8}, {"username": "jhnns", "commitsCount": 8}, {"username": "deepak1556", "commitsCount": 7}, {"username": "gonghao", "commitsCount": 7}, {"username": "sindresorhus", "commitsCount": 7}, {"username": "blopker", "commitsCount": 6}, {"username": "larsimmisch", "commitsCount": 6}, {"username": "Jakobo", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "mgol", "commitsCount": 5}, {"username": "msokk", "commitsCount": 5}, {"username": "stefanpenner", "commitsCount": 5}, {"username": "QuLogic", "commitsCount": 4}, {"username": "XhmikosR", "commitsCount": 4}, {"username": "kkoopa", "commitsCount": 4}, {"username": "rvagg", "commitsCount": 4}, {"username": "samccone", "commitsCount": 4}, {"username": "Igorbek", "commitsCount": 3}, {"username": "dotzero", "commitsCount": 3}, {"username": "enriclluelles", "commitsCount": 3}, {"username": "fh1ch", "commitsCount": 3}, {"username": "jasonsanjose", "commitsCount": 3}, {"username": "pluma", "commitsCount": 3}, {"username": "simonexmachina", "commitsCount": 3}, {"username": "watilde", "commitsCount": 3}, {"username": "akiran", "commitsCount": 2}, {"username": "blakmatrix", "commitsCount": 2}, {"username": "craigbarnes", "commitsCount": 2}, {"username": "delitescere", "commitsCount": 2}, {"username": "dylang", "commitsCount": 2}, {"username": "emirotin", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "gpapin", "commitsCount": 2}, {"username": "hcatlin", "commitsCount": 2}, {"username": "janpio", "commitsCount": 2}, {"username": "johnobe", "commitsCount": 2}, {"username": "kausters", "commitsCount": 2}, {"username": "kkopachev", "commitsCount": 2}, {"username": "marvinhagemeister", "commitsCount": 2}, {"username": "masterbee", "commitsCount": 2}, {"username": "mattrobenolt", "commitsCount": 2}, {"username": "mauritslamers", "commitsCount": 2}, {"username": "mgreter", "commitsCount": 2}, {"username": "mnutt", "commitsCount": 2}, {"username": "mweibel", "commitsCount": 2}, {"username": "naartjie", "commitsCount": 2}, {"username": "nc", "commitsCount": 2}, {"username": "ndhoule", "commitsCount": 2}, {"username": "nowells", "commitsCount": 2}, {"username": "paulcpederson", "commitsCount": 2}, {"username": "rubennorte", "commitsCount": 2}, {"username": "stephenway", "commitsCount": 2}, {"username": "10xLaCroixDrinker", "commitsCount": 1}, {"username": "DerZyklop", "commitsCount": 1}, {"username": "Gwerlas", "commitsCount": 1}, {"username": "MLoughry", "commitsCount": 1}, {"username": "Nico385412", "commitsCount": 1}, {"username": "NicolaiSoeborg", "commitsCount": 1}, {"username": "Sirivasv", "commitsCount": 1}, {"username": "ZoranPandovski", "commitsCount": 1}, {"username": "abetomo", "commitsCount": 1}, {"username": "ajhsu", "commitsCount": 1}, {"username": "anaibol", "commitsCount": 1}, {"username": "arzafran", "commitsCount": 1}, {"username": "asottile", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "cheesestringer", "commitsCount": 1}, {"username": "daltones", "commitsCount": 1}, {"username": "deadbeef404", "commitsCount": 1}, {"username": "evanfuture", "commitsCount": 1}, {"username": "foladipo", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "howlowck", "commitsCount": 1}, {"username": "hweeks", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jhermsmeier", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "lox", "commitsCount": 1}, {"username": "mcdado", "commitsCount": 1}, {"username": "mohuk", "commitsCount": 1}, {"username": "mscdex", "commitsCount": 1}, {"username": "nottrobin", "commitsCount": 1}, {"username": "ofrobots", "commitsCount": 1}, {"username": "pselden", "commitsCount": 1}, {"username": "ruedap", "commitsCount": 1}, {"username": "rupav", "commitsCount": 1}, {"username": "screamingmunch", "commitsCount": 1}, {"username": "sobolevn", "commitsCount": 1}, {"username": "tnguyen14", "commitsCount": 1}, {"username": "ysugimoto", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 24346, "testsSize": 182813, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/node-sass.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/node-sass.svg", "content": "https://img.shields.io/npm/v/node-sass.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat", "service": "https://api.travis-ci.org/sass/node-sass.svg?branch=master", "shields": "https://img.shields.io/travis/sass/node-sass/master.svg", "content": "https://img.shields.io/travis/sass/node-sass/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master", "shields": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://david-dm.org/sass/node-sass.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass.svg", "shields": "https://img.shields.io/david/sass/node-sass.svg", "content": "https://img.shields.io/david/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass/dev-status.svg", "shields": "https://img.shields.io/david/dev/sass/node-sass.svg", "content": "https://img.shields.io/david/dev/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "service": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/sass/node-sass/master.svg", "content": "https://img.shields.io/coveralls/sass/node-sass/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.75, "outdatedDependencies": {"get-stdin": {"required": "^4.0.1", "stable": "8.0.0", "latest": "8.0.0"}, "meow": {"required": "^3.7.0", "stable": "7.0.1", "latest": "7.0.1"}, "true-case-path": {"required": "^1.0.2", "stable": "2.2.1", "latest": "2.2.1"}, "sass-graph": {"required": "2.2.5", "stable": "3.0.5", "latest": "3.0.5"}, "mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "chalk": {"required": "^1.1.1", "stable": "4.1.0", "latest": "4.1.0"}, "cross-spawn": {"required": "^3.0.0", "stable": "7.0.3", "latest": "7.0.3"}, "node-gyp": {"required": "^3.8.0", "stable": "7.0.0", "latest": "7.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9624999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 8908, "downloadsCount": 21047047, "downloadsAcceleration": 39875.86213850838, "dependentsCount": 6941}, "maintenance": {"releasesFrequency": 0.8236301369863014, "commitsFrequency": 0.7076883561643835, "openIssues": 1, "issuesDistribution": 0.396290740843367}}, "score": {"final": 0.8898753569506557, "detail": {"quality": 0.9339174610532262, "popularity": 0.7764588897092806, "maintenance": 0.9655414492469702}}}}, {"babel-preset-react": {"analyzedAt": "2020-06-10T03:16:52.022Z", "collected": {"metadata": {"name": "babel-preset-react", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all React plugins.", "date": "2017-04-07T15:19:26.773Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-react", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-preset-flow": "^6.23.0", "babel-plugin-syntax-jsx": "^6.3.13", "babel-plugin-transform-react-display-name": "^6.23.0", "babel-plugin-transform-react-jsx": "^6.24.1", "babel-plugin-transform-react-jsx-source": "^6.22.0", "babel-plugin-transform-react-jsx-self": "^6.22.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-react\n\n> Babel preset for all React plugins.\n\nThis preset includes the following plugins/presets:\n\n- [preset-flow](https://babeljs.io/docs/plugins/preset-flow/)\n- [syntax-jsx](https://babeljs.io/docs/plugins/syntax-jsx/)\n- [transform-react-jsx](https://babeljs.io/docs/plugins/transform-react-jsx/)\n- [transform-react-display-name](https://babeljs.io/docs/plugins/transform-react-display-name/)\n\n## Install\n\n> You can also check out the React [Getting Started page](https://facebook.github.io/react/docs/hello-world.html)\n\n> For more info, check out the setup page on the [cli](/docs/setup/) and the [usage](/docs/usage/cli/) docs.\n\nInstall the CLI and this preset\n\n```sh\nnpm install --save-dev babel-cli babel-preset-react\n```\n\nMake a .babelrc config file with the preset\n\n```sh\necho '{ \"presets\": [\"react\"] }' > .babelrc\n```\n\nCreate a file to run on\n\n```sh\necho '<h1>Hello, world!</h1>' > index.js\n```\n\nView the output\n\n```sh\n./node_modules/.bin/babel index.js\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"react\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets react \n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"react\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 162087}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 844367}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3542419}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 10847980}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21365094}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 49378793}], "dependentsCount": 3657, "starsCount": 70}, "github": {"homepage": "https://babel.dev", "starsCount": 36754, "forksCount": 4311, "subscribersCount": 868, "issues": {"count": 11621, "openCount": 786, "distribution": {"3600": 2464, "10800": 917, "32400": 1067, "97200": 1241, "291600": 1059, "874800": 1003, "2624400": 853, "7873200": 811, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 57}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 204}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 412}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324572, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42101, "downloadsCount": 3615993.3333333335, "downloadsAcceleration": -8448.282191780829, "dependentsCount": 3657}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24127593449323603}}, "score": {"final": 0.7167073325417557, "detail": {"quality": 0.9857853708571743, "popularity": 0.6315973798354552, "maintenance": 0.5711789666919831}}}}, {"ts-node": {"analyzedAt": "2020-06-03T10:12:14.851Z", "collected": {"metadata": {"name": "ts-node", "scope": "unscoped", "version": "8.10.2", "description": "TypeScript execution environment and REPL for node.js, with source map support", "keywords": ["typescript", "node", "runtime", "environment", "ts", "compiler"], "date": "2020-05-28T15:44:45.616Z", "author": {"name": "Blake Embrey", "email": "hello@blakeembrey.com", "url": "http://blakeembrey.me", "username": "blakeembrey"}, "publisher": {"username": "cspotcode", "email": "cspotcode@gmail.com"}, "maintainers": [{"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "cspotcode", "email": "cspotcode@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/TypeStrong/ts-node.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-node"}, "license": "MIT", "dependencies": {"arg": "^4.1.0", "diff": "^4.0.1", "make-error": "^1.1.1", "source-map-support": "^0.5.17", "yn": "3.1.1"}, "devDependencies": {"@types/chai": "^4.0.4", "@types/diff": "^4.0.2", "@types/mocha": "^5.2.7", "@types/node": "13.13.5", "@types/proxyquire": "^1.3.28", "@types/react": "^16.0.2", "@types/semver": "^7.1.0", "@types/source-map-support": "^0.5.0", "axios": "^0.19.0", "chai": "^4.0.1", "istanbul": "^0.4.0", "mocha": "^6.2.2", "ntypescript": "^1.201507091536.1", "proxyquire": "^2.0.0", "react": "^16.0.0", "rimraf": "^3.0.0", "semver": "^7.1.3", "tslint": "^6.1.0", "tslint-config-standard": "^9.0.0", "typescript": "3.8.3", "typescript-json-schema": "^0.42.0", "util.promisify": "^1.0.1"}, "peerDependencies": {"typescript": ">=2.7"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 13}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 21}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 33}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 865250}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4510538}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19663274}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 56557080}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 97912971}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 164721240}], "dependentsCount": 1966, "starsCount": 51}, "github": {"starsCount": 6921, "forksCount": 293, "subscribersCount": 73, "issues": {"count": 1064, "openCount": 82, "distribution": {"3600": 194, "10800": 86, "32400": 125, "97200": 138, "291600": 84, "874800": 95, "2624400": 87, "7873200": 102, "23619600": 74, "70858800": 57, "212576400": 22}, "isDisabled": false}, "contributors": [{"username": "blakeembrey", "commitsCount": 368}, {"username": "cspotcode", "commitsCount": 42}, {"username": "greenkeeperio-bot", "commitsCount": 15}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "stelcheck", "commitsCount": 4}, {"username": "G-Rath", "commitsCount": 3}, {"username": "unional", "commitsCount": 3}, {"username": "Jontem", "commitsCount": 2}, {"username": "basarat", "commitsCount": 2}, {"username": "chrisleck", "commitsCount": 2}, {"username": "srolel", "commitsCount": 2}, {"username": "sylc", "commitsCount": 2}, {"username": "3mard", "commitsCount": 1}, {"username": "BrunnerLivio", "commitsCount": 1}, {"username": "Deilan", "commitsCount": 1}, {"username": "Janpot", "commitsCount": 1}, {"username": "KasparEtter", "commitsCount": 1}, {"username": "Llorx", "commitsCount": 1}, {"username": "LoicPoullain", "commitsCount": 1}, {"username": "Maecenas", "commitsCount": 1}, {"username": "MicahZoltu", "commitsCount": 1}, {"username": "NaridaL", "commitsCount": 1}, {"username": "Psidium", "commitsCount": 1}, {"username": "Weakky", "commitsCount": 1}, {"username": "Zlatkovsky", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "abraj", "commitsCount": 1}, {"username": "astashov", "commitsCount": 1}, {"username": "bertyhell", "commitsCount": 1}, {"username": "burnnat", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "caseyWebb", "commitsCount": 1}, {"username": "cdschmitz", "commitsCount": 1}, {"username": "cevek", "commitsCount": 1}, {"username": "cookrn", "commitsCount": 1}, {"username": "cthrax", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "devoto13", "commitsCount": 1}, {"username": "gfx", "commitsCount": 1}, {"username": "hiro08gh", "commitsCount": 1}, {"username": "jacobdcastro", "commitsCount": 1}, {"username": "joeskeen", "commitsCount": 1}, {"username": "jonaskello", "commitsCount": 1}, {"username": "jschwarty", "commitsCount": 1}, {"username": "kriszyp", "commitsCount": 1}, {"username": "ksamborski", "commitsCount": 1}, {"username": "kumarashwin", "commitsCount": 1}, {"username": "ledenis", "commitsCount": 1}, {"username": "ljani", "commitsCount": 1}, {"username": "mhegazy", "commitsCount": 1}, {"username": "morlay", "commitsCount": 1}, {"username": "musahaidari", "commitsCount": 1}, {"username": "nana4gonta", "commitsCount": 1}, {"username": "nomcopter", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "rakannimer", "commitsCount": 1}, {"username": "rharriso", "commitsCount": 1}, {"username": "rpd10", "commitsCount": 1}, {"username": "rsxdalv", "commitsCount": 1}, {"username": "rundef", "commitsCount": 1}, {"username": "sgoll", "commitsCount": 1}, {"username": "sharikovvladislav", "commitsCount": 1}, {"username": "shortenda", "commitsCount": 1}, {"username": "sisisin", "commitsCount": 1}, {"username": "steadicat", "commitsCount": 1}, {"username": "tenorok", "commitsCount": 1}, {"username": "thetutlage", "commitsCount": 1}, {"username": "timocov", "commitsCount": 1}, {"username": "whitecolor", "commitsCount": 1}, {"username": "xaclincoln", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 45}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 71}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 117}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 31867}, "linters": ["editorconfig", "tslint"], "coverage": 0.74, "outdatedDependencies": {"yn": {"required": "3.1.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.961, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 7409, "downloadsCount": 18852360, "downloadsAcceleration": 74205.31992009131, "dependentsCount": 1966}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4481090497387526}}, "score": {"final": 0.8402280160243665, "detail": {"quality": 0.8145061179243254, "popularity": 0.7244307208921772, "maintenance": 0.9780726523851624}}}}, {"commander": {"analyzedAt": "2020-06-20T06:04:18.845Z", "collected": {"metadata": {"name": "commander", "scope": "unscoped", "version": "5.1.0", "description": "the complete solution for node.js command-line programs", "keywords": ["commander", "command", "option", "parser", "cli", "argument", "args", "argv"], "date": "2020-04-25T02:29:21.964Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "abetomo", "email": "abe@enzou.tokyo"}, "maintainers": [{"username": "abetomo", "email": "abe@enzou.tokyo"}, {"username": "shadowspawn", "email": "npm_j@ruru.gen.nz"}, {"username": "somekittens", "email": "rkoutnik@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "vanesyan", "email": "romain.vanesyan@gmail.com"}, {"username": "zhiyelee", "email": "zhiyelee@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/tj/commander.js.git"}, "links": {"npm": "https://www.npmjs.com/package/commander", "homepage": "https://github.com/tj/commander.js#readme", "repository": "https://github.com/tj/commander.js", "bugs": "https://github.com/tj/commander.js/issues"}, "license": "MIT", "devDependencies": {"@types/jest": "^25.2.1", "@types/node": "^12.12.36", "@typescript-eslint/eslint-plugin": "^2.29.0", "eslint": "^6.8.0", "eslint-config-standard-with-typescript": "^15.0.1", "eslint-plugin-jest": "^23.8.2", "jest": "^25.4.0", "standard": "^14.3.3", "typescript": "^3.7.5"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 9}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 26}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 6700897}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 43781825}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 183845294}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 543353842}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 985651127}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1759189869}], "dependentsCount": 39309, "starsCount": 1013}, "github": {"starsCount": 18104, "forksCount": 1250, "subscribersCount": 241, "issues": {"count": 1280, "openCount": 20, "distribution": {"3600": 139, "10800": 69, "32400": 82, "97200": 131, "291600": 81, "874800": 76, "2624400": 115, "7873200": 108, "23619600": 103, "70858800": 182, "212576400": 194}, "isDisabled": false}, "contributors": [{"username": "shadowspawn", "commitsCount": 167}, {"username": "tj", "commitsCount": 142}, {"username": "zhiyelee", "commitsCount": 76}, {"username": "abetomo", "commitsCount": 48}, {"username": "tonylukasavage", "commitsCount": 9}, {"username": "mojavelinux", "commitsCount": 8}, {"username": "alan-agius4", "commitsCount": 6}, {"username": "jaredpetersen", "commitsCount": 6}, {"username": "oGsLP", "commitsCount": 6}, {"username": "itay", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "focusaurus", "commitsCount": 4}, {"username": "sebastiendb", "commitsCount": 4}, {"username": "banli17", "commitsCount": 3}, {"username": "felixge", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 3}, {"username": "kira1928", "commitsCount": 3}, {"username": "sorohan", "commitsCount": 3}, {"username": "tandrewnichols", "commitsCount": 3}, {"username": "thethomaseffect", "commitsCount": 3}, {"username": "AlphaHydrae", "commitsCount": 2}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Globegitter", "commitsCount": 2}, {"username": "JustATrick", "commitsCount": 2}, {"username": "Quentin01", "commitsCount": 2}, {"username": "SomeKittens", "commitsCount": 2}, {"username": "ajfranzoia", "commitsCount": 2}, {"username": "codyj110", "commitsCount": 2}, {"username": "jhamlet", "commitsCount": 2}, {"username": "karfau", "commitsCount": 2}, {"username": "miyajan", "commitsCount": 2}, {"username": "noway", "commitsCount": 2}, {"username": "pRizz", "commitsCount": 2}, {"username": "palanik", "commitsCount": 2}, {"username": "qfox", "commitsCount": 2}, {"username": "rrthomas", "commitsCount": 2}, {"username": "usmonster", "commitsCount": 2}, {"username": "viniciusls", "commitsCount": 2}, {"username": "vonagam", "commitsCount": 2}, {"username": "yausername", "commitsCount": 2}, {"username": "zce", "commitsCount": 2}, {"username": "AMoreaux", "commitsCount": 1}, {"username": "ForJing", "commitsCount": 1}, {"username": "HakurouKen", "commitsCount": 1}, {"username": "KillWolfVlad", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "MarshallOfSound", "commitsCount": 1}, {"username": "Nepomuceno", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "TheRoSS", "commitsCount": 1}, {"username": "TheToolbox", "commitsCount": 1}, {"username": "ThomasSimoens", "commitsCount": 1}, {"username": "UrielCh", "commitsCount": 1}, {"username": "ValentinTrinque", "commitsCount": 1}, {"username": "Willv19", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "akvamalin", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "blair", "commitsCount": 1}, {"username": "bodinsamuel", "commitsCount": 1}, {"username": "buerkle", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "c-geek", "commitsCount": 1}, {"username": "chdh", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chengkungui", "commitsCount": 1}, {"username": "chengluyu", "commitsCount": 1}, {"username": "ciceropablo", "commitsCount": 1}, {"username": "claylo", "commitsCount": 1}, {"username": "daevidpreis", "commitsCount": 1}, {"username": "deepakpathania", "commitsCount": 1}, {"username": "djulien", "commitsCount": 1}, {"username": "eduardbadillo", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "grant", "commitsCount": 1}, {"username": "hxsf", "commitsCount": 1}, {"username": "idmontie", "commitsCount": 1}, {"username": "ignacioiglesias", "commitsCount": 1}, {"username": "jamesr73", "commitsCount": 1}, {"username": "jsamr", "commitsCount": 1}, {"username": "junajan", "commitsCount": 1}, {"username": "monkeym4ster", "commitsCount": 1}, {"username": "nazieb", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "pbnj", "commitsCount": 1}, {"username": "prokopsimek", "commitsCount": 1}, {"username": "reviewher", "commitsCount": 1}, {"username": "revington", "commitsCount": 1}, {"username": "rike422", "commitsCount": 1}, {"username": "simeg", "commitsCount": 1}, {"username": "snow01", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "sunorry", "commitsCount": 1}, {"username": "tugrul", "commitsCount": 1}, {"username": "twk-b", "commitsCount": 1}, {"username": "xcatliu", "commitsCount": 1}, {"username": "yanick", "commitsCount": 1}, {"username": "ycmjason", "commitsCount": 1}, {"username": "zephraph", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 75}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 188}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 135340, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "standard"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20708, "downloadsCount": 181117947.33333334, "downloadsAcceleration": 491154.87966133934, "dependentsCount": 39309}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9743082191780822, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8195498035017712, "detail": {"quality": 0.8462282693327017, "popularity": 0.9495658855387199, "maintenance": 0.666666465038311}}}}, {"file-loader": {"analyzedAt": "2020-06-13T03:00:01.688Z", "collected": {"metadata": {"name": "file-loader", "scope": "unscoped", "version": "6.0.0", "description": "A file loader module for webpack", "keywords": ["webpack"], "date": "2020-03-17T12:07:35.273Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/file-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/file-loader", "homepage": "https://github.com/webpack-contrib/file-loader", "repository": "https://github.com/webpack-contrib/file-loader", "bugs": "https://github.com/webpack-contrib/file-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.8.7", "@babel/preset-env": "^7.8.7", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.1.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-plugin-import": "^2.20.1", "husky": "^4.2.3", "jest": "^25.1.0", "jest-junit": "^10.0.0", "lint-staged": "^10.0.8", "memfs": "^3.1.2", "memory-fs": "^0.5.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "standard-version": "^7.1.0", "url-loader": "^3.0.0", "webpack": "^4.42.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# file-loader\n\nThe `file-loader` resolves `import`/`require()` on a file into a url and emits the file into the output directory.\n\n## Getting Started\n\nTo begin, you'll need to install `file-loader`:\n\n```console\n$ npm install file-loader --save-dev\n```\n\nImport (or `require`) the target file(s) in one of the bundle's files:\n\n**file.js**\n\n```js\nimport img from './file.png';\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method. This will emit `file.png` as a file\nin the output directory (with the specified naming convention, if options are\nspecified to do so) and returns the public URI of the file.\n\n> \u2139\ufe0f By default the filename of the resulting file is the hash of the file's contents with the original extension of the required resource.\n\n## Options\n\n### `name`\n\nType: `String|Function`\nDefault: `'[contenthash].[ext]'`\n\nSpecifies a custom filename template for the target file(s) using the query\nparameter `name`. For example, to emit a file from your `context` directory into\nthe output directory retaining the full directory structure, you might use:\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[path][name].[ext]',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name(resourcePath, resourceQuery) {\n            // `resourcePath` - `/absolute/path/to/file.js`\n            // `resourceQuery` - `?foo=bar`\n\n            if (process.env.NODE_ENV === 'development') {\n              return '[path][name].[ext]';\n            }\n\n            return '[contenthash].[ext]';\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f By default the path and name you specify will output the file in that same directory, and will also use the same URI path to access the file.\n\n### `outputPath`\n\nType: `String|Function`\nDefault: `undefined`\n\nSpecify a filesystem path where the target file(s) will be placed.\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: 'images',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_output_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `output_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `publicPath`\n\nType: `String|Function`\nDefault: [`__webpack_public_path__`](https://webpack.js.org/api/module-variables/#__webpack_public_path__-webpack-specific-)+outputPath\n\nSpecifies a custom public path for the target file(s).\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: 'assets',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_public_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `public_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `postTransformPublicPath`\n\nType: `Function`\nDefault: `undefined`\n\nSpecifies a custom function to post-process the generated public path. This can be used to prepend or append dynamic global variables that are only available at runtime, like `__webpack_public_path__`. This would not be possible with just `publicPath`, since it stringifies the values.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: '/some/path/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `context`\n\nType: `String`\nDefault: [`context`](https://webpack.js.org/configuration/entry-context/#context)\n\nSpecifies a custom file context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              context: 'project',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `emitFile`\n\nType: `Boolean`\nDefault: `true`\n\nIf true, emits a file (writes a file to the filesystem). If false, the loader\nwill return a public URI but **will not** emit the file. It is often useful to\ndisable this option for server-side packages.\n\n**file.js**\n\n```js\n// bundle file\nimport img from './file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              emitFile: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `regExp`\n\nType: `RegExp`\nDefault: `undefined`\n\nSpecifies a Regular Expression to one or many parts of the target file path.\nThe capture groups can be reused in the `name` property using `[N]`\n[placeholder](https://github.com/webpack-contrib/file-loader#placeholders).\n\n**file.js**\n\n```js\nimport img from './customer01/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              regExp: /\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/i,\n              name: '[1]-[name].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f If `[0]` is used, it will be replaced by the entire tested string, whereas `[1]` will contain the first capturing parenthesis of your regex and so on...\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `file-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Placeholders\n\nFull information about placeholders you can find [here](https://github.com/webpack/loader-utils#interpolatename).\n\n### `[ext]`\n\nType: `String`\nDefault: `file.extname`\n\nThe file extension of the target file/resource.\n\n### `[name]`\n\nType: `String`\nDefault: `file.basename`\n\nThe basename of the file/resource.\n\n### `[path]`\n\nType: `String`\nDefault: `file.directory`\n\nThe path of the resource relative to the webpack/config `context`.\n\n### `[folder]`\n\nType: `String`\nDefault: `file.folder`\n\nThe folder of the resource is in.\n\n### `[query]`\n\nType: `String`\nDefault: `file.query`\n\nThe query of the resource, i.e. `?foo=bar`.\n\n### `[emoji]`\n\nType: `String`\nDefault: `undefined`\n\nA random emoji representation of `content`.\n\n### `[emoji:<length>]`\n\nType: `String`\nDefault: `undefined`\n\nSame as above, but with a customizable number of emojis\n\n### `[hash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[contenthash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[<hashType>:hash:<digestType>:<length>]`\n\nType: `String`\n\nThe hash of options.content (Buffer) (by default it's the hex digest of the hash).\n\n#### `digestType`\n\nType: `String`\nDefault: `'hex'`\n\nThe [digest](https://en.wikipedia.org/wiki/Cryptographic_hash_function) that the\nhash function should use. Valid values include: base26, base32, base36,\nbase49, base52, base58, base62, base64, and hex.\n\n#### `hashType`\n\nType: `String`\nDefault: `'md4'`\n\nThe type of hash that the has function should use. Valid values include: `md4`, `md5`, `sha1`, `sha256`, and `sha512`.\n\n#### `length`\n\nType: `Number`\nDefault: `undefined`\n\nUsers may also specify a length for the computed hash.\n\n### `[N]`\n\nType: `String`\nDefault: `undefined`\n\nThe n-th match obtained from matching the current file name against the `regExp`.\n\n## Examples\n\n### Names\n\nThe following examples show how one might use `file-loader` and what the result would be.\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: 'dirname/[contenthash].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ndirname/0dcbbaa701328ae351f.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[sha512:hash:base64:7].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ngdyb21L.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './path/to/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext]?[contenthash]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n### CDN\n\nThe following examples show how to use `file-loader` for CDN uses query params.\n\n**file.js**\n\n```js\nimport png from './directory/image.png?width=300&height=300';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  output: {\n    publicPath: 'https://cdn.example.com/',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext][query]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\nhttps://cdn.example.com/directory/image.png?width=300&height=300\n```\n\n### Dynamic public path depending on environment variable at run time\n\nAn application might want to configure different CDN hosts depending on an environment variable that is only available when running the application. This can be an advantage, as only one build of the application is necessary, which behaves differntly depending on environment variables of the deployment environment. Since file-loader is applied when compiling the application, and not when running it, the environment variable cannot be used in the file-loader configuration. A way around this is setting the `__webpack_public_path__` to the desired CDN host depending on the environment variable at the entrypoint of the application. The option `postTransformPublicPath` can be used to configure a custom path depending on a variable like `__webpack_public_path__`.\n\n**main.js**\n\n```js\nconst assetPrefixForNamespace = (namespace) => {\n  switch (namespace) {\n    case 'prod':\n      return 'https://cache.myserver.net/web';\n    case 'uat':\n      return 'https://cache-uat.myserver.net/web';\n    case 'st':\n      return 'https://cache-st.myserver.net/web';\n    case 'dev':\n      return 'https://cache-dev.myserver.net/web';\n    default:\n      return '';\n  }\n};\nconst namespace = process.env.NAMESPACE;\n\n__webpack_public_path__ = `${assetPrefixForNamespace(namespace)}/`;\n```\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[contenthash].[ext]',\n          outputPath: 'static/assets/',\n          publicPath: 'static/assets/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\nResult when run with `NAMESPACE=prod` env variable:\n\n```bash\n# result\nhttps://cache.myserver.net/web/static/assets/image.somehash.png\n```\n\nResult when run with `NAMESPACE=dev` env variable:\n\n```bash\n# result\nhttps://cache-dev.myserver.net/web/static/assets/image.somehash.png\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/file-loader.svg\n[npm-url]: https://npmjs.com/package/file-loader\n[node]: https://img.shields.io/node/v/file-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/file-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/file-loader\n[tests]: https://dev.azure.com/webpack-contrib/file-loader/_apis/build/status/webpack-contrib.file-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/file-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/file-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/file-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=file-loader\n[size-url]: https://packagephobia.now.sh/result?p=file-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1470087}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9316285}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 40116007}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 119015134}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 211559389}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 376211829}], "dependentsCount": 7687, "starsCount": 64}, "github": {"starsCount": 1745, "forksCount": 257, "subscribersCount": 29, "issues": {"count": 373, "openCount": 4, "distribution": {"3600": 79, "10800": 26, "32400": 15, "97200": 38, "291600": 14, "874800": 19, "2624400": 26, "7873200": 38, "23619600": 57, "70858800": 53, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 42}, {"username": "d3viant0ne", "commitsCount": 34}, {"username": "sokra", "commitsCount": 27}, {"username": "michael-ciniawsky", "commitsCount": 18}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "akx", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "smondal", "commitsCount": 2}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Gabri3l", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Nicktho", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "adriancmiranda", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alanyinjs", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "cameronhimself", "commitsCount": 1}, {"username": "cjhanrahan", "commitsCount": 1}, {"username": "cobbweb", "commitsCount": 1}, {"username": "dms1lva", "commitsCount": 1}, {"username": "economysizegeek", "commitsCount": 1}, {"username": "fabb", "commitsCount": 1}, {"username": "jordansexton", "commitsCount": 1}, {"username": "joseprio", "commitsCount": 1}, {"username": "jungomi", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "kossnocorp", "commitsCount": 1}, {"username": "mobitar", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "mrpoptart", "commitsCount": 1}, {"username": "necolas", "commitsCount": 1}, {"username": "rderandom", "commitsCount": 1}, {"username": "renestalder", "commitsCount": 1}, {"username": "revolunet", "commitsCount": 1}, {"username": "rondonjon", "commitsCount": 1}, {"username": "serut", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "shprink", "commitsCount": 1}, {"username": "syranide", "commitsCount": 1}, {"username": "tedpennings", "commitsCount": 1}, {"username": "tstirrat15", "commitsCount": 1}, {"username": "xoyimi", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 24}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 15733, "testsSize": 75603, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/file-loader.svg", "shields": "https://img.shields.io/npm/v/file-loader.svg", "content": "https://img.shields.io/npm/v/file-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/file-loader.svg", "service": "https://david-dm.org/webpack-contrib/file-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/file-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/file-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 2141, "downloadsCount": 39671711.333333336, "downloadsAcceleration": 112773.87319254183, "dependentsCount": 7687}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9168074778702613, "detail": {"quality": 0.9952133769606653, "popularity": 0.7665165351834271, "maintenance": 0.9998933641938921}}}}, {"fs-extra": {"analyzedAt": "2020-06-04T09:43:38.040Z", "collected": {"metadata": {"name": "fs-extra", "scope": "unscoped", "version": "9.0.1", "description": "fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as recursive mkdir, copy, and remove.", "keywords": ["fs", "file", "file system", "copy", "directory", "extra", "mkdirp", "mkdir", "mkdirs", "recursive", "json", "read", "write", "extra", "delete", "remove", "touch", "create", "text", "output", "move", "promise"], "date": "2020-06-04T00:17:45.120Z", "author": {"name": "JP Richardson", "email": "jprichardson@gmail.com", "username": "jprichardson"}, "publisher": {"username": "ryanzim", "email": "opensrc@ryanzim.com"}, "maintainers": [{"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "manidlou", "email": "manidlou@gmail.com"}, {"username": "ryanzim", "email": "opensrc@ryanzim.com"}], "repository": {"type": "git", "url": "git+https://github.com/jprichardson/node-fs-extra.git"}, "links": {"npm": "https://www.npmjs.com/package/fs-extra", "homepage": "https://github.com/jprichardson/node-fs-extra", "repository": "https://github.com/jprichardson/node-fs-extra", "bugs": "https://github.com/jprichardson/node-fs-extra/issues"}, "license": "MIT", "dependencies": {"at-least-node": "^1.0.0", "graceful-fs": "^4.2.0", "jsonfile": "^6.0.1", "universalify": "^1.0.0"}, "devDependencies": {"coveralls": "^3.0.0", "klaw": "^2.1.1", "klaw-sync": "^3.0.2", "minimist": "^1.1.1", "mocha": "^5.0.5", "nyc": "^15.0.0", "proxyquire": "^2.0.1", "read-dir-files": "^0.1.1", "standard": "^14.1.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Node.js: fs-extra\n=================\n\n`fs-extra` adds file system methods that aren't included in the native `fs` module and adds promise support to the `fs` methods. It also uses [`graceful-fs`](https://github.com/isaacs/node-graceful-fs) to prevent `EMFILE` errors. It should be a drop in replacement for `fs`.\n\n[![npm Package](https://img.shields.io/npm/v/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![License](https://img.shields.io/npm/l/express.svg)](https://github.com/jprichardson/node-fs-extra/blob/master/LICENSE)\n[![build status](https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg)](http://travis-ci.org/jprichardson/node-fs-extra)\n[![windows Build status](https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build)](https://ci.appveyor.com/project/jprichardson/node-fs-extra/branch/master)\n[![downloads per month](http://img.shields.io/npm/dm/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![Coverage Status](https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg)](https://coveralls.io/github/jprichardson/node-fs-extra)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\nWhy?\n----\n\nI got tired of including `mkdirp`, `rimraf`, and `ncp` in most of my projects.\n\n\n\n\nInstallation\n------------\n\n    npm install fs-extra\n\n\n\nUsage\n-----\n\n`fs-extra` is a drop in replacement for native `fs`. All methods in `fs` are attached to `fs-extra`. All `fs` methods return promises if the callback isn't passed.\n\nYou don't ever need to include the original `fs` module again:\n\n```js\nconst fs = require('fs') // this is no longer necessary\n```\n\nyou can now do this:\n\n```js\nconst fs = require('fs-extra')\n```\n\nor if you prefer to make it clear that you're using `fs-extra` and not `fs`, you may want\nto name your `fs` variable `fse` like so:\n\n```js\nconst fse = require('fs-extra')\n```\n\nyou can also keep both, but it's redundant:\n\n```js\nconst fs = require('fs')\nconst fse = require('fs-extra')\n```\n\nSync vs Async vs Async/Await\n-------------\nMost methods are async by default. All async methods will return a promise if the callback isn't passed.\n\nSync methods on the other hand will throw if an error occurs.\n\nAlso Async/Await will throw an error if one occurs.\n\nExample:\n\n```js\nconst fs = require('fs-extra')\n\n// Async with promises:\nfs.copy('/tmp/myfile', '/tmp/mynewfile')\n  .then(() => console.log('success!'))\n  .catch(err => console.error(err))\n\n// Async with callbacks:\nfs.copy('/tmp/myfile', '/tmp/mynewfile', err => {\n  if (err) return console.error(err)\n  console.log('success!')\n})\n\n// Sync:\ntry {\n  fs.copySync('/tmp/myfile', '/tmp/mynewfile')\n  console.log('success!')\n} catch (err) {\n  console.error(err)\n}\n\n// Async/Await:\nasync function copyFiles () {\n  try {\n    await fs.copy('/tmp/myfile', '/tmp/mynewfile')\n    console.log('success!')\n  } catch (err) {\n    console.error(err)\n  }\n}\n\ncopyFiles()\n```\n\n\nMethods\n-------\n\n### Async\n\n- [copy](docs/copy.md)\n- [emptyDir](docs/emptyDir.md)\n- [ensureFile](docs/ensureFile.md)\n- [ensureDir](docs/ensureDir.md)\n- [ensureLink](docs/ensureLink.md)\n- [ensureSymlink](docs/ensureSymlink.md)\n- [mkdirp](docs/ensureDir.md)\n- [mkdirs](docs/ensureDir.md)\n- [move](docs/move.md)\n- [outputFile](docs/outputFile.md)\n- [outputJson](docs/outputJson.md)\n- [pathExists](docs/pathExists.md)\n- [readJson](docs/readJson.md)\n- [remove](docs/remove.md)\n- [writeJson](docs/writeJson.md)\n\n### Sync\n\n- [copySync](docs/copy-sync.md)\n- [emptyDirSync](docs/emptyDir-sync.md)\n- [ensureFileSync](docs/ensureFile-sync.md)\n- [ensureDirSync](docs/ensureDir-sync.md)\n- [ensureLinkSync](docs/ensureLink-sync.md)\n- [ensureSymlinkSync](docs/ensureSymlink-sync.md)\n- [mkdirpSync](docs/ensureDir-sync.md)\n- [mkdirsSync](docs/ensureDir-sync.md)\n- [moveSync](docs/move-sync.md)\n- [outputFileSync](docs/outputFile-sync.md)\n- [outputJsonSync](docs/outputJson-sync.md)\n- [pathExistsSync](docs/pathExists-sync.md)\n- [readJsonSync](docs/readJson-sync.md)\n- [removeSync](docs/remove-sync.md)\n- [writeJsonSync](docs/writeJson-sync.md)\n\n\n**NOTE:** You can still use the native Node.js methods. They are promisified and copied over to `fs-extra`. See [notes on `fs.read()`, `fs.write()`, & `fs.writev()`](docs/fs-read-write-writev.md)\n\n### What happened to `walk()` and `walkSync()`?\n\nThey were removed from `fs-extra` in v2.0.0. If you need the functionality, `walk` and `walkSync` are available as separate packages, [`klaw`](https://github.com/jprichardson/node-klaw) and [`klaw-sync`](https://github.com/manidlou/node-klaw-sync).\n\n\nThird Party\n-----------\n\n\n### TypeScript\n\nIf you like TypeScript, you can use `fs-extra` with it: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/fs-extra\n\n\n### File / Directory Watching\n\nIf you want to watch for changes to files or directories, then you should use [chokidar](https://github.com/paulmillr/chokidar).\n\n### Obtain Filesystem (Devices, Partitions) Information\n\n[fs-filesystem](https://github.com/arthurintelligence/node-fs-filesystem) allows you to read the state of the filesystem of the host on which it is run. It returns information about both the devices and the partitions (volumes) of the system.\n\n### Misc.\n\n- [fs-extra-debug](https://github.com/jdxcode/fs-extra-debug) - Send your fs-extra calls to [debug](https://npmjs.org/package/debug).\n- [mfs](https://github.com/cadorn/mfs) - Monitor your fs-extra calls.\n\n\n\nHacking on fs-extra\n-------------------\n\nWanna hack on `fs-extra`? Great! Your help is needed! [fs-extra is one of the most depended upon Node.js packages](http://nodei.co/npm/fs-extra.png?downloads=true&downloadRank=true&stars=true). This project\nuses [JavaScript Standard Style](https://github.com/feross/standard) - if the name or style choices bother you,\nyou're gonna have to get over it :) If `standard` is good enough for `npm`, it's good enough for `fs-extra`.\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nWhat's needed?\n- First, take a look at existing issues. Those are probably going to be where the priority lies.\n- More tests for edge cases. Specifically on different platforms. There can never be enough tests.\n- Improve test coverage. See coveralls output for more info.\n\nNote: If you make any big changes, **you should definitely file an issue for discussion first.**\n\n### Running the Test Suite\n\nfs-extra contains hundreds of tests.\n\n- `npm run lint`: runs the linter ([standard](http://standardjs.com/))\n- `npm run unit`: runs the unit tests\n- `npm test`: runs both the linter and the tests\n\n\n### Windows\n\nIf you run the tests on the Windows and receive a lot of symbolic link `EPERM` permission errors, it's\nbecause on Windows you need elevated privilege to create symbolic links. You can add this to your Windows's\naccount by following the instructions here: http://superuser.com/questions/104845/permission-to-make-symbolic-links-in-windows-7\nHowever, I didn't have much luck doing this.\n\nSince I develop on Mac OS X, I use VMWare Fusion for Windows testing. I create a shared folder that I map to a drive on Windows.\nI open the `Node.js command prompt` and run as `Administrator`. I then map the network drive running the following command:\n\n    net use z: \"\\\\vmware-host\\Shared Folders\"\n\nI can then navigate to my `fs-extra` directory and run the tests.\n\n\nNaming\n------\n\nI put a lot of thought into the naming of these functions. Inspired by @coolaj86's request. So he deserves much of the credit for raising the issue. See discussion(s) here:\n\n* https://github.com/jprichardson/node-fs-extra/issues/2\n* https://github.com/flatiron/utile/issues/11\n* https://github.com/ryanmcgrath/wrench-js/issues/29\n* https://github.com/substack/node-mkdirp/issues/17\n\nFirst, I believe that in as many cases as possible, the [Node.js naming schemes](http://nodejs.org/api/fs.html) should be chosen. However, there are problems with the Node.js own naming schemes.\n\nFor example, `fs.readFile()` and `fs.readdir()`: the **F** is capitalized in *File* and the **d** is not capitalized in *dir*. Perhaps a bit pedantic, but they should still be consistent. Also, Node.js has chosen a lot of POSIX naming schemes, which I believe is great. See: `fs.mkdir()`, `fs.rmdir()`, `fs.chown()`, etc.\n\nWe have a dilemma though. How do you consistently name methods that perform the following POSIX commands: `cp`, `cp -r`, `mkdir -p`, and `rm -rf`?\n\nMy perspective: when in doubt, err on the side of simplicity. A directory is just a hierarchical grouping of directories and files. Consider that for a moment. So when you want to copy it or remove it, in most cases you'll want to copy or remove all of its contents. When you want to create a directory, if the directory that it's suppose to be contained in does not exist, then in most cases you'll want to create that too.\n\nSo, if you want to remove a file or a directory regardless of whether it has contents, just call `fs.remove(path)`. If you want to copy a file or a directory whether it has contents, just call `fs.copy(source, destination)`. If you want to create a directory regardless of whether its parent directories exist, just call `fs.mkdirs(path)` or `fs.mkdirp(path)`.\n\n\nCredit\n------\n\n`fs-extra` wouldn't be possible without using the modules from the following authors:\n\n- [Isaac Shlueter](https://github.com/isaacs)\n- [Charlie McConnel](https://github.com/avianflu)\n- [James Halliday](https://github.com/substack)\n- [Andrew Kelley](https://github.com/andrewrk)\n\n\n\n\nLicense\n-------\n\nLicensed under MIT\n\nCopyright (c) 2011-2017 [JP Richardson](https://github.com/jprichardson)\n\n[1]: http://nodejs.org/docs/latest/api/fs.html\n\n\n[jsonfile]: https://github.com/jprichardson/node-jsonfile"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5211136}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26945194}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 115830339}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 332010771}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 586930684}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1045809171}], "dependentsCount": 28729, "starsCount": 425}, "github": {"starsCount": 6880, "forksCount": 610, "subscribersCount": 86, "issues": {"count": 802, "openCount": 21, "distribution": {"3600": 108, "10800": 60, "32400": 76, "97200": 99, "291600": 81, "874800": 55, "2624400": 52, "7873200": 91, "23619600": 92, "70858800": 72, "212576400": 16}, "isDisabled": false}, "contributors": [{"username": "jprichardson", "commitsCount": 597}, {"username": "RyanZim", "commitsCount": 111}, {"username": "JPeer264", "commitsCount": 48}, {"username": "manidlou", "commitsCount": 48}, {"username": "agnivade", "commitsCount": 4}, {"username": "srirangan", "commitsCount": 4}, {"username": "bartland", "commitsCount": 3}, {"username": "binki", "commitsCount": 3}, {"username": "mbargiel", "commitsCount": 3}, {"username": "overlookmotel", "commitsCount": 3}, {"username": "Ackar", "commitsCount": 2}, {"username": "abetomo", "commitsCount": 2}, {"username": "hhamilto", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "nacd", "commitsCount": 2}, {"username": "newmanw", "commitsCount": 2}, {"username": "reggi", "commitsCount": 2}, {"username": "rjz", "commitsCount": 2}, {"username": "ulikoehler", "commitsCount": 2}, {"username": "yibuyisheng", "commitsCount": 2}, {"username": "AustinLeeGordon", "commitsCount": 1}, {"username": "Cellule", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "GeoffreyEmery", "commitsCount": 1}, {"username": "Lambdac0re", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "alewitt", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "bajtos", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "bitdeli-chef", "commitsCount": 1}, {"username": "charlierudolph", "commitsCount": 1}, {"username": "chinesedfan", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "daysv", "commitsCount": 1}, {"username": "distracteddev", "commitsCount": 1}, {"username": "djcsdy", "commitsCount": 1}, {"username": "dr-dimitru", "commitsCount": 1}, {"username": "federicobozzini", "commitsCount": 1}, {"username": "futagoza", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "gkalpak", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "hail2u", "commitsCount": 1}, {"username": "ioncreature", "commitsCount": 1}, {"username": "jacobq", "commitsCount": 1}, {"username": "jdalton", "commitsCount": 1}, {"username": "jdxcode", "commitsCount": 1}, {"username": "jimhigson", "commitsCount": 1}, {"username": "kolgotko", "commitsCount": 1}, {"username": "marcjansen", "commitsCount": 1}, {"username": "mtiller", "commitsCount": 1}, {"username": "nicks", "commitsCount": 1}, {"username": "nico29", "commitsCount": 1}, {"username": "opudalo", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pgonzal", "commitsCount": 1}, {"username": "philippefutureboy", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "ramhejazi", "commitsCount": 1}, {"username": "raybellis", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "robertjacobson", "commitsCount": 1}, {"username": "ryanmurakami", "commitsCount": 1}, {"username": "stephenmathieson", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tvald", "commitsCount": 1}, {"username": "weexpectedTHIS", "commitsCount": 1}, {"username": "wontem", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 31}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 9790, "testsSize": 280974, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/fs-extra.svg", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/express.svg", "shields": "https://img.shields.io/npm/l/express.svg", "content": "https://img.shields.io/npm/l/express.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "service": "https://api.travis-ci.org/jprichardson/node-fs-extra.svg?branch=master", "shields": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build", "service": "https://ci.appveyor.com/api/projects/status/jprichardson/node-fs-extra/branch/master", "shields": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/fs-extra.svg", "shields": "https://img.shields.io/npm/dm/fs-extra.svg", "content": "https://img.shields.io/npm/dm/fs-extra.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "service": "https://coveralls.io/repos/github/jprichardson/node-fs-extra/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://nodei.co/npm/fs-extra.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["standard"], "coverage": 0.83}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9744999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 8071, "downloadsCount": 110670257, "downloadsAcceleration": 347819.0278158296, "dependentsCount": 28729}, "maintenance": {"releasesFrequency": 0.39760273972602744, "commitsFrequency": 0.8779794520547946, "openIssues": 1, "issuesDistribution": 0.24669582283440705}}, "score": {"final": 0.9159552177531324, "detail": {"quality": 0.9961083850582926, "popularity": 0.8999958380639567, "maintenance": 0.8632118826093139}}}}, {"vue": {"analyzedAt": "2020-06-30T16:20:48.256Z", "collected": {"metadata": {"name": "vue", "scope": "unscoped", "version": "2.6.11", "description": "Reactive, component-oriented view layer for modern web interfaces.", "keywords": ["vue"], "date": "2019-12-13T19:58:51.873Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue.git"}, "links": {"npm": "https://www.npmjs.com/package/vue", "homepage": "https://github.com/vuejs/vue#readme", "repository": "https://github.com/vuejs/vue", "bugs": "https://github.com/vuejs/vue/issues"}, "license": "MIT", "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-proposal-class-properties": "^7.1.0", "@babel/plugin-syntax-dynamic-import": "^7.0.0", "@babel/plugin-syntax-jsx": "^7.0.0", "@babel/plugin-transform-flow-strip-types": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/register": "^7.0.0", "@types/node": "^12.12.0", "@types/webpack": "^4.4.22", "acorn": "^5.2.1", "babel-eslint": "^10.0.1", "babel-helper-vue-jsx-merge-props": "^2.0.3", "babel-loader": "^8.0.4", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-transform-vue-jsx": "^4.0.1", "babel-preset-flow-vue": "^1.0.0", "buble": "^0.19.3", "chalk": "^2.3.0", "chromedriver": "^2.45.0", "codecov": "^3.0.0", "commitizen": "^2.9.6", "conventional-changelog": "^1.1.3", "cross-spawn": "^6.0.5", "cz-conventional-changelog": "^2.0.0", "de-indent": "^1.0.2", "es6-promise": "^4.1.0", "escodegen": "^1.8.1", "eslint": "^5.7.0", "eslint-plugin-flowtype": "^2.34.0", "eslint-plugin-jasmine": "^2.8.4", "file-loader": "^3.0.1", "flow-bin": "^0.61.0", "hash-sum": "^1.0.2", "he": "^1.1.1", "http-server": "^0.11.1", "jasmine": "^2.99.0", "jasmine-core": "^2.99.0", "karma": "^3.1.1", "karma-chrome-launcher": "^2.1.1", "karma-coverage": "^1.1.1", "karma-firefox-launcher": "^1.0.1", "karma-jasmine": "^1.1.0", "karma-mocha-reporter": "^2.2.3", "karma-phantomjs-launcher": "^1.0.4", "karma-safari-launcher": "^1.0.0", "karma-sauce-launcher": "^2.0.2", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^4.0.0-rc.2", "lint-staged": "^8.0.0", "lodash": "^4.17.4", "lodash.template": "^4.4.0", "lodash.uniq": "^4.5.0", "lru-cache": "^5.1.1", "nightwatch": "^0.9.16", "nightwatch-helpers": "^1.2.0", "phantomjs-prebuilt": "^2.1.14", "puppeteer": "^1.11.0", "resolve": "^1.3.3", "rollup": "^1.0.0", "rollup-plugin-alias": "^1.3.1", "rollup-plugin-buble": "^0.19.6", "rollup-plugin-commonjs": "^9.2.0", "rollup-plugin-flow-no-whitespace": "^1.0.0", "rollup-plugin-node-resolve": "^4.0.0", "rollup-plugin-replace": "^2.0.0", "selenium-server": "^2.53.1", "serialize-javascript": "^2.1.2", "shelljs": "^0.8.1", "terser": "^3.10.2", "typescript": "^3.6.4", "webpack": "~4.28.4", "weex-js-runtime": "^0.23.6", "weex-styler": "^0.3.0", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 19}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 29}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 31}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 291996}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1619935}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6577842}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 20051455}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 38203459}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 67617196}], "dependentsCount": 26081, "starsCount": 239}, "github": {"homepage": "http://vuejs.org", "starsCount": 166963, "forksCount": 25366, "subscribersCount": 6189, "issues": {"count": 10870, "openCount": 520, "distribution": {"3600": 4264, "10800": 1272, "32400": 1445, "97200": 1116, "291600": 695, "874800": 570, "2624400": 392, "7873200": 318, "23619600": 374, "70858800": 355, "212576400": 69}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 2292}, {"username": "vue-bot", "commitsCount": 70}, {"username": "Hanks10100", "commitsCount": 47}, {"username": "defcc", "commitsCount": 37}, {"username": "kazupon", "commitsCount": 32}, {"username": "posva", "commitsCount": 29}, {"username": "HerringtonDarkholme", "commitsCount": 25}, {"username": "ktsn", "commitsCount": 25}, {"username": "javoski", "commitsCount": 23}, {"username": "Kingwl", "commitsCount": 15}, {"username": "gebilaoxiong", "commitsCount": 15}, {"username": "jkzing", "commitsCount": 15}, {"username": "Jinjiang", "commitsCount": 14}, {"username": "S-YOU", "commitsCount": 11}, {"username": "blake-newman", "commitsCount": 11}, {"username": "chrisvfritz", "commitsCount": 11}, {"username": "clarkdo", "commitsCount": 11}, {"username": "phanan", "commitsCount": 11}, {"username": "Justineo", "commitsCount": 10}, {"username": "HcySunYang", "commitsCount": 8}, {"username": "kaorun343", "commitsCount": 8}, {"username": "sodatea", "commitsCount": 8}, {"username": "KaelWD", "commitsCount": 7}, {"username": "dsonet", "commitsCount": 5}, {"username": "fnlctrl", "commitsCount": 4}, {"username": "imyzf", "commitsCount": 4}, {"username": "nickmessing", "commitsCount": 4}, {"username": "shasharoman", "commitsCount": 4}, {"username": "ulivz", "commitsCount": 4}, {"username": "znck", "commitsCount": 4}, {"username": "KingMario", "commitsCount": 3}, {"username": "bluemsn", "commitsCount": 3}, {"username": "felixbuenemann", "commitsCount": 3}, {"username": "liximomo", "commitsCount": 3}, {"username": "lzxb", "commitsCount": 3}, {"username": "mingmingwon", "commitsCount": 3}, {"username": "pkaminski", "commitsCount": 3}, {"username": "privatenumber", "commitsCount": 3}, {"username": "sqal", "commitsCount": 3}, {"username": "Alex-Sokolov", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 2}, {"username": "DaKoala", "commitsCount": 2}, {"username": "Gcaufy", "commitsCount": 2}, {"username": "HusamIbrahim", "commitsCount": 2}, {"username": "Itisfilipe", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "QingWei-Li", "commitsCount": 2}, {"username": "Shyam-Chen", "commitsCount": 2}, {"username": "asheb", "commitsCount": 2}, {"username": "bartlomieju", "commitsCount": 2}, {"username": "chriscasola", "commitsCount": 2}, {"username": "dejour", "commitsCount": 2}, {"username": "eddyerburgh", "commitsCount": 2}, {"username": "fenduru", "commitsCount": 2}, {"username": "g-plane", "commitsCount": 2}, {"username": "gzzhanghao", "commitsCount": 2}, {"username": "hikerpig", "commitsCount": 2}, {"username": "jingsam", "commitsCount": 2}, {"username": "lyhper", "commitsCount": 2}, {"username": "maciej-ka", "commitsCount": 2}, {"username": "neelance", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "superwf", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "william-pan", "commitsCount": 2}, {"username": "xdamman", "commitsCount": 2}, {"username": "yantene", "commitsCount": 2}, {"username": "zephraph", "commitsCount": 2}, {"username": "7006", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Magiccwl", "commitsCount": 1}, {"username": "Naartti", "commitsCount": 1}, {"username": "NataliaTepluhina", "commitsCount": 1}, {"username": "VitorLuizC", "commitsCount": 1}, {"username": "Xenonym", "commitsCount": 1}, {"username": "ahaoboy", "commitsCount": 1}, {"username": "ahus1", "commitsCount": 1}, {"username": "alanmatw", "commitsCount": 1}, {"username": "bakugod", "commitsCount": 1}, {"username": "decadef20", "commitsCount": 1}, {"username": "dennishzg", "commitsCount": 1}, {"username": "eltociear", "commitsCount": 1}, {"username": "evillt", "commitsCount": 1}, {"username": "flyyang", "commitsCount": 1}, {"username": "git-nkliyc", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "hyandell", "commitsCount": 1}, {"username": "lessfish", "commitsCount": 1}, {"username": "mateusvelleda", "commitsCount": 1}, {"username": "mcmillenb", "commitsCount": 1}, {"username": "msidolphin", "commitsCount": 1}, {"username": "nguyenyou", "commitsCount": 1}, {"username": "pikax", "commitsCount": 1}, {"username": "rodrigograca31", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "tlebel", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 0}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 9}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 28}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 78}], "statuses": [{"context": "ci/circleci: trigger-regression-test", "state": "success"}, {"context": "ci/circleci: test-ssr-weex", "state": "success"}, {"context": "ci/circleci: test-e2e", "state": "success"}, {"context": "ci/circleci: test-cover", "state": "success"}, {"context": "ci/circleci: lint-flow-types", "state": "success"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 970184}, "linters": ["editorconfig", "eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9954999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 198856, "downloadsCount": 6683818.333333333, "downloadsAcceleration": 15249.413831811267, "dependentsCount": 26081}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8891095890410959, "openIssues": 1, "issuesDistribution": 0.7812735687553016}}, "score": {"final": 0.8888580449210395, "detail": {"quality": 0.8281500589215438, "popularity": 0.8303806513691457, "maintenance": 0.99937085504393}}}}, {"babel-jest": {"analyzedAt": "2020-06-23T15:59:02.336Z", "collected": {"metadata": {"name": "babel-jest", "scope": "unscoped", "version": "26.1.0", "description": "Jest plugin to use babel for transformation.", "date": "2020-06-23T15:15:32.170Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git", "directory": "packages/babel-jest"}, "links": {"npm": "https://www.npmjs.com/package/babel-jest", "homepage": "https://github.com/facebook/jest#readme", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/transform": "^26.1.0", "@jest/types": "^26.1.0", "@types/babel__core": "^7.1.7", "babel-plugin-istanbul": "^6.0.0", "babel-preset-jest": "^26.1.0", "chalk": "^4.0.0", "graceful-fs": "^4.2.4", "slash": "^3.0.0"}, "devDependencies": {"@babel/core": "^7.1.0", "@types/graceful-fs": "^4.1.3"}, "peerDependencies": {"@babel/core": "^7.0.0"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 19}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 21}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 50}], "readme": "# babel-jest\n\n[Babel](https://github.com/babel/babel) [jest](https://github.com/facebook/jest) plugin\n\n## Usage\n\nIf you are already using `jest-cli`, add `babel-jest` and it will automatically compile JavaScript code using Babel.\n\n```bash\nyarn add --dev babel-jest @babel/core\n```\n\nIf you would like to write your own preprocessor, uninstall and delete babel-jest and set the [config.transform](https://jestjs.io/docs/configuration#transform-object-string-string) option to your preprocessor.\n\n## Setup\n\n_Note: this step is only required if you are using `babel-jest` with additional code preprocessors._\n\nTo explicitly define `babel-jest` as a transformer for your JavaScript code, map _.js_ files to the `babel-jest` module. Typescript files are also supported.\n\n```json\n\"transform\": {\n  \"^.+\\\\.[t|j]sx?$\": \"babel-jest\"\n},\n```"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7027016}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 34300041}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 105599378}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 187562139}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 328829369}], "dependentsCount": 4216, "starsCount": 5}, "github": {"homepage": "https://jestjs.io", "starsCount": 31478, "forksCount": 4470, "subscribersCount": 527, "issues": {"count": 10149, "openCount": 1108, "distribution": {"3600": 2116, "10800": 933, "32400": 936, "97200": 1307, "291600": 936, "874800": 814, "2624400": 736, "7873200": 739, "23619600": 664, "70858800": 811, "212576400": 157}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 629}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "jeysal", "commitsCount": 55}, {"username": "rubennorte", "commitsCount": 55}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "Connormiha", "commitsCount": 38}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "kenrick95", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 207}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 331}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 588}], "statuses": [{"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 829, "testsSize": 3018, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0}, "popularity": {"communityInterest": 36580, "downloadsCount": 35199792.666666664, "downloadsAcceleration": 95885.45542237442, "dependentsCount": 4216}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4104137470417111}}, "score": {"final": 0.8916802706315061, "detail": {"quality": 0.8511365418500958, "popularity": 0.8481551025871021, "maintenance": 0.9699572062028331}}}}, {"nyc": {"analyzedAt": "2020-06-03T15:57:58.285Z", "collected": {"metadata": {"name": "nyc", "scope": "unscoped", "version": "15.1.0", "description": "the Istanbul command line interface", "keywords": ["coverage", "reporter", "subprocess", "testing"], "date": "2020-06-01T00:58:43.211Z", "author": {"name": "Ben Coe", "email": "ben@npmjs.com", "username": "bcoe"}, "publisher": {"username": "coreyfarrell", "email": "git@cfware.com"}, "maintainers": [{"username": "bcoe", "email": "ben@npmjs.com"}, {"username": "coreyfarrell", "email": "git@cfware.com"}, {"username": "isaacs", "email": "i@izs.me"}], "contributors": [{"name": "Isaac Schlueter"}, {"name": "Mark Wubben"}, {"name": "James Talmage"}, {"name": "Krishnan Anantheswaran"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/istanbuljs/nyc.git"}, "links": {"npm": "https://www.npmjs.com/package/nyc", "homepage": "https://istanbul.js.org/", "repository": "https://github.com/istanbuljs/nyc", "bugs": "https://github.com/istanbuljs/nyc/issues"}, "license": "ISC", "dependencies": {"@istanbuljs/load-nyc-config": "^1.0.0", "@istanbuljs/schema": "^0.1.2", "caching-transform": "^4.0.0", "convert-source-map": "^1.7.0", "decamelize": "^1.2.0", "find-cache-dir": "^3.2.0", "find-up": "^4.1.0", "foreground-child": "^2.0.0", "get-package-type": "^0.1.0", "glob": "^7.1.6", "istanbul-lib-coverage": "^3.0.0", "istanbul-lib-hook": "^3.0.0", "istanbul-lib-instrument": "^4.0.0", "istanbul-lib-processinfo": "^2.0.2", "istanbul-lib-report": "^3.0.0", "istanbul-lib-source-maps": "^4.0.0", "istanbul-reports": "^3.0.2", "make-dir": "^3.0.0", "node-preload": "^0.2.1", "p-map": "^3.0.0", "process-on-spawn": "^1.0.0", "resolve-from": "^5.0.0", "rimraf": "^3.0.0", "signal-exit": "^3.0.2", "spawn-wrap": "^2.0.0", "test-exclude": "^6.0.0", "yargs": "^15.0.2"}, "devDependencies": {"any-path": "^1.3.0", "coveralls": "^3.0.9", "is-windows": "^1.0.2", "requirejs": "^2.3.6", "source-map-support": "^0.5.16", "standard": "^14.3.1", "standard-version": "^8.0.0", "tap": "^14.10.5", "which": "^2.0.2"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# nyc\n\n[![Build Status](https://img.shields.io/travis/istanbuljs/nyc/master.svg)](https://travis-ci.org/istanbuljs/nyc)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/istanbuljs/nyc/branch/master)\n[![Coverage Status](https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg)](https://coveralls.io/r/istanbuljs/nyc?branch=master)\n[![NPM version](https://img.shields.io/npm/v/nyc.svg)](https://www.npmjs.com/package/nyc)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![community slack](https://devtoolscommunity.herokuapp.com/badge.svg)](https://devtoolscommunity.herokuapp.com)\n\n_Having problems? want to contribute? join our [community slack](https://devtoolscommunity.herokuapp.com)_.\n\nIstanbul's state of the art command line interface, with support for:\n\n* applications that spawn subprocesses.\n* source mapped coverage of Babel and TypeScript projects\n\n## Installation & Usage\n\nUse your package manager to add it as a dev dependency: `npm i -D nyc` or `yarn add -D nyc`.\nYou can use nyc to call npm scripts (assuming they don't already have nyc executed in them), like so (replace `mocha` with your test runner everywhere you see it):\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"mocha\",\n    \"coverage\": \"nyc npm run test\"\n  }\n}\n```\n\nYou can use also `npx` instead of installing nyc as a dependency, but you might get updates you are not ready for; to get around this, pin to a specific major version by specifying, e.g. `nyc@14`.\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"npx nyc@latest mocha\"\n  }\n}\n```\n\nThis is a good way of testing upcoming releases of nyc, usually on the `next` tag.\n\n**Note**: If you use [`jest`](https://npm.im/jest) or [`tap`](https://www.node-tap.org/), you do not need to install `nyc`.\nThose runners already have the IstanbulJS libraries to provide coverage for you.\nFollow their documentation to enable and configure coverage reporting.\n\n## Configuring `nyc`\n\nnyc accepts a wide variety of configuration arguments, run `npx nyc --help` for thorough documentation.\n\nConfiguration arguments on the command-line should be provided prior to the program that nyc is executing.\nAs an example, the following command executes `ava`, and indicates to nyc that it should output both an `lcov` (`lcov.info` + html report) and a `text-summary` coverage report.\n\n```shell\nnyc --reporter=lcov --reporter=text-summary ava\n```\n\n### Babel projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-babel`] preset.\nYou can add your custom configuration options as shown below.\n\n### TypeScript projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-typescript`](https://www.npmjs.com/package/@istanbuljs/nyc-config-typescript) preset.\n\n#### Adding your overrides\n\nnyc allows you to inherit other configurations using the key `extends` in the `package.json` stanza, `.nycrc`, or YAML files.\nYou can then add the specific configuration options you want that aren't in that particular shared config, e.g.\n\n```json\n{\n  \"extends\": \"@istanbuljs/nyc-config-typescript\",\n  \"all\": true,\n  \"check-coverage\": true\n}\n```\n\n### Configuration files\n\nAny configuration options that can be set via the command line can also be specified in the `nyc` stanza of your package.json, or within a separate configuration file - a variety of flavors are available:\n\n| File name       | File Association |\n|-----------------|------------------|\n| `.nycrc`        | JSON             |\n| `.nycrc.json`   | JSON             |\n| `.nycrc.yaml`   | YAML             |\n| `.nycrc.yml`    | YAML             |\n| `nyc.config.js` | CommonJS export  |\n\n### Common Configuration Options\n\nSee `nyc --help` for all options available.\nYou can set these in any of the files listed above, or from the command line.\nThis table is a quick TLDR for the rest of this readme and there are more advanced docs available.\n\n| Option name | Description | Type | Default |\n| ----------- | ----------- | ---- | ------- |\n| `all` | Whether or not to instrument all files (not just the ones touched by your test suite) | `Boolean` | `false` |\n| `check-coverage` | Check whether coverage is within thresholds, fail if not | `Boolean` | `false` |\n| `extension` | List of extensions that nyc should attempt to handle in addition to `.js` | `Array<String>` | `['.js', '.cjs', '.mjs', '.ts', '.tsx', '.jsx']` |\n| `include` | See [selecting files for coverage] for more info | `Array<String>` | `['**']`|\n| `exclude` | See [selecting files for coverage] for more info | `Array<String>` | [list](https://github.com/istanbuljs/schema/blob/master/default-exclude.js) |\n| `reporter` | [Coverage reporters to use](https://istanbul.js.org/docs/advanced/alternative-reporters/) | `Array<String>` | `['text']` |\n| `report-dir` | Where to put the coverage report files | `String` | `./coverage` |\n| `skip-full` | Don't show files with 100% statement, branch, and function coverage | `Boolean` | `false` |\n| `temp-dir` | Directory to output raw coverage information to | `String` | `./.nyc_output` |\n\nConfiguration can also be provided by `nyc.config.js` if programmed logic is required:\n\n```js\n'use strict';\n\nconst defaultExclude = require('@istanbuljs/schema/default-exclude');\nconst isWindows = require('is-windows');\n\nlet platformExclude = [\n  isWindows() ? 'lib/posix.js' : 'lib/win32.js'\n];\n\nmodule.exports = {\n  exclude: platformExclude.concat(defaultExclude)\n};\n```\n\n### Publish and reuse your nyc configuration(s)\n\nTo publish and reuse your own `nyc` configuration, simply create an npm module that exports your JSON config (via [`index.json`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-typescript/) or a CJS [`index.js`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-hook-run-in-this-context/)).\n\nA more advanced use case would be to combine multiple shared configs in a `nyc.config.js` file:\n\n```js\n'use strict';\n\nconst babelConfig = require('@istanbuljs/nyc-config-babel');\nconst hookRunInThisContextConfig = require('@istanbuljs/nyc-config-hook-run-in-this-context');\n\nmodule.exports = {\n  ...babelConfig,\n  ...hookRunInThisContextConfig,\n  all: true,\n  'check-coverage': true\n};\n```\n\n## Selecting files for coverage\n\nBy default, nyc only collects coverage for source files that are visited during a test.\nIt does this by watching for files that are `require()`'d during the test.\nWhen a file is `require()`'d, nyc creates and returns an instrumented version of the source, rather than the original.\nOnly source files that are visited during a test will appear in the coverage report and contribute to coverage statistics.\n\nnyc will instrument all files if the `--all` flag is set or if running `nyc instrument`.\nIn this case all files will appear in the coverage report and contribute to coverage statistics.\n\nnyc will only collect coverage for files that are located under `cwd`, and then only files with extensions listed in the `extension` array.\n\nYou can reduce the set of instrumented files by adding `include` and `exclude` filter arrays to your config.\nThese allow you to shape the set of instrumented files by specifying glob patterns that can filter files from the default instrumented set.\nThe `exclude` array may also use exclude negated glob patterns, these are specified with a `!` prefix, and can restore sub-paths of excluded paths.\n\nGlobs are matched using [minimatch](https://www.npmjs.com/package/minimatch).\n\nWe use the following process to remove files from consideration:\n\n1. Limit the set of instrumented files to those files in paths listed in the `include` array.\n2. Remove any files that are found in the `exclude` array.\n3. Restore any exclude negated files that have been excluded in step 2.\n\n### Using include and exclude arrays\n\nIf there are paths specified in the `include` array, then the set of instrumented files will be limited to eligible files found in those paths.\nIf the `include` array is left undefined all eligible files will be included, equivalent to setting `include: ['**']`.\nMultiple `include` globs can be specified on the command line, each must follow a `--include`, `-n` switch.\n\nIf there are paths specified in the `exclude` array, then the set of instrumented files will not feature eligible files found in those paths.\nYou can also specify negated paths in the `exclude` array, by prefixing them with a `!`.\nNegated paths can restore paths that have been already been excluded in the `exclude` array.\nMultiple `exclude` globs can be specified on the command line, each must follow a `--exclude`, `-x` switch.\n\nThe default `exclude` list is defined in the [@istanbuljs/schema module](https://github.com/istanbuljs/schema/blob/master/default-exclude.js).\nSpecifying your own exclude property completely replaces these defaults.\n\nFor example, the following `nyc` config will collect coverage for every file in the `src` directory regardless of whether it is `require()`'d in a test.\nIt will also exclude any files with the extension `.spec.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"src/**/*.js\"\n  ],\n  \"exclude\": [\n    \"**/*.spec.js\"\n  ]\n}\n```\n\n**Note:** Be wary of automatic OS glob expansion when specifying include/exclude globs with the CLI.\nTo prevent this, wrap each glob in single quotes.\n\n### Including files within `node_modules`\n\nWe always add `**/node_modules/**` to the exclude list, even if not specified in the config.\nYou can override this by setting `--exclude-node-modules=false`.\n\nFor example, `\"excludeNodeModules: false\"` in the following `nyc` config will prevent `node_modules` from being added to the exclude rules.\nThe set of include rules then restrict nyc to only consider instrumenting files found under the `lib/` and `node_modules/@my-org/` directories.\nThe exclude rules then prevent nyc instrumenting anything in a `test` folder and the file `node_modules/@my-org/something/unwanted.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"lib/**\",\n    \"node_modules/@my-org/**\"\n  ],\n  \"exclude\": [\n    \"node_modules/@my-org/something/unwanted.js\",\n    \"**/test/**\"\n  ],\n  \"excludeNodeModules\": false\n}\n```\n\n## Setting the project root directory\n\nnyc runs a lot of file system operations relative to the project root directory.\nDuring startup nyc will look for the *default* project root directory.\nThe *default* project root directory is the first directory found that contains a `package.json` file when searching from the current working directory up.\nIf nyc fails to find a directory containing a `package.json` file, it will use the current working directory as the *default* project root directory.\nYou can change the project root directory with the `--cwd` option.\n\nnyc uses the project root directory when:\n\n* looking for source files to instrument\n* creating globs for include and exclude rules during file selection\n* loading custom require hooks from the `require` array\n\nnyc may create artifact directories within the project root, with these defaults:\n\n* the report directory, `<project-root>/coverage`\n* the cache directory, `<project-root>/node_modules/.cache/nyc`\n* the temp directory, `<project-root>/.nyc_output`\n\n## Require additional modules\n\nThe `--require` flag can be provided to `nyc` to indicate that additional modules should be required in the subprocess collecting coverage:\n\n```shell\nnyc --require esm mocha\n```\n\n### Interaction with `--all` flag\n\nThe `--require` flag also operates on the main nyc process for use by `--all`.\nFor example, in situations with `nyc --all --instrument false` and [`babel-plugin-istanbul`] setup the `--all` option only works if `--require @babel/register` is passed to nyc.\nPassing it to mocha would cause the tests to be instrumented but unloaded sources would not be seen.\nThe [`@istanbuljs/nyc-config-babel`] package handles this for you!\n\n## Caching\n\n`nyc`'s default behavior is to cache instrumented files to disk to prevent instrumenting source files multiple times, and speed `nyc` execution times.\nYou can disable this behavior by running `nyc` with the `--cache false` flag.\nYou can also change the default cache directory from `./node_modules/.cache/nyc` by setting the `--cache-dir` flag.\n\n## Coverage thresholds\n\nYou can set custom coverage thresholds that will fail if `check-coverage` is set to `true` and your coverage drops below those thresholds.\nFor example, in the following `nyc` configuration, dropping below 80% branch, line, functions, or statements coverage would fail the build (you can have any combination of these):\n\n```json\n{\n  \"branches\": 80,\n  \"lines\": 80,\n  \"functions\": 80,\n  \"statements\": 80\n}\n```\n\nTo do this check on a per-file basis (as opposed to in aggregate), set the `per-file` option to `true`.\n\n### High and low watermarks\n\nSeveral of the coverage reporters supported by nyc display special information for high and low watermarks:\n\n* high-watermarks represent healthy test coverage (in many reports this is represented with green highlighting).\n* low-watermarks represent sub-optimal coverage levels (in many reports this is represented with red highlighting).\n\nYou can specify custom high and low watermarks in nyc's configuration:\n\n```json\n{\n  \"watermarks\": {\n    \"lines\": [80, 95],\n    \"functions\": [80, 95],\n    \"branches\": [80, 95],\n    \"statements\": [80, 95]\n  }\n}\n```\n\n## Parsing Hints (Ignoring Lines)\n\nThere may be some sections of your codebase that you wish to purposefully\nexclude from coverage tracking, to do so you can use the following parsing\nhints:\n\n* `/* istanbul ignore if */`: ignore the next if statement.\n* `/* istanbul ignore else */`: ignore the else portion of an if statement.\n* `/* istanbul ignore next */`: ignore the next _thing_ in the source-code (\n functions, if statements, classes, you name it).\n* `/* istanbul ignore file */`: ignore an entire source-file (this should be\n  placed at the top of the file).\n\n## Ignoring Methods\n\nYou can ignore every instance of a method simply by adding its name to the `ignore-class-method` array in your `nyc` config.\n\n```json\n{\n  \"ignore-class-method\": [\"render\"]\n}\n```\n\n## Combining reports from multiple runs\n\nIf for whatever reason you have different test runners in your project or a different series of test runs for different kinds of tests, nyc will automatically combine the coverage report for you if configured correctly with the `--no-clean` flag and the `report` command.\nOriginally inspired by @janiukjf in #1001, here's an example, where the `test:*` scripts (not shown) invoke only your test runner(s) and not nyc:\n\n```json\n{\n  \"scripts\": {\n    \"cover\": \"npm run cover:unit && npm run cover:integration && npm run cover:report\",\n    \"cover:unit\": \"nyc --silent npm run test:unit\",\n    \"cover:integration\": \"nyc --silent --no-clean npm run test:integration\",\n    \"cover:report\": \"nyc report --reporter=lcov --reporter=text\"\n  }\n}\n```\n\n### What about `nyc merge`?\n\nThe `nyc merge` command is for producing one _raw coverage output file_ that combines the results from many test runs.\nSo if you had the above setup and needed to produce a single `coverage.json` for some external tool, you could do:\n\n```json\n{\n  \"scripts\": {\n    \"cover:merge\": \"npm run cover:unit && npm run cover:integration && nyc merge .nyc_output coverage.json\"\n  }\n}\n```\n\n## Source-Map support for pre-instrumented codebases\n\nIf you opt to pre-instrument your source-code (rather than using a just-in-time transpiler like [`@babel/register`]) nyc supports both inline source-maps and `.map` files.\n\n_Important: If you are using nyc with a project that pre-instruments its code, run nyc with the configuration option `--exclude-after-remap` set to `false`.\nOtherwise nyc's reports will exclude any files that source-maps remap to folders covered under exclude rules._\n\n## [Integrating with coveralls](./docs/setup-coveralls.md)\n\n## [Integrating with codecov](./docs/setup-codecov.md)\n\n## [Producing instrumented source](./docs/instrument.md)\n\n## Integrating with TAP formatters\n\nMany testing frameworks (Mocha, Tape, Tap, etc.) can produce [TAP](https://en.wikipedia.org/wiki/Test_Anything_Protocol) output. [tap-nyc](https://github.com/MegaArman/tap-nyc) is a TAP formatter designed to look nice with nyc.\n\n## Tutorials and Advanced Documentation\n\nSee [more nyc tutorials](https://istanbul.js.org/docs/tutorials) and [advanced nyc documentation](https://istanbul.js.org/docs/advanced/).\n\nPlease feel free to [contribute documentation](https://github.com/istanbuljs/istanbuljs.github.io/tree/development/content) to help us improve.\n\n## `nyc` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `nyc` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-nyc?utm_source=npm-nyc&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n[`@babel/register`]: https://www.npmjs.com/package/@babel/register\n[`babel-plugin-istanbul`]: https://github.com/istanbuljs/babel-plugin-istanbul\n[`@istanbuljs/nyc-config-babel`]: https://www.npmjs.com/package/@istanbuljs/nyc-config-babel\n[selecting files for coverage]: #selecting-files-for-coverage"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 242285}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1284254}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5492996}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 16072709}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 29311820}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 53259263}], "dependentsCount": 603, "starsCount": 106}, "github": {"homepage": "https://istanbul.js.org/", "starsCount": 4188, "forksCount": 299, "subscribersCount": 55, "issues": {"count": 1299, "openCount": 92, "distribution": {"3600": 184, "10800": 69, "32400": 67, "97200": 143, "291600": 130, "874800": 165, "2624400": 122, "7873200": 127, "23619600": 111, "70858800": 149, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "coreyfarrell", "commitsCount": 108}, {"username": "bcoe", "commitsCount": 72}, {"username": "jamestalmage", "commitsCount": 37}, {"username": "novemberborn", "commitsCount": 33}, {"username": "greenkeeperio-bot", "commitsCount": 23}, {"username": "AndrewFinlay", "commitsCount": 22}, {"username": "JaKXz", "commitsCount": 17}, {"username": "isaacs", "commitsCount": 17}, {"username": "Lalem001", "commitsCount": 11}, {"username": "XhmikosR", "commitsCount": 7}, {"username": "addaleax", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "jasisk", "commitsCount": 3}, {"username": "lloydcotten", "commitsCount": 3}, {"username": "rmg", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "calvinf", "commitsCount": 2}, {"username": "gr2m", "commitsCount": 2}, {"username": "rundef", "commitsCount": 2}, {"username": "schutm", "commitsCount": 2}, {"username": "shackpank", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "AGrzes", "commitsCount": 1}, {"username": "AmShaegar13", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "MegaArman", "commitsCount": 1}, {"username": "RyanV", "commitsCount": 1}, {"username": "SamuraiJack", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "Sintendo", "commitsCount": 1}, {"username": "Speedy37", "commitsCount": 1}, {"username": "TonyJDavies", "commitsCount": 1}, {"username": "alexframe", "commitsCount": 1}, {"username": "bensaufley", "commitsCount": 1}, {"username": "bgalletbgallet", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "brokentone", "commitsCount": 1}, {"username": "c-bandy", "commitsCount": 1}, {"username": "cgalvarez", "commitsCount": 1}, {"username": "chadxz", "commitsCount": 1}, {"username": "clakech", "commitsCount": 1}, {"username": "d4nyll", "commitsCount": 1}, {"username": "delaguilaluis", "commitsCount": 1}, {"username": "dmwelch", "commitsCount": 1}, {"username": "doque", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "ergenekonyigit", "commitsCount": 1}, {"username": "evantorrie", "commitsCount": 1}, {"username": "genepaul", "commitsCount": 1}, {"username": "golonikum", "commitsCount": 1}, {"username": "gotwarlost", "commitsCount": 1}, {"username": "greggraf", "commitsCount": 1}, {"username": "hartraft", "commitsCount": 1}, {"username": "henriquemotaesteves", "commitsCount": 1}, {"username": "hershmire", "commitsCount": 1}, {"username": "hkdnet", "commitsCount": 1}, {"username": "igorlima", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jimbuck", "commitsCount": 1}, {"username": "jl-", "commitsCount": 1}, {"username": "karottenreibe", "commitsCount": 1}, {"username": "katerberg", "commitsCount": 1}, {"username": "ljharb", "commitsCount": 1}, {"username": "matheusrocha89", "commitsCount": 1}, {"username": "mojavelinux", "commitsCount": 1}, {"username": "motiz88", "commitsCount": 1}, {"username": "mourner", "commitsCount": 1}, {"username": "nothingismagick", "commitsCount": 1}, {"username": "pangrr", "commitsCount": 1}, {"username": "pedrocarrico", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "philnash", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "princjef", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "rapzo", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "rpominov", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "taye", "commitsCount": 1}, {"username": "tehsenaus", "commitsCount": 1}, {"username": "thegecko", "commitsCount": 1}, {"username": "thepont", "commitsCount": 1}, {"username": "tomkel", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}, {"username": "wzalazar", "commitsCount": 1}, {"username": "xdissent", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 22}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 68}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 17423, "testsSize": 126543, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "service": "https://api.travis-ci.org/istanbuljs/nyc.svg?branch=master", "shields": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/travis/istanbuljs/nyc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build", "service": "https://ci.appveyor.com/api/projects/status/istanbuljs/nyc/branch/master", "shields": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "service": "https://coveralls.io/repos/github/istanbuljs/nyc/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/nyc.svg", "shields": "https://img.shields.io/npm/v/nyc.svg", "content": "https://img.shields.io/npm/v/nyc.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "standard"], "coverage": 1, "outdatedDependencies": {"decamelize": {"required": "^1.2.0", "stable": "4.0.0", "latest": "4.0.0"}, "p-map": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 0.8518518518518519, "branding": 1}, "popularity": {"communityInterest": 4742, "downloadsCount": 5357569.666666667, "downloadsAcceleration": 13527.933257229837, "dependentsCount": 603}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8583904109589041, "openIssues": 1, "issuesDistribution": 0.11143006275223388}}, "score": {"final": 0.7720905749958739, "detail": {"quality": 0.9985008047616053, "popularity": 0.5712903862175251, "maintenance": 0.778824852546453}}}}, {"tslib": {"analyzedAt": "2020-06-26T15:11:54.121Z", "collected": {"metadata": {"name": "tslib", "scope": "unscoped", "version": "2.0.0", "description": "Runtime library for TypeScript helper functions", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript", "tslib", "runtime"], "date": "2020-05-13T23:08:45.637Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript-bot", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "andrewbranch", "email": "andrew@wheream.io"}, {"username": "minestarks", "email": "mineyalc@microsoft.com"}, {"username": "orta", "email": "orta.therox@gmail.com"}, {"username": "rbuckton", "email": "rbuckton@chronicles.org"}, {"username": "sanders_n", "email": "ncsander@indiana.edu"}, {"username": "sheetalkamat", "email": "shkamat@microsoft.com"}, {"username": "typescript-bot", "email": "typescript@microsoft.com"}, {"username": "typescript-deploys", "email": "ortam@microsoft.com"}, {"username": "weswigham", "email": "wwigham@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/tslib.git"}, "links": {"npm": "https://www.npmjs.com/package/tslib", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/tslib", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "0BSD", "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8}], "readme": "# tslib\r\n\r\nThis is a runtime library for [TypeScript](http://www.typescriptlang.org/) that contains all of the TypeScript helper functions.\r\n\r\nThis library is primarily used by the `--importHelpers` flag in TypeScript.\r\nWhen using `--importHelpers`, a module that uses helper functions like `__extends` and `__assign` in the following emitted file:\r\n\r\n```ts\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nexports.x = {};\r\nexports.y = __assign({}, exports.x);\r\n\r\n```\r\n\r\nwill instead be emitted as something like the following:\r\n\r\n```ts\r\nvar tslib_1 = require(\"tslib\");\r\nexports.x = {};\r\nexports.y = tslib_1.__assign({}, exports.x);\r\n```\r\n\r\nBecause this can avoid duplicate declarations of things like `__extends`, `__assign`, etc., this means delivering users smaller files on average, as well as less runtime overhead.\r\nFor optimized bundles with TypeScript, you should absolutely consider using `tslib` and `--importHelpers`.\r\n\r\n# Installing\r\n\r\nFor the latest stable version, run:\r\n\r\n## npm\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nnpm install --save tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nnpm install --save tslib@1.6.1\r\n```\r\n\r\n## yarn\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nyarn add tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nyarn add tslib@1.6.1\r\n```\r\n\r\n## bower\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nbower install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nbower install tslib@1.6.1\r\n```\r\n\r\n## JSPM\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\njspm install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\njspm install tslib@1.6.1\r\n```\r\n\r\n# Usage\r\n\r\nSet the `importHelpers` compiler option on the command line:\r\n\r\n```\r\ntsc --importHelpers file.ts\r\n```\r\n\r\nor in your tsconfig.json:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"importHelpers\": true\r\n    }\r\n}\r\n```\r\n\r\n#### For bower and JSPM users\r\n\r\nYou will need to add a `paths` mapping for `tslib`, e.g. For Bower users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"amd\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"bower_components/tslib/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor JSPM users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"system\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"jspm_packages/npm/tslib@2.0.0/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Contribute\r\n\r\nThere are many ways to [contribute](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md) to TypeScript.\r\n\r\n* [Submit bugs](https://github.com/Microsoft/TypeScript/issues) and help us verify fixes as they are checked in.\r\n* Review the [source code changes](https://github.com/Microsoft/TypeScript/pulls).\r\n* Engage with other TypeScript users and developers on [StackOverflow](http://stackoverflow.com/questions/tagged/typescript).\r\n* Join the [#typescript](http://twitter.com/#!/search/realtime/%23typescript) discussion on Twitter.\r\n* [Contribute bug fixes](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\r\n\r\n# Documentation\r\n\r\n* [Quick tutorial](http://www.typescriptlang.org/Tutorial)\r\n* [Programming handbook](http://www.typescriptlang.org/Handbook)\r\n* [Homepage](http://www.typescriptlang.org/)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4048749}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 17839602}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 90328340}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 247547751}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 428337934}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 707364018}], "dependentsCount": 29929, "starsCount": 9}, "github": {"starsCount": 646, "forksCount": 60, "subscribersCount": 82, "issues": {"count": 119, "openCount": 33, "distribution": {"3600": 16, "10800": 6, "32400": 5, "97200": 9, "291600": 12, "874800": 7, "2624400": 11, "7873200": 13, "23619600": 17, "70858800": 12, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "rbuckton", "commitsCount": 45}, {"username": "DanielRosenwasser", "commitsCount": 32}, {"username": "mhegazy", "commitsCount": 13}, {"username": "weswigham", "commitsCount": 7}, {"username": "frankwallis", "commitsCount": 6}, {"username": "Draccoz", "commitsCount": 3}, {"username": "sandersn", "commitsCount": 3}, {"username": "alan-agius4", "commitsCount": 2}, {"username": "aluanhaddad", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "NicholasLYang", "commitsCount": 1}, {"username": "Saulzi", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "lolipop99", "commitsCount": 1}, {"username": "mgunter6", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "timbru31", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 18}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 27}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 33}]}, "source": {"files": {"readmeSize": 3453, "testsSize": 0, "hasNpmIgnore": true}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 817, "downloadsCount": 82515917, "downloadsAcceleration": 378658.1584094368, "dependentsCount": 29929}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7783732876712328, "openIssues": 0.8711484593837535, "issuesDistribution": 0}}, "score": {"final": 0.7023762539176704, "detail": {"quality": 0.6206494132789021, "popularity": 0.8083771609371354, "maintenance": 0.6664269245885784}}}}, {"coveralls": {"analyzedAt": "2020-06-07T19:03:15.570Z", "collected": {"metadata": {"name": "coveralls", "scope": "unscoped", "version": "3.1.0", "description": "takes json-cov output into stdin and POSTs to coveralls.io", "keywords": ["coverage", "coveralls"], "date": "2020-04-24T22:38:13.122Z", "author": {"name": "Gregg Caines"}, "publisher": {"username": "nickmerwin", "email": "n@mer.fm"}, "maintainers": [{"username": "cainus", "email": "gregg@caines.ca"}, {"username": "nickmerwin", "email": "n@mer.fm"}], "contributors": [{"name": "Gregg Caines", "email": "gregg@caines.ca", "url": "http://caines.ca"}, {"name": "Joshua Ma", "email": "github@joshma.com", "url": "http://joshma.com"}, {"name": "Alan Gutierrez", "email": "alan@prettyrobots.com", "url": "http://www.prettyrobots.com/"}, {"name": "Kir Belevich", "url": "https://github.com/svg"}, {"name": "elliotcable", "email": "github@elliottcable.name", "url": "http://elliottcable.name/"}, {"name": "Slotos", "email": "slotos@gmail.com", "url": "http://slotos.net"}, {"name": "mattjmorrison", "email": "mattjmorrison@mattjmorrison.com", "url": "http://mattjmorrison.com"}, {"name": "Arpad Borsos", "email": "arpad.borsos@googlemail.com", "url": "http://swatinem.de/"}, {"name": "Adam Moss", "url": "https://github.com/adam-moss"}], "repository": {"type": "git", "url": "git://github.com/nickmerwin/node-coveralls.git"}, "links": {"npm": "https://www.npmjs.com/package/coveralls", "homepage": "https://github.com/nickmerwin/node-coveralls#readme", "repository": "https://github.com/nickmerwin/node-coveralls", "bugs": "https://github.com/nickmerwin/node-coveralls/issues"}, "license": "BSD-2-Clause", "dependencies": {"js-yaml": "^3.13.1", "lcov-parse": "^1.0.0", "log-driver": "^1.2.7", "minimist": "^1.2.5", "request": "^2.88.2"}, "devDependencies": {"jshint": "^2.11.0", "mocha": "^6.2.3", "nyc": "^14.1.1", "should": "^9.0.2", "shx": "^0.3.2", "sinon": "^7.5.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-coveralls\n\n[![Build Status][ci-image]][ci-url] [![Coverage Status][coveralls-image]][coveralls-url]\n\n[Coveralls.io](https://coveralls.io/) support for Node.js. Get the great coverage reporting of coveralls.io and add a cool coverage button (like the one above) to your README.\n\nSupported CI services: [Travis CI](https://travis-ci.org/), [CodeShip](https://codeship.com/), [CircleCI](https://circleci.com/), [Jenkins](https://jenkins.io/), [Gitlab CI](https://gitlab.com/), [AppVeyor](https://www.appveyor.com/), [Buildkite](https://buildkite.com/), [GitHub Actions CI](https://github.com/features/actions), [CodeFresh](https://codefresh.io)\n\n## Installation:\n\nAdd the latest version of `coveralls` to your package.json:\n\n```shell\nnpm install coveralls --save-dev\n```\n\nIf you're using mocha, add `mocha-lcov-reporter` to your package.json:\n\n```shell\nnpm install mocha-lcov-reporter --save-dev\n```\n\n## Usage:\n\nThis script `bin/coveralls.js` can take standard input from any tool that emits the lcov data format (including [mocha](https://mochajs.org/)'s [LCOV reporter](https://npmjs.org/package/mocha-lcov-reporter)) and send it to coveralls.io to report your code coverage there.\n\nOnce your app is instrumented for coverage, and building, you need to pipe the lcov output to `./node_modules/coveralls/bin/coveralls.js`.\n\nThis library currently supports [Travis CI](https://travis-ci.org/) with no extra effort beyond piping the lcov output to coveralls. However, if you're using a different build system, there are a few environment variables that are necessary:\n\n- `COVERALLS_SERVICE_NAME` (the name of your build system)\n- `COVERALLS_REPO_TOKEN` (the secret repo token from coveralls.io)\n- `COVERALLS_GIT_BRANCH` (the branch name)\n\nThere are optional environment variables for other build systems as well:\n\n- `COVERALLS_SERVICE_NUMBER` (an id that uniquely identifies the build)\n- `COVERALLS_SERVICE_JOB_ID` (an id that uniquely identifies the build's job)\n- `COVERALLS_RUN_AT` (a date string for the time that the job ran. RFC 3339 dates work. This defaults to your build system's date/time if you don't set it.)\n- `COVERALLS_PARALLEL` (more info here: <https://docs.coveralls.io/parallel-build-webhook>)\n\n### GitHub Actions CI\n\nIf you are using GitHub Actions CI, you should look into [coverallsapp/github-action](https://github.com/coverallsapp/github-action).\n\nIf you prefer to use this package you can do it like this:\n\n```yml\nenv:\n  COVERALLS_REPO_TOKEN: \"${{ secrets.COVERALLS_REPO_TOKEN }}\"\n  COVERALLS_GIT_BRANCH: \"${{ github.ref }}\"\n```\n\n### [Jest](https://jestjs.io/)\n\n- Install [jest](https://jestjs.io/docs/en/getting-started)\n- Use the following to run tests and push files to coveralls on success:\n\n  ```sh\n  jest --coverage && coveralls < coverage/lcov.info\n  ```\n\nCheck out an example [here](https://github.com/Ethan-Arrowood/harperdb-connect/blob/master/.travis.yml) which makes use of Travis CI build stages\n\n### [Mocha](https://mochajs.org/) + [Blanket.js](https://github.com/alex-seville/blanket)\n\n- Install [blanket.js](https://github.com/alex-seville/blanket)\n- Configure blanket according to [docs](https://github.com/alex-seville/blanket/blob/master/docs/getting_started_node.md).\n- Run your tests with a command like this:\n\n  ```sh\n  NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha \\\n    --require blanket \\\n    --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Mocha](https://mochajs.org/) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nInstrumenting your app for coverage is probably harder than it needs to be (read [here](http://seejohncode.com/2012/03/13/setting-up-mocha-jscoverage//)), but that's also a necessary step.\n\nIn mocha, if you've got your code instrumented for coverage, the command for a Travis CI build would look something like this:\n\n```sh\nYOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha test -R mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n```\n\nCheck out an example [Makefile](https://github.com/cainus/urlgrey/blob/master/Makefile) from one of my projects for an example, especially the test-coveralls build target. Note: Travis CI runs `npm test`, so whatever target you create in your Makefile must be the target that `npm test` runs (This is set in package.json's `scripts` property).\n\n### [Istanbul](https://github.com/gotwarlost/istanbul)\n\n#### With Mocha:\n\n```sh\nistanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n#### With Jasmine:\n\n```sh\nistanbul cover jasmine-node --captureExceptions spec/ && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n### [Nodeunit](https://github.com/caolan/nodeunit) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nDepend on nodeunit, jscoverage and coveralls:\n\n```sh\nnpm install nodeunit jscoverage coveralls --save-dev\n```\n\nAdd a coveralls script to \"scripts\" in your `package.json`:\n\n```json\n\"scripts\": {\n  \"test\": \"nodeunit test\",\n  \"coveralls\": \"jscoverage lib && YOURPACKAGE_COVERAGE=1 nodeunit --reporter=lcov test | coveralls\"\n}\n```\n\nEnsure your app requires instrumented code when `process.env.YOURPACKAGE_COVERAGE` variable is defined.\n\nRun your tests with a command like this:\n\n```sh\nnpm run coveralls\n```\n\nFor detailed instructions on requiring instrumented code, running on Travis CI and submitting to coveralls [see this guide](https://github.com/alanshaw/nodeunit-lcov-coveralls-example).\n\n### [Poncho](https://github.com/deepsweet/poncho)\n\nClient-side JS code coverage using [PhantomJS](https://github.com/ariya/phantomjs), [Mocha](https://mochajs.org/) and [Blanket](https://github.com/alex-seville/blanket):\n\n- [Configure](https://mochajs.org/#running-mocha-in-the-browser) Mocha for browser\n- [Mark](https://github.com/deepsweet/poncho#usage) target script(s) with `data-cover` HTML attribute\n- Run your tests with a command like this:\n\n  ```sh\n  ./node_modules/.bin/poncho -R lcov test/test.html | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Lab](https://github.com/hapijs/lab)\n\n```sh\nlab -r lcov | ./node_modules/.bin/coveralls\n```\n\n### [nyc](https://github.com/istanbuljs/nyc)\n\nWorks with almost any testing framework. Simply execute\n`npm test` with the `nyc` bin followed by running its reporter:\n\n```shell\nnyc npm test && nyc report --reporter=text-lcov | coveralls\n```\n\n### [TAP](https://github.com/isaacs/node-tap)\n\nSimply run your tap tests with the `COVERALLS_REPO_TOKEN` environment\nvariable set and tap will automatically use `nyc` to report\ncoverage to coveralls.\n\n### Command Line Parameters\n\n```shell\nUsage: coveralls.js [-v] filepath\n```\n\n#### Optional arguments:\n\n- `-v`, `--verbose`\n- `filepath` - optionally defines the base filepath of your source files.\n\n## Running locally\n\nIf you're running locally, you must have a `.coveralls.yml` file, as documented in [their documentation](https://docs.coveralls.io/ruby-on-rails#configuration), with your `repo_token` in it; or, you must provide a `COVERALLS_REPO_TOKEN` environment variable on the command-line.\n\nIf you want to send commit data to coveralls, you can set the `COVERALLS_GIT_COMMIT` environment-variable to the commit hash you wish to reference. If you don't want to use a hash, you can set it to `HEAD` to supply coveralls with the latest commit data. This requires git to be installed and executable on the current PATH.\n\n## Contributing\n\nI generally don't accept pull requests that are untested, or break the build, because I'd like to keep the quality high (this is a coverage tool after all!).\n\nI also don't care for \"soft-versioning\" or \"optimistic versioning\" (dependencies that have ^, x, > in them, or anything other than numbers and dots). There have been too many problems with bad semantic versioning in dependencies, and I'd rather have a solid library than a bleeding edge one.\n\n\n[ci-image]: https://github.com/nickmerwin/node-coveralls/workflows/Tests/badge.svg\n[ci-url]: https://github.com/nickmerwin/node-coveralls/actions?workflow=Tests\n\n[coveralls-image]: https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github\n[coveralls-url]: https://coveralls.io/github/nickmerwin/node-coveralls?branch=master"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 24702}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 401910}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1672802}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5277030}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9459920}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17741190}], "dependentsCount": 469, "starsCount": 34}, "github": {"starsCount": 984, "forksCount": 215, "subscribersCount": 15, "issues": {"count": 300, "openCount": 61, "distribution": {"3600": 24, "10800": 12, "32400": 8, "97200": 27, "291600": 28, "874800": 31, "2624400": 23, "7873200": 35, "23619600": 48, "70858800": 33, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "cainus", "commitsCount": 83}, {"username": "nickmerwin", "commitsCount": 55}, {"username": "XhmikosR", "commitsCount": 33}, {"username": "gabehayes", "commitsCount": 16}, {"username": "tdd", "commitsCount": 12}, {"username": "addaleax", "commitsCount": 10}, {"username": "gerarde", "commitsCount": 4}, {"username": "mattjmorrison", "commitsCount": 4}, {"username": "anaisbetts", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "ELLIOTTCABLE", "commitsCount": 2}, {"username": "JonathanPorta", "commitsCount": 2}, {"username": "Swatinem", "commitsCount": 2}, {"username": "alanshaw", "commitsCount": 2}, {"username": "eagleeye", "commitsCount": 2}, {"username": "geek", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ilanbiala", "commitsCount": 2}, {"username": "washimimizuku", "commitsCount": 2}, {"username": "AndreMiras", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "Ethan-Arrowood", "commitsCount": 1}, {"username": "Hirse", "commitsCount": 1}, {"username": "Joe8Bit", "commitsCount": 1}, {"username": "SgtPooki", "commitsCount": 1}, {"username": "StevenWeathers", "commitsCount": 1}, {"username": "TerribleDev", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "a11smiles", "commitsCount": 1}, {"username": "adam-moss", "commitsCount": 1}, {"username": "ashishkujoy", "commitsCount": 1}, {"username": "benpetty", "commitsCount": 1}, {"username": "bigeasy", "commitsCount": 1}, {"username": "bionikspoon", "commitsCount": 1}, {"username": "chasdevs", "commitsCount": 1}, {"username": "daleharvey", "commitsCount": 1}, {"username": "deepak1556", "commitsCount": 1}, {"username": "dylan-smith", "commitsCount": 1}, {"username": "ejlangev", "commitsCount": 1}, {"username": "evanjbowling", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "hyperlink", "commitsCount": 1}, {"username": "jacob-meacham", "commitsCount": 1}, {"username": "jaubourg", "commitsCount": 1}, {"username": "job13er", "commitsCount": 1}, {"username": "jonathanKingston", "commitsCount": 1}, {"username": "joscha", "commitsCount": 1}, {"username": "joshma", "commitsCount": 1}, {"username": "kasperlewau", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "ly-cultureiq", "commitsCount": 1}, {"username": "mattkime", "commitsCount": 1}, {"username": "mdlavin", "commitsCount": 1}, {"username": "mgartner", "commitsCount": 1}, {"username": "midgleyc", "commitsCount": 1}, {"username": "mikaelmello", "commitsCount": 1}, {"username": "mortonfox", "commitsCount": 1}, {"username": "mrcrgl", "commitsCount": 1}, {"username": "ndaidong", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "paazmaya", "commitsCount": 1}, {"username": "paroga", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "posquit0", "commitsCount": 1}, {"username": "rogierslag", "commitsCount": 1}, {"username": "roman01la", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suda", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "waitingsong", "commitsCount": 1}, {"username": "wlabranche", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 69}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "Coveralls - windows-latest-node-6", "state": "success"}, {"context": "Coveralls - windows-latest-node-8", "state": "success"}, {"context": "Coveralls - windows-latest-node-10", "state": "success"}, {"context": "Coveralls - windows-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-6", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-8", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-10", "state": "success"}]}, "source": {"files": {"readmeSize": 8310, "testsSize": 52443}, "badges": [{"urls": {"original": "https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/nickmerwin/node-coveralls/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.svg", "content": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["jshint"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9970000000000001, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1322, "downloadsCount": 1759010, "downloadsAcceleration": 2775.794444444444, "dependentsCount": 469}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8117123287671233, "openIssues": 0.9944444444444445, "issuesDistribution": 0}}, "score": {"final": 0.6805002192354056, "detail": {"quality": 0.9748207261160138, "popularity": 0.4421581524251469, "maintenance": 0.6665675658622862}}}}, {"@babel/cli": {"analyzedAt": "2020-06-30T13:15:53.450Z", "collected": {"metadata": {"name": "@babel/cli", "scope": "babel", "version": "7.10.4", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2020-06-30T13:11:18.880Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-cli"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcli", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"commander": "^4.0.1", "convert-source-map": "^1.1.0", "fs-readdir-recursive": "^1.1.0", "glob": "^7.0.0", "lodash": "^4.17.13", "make-dir": "^2.1.0", "slash": "^2.0.0", "source-map": "^0.5.0", "chokidar": "^2.1.8"}, "devDependencies": {"@babel/core": "^7.10.4", "@babel/helper-fixtures": "^7.10.4", "rimraf": "^3.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "optionalDependencies": {"chokidar": "^2.1.8"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 16}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 35}], "readme": "# @babel/cli\n\n> Babel command line.\n\nSee our website [@babel/cli](https://babeljs.io/docs/en/next/babel-cli.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20cli%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/cli\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/cli --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 288249}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1654612}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6568909}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 20521693}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 38614259}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 64622917}], "dependentsCount": 1728, "starsCount": 2}, "source": {"files": {"readmeSize": 407, "testsSize": 25226, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "make-dir": {"required": "^2.1.0", "stable": "3.1.0", "latest": "3.1.0"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "commander": {"required": "^4.0.1", "stable": "5.1.0", "latest": "6.0.0-0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.4365, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 2, "downloadsCount": 6840564.333333333, "downloadsAcceleration": 19847.279775494673, "dependentsCount": 1728}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5362323051055671, "detail": {"quality": 0.8557808052407879, "popularity": 0.46523256247618294, "maintenance": 0.3333333333333333}}}}, {"html-webpack-plugin": {"analyzedAt": "2020-06-20T04:35:49.125Z", "collected": {"metadata": {"name": "html-webpack-plugin", "scope": "unscoped", "version": "4.3.0", "description": "Simplifies creation of HTML files to serve your webpack bundles", "keywords": ["webpack", "plugin", "html", "html-webpack-plugin"], "date": "2020-04-30T17:39:05.226Z", "author": {"name": "Jan Nicklas", "email": "j.nicklas@me.com", "url": "https://github.com/jantimon", "username": "jantimon"}, "publisher": {"username": "jantimon", "email": "j.nicklas@me.com"}, "maintainers": [{"username": "ampedandwired", "email": "charles.blaxland@gmail.com"}, {"username": "jantimon", "email": "j.nicklas@me.com"}, {"username": "mastilver", "email": "th.sileghem@gmail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/jantimon/html-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/html-webpack-plugin", "homepage": "https://github.com/jantimon/html-webpack-plugin", "repository": "https://github.com/jantimon/html-webpack-plugin", "bugs": "https://github.com/jantimon/html-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"@types/html-minifier-terser": "^5.0.0", "@types/tapable": "^1.0.5", "@types/webpack": "^4.41.8", "html-minifier-terser": "^5.0.1", "loader-utils": "^1.2.3", "lodash": "^4.17.15", "pretty-error": "^2.1.1", "tapable": "^1.1.3", "util.promisify": "1.0.0"}, "devDependencies": {"@types/loader-utils": "1.1.3", "@types/node": "11.13.9", "appcache-webpack-plugin": "1.4.0", "commitizen": "4.0.3", "css-loader": "2.1.1", "cz-conventional-changelog": "2.1.0", "dir-compare": "1.7.2", "file-loader": "3.0.1", "html-loader": "0.5.5", "jest": "24.7.1", "mini-css-extract-plugin": "0.6.0", "pug": "2.0.3", "pug-loader": "2.4.0", "rimraf": "2.6.3", "semistandard": "^13.0.1", "standard-version": "5.0.2", "style-loader": "0.23.1", "typescript": "3.8.3", "webpack": "4.35.2", "webpack-recompilation-simulator": "3.2.0"}, "peerDependencies": {"webpack": ">=4.0.0 < 6.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 14}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 27}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n![npm](https://img.shields.io/npm/dw/html-webpack-plugin.svg)\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![Backers on Open Collective](https://opencollective.com/html-webpack-plugin/backers/badge.svg)](#backers)\n [![Sponsors on Open Collective](https://opencollective.com/html-webpack-plugin/sponsors/badge.svg)](#sponsors) \n\n<div align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://worldvectorlogo.com/logos/html5.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <div>\n    <img width=\"100\" height=\"100\" title=\"Webpack Plugin\" src=\"http://michael-ciniawsky.github.io/postcss-load-plugins/logo.svg\">\n  </div>\n  <h1>HTML Webpack Plugin</h1>\n  <p>Plugin that simplifies creation of HTML files to serve your bundles</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\n  npm i --save-dev html-webpack-plugin\n```\n\n```bash\n  yarn add --dev html-webpack-plugin\n```\n\n\nThis is a [webpack](http://webpack.js.org/) plugin that simplifies creation of HTML files to serve your `webpack` bundles. This is especially useful for `webpack` bundles that include a hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply\nyour own template using `lodash` templates or use your own loader.\n\n<h2 align=\"center\">Sponsors</h2>\n\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/9/avatar.svg\"></a>\n\nThanks for supporting the ongoing improvements to the html-webpack-plugin!  \n\n<h2 align=\"center\">Zero Config</h2>\n\nThe `html-webpack-plugin` works without configuration.  \nIt's a great addition to the [\u2699\ufe0f webpack-config-plugins](https://github.com/namics/webpack-config-plugins/blob/master/README.md#zero-config-webpack-dev-server-example).\n\n<h2 align=\"center\">Plugins</h2>\n\nThe `html-webpack-plugin` provides [hooks](https://github.com/jantimon/html-webpack-plugin#events) to extend it to your needs. There are already some really powerful plugins which can be integrated with zero configuration\n\n * [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity) for enhanced asset security\n * [appcache-webpack-plugin](https://github.com/lettertwo/appcache-webpack-plugin) for iOS and Android offline usage\n * [favicons-webpack-plugin](https://github.com/jantimon/favicons-webpack-plugin) which generates favicons and icons for iOS, Android and desktop browsers\n * [html-webpack-harddisk-plugin](https://github.com/jantimon/html-webpack-harddisk-plugin) can be used to always write to disk the html file, useful when webpack-dev-server / HMR are being used\n * [html-webpack-inline-source-plugin](https://github.com/DustinJackson/html-webpack-inline-source-plugin) to inline your assets in the resulting HTML file\n * [html-webpack-inline-svg-plugin](https://github.com/thegc/html-webpack-inline-svg-plugin) to inline SVGs in the resulting HTML file.\n * [html-webpack-exclude-assets-plugin](https://github.com/jamesjieye/html-webpack-exclude-assets-plugin) for excluding assets using regular expressions\n * [html-webpack-include-assets-plugin](https://github.com/jharris4/html-webpack-include-assets-plugin) for including lists of js or css file paths (such as those copied by the copy-webpack-plugin).\n * [script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin) to add `async`, `defer` or `module` attributes to your `<script>` elements, or even inline them\n * [style-ext-html-webpack-plugin](https://github.com/numical/style-ext-html-webpack-plugin) to convert your `<link>`s to external stylesheets into `<style>` elements containing internal CSS\n * [html-webpack-injector](https://github.com/thearchitgarg/html-webpack-injector) to inject chunks in `head` or `body` (different locations ) of same html document.\n * [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin) to add resource hints for faster initial page loads using `<link rel='preload'>` and `<link rel='prefetch'>`\n * [preload-webpack-plugin](https://github.com/GoogleChrome/preload-webpack-plugin) for automatically wiring up asynchronous (and other types) of JavaScript chunks using `<link rel='preload'>` helping with lazy-loading\n * [link-media-html-webpack-plugin](https://github.com/yaycmyk/link-media-html-webpack-plugin) allows for injected stylesheet `<link />` tags to have their media attribute set automatically; useful for providing specific desktop/mobile/print etc. stylesheets that the browser will conditionally download\n * [inline-chunk-manifest-html-webpack-plugin](https://github.com/jouni-kantola/inline-chunk-manifest-html-webpack-plugin) for inlining webpack's chunk manifest. Default extracts manifest and inlines in `<head>`\n * [html-webpack-inline-style-plugin](https://github.com/djaax/html-webpack-inline-style-plugin) for inlining styles to HTML elements using [juice](https://github.com/Automattic/juice). Useful for email generation automatisation.\n * [html-webpack-exclude-empty-assets-plugin](https://github.com/KnisterPeter/html-webpack-exclude-empty-assets-plugin) removes empty assets from being added to the html. This fixes some problems with extract-text-plugin with webpack 4.\n * [webpack-concat-plugin](https://github.com/hxlniada/webpack-concat-plugin) for concat and uglify files that needn't to be webpack bundles(for legacy files) and inject to html-webpack-plugin.\n * [html-webpack-link-type-plugin](https://github.com/steadyapp/html-webpack-link-type-plugin) adds a configurable mimetype to resources injected as links (such as adding type=\"text/css\" to external stylesheets) for compatibility with \"strict mode\". \n * [csp-html-webpack-plugin](https://github.com/slackhq/csp-html-webpack-plugin) to add [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) meta tags to the HTML output\n * [webpack-nomodule-plugin](https://github.com/swimmadude66/webpack-nomodule-plugin) allows you to add a `nomodule` attribute to specific injected scripts, which prevents the scripts from being loaded by newer browsers. Good for limiting loads of polyfills.\n\n\n<h2 align=\"center\">Usage</h2>\n\nThe plugin will generate an HTML5 file for you that includes all your `webpack`\nbundles in the body using `script` tags. Just add the plugin to your `webpack`\nconfig as follows:\n\n**webpack.config.js**\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin()\n  ]\n}\n```\n\nThis will generate a file `dist/index.html` containing the following\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple `webpack` entry points, they will all be included with `script` tags in the generated HTML.\n\nIf you have any CSS assets in webpack's output (for example, CSS extracted with the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin))\nthen these will be included with `<link>` tags in the HTML head.\n\nIf you have plugins that make use of it, `html-webpack-plugin` should be ordered first before any of the integrated plugins.\n\n<h2 align=\"center\">Options</h2>\n\nYou can pass a hash of configuration options to `html-webpack-plugin`.\nAllowed values are as follows\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`title`**|`{String}`|`Webpack App`|The title to use for the generated HTML document|\n|**`filename`**|`{String}`|`'index.html'`|The file to write the HTML to. Defaults to `index.html`. You can specify a subdirectory here too (eg: `assets/admin.html`)|\n|**`template`**|`{String}`|``|`webpack` relative or absolute path to the template. By default it will use `src/index.ejs` if it exists. Please see the [docs](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md) for details|\n|**`templateContent`**|`{string\\|Function\\|false}`|false| Can be used instead of `template` to provide an inline template - please read the [Writing Your Own Templates](https://github.com/jantimon/html-webpack-plugin#writing-your-own-templates) section |\n|**`templateParameters`**|`{Boolean\\|Object\\|Function}`| `false`| Allows to overwrite the parameters used in the template - see [example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/template-parameters) |\n|**`inject`**|`{Boolean\\|String}`|`true`|`true \\|\\| 'head' \\|\\| 'body' \\|\\| false` Inject all assets into the given `template` or `templateContent`. When passing `true` or `'body'` all javascript resources will be placed at the bottom of the body element. `'head'` will place the scripts in the head element - see the [inject:false example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/custom-insertion-position)|\n|**`scriptLoading`**|`{'blocking'\\|'defer'}`|`'blocking'`| Modern browsers support non blocking javascript loading (`'defer'`) to improve the page startup performance. |\n|**`favicon`**|`{String}`|``|Adds the given favicon path to the output HTML|\n|**`meta`**|`{Object}`|`{}`|Allows to inject `meta`-tags. E.g. `meta: {viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'}`|\n|**`base`**|`{Object\\|String\\|false}`|`false`|Inject a [`base`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base) tag. E.g. `base: \"https://example.com/path/page.html`|\n|**`minify`**|`{Boolean\\|Object}`|`true` if `mode` is `'production'`, otherwise `false`|Controls if and in what ways the output should be minified. See [minification](#minification) below for more details.|\n|**`hash`**|`{Boolean}`|`false`|If `true` then append a unique `webpack` compilation hash to all included scripts and CSS files. This is useful for cache busting|\n|**`cache`**|`{Boolean}`|`true`|Emit the file only if it was changed|\n|**`showErrors`**|`{Boolean}`|`true`|Errors details will be written into the HTML page|\n|**`chunks`**|`{?}`|`?`|Allows you to add only some chunks (e.g only the unit-test chunk)|\n|**[`chunksSortMode`](#plugins)**|`{String\\|Function}`|`auto`|Allows to control how chunks should be sorted before they are included to the HTML. Allowed values are `'none' \\| 'auto' \\| 'manual' \\| {Function}`|\n|**`excludeChunks`**|`{Array.<string>}`|``|Allows you to skip some chunks (e.g don't add the unit-test chunk)|\n|**`xhtml`**|`{Boolean}`|`false`|If `true` render the `link` tags as self-closing (XHTML compliant)|\n\nHere's an example webpack config illustrating how to use these options\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename: 'assets/admin.html'\n    })\n  ]\n}\n```\n\n### Generating Multiple HTML Files\n\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\n### Writing Your Own Templates\n\nIf the default generated HTML doesn't meet your needs you can supply\nyour own template. The easiest way is to use the `template` option and pass a custom HTML file.\nThe html-webpack-plugin will automatically inject all necessary CSS, JS, manifest\nand favicon files into the markup.\n\nDetails of other template loaders are [documented here](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md).\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template',\n    // Load a custom template (lodash by default)\n    template: 'index.html'\n  })\n]\n```\n\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\nIf you already have a template loader, you can use it to parse the template.\nPlease note that this will also happen if you specify the html-loader and use `.html` file as template.\n\n**webpack.config.js**\n```js\nmodule: {\n  loaders: [\n    { test: /\\.hbs$/, loader: \"handlebars-loader\" }\n  ]\n},\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template using Handlebars',\n    template: 'index.hbs'\n  })\n]\n```\n\nYou can use the `lodash` syntax out of the box. If the `inject` feature doesn't fit your needs and you want full control over the asset placement use the [default template](https://github.com/jaketrent/html-webpack-template/blob/86f285d5c790a6c15263f5cc50fd666d51f974fd/index.html) of the [html-webpack-template project](https://github.com/jaketrent/html-webpack-template) as a starting point for writing your own.\n\nThe following variables are available in the template by default (you can extend them using the `templateParameters` option):\n\n- `htmlWebpackPlugin`: data specific to this plugin\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n  - `htmlWebpackPlugin.tags`: the prepared `headTags` and `bodyTags` Array to render the `<base>`, `<meta>`, `<script>` and `<link>` tags.\n     Can be used directly in templates and literals. For example: \n     ```html\n     <html>\n       <head>\n         <%= htmlWebpackPlugin.tags.headTags %>\n       </head>\n       <body>\n         <%= htmlWebpackPlugin.tags.bodyTags %>\n       </body>\n     </html>\n     ```\n  \n  - `htmlWebpackPlugin.files`: direct access to the files used during the compilation.\n\n    ```typescript\n    publicPath: string;\n    js: string[];\n    css: string[];\n    manifest?: string;\n    favicon?: string;\n    ```\n\n\n- `webpackConfig`: the webpack configuration that was used for this compilation. This\n  can be used, for example, to get the `publicPath` (`webpackConfig.output.publicPath`).\n\n- `compilation`: the webpack [compilation object](https://webpack.js.org/api/compilation-object/).\n  This can be used, for example, to get the contents of processed assets and inline them\n  directly in the page, through `compilation.assets[...].source()`\n  (see [the inline template example](examples/inline/template.pug)).\n\n\nThe template can also be directly inlined directly into the options object.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  templateContent: `\n    <html>\n      <body>\n        <h1>Hello World</h1>\n      </body>\n    </html>\n  `\n})\n```\n\nThe `templateContent` can also access all `templateParameters` values.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  inject: false,\n  templateContent: ({htmlWebpackPlugin}) => `\n    <html>\n      <head>\n        ${htmlWebpackPlugin.tags.headTags}\n      </head>\n      <body>\n        <h1>Hello World</h1>\n        ${htmlWebpackPlugin.tags.bodyTags}\n      </body>\n    </html>\n  `\n})\n```\n\n### Filtering Chunks\n\nTo include only certain chunks you can limit the chunks being used\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    chunks: ['app']\n  })\n]\n```\n\nIt is also possible to exclude certain chunks by setting the `excludeChunks` option\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    excludeChunks: [ 'dev-helper' ]\n  })\n]\n```\n\n### Minification\n\nIf the `minify` option is set to `true` (the default when webpack's `mode` is `'production'`),\nthe generated HTML will be minified using [html-minifier-terser](https://github.com/DanielRuf/html-minifier-terser)\nand the following options:\n\n```js\n{\n  collapseWhitespace: true,\n  removeComments: true,\n  removeRedundantAttributes: true,\n  removeScriptTypeAttributes: true,\n  removeStyleLinkTypeAttributes: true,\n  useShortDoctype: true\n}\n```\n\nTo use custom [html-minifier options](https://github.com/DanielRuf/html-minifier-terser#options-quick-reference)\npass an object to `minify` instead. This object will not be merged with the defaults above.\n\nTo disable minification during production mode set the `minify` option to `false`.\n\n### Meta Tags\n\nIf the `meta` option is set the html-webpack-plugin will inject meta tags.  \nFor the default template the html-webpack-plugin will already provide a default for the `viewport` meta tag.\n\nPlease take a look at this well maintained list of almost all [possible meta tags](https://github.com/joshbuchea/HEAD#meta).\n\n#### name/content meta tags \n\nMost meta tags are configured by setting a `name` and a `content` attribute.  \nTo add those use a key/value pair:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n      'meta': {\n        'viewport': 'width=device-width, initial-scale=1, shrink-to-fit=no',\n        // Will generate: <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        'theme-color': '#4285f4'\n        // Will generate: <meta name=\"theme-color\" content=\"#4285f4\">\n      }\n  })\n]\n```\n\n#### Simulate http response headers\n\nThe **http-equiv** attribute is essentially used to simulate a HTTP response header.  \nThis format is supported using an object notation which allows you to add any attribute:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    'meta': {\n      'Content-Security-Policy': { 'http-equiv': 'Content-Security-Policy', 'content': 'default-src https:' },\n      // Will generate: <meta http-equiv=\"Content-Security-Policy\" content=\"default-src https:\">\n      // Which equals to the following http header: `Content-Security-Policy: default-src https:`\n      'set-cookie': { 'http-equiv': 'set-cookie', content: 'name=value; expires=date; path=url' },\n      // Will generate: <meta http-equiv=\"set-cookie\" content=\"value; expires=date; path=url\">\n      // Which equals to the following http header: `set-cookie: value; expires=date; path=url`\n    }\n  })\n]\n```\n\n### Base Tag\n\nWhen the `base` option is used,\nhtml-webpack-plugin will inject a [base tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base).\nBy default, a base tag will not be injected.\n\nThe following two are identical and will both insert `<base href=\"http://example.com/some/page.html\">`:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': 'http://example.com/some/page.html'\n})\n```\n\n```js\nnew HtmlWebpackPlugin({\n  'base': { 'href': 'http://example.com/some/page.html' }\n})\n```\n\nThe `target` can be specified with the corresponding key:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': {\n    'href': 'http://example.com/some/page.html',\n    'target': '_blank'\n  }\n})\n```\n\nwhich will inject the element `<base href=\"http://example.com/some/page.html\" target=\"_blank\">`.\n\n### Long Term Caching\n\nFor long term caching add `contenthash/templatehash` to the filename.\n\n**Example:**\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    filename: 'index.[contenthash].html'\n  })\n]\n```\n\n`contenthash/templatehash` is the hash of the content of the output file.\n\nOptionally, You can configure like `[<hashType>:contenthash:<digestType>:<length>]`\n\n* `hashType` - one of `sha1`, `md5`, `sha256`, `sha512`  or any other node.js supported hash type\n* `digestType` - one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n* `maxlength` - maximum length of the generated hash in chars\n\n**Defaults:** `[md5:contenthash:hex:9999]`\n\n### Events\n\nTo allow other [plugins](https://github.com/webpack/docs/wiki/plugins) to alter the HTML this plugin executes\n[tapable](https://github.com/webpack/tapable/tree/master) hooks.\n\nThe [lib/hooks.js](https://github.com/jantimon/html-webpack-plugin/blob/master/lib/hooks.js) contains all information\nabout which values are passed.\n\n[![Concept flow uml](https://raw.githubusercontent.com/jantimon/html-webpack-plugin/master/flow.png)](https://github.com/jantimon/html-webpack-plugin/blob/master/flow.puml)\n\n#### `beforeAssetTagGeneration` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<{string}>,\n        css: Array<{string}>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTags` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTagGroups` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `afterTemplateExecution` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `beforeEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `afterEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\nExample implementation: [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity)\n\n**plugin.js**\n```js\n// If your plugin is direct dependent to the html webpack plugin:\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n// If your plugin is using html-webpack-plugin as an optional dependency\n// you can use https://github.com/tallesl/node-safe-require instead:\nconst HtmlWebpackPlugin = require('safe-require')('html-webpack-plugin');\n\nclass MyPlugin {\n  apply (compiler) {\n    compiler.hooks.compilation.tap('MyPlugin', (compilation) => {\n      console.log('The compiler is starting a new compilation...')\n\n      // Static Plugin interface |compilation |HOOK NAME | register listener \n      HtmlWebpackPlugin.getHooks(compilation).beforeEmit.tapAsync(\n        'MyPlugin', // <-- Set a meaningful name here for stacktraces\n        (data, cb) => {\n          // Manipulate the content\n          data.html += 'The Magic Footer'\n          // Tell webpack to move on\n          cb(null, data)\n        }\n      )\n    })\n  }\n}\n\nmodule.exports = MyPlugin\n```\n\n**webpack.config.js**\n```js\nplugins: [\n  new MyPlugin({ options: '' })\n]\n```\n\nNote that the callback must be passed the HtmlWebpackPluginData in order to pass this onto any other plugins listening on the same `beforeEmit` event\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/4113649?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/jantimon\">Jan Nicklas</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/4112409?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/mastilver\">Thomas Sileghem</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n## Backers\n\nThank you to all our backers!  \nIf you want to support the project as well [become a sponsor](https://opencollective.com/html-webpack-plugin#sponsor) or a [a backer](https://opencollective.com/html-webpack-plugin#backer).\n\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/0/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/1/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/2/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/3/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/5/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/6/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/7/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/9/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/9/avatar.svg?requireActive=false\"></a>\n\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\nYou're free to contribute to this project by submitting [issues](https://github.com/jantimon/html-webpack-plugin/issues) and/or [pull requests](https://github.com/jantimon/html-webpack-plugin/pulls). This project is test-driven, so keep in mind that every change and new feature should be covered by tests.\n\nThis project uses the [semistandard code style](https://github.com/Flet/semistandard).\n\n<a href=\"https://github.com/jantimon/html-webpack-plugin/graphs/contributors\"><img src=\"https://opencollective.com/html-webpack-plugin/contributors.svg?width=890&button=false\" /></a>\n\n\n[npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/html-webpack-plugin\n\n[node]: https://img.shields.io/node/v/html-webpack-plugin.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/jantimon/html-webpack-plugin.svg\n[deps-url]: https://david-dm.org/jantimon/html-webpack-plugin\n\n[tests]: http://img.shields.io/travis/jantimon/html-webpack-plugin.svg\n[tests-url]: https://travis-ci.org/jantimon/html-webpack-plugin"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 927485}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5994132}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 25620276}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 76353248}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 134685684}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 238171718}], "dependentsCount": 6923, "starsCount": 195}, "github": {"starsCount": 8870, "forksCount": 1097, "subscribersCount": 113, "issues": {"count": 1469, "openCount": 47, "distribution": {"3600": 162, "10800": 92, "32400": 92, "97200": 165, "291600": 187, "874800": 224, "2624400": 175, "7873200": 146, "23619600": 163, "70858800": 61, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "jantimon", "commitsCount": 328}, {"username": "ampedandwired", "commitsCount": 34}, {"username": "SpaceK33z", "commitsCount": 15}, {"username": "SimenB", "commitsCount": 12}, {"username": "sibiraj-s", "commitsCount": 10}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "numical", "commitsCount": 4}, {"username": "swimmadude66", "commitsCount": 4}, {"username": "cgreening", "commitsCount": 3}, {"username": "edmorley", "commitsCount": 3}, {"username": "kennyt", "commitsCount": 3}, {"username": "mastilver", "commitsCount": 3}, {"username": "okhomenko", "commitsCount": 3}, {"username": "Austaras", "commitsCount": 2}, {"username": "AviVahl", "commitsCount": 2}, {"username": "EmmanuelDemey", "commitsCount": 2}, {"username": "Graham42", "commitsCount": 2}, {"username": "JSteunou", "commitsCount": 2}, {"username": "NekR", "commitsCount": 2}, {"username": "TroyTae", "commitsCount": 2}, {"username": "anjianshi", "commitsCount": 2}, {"username": "ascariandrea", "commitsCount": 2}, {"username": "chiplay", "commitsCount": 2}, {"username": "foglerek", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "mateatslc", "commitsCount": 2}, {"username": "mc-zone", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "mistadikay", "commitsCount": 2}, {"username": "rodneyrehm", "commitsCount": 2}, {"username": "sandeep45", "commitsCount": 2}, {"username": "sokra", "commitsCount": 2}, {"username": "spuf", "commitsCount": 2}, {"username": "vincent-ng", "commitsCount": 2}, {"username": "zzuieliyaoli", "commitsCount": 2}, {"username": "AaronFriel", "commitsCount": 1}, {"username": "Aftabnack", "commitsCount": 1}, {"username": "AhmedElaguab", "commitsCount": 1}, {"username": "KnisterPeter", "commitsCount": 1}, {"username": "MrStLouis", "commitsCount": 1}, {"username": "Vladi4-gh", "commitsCount": 1}, {"username": "Wind4", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adamsanderson", "commitsCount": 1}, {"username": "adelura", "commitsCount": 1}, {"username": "akrifari", "commitsCount": 1}, {"username": "alexdevero", "commitsCount": 1}, {"username": "artemirq", "commitsCount": 1}, {"username": "atilkan", "commitsCount": 1}, {"username": "atstp", "commitsCount": 1}, {"username": "brianpeiris", "commitsCount": 1}, {"username": "brianzelip", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "cronin4392", "commitsCount": 1}, {"username": "djaax", "commitsCount": 1}, {"username": "dudekaa", "commitsCount": 1}, {"username": "felixrabe", "commitsCount": 1}, {"username": "genderquery", "commitsCount": 1}, {"username": "habina", "commitsCount": 1}, {"username": "hg-pyun", "commitsCount": 1}, {"username": "hrs-o", "commitsCount": 1}, {"username": "ianberinger", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "jacobroufa", "commitsCount": 1}, {"username": "jinasonlin", "commitsCount": 1}, {"username": "joshunger", "commitsCount": 1}, {"username": "kontrollanten", "commitsCount": 1}, {"username": "latipun7", "commitsCount": 1}, {"username": "lazarljubenovic", "commitsCount": 1}, {"username": "lfbayer", "commitsCount": 1}, {"username": "lightpohl", "commitsCount": 1}, {"username": "monkeywithacupcake", "commitsCount": 1}, {"username": "mzbac", "commitsCount": 1}, {"username": "nphoff", "commitsCount": 1}, {"username": "panstav", "commitsCount": 1}, {"username": "pducks32", "commitsCount": 1}, {"username": "peterblazejewicz", "commitsCount": 1}, {"username": "poacher2k", "commitsCount": 1}, {"username": "riophae", "commitsCount": 1}, {"username": "samloibl", "commitsCount": 1}, {"username": "scinos", "commitsCount": 1}, {"username": "shobhitsharma", "commitsCount": 1}, {"username": "siakaramalegos", "commitsCount": 1}, {"username": "skiny2015", "commitsCount": 1}, {"username": "st-sloth", "commitsCount": 1}, {"username": "t-kelly", "commitsCount": 1}, {"username": "the-rasmussen", "commitsCount": 1}, {"username": "theGC", "commitsCount": 1}, {"username": "thearchitgarg", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "tkrotoff", "commitsCount": 1}, {"username": "tommytroylin", "commitsCount": 1}, {"username": "tomquirk", "commitsCount": 1}, {"username": "troglotit", "commitsCount": 1}, {"username": "ttous", "commitsCount": 1}, {"username": "webmaster128", "commitsCount": 1}, {"username": "wingrunr21", "commitsCount": 1}, {"username": "zbigg", "commitsCount": 1}, {"username": "zgreen", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 37}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 50}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 72}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 28872, "testsSize": 92386, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/dw/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "service": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/david/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/david/jantimon/html-webpack-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "service": "https://api.travis-ci.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/travis/jantimon/html-webpack-plugin.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig"], "outdatedDependencies": {"util.promisify": {"required": "1.0.0", "stable": "1.0.1", "latest": "1.0.1"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5555555555555556, "branding": 0.6}, "popularity": {"communityInterest": 10375, "downloadsCount": 25451082.666666668, "downloadsAcceleration": 74303.12260273972, "dependentsCount": 6923}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9126712328767124, "openIssues": 1, "issuesDistribution": 0.7030403396382379}}, "score": {"final": 0.9102991074666611, "detail": {"quality": 0.93279326000988, "popularity": 0.8031136982930713, "maintenance": 0.9982038144603489}}}}, {"sass-loader": {"analyzedAt": "2020-06-27T15:32:54.007Z", "collected": {"metadata": {"name": "sass-loader", "scope": "unscoped", "version": "8.0.2", "description": "Sass loader for webpack", "keywords": ["sass", "libsass", "webpack", "loader"], "date": "2020-01-13T13:20:18.297Z", "author": {"name": "J. Tangelder"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "akiran", "email": "kiran@neostack.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "jtangelder", "email": "j.tangelder@gmail.com"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "peeri", "email": "developers@peerigon.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/sass-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/sass-loader", "homepage": "https://github.com/webpack-contrib/sass-loader", "repository": "https://github.com/webpack-contrib/sass-loader", "bugs": "https://github.com/webpack-contrib/sass-loader/issues"}, "license": "MIT", "dependencies": {"clone-deep": "^4.0.1", "loader-utils": "^1.2.3", "neo-async": "^2.6.1", "schema-utils": "^2.6.1", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.8.0", "@babel/core": "^7.8.0", "@babel/preset-env": "^7.8.2", "@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.9.0", "bootstrap": "^4.4.1", "bootstrap-sass": "^3.4.1", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^6.0.3", "css-loader": "^3.4.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-plugin-import": "^2.20.0", "fibers": "^4.0.2", "file-loader": "^5.0.2", "husky": "^4.0.7", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.4.1", "lint-staged": "^9.5.0", "memfs": "^3.0.3", "node-sass": "^4.13.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "sass": "^1.24.4", "standard-version": "^7.0.1", "style-loader": "^1.1.2", "webpack": "^4.41.5", "webpack-cli": "^3.3.10", "webpack-dev-server": "^3.10.1"}, "peerDependencies": {"webpack": "^4.36.0 || ^5.0.0", "node-sass": "^4.0.0", "sass": "^1.3.0", "fibers": ">= 3.1.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 7}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img height=\"100\"\n    src=\"https://worldvectorlogo.com/logos/sass-1.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# sass-loader\n\nLoads a Sass/SCSS file and compiles it to CSS.\n\n## Getting Started\n\nTo begin, you'll need to install `sass-loader`:\n\n```console\nnpm install sass-loader node-sass webpack --save-dev\n```\n\n`sass-loader` requires you to install either [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](https://github.com/sass/dart-sass) on your own (more documentation can be found below).\nThis allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.\n\nChain the `sass-loader` with the [css-loader](https://github.com/webpack-contrib/css-loader) and the [style-loader](https://github.com/webpack-contrib/style-loader) to immediately apply all styles to the DOM or the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract it into a separate file.\n\nThen add the loader to your Webpack configuration. For example:\n\n**app.js**\n\n```js\nimport './style.scss';\n```\n\n**style.scss**\n\n```scss\n$body-color: red;\n\nbody {\n  color: $body-color;\n}\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // Creates `style` nodes from JS strings\n          'style-loader',\n          // Translates CSS into CommonJS\n          'css-loader',\n          // Compiles Sass to CSS\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nFinally run `webpack` via your preferred method.\n\n### Resolving `import` at-rules\n\nWebpack provides an [advanced mechanism to resolve files](https://webpack.js.org/concepts/module-resolution/).\n\nThe `sass-loader` uses Sass's custom importer feature to pass all queries to the Webpack resolving engine. Thus you can import your Sass modules from `node_modules`. Just prepend them with a `~` to tell Webpack that this is not a relative import:\n\n```scss\n@import '~bootstrap';\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home directory.\nWebpack needs to distinguish between `bootstrap` and `~bootstrap` because CSS and Sass files have no special syntax for importing relative files.\nWriting `@import \"style.scss\"` is the same as `@import \"./style.scss\";`\n\n### Problems with `url(...)`\n\nSince Sass implementations don't provide [url rewriting](https://github.com/sass/libsass/issues/532), all linked assets must be relative to the output.\n\n- If you pass the generated CSS on to the `css-loader`, all urls must be relative to the entry-file (e.g. `main.scss`).\n- If you're just generating CSS without passing it to the `css-loader`, it must be relative to your web root.\n\nYou will be disrupted by this first issue. It is natural to expect relative references to be resolved against the `.sass`/`.scss` file in which they are specified (like in regular `.css` files).\n\nThankfully there are a two solutions to this problem:\n\n- Add the missing url rewriting using the [resolve-url-loader](https://github.com/bholloway/resolve-url-loader). Place it before `sass-loader` in the loader chain.\n- Library authors usually provide a variable to modify the asset path. [bootstrap-sass](https://github.com/twbs/bootstrap-sass) for example has an `$icon-font-path`.\n\n## Options\n\n### `implementation`\n\nThe special `implementation` option determines which implementation of Sass to use.\n\nBy default the loader resolve the implementation based on your dependencies.\nJust add required implementation to `package.json` (`node-sass` or `sass` package) and install dependencies.\n\nExample where the `sass-loader` loader uses the `sass` (`dart-sass`) implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\"\n  }\n}\n```\n\nExample where the `sass-loader` loader uses the `node-sass` implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"node-sass\": \"^4.0.0\"\n  }\n}\n```\n\nBeware the situation when `node-sass` and `sass` were installed! By default the `sass-loader` prefers `node-sass`. In order to avoid this situation you can use the `implementation` option.\n\nThe `implementation` options either accepts `node-sass` or `sass` (`Dart Sass`) as a module.\n\nFor example, to use Dart Sass, you'd pass:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              // Prefer `dart-sass`\n              implementation: require('sass'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nNote that when using `sass` (`Dart Sass`), **synchronous compilation is twice as fast as asynchronous compilation** by default, due to the overhead of asynchronous callbacks.\nTo avoid this overhead, you can use the [fibers](https://www.npmjs.com/package/fibers) package to call asynchronous importers from the synchronous code path.\n\nWe automatically inject the [`fibers`](https://github.com/laverdet/node-fibers) package (setup `sassOptions.fiber`) if is possible (i.e. you need install the [`fibers`](https://github.com/laverdet/node-fibers) package).\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\",\n    \"fibers\": \"^4.0.1\"\n  }\n}\n```\n\nYou can disable automatically injecting the [`fibers`](https://github.com/laverdet/node-fibers) package by passing a `false` value for the `sassOptions.fiber` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: false,\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nYou can also pass the `fiber` value using this code:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: require('fibers'),\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sassOptions`\n\nType: `Object|Function`\n\nOptions for [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](http://sass-lang.com/dart-sass) implementation.\n\n> \u2139\ufe0f The `indentedSyntax` option has `true` value for the `sass` extension.\n\n> \u2139\ufe0f Options such as `file` and `outFile` are unavailable.\n\n> \u2139 We recommend not to use the `sourceMapContents`, `sourceMapEmbed`, `sourceMapRoot` options because `sass-loader` automatically sets these options.\n\nThere is a slight difference between the `node-sass` and `sass` (`Dart Sass`) options.\nPlease consult documentation before using them:\n\n- [Node Sass documentation](https://github.com/sass/node-sass/#options) for all available `node-sass` options.\n- [Dart Sass documentation](https://github.com/sass/dart-sass#javascript-api) for all available `sass` options.\n\n#### `Object`\n\nUse and object for the Sass implementation setup.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: {\n                indentWidth: 4,\n                includePaths: ['absolute/path/a', 'absolute/path/b'],\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllows to setup the Sass implementation by setting different options based on the loader context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return {\n                    includePaths: ['absolute/path/c', 'absolute/path/d'],\n                  };\n                }\n\n                return {\n                  includePaths: ['absolute/path/a', 'absolute/path/b'],\n                };\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `prependData`\n\nType: `String|Function`\nDefault: `undefined`\n\nPrepends `Sass`/`SCSS` code before the actual entry file.\nIn this case, the `sass-loader` will not override the `data` option but just append the entry's content.\n\nThis is especially useful when some of your Sass variables depend on the environment:\n\n> \u2139 Since you're injecting code, this will break the source mappings in your entry file. Often there's a simpler solution than this, like multiple Sass entry files.\n\n#### `String`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: '$env: ' + process.env.NODE_ENV + ';',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return '$value: 100px;';\n                }\n\n                return '$value: 200px;';\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: depends on the `compiler.devtool` value\n\nEnables/Disables generation of source maps.\n\nBy default generation of source maps depends on the [`devtool`](https://webpack.js.org/configuration/devtool/) option. All values enable source map generation except `eval` and `false` value.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139 In some rare cases `node-sass` can output invalid source maps (it is a `node-sass` bug).\n> In order to avoid this, you can try to update `node-sass` to latest version or you can try to set within `sassOptions` the `outputStyle` option to `compressed`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            sourceMap: true,\n            sassOptions: {\n              outputStyle: 'compressed',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `webpackImporter`\n\nType: `Boolean`\nDefault: `true`\n\nEnables/Disables the default Webpack importer.\n\nThis can improve performance in some cases. Use it with caution because aliases and `@import` at-rules starting with `~` will not work. You can pass own `importer` to solve this (see [`importer docs`](https://github.com/sass/node-sass#importer--v200---experimental)).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              webpackImporter: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Extracts CSS into separate files\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\nThere are two possibilities to extract a style sheet from the bundle:\n\n- [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)\n- [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // fallback to style-loader in development\n          process.env.NODE_ENV !== 'production'\n            ? 'style-loader'\n            : MiniCssExtractPlugin.loader,\n          'css-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n};\n```\n\n### Source maps\n\nEnables/Disables generation of source maps.\n\nTo enable CSS source maps, you'll need to pass the `sourceMap` option to the `sass-loader` _and_ the css-loader.\n\n**webpack.config.js**\n\n```javascript\nmodule.exports = {\n  devtool: 'source-map', // any \"source-map\"-like devtool is possible\n  module: {\n    rules: [\n      {\n        test: /\\.scss$/,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nIf you want to edit the original Sass files inside Chrome, [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/webpack-contrib/sass-loader/tree/master/test) for a running example.\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/sass-loader.svg\n[npm-url]: https://npmjs.com/package/sass-loader\n[node]: https://img.shields.io/node/v/sass-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/sass-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/sass-loader\n[tests]: https://dev.azure.com/webpack-contrib/sass-loader/_apis/build/status/webpack-contrib.sass-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/sass-loader/_build/latest?definitionId=21&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/sass-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/sass-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1082484}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5483823}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 28077901}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 84771566}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 155927471}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 265124549}], "dependentsCount": 5987, "starsCount": 75}, "github": {"starsCount": 3436, "forksCount": 359, "subscribersCount": 47, "issues": {"count": 852, "openCount": 5, "distribution": {"3600": 196, "10800": 45, "32400": 48, "97200": 83, "291600": 57, "874800": 74, "2624400": 91, "7873200": 112, "23619600": 98, "70858800": 43, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "jhnns", "commitsCount": 225}, {"username": "evilebottnawi", "commitsCount": 79}, {"username": "jtangelder", "commitsCount": 21}, {"username": "d3viant0ne", "commitsCount": 11}, {"username": "jamesgeorge007", "commitsCount": 9}, {"username": "akiran", "commitsCount": 7}, {"username": "herrstucki", "commitsCount": 6}, {"username": "jorrit", "commitsCount": 4}, {"username": "oopschen", "commitsCount": 4}, {"username": "chicoxyzzy", "commitsCount": 3}, {"username": "justin808", "commitsCount": 2}, {"username": "michael-ciniawsky", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "vanesyan", "commitsCount": 2}, {"username": "BANOnotIT", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "FractalBoy", "commitsCount": 1}, {"username": "RahavLussato", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "Vishal0203", "commitsCount": 1}, {"username": "WalterWeidner", "commitsCount": 1}, {"username": "XeeD", "commitsCount": 1}, {"username": "acouch", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "avanderhoorn", "commitsCount": 1}, {"username": "benschac", "commitsCount": 1}, {"username": "bmihelac", "commitsCount": 1}, {"username": "cevou", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "chrisfitz", "commitsCount": 1}, {"username": "chukitow", "commitsCount": 1}, {"username": "clintonb", "commitsCount": 1}, {"username": "deoxxa", "commitsCount": 1}, {"username": "dimitardanailov", "commitsCount": 1}, {"username": "dirtyhenry", "commitsCount": 1}, {"username": "donnysim", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eastwood", "commitsCount": 1}, {"username": "eldyvoon", "commitsCount": 1}, {"username": "fahad19", "commitsCount": 1}, {"username": "hansott", "commitsCount": 1}, {"username": "hinok", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kaelig", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "lewie9021", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "lunelson", "commitsCount": 1}, {"username": "madflow", "commitsCount": 1}, {"username": "maspwr", "commitsCount": 1}, {"username": "mattlewis92", "commitsCount": 1}, {"username": "micahlmartin", "commitsCount": 1}, {"username": "nex3", "commitsCount": 1}, {"username": "niksy", "commitsCount": 1}, {"username": "notDash", "commitsCount": 1}, {"username": "philwareham", "commitsCount": 1}, {"username": "pmowrer", "commitsCount": 1}, {"username": "rhys-vdw", "commitsCount": 1}, {"username": "silversonicaxel", "commitsCount": 1}, {"username": "sturobson", "commitsCount": 1}, {"username": "timmfin", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "w3apps", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 29}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 41}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 75}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 16310, "testsSize": 3209752, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sass-loader.svg", "shields": "https://img.shields.io/npm/v/sass-loader.svg", "content": "https://img.shields.io/npm/v/sass-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/sass-loader.svg", "service": "https://david-dm.org/webpack-contrib/sass-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/sass-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/sass-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3981, "downloadsCount": 28257188.666666668, "downloadsAcceleration": 87364.12657914765, "dependentsCount": 5987}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9281575342465753, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8983586469268581, "detail": {"quality": 0.9363806111524543, "popularity": 0.7642252526693296, "maintenance": 0.9999017861338758}}}}, {"prop-types": {"analyzedAt": "2020-06-13T18:25:52.165Z", "collected": {"metadata": {"name": "prop-types", "scope": "unscoped", "version": "15.7.2", "description": "Runtime type checking for React props and similar objects.", "keywords": ["react"], "date": "2019-02-13T20:11:48.275Z", "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/prop-types.git"}, "links": {"npm": "https://www.npmjs.com/package/prop-types", "homepage": "https://facebook.github.io/react/", "repository": "https://github.com/facebook/prop-types", "bugs": "https://github.com/facebook/prop-types/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.4.0", "object-assign": "^4.1.1", "react-is": "^16.8.1"}, "devDependencies": {"babel-jest": "^19.0.0", "babel-preset-react": "^6.24.1", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "eslint": "^5.13.0", "jest": "^19.0.2", "react": "^15.5.1", "uglifyify": "^3.0.4", "uglifyjs": "^2.4.10"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# prop-types [![Build Status](https://travis-ci.com/facebook/prop-types.svg?branch=master)](https://travis-ci.org/facebook/prop-types)\n\nRuntime type checking for React props and similar objects.\n\nYou can use prop-types to document the intended types of properties passed to\ncomponents. React (and potentially other libraries\u2014see the checkPropTypes()\nreference below) will check props passed to your components against those\ndefinitions, and warn in development if they don\u2019t match.\n\n## Installation\n\n```shell\nnpm install --save prop-types\n```\n\n## Importing\n\n```js\nimport PropTypes from 'prop-types'; // ES6\nvar PropTypes = require('prop-types'); // ES5 with npm\n```\n\n### CDN\n\nIf you prefer to exclude `prop-types` from your application and use it\nglobally via `window.PropTypes`, the `prop-types` package provides\nsingle-file distributions, which are hosted on the following CDNs:\n\n* [**unpkg**](https://unpkg.com/prop-types/)\n```html\n<!-- development version -->\n<script src=\"https://unpkg.com/prop-types@15.6/prop-types.js\"></script>\n\n<!-- production version -->\n<script src=\"https://unpkg.com/prop-types@15.6/prop-types.min.js\"></script>\n```\n\n* [**cdnjs**](https://cdnjs.com/libraries/prop-types)\n```html\n<!-- development version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.js\"></script>\n\n<!-- production version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.min.js\"></script>\n```\n\nTo load a specific version of `prop-types` replace `15.6.0` with the version number.\n\n## Usage\n\nPropTypes was originally exposed as part of the React core module, and is\ncommonly used with React components.\nHere is an example of using PropTypes with a React component, which also\ndocuments the different validators provided:\n\n```js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MyComponent extends React.Component {\n  render() {\n    // ... do things with the props\n  }\n}\n\nMyComponent.propTypes = {\n  // You can declare that a prop is a specific JS primitive. By default, these\n  // are all optional.\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n\n  // Anything that can be rendered: numbers, strings, elements or an array\n  // (or fragment) containing these types.\n  optionalNode: PropTypes.node,\n\n  // A React element (ie. <MyComponent />).\n  optionalElement: PropTypes.element,\n\n  // A React element type (ie. MyComponent).\n  optionalElementType: PropTypes.elementType,\n\n  // You can also declare that a prop is an instance of a class. This uses\n  // JS's instanceof operator.\n  optionalMessage: PropTypes.instanceOf(Message),\n\n  // You can ensure that your prop is limited to specific values by treating\n  // it as an enum.\n  optionalEnum: PropTypes.oneOf(['News', 'Photos']),\n\n  // An object that could be one of many types\n  optionalUnion: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Message)\n  ]),\n\n  // An array of a certain type\n  optionalArrayOf: PropTypes.arrayOf(PropTypes.number),\n\n  // An object with property values of a certain type\n  optionalObjectOf: PropTypes.objectOf(PropTypes.number),\n\n  // You can chain any of the above with `isRequired` to make sure a warning\n  // is shown if the prop isn't provided.\n\n  // An object taking on a particular shape\n  optionalObjectWithShape: PropTypes.shape({\n    optionalProperty: PropTypes.string,\n    requiredProperty: PropTypes.number.isRequired\n  }),\n\n  // An object with warnings on extra properties\n  optionalObjectWithStrictShape: PropTypes.exact({\n    optionalProperty: PropTypes.string,\n    requiredProperty: PropTypes.number.isRequired\n  }),\n\n  requiredFunc: PropTypes.func.isRequired,\n\n  // A value of any data type\n  requiredAny: PropTypes.any.isRequired,\n\n  // You can also specify a custom validator. It should return an Error\n  // object if the validation fails. Don't `console.warn` or throw, as this\n  // won't work inside `oneOfType`.\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error(\n        'Invalid prop `' + propName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  },\n\n  // You can also supply a custom validator to `arrayOf` and `objectOf`.\n  // It should return an Error object if the validation fails. The validator\n  // will be called for each key in the array or object. The first two\n  // arguments of the validator are the array or object itself, and the\n  // current item's key.\n  customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) {\n    if (!/matchme/.test(propValue[key])) {\n      return new Error(\n        'Invalid prop `' + propFullName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  })\n};\n```\n\nRefer to the [React documentation](https://facebook.github.io/react/docs/typechecking-with-proptypes.html) for more information.\n\n## Migrating from React.PropTypes\n\nCheck out [Migrating from React.PropTypes](https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html#migrating-from-react.proptypes) for details on how to migrate to `prop-types` from `React.PropTypes`.\n\nNote that this blog posts **mentions a codemod script that performs the conversion automatically**.\n\nThere are also important notes below.\n\n## How to Depend on This Package?\n\nFor apps, we recommend putting it in `dependencies` with a caret range.\nFor example:\n\n```js\n  \"dependencies\": {\n    \"prop-types\": \"^15.5.7\"\n  }\n```\n\nFor libraries, we *also* recommend leaving it in `dependencies`:\n\n```js\n  \"dependencies\": {\n    \"prop-types\": \"^15.5.7\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^15.5.0\"\n  }\n```\n\n**Note:** there are known issues in versions before 15.5.7 so we recommend using it as the minimal version.\n\nMake sure that the version range uses a caret (`^`) and thus is broad enough for npm to efficiently deduplicate packages.\n\nFor UMD bundles of your components, make sure you **don\u2019t** include `PropTypes` in the build. Usually this is done by marking it as an external (the specifics depend on your bundler), just like you do with React.\n\n## Compatibility\n\n### React 0.14\n\nThis package is compatible with **React 0.14.9**. Compared to 0.14.8 (which was released in March of 2016), there are no other changes in 0.14.9, so it should be a painless upgrade.\n\n```shell\n# ATTENTION: Only run this if you still use React 0.14!\nnpm install --save react@^0.14.9 react-dom@^0.14.9\n```\n\n### React 15+\n\nThis package is compatible with **React 15.3.0** and higher.\n\n```\nnpm install --save react@^15.3.0 react-dom@^15.3.0\n```\n\n### What happens on other React versions?\n\nIt outputs warnings with the message below even though the developer doesn\u2019t do anything wrong. Unfortunately there is no solution for this other than updating React to either 15.3.0 or higher, or 0.14.9 if you\u2019re using React 0.14.\n\n## Difference from `React.PropTypes`: Don\u2019t Call Validator Functions\n\nFirst of all, **which version of React are you using**? You might be seeing this message because a component library has updated to use `prop-types` package, but your version of React is incompatible with it. See the [above section](#compatibility) for more details.\n\nAre you using either React 0.14.9 or a version higher than React 15.3.0? Read on.\n\nWhen you migrate components to use the standalone `prop-types`, **all validator functions will start throwing an error if you call them directly**. This makes sure that nobody relies on them in production code, and it is safe to strip their implementations to optimize the bundle size.\n\nCode like this is still fine:\n\n```js\nMyComponent.propTypes = {\n  myProp: PropTypes.bool\n};\n```\n\nHowever, code like this will not work with the `prop-types` package:\n\n```js\n// Will not work with `prop-types` package!\nvar errorOrNull = PropTypes.bool(42, 'myProp', 'MyComponent', 'prop');\n```\n\nIt will throw an error:\n\n```\nCalling PropTypes validators directly is not supported by the `prop-types` package.\nUse PropTypes.checkPropTypes() to call them.\n```\n\n(If you see **a warning** rather than an error with this message, please check the [above section about compatibility](#compatibility).)\n\nThis is new behavior, and you will only encounter it when you migrate from `React.PropTypes` to the `prop-types` package. For the vast majority of components, this doesn\u2019t matter, and if you didn\u2019t see [this warning](https://facebook.github.io/react/warnings/dont-call-proptypes.html) in your components, your code is safe to migrate. This is not a breaking change in React because you are only opting into this change for a component by explicitly changing your imports to use `prop-types`. If you temporarily need the old behavior, you can keep using `React.PropTypes` until React 16.\n\n**If you absolutely need to trigger the validation manually**, call `PropTypes.checkPropTypes()`. Unlike the validators themselves, this function is safe to call in production, as it will be replaced by an empty function:\n\n```js\n// Works with standalone PropTypes\nPropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent');\n```\nSee below for more info.\n\n**You might also see this error** if you\u2019re calling a `PropTypes` validator from your own custom `PropTypes` validator. In this case, the fix is to make sure that you are passing *all* of the arguments to the inner function. There is a more in-depth explanation of how to fix it [on this page](https://facebook.github.io/react/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes). Alternatively, you can temporarily keep using `React.PropTypes` until React 16, as it would still only warn in this case.\n\nIf you use a bundler like Browserify or Webpack, don\u2019t forget to [follow these instructions](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build) to correctly bundle your application in development or production mode. Otherwise you\u2019ll ship unnecessary code to your users.\n\n## PropTypes.checkPropTypes\n\nReact will automatically check the propTypes you set on the component, but if\nyou are using PropTypes without React then you may want to manually call\n`PropTypes.checkPropTypes`, like so:\n\n```js\nconst myPropTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number,\n  // ... define your prop validations\n};\n\nconst props = {\n  name: 'hello', // is valid\n  age: 'world', // not valid\n};\n\n// Let's say your component is called 'MyComponent'\n\n// Works with standalone PropTypes\nPropTypes.checkPropTypes(myPropTypes, props, 'age', 'MyComponent');\n// This will warn as follows:\n// Warning: Failed prop type: Invalid prop `age` of type `string` supplied to\n// `MyComponent`, expected `number`.\n```\n\n## PropTypes.resetWarningCache()\n\n`PropTypes.checkPropTypes(...)` only `console.error.log(...)`s a given message once.  To reset the cache while testing call `PropTypes.resetWarningCache()`\n\n### License\n\nprop-types is [MIT licensed](./LICENSE)."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1294807}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8248243}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 35565465}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 106906817}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 192883691}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 370464302}], "dependentsCount": 26537, "starsCount": 152}, "github": {"starsCount": 3530, "forksCount": 319, "subscribersCount": 51, "issues": {"count": 311, "openCount": 51, "distribution": {"3600": 33, "10800": 13, "32400": 22, "97200": 31, "291600": 13, "874800": 13, "2624400": 13, "7873200": 21, "23619600": 49, "70858800": 73, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 33}, {"username": "ljharb", "commitsCount": 18}, {"username": "acdlite", "commitsCount": 6}, {"username": "aweary", "commitsCount": 5}, {"username": "flarnie", "commitsCount": 5}, {"username": "getkey", "commitsCount": 4}, {"username": "jaller94", "commitsCount": 4}, {"username": "sophiebits", "commitsCount": 4}, {"username": "noscripter", "commitsCount": 3}, {"username": "bvaughn", "commitsCount": 2}, {"username": "mridgway", "commitsCount": 2}, {"username": "JasonEtco", "commitsCount": 1}, {"username": "adambowles", "commitsCount": 1}, {"username": "autra", "commitsCount": 1}, {"username": "benwiley4000", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "conartist6", "commitsCount": 1}, {"username": "dferber90", "commitsCount": 1}, {"username": "eXon", "commitsCount": 1}, {"username": "gingur", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jimf", "commitsCount": 1}, {"username": "johann-sonntagbauer", "commitsCount": 1}, {"username": "joshalling", "commitsCount": 1}, {"username": "ksmolniy", "commitsCount": 1}, {"username": "lauriejones", "commitsCount": 1}, {"username": "marcelometal", "commitsCount": 1}, {"username": "mcampagonzalez", "commitsCount": 1}, {"username": "oyeanuj", "commitsCount": 1}, {"username": "qstearns", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "rgraffbrd", "commitsCount": 1}, {"username": "stof", "commitsCount": 1}, {"username": "virgofx", "commitsCount": 1}, {"username": "weiluntong", "commitsCount": 1}, {"username": "wojtekmaj", "commitsCount": 1}, {"username": "zamarrowski", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5}]}, "source": {"files": {"readmeSize": 11447, "testsSize": 134658, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 4089, "downloadsCount": 35635605.666666664, "downloadsAcceleration": 56787.54507229832, "dependentsCount": 26537}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0.057534246575342465, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6608088731100847, "detail": {"quality": 0.942113285074614, "popularity": 0.8127651996158002, "maintenance": 0.2677344792062016}}}}, {"karma": {"analyzedAt": "2020-06-11T23:22:38.842Z", "collected": {"metadata": {"name": "karma", "scope": "unscoped", "version": "5.1.0", "description": "Spectacular Test Runner for JavaScript.", "keywords": ["karma", "spectacular", "runner", "karma", "js", "javascript", "testing", "test", "remote", "execution"], "date": "2020-06-11T23:14:24.440Z", "author": {"name": "Vojta J\u00edna", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "dignifiedquire", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "greenkeeperio-bot", "email": "support@greenkeeper.io"}, {"name": "Karma Bot", "email": "karmarunnerbot@gmail.com"}, {"name": "Maksim Ryzhikov", "email": "rv.maksim@gmail.com"}, {"name": "ukasz Usarz", "email": "lukasz.usarz@gmail.com"}, {"name": "Yaroslav Admin", "email": "devoto13@gmail.com"}, {"name": "Christian Budde Christensen", "email": "budde377@gmail.com"}, {"name": "taichi", "email": "ryushi@gmail.com"}, {"name": "Wesley Cho", "email": "wesley.cho@gmail.com"}, {"name": "Liam Newman", "email": "bitwiseman@gmail.com"}, {"name": "lukasz", "email": "lukasz.usarz@gmail.com"}, {"name": "Todd Wolfson", "email": "todd@twolfson.com"}, {"name": "Micha\u0142 Go\u0142\u0119biowski-Owczarek", "email": "m.goleb@gmail.com"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Ciro Nunes", "email": "ciroanunes@gmail.com"}, {"name": "Shyam Seshadri", "email": "shyamseshadri@gmail.com"}, {"name": "Tim Cuthbertson", "email": "tim@gfxmonk.net"}, {"name": "Robo", "email": "hop2deep@gmail.com"}, {"name": "Christian Budde Christensen", "email": "christi@n-bud.de"}, {"name": "Pawel Kozlowski", "email": "pkozlowski.opensource@gmail.com"}, {"name": "Mourad", "email": "mourad@elmaouchi.com"}, {"name": "Daniel Compton", "email": "desk@danielcompton.net"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "vivganes", "email": "vivek@vivekganesan.com"}, {"name": "Georgii Dolzhykov", "email": "thorn.mailbox@gmail.com"}, {"name": "Anton", "email": "anton.redfox@gmail.com"}, {"name": "Brian Di Palma", "email": "offler@gmail.com"}, {"name": "Nick Malaguti", "email": "nmalaguti@palantir.com"}, {"name": "Kim Joar Bekkelund", "email": "kjbekkelund@gmail.com"}, {"name": "joshjb84", "email": "joshjb84@hotmail.com"}, {"name": "David Souther", "email": "davidsouther@gmail.com"}, {"name": "Daniel Aleksandersen", "email": "code@daniel.priv.no"}, {"name": "Jake Champion", "email": "jakechampion.jake2@googlemail.com"}, {"name": "Marcello Nuccio", "email": "marcello.nuccio@gmail.com"}, {"name": "Pieter Mees", "email": "pietermees@users.noreply.github.com"}, {"name": "Brian Ford", "email": "btford@umich.edu"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "Chris Casola", "email": "chriscasola@gmail.com"}, {"name": "Jeff Jewiss", "email": "jeffjewiss@gmail.com"}, {"name": "J\u00e9r\u00e9my Jud\u00e9aux", "email": "jeremy.judeaux@volune.net"}, {"name": "Andrew Martin", "email": "sublimino@gmail.com"}, {"name": "pavelgj", "email": "pavelgj@gmail.com"}, {"name": "sylvain-hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "Ilya Volodin", "email": "ivolodin@vistaprint.com"}, {"name": "ywong", "email": "wongyok@gmail.com"}, {"name": "Iristyle", "email": "Iristyle@github"}, {"name": "Chris Hunt", "email": "chrahunt@gmail.com"}, {"name": "Robert Stein", "email": "SteinRobert@users.noreply.github.com"}, {"name": "ngiebel", "email": "ngiebel@starkinvestments.com"}, {"name": "Robin Liang", "email": "robin.gnail@gmail.com"}, {"name": "rdodev", "email": "rubenoz@gmail.com"}, {"name": "Matt Lewis", "email": "matthew.lewis@socialsignin.co.uk"}, {"name": "Ruben Bridgewater", "email": "ruben.bridgewater@fintura.de"}, {"name": "Ezra Brooks", "email": "ezra.m.brooks@gmail.com"}, {"name": "David Herges", "email": "dherges@users.noreply.github.com"}, {"name": "R\u00e9da Housni Alaoui", "email": "reda.housnialaoui@gmail.com"}, {"name": "Filipe Guerra", "email": "alias.mac@gmail.com"}, {"name": "Aseem Bansal", "email": "aseembansal@live.com"}, {"name": "Bryan Smith", "email": "bryanrsmith@gmail.com"}, {"name": "Sammy Jelin", "email": "sjelin@gmail.com"}, {"name": "David P\u00e4rsson", "email": "david@parsson.se"}, {"name": "Sergei Startsev", "email": "ai@programist.ru"}, {"name": "Jonas Pommerening", "email": "jonas.pommerening@aixigo.de"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@gmail.com"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@jetbrains.com"}, {"name": "Shane Russell", "email": "shane1337@gmail.com"}, {"name": "Jonathan Freeman", "email": "freethejazz@gmail.com"}, {"name": "Josh", "email": "joshhunt180@gmail.com"}, {"name": "Bulat Shakirzyanov", "email": "mallluhuct@gmail.com"}, {"name": "Greenkeeper", "email": "support@greenkeeper.io"}, {"name": "Stefan Dragnev", "email": "dragnev@telerik.com"}, {"name": "Steve Mao", "email": "maochenyan@gmail.com"}, {"name": "Steve Mao", "email": "steve.mao@healthinteract.com.au"}, {"name": "Steve Van Opstal", "email": "stevevanopstal@gmail.com"}, {"name": "Sylvain Hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "KJ Tsanaktsidis", "email": "kjtsanaktsidis@gmail.com"}, {"name": "Terry", "email": "zhangwenlp@vip.qq.com"}, {"name": "Andrew Morris", "email": "voltrevo@gmail.com"}, {"name": "Cyrus Chan", "email": "chan1cyrus2@gmail.com"}, {"name": "Thomas Parisot", "email": "thomas@oncle-tom.net"}, {"name": "Hugues Malphettes", "email": "hmalphettes@gmail.com"}, {"name": "Tom Erik St\u00f8wer", "email": "tomerik@getkahoot.com"}, {"name": "Igor Minar", "email": "igor@angularjs.org"}, {"name": "Keen Yee Liau", "email": "kyliau@google.com"}, {"name": "Igor Minar", "email": "iiminar@gmail.com"}, {"name": "Kelly Jensen", "email": "kellyrayj@gmail.com"}, {"name": "Ilya Goncharov", "email": "ilgonmic@gmail.com"}, {"name": "Kevin Huang", "email": "kevinziwenhuang@gmail.com"}, {"name": "Parashuram", "email": "code@r.nparashuram.com"}, {"name": "Vivek Ganesan", "email": "caliberoviv@gmail.com"}, {"name": "Vladimir Starkov", "email": "iamstarkov@users.noreply.github.com"}, {"name": "Pat Tullmann", "email": "pt@bebop.co"}, {"name": "Kevin WENNER", "email": "kevin.wenner@massmotionmedia.com"}, {"name": "PatrickJS", "email": "github@gdi2290.com"}, {"name": "Levi Thomason", "email": "me@levithomason.com"}, {"name": "ChangZhuo Chen", "email": "czchen@gmail.com", "url": "\u9673\u660c\u502c"}, {"name": "comdiv", "email": "fagim.sadykov@gmail.com"}, {"name": "Luke Page", "email": "luke.a.page@gmail.com"}, {"name": "James Ford", "email": "jford@psyked.co.uk"}, {"name": "James Talmage", "email": "james@talmage.io"}, {"name": "Richard Harrington", "email": "rwharrington87@gmail.com"}, {"name": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"name": "DarthCharles", "email": "carlos.darth@gmail.com"}, {"name": "Roarke Gaskill", "email": "roarke.gaskill@gmail.com"}, {"name": "Ethan J. Brown", "email": "ethan_j_brown@hotmail.com"}, {"name": "Karol Fabja\u0144czuk", "email": "karol.fabjanczuk@lemondemon.pl"}, {"name": "Karolis Narkevicius", "email": "karolis.n@gmail.com"}, {"name": "Keats", "email": "balthek@gmail.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Kent C. Dodds", "email": "kent@doddsfamily.us"}, {"name": "Kevin Ortman", "email": "kevin_ortman@msn.com"}, {"name": "Kostiantyn Kahanskyi", "email": "kostiantyn.kahanskyi@googlemail.com"}, {"name": "Lenny Urbanowski", "email": "lenny@itslennysfault.com"}, {"name": "LoveIsGrief", "email": "just.another.michaelv@gmail.com"}, {"name": "Lucas Theisen", "email": "lucastheisen@pastdev.com"}, {"name": "Lukasz Zatorski", "email": "lzatorski@gmail.com"}, {"name": "M1xA", "email": "AnyCPU@users.noreply.github.com"}, {"name": "Magnus Markling", "email": "github@markling.com"}, {"name": "Manfred Stock", "email": "m@nfred.ch"}, {"name": "Marko Anastasov", "email": "marko@renderedtext.com"}, {"name": "Martin Geisler", "email": "martin@geisler.net"}, {"name": "Martin Jul", "email": "martin@mjul.com"}, {"name": "Martin Lemanski", "email": "martin.lemanski@gmx.at"}, {"name": "Martin Probst", "email": "martin@probst.io"}, {"name": "Matias Niemela\u0308", "email": "matias@yearofmoo.com"}, {"name": "Matthew Amato", "email": "matt.amato@gmail.com"}, {"name": "Matthew Cale", "email": "mattc41190@gmail.com"}, {"name": "Matthew Machuga", "email": "machuga@gmail.com"}, {"name": "Matthias O\u00dfwald", "email": "matz3@users.noreply.github.com"}, {"name": "Matti Paksula", "email": "matti.paksula@iki.fi"}, {"name": "Mattijs Kneppers", "email": "mattijs@arttech.nl"}, {"name": "Merott Movahedi", "email": "merott@merott.com"}, {"name": "Merrick Christensen", "email": "merrick.christensen@gmail.com"}, {"name": "Michael Krotscheck", "email": "krotscheck@gmail.com"}, {"name": "Micha\u0142 Siwek", "email": "mike21@aol.pl"}, {"name": "Milan Aleksic", "email": "milanaleksic@gmail.com"}, {"name": "Milana Stojadinov", "email": "mstojadinov@renderedtext.com"}, {"name": "Mohamed Eltuhamy", "email": "tuhamy@gmail.com"}, {"name": "Nathan Cornelius", "email": "ndcornelius@users.noreply.github.com"}, {"name": "Nathan Hunzaker", "email": "nate.hunzaker@gmail.com"}, {"name": "NeverwinterMoon", "email": "manni.calavera@gmail.com"}, {"name": "Nick Carter", "email": "thynctank@thynctank.com"}, {"name": "Nick McCurdy", "email": "nick@nickmccurdy.com"}, {"name": "Nick Payne", "email": "nick@kurai.co.uk"}, {"name": "Nick Williams", "email": "mr.nicksta@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Nicolas Artman", "email": "nicolasartman@users.noreply.github.com"}, {"name": "Nicolas Ferrero", "email": "ferrero.nicolas@gmail.com"}, {"name": "Nir Moav", "email": "nirmoav@users.noreply.github.com"}, {"name": "Nish", "email": "nishantpatel611@gmail.com"}, {"name": "Nuno Job", "email": "nunojobpinto@gmail.com"}, {"name": "Oleg Gomozov", "email": "blackswanny@gmail.com"}, {"name": "Olivier Yiptong", "email": "olivier@olivieryiptong.com"}, {"name": "OniOni", "email": "mathieu.c.sabourin@gmail.com"}, {"name": "OpenShift guest", "email": "mrpatan@gmail.com"}, {"name": "Outsider", "email": "outsideris@gmail.com"}, {"name": "Parashuram", "email": "code@nparashuram.com"}, {"name": "Pascal Hartig", "email": "phartig@rdrei.net"}, {"name": "Patrick Lussan", "email": "patrick.lussan@componize.com"}, {"name": "Patrick Neschkudla", "email": "neschkudla@gmail.com"}, {"name": "Patrik Henningsson", "email": "patrik.henningsson@gmail.com"}, {"name": "Paul Gschwendtner", "email": "paulgschwendtner@gmail.com"}, {"name": "Pawe\u0142 Kapalla", "email": "pkapalla@xesenix.pl"}, {"name": "Pedro Araujo", "email": "pedrotcaraujo@gmail.com"}, {"name": "Pete Bacon Darwin", "email": "pete@bacondarwin.com"}, {"name": "Pete Swan", "email": "pete@indabamusic.com"}, {"name": "Peter Burns", "email": "rictic@gmail.com"}, {"name": "Peter Halliday", "email": "pghalliday@gmail.com"}, {"name": "Peter McAlpine", "email": "peter.mcalpine@arcticwolf.com"}, {"name": "Peter Newman", "email": "peternewman@users.noreply.github.com"}, {"name": "Peter Yates", "email": "pd.yates@gmail.com"}, {"name": "Philip Harrison", "email": "philip@mailharrison.com"}, {"name": "Pierre Vanduynslager", "email": "pierre.denis.vanduynslager@gmail.com"}, {"name": "Piper Chester", "email": "piperchester@users.noreply.github.com"}, {"name": "Rafal Lindemann", "email": "rl@stamina.pl"}, {"name": "Remy Sharp", "email": "remy@remysharp.com"}, {"name": "Rich Kuzsma", "email": "rkuzsma@gmail.com"}, {"name": "Richard Herrera", "email": "richard.herrera@nfl.com"}, {"name": "Roarke Gaskill", "email": "rgaskill@nexvex.com"}, {"name": "Rob Cherry", "email": "rcherry@reverbnation.com"}, {"name": "Rob Dodson", "email": "lets.email.rob@gmail.com"}, {"name": "Rog\u00e9rio Vicente", "email": "rogeriopvl@gmail.com"}, {"name": "Ruben Bridgewater", "email": "ruben@bridgewater.de"}, {"name": "R\u00e9mi", "email": "r3mi@users.sourceforge.net"}, {"name": "Sahat Yalkabov", "email": "sakhat@gmail.com"}, {"name": "Sam Rawlins", "email": "sam.rawlins@gmail.com"}, {"name": "Sam Rawlins", "email": "srawlins@google.com"}, {"name": "Samuel Marks", "email": "samuelmarks@gmail.com"}, {"name": "Saugat Acharya", "email": "mesaugat@gmail.com"}, {"name": "Schmulik Raskin", "email": "schmuli@gmail.com"}, {"name": "Sergey Kruk", "email": "sergey.kruk@gmail.com"}, {"name": "Seth Rhodes", "email": "seth@thinkpixbit.com"}, {"name": "Shahar Mor", "email": "shaharmor1@gmail.com"}, {"name": "Shane Osbourne", "email": "shane.osbourne8@gmail.com"}, {"name": "Sho Ikeda", "email": "suicaicoca@gmail.com"}, {"name": "Sibiraj", "email": "20282546+Sibiraj-S@users.noreply.github.com"}, {"name": "Simen Bekkhus", "email": "sbekkhus91@gmail.com"}, {"name": "Simon Warta", "email": "2603011+webmaster128@users.noreply.github.com"}, {"name": "Simone Gentili", "email": "sensorario@gmail.com"}, {"name": "Slava Kotiya", "email": "sk@nexttuesday.de"}, {"name": "Sophie Cooper", "email": "scooper91@users.noreply.github.com"}, {"name": "Stephen Hazleton", "email": "shazleto@gmail.com"}, {"name": "Stuart Memo", "email": "stuartmemo@gmail.com"}, {"name": "Taylor Buley", "email": "buley@outlook.com"}, {"name": "Taylor Hakes", "email": "taylor.hakes@gmail.com"}, {"name": "Terin Stock", "email": "terinjokes@gmail.com"}, {"name": "Thai Pangsakulyanont @ Taskworld", "email": "thai.p@taskworld.com"}, {"name": "Thijs Triemstra", "email": "info@collab.nl"}, {"name": "Thomas Parisot", "email": "thomas.parisot@bbc.co.uk"}, {"name": "Tim Olshansky", "email": "tim.olshansky@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tom MacWright", "email": "tom@macwright.org"}, {"name": "TrevDev", "email": "trevor@kareo.com"}, {"name": "Tyler Akins", "email": "fidian@rumkin.com"}, {"name": "Vasily Ostanin", "email": "bazilio91@gmail.com"}, {"name": "Veronica Lynn", "email": "veronica.lynn@redjack.com"}, {"name": "Vincent Taverna", "email": "vinnymac@gmail.com"}, {"name": "Vitor Buzinaro", "email": "funny.hc@gmail.com"}, {"name": "Volune", "email": "jeremy.judeaux@volune.net"}, {"name": "Vova Bilonenko", "email": "bilonenko.v@gmail.com"}, {"name": "Wizek", "email": "123.wizek@gmail.com"}, {"name": "Yaniv Efraim", "email": "yaniv.efraim@gmail.com"}, {"name": "Yi Wang", "email": "e@yi-wang.me"}, {"name": "Yvonne Yip", "email": "ykyyip@google.com"}, {"name": "Zhang zhengzheng", "email": "code@tychio.net"}, {"name": "adamnation", "email": "arowe@illumina.com"}, {"name": "ahaurw01", "email": "ahaurwitz@gmail.com"}, {"name": "ashaffer", "email": "darawk@gmail.com"}, {"name": "cexbrayat", "email": "cedric@ninja-squad.com"}, {"name": "coderaiser", "email": "mnemonic.enemy@gmail.com"}, {"name": "compact", "email": "compact@users.noreply.github.com"}, {"name": "coridrew", "email": "coridrew@gmail.com"}, {"name": "cy6erskunk", "email": "cyberskunk@gmail.com"}, {"name": "david-garcia-nete", "email": "david.garcia.nete@gmail.com"}, {"name": "deepak1556", "email": "hop2deep@gmail.com"}, {"name": "dorey", "email": "dorey415@gmail.com"}, {"name": "grifball", "email": "scottgriffy@gmail.com"}, {"name": "hrgdavor", "email": "hrgdavor@gmail.com"}, {"name": "ianjobling", "email": "ijobling@codio.com"}, {"name": "inf3rno", "email": "laszlo.janszky@gmail.com"}, {"name": "is-already-taken", "email": "1771602+is-already-taken@users.noreply.github.com"}, {"name": "jjoos", "email": "jan@deelstra.org"}, {"name": "jvalkeejarvi", "email": "jvalkeejarvi@gmail.com"}, {"name": "kyo_ago", "email": "kyo.ago@gmail.com"}, {"name": "lanshunfang", "email": "lanshunfang@gmail.com"}, {"name": "lusarz", "email": "lukasz.usarz@gmail.com"}, {"name": "maik", "email": "mauk@gulli.com"}, {"name": "mdemo", "email": "mengdesen09@qq.com"}, {"name": "nathanfaucett", "email": "nathanfaucett@gmail.com"}, {"name": "pardoman", "email": "pardo.medina@gmail.com"}, {"name": "thetrevdev", "email": "thetrevdev@gmail.com"}, {"name": "thorn0", "email": "thorn.mailbox@gmail.com"}, {"name": "toran billups", "email": "toranb@gmail.com"}, {"name": "chalkerx@gmail.com>"}, {"name": "u812", "email": "0u812@github.com"}, {"name": "weiran.zsd@outlook.com>"}, {"name": "Aaron Powell", "email": "me@aaron-powell.com"}, {"name": "Adrien Crivelli", "email": "adrien.crivelli@gmail.com"}, {"name": "Alan Agius", "email": "alan.agius4@gmail.com"}, {"name": "Alejandro Mantecon Guillen", "email": "alemangui@gmail.com"}, {"name": "Ales Rosina", "email": "alesrosina@users.noreply.github.com"}, {"name": "Alexander Pepper", "email": "alexander.pepper@infopark.de"}, {"name": "Alexander Shtuchkin", "email": "ashtuchkin@gmail.com"}, {"name": "Alexei", "email": "solo@solo.md"}, {"name": "Anders Ekdahl", "email": "anders.ekdahl@gmail.com"}, {"name": "Anders Janmyr", "email": "anders.janmyr@sonymobile.com"}, {"name": "Andreas Krummsdorf", "email": "a.krummsdorf@litixsoft.de"}, {"name": "Andreas P\u00e5lsson", "email": "a.palsson@gmail.com"}, {"name": "Andrew Fischer", "email": "afischer@shutterfly.com"}, {"name": "Andrew Marcinkevi\u010dius", "email": "andrew.web@ifdattic.com"}, {"name": "Andrey Chalkin", "email": "L2jLiga@gmail.com"}, {"name": "Andy Joslin", "email": "andytjoslin@gmail.com"}, {"name": "Anton Usmansky", "email": "cody0@yandex-team.ru"}, {"name": "Atul Bhosale", "email": "atul1bhosale@gmail.com"}, {"name": "AugustinLF", "email": "augustin.public@gmail.com"}, {"name": "AvnerCohen", "email": "israbirding@gmail.com"}, {"name": "Awad Mackie", "email": "firesock.serwalek@gmail.com"}, {"name": "Basemm", "email": "BAsM.Egy@gmail.com"}, {"name": "Benoit Charbonnier", "email": "benoit.charbonnier@gmail.com"}, {"name": "Bhavesh Kakadiya", "email": "bhavesh@superhuman.com"}, {"name": "Brady Wied", "email": "brady@bswtechconsulting.com"}, {"name": "Bram Borggreve", "email": "borggreve@gmail.com"}, {"name": "Breno Calazans", "email": "breno@vtex.com.br"}, {"name": "Brian Donovan", "email": "donovan@squareup.com"}, {"name": "Brian Donovan", "email": "me@brian-donovan.com"}, {"name": "Brian M Hunt", "email": "brianmhunt@gmail.com"}, {"name": "Cagdas Bayram", "email": "cbayram@cloudera.com"}, {"name": "Carl Goldberg", "email": "carlgoldberg1236@gmail.com"}, {"name": "Chad Smith", "email": "chad@configit.com"}, {"name": "Chang Wang", "email": "cheapsteak@gmail.com"}, {"name": "Chelsea Urquhart", "email": "curquhart@users.noreply.github.com"}, {"name": "Chris", "email": "camargo.cac@gmail.com"}, {"name": "Chris Chua", "email": "chris.sirhc@gmail.com"}, {"name": "Chris Dawson", "email": "xrdawson@gmail.com"}, {"name": "Christian Weiss", "email": "cweiss@stripe.com"}, {"name": "Christopher Hiller", "email": "chiller@badwing.com"}, {"name": "Ciro S. Costa", "email": "ciro.costa@usp.br"}, {"name": "Daan Stolp", "email": "mail@daanstolp.nl"}, {"name": "Damien Choizit", "email": "damien.choizit@gmail.com"}, {"name": "Dan Siwiec", "email": "daniel.siwiec@gmail.com"}, {"name": "Dan Thareja", "email": "danthareja@gmail.com"}, {"name": "Danny Croft", "email": "danny.croft@yahoo.co.uk"}, {"name": "Danny Tuppeny", "email": "danny@tuppeny.com"}, {"name": "David Jensen", "email": "david@frode.(none)", "url": "none"}, {"name": "David M. Karr", "email": "dk068x@att.com"}, {"name": "Derek Gould", "email": "dgould@birst.com"}, {"name": "Derek Schaller", "email": "dschaller@lyft.com"}, {"name": "Dieter Oberkofler", "email": "doberkofler@users.noreply.github.com"}, {"name": "Dillon", "email": "mdillon@reachmail.com"}, {"name": "Dmitrii Abramov", "email": "dabramov@yahoo-inc.com"}, {"name": "Dmitriy Ryajov", "email": "dryajov@gmail.com"}, {"name": "Douglas Blumeyer", "email": "DougBlumeyer@users.noreply.github.com"}, {"name": "Douglas Blumeyer", "email": "pair+dblumeyer@vmware.com"}, {"name": "Dunja Radulov", "email": "dradulov@renderedtext.com"}, {"name": "ERt", "email": "ert.wroc@gmail.com"}, {"name": "Ed Rooth", "email": "ed.rooth@rackspace.com"}, {"name": "Eddie Monge", "email": "eddie@eddiemonge.com"}, {"name": "Eden", "email": "mazzolaeden@gmail.com"}, {"name": "Edward Hutchins", "email": "eahutchins@gmail.com"}, {"name": "Eldar Jafarov", "email": "djkojb@gmail.com"}, {"name": "Eric Baer", "email": "me@ericbaer.com"}, {"name": "Esteban Marin", "email": "estebanmarin@gmx.ch"}, {"name": "Fabian Beuke", "email": "mail@beuke.org"}, {"name": "Filipe Silva", "email": "filipematossilva@gmail.com"}, {"name": "Franck Garcia", "email": "garcia.franck@gmail.com"}, {"name": "Fred Sauer", "email": "fredsa@google.com"}, {"name": "Frederic Hemberger", "email": "mail@frederic-hemberger.de"}, {"name": "Fredrik Bonander", "email": "carl.fredrik.bonander@gmail.com"}, {"name": "Gavin Aiken", "email": "gavin@aiken.org.uk"}, {"name": "Geert Van Laethem", "email": "geert.van.laethem@pandora.be"}, {"name": "Glenn Anderson", "email": "ondoher@gmail.com"}, {"name": "Greg Thornton", "email": "xdissent@me.com"}, {"name": "Gregory Cowan", "email": "g.cowan@amnzero.nl"}, {"name": "Hendrik Purmann", "email": "h.purmann@googlemail.com"}, {"name": "Homa Wong", "email": "homawong@gmail.com"}, {"name": "Igor Lima", "email": "lima.igorribeiro@gmail.com"}, {"name": "Islam Sharabash", "email": "islam.sharabash@gmail.com"}, {"name": "Jack Tarantino", "email": "jacopo.tarantino@gmail.com"}, {"name": "Jacob Trimble", "email": "modmaker@google.com"}, {"name": "Jakub Z", "email": "jakzale@gmail.com"}, {"name": "James Shore", "email": "jshore@jamesshore.com"}, {"name": "Jan Molak", "email": "jan.molak@smartcodeltd.co.uk"}, {"name": "Janderson Constantino", "email": "jandersonconstantino@gmail.com"}, {"name": "Jeff Froom", "email": "jeff@jfroom.com"}, {"name": "Jeff Lage", "email": "jefflage@me.com"}, {"name": "Jeff Yates", "email": "jeff.yates@alumni.manchester.ac.uk"}, {"name": "Jeremy Axelrod", "email": "axelrod.jeremy@gmail.com"}, {"name": "Jerry Reptak", "email": "jreptak@gmail.com"}, {"name": "Jesse M. Holmes", "email": "wolfhoundjesse@gmail.com"}, {"name": "Joe Lencioni", "email": "joe.lencioni@brigade.com"}, {"name": "Johannes Gorset", "email": "jgorset@gmail.com"}, {"name": "John Wehr", "email": "johnwehr@gmail.com"}, {"name": "Jon Bretman", "email": "jon.bretman@gmail.com"}, {"name": "Jonathan ES Lin", "email": "ernsheong@gmail.com"}, {"name": "Jonathan Felchlin", "email": "jonathan@xgecko.com"}, {"name": "Jonathan Niles", "email": "jniles@users.noreply.github.com"}, {"name": "Josh Lory", "email": "josh.lory@code.org"}, {"name": "Jo\u00e3o Marcos Duarte", "email": "joumd86@gmail.com"}, {"name": "Julian Connor", "email": "julian.connor@venmo.com"}, {"name": "Jurko Gospodneti\u0107", "email": "jurko.gospodnetic@pke.hr"}, {"name": "Justin Ridgewell", "email": "jridgewell@users.noreply.github.com"}, {"name": "KahWee Teng", "email": "t@kw.sg"}, {"name": "Karl Lindmark", "email": "karl.lindmark@ninetwozero.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma.git"}, "links": {"npm": "https://www.npmjs.com/package/karma", "homepage": "http://karma-runner.github.io/", "repository": "https://github.com/karma-runner/karma", "bugs": "https://github.com/karma-runner/karma/issues"}, "license": "MIT", "dependencies": {"body-parser": "^1.19.0", "braces": "^3.0.2", "chokidar": "^3.0.0", "colors": "^1.4.0", "connect": "^3.7.0", "di": "^0.0.1", "dom-serialize": "^2.2.1", "flatted": "^2.0.2", "glob": "^7.1.6", "graceful-fs": "^4.2.4", "http-proxy": "^1.18.1", "isbinaryfile": "^4.0.6", "lodash": "^4.17.15", "log4js": "^6.2.1", "mime": "^2.4.5", "minimatch": "^3.0.4", "qjobs": "^1.2.0", "range-parser": "^1.2.1", "rimraf": "^3.0.2", "socket.io": "^2.3.0", "source-map": "^0.6.1", "tmp": "0.2.1", "ua-parser-js": "0.7.21", "yargs": "^15.3.1"}, "devDependencies": {"@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "@commitlint/travis-cli": "^8.3.5", "@semantic-release/changelog": "^3.0.6", "@semantic-release/git": "^7.0.18", "browserify": "^16.2.3", "chai": "^4.2.0", "chai-as-promised": "^7.1.1", "chai-subset": "^1.2.2", "cucumber": "^6.0.5", "eslint": "^7.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-import": "^2.20.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "grunt": "^1.1.0", "grunt-auto-release": "^0.0.7", "grunt-browserify": "^5.0.0", "grunt-bump": "^0.8.0", "grunt-check-clean": "^0.1.2", "grunt-cli": "^1.1.0", "grunt-contrib-watch": "^1.1.0", "grunt-conventional-changelog": "^6.0.1", "grunt-conventional-github-releaser": "^1.0.0", "grunt-mocha-test": "^0.13.2", "grunt-npm": "0.0.2", "http2": "^3.3.6", "husky": "^4.0.3", "jasmine-core": "^3.4.0", "karma-browserify": "^7.0.0", "karma-browserstack-launcher": "^1.5.0", "karma-chai": "^0.1.0", "karma-chrome-launcher": "^2.2.0", "karma-firefox-launcher": "*", "karma-jasmine": "^2.0.1", "karma-junit-reporter": "*", "karma-mocha": "^1.0.1", "karma-mocha-reporter": "^2.0.0", "karma-script-launcher": "^1.0.0", "load-grunt-tasks": "^4.0.0", "mkdirp": "^0.5.0", "mocha": "^4.1.0", "mocks": "^0.0.15", "proxyquire": "^2.1.0", "puppeteer": "^1.9.0", "semantic-release": "^15.14.0", "sinon": "^7.3.2", "sinon-chai": "^3.0.0", "supertest": "^4.0.2", "timer-shim": "^0.3.0", "which": "^1.3.1"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 4}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 10}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 10}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 14}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 26}], "hasTestScript": true, "readme": "# Karma\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma) [![npm version](https://img.shields.io/npm/v/karma.svg?style=flat-square)](https://www.npmjs.com/package/karma) [![npm downloads](https://img.shields.io/npm/dm/karma.svg?style=flat-square)](https://npmcharts.com/compare/karma?minimal=true)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma) [![Build Status](https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg?style=flat-square)](https://ci.appveyor.com/project/dignifiedquire/karma) [![Code Climate](https://img.shields.io/codeclimate/github/karma-runner/karma.svg?style=flat-square)](https://codeclimate.com/github/karma-runner/karma) [![PRs Welcome](https://img.shields.io/badge/prs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com) [![Dependency Status](https://img.shields.io/david/karma-runner/karma.svg?style=flat-square)](https://david-dm.org/karma-runner/karma) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma.svg?style=flat-square)](https://david-dm.org/karma-runner/karma#info=devDependencies) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\nA simple tool that allows you to execute JavaScript code in multiple\n_real_ browsers.\n\n> The main purpose of Karma is to make your test-driven development easy,\n>  fast, and fun.\n\n\n## Help and Support\n\n> For questions and support please use the mailing list or Gitter.\n> The issue tracker is for bug reports and feature discussions only.\n\n* Obligatory [documentation]\n* Quick questions:\n[![Gitter Chat](https://img.shields.io/badge/GITTER-join%20chat-green.svg?style=flat-square)](https://gitter.im/karma-runner/karma)\n* Longer questions: [Mailing List]\n* Bug reports [Issue Tracker]\n* Everything less than 140 characters: [@JsKarma] on Twitter\n\n\n\n## When should I use Karma?\n\n* You want to test code in *real* browsers.\n* You want to test code in multiple browsers (desktop, mobile,\n  tablets, etc.).\n* You want to execute your tests locally during development.\n* You want to execute your tests on a continuous integration server.\n* You want to execute your tests on every save.\n* You love your terminal.\n* You don't want your (testing) life to suck.\n* You want to use [Istanbul] to automagically generate coverage\n  reports.\n* You want to use [RequireJS] for your source files.\n\n\n## But I still want to use \\_insert testing library\\_\n\nKarma is not a testing framework, nor an assertion library.\nKarma just launches an HTTP server, and generates the test runner HTML file you probably already know from your favourite testing framework.\nSo for testing purposes you can use pretty much anything you like. There are already plugins for most of the common testing frameworks:\n\n* [Jasmine]\n* [Mocha]\n* [QUnit]\n* and [many others](https://www.npmjs.org/browse/keyword/karma-adapter)\n\nIf you can't find an adapter for your favourite framework, don't worry and write your own.\nIt's not that hard and we are here to help.\n\n\n## Which Browsers can I use?\n\nAll the major browsers are supported, if you want to know more see the\n[browsers] page.\n\n\n## Troubleshooting\nSee [FAQ](https://karma-runner.github.io/latest/intro/faq.html).\n\n\n## I want to use it. Where do I sign?\n\nYou don't need to sign anything but here are some resources to help\nyou to get started...\n\n\n### Obligatory Screencast.\n\nEvery serious project has a screencast, so here is ours.  Just click\n[here] and let the show begin.\n\n\n### Installation.\n\nSee [installation](https://karma-runner.github.io/latest/intro/installation.html).\n\n\n### Using it.\n\nSee [configuration](https://karma-runner.github.io/latest/intro/configuration.html).\n\n\n## This is so great. I want to help.\n\nPlease, see\n[contributing](https://karma-runner.github.io/latest/dev/contributing.html).\n\n\n## Why did you create this?\n\nThroughout the development of [AngularJS], we've been using [JSTD] for\ntesting. I really think that JSTD is a great idea. Unfortunately, we\nhad many problems with JSTD, so we decided to write our own test\nrunner based on the same idea. We wanted a simple tool just for\nexecuting JavaScript tests that is both stable and fast. That's why we\nuse the awesome [Socket.io] library and [Node.js].\n\n\n## My boss wants a license. So where is it?\n[MIT License](./LICENSE)\n\n\n[AngularJS]: https://angularjs.org/\n[JSTD]: https://code.google.com/p/js-test-driver/\n[Socket.io]: http://socket.io/\n[Node.js]: http://nodejs.org/\n[Jasmine]: https://github.com/karma-runner/karma-jasmine\n[Mocha]: https://github.com/karma-runner/karma-mocha\n[QUnit]: https://github.com/karma-runner/karma-qunit\n[here]: https://www.youtube.com/watch?v=MVw8N3hTfCI\n[Mailing List]: https://groups.google.com/forum/#!forum/karma-users\n[Issue Tracker]: https://github.com/karma-runner/karma/issues\n[@JsKarma]: https://twitter.com/JsKarma\n[RequireJS]: http://requirejs.org/\n[Istanbul]: https://github.com/gotwarlost/istanbul\n\n[browsers]: https://karma-runner.github.io/latest/config/browsers.html\n[documentation]: https://karma-runner.github.io"}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 344362}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1846795}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7926826}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 23009586}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 42512223}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 81627685}], "dependentsCount": 830, "starsCount": 427}, "github": {"homepage": "http://karma-runner.github.io", "starsCount": 11191, "forksCount": 1640, "subscribersCount": 332, "issues": {"count": 3526, "openCount": 331, "distribution": {"3600": 271, "10800": 161, "32400": 227, "97200": 344, "291600": 408, "874800": 473, "2624400": 462, "7873200": 303, "23619600": 232, "70858800": 296, "212576400": 349}, "isDisabled": false}, "contributors": [{"username": "vojtajina", "commitsCount": 934}, {"username": "dignifiedquire", "commitsCount": 296}, {"username": "johnjbarton", "commitsCount": 134}, {"username": "greenkeeperio-bot", "commitsCount": 67}, {"username": "devoto13", "commitsCount": 60}, {"username": "lusarz", "commitsCount": 52}, {"username": "karmarunnerbot", "commitsCount": 35}, {"username": "budde377", "commitsCount": 26}, {"username": "taichi", "commitsCount": 14}, {"username": "wesleycho", "commitsCount": 14}, {"username": "maksimr", "commitsCount": 12}, {"username": "anthony-redFox", "commitsCount": 11}, {"username": "mgol", "commitsCount": 11}, {"username": "semantic-release-bot", "commitsCount": 11}, {"username": "twolfson", "commitsCount": 11}, {"username": "bitwiseman", "commitsCount": 9}, {"username": "cironunes", "commitsCount": 7}, {"username": "pkozlowski-opensource", "commitsCount": 6}, {"username": "shyamseshadri", "commitsCount": 6}, {"username": "timbertson", "commitsCount": 6}, {"username": "vivganes", "commitsCount": 6}, {"username": "zzo", "commitsCount": 6}, {"username": "Iristyle", "commitsCount": 5}, {"username": "Moumi", "commitsCount": 5}, {"username": "danielcompton", "commitsCount": 5}, {"username": "thorn0", "commitsCount": 5}, {"username": "IgorMinar", "commitsCount": 4}, {"username": "Volune", "commitsCount": 4}, {"username": "briandipalma", "commitsCount": 4}, {"username": "kimjoar", "commitsCount": 4}, {"username": "nmalaguti", "commitsCount": 4}, {"username": "segrey", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "DavidSouther", "commitsCount": 3}, {"username": "chrahunt", "commitsCount": 3}, {"username": "chriscasola", "commitsCount": 3}, {"username": "da2x", "commitsCount": 3}, {"username": "ilyavolodin", "commitsCount": 3}, {"username": "jeffjewiss", "commitsCount": 3}, {"username": "josh-bradley", "commitsCount": 3}, {"username": "marcenuc", "commitsCount": 3}, {"username": "pavelgj", "commitsCount": 3}, {"username": "pietermees", "commitsCount": 3}, {"username": "sublimino", "commitsCount": 3}, {"username": "sylvain-hamel", "commitsCount": 3}, {"username": "ywongau", "commitsCount": 3}, {"username": "DarthCharles", "commitsCount": 2}, {"username": "FuzzySockets", "commitsCount": 2}, {"username": "KJTsanaktsidis", "commitsCount": 2}, {"username": "PatrickJS", "commitsCount": 2}, {"username": "SteinRobert", "commitsCount": 2}, {"username": "SteveVanOpstal", "commitsCount": 2}, {"username": "Teamop", "commitsCount": 2}, {"username": "alias-mac", "commitsCount": 2}, {"username": "anshbansal", "commitsCount": 2}, {"username": "avalanche123", "commitsCount": 2}, {"username": "bryanrsmith", "commitsCount": 2}, {"username": "btford", "commitsCount": 2}, {"username": "chan1cyrus2", "commitsCount": 2}, {"username": "comdiv", "commitsCount": 2}, {"username": "czchen", "commitsCount": 2}, {"username": "davidparsson", "commitsCount": 2}, {"username": "dherges", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 2}, {"username": "freethejazz", "commitsCount": 2}, {"username": "hmalphettes", "commitsCount": 2}, {"username": "iamstarkov", "commitsCount": 2}, {"username": "ilgonmic", "commitsCount": 2}, {"username": "jamestalmage", "commitsCount": 2}, {"username": "josh18", "commitsCount": 2}, {"username": "jpommerening", "commitsCount": 2}, {"username": "kellyjensen", "commitsCount": 2}, {"username": "kevinzwhuang", "commitsCount": 2}, {"username": "kyliau", "commitsCount": 2}, {"username": "levithomason", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "matz3", "commitsCount": 2}, {"username": "nicojs", "commitsCount": 2}, {"username": "psyked", "commitsCount": 2}, {"username": "rdodev", "commitsCount": 2}, {"username": "reda-alaoui", "commitsCount": 2}, {"username": "rgaskill", "commitsCount": 2}, {"username": "sergei-startsev", "commitsCount": 2}, {"username": "shanear", "commitsCount": 2}, {"username": "sjelin", "commitsCount": 2}, {"username": "srawlins", "commitsCount": 2}, {"username": "tailsu", "commitsCount": 2}, {"username": "thetrevdev", "commitsCount": 2}, {"username": "tullmann", "commitsCount": 2}, {"username": "voltrevo", "commitsCount": 2}, {"username": "Borewit", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "ameerthehacker", "commitsCount": 1}, {"username": "is-already-taken", "commitsCount": 1}, {"username": "krotscheck", "commitsCount": 1}, {"username": "nickbullock", "commitsCount": 1}, {"username": "peterblazejewicz", "commitsCount": 1}, {"username": "rictic", "commitsCount": 1}, {"username": "tbhartman", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 12}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 67}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 77}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 121}]}, "source": {"files": {"readmeSize": 5284, "testsSize": 370920, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma.svg", "content": "https://img.shields.io/npm/v/karma.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma.svg", "content": "https://img.shields.io/npm/dm/karma.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg?style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/dignifiedquire/karma/branch/master", "shields": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg", "content": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma.svg", "shields": "https://img.shields.io/david/karma-runner/karma.svg", "content": "https://img.shields.io/david/karma-runner/karma.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"], "outdatedDependencies": {"flatted": {"required": "^2.0.2", "stable": "3.0.2", "latest": "3.0.2"}, "source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8333333333333334, "branding": 1}, "popularity": {"communityInterest": 13690, "downloadsCount": 7669862, "downloadsAcceleration": 13282.890924657535, "dependentsCount": 830}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7408005611031462, "detail": {"quality": 0.942212630119417, "popularity": 0.642295539239965, "maintenance": 0.6666666666666666}}}}, {"istanbul": {"analyzedAt": "2020-06-21T22:38:28.097Z", "collected": {"metadata": {"name": "istanbul", "scope": "unscoped", "version": "0.4.5", "description": "Yet another JS code coverage tool that computes statement, line, function and branch coverage with module loader hooks to transparently add coverage when running tests. Supports all JS coverage use cases including unit tests, server side functional tests", "keywords": ["coverage", "code coverage", "JS code coverage", "JS coverage"], "date": "2016-08-21T20:02:09.468Z", "author": {"name": "Krishnan Anantheswaran", "email": "kananthmail-github@yahoo.com", "username": "gotwarlost"}, "publisher": {"username": "gotwarlost", "email": "kananthmail-github@yahoo.com"}, "maintainers": [{"username": "bcoe", "email": "ben@npmjs.com"}, {"username": "davglass", "email": "davglass@gmail.com"}, {"username": "gotwarlost", "email": "kananthmail-github@yahoo.com"}], "contributors": [{"name": "Reid Burke", "email": "me@reidburke.com"}, {"name": "Martin Cooper", "email": "mfncooper@gmail.com"}, {"name": "Dav Glass", "email": "davglass@gmail.com"}, {"name": "nowamasa", "email": "nowamasa@gmail.com"}, {"name": "Miller Medeiros @millermedeiros", "email": "contact@millermedeiros.com"}, {"name": "Daniel Perez Alvarez @unindented", "email": "unindented@gmail.com"}, {"name": "Mathias Bynens @mathiasbynens", "email": "mathias@qiwi.be"}, {"name": "Nathan Brown @nbrownus", "email": "nate@betable.com"}, {"name": "Brian Ng @existentialism", "email": "bng412@gmail.com"}, {"name": "John Morrison @jrgm"}, {"name": "Tomaz Muraus @kami", "email": "tomaz+github@tomaz.me"}, {"name": "Joe @jhansche", "email": "jhansche@meetme.com"}, {"name": "Vojta Jina @vojtajina", "email": "vojta.jina@gmail.com"}, {"name": "Dmitry Shirokov @runk", "email": "deadrunk@gmail.com"}, {"name": "Chris Gladd @chrisgladd"}, {"name": "Sergey Belov", "email": "peimei@ya.ru"}, {"name": "porneL @pornel", "email": "pornel@pornel.net"}, {"name": "@asifrc"}, {"name": "Gergely Nemeth @gergelyke"}, {"name": "@bixdeng"}, {"name": "@mpderbec"}, {"name": "@jxiaodev"}, {"name": "Arpad Borsos @Swatinem", "email": "arpad.borsos@googlemail.com"}, {"name": "Ariya Hidayat @ariya"}, {"name": "@markyen"}, {"name": "Sam Saccone @samccone", "email": "sam@samx.it"}, {"name": "Jason Cheatham @jason0x43"}, {"name": "@smikes"}, {"name": "Yasyf Mohamedali @yasyf", "email": "yasyfm@gmail.com"}, {"name": "Fabio Crisci @piuccio", "email": "piuccio@gmail.com"}, {"name": "Ryan Roemer @ryan-roemer", "email": "ryan@loose-bits.com"}, {"name": "Douglas Christopher Wilson @dougwilson"}, {"name": "Gustav Nikolaj @gustavnikolaj", "email": "gustavnikolaj@gmail.com"}, {"name": "Denis Sokolov @denis-sokolov", "email": "denis@sokolov.cc"}, {"name": "Yann Mainier @ymainier"}, {"name": "Yiyu He @dead-horse", "email": "heyiyu.deadhorse@gmail.com"}, {"name": "Andrew Kelley @andrewrk", "email": "superjoe30@gmail.com"}, {"name": "Will LaBranche @wlabranche", "email": "will@labranche.io"}, {"name": "Mathieu Naouache @math-nao", "email": "math.nao@outlook.com"}, {"name": "Ron Korving @ronkorving"}, {"name": "Rob McGuire-Dale @robatron", "email": "rob.mcguiredale@gmail.com"}, {"name": "Justin Johnson @booleangate"}, {"name": "Juan Gabriel Jim\u00e9nez @juangabreil", "email": "juangabreil@gmail.com"}, {"name": "Daniel Sabelnikov @dragn", "email": "dsabelnikov@gmail.com"}, {"name": "Tony Lukasavage @tonylukasavage", "email": "anthony.lukasavage@gmail.com"}, {"name": "Simon Ramsay @nexus-uw"}, {"name": "Dominykas Bly\u017e\u0117 @dominykas"}, {"name": "Seth Pollack @sethpollack"}, {"name": "Benjamin E. Coe @bcoe", "email": "ben@npmjs.com"}, {"name": "Yuren Ju", "email": "yurenju@gmail.com"}, {"name": "Aleksey Verkholantsev", "email": "alex-vee@yandex-team.ru"}, {"name": "Ed S", "email": "ejsanders@gmail.com"}, {"name": "Mordy Tikotzky", "email": "mordytk@gmail.com"}, {"name": "Haoliang Gao @popomore", "email": "sakura9515@gmail.com"}, {"name": "Roderick Hsiao @roderickhsiao"}, {"name": "Nikita Gusakov @nkt"}, {"name": "Alex Dunphy @alexdunphy", "email": "alexanderdunphy@gmail.com"}, {"name": "Artemy Tregubenko @arty-name", "email": "me@arty.name"}, {"name": "Arye Lukashevski @aryelu"}, {"name": "@sterlinghw"}, {"name": "Gord Tanner", "email": "gord@bithound.io"}, {"name": "Tom MacWright @tmcw", "email": "tom@macwright.org"}, {"name": "Kitson Kelly @kitsonk"}, {"name": "@asa-git"}, {"name": "@RoCat"}, {"name": "Ian Page Hands @iphands", "email": "iphands@gmail.com"}, {"name": "Eddie Gurnee @pegurnee"}, {"name": "Kevin Decker @kpdecker", "email": "kpdecker@gmail.com"}, {"name": "isaacs @isaacs", "email": "i@izs.me"}, {"name": "Steve Gray @steve-gray"}, {"name": "Prayag Verma @pra85", "email": "prayag.verma@gmail.com"}, {"name": "Abe Fehr @abejfehr", "email": "abe.fehr@gmail.com"}, {"name": "Brian Woodward @doowb", "email": "brian.woodward@gmail.com"}, {"name": "@Victorystick"}, {"name": "@inversion"}, {"name": "@JamesMGreene"}, {"name": "@ChALkeR"}, {"name": "@graingert"}], "repository": {"type": "git", "url": "git://github.com/gotwarlost/istanbul.git"}, "links": {"npm": "https://www.npmjs.com/package/istanbul", "homepage": "https://github.com/gotwarlost/istanbul#readme", "repository": "https://github.com/gotwarlost/istanbul", "bugs": "https://github.com/gotwarlost/istanbul/issues"}, "license": "BSD-3-Clause", "dependencies": {"abbrev": "1.0.x", "async": "1.x", "escodegen": "1.8.x", "esprima": "2.7.x", "glob": "^5.0.15", "handlebars": "^4.0.1", "js-yaml": "3.x", "mkdirp": "0.5.x", "nopt": "3.x", "once": "1.x", "resolve": "1.1.x", "supports-color": "^3.1.0", "which": "^1.1.1", "wordwrap": "^1.0.0"}, "devDependencies": {"coveralls": "2.x", "jshint": "^2.8.0", "nodeunit": "0.9.x", "requirejs": "2.x", "rimraf": "^2.4.3"}, "releases": [{"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2018-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 1}], "deprecated": "This module is no longer maintained, try this instead:\n  npm i nyc\nVisit https://istanbul.js.org/integrations for other alternatives.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "## Istanbul - a JS code coverage tool written in JS\n\n[![Build Status](https://secure.travis-ci.org/gotwarlost/istanbul.svg?branch=master)](http://travis-ci.org/gotwarlost/istanbul)\n[![Dependency Status](https://gemnasium.com/gotwarlost/istanbul.svg)](https://gemnasium.com/gotwarlost/istanbul)\n[![Coverage Status](https://img.shields.io/coveralls/gotwarlost/istanbul.svg)](https://coveralls.io/r/gotwarlost/istanbul?branch=master)\n[![bitHound Score](https://www.bithound.io/github/gotwarlost/istanbul/badges/score.svg)](https://www.bithound.io/github/gotwarlost/istanbul)\n\n[![NPM](https://nodei.co/npm/istanbul.png?downloads=true)](https://nodei.co/npm/istanbul/)\n\n**New** `v0.4.0` now has beautiful HTML reports. Props to Tom MacWright @tmcw for a fantastic job!\n\n* [Features and use cases](#features)\n* [Getting started and configuration](#getting-started)\n* [Usage on Windows](#usage-on-windows)\n* [The command line](#the-command-line)\n* [Ignoring code for coverage](#ignoring-code-for-coverage)\n* [API](#api)\n* [Changelog](https://github.com/gotwarlost/istanbul/blob/master/CHANGELOG.md)\n* [License and credits](#license)\n\n### Features\n\n* All-javascript instrumentation library that tracks **statement, branch,\nand function coverage**.\n* **Module loader hooks** to instrument code on the fly\n* **Command line tools** to run node unit tests \"with coverage turned on\" and no cooperation\nwhatsoever from the test runner\n* Multiple report formats: **HTML**, **LCOV**, **Cobertura** and more.\n* Ability to use as [middleware](https://github.com/gotwarlost/istanbul-middleware) when serving JS files that need to be tested on the browser.\n* Can be used on the **command line** as well as a **library**\n* Based on the awesome `esprima` parser and the equally awesome `escodegen` code generator\n* Well-tested on node (prev, current and next versions) and the browser (instrumentation library only)\n\n### Use cases\n\nSupports the following use cases and more\n\n* transparent coverage of nodejs unit tests\n* instrumentation/ reporting of files in batch mode for browser tests\n* Server side code coverage for nodejs by embedding it as [custom middleware](https://github.com/gotwarlost/istanbul-middleware)\n\n### Getting started\n\n    $ npm install -g istanbul\n\nThe best way to see it in action is to run node unit tests. Say you have a test\nscript `test.js` that runs all tests for your node project without coverage.\n\nSimply:\n\n    $ cd /path/to/your/source/root\n    $ istanbul cover test.js\n\nand this should produce a `coverage.json`, `lcov.info` and `lcov-report/*html` under `./coverage`\n\nSample of code coverage reports produced by this tool (for this tool!):\n\n[HTML reports](http://gotwarlost.github.com/istanbul/public/coverage/lcov-report/index.html)\n\n### Usage on Windows\n\nIstanbul assumes that the `command` passed to it is a JS file (e.g. Jasmine, vows etc.),\nthis is however not true on Windows where npm wrap bin files in a `.cmd` file.\nSince Istanbul can not parse `.cmd` files you need to reference the bin file manually.\n\nHere is an example using Jasmine 2:\n\n    istanbul cover node_modules\\jasmine\\bin\\jasmine.js\n\nIn order to use this cross platform (e.i. Linux, Mac and Windows), you can insert\nthe above line into the script object in your package.json file but with normal\nslash.\n\n    \"scripts\": {\n        \"test\": \"istanbul cover node_modules/jasmine/bin/jasmine.js\"\n    }\n\n### Configuring\n\nDrop a `.istanbul.yml` file at the top of the source tree to configure istanbul.\n`istanbul help config` tells you more about the config file format.\n\n### The command line\n\n    $ istanbul help\n\ngives you detailed help on all commands.\n\n```\nUsage: istanbul help config | <command>\n\n`config` provides help with istanbul configuration\n\nAvailable commands are:\n\n      check-coverage\n              checks overall/per-file coverage against thresholds from coverage\n              JSON files. Exits 1 if thresholds are not met, 0 otherwise\n\n\n      cover   transparently adds coverage information to a node command. Saves\n              coverage.json and reports at the end of execution\n\n\n      help    shows help\n\n\n      instrument\n              instruments a file or a directory tree and writes the\n              instrumented code to the desired output location\n\n\n      report  writes reports for coverage JSON objects produced in a previous\n              run\n\n\n      test    cover a node command only when npm_config_coverage is set. Use in\n              an `npm test` script for conditional coverage\n\n\nCommand names can be abbreviated as long as the abbreviation is unambiguous\n```\n\nTo get detailed help for a command and what command-line options it supports, run:\n\n    istanbul help <command>\n\n(Most of the command line options are not covered in this document.)\n\n#### The `cover` command\n\n    $ istanbul cover my-test-script.js -- my test args\n    # note the -- between the command name and the arguments to be passed\n\nThe `cover` command can be used to get a coverage object and reports for any arbitrary\nnode script. By default, coverage information is written under `./coverage` - this\ncan be changed using command-line options.\n\nThe `cover` command can also be passed an optional `--handle-sigint` flag to\nenable writing reports when a user triggers a manual SIGINT of the process that is\nbeing covered. This can be useful when you are generating coverage for a long lived process.\n\n#### The `test` command\n\nThe `test` command has almost the same behavior as the `cover` command, except that\nit skips coverage unless the `npm_config_coverage` environment variable is set.\n\n**This command is deprecated** since the latest versions of npm do not seem to\nset the `npm_config_coverage` variable.\n\n#### The `instrument` command\n\nInstruments a single JS file or an entire directory tree and produces an output\ndirectory tree with instrumented code. This should not be required for running node\nunit tests but is useful for tests to be run on the browser.\n\n#### The `report` command\n\nWrites reports using `coverage*.json` files as the source of coverage information.\nReports are available in multiple formats and can be individually configured\nusing the istanbul config file. See `istanbul help report` for more details.\n\n#### The `check-coverage` command\n\nChecks the coverage of statements, functions, branches, and lines against the\nprovided thresholds. Positive thresholds are taken to be the minimum percentage\nrequired and negative numbers are taken to be the number of uncovered entities\nallowed.\n\n### Ignoring code for coverage\n\n* Skip an `if` or `else` path with `/* istanbul ignore if */` or `/* istanbul ignore else */` respectively.\n* For all other cases, skip the next 'thing' in the source with: `/* istanbul ignore next */`\n\nSee [ignoring-code-for-coverage.md](ignoring-code-for-coverage.md) for the spec.\n\n\n### API\n\nAll the features of istanbul can be accessed as a library.\n\n#### Instrument code\n\n```javascript\n    var istanbul = require('istanbul');\n    var instrumenter = new istanbul.Instrumenter();\n\n    var generatedCode = instrumenter.instrumentSync('function meaningOfLife() { return 42; }',\n        'filename.js');\n```\n\n#### Generate reports given a bunch of coverage JSON objects\n\n```javascript\n    var istanbul = require('istanbul'),\n        collector = new istanbul.Collector(),\n        reporter = new istanbul.Reporter(),\n        sync = false;\n\n    collector.add(obj1);\n    collector.add(obj2); //etc.\n\n    reporter.add('text');\n    reporter.addAll([ 'lcov', 'clover' ]);\n    reporter.write(collector, sync, function () {\n        console.log('All reports generated');\n    });\n```\n\nFor the gory details consult the [public API](http://gotwarlost.github.com/istanbul/public/apidocs/index.html)\n\n\n### Multiple Process Usage\n\nIstanbul can be used in a multiple process environment by running each process\nwith Istanbul, writing a unique coverage file for each process, and combining\nthe results when generating reports. The method used to perform this will\ndepend on the process forking API used. For example when using the\n[cluster module](http://nodejs.org/api/cluster.html) you must setup the master\nto start child processes with Istanbul coverage, disable reporting, and output\ncoverage files that include the PID in the filename.  Before each run you may\nneed to clear out the coverage data directory.\n\n```javascript\n    if(cluster.isMaster) {\n        // setup cluster if running with istanbul coverage\n        if(process.env.running_under_istanbul) {\n            // use coverage for forked process\n            // disabled reporting and output for child process\n            // enable pid in child process coverage filename\n            cluster.setupMaster({\n                exec: './node_modules/.bin/istanbul',\n                args: [\n                    'cover', '--report', 'none', '--print', 'none', '--include-pid',\n                    process.argv[1], '--'].concat(process.argv.slice(2))\n            });\n        }\n        // ...\n        // ... cluster.fork();\n        // ...\n    } else {\n        // ... worker code\n    }\n```\n\n### Coverage.json\n\nFor details on the format of the coverage.json object, [see here](./coverage.json.md).\n\n### License\n\nistanbul is licensed under the [BSD License](http://github.com/gotwarlost/istanbul/raw/master/LICENSE).\n\n### Third-party libraries\n\nThe following third-party libraries are used by this module:\n\n* abbrev: https://github.com/isaacs/abbrev-js -  to handle command abbreviations\n* async: https://github.com/caolan/async - for parallel instrumentation of files\n* escodegen: https://github.com/Constellation/escodegen - for JS code generation\n* esprima: https://github.com/ariya/esprima - for JS parsing\n* glob: https://github.com/isaacs/node-glob - for loading and matching path expressions\n* handlebars: https://github.com/wycats/handlebars.js/ - for report template expansion\n* js-yaml: https://github.com/nodeca/js-yaml - for YAML config file load\n* mkdirp: https://github.com/substack/node-mkdirp - to create output directories\n* nodeunit: https://github.com/caolan/nodeunit - dev dependency for unit tests\n* nopt: https://github.com/isaacs/nopt - for option parsing\n* once: https://github.com/isaacs/once - to ensure callbacks are called once\n* resolve: https://github.com/substack/node-resolve - for resolving a post-require hook module name into its main file.\n* rimraf - https://github.com/isaacs/rimraf - dev dependency for unit tests\n* which: https://github.com/isaacs/node-which - to resolve a node command to a file for the `cover` command\n* wordwrap: https://github.com/substack/node-wordwrap - for prettier help\n* prettify: http://code.google.com/p/google-code-prettify/ - for syntax colored HTML reports. Files checked in under `lib/vendor/`\n\n### Inspired by\n\n* YUI test coverage - https://github.com/yui/yuitest - the grand-daddy of JS coverage tools. Istanbul has been specifically designed to offer an alternative to this library with an easy migration path.\n* cover: https://github.com/itay/node-cover - the inspiration for the `cover` command, modeled after the `run` command in that tool. The coverage methodology used by istanbul is quite different, however\n\n### Shout out to\n\n   * [mfncooper](https://github.com/mfncooper) - for great brainstorming discussions\n   * [reid](https://github.com/reid), [davglass](https://github.com/davglass), the YUI dudes, for interesting conversations, encouragement, support and gentle pressure to get it done :)\n\n### Why the funky name?\n\nSince all the good ones are taken. Comes from the loose association of ideas across\ncoverage, carpet-area coverage, the country that makes good carpets and so on..."}, "npm": {"downloads": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 38441}, {"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 879066}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 3726757}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 12426047}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 24576984}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 51691346}], "dependentsCount": 847, "starsCount": 222}, "github": {"starsCount": 8251, "forksCount": 791, "subscribersCount": 138, "issues": {"count": 932, "openCount": 392, "distribution": {"3600": 61, "10800": 29, "32400": 35, "97200": 59, "291600": 38, "874800": 62, "2624400": 72, "7873200": 75, "23619600": 64, "70858800": 71, "212576400": 366}, "isDisabled": false}, "contributors": [{"username": "gotwarlost", "commitsCount": 254}, {"username": "davglass", "commitsCount": 14}, {"username": "Kami", "commitsCount": 10}, {"username": "gustavnikolaj", "commitsCount": 6}, {"username": "ariya", "commitsCount": 5}, {"username": "jason0x43", "commitsCount": 5}, {"username": "asifrc", "commitsCount": 4}, {"username": "sterling", "commitsCount": 4}, {"username": "chrisgladd", "commitsCount": 3}, {"username": "denis-sokolov", "commitsCount": 3}, {"username": "runk", "commitsCount": 3}, {"username": "adamjmcgrath", "commitsCount": 2}, {"username": "dotnetCarpenter", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "eddiemonge", "commitsCount": 2}, {"username": "juangabreil", "commitsCount": 2}, {"username": "markyen", "commitsCount": 2}, {"username": "mathiasbynens", "commitsCount": 2}, {"username": "millermedeiros", "commitsCount": 2}, {"username": "ngrieble", "commitsCount": 2}, {"username": "pegurnee", "commitsCount": 2}, {"username": "sethpollack", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "unindented", "commitsCount": 2}, {"username": "winniehell", "commitsCount": 2}, {"username": "yasyf", "commitsCount": 2}, {"username": "ymainier", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "JamesMGreene", "commitsCount": 1}, {"username": "RoCat", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "abejfehr", "commitsCount": 1}, {"username": "alexdunphy", "commitsCount": 1}, {"username": "andrewrk", "commitsCount": 1}, {"username": "arty-name", "commitsCount": 1}, {"username": "aryelu", "commitsCount": 1}, {"username": "asa-git", "commitsCount": 1}, {"username": "booleangate", "commitsCount": 1}, {"username": "davidlehn", "commitsCount": 1}, {"username": "dead-horse", "commitsCount": 1}, {"username": "dominykas", "commitsCount": 1}, {"username": "doowb", "commitsCount": 1}, {"username": "dragn", "commitsCount": 1}, {"username": "edg2s", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "gregpabian", "commitsCount": 1}, {"username": "gtanner", "commitsCount": 1}, {"username": "inversion", "commitsCount": 1}, {"username": "iphands", "commitsCount": 1}, {"username": "isaacs", "commitsCount": 1}, {"username": "johnny-mh", "commitsCount": 1}, {"username": "jrgm", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "jxiaodev", "commitsCount": 1}, {"username": "kitsonk", "commitsCount": 1}, {"username": "kornelski", "commitsCount": 1}, {"username": "kpdecker", "commitsCount": 1}, {"username": "nkt", "commitsCount": 1}, {"username": "nmalaguti", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "robatron", "commitsCount": 1}, {"username": "roderickhsiao", "commitsCount": 1}, {"username": "ryan-roemer", "commitsCount": 1}, {"username": "samccone", "commitsCount": 1}, {"username": "smikes", "commitsCount": 1}, {"username": "tikotzky", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "tschieggm", "commitsCount": 1}, {"username": "vojtajina", "commitsCount": 1}, {"username": "wlabranche", "commitsCount": 1}, {"username": "yodeyer", "commitsCount": 1}, {"username": "yurenju", "commitsCount": 1}], "commits": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11627, "testsSize": 391393, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/gotwarlost/istanbul.svg?branch=master", "service": "https://api.travis-ci.org/gotwarlost/istanbul.svg?branch=master", "shields": "https://img.shields.io/travis/gotwarlost/istanbul/master.svg", "content": "https://img.shields.io/travis/gotwarlost/istanbul/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/gotwarlost/istanbul.svg", "service": "https://coveralls.io/repos/gotwarlost/istanbul/badge.svg", "shields": "https://img.shields.io/coveralls/gotwarlost/istanbul.svg", "content": "https://img.shields.io/coveralls/gotwarlost/istanbul.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://nodei.co/npm/istanbul.png?downloads=true", "shields": "https://img.shields.io/npm/v/istanbul.svg", "content": "https://img.shields.io/npm/v/istanbul.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["jshint"], "coverage": 0.98, "outdatedDependencies": {"supports-color": {"required": "^3.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "abbrev": {"required": "1.0.x", "stable": "1.1.1", "latest": "1.1.1"}, "mkdirp": {"required": "0.5.x", "stable": "1.0.4", "latest": "0.5.5"}, "nopt": {"required": "3.x", "stable": "4.0.3", "latest": "4.0.3"}, "esprima": {"required": "2.7.x", "stable": "4.0.1", "latest": "4.0.1"}, "which": {"required": "^1.1.1", "stable": "2.0.2", "latest": "2.0.2"}, "escodegen": {"required": "1.8.x", "stable": "1.14.2", "latest": "1.14.2"}, "resolve": {"required": "1.1.x", "stable": "1.17.0", "latest": "2.0.0-next.1"}, "glob": {"required": "^5.0.15", "stable": "7.1.6", "latest": "7.1.6"}, "async": {"required": "1.x", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.997, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 9477, "downloadsCount": 4142015.6666666665, "downloadsAcceleration": -5619.054680365298, "dependentsCount": 847}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 0.6323319027181689, "issuesDistribution": 0}}, "score": {"final": 0.4202519735921842, "detail": {"quality": 0.5873842836464062, "popularity": 0.5205289197312082, "maintenance": 0.17671876169239872}}}}, {"vue-template-compiler": {"analyzedAt": "2020-05-07T01:15:49.920Z", "collected": {"metadata": {"name": "vue-template-compiler", "scope": "unscoped", "version": "2.6.11", "description": "template compiler for Vue 2.0", "keywords": ["vue", "compiler"], "date": "2019-12-13T19:58:29.159Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue.git"}, "links": {"npm": "https://www.npmjs.com/package/vue-template-compiler", "homepage": "https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#readme", "repository": "https://github.com/vuejs/vue", "bugs": "https://github.com/vuejs/vue/issues"}, "license": "MIT", "dependencies": {"he": "^1.1.0", "de-indent": "^1.0.2"}, "devDependencies": {"vue": "file:../.."}, "releases": [{"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2018-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 23}], "readme": "# vue-template-compiler\n\n> This package is auto-generated. For pull requests please see [src/platforms/web/entry-compiler.js](https://github.com/vuejs/vue/tree/dev/src/platforms/web/entry-compiler.js).\n\nThis package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. In most cases you should be using it with [`vue-loader`](https://github.com/vuejs/vue-loader), you will only need it separately if you are writing build tools with very specific needs.\n\n## Installation\n\n``` bash\nnpm install vue-template-compiler\n```\n\n``` js\nconst compiler = require('vue-template-compiler')\n```\n\n## API\n\n### compiler.compile(template, [options])\n\nCompiles a template string and returns compiled JavaScript code. The returned result is an object of the following format:\n\n``` js\n{\n  ast: ?ASTElement, // parsed template elements to AST\n  render: string, // main render function code\n  staticRenderFns: Array<string>, // render code for static sub trees, if any\n  errors: Array<string> // template syntax errors, if any\n}\n```\n\nNote the returned function code uses `with` and thus cannot be used in strict mode code.\n\n#### Options\n\n- `outputSourceRange` *new in 2.6*\n  - Type: `boolean`\n  - Default: `false`\n\n  Set this to true will cause the `errors` returned in the compiled result become objects in the form of `{ msg, start, end }`. The `start` and `end` properties are numbers that mark the code range of the error source in the template. This can be passed on to the `compiler.generateCodeFrame` API to generate a code frame for the error.\n\n- `whitespace`\n  - Type: `string`\n  - Valid values: `'preserve' | 'condense'`\n  - Default: `'preserve'`\n\n  The default value `'preserve'` handles whitespaces as follows:\n\n  - A whitespace-only text node between element tags is condensed into a single space.\n  - All other whitespaces are preserved as-is.\n\n  If set to `'condense'`:\n\n  - A whitespace-only text node between element tags is removed if it contains new lines. Otherwise, it is condensed into a single space.\n  - Consecutive whitespaces inside a non-whitespace-only text node are condensed into a single space.\n\n  Using condense mode will result in smaller compiled code size and slightly improved performance. However, it will produce minor visual layout differences compared to plain HTML in certain cases.\n\n  **This option does not affect the `<pre>` tag.**\n\n  Example:\n\n  ``` html\n  <!-- source -->\n  <div>\n    <span>\n      foo\n    </span>   <span>bar</span>\n  </div>\n\n  <!-- whitespace: 'preserve' -->\n  <div> <span>\n    foo\n    </span> <span>bar</span> </div>\n\n  <!-- whitespace: 'condense' -->\n  <div><span> foo </span> <span>bar</span></div>\n  ```\n\n- `modules`\n\n  It's possible to hook into the compilation process to support custom template features. **However, beware that by injecting custom compile-time modules, your templates will not work with other build tools built on standard built-in modules, e.g `vue-loader` and `vueify`.**\n\n  An array of compiler modules. For details on compiler modules, refer to the `ModuleOptions` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js#L47-L59) and the [built-in modules](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/modules).\n\n- `directives`\n\n  An object where the key is the directive name and the value is a function that transforms an template AST node. For example:\n\n  ``` js\n  compiler.compile('<div v-test></div>', {\n    directives: {\n      test (node, directiveMeta) {\n        // transform node based on directiveMeta\n      }\n    }\n  })\n  ```\n\n  By default, a compile-time directive will extract the directive and the directive will not be present at runtime. If you want the directive to also be handled by a runtime definition, return `true` in the transform function.\n\n  Refer to the implementation of some [built-in compile-time directives](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/directives).\n\n- `preserveWhitespace` **Deprecated since 2.6**\n  - Type: `boolean`\n  - Default: `true`\n\n  By default, the compiled render function preserves all whitespace characters between HTML tags. If set to `false`, whitespace between tags will be ignored. This can result in slightly better performance but may affect layout for inline elements.\n\n---\n\n### compiler.compileToFunctions(template)\n\nSimilar to `compiler.compile`, but directly returns instantiated functions:\n\n``` js\n{\n  render: Function,\n  staticRenderFns: Array<Function>\n}\n```\n\nThis is only useful at runtime with pre-configured builds, so it doesn't accept any compile-time options. In addition, this method uses `new Function()` so it is not CSP-compliant.\n\n---\n\n### compiler.ssrCompile(template, [options])\n\n> 2.4.0+\n\nSame as `compiler.compile` but generates SSR-specific render function code by optimizing parts of the template into string concatenation in order to improve SSR performance.\n\nThis is used by default in `vue-loader@>=12` and can be disabled using the [`optimizeSSR`](https://vue-loader.vuejs.org/en/options.html#optimizessr) option.\n\n---\n\n### compiler.ssrCompileToFunctions(template)\n\n> 2.4.0+\n\nSame as `compiler.compileToFunction` but generates SSR-specific render function code by optimizing parts of the template into string concatenation in order to improve SSR performance.\n\n---\n\n### compiler.parseComponent(file, [options])\n\nParse a SFC (single-file component, or `*.vue` file) into a descriptor (refer to the `SFCDescriptor` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js)). This is used in SFC build tools like `vue-loader` and `vueify`.\n\n---\n\n### compiler.generateCodeFrame(template, start, end)\n\nGenerate a code frame that highlights the part in `template` defined by `start` and `end`. Useful for error reporting in higher-level tooling.\n\n#### Options\n\n#### `pad`\n\n`pad` is useful when you are piping the extracted content into other pre-processors, as you will get correct line numbers or character indices if there are any syntax errors.\n\n- with `{ pad: \"line\" }`, the extracted content for each block will be prefixed with one newline for each line in the leading content from the original file to ensure that the line numbers align with the original file.\n- with `{ pad: \"space\" }`, the extracted content for each block will be prefixed with one space for each character in the leading content from the original file to ensure that the character count remains the same as the original file."}, "npm": {"downloads": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 407859}, {"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 1996565}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 9085713}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 25583541}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 41033492}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 67012342}], "dependentsCount": 1755, "starsCount": 21}, "github": {"homepage": "http://vuejs.org", "starsCount": 163388, "forksCount": 24709, "subscribersCount": 6146, "issues": {"count": 10773, "openCount": 498, "distribution": {"3600": 4218, "10800": 1263, "32400": 1435, "97200": 1110, "291600": 696, "874800": 572, "2624400": 393, "7873200": 327, "23619600": 371, "70858800": 338, "212576400": 50}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 2292}, {"username": "vue-bot", "commitsCount": 67}, {"username": "Hanks10100", "commitsCount": 47}, {"username": "defcc", "commitsCount": 37}, {"username": "kazupon", "commitsCount": 32}, {"username": "posva", "commitsCount": 29}, {"username": "HerringtonDarkholme", "commitsCount": 25}, {"username": "ktsn", "commitsCount": 25}, {"username": "javoski", "commitsCount": 23}, {"username": "Kingwl", "commitsCount": 15}, {"username": "gebilaoxiong", "commitsCount": 15}, {"username": "jkzing", "commitsCount": 15}, {"username": "Jinjiang", "commitsCount": 14}, {"username": "S-YOU", "commitsCount": 11}, {"username": "blake-newman", "commitsCount": 11}, {"username": "chrisvfritz", "commitsCount": 11}, {"username": "clarkdo", "commitsCount": 11}, {"username": "phanan", "commitsCount": 11}, {"username": "Justineo", "commitsCount": 10}, {"username": "HcySunYang", "commitsCount": 8}, {"username": "kaorun343", "commitsCount": 8}, {"username": "sodatea", "commitsCount": 8}, {"username": "KaelWD", "commitsCount": 7}, {"username": "dsonet", "commitsCount": 5}, {"username": "fnlctrl", "commitsCount": 4}, {"username": "imyzf", "commitsCount": 4}, {"username": "nickmessing", "commitsCount": 4}, {"username": "shasharoman", "commitsCount": 4}, {"username": "ulivz", "commitsCount": 4}, {"username": "znck", "commitsCount": 4}, {"username": "KingMario", "commitsCount": 3}, {"username": "bluemsn", "commitsCount": 3}, {"username": "felixbuenemann", "commitsCount": 3}, {"username": "liximomo", "commitsCount": 3}, {"username": "lzxb", "commitsCount": 3}, {"username": "mingmingwon", "commitsCount": 3}, {"username": "pkaminski", "commitsCount": 3}, {"username": "privatenumber", "commitsCount": 3}, {"username": "sqal", "commitsCount": 3}, {"username": "Alex-Sokolov", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 2}, {"username": "DaKoala", "commitsCount": 2}, {"username": "Gcaufy", "commitsCount": 2}, {"username": "HusamIbrahim", "commitsCount": 2}, {"username": "Itisfilipe", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "QingWei-Li", "commitsCount": 2}, {"username": "Shyam-Chen", "commitsCount": 2}, {"username": "asheb", "commitsCount": 2}, {"username": "bartlomieju", "commitsCount": 2}, {"username": "chriscasola", "commitsCount": 2}, {"username": "dejour", "commitsCount": 2}, {"username": "eddyerburgh", "commitsCount": 2}, {"username": "fenduru", "commitsCount": 2}, {"username": "g-plane", "commitsCount": 2}, {"username": "gzzhanghao", "commitsCount": 2}, {"username": "hikerpig", "commitsCount": 2}, {"username": "jingsam", "commitsCount": 2}, {"username": "lyhper", "commitsCount": 2}, {"username": "maciej-ka", "commitsCount": 2}, {"username": "neelance", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "superwf", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "william-pan", "commitsCount": 2}, {"username": "xdamman", "commitsCount": 2}, {"username": "yantene", "commitsCount": 2}, {"username": "zephraph", "commitsCount": 2}, {"username": "7006", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Magiccwl", "commitsCount": 1}, {"username": "Naartti", "commitsCount": 1}, {"username": "NataliaTepluhina", "commitsCount": 1}, {"username": "VitorLuizC", "commitsCount": 1}, {"username": "Xenonym", "commitsCount": 1}, {"username": "ahaoboy", "commitsCount": 1}, {"username": "ahus1", "commitsCount": 1}, {"username": "alanmatw", "commitsCount": 1}, {"username": "bakugod", "commitsCount": 1}, {"username": "decadef20", "commitsCount": 1}, {"username": "dennishzg", "commitsCount": 1}, {"username": "eltociear", "commitsCount": 1}, {"username": "evillt", "commitsCount": 1}, {"username": "flyyang", "commitsCount": 1}, {"username": "git-nkliyc", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "hyandell", "commitsCount": 1}, {"username": "jagannathBhat", "commitsCount": 1}, {"username": "lessfish", "commitsCount": 1}, {"username": "mateusvelleda", "commitsCount": 1}, {"username": "mcmillenb", "commitsCount": 1}, {"username": "msidolphin", "commitsCount": 1}, {"username": "pikax", "commitsCount": 1}, {"username": "rodrigograca31", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "tlebel", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 18}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 39}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 86}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "ci/circleci: test-cover", "state": "success"}, {"context": "ci/circleci: test-e2e", "state": "success"}, {"context": "ci/circleci: test-ssr-weex", "state": "success"}, {"context": "ci/circleci: lint-flow-types", "state": "success"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 6524, "testsSize": 2046}, "badges": [{"urls": {"original": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true", "service": "https://circleci.com/gh/vuejs/vue/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true", "service": "https://codecov.io/github/vuejs/vue/branch/dev/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg", "content": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/dm/vue.svg", "content": "https://img.shields.io/npm/dm/vue.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/v/vue.svg", "content": "https://img.shields.io/npm/v/vue.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/l/vue.svg", "content": "https://img.shields.io/npm/l/vue.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-router.svg", "shields": "https://img.shields.io/npm/v/vue-router.svg", "content": "https://img.shields.io/npm/v/vue-router.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vuex.svg", "shields": "https://img.shields.io/npm/v/vuex.svg", "content": "https://img.shields.io/npm/v/vuex.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/@vue/cli.svg", "shields": "https://img.shields.io/npm/v/@vue/cli.svg", "content": "https://img.shields.io/npm/v/@vue/cli.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-loader.svg", "shields": "https://img.shields.io/npm/v/vue-loader.svg", "content": "https://img.shields.io/npm/v/vue-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-server-renderer.svg", "shields": "https://img.shields.io/npm/v/vue-server-renderer.svg", "content": "https://img.shields.io/npm/v/vue-server-renderer.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-class-component.svg", "shields": "https://img.shields.io/npm/v/vue-class-component.svg", "content": "https://img.shields.io/npm/v/vue-class-component.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-rx.svg", "shields": "https://img.shields.io/npm/v/vue-rx.svg", "content": "https://img.shields.io/npm/v/vue-rx.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.6954999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 194363, "downloadsCount": 8527847, "downloadsAcceleration": 40907.50734398781, "dependentsCount": 1755}, "maintenance": {"releasesFrequency": 0.666095890410959, "commitsFrequency": 0.9007739726027397, "openIssues": 1, "issuesDistribution": 0.8096681281463941}}, "score": {"final": 0.8971846173398981, "detail": {"quality": 0.9377118812219096, "popularity": 0.7627021818261558, "maintenance": 0.9969293980976304}}}}, {"grunt": {"analyzedAt": "2020-06-26T20:55:57.036Z", "collected": {"metadata": {"name": "grunt", "scope": "unscoped", "version": "1.1.0", "description": "The JavaScript Task Runner", "keywords": ["task", "async", "cli", "minify", "uglify", "build", "lodash", "unit", "test", "qunit", "nodeunit", "server", "init", "scaffold", "make", "jake", "tool"], "date": "2020-03-17T02:37:19.588Z", "author": {"name": "Grunt Development Team", "url": "https://gruntjs.com/development-team"}, "publisher": {"username": "vladikoff", "email": "vlad@vladikoff.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com/"}, {"name": "Kyle Robinson Young", "url": "http://dontkry.com/"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com"}, {"name": "Sindre Sorhus", "url": "http://sindresorhus.com"}, {"name": "Vlad Filippov", "url": "http://vladfilippov.com/"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt", "homepage": "https://gruntjs.com/", "repository": "https://github.com/gruntjs/grunt", "bugs": "https://github.com/gruntjs/grunt/issues"}, "license": "MIT", "dependencies": {"coffeescript": "~1.10.0", "dateformat": "~1.0.12", "eventemitter2": "~0.4.13", "exit": "~0.1.1", "findup-sync": "~0.3.0", "glob": "~7.0.0", "grunt-cli": "~1.2.0", "grunt-known-options": "~1.1.0", "grunt-legacy-log": "~2.0.0", "grunt-legacy-util": "~1.1.1", "iconv-lite": "~0.4.13", "js-yaml": "~3.13.1", "minimatch": "~3.0.2", "mkdirp": "~1.0.3", "nopt": "~3.0.6", "path-is-absolute": "~1.0.0", "rimraf": "~2.6.2"}, "devDependencies": {"difflet": "~1.0.1", "eslint-config-grunt": "~1.0.1", "grunt-contrib-nodeunit": "~2.0.0", "grunt-contrib-watch": "~1.1.0", "grunt-eslint": "~18.1.0", "temporary": "~0.0.4", "through2": "~2.0.0"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Grunt: The JavaScript Task Runner\n\n[![Build Status: Linux](https://travis-ci.org/gruntjs/grunt.svg?branch=master)](https://travis-ci.org/gruntjs/grunt)\n[![Build Status: Windows](https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt/branch/master)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.svg)](http://gruntjs.com/)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgruntjs%2Fgrunt.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgruntjs%2Fgrunt?ref=badge_shield)\n\n<img align=\"right\" height=\"260\" src=\"http://gruntjs.com/img/grunt-logo-no-wordmark.svg\">\n\n\n### Documentation\n\nVisit the [gruntjs.com](https://gruntjs.com/) website for all the things.\n\n### Support / Contributing\nBefore you make an issue, please read our [Contributing](https://gruntjs.com/contributing) guide.\n\nYou can find the grunt team in [#grunt on irc.freenode.net](https://webchat.freenode.net/?channels=grunt).\n\n### Release History\nSee the [CHANGELOG](CHANGELOG).\n\n### License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 124661}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 558374}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2894571}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8656470}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 16469106}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 31728497}], "dependentsCount": 2065, "starsCount": 696}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 12016, "forksCount": 1539, "subscribersCount": 527, "issues": {"count": 1695, "openCount": 164, "distribution": {"3600": 340, "10800": 126, "32400": 156, "97200": 153, "291600": 104, "874800": 132, "2624400": 160, "7873200": 156, "23619600": 152, "70858800": 76, "212576400": 140}, "isDisabled": false}, "contributors": [{"username": "cowboy", "commitsCount": 1126}, {"username": "shama", "commitsCount": 74}, {"username": "vladikoff", "commitsCount": 33}, {"username": "tkellen", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 10}, {"username": "XhmikosR", "commitsCount": 9}, {"username": "scottgonzalez", "commitsCount": 8}, {"username": "jzaefferer", "commitsCount": 7}, {"username": "mklabs", "commitsCount": 7}, {"username": "paladox", "commitsCount": 6}, {"username": "coliff", "commitsCount": 3}, {"username": "danheberden", "commitsCount": 3}, {"username": "pifantastic", "commitsCount": 3}, {"username": "rwaldron", "commitsCount": 3}, {"username": "tbranyen", "commitsCount": 3}, {"username": "FredyC", "commitsCount": 2}, {"username": "NotMoni", "commitsCount": 2}, {"username": "arithmetric", "commitsCount": 2}, {"username": "ctalkington", "commitsCount": 2}, {"username": "dmethvin", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "mikesherov", "commitsCount": 2}, {"username": "rdworth", "commitsCount": 2}, {"username": "sokra", "commitsCount": 2}, {"username": "sorccu", "commitsCount": 2}, {"username": "FeodorFitsner", "commitsCount": 1}, {"username": "JamesMGreene", "commitsCount": 1}, {"username": "JasonCust", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "adrianheine", "commitsCount": 1}, {"username": "anti-matthew", "commitsCount": 1}, {"username": "auscaster", "commitsCount": 1}, {"username": "carldanley", "commitsCount": 1}, {"username": "divdavem", "commitsCount": 1}, {"username": "dprothero", "commitsCount": 1}, {"username": "dylang", "commitsCount": 1}, {"username": "eddiemonge", "commitsCount": 1}, {"username": "evansolomon", "commitsCount": 1}, {"username": "garyb", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "jimisaacs", "commitsCount": 1}, {"username": "jimmyhchan", "commitsCount": 1}, {"username": "jonykrause", "commitsCount": 1}, {"username": "jugglinmike", "commitsCount": 1}, {"username": "kmiyashiro", "commitsCount": 1}, {"username": "lamby", "commitsCount": 1}, {"username": "lpww", "commitsCount": 1}, {"username": "markelog", "commitsCount": 1}, {"username": "mrjoelkemp", "commitsCount": 1}, {"username": "notclive", "commitsCount": 1}, {"username": "omytryniuk", "commitsCount": 1}, {"username": "paulirish", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "puzrin", "commitsCount": 1}, {"username": "radford", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "rgaskill", "commitsCount": 1}, {"username": "ryysud", "commitsCount": 1}, {"username": "sbisbee", "commitsCount": 1}, {"username": "stuartf", "commitsCount": 1}, {"username": "tchollingsworth", "commitsCount": 1}, {"username": "theasta", "commitsCount": 1}, {"username": "trevorah", "commitsCount": 1}, {"username": "vlajos", "commitsCount": 1}, {"username": "webOS101", "commitsCount": 1}, {"username": "xizhao", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1114, "testsSize": 104371, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master", "shields": "https://img.shields.io/appveyor/ci/32r7s2skrgm9ubva/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/32r7s2skrgm9ubva/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["eslint"], "outdatedDependencies": {"path-is-absolute": {"required": "~1.0.0", "stable": "2.0.0", "latest": "2.0.0"}, "findup-sync": {"required": "~0.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "dateformat": {"required": "~1.0.12", "stable": "3.0.3", "latest": "3.0.3"}, "grunt-cli": {"required": "~1.2.0", "stable": "1.3.2", "latest": "1.3.2"}, "nopt": {"required": "~3.0.6", "stable": "4.0.3", "latest": "4.0.3"}, "iconv-lite": {"required": "~0.4.13", "stable": "0.6.0", "latest": "0.6.0"}, "rimraf": {"required": "~2.6.2", "stable": "3.0.2", "latest": "3.0.2"}, "js-yaml": {"required": "~3.13.1", "stable": "3.14.0", "latest": "3.14.0"}, "coffeescript": {"required": "~1.10.0", "stable": "2.5.1", "latest": "99.999.99999"}, "glob": {"required": "~7.0.0", "stable": "7.1.6", "latest": "7.1.6"}, "eventemitter2": {"required": "~0.4.13", "stable": "6.4.3", "latest": "6.4.3"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 14845, "downloadsCount": 2885490, "downloadsAcceleration": 3531.488812785392, "dependentsCount": 2065}, "maintenance": {"releasesFrequency": 0.29897260273972603, "commitsFrequency": 0.7170034246575342, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7008710848056967, "detail": {"quality": 0.9191000151140549, "popularity": 0.6186322697505906, "maintenance": 0.5960565310250671}}}}, {"eslint-plugin-jsx-a11y": {"analyzedAt": "2020-06-19T22:03:32.950Z", "collected": {"metadata": {"name": "eslint-plugin-jsx-a11y", "scope": "unscoped", "version": "6.3.1", "description": "Static AST checker for accessibility rules on JSX elements.", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "a11y", "accessibility", "jsx"], "date": "2020-06-19T21:29:22.653Z", "author": {"name": "Ethan Cohen"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "evcohen", "email": "ethanvcohen@gmail.com"}, {"username": "jessebeach", "email": "splendidnoise@gmail.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/evcohen/eslint-plugin-jsx-a11y.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-jsx-a11y", "homepage": "https://github.com/evcohen/eslint-plugin-jsx-a11y#readme", "repository": "https://github.com/evcohen/eslint-plugin-jsx-a11y", "bugs": "https://github.com/evcohen/eslint-plugin-jsx-a11y/issues"}, "license": "MIT", "dependencies": {"@babel/runtime": "^7.10.2", "aria-query": "^4.2.2", "array-includes": "^3.1.1", "ast-types-flow": "^0.0.7", "axe-core": "^3.5.4", "axobject-query": "^2.1.2", "damerau-levenshtein": "^1.0.6", "emoji-regex": "^9.0.0", "has": "^1.0.3", "jsx-ast-utils": "^2.4.1", "language-tags": "^1.0.5"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "babel-eslint": "^10.1.0", "babel-jest": "^24.9.0", "babel-preset-airbnb": "^5.0.0", "coveralls": "^3.1.0", "eslint": "^3 || ^4 || ^5 || ^6 || ^7", "eslint-config-airbnb-base": "^14.2.0", "eslint-plugin-flowtype": "^5.1.3", "eslint-plugin-import": "^2.21.2", "estraverse": "^5.0.0", "expect": "^24.3.1", "flow-bin": "^0.113.0", "in-publish": "^2.0.1", "jest": "^24.9.0", "jscodeshift": "^0.7.0", "minimist": "^1.2.5", "object.assign": "^4.1.0", "rimraf": "^3.0.2", "safe-publish-latest": "^1.1.4", "to-ast": "^1.0.0"}, "peerDependencies": {"eslint": "^3 || ^4 || ^5 || ^6 || ^7"}, "releases": [{"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 3}, {"from": "2018-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "<p align=\"center\">\n  <a href=\"https://travis-ci.org/evcohen/eslint-plugin-jsx-a11y\">\n    <img src=\"https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master\"\n         alt=\"build status\">\n  </a>\n  <a href=\"https://npmjs.org/package/eslint-plugin-jsx-a11y\">\n    <img src=\"https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg\"\n         alt=\"npm version\">\n  </a>\n  <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg\"\n         alt=\"license\">\n  </a>\n  <a href='https://coveralls.io/github/evcohen/eslint-plugin-jsx-a11y?branch=master'>\n    <img src='https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master' alt='Coverage Status' />\n  </a>\n  <a href='https://npmjs.org/package/eslint-plugin-jsx-a11y'>\n    <img src='https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg'\n    alt='Total npm downloads' />\n  </a>\n</p>\n\n<a href='https://tidelift.com/subscription/pkg/npm-eslint-plugin-jsx-a11y?utm_source=npm-eslint-plugin-jsx-a11y&utm_medium=referral&utm_campaign=readme'>Get professional support for eslint-plugin-jsx-a11y on Tidelift</a>\n\n# eslint-plugin-jsx-a11y\n\nStatic AST checker for accessibility rules on JSX elements.\n\n## Why?\nRyan Florence built out this awesome runtime-analysis tool called [react-a11y](https://github.com/reactjs/react-a11y). It is super useful. However, since you're probably already using linting in your project, this plugin comes for free and closer to the actual development process. Pairing this plugin with an editor lint plugin, you can bake accessibility standards into your application in real-time.\n\n**Note**: This project does not *replace* react-a11y, but can and should be used in conjunction with it. Static analysis tools cannot determine values of variables that are being placed in props before runtime, so linting will not fail if that value is undefined and/or does not pass the lint rule.\n\n## Installation\n\n**If you are installing this plugin via `eslint-config-airbnb`, please follow [these instructions](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb#eslint-config-airbnb-1).**\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```sh\n# npm\nnpm install eslint --save-dev\n\n# yarn\nyarn add eslint --dev\n```\n\nNext, install `eslint-plugin-jsx-a11y`:\n\n```sh\n# npm\nnpm install eslint-plugin-jsx-a11y --save-dev\n\n# yarn\nyarn add eslint-plugin-jsx-a11y --dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag in npm, or the `global` prefix in yarn) then you must also install `eslint-plugin-jsx-a11y` globally.\n\n## Usage\n\nAdd `jsx-a11y` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\n    \"jsx-a11y\"\n  ]\n}\n```\n\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jsx-a11y/rule-name\": 2\n  }\n}\n```\n\n\nYou can also enable all the recommended or strict rules at once.\nAdd `plugin:jsx-a11y/recommended` or `plugin:jsx-a11y/strict` in `extends`:\n\n```json\n{\n  \"extends\": [\n    \"plugin:jsx-a11y/recommended\"\n  ]\n}\n```\n\n## Supported Rules\n\n- [accessible-emoji](docs/rules/accessible-emoji.md): Enforce emojis are wrapped in `<span>` and provide screenreader access.\n- [alt-text](docs/rules/alt-text.md): Enforce all elements that require alternative text have meaningful information to relay back to end user.\n- [anchor-has-content](docs/rules/anchor-has-content.md): Enforce all anchors to contain accessible content.\n- [anchor-is-valid](docs/rules/anchor-is-valid.md): Enforce all anchors are valid, navigable elements.\n- [aria-activedescendant-has-tabindex](docs/rules/aria-activedescendant-has-tabindex.md): Enforce elements with aria-activedescendant are tabbable.\n- [aria-props](docs/rules/aria-props.md): Enforce all `aria-*` props are valid.\n- [aria-proptypes](docs/rules/aria-proptypes.md): Enforce ARIA state and property values are valid.\n- [aria-role](docs/rules/aria-role.md): Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role.\n- [aria-unsupported-elements](docs/rules/aria-unsupported-elements.md): Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes.\n- [autocomplete-valid](docs/rules/autocomplete-valid.md): Enforce that autocomplete attributes are used correctly.\n- [click-events-have-key-events](docs/rules/click-events-have-key-events.md): Enforce a clickable non-interactive element has at least one keyboard event listener.\n- [heading-has-content](docs/rules/heading-has-content.md): Enforce heading (`h1`, `h2`, etc) elements contain accessible content.\n- [html-has-lang](docs/rules/html-has-lang.md): Enforce `<html>` element has `lang` prop.\n- [iframe-has-title](docs/rules/iframe-has-title.md): Enforce iframe elements have a title attribute.\n- [img-redundant-alt](docs/rules/img-redundant-alt.md): Enforce `<img>` alt prop does not contain the word \"image\", \"picture\", or \"photo\".\n- [interactive-supports-focus](docs/rules/interactive-supports-focus.md): Enforce that elements with interactive handlers like `onClick` must be focusable.\n- [label-has-associated-control](docs/rules/label-has-associated-control.md): Enforce that a `label` tag has a text label and an associated control.\n- [lang](docs/rules/lang.md): Enforce lang attribute has a valid value.\n- [media-has-caption](docs/rules/media-has-caption.md): Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions.\n- [mouse-events-have-key-events](docs/rules/mouse-events-have-key-events.md): Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users.\n- [no-access-key](docs/rules/no-access-key.md): Enforce that the `accessKey` prop is not used on any element to avoid complications with keyboard commands used by a screenreader.\n- [no-autofocus](docs/rules/no-autofocus.md): Enforce autoFocus prop is not used.\n- [no-distracting-elements](docs/rules/no-distracting-elements.md): Enforce distracting elements are not used.\n- [no-interactive-element-to-noninteractive-role](docs/rules/no-interactive-element-to-noninteractive-role.md): Interactive elements should not be assigned non-interactive roles.\n- [no-noninteractive-element-interactions](docs/rules/no-noninteractive-element-interactions.md): Non-interactive elements should not be assigned mouse or keyboard event listeners.\n- [no-noninteractive-element-to-interactive-role](docs/rules/no-noninteractive-element-to-interactive-role.md): Non-interactive elements should not be assigned interactive roles.\n- [no-noninteractive-tabindex](docs/rules/no-noninteractive-tabindex.md): `tabIndex` should only be declared on interactive elements.\n- [no-onchange](docs/rules/no-onchange.md): Enforce usage of `onBlur` over `onChange` on select menus for accessibility.\n- [no-redundant-roles](docs/rules/no-redundant-roles.md): Enforce explicit role property is not the same as implicit/default role property on element.\n- [no-static-element-interactions](docs/rules/no-static-element-interactions.md): Enforce that non-interactive, visible elements (such as `<div>`) that have click handlers use the role attribute.\n- [role-has-required-aria-props](docs/rules/role-has-required-aria-props.md): Enforce that elements with ARIA roles must have all required attributes for that role.\n- [role-supports-aria-props](docs/rules/role-supports-aria-props.md): Enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`.\n- [scope](docs/rules/scope.md): Enforce `scope` prop is only used on `<th>` elements.\n- [tabindex-no-positive](docs/rules/tabindex-no-positive.md): Enforce `tabIndex` value is not greater than zero.\n\n### Difference between 'recommended' and 'strict' mode\n\nRule | Recommended | Strict\n------------ | ------------- | -------------\n[accessible-emoji](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/accessible-emoji.md) | error | error\n[alt-text](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/alt-text.md) | error | error\n[anchor-has-content](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-has-content.md) | error | error\n[anchor-is-valid](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md) | error | error\n[aria-activedescendant-has-tabindex](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-activedescendant-has-tabindex.md) | error | error\n[aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-props.md) | error | error\n[aria-proptypes](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-proptypes.md) | error | error\n[aria-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md) | error | error\n[aria-unsupported-elements](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-unsupported-elements.md) | error | error\n[autocomplete-valid](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/autocomplete-valid.md) | error | error\n[click-events-have-key-events](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/click-events-have-key-events.md) | error | error\n[heading-has-content](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/heading-has-content.md) | error | error\n[html-has-lang](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/html-has-lang.md) | error | error\n[iframe-has-title](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/iframe-has-title.md) | error | error\n[img-redundant-alt](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-redundant-alt.md) | error | error\n[interactive-supports-focus](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/interactive-supports-focus.md) | error | error\n[label-has-associated-control](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/label-has-associated-control.md) | error | error\n[media-has-caption](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/media-has-caption.md) | error | error\n[mouse-events-have-key-events](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md) | error | error\n[no-access-key](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md) | error | error\n[no-autofocus](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-autofocus.md) | error | error\n[no-distracting-elements](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-distracting-elements.md) | error | error\n[no-interactive-element-to-noninteractive-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-interactive-element-to-noninteractive-role.md) | error, with options | error\n[no-noninteractive-element-interactions](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-interactions.md) | error, with options | error\n[no-noninteractive-element-to-interactive-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-to-interactive-role.md) | error, with options | error\n[no-noninteractive-tabindex](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-tabindex.md) | error, with options | error\n[no-onchange](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md) | error | error\n[no-redundant-roles](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-redundant-roles.md) | error | error\n[no-static-element-interactions](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md) | error, with options | error\n[role-has-required-aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-has-required-aria-props.md) | error | error\n[role-supports-aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-supports-aria-props.md) | error | error\n[scope](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/scope.md) | error, with options | error\n[tabindex-no-positive](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/tabindex-no-positive.md) | error | error\n\n\nThe following rules have extra options when in *recommended* mode:\n\n#### no-interactive-element-to-noninteractive-role\n```js\n'jsx-a11y/no-interactive-element-to-noninteractive-role': [\n  'error',\n  {\n    tr: ['none', 'presentation'],\n  },\n]\n```\n\n#### no-noninteractive-element-interactions\n```js\n'jsx-a11y/no-noninteractive-element-interactions': [\n  'error',\n  {\n    handlers: [\n      'onClick',\n      'onMouseDown',\n      'onMouseUp',\n      'onKeyPress',\n      'onKeyDown',\n      'onKeyUp',\n    ],\n  },\n]\n```\n\n#### no-noninteractive-element-to-interactive-role\n```js\n'jsx-a11y/no-noninteractive-element-to-interactive-role': [\n  'error',\n  {\n    ul: [\n      'listbox',\n      'menu',\n      'menubar',\n      'radiogroup',\n      'tablist',\n      'tree',\n      'treegrid',\n    ],\n    ol: [\n      'listbox',\n      'menu',\n      'menubar',\n      'radiogroup',\n      'tablist',\n      'tree',\n      'treegrid',\n    ],\n    li: ['menuitem', 'option', 'row', 'tab', 'treeitem'],\n    table: ['grid'],\n    td: ['gridcell'],\n  },\n]\n```\n\n#### no-noninteractive-tabindex\n```js\n'jsx-a11y/no-noninteractive-tabindex': [\n  'error',\n  {\n    tags: [],\n    roles: ['tabpanel'],\n  },\n]\n```\n\n#### no-static-element-interactions\n```js\n'jsx-a11y/no-noninteractive-element-interactions': [\n  'error',\n  {\n    handlers: [\n      'onClick',\n      'onMouseDown',\n      'onMouseUp',\n      'onKeyPress',\n      'onKeyDown',\n      'onKeyUp',\n    ],\n  },\n]\n```\n\n## Creating a new rule\n\nIf you are developing new rules for this project, you can use the `create-rule`\nscript to scaffold the new files.\n\n```\n$ ./scripts/create-rule.js my-new-rule\n```\n\n## Some background on WAI-ARIA, the AX Tree and Browsers\n\n### Accessibility API\nAn operating system will provide an accessibility API that maps application state and content onto input/output controllers such as a screen reader, braille device, keyboard, etc.\n\nThese APIs were developed as computer interfaces shifted from buffers (which are text-based and inherently quite accessible) to graphical user interfaces (GUIs). The first attempts to make GUIs accessible involved raster image parsing to recognize characters, words, etc. This information was stored in a parallel buffer and made accessible to assistive technology (AT) devices.\n\nAs GUIs became more complex, the raster parsing approach became untenable. Accessibility APIs were developed to replace them. Check out [NSAccessibility (AXAPI)](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Protocols/NSAccessibility_Protocol/index.html) for an example. See [Core Accessibility API Mappings 1.1](https://www.w3.org/TR/core-aam-1.1/) for more details.\n\n### Browsers\nBrowsers support an Accessibility API on a per operating system basis. For instance, Firefox implements the MSAA accessibility API on Windows, but does not implement the AXAPI on OSX.\n\n### The Accessibility (AX) Tree & DOM\nFrom the [W3 Core Accessibility API Mappings 1.1](https://www.w3.org/TR/core-aam-1.1/#intro_treetypes)\n\n> The accessibility tree and the DOM tree are parallel structures. Roughly speaking the accessibility tree is a subset of the DOM tree. It includes the user interface objects of the user agent and the objects of the document. Accessible objects are created in the accessibility tree for every DOM element that should be exposed to assistive technology, either because it may fire an accessibility event or because it has a property, relationship or feature which needs to be exposed. Generally, if something can be trimmed out it will be, for reasons of performance and simplicity. For example, a `<span>` with just a style change and no semantics may not get its own accessible object, but the style change will be exposed by other means.\n\nBrowser vendors are beginning to expose the AX Tree through inspection tools. Chrome has an experiment available to enable their inspection tool.\n\nYou can also see a text-based version of the AX Tree in Chrome in the stable release version.\n\n#### Viewing the AX Tree in Chrome\n  1. Navigate to `chrome://accessibility/` in Chrome.\n  1. Toggle the `accessibility off` link for any tab that you want to inspect.\n  1. A link labeled `show accessibility tree` will appear; click this link.\n  1. Balk at the wall of text that gets displayed, but then regain your conviction.\n  1. Use the browser's find command to locate strings and values in the wall of text.\n\n### Pulling it all together\nA browser constructs an AX Tree as a subset of the DOM. ARIA heavily informs the properties of this AX Tree. This AX Tree is exposed to the system level Accessibility API which mediates assistive technology agents.\n\nWe model ARIA in the [aria-query](https://github.com/a11yance/aria-query) project. We model AXObjects (that comprise the AX Tree) in the [axobject-query](https://github.com/A11yance/axobject-query) project. The goal of the WAI-ARIA specification is to be a complete declarative interface to the AXObject model. The [in-draft 1.2 version](https://github.com/w3c/aria/issues?q=is%3Aissue+is%3Aopen+label%3A%22ARIA+1.2%22) is moving towards this goal. But until then, we must consider the semantics constructs afforded by ARIA as well as those afforded by the AXObject model (AXAPI) in order to determine how HTML can be used to express user interface affordances to assistive technology users.\n\n## License\n\neslint-plugin-jsx-a11y is licensed under the [MIT License](LICENSE.md)."}, "npm": {"downloads": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 759807}, {"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 3961587}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 17267470}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 51318535}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 91411226}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 167075491}], "dependentsCount": 5344, "starsCount": 21}, "github": {"starsCount": 2020, "forksCount": 390, "subscribersCount": 43, "issues": {"count": 706, "openCount": 74, "distribution": {"3600": 108, "10800": 46, "32400": 51, "97200": 78, "291600": 67, "874800": 93, "2624400": 78, "7873200": 66, "23619600": 53, "70858800": 39, "212576400": 27}, "isDisabled": false}, "contributors": [{"username": "evcohen", "commitsCount": 226}, {"username": "jessebeach", "commitsCount": 170}, {"username": "ljharb", "commitsCount": 34}, {"username": "greenkeeper[bot]", "commitsCount": 20}, {"username": "WilcoFiers", "commitsCount": 8}, {"username": "markreay", "commitsCount": 7}, {"username": "TrevorBurnham", "commitsCount": 6}, {"username": "greenkeeperio-bot", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "AlmeroSteyn", "commitsCount": 4}, {"username": "hozefaj", "commitsCount": 4}, {"username": "qw-in", "commitsCount": 3}, {"username": "MichaelDeBoey", "commitsCount": 2}, {"username": "andrelmlins", "commitsCount": 2}, {"username": "anthony0030", "commitsCount": 2}, {"username": "badtant", "commitsCount": 2}, {"username": "leos", "commitsCount": 2}, {"username": "othree", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "tanmoyopenroot", "commitsCount": 2}, {"username": "vdh", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "Donaldini", "commitsCount": 1}, {"username": "EvHaus", "commitsCount": 1}, {"username": "FarooqAR", "commitsCount": 1}, {"username": "FranklinYu", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "Moeriki", "commitsCount": 1}, {"username": "YellowKirby", "commitsCount": 1}, {"username": "adamrneary", "commitsCount": 1}, {"username": "astorije", "commitsCount": 1}, {"username": "blackflame007", "commitsCount": 1}, {"username": "captDaylight", "commitsCount": 1}, {"username": "christianvuerings", "commitsCount": 1}, {"username": "csi-lk", "commitsCount": 1}, {"username": "darobin", "commitsCount": 1}, {"username": "dawsbot", "commitsCount": 1}, {"username": "dschaller", "commitsCount": 1}, {"username": "dustin-ruetz", "commitsCount": 1}, {"username": "eitanmk", "commitsCount": 1}, {"username": "eps1lon", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "greypants", "commitsCount": 1}, {"username": "hjylewis", "commitsCount": 1}, {"username": "ignatiusreza", "commitsCount": 1}, {"username": "imtsuki", "commitsCount": 1}, {"username": "ismail-syed", "commitsCount": 1}, {"username": "katharinafluch", "commitsCount": 1}, {"username": "liubko", "commitsCount": 1}, {"username": "mahendrakulkarni177", "commitsCount": 1}, {"username": "matijs", "commitsCount": 1}, {"username": "merlinpatt", "commitsCount": 1}, {"username": "michaeljaltamirano", "commitsCount": 1}, {"username": "mikecaulley", "commitsCount": 1}, {"username": "n-chardon", "commitsCount": 1}, {"username": "octatone", "commitsCount": 1}, {"username": "olitreadwell", "commitsCount": 1}, {"username": "pdhoopr", "commitsCount": 1}, {"username": "rastersysteme", "commitsCount": 1}, {"username": "rdela", "commitsCount": 1}, {"username": "ryanvanoss", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "simPod", "commitsCount": 1}, {"username": "sohkai", "commitsCount": 1}, {"username": "straker", "commitsCount": 1}, {"username": "svinkle", "commitsCount": 1}, {"username": "tanipani", "commitsCount": 1}, {"username": "timtyrrell", "commitsCount": 1}, {"username": "tricoder42", "commitsCount": 1}, {"username": "walokra", "commitsCount": 1}, {"username": "wascloud", "commitsCount": 1}, {"username": "wyattdanger", "commitsCount": 1}, {"username": "xamfoo", "commitsCount": 1}, {"username": "yangli1990", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yepninja", "commitsCount": 1}, {"username": "zargold", "commitsCount": 1}, {"username": "zburke", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 8}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 17}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 25}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 31}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 64}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 18060, "testsSize": 315956, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master", "service": "https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master", "shields": "https://img.shields.io/travis/evcohen/eslint-plugin-jsx-a11y/master.svg", "content": "https://img.shields.io/travis/evcohen/eslint-plugin-jsx-a11y/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg", "shields": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master%27", "service": "https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master'", "shields": "https://img.shields.io/coveralls/evcohen/eslint-plugin-jsx-a11y/master'.svg", "content": "https://img.shields.io/coveralls/evcohen/eslint-plugin-jsx-a11y/master'.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master'"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg%27", "shields": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["eslint"], "coverage": 0.99}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 2555, "downloadsCount": 17106178.333333332, "downloadsAcceleration": 41985.083828006085, "dependentsCount": 5344}, "maintenance": {"releasesFrequency": 0.8053938356164383, "commitsFrequency": 0.986541095890411, "openIssues": 1, "issuesDistribution": 0.20437638015915166}}, "score": {"final": 0.8493165211745719, "detail": {"quality": 0.9993203602115683, "popularity": 0.7070600380922554, "maintenance": 0.8629982850823201}}}}, {"moment": {"analyzedAt": "2020-06-26T20:55:24.903Z", "collected": {"metadata": {"name": "moment", "scope": "unscoped", "version": "2.27.0", "description": "Parse, validate, manipulate, and display dates", "keywords": ["moment", "date", "time", "parse", "format", "validate", "i18n", "l10n", "ender"], "date": "2020-06-18T22:00:56.144Z", "author": {"name": "Iskren Ivov Chernev", "email": "iskren.chernev@gmail.com", "url": "https://github.com/ichernev", "username": "ichernev"}, "publisher": {"username": "marwahaha", "email": "marwahaha@berkeley.edu"}, "maintainers": [{"username": "ichernev", "email": "iskren.chernev@gmail.com"}, {"username": "maggiepint", "email": "maggiepint@gmail.com"}, {"username": "marwahaha", "email": "marwahaha@berkeley.edu"}, {"username": "mj1856", "email": "mj1856@hotmail.com"}, {"username": "timrwood", "email": "washwithcare@gmail.com"}], "contributors": [{"name": "Tim Wood", "email": "washwithcare@gmail.com", "url": "http://timwoodcreates.com/"}, {"name": "Rocky Meza", "url": "http://rockymeza.com"}, {"name": "Matt Johnson", "email": "mj1856@hotmail.com", "url": "http://codeofmatt.com"}, {"name": "Isaac Cambron", "email": "isaac@isaaccambron.com", "url": "http://isaaccambron.com"}, {"name": "Andre Polykanine", "email": "andre@oire.org", "url": "https://github.com/oire"}], "repository": {"type": "git", "url": "git+https://github.com/moment/moment.git"}, "links": {"npm": "https://www.npmjs.com/package/moment", "homepage": "https://momentjs.com", "repository": "https://github.com/moment/moment", "bugs": "https://github.com/moment/moment/issues"}, "license": "MIT", "devDependencies": {"benchmark": "latest", "coveralls": "latest", "cross-env": "^6.0.3", "es6-promise": "latest", "eslint": "~6", "grunt": "latest", "grunt-benchmark": "latest", "grunt-cli": "latest", "grunt-contrib-clean": "latest", "grunt-contrib-concat": "latest", "grunt-contrib-copy": "latest", "grunt-contrib-uglify": "latest", "grunt-contrib-watch": "latest", "grunt-env": "latest", "grunt-exec": "latest", "grunt-karma": "latest", "grunt-nuget": "latest", "grunt-string-replace": "latest", "karma": "latest", "karma-chrome-launcher": "latest", "karma-firefox-launcher": "latest", "karma-qunit": "latest", "karma-sauce-launcher": "4.1.4", "load-grunt-tasks": "latest", "node-qunit": "latest", "nyc": "latest", "prettier": "latest", "qunit": "^2.10.0", "rollup": "latest", "typescript": "^1.8.10", "typescript3": "npm:typescript@^3.1.6", "uglify-js": "latest"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 6}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 6}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 6}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "[![Join the chat at https://gitter.im/moment/moment](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][downloads-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n[![Coverage Status](https://coveralls.io/repos/moment/moment/badge.svg?branch=develop)](https://coveralls.io/r/moment/moment?branch=develop)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield)\n[![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\n**[Documentation](http://momentjs.com/docs/)**\n\n## Port to ECMAScript 6 (version 2.10.0)\n\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside `src/`. Previously `moment.js`, `locale/*.js` and\n`test/moment/*.js`, `test/locale/*.js` contained the source of the project. Now\nthe source is in `src/`, temporary build (ECMAScript 5) files are placed under\n`build/umd/` (for running tests during development), and the `moment.js` and\n`locale/*.js` files are updated only on release.\n\nIf you want to use a particular revision of the code, make sure to run\n`grunt transpile update-index`, so `moment.js` and `locales/*.js` are synced\nwith `src/*`. We might place that in a commit hook in the future.\n\n## Upgrading to 2.0.0\n\nThere are a number of small backwards incompatible changes with version 2.0.0. [See the full descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\n * Changed language ordinal method to return the number + ordinal instead of just the ordinal.\n\n * Changed two digit year parsing cutoff to match strptime.\n\n * Removed `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\n * Removed `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\n * Removed the lang data objects from the top level namespace.\n\n * Duplicate `Date` passed to `moment()` instead of referencing it.\n\n## [Changelog](https://github.com/moment/moment/blob/develop/CHANGELOG.md)\n\n## [Contributing](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md) [![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to [ichernev](https://github.com/ichernev).\n\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to moment/moment on CodeTriage](https://www.codetriage.com/moment/moment).\n\n### Frequently asked questions\n\nSee [FAQ.md](FAQ.md).\n\n## License\n\nMoment.js is freely distributable under the terms of the [MIT license](https://github.com/moment/moment/blob/develop/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large)\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment\n[npm-version-image]: http://img.shields.io/npm/v/moment.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment.svg?style=flat\n[downloads-url]: https://npmcharts.com/compare/moment?minimal=true\n\n[travis-url]: http://travis-ci.org/moment/moment\n[travis-image]: http://img.shields.io/travis/moment/moment/develop.svg?style=flat"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2335996}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10430647}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 52248397}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 151781652}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 287174698}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 533568746}], "dependentsCount": 27088, "starsCount": 1032}, "github": {"homepage": "momentjs.com", "starsCount": 44277, "forksCount": 6653, "subscribersCount": 935, "issues": {"count": 5608, "openCount": 204, "distribution": {"3600": 527, "10800": 228, "32400": 315, "97200": 532, "291600": 608, "874800": 705, "2624400": 731, "7873200": 769, "23619600": 597, "70858800": 395, "212576400": 201}, "isDisabled": false}, "contributors": [{"username": "ichernev", "commitsCount": 710}, {"username": "timrwood", "commitsCount": 583}, {"username": "icambron", "commitsCount": 110}, {"username": "marwahaha", "commitsCount": 87}, {"username": "TracyGJG", "commitsCount": 35}, {"username": "ashsearle", "commitsCount": 31}, {"username": "caillou", "commitsCount": 21}, {"username": "igorlima", "commitsCount": 20}, {"username": "mbad0la", "commitsCount": 20}, {"username": "Xotic750", "commitsCount": 17}, {"username": "mj1856", "commitsCount": 17}, {"username": "nrbgt", "commitsCount": 16}, {"username": "maggiepint", "commitsCount": 15}, {"username": "jbleduigou", "commitsCount": 13}, {"username": "mrtnjrrtt", "commitsCount": 12}, {"username": "timfish", "commitsCount": 12}, {"username": "weldan", "commitsCount": 12}, {"username": "kkopanidis", "commitsCount": 11}, {"username": "vnathalye", "commitsCount": 11}, {"username": "kruyvanna", "commitsCount": 10}, {"username": "mdxs", "commitsCount": 9}, {"username": "wi-ski", "commitsCount": 9}, {"username": "eternicode", "commitsCount": 8}, {"username": "Alanscut", "commitsCount": 7}, {"username": "DamianFekete", "commitsCount": 7}, {"username": "alexstrat", "commitsCount": 7}, {"username": "fbonzon", "commitsCount": 7}, {"username": "raphamorim", "commitsCount": 7}, {"username": "szelga", "commitsCount": 7}, {"username": "vajradog", "commitsCount": 7}, {"username": "dandv", "commitsCount": 6}, {"username": "flugger", "commitsCount": 6}, {"username": "guybedford", "commitsCount": 6}, {"username": "ianwremmel", "commitsCount": 6}, {"username": "jeeeyul", "commitsCount": 6}, {"username": "jisaacks", "commitsCount": 6}, {"username": "joelmheim", "commitsCount": 6}, {"username": "mar-chi-pan", "commitsCount": 6}, {"username": "nusretparlak", "commitsCount": 6}, {"username": "sigurdga", "commitsCount": 6}, {"username": "tcarlsen", "commitsCount": 6}, {"username": "wyantb", "commitsCount": 6}, {"username": "ypomortsev", "commitsCount": 6}, {"username": "FourwingsY", "commitsCount": 5}, {"username": "Gobie", "commitsCount": 5}, {"username": "WikiDiscoverer", "commitsCount": 5}, {"username": "armendarabyan", "commitsCount": 5}, {"username": "brianwyantora", "commitsCount": 5}, {"username": "cwohlman", "commitsCount": 5}, {"username": "fduch2k", "commitsCount": 5}, {"username": "ibnesayeed", "commitsCount": 5}, {"username": "johnnyreilly", "commitsCount": 5}, {"username": "kikoanis", "commitsCount": 5}, {"username": "robgallen", "commitsCount": 5}, {"username": "skakz", "commitsCount": 5}, {"username": "vroy", "commitsCount": 5}, {"username": "JLHwung", "commitsCount": 4}, {"username": "SwamWithTurtles", "commitsCount": 4}, {"username": "XueWei", "commitsCount": 4}, {"username": "akarelas", "commitsCount": 4}, {"username": "andrei-cocorean", "commitsCount": 4}, {"username": "antonellopasella", "commitsCount": 4}, {"username": "calebcauthon", "commitsCount": 4}, {"username": "cmyers", "commitsCount": 4}, {"username": "evoL", "commitsCount": 4}, {"username": "floydpink", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "jawish", "commitsCount": 4}, {"username": "jgwhite", "commitsCount": 4}, {"username": "jonbca", "commitsCount": 4}, {"username": "josephjaniga", "commitsCount": 4}, {"username": "kshitijb", "commitsCount": 4}, {"username": "mirontoli", "commitsCount": 4}, {"username": "mmozuras", "commitsCount": 4}, {"username": "pimterry", "commitsCount": 4}, {"username": "sbstp", "commitsCount": 4}, {"username": "skfd", "commitsCount": 4}, {"username": "sschueller", "commitsCount": 4}, {"username": "zemlanin", "commitsCount": 4}, {"username": "B0k0", "commitsCount": 3}, {"username": "Chyngyz", "commitsCount": 3}, {"username": "RIanDeLaCruz", "commitsCount": 3}, {"username": "afc163", "commitsCount": 3}, {"username": "alburthoffman", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "colindean", "commitsCount": 3}, {"username": "doedje", "commitsCount": 3}, {"username": "elad", "commitsCount": 3}, {"username": "eternalharvest", "commitsCount": 3}, {"username": "kevinzwhuang", "commitsCount": 3}, {"username": "massic80", "commitsCount": 3}, {"username": "mikeparas", "commitsCount": 3}, {"username": "nanomosfet", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "ozon1234", "commitsCount": 3}, {"username": "philjohnson789", "commitsCount": 3}, {"username": "sgorsh", "commitsCount": 3}, {"username": "socketpair", "commitsCount": 3}, {"username": "theawesomenayak", "commitsCount": 3}, {"username": "wernerm", "commitsCount": 3}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 133}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 136}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 142}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4244, "testsSize": 7920699, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://coveralls.io/repos/moment/moment/badge.svg?branch=develop", "service": "https://coveralls.io/repos/moment/moment/badge.svg?branch=develop", "shields": "https://img.shields.io/coveralls/moment/moment/develop.svg", "content": "https://img.shields.io/coveralls/moment/moment/develop.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "develop"}}}, {"urls": {"original": "http://img.shields.io/npm/v/moment.svg?style=flat", "shields": "https://img.shields.io/npm/v/moment.svg", "content": "https://img.shields.io/npm/v/moment.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/moment.svg?style=flat", "shields": "https://img.shields.io/npm/dm/moment.svg", "content": "https://img.shields.io/npm/dm/moment.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "http://img.shields.io/travis/moment/moment/develop.svg?style=flat", "service": "https://api.travis-ci.org/moment/moment.svg?branch=develop", "shields": "https://img.shields.io/travis/moment/moment/develop.svg", "content": "https://img.shields.io/travis/moment/moment/develop.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "develop"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.88}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.982, "health": 1, "branding": 1}, "popularity": {"communityInterest": 52997, "downloadsCount": 50593884, "downloadsAcceleration": 103340.9651445967, "dependentsCount": 27088}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.12611783481969974}}, "score": {"final": 0.9039370852271544, "detail": {"quality": 0.9975911326829575, "popularity": 0.9345019539051507, "maintenance": 0.7930973187298986}}}}, {"ts-jest": {"analyzedAt": "2020-06-22T07:26:17.576Z", "collected": {"metadata": {"name": "ts-jest", "scope": "unscoped", "version": "26.1.1", "description": "A preprocessor with source maps support to help use TypeScript with Jest", "keywords": ["jest", "typescript", "sourcemap", "react", "testing"], "date": "2020-06-22T07:25:42.097Z", "author": {"name": "Kulshekhar Kabra", "email": "kulshekhar@users.noreply.github.com", "url": "https://github.com/kulshekhar"}, "publisher": {"username": "tsjest", "email": "kulshekhar+tsjest@gmail.com"}, "maintainers": [{"username": "anhpnnd", "email": "anhpnnd@gmail.com"}, {"username": "kul", "email": "kulshekhar+npm@gmail.com"}, {"username": "tsjest", "email": "kulshekhar+tsjest@gmail.com"}], "contributors": [{"name": "Huafu Gandon", "email": "huafu.gandon@gmail.com", "url": "https://github.com/huafu"}, {"name": "Anh Pham", "email": "anhpnnd@gmail.com", "url": "https://github.com/ahnpnl"}, {"name": "Gustav Wengel", "email": "gustavwengel@gmail.com", "url": "https://github.com/GeeWee"}], "repository": {"type": "git", "url": "git+https://github.com/kulshekhar/ts-jest.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-jest", "homepage": "https://kulshekhar.github.io/ts-jest", "repository": "https://github.com/kulshekhar/ts-jest", "bugs": "https://github.com/kulshekhar/ts-jest/issues"}, "license": "MIT", "dependencies": {"bs-logger": "0.x", "buffer-from": "1.x", "fast-json-stable-stringify": "2.x", "json5": "2.x", "lodash.memoize": "4.x", "make-error": "1.x", "micromatch": "4.x", "mkdirp": "1.x", "semver": "7.x", "yargs-parser": "18.x"}, "devDependencies": {"@commitlint/cli": "8.x", "@commitlint/config-conventional": "8.x", "@jest/transform": "26.x", "@jest/types": "26.x", "@types/babel__core": "7.x", "@types/buffer-from": "latest", "@types/cross-spawn": "latest", "@types/fs-extra": "latest", "@types/jest": "25.x", "@types/js-yaml": "latest", "@types/json5": "latest", "@types/lodash.memoize": "4.x", "@types/lodash.merge": "4.x", "@types/lodash.set": "4.x", "@types/micromatch": "4.x", "@types/mkdirp": "latest", "@types/node": "10.x", "@types/react": "16.x", "@types/semver": "latest", "@types/yargs": "latest", "@types/yargs-parser": "15.x", "@typescript-eslint/eslint-plugin": "latest", "@typescript-eslint/parser": "latest", "conventional-changelog-cli": "2.x", "cross-spawn": "latest", "eslint": "7.x", "eslint-config-prettier": "latest", "eslint-plugin-jest": "latest", "eslint-plugin-jsdoc": "latest", "eslint-plugin-prettier": "latest", "fs-extra": "9.x", "glob-gitignore": "latest", "husky": "4.x", "jest": "26.x", "js-yaml": "latest", "lint-staged": "latest", "lodash.merge": "4.x", "lodash.set": "4.x", "npm-run-all": "latest", "prettier": "2.x", "source-map": "latest", "typescript": "3.x"}, "peerDependencies": {"jest": ">=26 <27", "typescript": ">=3.8 <4.0"}, "releases": [{"from": "2020-05-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 1}, {"from": "2020-03-24T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 12}, {"from": "2019-12-25T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 17}, {"from": "2019-06-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 19}, {"from": "2018-06-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 41}], "hasTestScript": true, "readme": "# ts-jest\n\n[![npm version](https://badge.fury.io/js/ts-jest.svg)](https://badge.fury.io/js/ts-jest)\n[![NPM downloads](https://img.shields.io/npm/dm/ts-jest.svg?style=flat)](https://npmjs.org/package/ts-jest)\n[![Known Vulnerabilities](https://snyk.io/test/github/kulshekhar/ts-jest/badge.svg)](https://snyk.io/test/github/kulshekhar/ts-jest)\n[![Coverage Status](https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master)](https://coveralls.io/github/kulshekhar/ts-jest?branch=master)\n[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=kulshekhar/ts-jest)](https://dependabot.com)\n[![Build Status](https://travis-ci.com/kulshekhar/ts-jest.svg?branch=master)](https://travis-ci.com/kulshekhar/ts-jest)\n[![doc-generator](https://github.com/kulshekhar/ts-jest/workflows/doc-generator/badge.svg)](https://github.com/kulshekhar/ts-jest/actions)\n[![release-and-publish](https://github.com/kulshekhar/ts-jest/workflows/release-and-publish/badge.svg)](https://github.com/kulshekhar/ts-jest/actions)\n\n<img src=\"./icon.png\" align=\"right\" title=\"ts-jest Logo\" width=\"128\" height=\"128\">\n\n**`ts-jest`** is a TypeScript preprocessor with source map support for Jest that lets you use Jest to test projects written in TypeScript.\n\nIt supports all features of TypeScript including type-checking. [Read more about Babel7 + `preset-typescript` **vs** TypeScript (and `ts-jest`)](https://kulshekhar.github.io/ts-jest/user/babel7-or-ts).\n\n---\n\n| We are not doing semantic versioning and `23.10` is a re-write, run `npm i -D ts-jest@\"<23.10.0\"` to go back to the previous version |\n|---|\n\n[<img src=\"./docs/assets/img/documentation.png\" align=\"left\" height=\"24\"> View the online documentation (usage & technical)](https://kulshekhar.github.io/ts-jest)\n\n[<img src=\"./docs/assets/img/slack.png\" align=\"left\" height=\"24\"> Ask for some help in the `ts-jest` community of Slack](https://bit.ly/3bRHFPQ)\n\n[<img src=\"./docs/assets/img/troubleshooting.png\" align=\"left\" height=\"24\"> Before reporting any issue, be sure to check the troubleshooting page](TROUBLESHOOTING.md)\n\n[<img src=\"./docs/assets/img/pull-request.png\" align=\"left\" height=\"24\"> We're looking for collaborators! Want to help improve `ts-jest`?](https://github.com/kulshekhar/ts-jest/issues/223)\n\n---\n\n## Getting Started\n\nThese instructions will get you setup to use `ts-jest` in your project. For more detailed documentation, please check [online documentation](https://kulshekhar.github.io/ts-jest).\n\n| | using npm | using yarn |\n|---:|---|---|\n| **Prerequisites** | `npm i -D jest typescript` | `yarn add --dev jest typescript` |\n| **Installing** | `npm i -D ts-jest @types/jest` | `yarn add --dev ts-jest @types/jest` |\n| **Creating config** | `npx ts-jest config:init` | `yarn ts-jest config:init` |\n| **Running tests** | `npm t` or `npx jest` | `yarn test` or `yarn jest` |\n\n## Built With\n\n* [TypeScript](https://www.typescriptlang.org/) - JavaScript that scales\n* [Jest](https://jestjs.io/) - Delightful JavaScript Testing\n* [`ts-jest`](https://kulshekhar.github.io/ts-jest) - Jest processor for TypeScript _(yes, `ts-jest` uses itself for its tests)_\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe **DO NOT** use [SemVer](http://semver.org/) for versioning. Though you can think about SemVer when reading our version, except our major number follows the one of Jest. For the versions available, see the [tags on this repository](https://github.com/kulshekhar/ts-jest/tags).\n\n## Authors/maintainers\n\n* **Kulshekhar Kabra** - [kulshekhar](https://github.com/kulshekhar)\n* **Gustav Wengel** - [GeeWee](https://github.com/GeeWee)\n* **Ahn** - [ahnpnl](https://github.com/ahnpnl)\n* **Huafu Gandon** - [huafu](https://github.com/huafu)\n\nSee also the list of [contributors](https://github.com/kulshekhar/ts-jest/contributors) who participated in this project.\n\n## Supporters\n\n- [JetBrains](https://www.jetbrains.com/?from=ts-jest) has been kind enough to support ts-jest with an [open source license](https://www.jetbrains.com/community/opensource/?from=ts-jest).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details"}, "npm": {"downloads": [{"from": "2020-06-21T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 115402}, {"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 3045848}, {"from": "2020-05-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 12077556}, {"from": "2020-03-24T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 36299507}, {"from": "2019-12-25T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 62465459}, {"from": "2019-06-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 100436431}], "dependentsCount": 866, "starsCount": 6}, "github": {"homepage": "https://kulshekhar.github.io/ts-jest", "starsCount": 3618, "forksCount": 268, "subscribersCount": 31, "issues": {"count": 1744, "openCount": 18, "distribution": {"3600": 354, "10800": 163, "32400": 214, "97200": 285, "291600": 196, "874800": 164, "2624400": 124, "7873200": 97, "23619600": 91, "70858800": 55, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "kulshekhar", "commitsCount": 338}, {"username": "huafu", "commitsCount": 308}, {"username": "ahnpnl", "commitsCount": 107}, {"username": "GeeWee", "commitsCount": 84}, {"username": "greenkeeper[bot]", "commitsCount": 66}, {"username": "Igmat", "commitsCount": 54}, {"username": "dependabot[bot]", "commitsCount": 52}, {"username": "morajabi", "commitsCount": 20}, {"username": "cspotcode", "commitsCount": 17}, {"username": "thymikee", "commitsCount": 13}, {"username": "kwonoj", "commitsCount": 12}, {"username": "japhar81", "commitsCount": 9}, {"username": "ds300", "commitsCount": 7}, {"username": "beckend", "commitsCount": 6}, {"username": "joscha", "commitsCount": 6}, {"username": "tvald", "commitsCount": 6}, {"username": "dependabot-preview[bot]", "commitsCount": 5}, {"username": "alan-agius4", "commitsCount": 4}, {"username": "greenkeeperio-bot", "commitsCount": 4}, {"username": "gstamac", "commitsCount": 4}, {"username": "lijunle", "commitsCount": 4}, {"username": "Bnaya", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 3}, {"username": "G-Rath", "commitsCount": 3}, {"username": "alexjoverm", "commitsCount": 3}, {"username": "sodatea", "commitsCount": 3}, {"username": "tkrotoff", "commitsCount": 3}, {"username": "trivikr", "commitsCount": 3}, {"username": "whitetrefoil", "commitsCount": 3}, {"username": "4kochi", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "GoodForOneFare", "commitsCount": 2}, {"username": "JoonsungUm", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "anshulguleria", "commitsCount": 2}, {"username": "bcruddy", "commitsCount": 2}, {"username": "chyzwar", "commitsCount": 2}, {"username": "hgenru", "commitsCount": 2}, {"username": "jdhuntington", "commitsCount": 2}, {"username": "jens-duttke", "commitsCount": 2}, {"username": "masters3d", "commitsCount": 2}, {"username": "maxdeviant", "commitsCount": 2}, {"username": "mgambati", "commitsCount": 2}, {"username": "orta", "commitsCount": 2}, {"username": "pelotom", "commitsCount": 2}, {"username": "richsilv", "commitsCount": 2}, {"username": "screendriver", "commitsCount": 2}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "Blasz", "commitsCount": 1}, {"username": "DorianGrey", "commitsCount": 1}, {"username": "IOuser", "commitsCount": 1}, {"username": "Kethku", "commitsCount": 1}, {"username": "Mackignacio", "commitsCount": 1}, {"username": "MicahChalmer", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "OrkhanAlikhanov", "commitsCount": 1}, {"username": "Xapphire13", "commitsCount": 1}, {"username": "airato", "commitsCount": 1}, {"username": "andreialecu", "commitsCount": 1}, {"username": "artursvonda", "commitsCount": 1}, {"username": "chandlerprall", "commitsCount": 1}, {"username": "chris-mcdermut-vacasa", "commitsCount": 1}, {"username": "danilobuerger", "commitsCount": 1}, {"username": "dawsbot", "commitsCount": 1}, {"username": "derindutz", "commitsCount": 1}, {"username": "eelcowen", "commitsCount": 1}, {"username": "eteeselink", "commitsCount": 1}, {"username": "evpozdniakov", "commitsCount": 1}, {"username": "haines", "commitsCount": 1}, {"username": "helmutschneider", "commitsCount": 1}, {"username": "iRoachie", "commitsCount": 1}, {"username": "iclanton", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "jbpionnier", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jeznag", "commitsCount": 1}, {"username": "jimthedev", "commitsCount": 1}, {"username": "jmheik", "commitsCount": 1}, {"username": "joaovieira", "commitsCount": 1}, {"username": "jure", "commitsCount": 1}, {"username": "jussikinnula", "commitsCount": 1}, {"username": "jwbay", "commitsCount": 1}, {"username": "kamijin-fanta", "commitsCount": 1}, {"username": "kareemkibue", "commitsCount": 1}, {"username": "lemonmade", "commitsCount": 1}, {"username": "lyy011lyy", "commitsCount": 1}, {"username": "maniator", "commitsCount": 1}, {"username": "misantronic", "commitsCount": 1}, {"username": "patrickhousley", "commitsCount": 1}, {"username": "posgarou", "commitsCount": 1}, {"username": "reod", "commitsCount": 1}, {"username": "rikkit", "commitsCount": 1}, {"username": "smcenlly", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "tanettrimas", "commitsCount": 1}, {"username": "tonyhallett", "commitsCount": 1}, {"username": "toolness", "commitsCount": 1}, {"username": "topaxi", "commitsCount": 1}, {"username": "totopsy", "commitsCount": 1}, {"username": "xogeny", "commitsCount": 1}], "commits": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 2}, {"from": "2020-05-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 57}, {"from": "2020-03-24T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 214}, {"from": "2019-12-25T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 324}, {"from": "2019-06-23T00:00:00.000Z", "to": "2020-06-22T00:00:00.000Z", "count": 451}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 4286, "testsSize": 293752, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/ts-jest.svg?style=flat", "shields": "https://img.shields.io/npm/dm/ts-jest.svg", "content": "https://img.shields.io/npm/dm/ts-jest.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/kulshekhar/ts-jest/master.svg", "content": "https://img.shields.io/coveralls/kulshekhar/ts-jest/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 1, "branding": 0.7}, "popularity": {"communityInterest": 4023, "downloadsCount": 12099835.666666666, "downloadsAcceleration": 49819.72988964994, "dependentsCount": 866}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8366219617538425}}, "score": {"final": 0.873227153998176, "detail": {"quality": 0.9984211114364425, "popularity": 0.6393752613598225, "maintenance": 0.9997699402608727}}}}, {"axios": {"analyzedAt": "2020-06-26T15:12:42.527Z", "collected": {"metadata": {"name": "axios", "scope": "unscoped", "version": "0.19.2", "description": "Promise based HTTP client for the browser and node.js", "keywords": ["xhr", "http", "ajax", "promise", "node"], "date": "2020-01-22T04:25:53.354Z", "author": {"name": "Matt Zabriskie"}, "publisher": {"username": "emilyemorehouse", "email": "emilyemorehouse@gmail.com"}, "maintainers": [{"username": "mzabriskie", "email": "mzabriskie@gmail.com"}, {"username": "nickuraltsev", "email": "nick.uraltsev@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/axios/axios.git"}, "links": {"npm": "https://www.npmjs.com/package/axios", "homepage": "https://github.com/axios/axios", "repository": "https://github.com/axios/axios", "bugs": "https://github.com/axios/axios/issues"}, "license": "MIT", "dependencies": {"follow-redirects": "1.5.10"}, "devDependencies": {"bundlesize": "^0.17.0", "coveralls": "^3.0.0", "es6-promise": "^4.2.4", "grunt": "^1.0.2", "grunt-banner": "^0.6.0", "grunt-cli": "^1.2.0", "grunt-contrib-clean": "^1.1.0", "grunt-contrib-watch": "^1.0.0", "grunt-eslint": "^20.1.0", "grunt-karma": "^2.0.0", "grunt-mocha-test": "^0.13.3", "grunt-ts": "^6.0.0-beta.19", "grunt-webpack": "^1.0.18", "istanbul-instrumenter-loader": "^1.0.0", "jasmine-core": "^2.4.1", "karma": "^1.3.0", "karma-chrome-launcher": "^2.2.0", "karma-coverage": "^1.1.1", "karma-firefox-launcher": "^1.1.0", "karma-jasmine": "^1.1.1", "karma-jasmine-ajax": "^0.1.13", "karma-opera-launcher": "^1.0.0", "karma-safari-launcher": "^1.0.0", "karma-sauce-launcher": "^1.2.0", "karma-sinon": "^1.0.5", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^1.7.0", "load-grunt-tasks": "^3.5.2", "minimist": "^1.2.0", "mocha": "^5.2.0", "sinon": "^4.5.0", "typescript": "^2.8.1", "url-search-params": "^0.10.0", "webpack": "^1.13.1", "webpack-dev-server": "^1.14.1"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![build status](https://img.shields.io/travis/axios/axios/master.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest \u2714 | Latest \u2714 | Latest \u2714 | Latest \u2714 | Latest \u2714 | 11 \u2714 |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing cdn:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\n### note: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:\n\n```js\nconst axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings\n```\n\nPerforming a `GET` request\n\n```js\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\n> Explorer and older browsers, so use with caution.\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency\n\nHelper functions for dealing with concurrent requests.\n\n##### axios.all(iterable)\n##### axios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  // syntax alternative to send data into the body\n  // method post\n  // only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  // Please note that only HTTP Basic auth is configurable through this parameter.\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you need to remove an interceptor later you can.\n\n```js\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nUsing the `validateStatus` config option, you can define HTTP code(s) that should throw an error.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\n```\n\nUsing `toJSON` you get an object with more information about the HTTP error.\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\nOr in another way (ES6),\n\n```js\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\n```\n\n### Node.js\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n###### NOTE\nThe `qs` library is preferable if you need to stringify nested objects, as the `querystring` method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\n[MIT](LICENSE)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1844948}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8278136}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 41910445}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 121437924}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 218993184}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 364924661}], "dependentsCount": 26438, "starsCount": 559}, "github": {"starsCount": 74606, "forksCount": 6809, "subscribersCount": 1200, "issues": {"count": 3059, "openCount": 270, "distribution": {"3600": 252, "10800": 102, "32400": 134, "97200": 234, "291600": 282, "874800": 310, "2624400": 316, "7873200": 341, "23619600": 412, "70858800": 552, "212576400": 124}, "isDisabled": false}, "contributors": [{"username": "mzabriskie", "commitsCount": 220}, {"username": "nickuraltsev", "commitsCount": 105}, {"username": "rubennorte", "commitsCount": 16}, {"username": "JustinBeckwith", "commitsCount": 14}, {"username": "emilyemorehouse", "commitsCount": 14}, {"username": "codeclown", "commitsCount": 12}, {"username": "RikkiGibson", "commitsCount": 10}, {"username": "chinesedfan", "commitsCount": 10}, {"username": "yasuf", "commitsCount": 7}, {"username": "idan", "commitsCount": 6}, {"username": "jasonsaayman", "commitsCount": 5}, {"username": "Alanscut", "commitsCount": 4}, {"username": "felipewmartins", "commitsCount": 4}, {"username": "jtangelder", "commitsCount": 4}, {"username": "38elements", "commitsCount": 3}, {"username": "Gerhut", "commitsCount": 3}, {"username": "bomsy", "commitsCount": 3}, {"username": "ctimmerm", "commitsCount": 3}, {"username": "maxhoffmann", "commitsCount": 3}, {"username": "staticinstance", "commitsCount": 3}, {"username": "Deamon87", "commitsCount": 2}, {"username": "Jarlotee", "commitsCount": 2}, {"username": "Khaledgarbaya", "commitsCount": 2}, {"username": "Punit-wingify", "commitsCount": 2}, {"username": "ajcrites", "commitsCount": 2}, {"username": "anthwinter", "commitsCount": 2}, {"username": "arpit2438735", "commitsCount": 2}, {"username": "ascott18", "commitsCount": 2}, {"username": "avindra", "commitsCount": 2}, {"username": "bttmly", "commitsCount": 2}, {"username": "davidfou", "commitsCount": 2}, {"username": "delirius325", "commitsCount": 2}, {"username": "dericgw", "commitsCount": 2}, {"username": "fgnass", "commitsCount": 2}, {"username": "grumblerchester", "commitsCount": 2}, {"username": "jcready", "commitsCount": 2}, {"username": "josh-egan", "commitsCount": 2}, {"username": "lachenmayer", "commitsCount": 2}, {"username": "nnarhinen", "commitsCount": 2}, {"username": "penance316", "commitsCount": 2}, {"username": "reggi", "commitsCount": 2}, {"username": "rogeriochaves", "commitsCount": 2}, {"username": "ruchigoyal2005", "commitsCount": 2}, {"username": "tomaash", "commitsCount": 2}, {"username": "torarnek", "commitsCount": 2}, {"username": "1pm", "commitsCount": 1}, {"username": "A-Tokyo", "commitsCount": 1}, {"username": "Chalarangelo", "commitsCount": 1}, {"username": "Fonger", "commitsCount": 1}, {"username": "Frostack", "commitsCount": 1}, {"username": "IVLIU", "commitsCount": 1}, {"username": "JitixPhotobox", "commitsCount": 1}, {"username": "JounQin", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "M-shin", "commitsCount": 1}, {"username": "Maskedman99", "commitsCount": 1}, {"username": "anubhavsrivastava", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "cprayer", "commitsCount": 1}, {"username": "crhistianramirez", "commitsCount": 1}, {"username": "cygnusss", "commitsCount": 1}, {"username": "delventhalz", "commitsCount": 1}, {"username": "ehrhart", "commitsCount": 1}, {"username": "fureweb-com", "commitsCount": 1}, {"username": "galkin", "commitsCount": 1}, {"username": "gualopezb", "commitsCount": 1}, {"username": "hayawata3626", "commitsCount": 1}, {"username": "helios1101", "commitsCount": 1}, {"username": "heloflier", "commitsCount": 1}, {"username": "hexaez", "commitsCount": 1}, {"username": "huangzuizui", "commitsCount": 1}, {"username": "ianwijma", "commitsCount": 1}, {"username": "iwata", "commitsCount": 1}, {"username": "jennynju", "commitsCount": 1}, {"username": "jimmy-liao-gogoro", "commitsCount": 1}, {"username": "leeniu", "commitsCount": 1}, {"username": "lukepolo", "commitsCount": 1}, {"username": "marcinx", "commitsCount": 1}, {"username": "marlonbarcarol", "commitsCount": 1}, {"username": "masterots", "commitsCount": 1}, {"username": "michalzaq12", "commitsCount": 1}, {"username": "mindriven", "commitsCount": 1}, {"username": "notbucai", "commitsCount": 1}, {"username": "nycdavid", "commitsCount": 1}, {"username": "ohtaeg", "commitsCount": 1}, {"username": "precto1285", "commitsCount": 1}, {"username": "rbown", "commitsCount": 1}, {"username": "remcohaszing", "commitsCount": 1}, {"username": "rockcs1992", "commitsCount": 1}, {"username": "ryouaki", "commitsCount": 1}, {"username": "sazzy4o", "commitsCount": 1}, {"username": "simoneb", "commitsCount": 1}, {"username": "sufuf3", "commitsCount": 1}, {"username": "svenefftinge", "commitsCount": 1}, {"username": "textbook", "commitsCount": 1}, {"username": "the-vampiire", "commitsCount": 1}, {"username": "trodrigues", "commitsCount": 1}, {"username": "unguul", "commitsCount": 1}, {"username": "xchunzhao", "commitsCount": 1}, {"username": "zgayjjf", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 11}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 32}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 59}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 103}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 22482, "testsSize": 120330, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/axios.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/axios.svg", "content": "https://img.shields.io/npm/v/axios.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/axios/axios/master.svg?style=flat-square", "service": "https://api.travis-ci.org/axios/axios.svg?branch=master", "shields": "https://img.shields.io/travis/axios/axios/master.svg", "content": "https://img.shields.io/travis/axios/axios/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square", "service": "https://coveralls.io/repos/mzabriskie/axios/badge.svg", "shields": "https://img.shields.io/coveralls/mzabriskie/axios.svg", "content": "https://img.shields.io/coveralls/mzabriskie/axios.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/dm/axios.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/axios.svg", "content": "https://img.shields.io/npm/dm/axios.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square", "service": "https://badges.gitter.im/mzabriskie/axios.svg", "shields": "https://img.shields.io/gitter/room/mzabriskie/axios.svg", "content": "https://img.shields.io/gitter/room/mzabriskie/axios.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["eslint"], "coverage": 0.94, "outdatedDependencies": {"follow-redirects": {"required": "1.5.10", "stable": "1.12.1", "latest": "1.12.1"}}}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.991, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 83274, "downloadsCount": 40479308, "downloadsAcceleration": 153514.11244292237, "dependentsCount": 26438}, "maintenance": {"releasesFrequency": 0.5551369863013699, "commitsFrequency": 0.9993630136986301, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8326303006249843, "detail": {"quality": 0.9071462164903605, "popularity": 0.9429656874801096, "maintenance": 0.6584241287423939}}}}, {"babel-preset-stage-0": {"analyzedAt": "2020-05-01T15:38:25.186Z", "collected": {"metadata": {"name": "babel-preset-stage-0", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for stage 0 plugins", "date": "2017-04-07T15:19:47.614Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-stage-0", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-transform-do-expressions": "^6.22.0", "babel-plugin-transform-function-bind": "^6.22.0", "babel-preset-stage-1": "^6.24.1"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.8.3", "@babel/plugin-proposal-dynamic-import": "^7.8.3", "@babel/plugin-proposal-export-namespace-from": "^7.8.3", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/plugin-transform-flow-strip-types": "^7.9.0", "@babel/plugin-transform-for-of": "^7.9.0", "@babel/plugin-transform-modules-commonjs": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/preset-flow": "^7.9.0", "@babel/register": "^7.9.0", "@babel/runtime": "^7.9.6", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^1.19.1", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "^1.32.1", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2018-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-stage-0\n\n> Babel preset for stage 0 plugins.\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-stage-0\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"stage-0\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets stage-0\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"stage-0\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 66180}, {"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 347218}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1597373}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 4794516}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 9031419}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 20484478}], "dependentsCount": 2142, "starsCount": 26}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36432, "forksCount": 4257, "subscribersCount": 870, "issues": {"count": 11447, "openCount": 752, "distribution": {"3600": 2444, "10800": 903, "32400": 1057, "97200": 1217, "291600": 1036, "874800": 994, "2624400": 843, "7873200": 767, "23619600": 846, "70858800": 1088, "212576400": 252}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1260}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 462}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 176}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 150}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 12}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 53}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 205}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 466}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 761}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11778783, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 41684, "downloadsCount": 1598172, "downloadsAcceleration": -2205.8496004566205, "dependentsCount": 2142}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2504746617701431}}, "score": {"final": 0.7004142158494975, "detail": {"quality": 0.9859861139636935, "popularity": 0.5784235789116059, "maintenance": 0.5776289401180781}}}}, {"eslint-plugin-promise": {"analyzedAt": "2020-06-18T05:02:58.074Z", "collected": {"metadata": {"name": "eslint-plugin-promise", "scope": "unscoped", "version": "4.2.1", "description": "Enforce best practices for JavaScript promises", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "promise", "promises"], "date": "2019-06-25T17:28:20.040Z", "author": {"name": "jden", "email": "jason@denizac.org"}, "publisher": {"username": "xjamundx", "email": "jamund@gmail.com"}, "maintainers": [{"username": "macklinu", "email": "macklinu@gmail.com"}, {"username": "xjamundx", "email": "jamund@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/xjamundx/eslint-plugin-promise.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-promise", "homepage": "https://github.com/xjamundx/eslint-plugin-promise#readme", "repository": "https://github.com/xjamundx/eslint-plugin-promise", "bugs": "https://github.com/xjamundx/eslint-plugin-promise/issues"}, "license": "ISC", "devDependencies": {"doctoc": "^1.3.0", "eslint": "^5.16.0", "eslint-config-prettier": "^3.0.1", "eslint-plugin-eslint-plugin": "^1.4.0", "eslint-plugin-jest": "^21.21.0", "eslint-plugin-node": "^7.0.1", "eslint-plugin-prettier": "^2.6.2", "husky": "^0.14.3", "jest": "^24.5.0", "jest-runner-eslint": "^0.7.3", "lint-staged": "^7.2.2", "prettier": "^1.14.2"}, "releases": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 2}, {"from": "2018-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# eslint-plugin-promise\n\nEnforce best practices for JavaScript promises.\n\n[![travis-ci](https://travis-ci.org/xjamundx/eslint-plugin-promise.svg)](https://travis-ci.org/xjamundx/eslint-plugin-promise)\n[![npm version](https://badge.fury.io/js/eslint-plugin-promise.svg)](https://www.npmjs.com/package/eslint-plugin-promise)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Rules](#rules)\n- [Maintainers](#maintainers)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm install eslint --save-dev\n```\n\nNext, install `eslint-plugin-promise`:\n\n```\n$ npm install eslint-plugin-promise --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must\nalso install `eslint-plugin-promise` globally.\n\n## Usage\n\nAdd `promise` to the plugins section of your `.eslintrc.json` configuration\nfile. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"promise\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"promise/always-return\": \"error\",\n    \"promise/no-return-wrap\": \"error\",\n    \"promise/param-names\": \"error\",\n    \"promise/catch-or-return\": \"error\",\n    \"promise/no-native\": \"off\",\n    \"promise/no-nesting\": \"warn\",\n    \"promise/no-promise-in-callback\": \"warn\",\n    \"promise/no-callback-in-promise\": \"warn\",\n    \"promise/avoid-new\": \"warn\",\n    \"promise/no-new-statics\": \"error\",\n    \"promise/no-return-in-finally\": \"warn\",\n    \"promise/valid-params\": \"warn\"\n  }\n}\n```\n\nor start with the recommended rule set:\n\n```json\n{\n  \"extends\": [\"plugin:promise/recommended\"]\n}\n```\n\n## Rules\n\n| rule                                                     | description                                                                      | recommended | fixable  |\n| -------------------------------------------------------- | -------------------------------------------------------------------------------- | ----------- | -------- |\n| [`catch-or-return`][catch-or-return]                     | Enforces the use of `catch()` on un-returned promises.                           | :bangbang:  |          |\n| [`no-return-wrap`][no-return-wrap]                       | Avoid wrapping values in `Promise.resolve` or `Promise.reject` when not needed.  | :bangbang:  |          |\n| [`param-names`][param-names]                             | Enforce consistent param names and ordering when creating new promises.          | :bangbang:  |          |\n| [`always-return`][always-return]                         | Return inside each `then()` to create readable and reusable Promise chains.      | :bangbang:  |          |\n| [`no-native`][no-native]                                 | In an ES5 environment, make sure to create a `Promise` constructor before using. |             |          |\n| [`no-nesting`][no-nesting]                               | Avoid nested `then()` or `catch()` statements                                    | :warning:   |          |\n| [`no-promise-in-callback`][no-promise-in-callback]       | Avoid using promises inside of callbacks                                         | :warning:   |          |\n| [`no-callback-in-promise`][no-callback-in-promise]       | Avoid calling `cb()` inside of a `then()` (use [nodeify][] instead)              | :warning:   |          |\n| [`avoid-new`][avoid-new]                                 | Avoid creating `new` promises outside of utility libs (use [pify][] instead)     |             |          |\n| [`no-new-statics`][no-new-statics]                       | Avoid calling `new` on a Promise static method                                   | :bangbang:  | :wrench: |\n| [`no-return-in-finally`][no-return-in-finally]           | Disallow return statements in `finally()`                                        | :warning:   |          |\n| [`valid-params`][valid-params]                           | Ensures the proper number of arguments are passed to Promise functions           | :warning:   |          |\n| [`prefer-await-to-then`][prefer-await-to-then]           | Prefer `await` to `then()` for reading Promise values                            | :seven:     |          |\n| [`prefer-await-to-callbacks`][prefer-await-to-callbacks] | Prefer async/await to the callback pattern                                       | :seven:     |          |\n\n**Key**\n\n| icon       | description                                     |\n| ---------- | ----------------------------------------------- |\n| :bangbang: | Reports as error in recommended configuration   |\n| :warning:  | Reports as warning in recommended configuration |\n| :seven:    | ES2017 Async Await rules                        |\n| :wrench:   | Rule is fixable with `eslint --fix`             |\n\n## Maintainers\n\n- Jamund Ferguson - [@xjamundx][]\n- Macklin Underdown - [@macklinu][]\n\n## License\n\n- (c) MMXV jden <mailto:jason@denizac.org> - ISC license.\n- (c) 2016 Jamund Ferguson <mailto:jamund@gmail.com> - ISC license.\n\n[catch-or-return]: docs/rules/catch-or-return.md\n[no-return-wrap]: docs/rules/no-return-wrap.md\n[param-names]: docs/rules/param-names.md\n[always-return]: docs/rules/always-return.md\n[no-native]: docs/rules/no-native.md\n[no-nesting]: docs/rules/no-nesting.md\n[no-promise-in-callback]: docs/rules/no-promise-in-callback.md\n[no-callback-in-promise]: docs/rules/no-callback-in-promise.md\n[avoid-new]: docs/rules/avoid-new.md\n[no-new-statics]: docs/rules/no-new-statics.md\n[no-return-in-finally]: docs/rules/no-return-in-finally.md\n[valid-params]: docs/rules/valid-params.md\n[prefer-await-to-then]: docs/rules/prefer-await-to-then.md\n[prefer-await-to-callbacks]: docs/rules/prefer-await-to-callbacks.md\n[nodeify]: https://www.npmjs.com/package/nodeify\n[pify]: https://www.npmjs.com/package/pify\n[@macklinu]: https://github.com/macklinu\n[@xjamundx]: https://github.com/xjamundx"}, "npm": {"downloads": [{"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 334060}, {"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 1751028}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 7643562}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 22266161}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 40056790}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 72795420}], "dependentsCount": 1486, "starsCount": 24}, "github": {"starsCount": 538, "forksCount": 67, "subscribersCount": 8, "issues": {"count": 192, "openCount": 49, "distribution": {"3600": 32, "10800": 3, "32400": 2, "97200": 11, "291600": 25, "874800": 10, "2624400": 17, "7873200": 28, "23619600": 28, "70858800": 24, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "macklinu", "commitsCount": 50}, {"username": "xjamundx", "commitsCount": 41}, {"username": "ChristianMurphy", "commitsCount": 4}, {"username": "ahuff44", "commitsCount": 3}, {"username": "ddsol", "commitsCount": 3}, {"username": "ota-meshi", "commitsCount": 3}, {"username": "thisgeek", "commitsCount": 3}, {"username": "102", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "feross", "commitsCount": 2}, {"username": "geoffdutton", "commitsCount": 2}, {"username": "lparry", "commitsCount": 2}, {"username": "mikegreiling", "commitsCount": 2}, {"username": "zloirock", "commitsCount": 2}, {"username": "adrianmcli", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "darrachequesne", "commitsCount": 1}, {"username": "dbrockman", "commitsCount": 1}, {"username": "humphd", "commitsCount": 1}, {"username": "jfmengels", "commitsCount": 1}, {"username": "jokeyrhyme", "commitsCount": 1}, {"username": "jshemas", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "markfields", "commitsCount": 1}, {"username": "paleite", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "sudo-suhas", "commitsCount": 1}, {"username": "thiagocaiubi", "commitsCount": 1}, {"username": "tianjianchn", "commitsCount": 1}], "commits": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 1}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 1}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6195, "testsSize": 35766, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/xjamundx/eslint-plugin-promise.svg", "service": "https://api.travis-ci.org/xjamundx/eslint-plugin-promise.svg", "shields": "https://img.shields.io/travis/xjamundx/eslint-plugin-promise.svg", "content": "https://img.shields.io/travis/xjamundx/eslint-plugin-promise.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 666, "downloadsCount": 7422053.666666667, "downloadsAcceleration": 19611.027130898015, "dependentsCount": 1486}, "maintenance": {"releasesFrequency": 0.1726027397260274, "commitsFrequency": 0.09852739726027399, "openIssues": 0.9079861111111112, "issuesDistribution": 0}}, "score": {"final": 0.6310378636874517, "detail": {"quality": 0.9651362625005069, "popularity": 0.5555163629993869, "maintenance": 0.42018930825004075}}}}, {"autoprefixer": {"analyzedAt": "2020-06-24T04:01:38.900Z", "collected": {"metadata": {"name": "autoprefixer", "scope": "unscoped", "version": "9.8.4", "description": "Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website", "keywords": ["autoprefixer", "css", "prefix", "postcss", "postcss-plugin"], "date": "2020-06-24T03:31:09.740Z", "author": {"name": "Andrey Sitnik", "email": "andrey@sitnik.ru", "username": "ai"}, "publisher": {"username": "ai", "email": "andrey@sitnik.ru"}, "maintainers": [{"username": "11bit", "email": "buryak.ivan@yandex.ru"}, {"username": "ai", "email": "andrey@sitnik.ru"}, {"username": "beneb", "email": "beneb.info@gmail.com"}, {"username": "kossnocorp", "email": "kossnocorp@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/postcss/autoprefixer.git"}, "links": {"npm": "https://www.npmjs.com/package/autoprefixer", "homepage": "https://github.com/postcss/autoprefixer#readme", "repository": "https://github.com/postcss/autoprefixer", "bugs": "https://github.com/postcss/autoprefixer/issues"}, "license": "MIT", "dependencies": {"browserslist": "^4.12.0", "caniuse-lite": "^1.0.30001087", "colorette": "^1.2.0", "normalize-range": "^0.1.2", "num2fraction": "^1.2.2", "postcss": "^7.0.32", "postcss-value-parser": "^4.1.0"}, "devDependencies": {"@babel/core": "^7.10.3", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-transform-proto-to-assign": "^7.10.1", "@babel/preset-env": "^7.10.3", "@logux/eslint-config": "^35.0.3", "@size-limit/preset-small-lib": "4.5.2", "babel-core": "^7.0.0-0", "babel-eslint": "^10.1.0", "babel-jest": "^25.2.6", "babelify": "^10.0.0", "browserify": "^16.5.1", "eslint": "^6.8.0", "eslint-ci": "^1.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-es5": "^1.5.0", "eslint-plugin-import": "^2.21.2", "eslint-plugin-jest": "^23.13.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-prefer-let": "^1.0.1", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-security": "^1.4.0", "eslint-plugin-standard": "^4.0.1", "eslint-plugin-unicorn": "^16.0.1", "fs-extra": "^8.1.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-json-editor": "^2.5.4", "gulp-postcss": "^8.0.0", "gulp-rename": "^2.0.0", "gulp-replace": "^1.0.0", "husky": "^4.2.5", "jest": "^24.9.0", "jest-ci": "^0.1.1", "lint-staged": "^10.2.11", "size-limit": "^4.5.2"}, "releases": [{"from": "2020-05-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 3}, {"from": "2020-03-26T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 5}, {"from": "2019-12-27T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 7}, {"from": "2019-06-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 16}, {"from": "2018-06-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 45}], "hasTestScript": true, "readme": "# Autoprefixer [![Cult Of Martians][cult-img]][cult]\n\n<img align=\"right\" width=\"94\" height=\"71\"\n     src=\"http://postcss.github.io/autoprefixer/logo.svg\"\n     title=\"Autoprefixer logo by Anton Lovchikov\">\n\n[PostCSS] plugin to parse CSS and add vendor prefixes to CSS rules using\u00a0values\nfrom\u00a0[Can I Use]. It\u00a0is\u00a0[recommended] by Google and used in Twitter and Alibaba.\n\nWrite your CSS rules without vendor prefixes (in\u00a0fact, forget about them\nentirely):\n\n```css\n::placeholder {\n  color: gray;\n}\n\n.image {\n  background-image: url(image@1x.png);\n}\n@media (min-resolution: 2dppx) {\n  .image {\n    background-image: url(image@2x.png);\n  }\n}\n```\n\nAutoprefixer will use the data based on current browser popularity and property\nsupport to\u00a0apply prefixes for\u00a0you. You\u00a0can\u00a0try\u00a0the [interactive demo]\nof Autoprefixer.\n\n```css\n::-moz-placeholder {\n  color: gray;\n}\n:-ms-input-placeholder {\n  color: gray;\n}\n::-ms-input-placeholder {\n  color: gray;\n}\n::placeholder {\n  color: gray;\n}\n\n.image {\n  background-image: url(image@1x.png);\n}\n@media (-webkit-min-device-pixel-ratio: 2),\n       (min-resolution: 2dppx) {\n  .image {\n    background-image: url(image@2x.png);\n  }\n}\n```\n\nTwitter account for news and releases: [@autoprefixer].\n\n<a href=\"https://evilmartians.com/?utm_source=autoprefixer\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[interactive demo]: https://autoprefixer.github.io/\n[@autoprefixer]:    https://twitter.com/autoprefixer\n[recommended]:      https://developers.google.com/web/tools/setup/setup-buildtools#dont_trip_up_with_vendor_prefixes\n[Can I Use]:        https://caniuse.com/\n[cult-img]:         http://cultofmartians.com/assets/badges/badge.svg\n[PostCSS]:          https://github.com/postcss/postcss\n[cult]:             http://cultofmartians.com/tasks/autoprefixer-grid.html\n\n\n## Contents\n\n* [Contents](#contents)\n* [Browsers](#browsers)\n* [FAQ](#faq)\n  * [Does Autoprefixer polyfill Grid Layout for IE?](#does-autoprefixer-polyfill-grid-layout-for-ie)\n  * [Does it add polyfills?](#does-it-add-polyfills)\n  * [Why doesn\u2019t Autoprefixer add prefixes to `border-radius`?](#why-doesnt-autoprefixer-add-prefixes-to-border-radius)\n  * [Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?](#why-does-autoprefixer-use-unprefixed-properties-in--webkit-keyframes)\n  * [How to work with legacy `-webkit-` only code?](#how-to-work-with-legacy--webkit--only-code)\n  * [Does Autoprefixer add `-epub-` prefix?](#does-autoprefixer-add--epub--prefix)\n  * [Why doesn\u2019t Autoprefixer transform generic font-family `system-ui`?](#why-doesnt-autoprefixer-transform-generic-font-family-system-ui)\n* [Usage](#usage)\n  * [Gulp](#gulp)\n  * [Webpack](#webpack)\n  * [CSS-in-JS](#css-in-js)\n  * [CLI](#cli)\n  * [Other Build Tools](#other-build-tools)\n    * [Preprocessors](#preprocessors)\n    * [GUI Tools](#gui-tools)\n  * [JavaScript](#javascript)\n  * [Text Editors and IDE](#text-editors-and-ide)\n* [Warnings](#warnings)\n* [Disabling](#disabling)\n  * [Prefixes](#prefixes)\n  * [Features](#features)\n  * [Control Comments](#control-comments)\n* [Options](#options)\n* [Environment Variables](#environment-variables)\n  * [Using environment variables to support CSS Grid prefixes in Create React App](#using-environment-variables-to-support-css-grid-prefixes-in-create-react-app)\n* [Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie)\n  * [Beware of enabling autoplacement in old projects](#beware-of-enabling-autoplacement-in-old-projects)\n  * [Autoplacement limitations](#autoplacement-limitations)\n    * [Both columns and rows must be defined](#both-columns-and-rows-must-be-defined)\n    * [Repeat auto-fit and auto-fill are not supported](#repeat-auto-fit-and-auto-fill-are-not-supported)\n    * [No manual cell placement or column/row spans allowed inside an autoplacement grid](#no-manual-cell-placement-or-columnrow-spans-allowed-inside-an-autoplacement-grid)\n    * [Do not create `::before` and `::after` pseudo elements](#do-not-create-before-and-after-pseudo-elements)\n    * [When changing the `grid gap` value, columns and rows must be re-declared](#when-changing-the-grid-gap-value-columns-and-rows-must-be-re-declared)\n* [Debug](#debug)\n* [Security Contact](#security-contact)\n* [For Enterprise](#for-enterprise)\n\n## Browsers\n\nAutoprefixer uses [Browserslist], so you can specify the browsers\nyou want to target in your project with queries like `> 5%`\n(see [Best Practices]).\n\nThe best way to provide browsers is a `.browserslistrc` file in your project\nroot, or by adding a `browserslist` key to your `package.json`.\n\nWe recommend the use of these options over passing options to Autoprefixer so\nthat the config can be shared with other tools such as [babel-preset-env] and\n[Stylelint].\n\nSee [Browserslist docs] for queries, browser names, config format, and defaults.\n\n[Browserslist docs]: https://github.com/browserslist/browserslist#queries\n[babel-preset-env]:  https://github.com/babel/babel/tree/master/packages/babel-preset-env\n[Best Practices]:    https://github.com/browserslist/browserslist#best-practices\n[Browserslist]:      https://github.com/browserslist/browserslist\n[Stylelint]:         https://stylelint.io/\n\n\n## FAQ\n\n### Does Autoprefixer polyfill Grid Layout for IE?\n\nAutoprefixer can be used to translate modern CSS Grid syntax into IE 10\nand IE 11 syntax, but this polyfill will not work in 100% of cases.\nThis\u00a0is\u00a0why\u00a0it\u00a0is\u00a0disabled\u00a0by\u00a0default.\n\nFirst, you need to enable Grid prefixes by using either the `grid: \"autoplace\"`\noption or the `/* autoprefixer grid: autoplace */` control comment.\nAlso you can use environment variable to enable Grid:\n`AUTOPREFIXER_GRID=autoplace npm build`.\n\nSecond, you need to test every fix with Grid in IE. It is not an enable and\nforget feature, but it is still very useful.\nFinancial\u00a0Times\u00a0and\u00a0Yandex\u00a0use it in production.\n\nThird, there is only very limited auto placement support. Read the\n[Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie) section\nfor more details.\n\nFourth, if you are not using the autoplacement feature, the best way\nto use Autoprefixer is by using  `grid-template` or `grid-template-areas`.\n\n```css\n.page {\n  display: grid;\n  grid-gap: 33px;\n  grid-template:\n    \"head head  head\" 1fr\n    \"nav  main  main\" minmax(100px, 1fr)\n    \"nav  foot  foot\" 2fr /\n    1fr   100px 1fr;\n}\n.page__head {\n  grid-area: head;\n}\n.page__nav {\n  grid-area: nav;\n}\n.page__main {\n  grid-area: main;\n}\n.page__footer {\n  grid-area: foot;\n}\n```\n\nSee also:\n\n* [The guide about Grids in IE and Autoprefixer].\n* [`postcss-gap-properties`] to use new `gap` property\n  instead of old `grid-gap`.\n* [`postcss-grid-kiss`] has alternate \u201ceverything in one property\u201d syntax,\n  which makes using Autoprefixer\u2019s Grid translations safer.\n\n[The guide about Grids in IE and Autoprefixer]: https://css-tricks.com/css-grid-in-ie-css-grid-and-the-new-autoprefixer/\n[`postcss-gap-properties`]:                     https://github.com/jonathantneal/postcss-gap-properties\n[`postcss-grid-kiss`]:                          https://github.com/sylvainpolletvillard/postcss-grid-kiss\n\n\n### Does it add polyfills?\n\nNo. Autoprefixer only adds prefixes.\n\nMost new CSS features will require client side JavaScript to handle a new\nbehavior correctly.\n\nDepending on what you consider to be a \u201cpolyfill\u201d, you can take a look at some\nother tools and libraries. If you are just looking for syntax sugar,\nyou might take a look at:\n\n- [postcss-preset-env] is a plugins preset with polyfills and Autoprefixer\n  to write future CSS today.\n- [Oldie], a PostCSS plugin that handles some IE hacks (opacity, rgba, etc).\n- [postcss-flexbugs-fixes], a PostCSS plugin to fix flexbox issues.\n\n[postcss-flexbugs-fixes]: https://github.com/luisrudge/postcss-flexbugs-fixes\n[postcss-preset-env]:     https://github.com/jonathantneal/postcss-preset-env\n[Oldie]:                  https://github.com/jonathantneal/oldie\n\n\n### Why doesn\u2019t Autoprefixer add prefixes to `border-radius`?\n\nDevelopers are often surprised by how few prefixes are required today.\nIf Autoprefixer doesn\u2019t add prefixes to\u00a0your CSS, check if they\u2019re still\nrequired on [Can I Use].\n\n[Can I Use]: https://caniuse.com/\n\n\n### Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?\n\nBrowser teams can remove some prefixes before others, so we try to use all\ncombinations of prefixed/unprefixed values.\n\n\n### How to work with legacy `-webkit-` only code?\n\nAutoprefixer needs unprefixed property to add prefixes. So if you only\nwrote `-webkit-gradient` without W3C\u2019s `gradient`,\nAutoprefixer will not add other prefixes.\n\nBut [PostCSS] has plugins to convert CSS to unprefixed state.\nUse [postcss-unprefix] before Autoprefixer.\n\n[postcss-unprefix]: https://github.com/gucong3000/postcss-unprefix\n\n\n### Does Autoprefixer add `-epub-` prefix?\n\nNo, Autoprefixer works only with browsers prefixes from Can I Use.\nBut you can use [postcss-epub] for\u00a0prefixing ePub3 properties.\n\n[postcss-epub]: https://github.com/Rycochet/postcss-epub\n\n\n### Why doesn\u2019t Autoprefixer transform generic font-family `system-ui`?\n\n`system-ui` is technically not a prefix and the transformation is not\nfuture-proof. You can use [postcss-font-family-system-ui] to transform\n`system-ui` to a practical font-family list.\n\n[postcss-font-family-system-ui]: https://github.com/JLHwung/postcss-font-family-system-ui\n\n\n## Usage\n\n### Gulp\n\nIn Gulp you can use [gulp-postcss] with `autoprefixer` npm package.\n\n```js\ngulp.task('autoprefixer', () => {\n  const autoprefixer = require('autoprefixer')\n  const sourcemaps = require('gulp-sourcemaps')\n  const postcss = require('gulp-postcss')\n\n  return gulp.src('./src/*.css')\n    .pipe(sourcemaps.init())\n    .pipe(postcss([ autoprefixer() ]))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('./dest'))\n})\n```\n\nWith `gulp-postcss` you also can combine Autoprefixer\nwith [other PostCSS plugins].\n\n[gulp-postcss]:          https://github.com/postcss/gulp-postcss\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n\n\n### Webpack\n\nIn [webpack] you can use [postcss-loader] with `autoprefixer`\nand [other PostCSS plugins].\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\"style-loader\", \"css-loader\", \"postcss-loader\"]\n      }\n    ]\n  }\n}\n```\n\nAnd create a `postcss.config.js` with:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n[postcss-loader]:        https://github.com/postcss/postcss-loader\n[webpack]:               https://webpack.js.org/\n\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'postcss-loader'],\n      },\n      {\n        test: /\\.jsx?$/,\n        use: ['babel-loader', 'astroturf/loader'],\n      }\n    ]\n  }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n\n### CLI\n\nYou can use the [postcss-cli] to run Autoprefixer from CLI:\n\n```sh\nnpm install postcss-cli autoprefixer\nnpx postcss *.css --use autoprefixer -d build/\n```\n\nSee `postcss -h` for help.\n\n[postcss-cli]: https://github.com/postcss/postcss-cli\n\n\n### Other Build Tools\n\n* **Grunt:** [grunt-postcss]\n* **Ruby on Rails**: [autoprefixer-rails]\n* **Neutrino**: [neutrino-middleware-postcss]\n* **Jekyll**: add `autoprefixer-rails` and `jekyll-assets` to `Gemfile`\n* **Brunch**: [postcss-brunch]\n* **Broccoli**: [broccoli-postcss]\n* **Middleman**: [middleman-autoprefixer]\n* **Mincer**: add `autoprefixer` npm package and enable it:\n  `environment.enable('autoprefixer')`\n\n[neutrino-middleware-postcss]: https://www.npmjs.com/package/neutrino-middleware-postcss\n[middleman-autoprefixer]:      https://github.com/middleman/middleman-autoprefixer\n[autoprefixer-rails]:          https://github.com/ai/autoprefixer-rails\n[broccoli-postcss]:            https://github.com/jeffjewiss/broccoli-postcss\n[postcss-brunch]:              https://github.com/iamvdo/postcss-brunch\n[grunt-postcss]:               https://github.com/C-Lodder/grunt-postcss\n\n\n#### Preprocessors\n\n* **Less**: [less-plugin-autoprefix]\n* **Stylus**: [autoprefixer-stylus]\n* **Compass**: [autoprefixer-rails#compass]\n\n[less-plugin-autoprefix]: https://github.com/less/less-plugin-autoprefix\n[autoprefixer-stylus]:    https://github.com/jenius/autoprefixer-stylus\n[autoprefixer-rails#compass]:     https://github.com/ai/autoprefixer-rails#compass\n\n\n#### GUI Tools\n\n* [CodeKit](https://codekitapp.com/help/autoprefixer/)\n* [Prepros](https://prepros.io)\n\n\n### JavaScript\n\nYou can use Autoprefixer with [PostCSS] in your Node.js application\nor if you want to develop an Autoprefixer plugin for a new environment.\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\n\npostcss([ autoprefixer ]).process(css).then(result => {\n  result.warnings().forEach(warn => {\n    console.warn(warn.toString())\n  })\n  console.log(result.css)\n})\n```\n\nThere is also a [standalone build] for the browser or for a non-Node.js runtime.\n\nYou can use [html-autoprefixer] to process HTML with inlined CSS.\n\n[html-autoprefixer]: https://github.com/RebelMail/html-autoprefixer\n[standalone build]:  https://raw.github.com/ai/autoprefixer-rails/master/vendor/autoprefixer.js\n[PostCSS]:           https://github.com/postcss/postcss\n\n\n### Text Editors and IDE\n\nAutoprefixer should be used in assets build tools. Text editor plugins are not\na good solution, because prefixes decrease code readability and you will need\nto change values in all prefixed properties.\n\nI recommend you to learn how to use build tools like [Parcel].\nThey work much better and will open you a whole new world of useful plugins\nand automation.\n\nIf you can\u2019t move to a build tool, you can use text editor plugins:\n\n* [Visual Studio Code](https://github.com/mrmlnc/vscode-autoprefixer)\n* [Atom Editor](https://github.com/sindresorhus/atom-autoprefixer)\n* [Sublime Text](https://github.com/sindresorhus/sublime-autoprefixer)\n* [Brackets](https://github.com/mikaeljorhult/brackets-autoprefixer)\n\n[Parcel]: https://parceljs.org/\n\n\n## Warnings\n\nAutoprefixer uses the [PostCSS warning API] to warn about really important\nproblems in your CSS:\n\n* Old direction syntax in gradients.\n* Old unprefixed `display: box` instead of `display: flex`\n  by latest specification version.\n\nYou can get warnings from `result.warnings()`:\n\n```js\nresult.warnings().forEach(warn => {\n  console.warn(warn.toString())\n})\n```\n\nEvery Autoprefixer runner should display these warnings.\n\n[PostCSS warning API]: http://api.postcss.org/Warning.html\n\n\n## Disabling\n\n### Prefixes\n\nAutoprefixer was designed to have no interface \u2013 it just works.\nIf you need some browser specific hack just write a prefixed property\nafter the unprefixed one.\n\n```css\na {\n  transform: scale(0.5);\n  -moz-transform: scale(0.6);\n}\n```\n\nIf some prefixes were generated incorrectly, please create an [issue on GitHub].\n\n[issue on GitHub]: https://github.com/postcss/autoprefixer/issues\n\n\n### Features\n\nYou can use these plugin options to control some of Autoprefixer\u2019s features.\n\n* `grid: \"autoplace\"` will enable `-ms-` prefixes for Grid Layout including some\n  [limited autoplacement support](#grid-autoplacement-support-in-ie).\n* `supports: false` will disable `@supports` parameters prefixing.\n* `flexbox: false` will disable flexbox properties prefixing.\n  Or `flexbox: \"no-2009\"` will add prefixes only for final and IE\n  versions of specification.\n* `remove: false` will disable cleaning outdated prefixes.\n\nYou should set them inside the plugin like so:\n\n```js\nautoprefixer({ grid: 'autoplace' })\n```\n\n\n### Control Comments\n\nIf you do not need Autoprefixer in some part of your CSS,\nyou can use control comments to\u00a0disable\u00a0Autoprefixer.\n\n```css\n.a {\n  transition: 1s; /* will be prefixed */\n}\n\n.b {\n  /* autoprefixer: off */\n  transition: 1s; /* will not be prefixed */\n}\n\n.c {\n  /* autoprefixer: ignore next */\n  transition: 1s; /* will not be prefixed */\n  mask: url(image.png); /* will be prefixed */\n}\n```\n\nThere are three types of control comments:\n\n* `/* autoprefixer: (on|off) */`: enable/disable all Autoprefixer translations for the\n  whole block both *before* and *after* the comment.\n* `/* autoprefixer: ignore next */`: disable Autoprefixer only for the next property\n  or next rule selector or at-rule parameters (but\u00a0not\u00a0rule/at\u2011rule body).\n* `/* autoprefixer grid: (autoplace|no-autoplace|off) */`: control how Autoprefixer handles\n  grid translations for the whole block:\n  * `autoplace`: enable grid translations with autoplacement support.\n  * `no-autoplace`: enable grid translations with autoplacement\n    support *disabled* (alias for deprecated value `on`).\n  * `off`: disable all grid translations.\n\nYou can also use comments recursively:\n\n```css\n/* autoprefixer: off */\n@supports (transition: all) {\n  /* autoprefixer: on */\n  a {\n    /* autoprefixer: off */\n  }\n}\n```\n\nNote that comments that disable the whole block should not be featured in the same\nblock twice:\n\n```css\n/* How not to use block level control comments */\n\n.do-not-do-this {\n  /* autoprefixer: off */\n  transition: 1s;\n  /* autoprefixer: on */\n  transform: rotate(20deg);\n}\n```\n\n\n## Options\n\nFunction `autoprefixer(options)` returns a new PostCSS plugin.\nSee [PostCSS API] for plugin usage documentation.\n\n```js\nautoprefixer({ cascade: false })\n```\n\nAvailable options are:\n\n* `env` (string): environment for Browserslist.\n* `cascade` (boolean): should Autoprefixer use Visual Cascade,\n  if CSS is uncompressed. Default: `true`\n* `add` (boolean): should Autoprefixer add prefixes. Default is `true`.\n* `remove` (boolean): should Autoprefixer [remove outdated] prefixes.\n  Default is `true`.\n* `supports` (boolean): should Autoprefixer add prefixes for `@supports`\n  parameters. Default is `true`.\n* `flexbox` (boolean|string): should Autoprefixer add prefixes for flexbox\n  properties. With `\"no-2009\"` value Autoprefixer will add prefixes only\n  for final and IE 10 versions of specification. Default is `true`.\n* `grid` (false|`\"autoplace\"`|`\"no-autoplace\"`): should Autoprefixer\n  add IE 10-11 prefixes for Grid Layout properties?\n    * `false` (default): prevent Autoprefixer from outputting\n       CSS Grid translations.\n    * `\"autoplace\"`: enable Autoprefixer grid translations\n      and *include* autoplacement support. You can also use\n      `/* autoprefixer grid: autoplace */` in your CSS.\n    * `\"no-autoplace\"`: enable Autoprefixer grid translations\n      but *exclude* autoplacement support. You can also use\n      `/* autoprefixer grid: no-autoplace */` in your CSS.\n      (alias for the deprecated `true` value)\n* `stats` (object): custom [usage statistics] for `> 10% in my stats`\n  browsers query.\n* `overrideBrowserslist` (array): list of queries for target browsers.\n  Try to not use it. The best practice is to use `.browserslistrc` config\n  or `browserslist` key in `package.json` to share target browsers\n  with Babel, ESLint and Stylelint. See\u00a0[Browserslist docs]\n  for available queries and default value.\n* `ignoreUnknownVersions` (boolean): do not raise error on unknown browser\n  version in Browserslist config. Default is `false`.\n\nPlugin object has `info()` method for debugging purpose.\n\nYou can use PostCSS processor to process several CSS files\nto increase performance.\n\n[usage statistics]: https://github.com/browserslist/browserslist#custom-usage-data\n[PostCSS API]:      http://api.postcss.org\n\n## Environment Variables\n\n* `AUTOPREFIXER_GRID`: (`autoplace`|`no-autoplace`) should Autoprefixer\n  add IE 10-11 prefixes for Grid Layout properties?\n    * `autoplace`: enable Autoprefixer grid translations\n      and *include* autoplacement support.\n    * `no-autoplace`: enable Autoprefixer grid translations\n      but *exclude* autoplacement support.\n\nEnvironment variables are useful, when you want to change Autoprefixer options but don't have access to config files.\n[Create React App] is a good example of this.\n\n[Create React App]: (https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)\n\n### Using environment variables to support CSS Grid prefixes in Create React App\n\n1. Install the latest version of Autoprefixer and [cross-env](https://www.npmjs.com/package/cross-env):\n\n```\nnpm install autoprefixer@latest cross-env --save-dev\n```\n\n2. Under `\"browserslist\"` > `\"development\"` in the package.json file, add `\"last 1 ie version\"`\n\n```\n\"browserslist\": {\n  \"production\": [\n    \">0.2%\",\n    \"not dead\",\n    \"not op_mini all\"\n  ],\n  \"development\": [\n    \"last 1 chrome version\",\n    \"last 1 firefox version\",\n    \"last 1 safari version\",\n    \"last 1 ie version\"\n  ]\n}\n```\n\n3. Update `\"scripts\"` in the package.json file to the following:\n\n```\n\"scripts\": {\n  \"start\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts start\",\n  \"build\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts build\",\n  \"test\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts test\",\n  \"eject\": \"react-scripts eject\"\n},\n```\n\nReplace `autoplace` with `no-autoplace` in the above example if you prefer to disable Autoprefixer Grid autoplacement support.\n\nNow when you run `npm start` you will see CSS Grid prefixes automatically being applied to your output CSS.\n\nSee also [Browserslist environment variables] for more examples on how to use environment variables in your project.\n\n[Browserslist environment variables]: https://github.com/browserslist/browserslist#environment-variables\n\n## Grid Autoplacement support in IE\n\nIf the `grid` option is set to `\"autoplace\"`, limited autoplacement support is added to Autoprefixers grid translations. You can also use\nthe `/* autoprefixer grid: autoplace */` control comment or\n`AUTOPREFIXER_GRID=autoplace npm build` environment variable.\n\nAutoprefixer will only autoplace grid cells if both `grid-template-rows`\nand `grid-template-columns` has been set. If `grid-template`\nor `grid-template-areas` has been set, Autoprefixer will use area based\ncell placement instead.\n\nAutoprefixer supports autoplacement by using `nth-child` CSS selectors.\nIt creates [number of columns] x [number of rows] `nth-child` selectors.\nFor this reason Autoplacement is only supported within the explicit grid.\n\n```css\n/* Input CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-gap: 20px;\n}\n```\n\n```css\n/* Output CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 1fr 20px 1fr;\n  grid-template-columns: 1fr 1fr;\n  -ms-grid-rows: auto 20px auto;\n  grid-template-rows: auto auto;\n  grid-gap: 20px;\n}\n\n.autoplacement-example > *:nth-child(1) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(2) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 3;\n}\n\n.autoplacement-example > *:nth-child(3) {\n  -ms-grid-row: 3;\n  -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(4) {\n  -ms-grid-row: 3;\n  -ms-grid-column: 3;\n}\n```\n\n### Beware of enabling autoplacement in old projects\n\nBe careful about enabling autoplacement in any already established projects that have\npreviously not used Autoprefixer's grid autoplacement feature before.\n\nIf this was your html:\n\n```html\n<div class=\"grid\">\n  <div class=\"grid-cell\"></div>\n</div>\n```\n\nThe following CSS will not work as expected with the autoplacement feature enabled:\n\n```css\n/* Unsafe CSS when Autoplacement is enabled */\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n```\n\nSwapping the rules around will not fix the issue either:\n\n```css\n/* Also unsafe to use this CSS */\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n```\n\nOne way to deal with this issue is to disable autoplacement in the\ngrid-declaration rule:\n\n```css\n/* Disable autoplacement to fix the issue */\n\n.grid {\n  /* autoprefixer grid: no-autoplace */\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n```\n\nThe absolute best way to integrate autoplacement into already existing projects\nthough is to leave autoplacement turned off by default and then use a control\ncomment to enable it when needed. This method is far less likely to cause\nsomething on the site to break.\n\n```css\n/* Disable autoplacement by default in old projects */\n/* autoprefixer grid: no-autoplace */\n\n/* Old code will function the same way it always has */\n.old-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n.old-grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n/* Enable autoplacement when you want to use it in new code */\n.new-autoplace-friendly-grid {\n  /* autoprefixer grid: autoplace */\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, auto);\n}\n```\n\nNote that the `grid: \"no-autoplace\"` setting and the\n`/* autoprefixer grid: no-autoplace */` control comment share identical\nfunctionality to the `grid: true` setting and the `/* autoprefixer grid: on */`\ncontrol comment. There is no need to refactor old code to use `no-autoplace`\nin place of the old `true` and `on` statements.\n\n### Autoplacement limitations\n\n#### Both columns and rows must be defined\n\nAutoplacement only works inside the explicit grid. The columns and rows need to be defined\nso that Autoprefixer knows how many `nth-child` selectors to generate.\n\n```css\n.not-allowed {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n.is-allowed {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(10, auto);\n}\n```\n\n#### Repeat auto-fit and auto-fill are not supported\n\nThe `repeat(auto-fit, ...)` and `repeat(auto-fill, ...)` grid functionality relies on\nknowledge from the browser about screen dimensions and the number of available grid\nitems for it to work properly. Autoprefixer does not have access to this information\nso unfortunately this little snippet will _never_ be IE friendly.\n\n```css\n.grid {\n  /* This will never be IE friendly */\n  grid-template-columns: repeat(auto-fit, min-max(200px, 1fr))\n}\n```\n\n#### No manual cell placement or column/row spans allowed inside an autoplacement grid\n\nElements must not be manually placed or given column/row spans inside\nan autoplacement grid. Only the most basic of autoplacement grids are supported.\nGrid cells can still be placed manually outside the the explicit grid though.\nSupport for manually placing individual grid cells inside an explicit\nautoplacement grid is planned for a future release.\n\n```css\n.autoplacement-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, auto);\n}\n\n/* Grid cells placed inside the explicit grid\n   will break the layout in IE */\n.not-permitted-grid-cell {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n/* Grid cells placed outside the\n   explicit grid will work in IE */\n.permitted-grid-cell {\n  grid-column: 1 / span 2;\n  grid-row: 4;\n}\n```\n\nIf manual cell placement is required, we recommend using `grid-template` or\n`grid-template-areas` instead:\n\n```css\n.page {\n  display: grid;\n  grid-gap: 30px;\n  grid-template:\n      \"head head\"\n      \"nav  main\" minmax(100px, 1fr)\n      \"foot foot\" /\n      200px 1fr;\n}\n.page__head {\n  grid-area: head;\n}\n.page__nav {\n  grid-area: nav;\n}\n.page__main {\n  grid-area: main;\n}\n.page__footer {\n  grid-area: foot;\n}\n```\n\n#### Do not create `::before` and `::after` pseudo elements\n\nLet's say you have this HTML:\n\n```html\n<div class=\"grid\">\n  <div class=\"grid-cell\"></div>\n</div>\n```\n\nAnd you write this CSS:\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n}\n\n.grid::before {\n  content: 'before';\n}\n\n.grid::after {\n  content: 'after';\n}\n```\n\nThis will be the output:\n\n```css\n.grid {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n  -ms-grid-rows: auto;\n  grid-template-rows: auto;\n}\n\n.grid > *:nth-child(1) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 1;\n}\n\n\n.grid > *:nth-child(2) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 2;\n}\n\n.grid::before {\n  content: 'before';\n}\n\n.grid::after {\n  content: 'after';\n}\n```\n\nIE will place `.grid-cell`, `::before` and `::after` in row 1 column 1.\nModern browsers on the other hand will place `::before` in row 1 column 1,\n`.grid-cell` in row 1 column 2, and `::after` in row 2 column 1.\n\nSee this [Code Pen](https://codepen.io/daniel-tonon/pen/gBymVw) to see a visualization\nof the issue. View the Code Pen in both a modern browser and IE to see the difference.\n\nNote that you can still create `::before` and `::after` elements as long as you manually\nplace them outside the explicit grid.\n\n#### When changing the `grid gap` value, columns and rows must be re-declared\n\nIf you wish to change the size of a `grid-gap`, you will need to redeclare the grid columns and rows.\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 50px;\n}\n\n/* This will *NOT* work in IE */\n@media (max-width: 600px) {\n  .grid {\n    grid-gap: 20px;\n  }\n}\n\n/* This will *NOT* work in IE */\n.grid.small-gap {\n  grid-gap: 20px;\n}\n```\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 50px;\n}\n\n/* This *WILL* work in IE */\n@media (max-width: 600px) {\n  .grid {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto;\n    grid-gap: 20px;\n  }\n}\n\n/* This *WILL* work in IE */\n.grid.small-gap {\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 20px;\n}\n```\n\n## Debug\n\nRun `npx autoprefixer --info` in your project directory to check\nwhich browsers are selected and\u00a0which properties will be prefixed:\n\n```\n$ npx autoprefixer --info\nBrowsers:\n  Edge: 16\n\nThese browsers account for 0.26% of all users globally\n\nAt-Rules:\n  @viewport: ms\n\nSelectors:\n  ::placeholder: ms\n\nProperties:\n  appearance: webkit\n  flow-from: ms\n  flow-into: ms\n  hyphens: ms\n  overscroll-behavior: ms\n  region-fragment: ms\n  scroll-snap-coordinate: ms\n  scroll-snap-destination: ms\n  scroll-snap-points-x: ms\n  scroll-snap-points-y: ms\n  scroll-snap-type: ms\n  text-size-adjust: ms\n  text-spacing: ms\n  user-select: ms\n```\n\nJS API is also available:\n\n```js\nconsole.log(autoprefixer().info())\n```\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n\n## For Enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `autoprefixer` and thousands of other packages are working\nwith Tidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk,\nand improve code health, while paying the maintainers of the exact dependencies\nyou use. [Learn more.](https://tidelift.com/subscription/pkg/npm-autoprefixer?utm_source=npm-autoprefixer&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)"}, "npm": {"downloads": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 2086832}, {"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 8550993}, {"from": "2020-05-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 43139973}, {"from": "2020-03-26T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 130662351}, {"from": "2019-12-27T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 242739346}, {"from": "2019-06-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 445184611}], "dependentsCount": 5649, "starsCount": 211}, "github": {"homepage": "https://twitter.com/autoprefixer", "starsCount": 18566, "forksCount": 1128, "subscribersCount": 404, "issues": {"count": 1323, "openCount": 26, "distribution": {"3600": 424, "10800": 163, "32400": 182, "97200": 137, "291600": 92, "874800": 99, "2624400": 104, "7873200": 62, "23619600": 35, "70858800": 24, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "ai", "commitsCount": 1900}, {"username": "bogdan0083", "commitsCount": 14}, {"username": "yisibl", "commitsCount": 14}, {"username": "iamvdo", "commitsCount": 11}, {"username": "yepninja", "commitsCount": 11}, {"username": "porada", "commitsCount": 9}, {"username": "regularlabs", "commitsCount": 9}, {"username": "Dan503", "commitsCount": 7}, {"username": "kossnocorp", "commitsCount": 7}, {"username": "Aaron3", "commitsCount": 6}, {"username": "Taritsyn", "commitsCount": 6}, {"username": "cornbreadcompanion", "commitsCount": 6}, {"username": "cvn", "commitsCount": 6}, {"username": "lydell", "commitsCount": 5}, {"username": "Semigradsky", "commitsCount": 4}, {"username": "cvle", "commitsCount": 4}, {"username": "fanich37", "commitsCount": 4}, {"username": "kieranju", "commitsCount": 4}, {"username": "nschonni", "commitsCount": 4}, {"username": "MoOx", "commitsCount": 3}, {"username": "demiazz", "commitsCount": 3}, {"username": "gucong3000", "commitsCount": 3}, {"username": "heady", "commitsCount": 3}, {"username": "janczer", "commitsCount": 3}, {"username": "ocean90", "commitsCount": 3}, {"username": "papandreou", "commitsCount": 3}, {"username": "shvaikalesh", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "trevorah", "commitsCount": 3}, {"username": "AleshaOleg", "commitsCount": 2}, {"username": "Grawl", "commitsCount": 2}, {"username": "JLHwung", "commitsCount": 2}, {"username": "Justineo", "commitsCount": 2}, {"username": "Leonya", "commitsCount": 2}, {"username": "Raylehnhoff", "commitsCount": 2}, {"username": "RyanZim", "commitsCount": 2}, {"username": "arikon", "commitsCount": 2}, {"username": "battaglr", "commitsCount": 2}, {"username": "brainopia", "commitsCount": 2}, {"username": "dotch", "commitsCount": 2}, {"username": "esundahl", "commitsCount": 2}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "hudochenkov", "commitsCount": 2}, {"username": "iainbeeston", "commitsCount": 2}, {"username": "imathis", "commitsCount": 2}, {"username": "isolovev", "commitsCount": 2}, {"username": "kirs", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "mikaeljorhult", "commitsCount": 2}, {"username": "moimikey", "commitsCount": 2}, {"username": "mvasilkov", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "phanikandula", "commitsCount": 2}, {"username": "princed", "commitsCount": 2}, {"username": "rzhw", "commitsCount": 2}, {"username": "sethjgore", "commitsCount": 2}, {"username": "simevidas", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "subzey", "commitsCount": 2}, {"username": "tonyganch", "commitsCount": 2}, {"username": "varemenos", "commitsCount": 2}, {"username": "vegardlarsen", "commitsCount": 2}, {"username": "whitequark", "commitsCount": 2}, {"username": "Aljullu", "commitsCount": 1}, {"username": "CyberAP", "commitsCount": 1}, {"username": "Diablohu", "commitsCount": 1}, {"username": "Drarok", "commitsCount": 1}, {"username": "Gibr", "commitsCount": 1}, {"username": "JoshuaHall", "commitsCount": 1}, {"username": "Sire", "commitsCount": 1}, {"username": "Splaktar", "commitsCount": 1}, {"username": "TheRusskiy", "commitsCount": 1}, {"username": "YozhikM", "commitsCount": 1}, {"username": "aduh95", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "evanzlj", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "filipewl", "commitsCount": 1}, {"username": "halfzebra", "commitsCount": 1}, {"username": "idoo", "commitsCount": 1}, {"username": "ivandata", "commitsCount": 1}, {"username": "jmmarco", "commitsCount": 1}, {"username": "kanlukasz", "commitsCount": 1}, {"username": "kotfire", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "mattburesh", "commitsCount": 1}, {"username": "mbomb007", "commitsCount": 1}, {"username": "nicnilov", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "semeleven", "commitsCount": 1}, {"username": "soul-wish", "commitsCount": 1}, {"username": "svewag", "commitsCount": 1}, {"username": "tkrotoff", "commitsCount": 1}, {"username": "vostrik", "commitsCount": 1}, {"username": "webschik", "commitsCount": 1}, {"username": "y-gagar1n", "commitsCount": 1}, {"username": "yuriyalekseyev", "commitsCount": 1}, {"username": "zzzzBov", "commitsCount": 1}], "commits": [{"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 6}, {"from": "2020-05-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 14}, {"from": "2020-03-26T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 24}, {"from": "2019-12-27T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 35}, {"from": "2019-06-25T00:00:00.000Z", "to": "2020-06-24T00:00:00.000Z", "count": 95}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 31536, "testsSize": 211545, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20409, "downloadsCount": 43554117, "downloadsAcceleration": 86795.82267884328, "dependentsCount": 5649}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9817328767123288, "openIssues": 1, "issuesDistribution": 0.9257839533270018}}, "score": {"final": 0.9096515128321401, "detail": {"quality": 0.8798582141455249, "popularity": 0.8448587657532823, "maintenance": 0.9999813730709537}}}}, {"url-loader": {"analyzedAt": "2020-06-13T03:01:59.396Z", "collected": {"metadata": {"name": "url-loader", "scope": "unscoped", "version": "4.1.0", "description": "A loader for webpack which transforms files into base64 URIs", "keywords": ["webpack"], "date": "2020-04-08T16:02:29.343Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/url-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/url-loader", "homepage": "https://github.com/webpack-contrib/url-loader", "repository": "https://github.com/webpack-contrib/url-loader", "bugs": "https://github.com/webpack-contrib/url-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "mime-types": "^2.1.26", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.3.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-plugin-import": "^2.20.2", "file-loader": "^6.0.0", "husky": "^4.2.3", "jest": "^25.3.0", "jest-junit": "^10.0.0", "lint-staged": "^10.1.2", "memfs": "^3.1.2", "mini-svg-data-uri": "^1.1.3", "npm-run-all": "^4.1.5", "prettier": "^2.0.4", "standard-version": "^7.1.0", "webpack": "^4.42.1"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0", "file-loader": "*"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# url-loader\n\nA loader for webpack which transforms files into base64 URIs.\n\n## Getting Started\n\nTo begin, you'll need to install `url-loader`:\n\n```console\n$ npm install url-loader --save-dev\n```\n\n`url-loader` works like\n[`file-loader`](https://github.com/webpack-contrib/file-loader), but can return\na DataURL if the file is smaller than a byte limit.\n\n**index.js**\n\n```js\nimport img from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|             Name              |            Type             |                            Default                            | Description                                                                         |\n| :---------------------------: | :-------------------------: | :-----------------------------------------------------------: | :---------------------------------------------------------------------------------- |\n|     **[`limit`](#limit)**     | `{Boolean\\|Number\\|String}` |                            `true`                             | Specifying the maximum size of a file in bytes.                                     |\n|  **[`mimetype`](#mimetype)**  |     `{Boolean\\|String}`     | based from [mime-types](https://github.com/jshttp/mime-types) | Sets the MIME type for the file to be transformed.                                  |\n|  **[`encoding`](#encoding)**  |     `{Boolean\\|String}`     |                           `base64`                            | Specify the encoding which the file will be inlined with.                           |\n| **[`generator`](#generator)** |        `{Function}`         |           `() => type/subtype;encoding,base64_data`           | You can create you own custom implementation for encoding data.                     |\n|  **[`fallback`](#fallback)**  |         `{String}`          |                         `file-loader`                         | Specifies an alternative loader to use when a target file's size exceeds the limit. |\n|  **[`esModule`](#esmodule)**  |         `{Boolean}`         |                            `true`                             | Use ES modules syntax.                                                              |\n\n### `limit`\n\nType: `Boolean|Number|String`\nDefault: `undefined`\n\nThe limit can be specified via loader options and defaults to no limit.\n\n#### `Boolean`\n\nEnable or disable transform files into base64.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Number|String`\n\nA `Number` or `String` specifying the maximum size of a file in bytes.\nIf the file size is **equal** or **greater** than the limit [`file-loader`](https://github.com/webpack-contrib/file-loader) will be used (by default) and all query parameters are passed to it.\n\nUsing an alternative to `file-loader` is enabled via the `fallback` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `mimetype`\n\nType: `Boolean|String`\nDefault: based from [mime-types](https://github.com/jshttp/mime-types)\n\nSpecify the `mimetype` which the file will be inlined with.\nIf unspecified the `mimetype` value will be used from [mime-types](https://github.com/jshttp/mime-types).\n\n#### `Boolean`\n\nThe `true` value allows to generation the `mimetype` part from [mime-types](https://github.com/jshttp/mime-types).\nThe `false` value removes the `mediatype` part from a Data URL (if omitted, defaults to `text/plain;charset=US-ASCII`).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              mimetype: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nSets the MIME type for the file to be transformed.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              mimetype: 'image/png',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `encoding`\n\nType: `Boolean|String`\nDefault: `base64`\n\nSpecify the `encoding` which the file will be inlined with.\nIf unspecified the `encoding` will be `base64`.\n\n#### `Boolean`\n\nIf you don't want to use any encoding you can set `encoding` to `false` however if you set it to `true` it will use the default encoding `base64`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              encoding: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nIt supports [Node.js Buffers and Character Encodings](https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings) which are `[\"utf8\",\"utf16le\",\"latin1\",\"base64\",\"hex\",\"ascii\",\"binary\",\"ucs2\"]`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              encoding: 'utf8',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `generator`\n\nType: `Function`\nDefault: `(mimetype, encoding, content, resourcePath) => mimetype;encoding,base64_content`\n\nYou can create you own custom implementation for encoding data.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|html)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              // The `mimetype` and `encoding` arguments will be obtained from your options\n              // The `resourcePath` argument is path to file.\n              generator: (content, mimetype, encoding, resourcePath) => {\n                if (/\\.html$/i.test(resourcePath)) {\n                  return `data:${mimetype},${content.toString()}`;\n                }\n\n                return `data:${mimetype}${\n                  encoding ? `;${encoding}` : ''\n                },${content.toString(encoding)}`;\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `fallback`\n\nType: `String`\nDefault: `'file-loader'`\n\nSpecifies an alternative loader to use when a target file's size exceeds the limit set in the `limit` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe fallback loader will receive the same configuration options as url-loader.\n\nFor example, to set the quality option of a responsive-loader above use:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n              quality: 85,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `file-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### SVG\n\nSVG can be compressed into a more compact output, avoiding `base64`.\nYou can read about it more [here](https://css-tricks.com/probably-dont-base64-svg/).\nYou can do it using [mini-svg-data-uri](https://github.com/tigt/mini-svg-data-uri) package.\n\n**webpack.config.js**\n\n```js\nconst svgToMiniDataURI = require('mini-svg-data-uri');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              generator: (content) => svgToMiniDataURI(content.toString()),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/url-loader.svg\n[npm-url]: https://npmjs.com/package/url-loader\n[node]: https://img.shields.io/node/v/url-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/url-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/url-loader\n[tests]: https://dev.azure.com/webpack-contrib/url-loader/_apis/build/status/webpack-contrib.url-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/url-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/url-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/url-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=url-loader\n[size-url]: https://packagephobia.now.sh/result?p=url-loader\n\n```\n\n```"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 980050}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6240930}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26564313}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 77463521}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 136952185}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 243450943}], "dependentsCount": 6855, "starsCount": 64}, "github": {"starsCount": 1316, "forksCount": 138, "subscribersCount": 16, "issues": {"count": 210, "openCount": 1, "distribution": {"3600": 47, "10800": 15, "32400": 22, "97200": 24, "291600": 11, "874800": 15, "2624400": 11, "7873200": 25, "23619600": 22, "70858800": 16, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 37}, {"username": "d3viant0ne", "commitsCount": 18}, {"username": "sokra", "commitsCount": 18}, {"username": "michael-ciniawsky", "commitsCount": 10}, {"username": "simon04", "commitsCount": 3}, {"username": "Pimm", "commitsCount": 2}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "shama", "commitsCount": 2}, {"username": "AndrewRayCode", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "EECOLOR", "commitsCount": 1}, {"username": "EslamHiko", "commitsCount": 1}, {"username": "Jeff-Tian", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TimHolzherr", "commitsCount": 1}, {"username": "aladdin-add", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "dayyeung", "commitsCount": 1}, {"username": "insin", "commitsCount": 1}, {"username": "jajaperson", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lukebatchelor", "commitsCount": 1}, {"username": "romanyanke", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "simonkberg", "commitsCount": 1}, {"username": "smondal", "commitsCount": 1}, {"username": "threequartersjohn", "commitsCount": 1}, {"username": "tomcraven", "commitsCount": 1}, {"username": "wibron", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 23}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 10758, "testsSize": 477587, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/url-loader.svg", "shields": "https://img.shields.io/npm/v/url-loader.svg", "content": "https://img.shields.io/npm/v/url-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/url-loader.svg", "service": "https://david-dm.org/webpack-contrib/url-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/url-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/url-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 1566, "downloadsCount": 25821173.666666668, "downloadsAcceleration": 78086.20058980215, "dependentsCount": 6855}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9031935337359509, "detail": {"quality": 0.9948119151130514, "popularity": 0.7279636620976383, "maintenance": 0.9998933641938921}}}}, {"core-js": {"analyzedAt": "2020-06-07T07:48:28.266Z", "collected": {"metadata": {"name": "core-js", "scope": "unscoped", "version": "3.6.5", "description": "Standard library", "keywords": ["ES3", "ES5", "ES6", "ES7", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ECMAScript 3", "ECMAScript 5", "ECMAScript 6", "ECMAScript 7", "ECMAScript 2015", "ECMAScript 2016", "ECMAScript 2017", "ECMAScript 2018", "ECMAScript 2019", "ECMAScript 2020", "Harmony", "Strawman", "Map", "Set", "WeakMap", "WeakSet", "Promise", "Observable", "Symbol", "TypedArray", "URL", "URLSearchParams", "queueMicrotask", "setImmediate", "polyfill", "ponyfill", "shim"], "date": "2020-04-09T16:37:31.166Z", "publisher": {"username": "slowcheetah", "email": "slow_cheetah@inbox.ru"}, "maintainers": [{"username": "zloirock", "email": "zloirock@zloirock.ru"}], "repository": {"type": "git", "url": "git+https://github.com/zloirock/core-js.git"}, "links": {"npm": "https://www.npmjs.com/package/core-js", "homepage": "https://github.com/zloirock/core-js#readme", "repository": "https://github.com/zloirock/core-js", "bugs": "https://github.com/zloirock/core-js/issues"}, "license": "MIT", "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 29}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 62}], "readme": "# core-js\n\n[![Sponsors on Open Collective](https://opencollective.com/core-js/sponsors/badge.svg)](#sponsors) [![Backers on Open Collective](https://opencollective.com/core-js/backers/badge.svg)](#backers) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zloirock/core-js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![version](https://img.shields.io/npm/v/core-js.svg)](https://www.npmjs.com/package/core-js) [![npm downloads](https://img.shields.io/npm/dm/core-js.svg)](http://npm-stat.com/charts.html?package=core-js&author=&from=2014-11-18) [![Build Status](https://travis-ci.org/zloirock/core-js.svg)](https://travis-ci.org/zloirock/core-js) [![devDependency status](https://david-dm.org/zloirock/core-js/dev-status.svg)](https://david-dm.org/zloirock/core-js?type=dev)\n\n> Modular standard library for JavaScript. Includes polyfills for [ECMAScript up to 2019](https://github.com/zloirock/core-js#ecmascript): [promises](https://github.com/zloirock/core-js#ecmascript-promise), [symbols](https://github.com/zloirock/core-js#ecmascript-symbol), [collections](https://github.com/zloirock/core-js#ecmascript-collections), iterators, [typed arrays](https://github.com/zloirock/core-js#ecmascript-typed-arrays), many other features, [ECMAScript proposals](https://github.com/zloirock/core-js#ecmascript-proposals), [some cross-platform WHATWG / W3C features and proposals](#web-standards) like [`URL`](https://github.com/zloirock/core-js#url-and-urlsearchparams). You can load only required features or use it without global namespace pollution.\n\n## As advertising: the author is looking for a good job -)\n\n## [core-js@3, babel and a look into the future](https://github.com/zloirock/core-js/tree/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md)\n\n## Raising funds\n\n`core-js` isn't backed by a company, so the future of this project depends on you. Become a sponsor or a backer [**on Open Collective**](https://opencollective.com/core-js) or [**on Patreon**](https://www.patreon.com/zloirock) if you are interested in `core-js`.\n\n---\n\n<a href=\"https://opencollective.com/core-js/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/0/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/1/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/2/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/3/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/4/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/5/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/6/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/7/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/8/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/9/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/10/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/11/avatar.svg\"></a>\n\n---\n\n<a href=\"https://opencollective.com/core-js#backers\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/backers.svg?width=890\"></a>\n\n---\n\n[*Example*](http://goo.gl/a2xexl):\n```js\nimport 'core-js'; // <- at the top of your entry point\n\nArray.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]\n[1, [2, 3], [4, [5]]].flat(2);                 // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n*You can load only required features*:\n```js\nimport 'core-js/features/array/from'; // <- at the top of your entry point\nimport 'core-js/features/array/flat'; // <- at the top of your entry point\nimport 'core-js/features/set';        // <- at the top of your entry point\nimport 'core-js/features/promise';    // <- at the top of your entry point\n\nArray.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]\n[1, [2, 3], [4, [5]]].flat(2);                 // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n*Or use it without global namespace pollution*:\n```js\nimport from from 'core-js-pure/features/array/from';\nimport flat from 'core-js-pure/features/array/flat';\nimport Set from 'core-js-pure/features/set';\nimport Promise from 'core-js-pure/features/promise';\n\nfrom(new Set([1, 2, 3, 2, 1]));                // => [1, 2, 3]\nflat([1, [2, 3], [4, [5]]], 2);                // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n**It's a global version (first 2 examples), for more info see [`core-js` documentation](https://github.com/zloirock/core-js/blob/master/README.md).**"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1329394}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 26334339}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 109807389}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 336095669}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 619553108}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1141978572}], "dependentsCount": 17304, "starsCount": 70}, "github": {"starsCount": 12898, "forksCount": 911, "subscribersCount": 233, "issues": {"count": 815, "openCount": 67, "distribution": {"3600": 182, "10800": 81, "32400": 88, "97200": 85, "291600": 70, "874800": 70, "2624400": 71, "7873200": 70, "23619600": 42, "70858800": 41, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "zloirock", "commitsCount": 2458}, {"username": "nicolo-ribaudo", "commitsCount": 18}, {"username": "romeovs", "commitsCount": 16}, {"username": "cscott", "commitsCount": 10}, {"username": "slowcheetah", "commitsCount": 9}, {"username": "iamolivinius", "commitsCount": 6}, {"username": "cvle", "commitsCount": 5}, {"username": "nicketson", "commitsCount": 5}, {"username": "scottarc", "commitsCount": 4}, {"username": "funklos", "commitsCount": 3}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "JakeChampion", "commitsCount": 2}, {"username": "dtinth", "commitsCount": 2}, {"username": "henryqdineen", "commitsCount": 2}, {"username": "obnoxiousnerd", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "vp2177", "commitsCount": 2}, {"username": "yaodingyd", "commitsCount": 2}, {"username": "Alexendoo", "commitsCount": 1}, {"username": "AndreasCag", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Macil", "commitsCount": 1}, {"username": "Mamboleoo", "commitsCount": 1}, {"username": "MarcelGerber", "commitsCount": 1}, {"username": "Naddiseo", "commitsCount": 1}, {"username": "PKief", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "aMollusk", "commitsCount": 1}, {"username": "abucur", "commitsCount": 1}, {"username": "aesopwolf", "commitsCount": 1}, {"username": "aheckmann", "commitsCount": 1}, {"username": "aleen42", "commitsCount": 1}, {"username": "benelsen", "commitsCount": 1}, {"username": "benjamingr", "commitsCount": 1}, {"username": "bernard-leech", "commitsCount": 1}, {"username": "bettiolo", "commitsCount": 1}, {"username": "bugknightyyp", "commitsCount": 1}, {"username": "bugtype", "commitsCount": 1}, {"username": "bz2", "commitsCount": 1}, {"username": "chicoxyzzy", "commitsCount": 1}, {"username": "clavecoder", "commitsCount": 1}, {"username": "cmfcmf", "commitsCount": 1}, {"username": "compulim", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "dantman", "commitsCount": 1}, {"username": "eteeselink", "commitsCount": 1}, {"username": "fatcerberus", "commitsCount": 1}, {"username": "felixbuenemann", "commitsCount": 1}, {"username": "flut1", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "galadriel2143", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "haydnhkim", "commitsCount": 1}, {"username": "huww98", "commitsCount": 1}, {"username": "jacobangel", "commitsCount": 1}, {"username": "janderudder", "commitsCount": 1}, {"username": "jdreesen", "commitsCount": 1}, {"username": "jpierson", "commitsCount": 1}, {"username": "kevinsawicki", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "malectro", "commitsCount": 1}, {"username": "mattclough1", "commitsCount": 1}, {"username": "mbeaudru", "commitsCount": 1}, {"username": "nicolasleger", "commitsCount": 1}, {"username": "nju33", "commitsCount": 1}, {"username": "notslang", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "pataar", "commitsCount": 1}, {"username": "repinel", "commitsCount": 1}, {"username": "rqrqrqrq", "commitsCount": 1}, {"username": "sbrl", "commitsCount": 1}, {"username": "suchipi", "commitsCount": 1}, {"username": "thekiba", "commitsCount": 1}, {"username": "yukulele", "commitsCount": 1}, {"username": "zn", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 94}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 414}]}, "source": {"files": {"readmeSize": 5499, "testsSize": 1183, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/core-js.svg", "shields": "https://img.shields.io/npm/v/core-js.svg", "content": "https://img.shields.io/npm/v/core-js.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/core-js.svg", "shields": "https://img.shields.io/npm/dm/core-js.svg", "content": "https://img.shields.io/npm/dm/core-js.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://travis-ci.org/zloirock/core-js.svg", "service": "https://api.travis-ci.org/zloirock/core-js.svg", "shields": "https://img.shields.io/travis/zloirock/core-js.svg", "content": "https://img.shields.io/travis/zloirock/core-js.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://david-dm.org/zloirock/core-js/dev-status.svg", "service": "https://david-dm.org/zloirock/core-js/dev-status.svg", "shields": "https://img.shields.io/david/dev/zloirock/core-js.svg", "content": "https://img.shields.io/david/dev/zloirock/core-js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.3, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 14189, "downloadsCount": 112031889.66666667, "downloadsAcceleration": 211197.7945585997, "dependentsCount": 17304}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.5139130746208249}}, "score": {"final": 0.9276504316390118, "detail": {"quality": 0.8815796021573747, "popularity": 0.9071689184775529, "maintenance": 0.9876212272133027}}}}, {"debug": {"analyzedAt": "2020-07-01T09:48:22.694Z", "collected": {"metadata": {"name": "debug", "scope": "unscoped", "version": "4.1.1", "description": "small debugging utility", "keywords": ["debug", "log", "debugger"], "date": "2018-12-22T16:40:22.538Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "qix", "email": "i.am.qix@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "thebigredgeek", "email": "rhyneandrew@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "tootallnate", "email": "nathan@tootallnate.net"}], "contributors": [{"name": "Nathan Rajlich", "email": "nathan@tootallnate.net", "url": "http://n8.io"}, {"name": "Andrew Rhyne", "email": "rhyneandrew@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/visionmedia/debug.git"}, "links": {"npm": "https://www.npmjs.com/package/debug", "homepage": "https://github.com/visionmedia/debug#readme", "repository": "https://github.com/visionmedia/debug", "bugs": "https://github.com/visionmedia/debug/issues"}, "license": "MIT", "dependencies": {"ms": "^2.1.1"}, "devDependencies": {"@babel/cli": "^7.0.0", "@babel/core": "^7.0.0", "@babel/preset-env": "^7.0.0", "browserify": "14.4.0", "chai": "^3.5.0", "concurrently": "^3.1.0", "coveralls": "^3.0.2", "istanbul": "^0.4.5", "karma": "^3.0.0", "karma-chai": "^0.1.0", "karma-mocha": "^1.3.0", "karma-phantomjs-launcher": "^1.0.2", "mocha": "^5.2.0", "mocha-lcov-reporter": "^1.2.0", "rimraf": "^2.5.4", "xo": "^0.23.0"}, "releases": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 0}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2}, {"from": "2018-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-30T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 12515989}, {"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 66294616}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 278339504}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 819659864}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1572422637}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2837532481}], "dependentsCount": 27102, "starsCount": 701}, "github": {"starsCount": 8823, "forksCount": 743, "subscribersCount": 137, "issues": {"count": 764, "openCount": 44, "distribution": {"3600": 121, "10800": 47, "32400": 40, "97200": 51, "291600": 46, "874800": 58, "2624400": 59, "7873200": 74, "23619600": 110, "70858800": 145, "212576400": 13}, "isDisabled": false}, "contributors": [{"username": "TooTallNate", "commitsCount": 139}, {"username": "tj", "commitsCount": 67}, {"username": "Qix-", "commitsCount": 37}, {"username": "thebigredgeek", "commitsCount": 25}, {"username": "yamikuronue", "commitsCount": 16}, {"username": "anaisbetts", "commitsCount": 6}, {"username": "slaskis", "commitsCount": 5}, {"username": "dmarcelino", "commitsCount": 4}, {"username": "dougwilson", "commitsCount": 4}, {"username": "ossdev07", "commitsCount": 4}, {"username": "marmolejo", "commitsCount": 3}, {"username": "stephenmathieson", "commitsCount": 3}, {"username": "timoxley", "commitsCount": 3}, {"username": "vpulim", "commitsCount": 3}, {"username": "escwald", "commitsCount": 2}, {"username": "gscottolson", "commitsCount": 2}, {"username": "mooyoul", "commitsCount": 2}, {"username": "nopnop", "commitsCount": 2}, {"username": "sdaitzman", "commitsCount": 2}, {"username": "vkarpov15", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "AccaliaDeElementia", "commitsCount": 1}, {"username": "DanielOchoa", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "DevSide", "commitsCount": 1}, {"username": "DiegoRBaquero", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "EirikBirkeland", "commitsCount": 1}, {"username": "FantasticFiasco", "commitsCount": 1}, {"username": "ForsakenHarmony", "commitsCount": 1}, {"username": "HaykoKoryun", "commitsCount": 1}, {"username": "KlausTrainer", "commitsCount": 1}, {"username": "KyleStay", "commitsCount": 1}, {"username": "LucianBuzzo", "commitsCount": 1}, {"username": "MylesBorins", "commitsCount": 1}, {"username": "abenhamdine", "commitsCount": 1}, {"username": "alexey-pelykh", "commitsCount": 1}, {"username": "amir-s", "commitsCount": 1}, {"username": "andrzejdus", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "bnoordhuis", "commitsCount": 1}, {"username": "botverse", "commitsCount": 1}, {"username": "denouche", "commitsCount": 1}, {"username": "diedsmiling", "commitsCount": 1}, {"username": "es128", "commitsCount": 1}, {"username": "exoticknight", "commitsCount": 1}, {"username": "febbraro", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "freewil", "commitsCount": 1}, {"username": "gimre", "commitsCount": 1}, {"username": "gorangajic", "commitsCount": 1}, {"username": "gtjoseph", "commitsCount": 1}, {"username": "hsiliev", "commitsCount": 1}, {"username": "hubdotcom", "commitsCount": 1}, {"username": "ibc", "commitsCount": 1}, {"username": "inca", "commitsCount": 1}, {"username": "jalleyne", "commitsCount": 1}, {"username": "jaredly", "commitsCount": 1}, {"username": "joaovieira", "commitsCount": 1}, {"username": "jochenberger", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "justmatt", "commitsCount": 1}, {"username": "kkirsche", "commitsCount": 1}, {"username": "kribblo", "commitsCount": 1}, {"username": "kwolfy", "commitsCount": 1}, {"username": "lchenay", "commitsCount": 1}, {"username": "leedm777", "commitsCount": 1}, {"username": "letharion", "commitsCount": 1}, {"username": "levithomason", "commitsCount": 1}, {"username": "lurch", "commitsCount": 1}, {"username": "lwolf", "commitsCount": 1}, {"username": "marbemac", "commitsCount": 1}, {"username": "matthewmueller", "commitsCount": 1}, {"username": "mattlyons0", "commitsCount": 1}, {"username": "mblarsen", "commitsCount": 1}, {"username": "medikoo", "commitsCount": 1}, {"username": "miaulightouch", "commitsCount": 1}, {"username": "miensol", "commitsCount": 1}, {"username": "mlucool", "commitsCount": 1}, {"username": "msasad", "commitsCount": 1}, {"username": "musikov", "commitsCount": 1}, {"username": "mykwillis", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "panuhorsmalahti", "commitsCount": 1}, {"username": "pi0", "commitsCount": 1}, {"username": "piamancini", "commitsCount": 1}, {"username": "profiprog", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "slavaGanzin", "commitsCount": 1}, {"username": "sorccu", "commitsCount": 1}, {"username": "timaschew", "commitsCount": 1}, {"username": "timruffles", "commitsCount": 1}, {"username": "tomtomau", "commitsCount": 1}, {"username": "vgoma", "commitsCount": 1}, {"username": "vitalikpi", "commitsCount": 1}, {"username": "wryk", "commitsCount": 1}, {"username": "yields", "commitsCount": 1}, {"username": "zacronos", "commitsCount": 1}], "commits": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 0}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 0}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 6}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 8}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3301, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "xo"], "coverage": 0.88}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.982, "health": 1, "branding": 0}, "popularity": {"communityInterest": 10504, "downloadsCount": 273219954.6666667, "downloadsAcceleration": 616385.3999429224, "dependentsCount": 27102}, "maintenance": {"releasesFrequency": 0.6044520547945206, "commitsFrequency": 0.407054794520548, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8034421534952323, "detail": {"quality": 0.8438194020156595, "popularity": 0.9176400380600032, "maintenance": 0.6546351987700951}}}}, {"rollup-plugin-node-resolve": {"analyzedAt": "2020-06-21T18:05:07.825Z", "collected": {"metadata": {"name": "rollup-plugin-node-resolve", "scope": "unscoped", "version": "5.2.0", "description": "Bundle third-party dependencies in node_modules", "keywords": ["rollup", "rollup-plugin", "es2015", "npm", "modules"], "date": "2019-06-29T07:19:01.573Z", "author": {"name": "Rich Harris", "email": "richard.a.harris@gmail.com", "username": "rich_harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "keithamus", "email": "npm@keithcirkel.co.uk"}, {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "shellscape", "email": "andrew@shellscape.org"}, {"username": "trysound", "email": "trysound@yandex.ru"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-node-resolve.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-node-resolve", "homepage": "https://github.com/rollup/rollup-plugin-node-resolve#readme", "repository": "https://github.com/rollup/rollup-plugin-node-resolve", "bugs": "https://github.com/rollup/rollup-plugin-node-resolve/issues"}, "license": "MIT", "dependencies": {"@types/resolve": "0.0.8", "builtin-modules": "^3.1.0", "is-module": "^1.0.0", "resolve": "^1.11.1", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.4.5", "@babel/preset-env": "^7.4.5", "@babel/register": "^7.4.4", "es5-ext": "^0.10.50", "eslint": "^5.16.0", "mocha": "^6.1.4", "rollup": "^1.16.1", "rollup-plugin-babel": "^4.3.2", "rollup-plugin-commonjs": "^10.0.0", "rollup-plugin-json": "^4.0.0", "string-capitalize": "^1.0.1", "typescript": "^3.5.2"}, "peerDependencies": {"rollup": ">=1.11.0"}, "releases": [{"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 5}, {"from": "2018-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 18}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-node-resolve.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-node-resolve\n\n*This plugin used to be called rollup-plugin-npm*\n\nLocate modules using the [Node resolution algorithm](https://nodejs.org/api/modules.html#modules_all_together), for using third party modules in `node_modules`\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-node-resolve\n```\n\n## Usage\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife',\n    name: 'MyModule'\n  },\n  plugins: [\n    resolve({\n\n      // the fields to scan in a package.json to determine the entry point\n      // if this list contains \"browser\", overrides specified in \"pkg.browser\"\n      // will be used\n      mainFields: ['module', 'main'], // Default: ['module', 'main']\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"module\" field for ES6 module if possible\n      module: true, // Default: true\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"jsnext:main\" if possible\n      // legacy field pointing to ES6 module in third-party libraries,\n      // deprecated in favor of \"pkg.module\":\n      // - see: https://github.com/rollup/rollup/wiki/pkg.module\n      jsnext: true,  // Default: false\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"main\" field or index.js, even if it's not an ES6 module\n      // (needs to be converted from CommonJS to ES6)\n      // \u2013 see https://github.com/rollup/rollup-plugin-commonjs\n      main: true,  // Default: true\n\n      // some package.json files have a \"browser\" field which specifies\n      // alternative files to load for people bundling for the browser. If\n      // that's you, either use this option or add \"browser\" to the\n      // \"mainfields\" option, otherwise pkg.browser will be ignored\n      browser: true,  // Default: false\n\n      // not all files you want to resolve are .js files\n      extensions: [ '.mjs', '.js', '.jsx', '.json' ],  // Default: [ '.mjs', '.js', '.json', '.node' ]\n\n      // whether to prefer built-in modules (e.g. `fs`, `path`) or\n      // local ones with the same names\n      preferBuiltins: false,  // Default: true\n\n      // Lock the module search in this path (like a chroot). Module defined\n      // outside this path will be marked as external\n      jail: '/my/jail/path', // Default: '/'\n\n      // Set to an array of strings and/or regexps to lock the module search\n      // to modules that match at least one entry. Modules not matching any\n      // entry will be marked as external\n      only: [ 'some_module', /^@some_scope\\/.*$/ ], // Default: null\n\n      // If true, inspect resolved files to check that they are\n      // ES2015 modules\n      modulesOnly: true, // Default: false\n\n      // Force resolving for these modules to root's node_modules that helps\n      // to prevent bundling the same package multiple times if package is\n      // imported from dependencies.\n      dedupe: [ 'react', 'react-dom' ], // Default: []\n\n      // Any additional options that should be passed through\n      // to node-resolve\n      customResolveOptions: {\n        moduleDirectory: 'js_modules'\n      }\n    })\n  ]\n};\n```\n\n## Using with rollup-plugin-commonjs\n\nSince most packages in your node_modules folder are probably legacy CommonJS rather than JavaScript modules, you may need to use [rollup-plugin-commonjs](https://github.com/rollup/rollup-plugin-commonjs):\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\nimport commonjs from 'rollup-plugin-commonjs';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  name: 'MyModule',\n  plugins: [\n    resolve(),\n    commonjs()\n  ]\n};\n```\n\n## Resolving Built-Ins (like `fs`)\n\nThis plugin won't resolve any builtins (e.g. `fs`). If you need to resolve builtins you can install local modules and set `preferBuiltins` to `false`, or install a plugin like [rollup-plugin-node-builtins](https://github.com/calvinmetcalf/rollup-plugin-node-builtins) which provides stubbed versions of these methods.\n\nIf you want to silence warnings about builtins, you can add the list of builtins to the `externals` option; like so:\n\n```js\nimport resolve from 'rollup-plugin-node-resolve';\nimport builtins from 'builtin-modules'\nexport default ({\n  input: ...,\n  plugins: [resolve()],\n  externals: builtins,\n  output: ...\n})\n```\n\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 16487}, {"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 470276}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 2000543}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 6724978}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 13371349}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 26760913}], "dependentsCount": 985, "starsCount": 3}, "github": {"starsCount": 457, "forksCount": 99, "subscribersCount": 11, "issues": {"count": 240, "openCount": 0, "distribution": {"3600": 22, "10800": 7, "32400": 15, "97200": 15, "291600": 21, "874800": 19, "2624400": 25, "7873200": 22, "23619600": 29, "70858800": 54, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "Rich-Harris", "commitsCount": 56}, {"username": "lukastaegert", "commitsCount": 48}, {"username": "keithamus", "commitsCount": 18}, {"username": "TrySound", "commitsCount": 13}, {"username": "mislav", "commitsCount": 8}, {"username": "kellyselden", "commitsCount": 4}, {"username": "ma2ciek", "commitsCount": 4}, {"username": "bterlson", "commitsCount": 3}, {"username": "eventualbuddha", "commitsCount": 3}, {"username": "GGAlanSmithee", "commitsCount": 2}, {"username": "lammas", "commitsCount": 2}, {"username": "manucorporat", "commitsCount": 2}, {"username": "mecurc", "commitsCount": 2}, {"username": "shellscape", "commitsCount": 2}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "Kocal", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "NotWoods", "commitsCount": 1}, {"username": "Spy-Seth", "commitsCount": 1}, {"username": "allex", "commitsCount": 1}, {"username": "arantes555", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "guillaumevincent", "commitsCount": 1}, {"username": "halfzebra", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "jonhartnett", "commitsCount": 1}, {"username": "kaksmet", "commitsCount": 1}, {"username": "kenjiO", "commitsCount": 1}, {"username": "leebyron", "commitsCount": 1}, {"username": "maranomynet", "commitsCount": 1}, {"username": "mcshaman", "commitsCount": 1}, {"username": "mikeharder", "commitsCount": 1}, {"username": "myshov", "commitsCount": 1}, {"username": "nick-woodward", "commitsCount": 1}, {"username": "nicolashenry", "commitsCount": 1}, {"username": "nolanlawson", "commitsCount": 1}, {"username": "sormy", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}], "commits": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 9}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 4386, "testsSize": 34985, "hasChangelog": true}, "linters": ["eslint"], "outdatedDependencies": {"@types/resolve": {"required": "0.0.8", "stable": "1.17.1", "latest": "1.17.1"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 608, "downloadsCount": 2241659.3333333335, "downloadsAcceleration": -1416.2752092846313, "dependentsCount": 985}, "maintenance": {"releasesFrequency": 0.4684931506849315, "commitsFrequency": 0.10356164383561646, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.494451726994695, "detail": {"quality": 0.5208321119601087, "popularity": 0.399043263407448, "maintenance": 0.5672484320401588}}}}, {"eslint-config-airbnb": {"analyzedAt": "2020-06-18T21:23:07.587Z", "collected": {"metadata": {"name": "eslint-config-airbnb", "scope": "unscoped", "version": "18.2.0", "description": "Airbnb's ESLint config, following our styleguide", "keywords": ["eslint", "eslintconfig", "config", "airbnb", "javascript", "styleguide", "es2015", "es2016", "es2017", "es2018"], "date": "2020-06-18T21:20:29.748Z", "author": {"name": "Jake Teton-Landis", "url": "https://twitter.com/@jitl"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "airbnbeng", "email": "opensource@airbnb.com"}, {"username": "etienne_tripier", "email": "etienne.tripier@airbnb.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "milesj", "email": "mileswjohnson@gmail.com"}, {"username": "noratarano", "email": "noratarano@gmail.com"}, {"username": "schleyfox", "email": "ben@pixelmachine.org"}, {"username": "sharmilajesupaul", "email": "tosharmila@gmail.com"}], "contributors": [{"name": "Jake Teton-Landis", "url": "https://twitter.com/jitl"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com", "url": "http://ljharb.codes"}, {"name": "Harrison Shoff", "url": "https://twitter.com/hshoff"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/javascript.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-airbnb", "homepage": "https://github.com/airbnb/javascript", "repository": "https://github.com/airbnb/javascript", "bugs": "https://github.com/airbnb/javascript/issues"}, "license": "MIT", "dependencies": {"eslint-config-airbnb-base": "^14.2.0", "object.assign": "^4.1.0", "object.entries": "^1.1.2"}, "devDependencies": {"@babel/runtime": "^7.8.7", "babel-preset-airbnb": "^4.5.0", "babel-tape-runner": "^3.0.0", "eclint": "^2.8.1", "eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-find-rules": "^3.5.0", "eslint-plugin-import": "^2.21.2", "eslint-plugin-jsx-a11y": "^6.3.0", "eslint-plugin-react": "^7.20.0", "eslint-plugin-react-hooks": "^4 || ^3 || ^2.3.0 || ^1.7.0", "in-publish": "^2.0.1", "react": ">= 0.13.0", "safe-publish-latest": "^1.1.4", "tape": "^5.0.1"}, "peerDependencies": {"eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-plugin-import": "^2.21.2", "eslint-plugin-jsx-a11y": "^6.3.0", "eslint-plugin-react": "^7.20.0", "eslint-plugin-react-hooks": "^4 || ^3 || ^2.3.0 || ^1.7.0"}, "releases": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 1}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 4}, {"from": "2018-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# eslint-config-airbnb\n\n[![npm version](https://badge.fury.io/js/eslint-config-airbnb.svg)](http://badge.fury.io/js/eslint-config-airbnb)\n\nThis package provides Airbnb's .eslintrc as an extensible shared config.\n\n## Usage\n\nWe export three ESLint configurations for your usage.\n\n### eslint-config-airbnb\n\nOur default export contains all of our ESLint rules, including ECMAScript 6+ and React. It requires `eslint`, `eslint-plugin-import`, `eslint-plugin-react`, `eslint-plugin-react-hooks`, and `eslint-plugin-jsx-a11y`. If you don't need React, see [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb@latest\" peerDependencies\n  ```\n\n  If using **npm 5+**, use this shortcut\n\n  ```sh\n  npx install-peerdeps --dev eslint-config-airbnb\n  ```\n\n  If using **yarn**, you can also use the shortcut described above if you have npm 5+ installed on your machine, as the command will detect that you are using yarn and will act accordingly.\n  Otherwise, run `npm info \"eslint-config-airbnb@latest\" peerDependencies` to list the peer dependencies and versions, then run `yarn add --dev <dependency>@<version>` for each listed peer dependency.\n\n  If using **npm < 5**, Linux/OSX users can run\n\n  ```sh\n  (\n    export PKG=eslint-config-airbnb;\n    npm info \"$PKG@latest\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG@latest\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb eslint@^#.#.# eslint-plugin-jsx-a11y@^#.#.# eslint-plugin-import@^#.#.# eslint-plugin-react@^#.#.# eslint-plugin-react-hooks@^#.#.#\n  ```\n\n  If using **npm < 5**, Windows users can either install all the peer dependencies manually, or use the [install-peerdeps](https://github.com/nathanhleung/install-peerdeps) cli tool.\n\n  ```sh\n  npm install -g install-peerdeps\n  install-peerdeps --dev eslint-config-airbnb\n  ```\n  The cli will produce and run a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb eslint@^#.#.# eslint-plugin-jsx-a11y@^#.#.# eslint-plugin-import@^#.#.# eslint-plugin-react@^#.#.# eslint-plugin-react-hooks@^#.#.#\n  ```\n\n2. Add `\"extends\": \"airbnb\"` to your `.eslintrc`\n\n### eslint-config-airbnb/hooks\n\nThis entry point enables the linting rules for React hooks (requires v16.8+). To use, add `\"extends\": [\"airbnb\", \"airbnb/hooks\"]` to your `.eslintrc`\n\n### eslint-config-airbnb/whitespace\n\nThis entry point only errors on whitespace rules and sets all other rules to warnings. View the list of whitespace rules [here](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/whitespace.js).\n\n### eslint-config-airbnb/base\n\nThis entry point is deprecated. See [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\n### eslint-config-airbnb/legacy\n\nThis entry point is deprecated. See [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\nSee [Airbnb's JavaScript styleguide](https://github.com/airbnb/javascript) and\nthe [ESlint config docs](https://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information.\n\n## Improving this config\n\nConsider adding test cases if you're making complicated rules changes, like anything involving regexes. Perhaps in a distant future, we could use literate programming to structure our README as test cases for our .eslintrc?\n\nYou can run tests with `npm test`.\n\nYou can make sure this module lints with itself using `npm run lint`."}, "npm": {"downloads": [{"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 381616}, {"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 1932468}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 8563719}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 25903626}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 45772319}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 82660740}], "dependentsCount": 2143, "starsCount": 192}, "github": {"starsCount": 97194, "forksCount": 18902, "subscribersCount": 3647, "issues": {"count": 2204, "openCount": 115, "distribution": {"3600": 618, "10800": 246, "32400": 337, "97200": 216, "291600": 185, "874800": 113, "2624400": 117, "7873200": 106, "23619600": 85, "70858800": 86, "212576400": 95}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 506}, {"username": "hshoff", "commitsCount": 166}, {"username": "lencioni", "commitsCount": 50}, {"username": "architectcodes", "commitsCount": 19}, {"username": "sharmilajesupaul", "commitsCount": 16}, {"username": "vsemozhetbyt", "commitsCount": 15}, {"username": "1pete", "commitsCount": 14}, {"username": "ssorallen", "commitsCount": 13}, {"username": "goatslacker", "commitsCount": 12}, {"username": "chrisngobanh", "commitsCount": 10}, {"username": "thisconnect", "commitsCount": 9}, {"username": "SimenB", "commitsCount": 8}, {"username": "Ryan-McBride", "commitsCount": 7}, {"username": "taion", "commitsCount": 7}, {"username": "bl00mber", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "felipethome", "commitsCount": 5}, {"username": "graingert", "commitsCount": 5}, {"username": "joaomilho", "commitsCount": 5}, {"username": "kevinweber", "commitsCount": 5}, {"username": "mitsuruog", "commitsCount": 5}, {"username": "spikebrehm", "commitsCount": 5}, {"username": "simono", "commitsCount": 4}, {"username": "vladshcherbin", "commitsCount": 4}, {"username": "AlicanC", "commitsCount": 3}, {"username": "RobLoach", "commitsCount": 3}, {"username": "adrienverge", "commitsCount": 3}, {"username": "amsardesai", "commitsCount": 3}, {"username": "asherdale", "commitsCount": 3}, {"username": "camazorro", "commitsCount": 3}, {"username": "chentsulin", "commitsCount": 3}, {"username": "jabacchetta", "commitsCount": 3}, {"username": "karanjthakkar", "commitsCount": 3}, {"username": "kripod", "commitsCount": 3}, {"username": "leonidlebedev", "commitsCount": 3}, {"username": "lvarayut", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "pigoz", "commitsCount": 3}, {"username": "raunofreiberg", "commitsCount": 3}, {"username": "remcohaszing", "commitsCount": 3}, {"username": "trshafer", "commitsCount": 3}, {"username": "unkillbob", "commitsCount": 3}, {"username": "0xCMP", "commitsCount": 2}, {"username": "A-Tokyo", "commitsCount": 2}, {"username": "ClimbsRocks", "commitsCount": 2}, {"username": "Doweig", "commitsCount": 2}, {"username": "Ensive", "commitsCount": 2}, {"username": "HerringtonDarkholme", "commitsCount": 2}, {"username": "JBallin", "commitsCount": 2}, {"username": "KevinGrandon", "commitsCount": 2}, {"username": "NLDev", "commitsCount": 2}, {"username": "ParkSB", "commitsCount": 2}, {"username": "TheSavior", "commitsCount": 2}, {"username": "akai", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "atkinchris", "commitsCount": 2}, {"username": "bertho-zero", "commitsCount": 2}, {"username": "billyjanitsch", "commitsCount": 2}, {"username": "carterchung", "commitsCount": 2}, {"username": "cmalard", "commitsCount": 2}, {"username": "coliff", "commitsCount": 2}, {"username": "cooperka", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "daxelrod", "commitsCount": 2}, {"username": "evenfrost", "commitsCount": 2}, {"username": "fbergr", "commitsCount": 2}, {"username": "felixsanz", "commitsCount": 2}, {"username": "frenzzy", "commitsCount": 2}, {"username": "fvgs", "commitsCount": 2}, {"username": "gmccue", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "honzi", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "iamnirav", "commitsCount": 2}, {"username": "johnmanong", "commitsCount": 2}, {"username": "jondubin", "commitsCount": 2}, {"username": "kamronbatman", "commitsCount": 2}, {"username": "kaplanmaxe", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "lasota-piotr", "commitsCount": 2}, {"username": "liuchong", "commitsCount": 2}, {"username": "mifi", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "nicoder", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "olistic", "commitsCount": 2}, {"username": "pra85", "commitsCount": 2}, {"username": "rodocite", "commitsCount": 2}, {"username": "ronal2do", "commitsCount": 2}, {"username": "sangaman", "commitsCount": 2}, {"username": "sidoshi", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "sindrenm", "commitsCount": 2}, {"username": "spen", "commitsCount": 2}, {"username": "thepeoplesbourgeois", "commitsCount": 2}, {"username": "tikotzky", "commitsCount": 2}, {"username": "timofurrer", "commitsCount": 2}, {"username": "uzumaxy", "commitsCount": 2}, {"username": "vahan-hartooni", "commitsCount": 2}, {"username": "wyattdanger", "commitsCount": 2}], "commits": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 4}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 12}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 15}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 36}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 94}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 3621, "testsSize": 4002, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 120035, "downloadsCount": 8634542, "downloadsAcceleration": 21703.09986681887, "dependentsCount": 2143}, "maintenance": {"releasesFrequency": 0.49623287671232885, "commitsFrequency": 0.968904109589041, "openIssues": 1, "issuesDistribution": 0.26328166641173517}}, "score": {"final": 0.8594351181779913, "detail": {"quality": 0.9407345552073143, "popularity": 0.7564886075419481, "maintenance": 0.892696397074615}}}}, {"lint-staged": {"analyzedAt": "2020-06-17T10:32:05.929Z", "collected": {"metadata": {"name": "lint-staged", "scope": "unscoped", "version": "10.2.11", "description": "Lint files staged by git", "keywords": ["lint", "git", "staged", "eslint", "prettier", "stylelint", "code", "quality", "check", "format", "validate"], "date": "2020-06-17T10:10:05.134Z", "author": {"name": "Andrey Okonetchnikov", "email": "andrey@okonet.ru", "username": "okonet"}, "publisher": {"username": "okonet", "email": "andrey@okonet.ru"}, "maintainers": [{"username": "okonet", "email": "andrey@okonet.ru"}], "repository": {"type": "git", "url": "git+https://github.com/okonet/lint-staged.git"}, "links": {"npm": "https://www.npmjs.com/package/lint-staged", "homepage": "https://github.com/okonet/lint-staged#readme", "repository": "https://github.com/okonet/lint-staged", "bugs": "https://github.com/okonet/lint-staged/issues"}, "license": "MIT", "dependencies": {"chalk": "^4.0.0", "cli-truncate": "2.1.0", "commander": "^5.1.0", "cosmiconfig": "^6.0.0", "debug": "^4.1.1", "dedent": "^0.7.0", "enquirer": "^2.3.5", "execa": "^4.0.1", "listr2": "^2.1.0", "log-symbols": "^4.0.0", "micromatch": "^4.0.2", "normalize-path": "^3.0.0", "please-upgrade-node": "^3.2.0", "string-argv": "0.3.1", "stringify-object": "^3.3.0"}, "devDependencies": {"@babel/core": "^7.9.6", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/preset-env": "^7.9.6", "babel-eslint": "10.1.0", "babel-jest": "^26.0.1", "consolemock": "^1.1.0", "eslint": "^7.0.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-prettier": "^3.1.3", "fs-extra": "^9.0.0", "husky": "^4.2.5", "jest": "^26.0.1", "jest-snapshot-serializer-ansi": "^1.0.0", "prettier": "^2.0.5"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 21}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 33}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 65}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 90}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# \ud83d\udeab\ud83d\udca9 lint-staged ![GitHub Actions](https://github.com/okonet/lint-staged/workflows/CI/badge.svg) [![Build Status for Windows](https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged?branch=master&svg=true)](https://ci.appveyor.com/project/okonet/lint-staged) [![npm version](https://badge.fury.io/js/lint-staged.svg)](https://badge.fury.io/js/lint-staged) [![Codecov](https://codecov.io/gh/okonet/lint-staged/branch/master/graph/badge.svg)](https://codecov.io/gh/okonet/lint-staged)\n\nRun linters against staged git files and don't let :poop: slip into your code base!\n\n[![asciicast](https://asciinema.org/a/199934.svg)](https://asciinema.org/a/199934)\n\n## Why\n\nLinting makes more sense when run before committing your code. By doing so you can ensure no errors go into the repository and enforce code style. But running a lint process on a whole project is slow and linting results can be irrelevant. Ultimately you only want to lint files that will be committed.\n\nThis project contains a script that will run arbitrary shell tasks with a list of staged files as an argument, filtered by a specified glob pattern.\n\n## Related blogs posts and talks\n\n- [Make Linting Great Again](https://medium.com/@okonetchnikov/make-linting-great-again-f3890e1ad6b8#.8qepn2b5l)\n- [Running Jest Tests Before Each Git Commit](https://benmccormick.org/2017/02/26/running-jest-tests-before-each-git-commit/)\n- [AgentConf: Make Linting Great Again](https://www.youtube.com/watch?v=-mhY7e-EsC4)\n- [SurviveJS Interview](https://survivejs.com/blog/lint-staged-interview/)\n\n> If you've written one, please submit a PR with the link to it!\n\n## Installation and setup\n\nThe fastest way to start using lint-staged is to run following command in your terminal:\n\n```bash\nnpx mrm lint-staged\n```\n\nIt will install and configure [husky](https://github.com/typicode/husky) and lint-staged depending on code quality tools from `package.json` dependencies so please make sure you install (`npm install --save-dev`) and configure all code quality tools like [Prettier](https://prettier.io), [ESlint](https://eslint.org) prior that.\n\nDon't forget to commit changes to `package.json` to share this setup with your team!\n\nNow change a few files, `git add` or `git add --patch` some of them to your commit and try to `git commit` them.\n\nSee [examples](#examples) and [configuration](#configuration) for more information.\n\n## Changelog\n\nSee [Releases](https://github.com/okonet/lint-staged/releases)\n\n### Migration\n\n#### v10\n\n- From `v10.0.0` onwards any new modifications to originally staged files will be automatically added to the commit.\n  If your task previously contained a `git add` step, please remove this.\n  The automatic behaviour ensures there are less race-conditions,\n  since trying to run multiple git operations at the same time usually results in an error.\n- From `v10.0.0` onwards _lint-staged_ uses git stashes to improve speed and provide backups while running.\n  Since git stashes require at least an initial commit, you shouldn't run _lint-staged_ in an empty repo.\n- From `v10.0.0` onwards _lint-staged_ requires Node.js version 10.13.0 or later.\n- From `v10.0.0` onwards _lint-staged_ will abort the commit if linter tasks undo all staged changes. To allow creating empty commit, please use the `--allow-empty` option.\n\n## Command line flags\n\n```bash\n\u276f npx lint-staged --help\nUsage: lint-staged [options]\n\nOptions:\n  -V, --version                      output the version number\n  --allow-empty                      allow empty commits when tasks revert all staged changes\n                                     (default: false)\n  -c, --config [path]                path to configuration file\n  -d, --debug                        print additional debug information (default: false)\n  --no-stash                         disable the backup stash, and do not revert in case of\n                                     errors\n  -p, --concurrent <parallel tasks>  the number of tasks to run concurrently, or false to run\n                                     tasks serially (default: true)\n  -q, --quiet                        disable lint-staged\u2019s own console output (default: false)\n  -r, --relative                     pass relative filepaths to tasks (default: false)\n  -x, --shell                        skip parsing of tasks for better shell support (default:\n                                     false)\n  -v, --verbose                      show task output even when tasks succeed; by default only\n                                     failed output is shown (default: false)\n  -h, --help                         display help for command\n```\n\n- **`--allow-empty`**: By default, when linter tasks undo all staged changes, lint-staged will exit with an error and abort the commit. Use this flag to allow creating empty git commits.\n- **`--config [path]`**: Manually specify a path to a config file or npm package name. Note: when used, lint-staged won't perform the config file search and print an error if the specified file cannot be found.\n- **`--debug`**: Run in debug mode. When set, it does the following:\n  - uses [debug](https://github.com/visionmedia/debug) internally to log additional information about staged files, commands being executed, location of binaries, etc. Debug logs, which are automatically enabled by passing the flag, can also be enabled by setting the environment variable `$DEBUG` to `lint-staged*`.\n  - uses [`verbose` renderer](https://github.com/SamVerschueren/listr-verbose-renderer) for `listr`; this causes serial, uncoloured output to the terminal, instead of the default (beautified, dynamic) output.\n- **`--concurrent [number | (true/false)]`**: Controls the concurrency of tasks being run by lint-staged. **NOTE**: This does NOT affect the concurrency of subtasks (they will always be run sequentially). Possible values are:\n  - `false`: Run all tasks serially\n  - `true` (default) : _Infinite_ concurrency. Runs as many tasks in parallel as possible.\n  - `{number}`: Run the specified number of tasks in parallel, where `1` is equivalent to `false`.\n- **`--no-stash`**: By default a backup stash will be created before running the tasks, and all task modifications will be reverted in case of an error. This option will disable creating the stash, and instead leave all modifications in the index when aborting the commit.\n- **`--quiet`**: Supress all CLI output, except from tasks.\n- **`--relative`**: Pass filepaths relative to `process.cwd()` (where `lint-staged` runs) to tasks. Default is `false`.\n- **`--shell`**: By default linter commands will be parsed for speed and security. This has the side-effect that regular shell scripts might not work as expected. You can skip parsing of commands with this option.\n- **`--verbose`**: Show task output even when tasks succeed. By default only failed output is shown.\n\n## Configuration\n\nStarting with v3.1 you can now use different ways of configuring it:\n\n- `lint-staged` object in your `package.json`\n- `.lintstagedrc` file in JSON or YML format\n- `lint-staged.config.js` file in JS format\n- Pass a configuration file using the `--config` or `-c` flag\n\nSee [cosmiconfig](https://github.com/davidtheclark/cosmiconfig) for more details on what formats are supported.\n\nConfiguration should be an object where each value is a command to run and its key is a glob pattern to use for this command. This package uses [micromatch](https://github.com/micromatch/micromatch) for glob patterns.\n\n#### `package.json` example:\n\n```json\n{\n  \"lint-staged\": {\n    \"*\": \"your-cmd\"\n  }\n}\n```\n\n#### `.lintstagedrc` example\n\n```json\n{\n  \"*\": \"your-cmd\"\n}\n```\n\nThis config will execute `your-cmd` with the list of currently staged files passed as arguments.\n\nSo, considering you did `git add file1.ext file2.ext`, lint-staged will run the following command:\n\n`your-cmd file1.ext file2.ext`\n\n## Filtering files\n\nLinter commands work on a subset of all staged files, defined by a _glob pattern_. `lint-staged\u00b4 uses [micromatch](https://github.com/micromatch/micromatch) for matching files with the following rules:\n\n- If the glob pattern contains no slashes (`/`), micromatch's `matchBase` option will enabled, so globs match a file's basename regardless of directory:\n  - **`\"*.js\"`** will match all JS files, like `/test.js` and `/foo/bar/test.js`\n  - **`\"!(*test).js\"`**. will match all JS files, except those ending in `test.js`, so `foo.js` but not `foo.test.js`\n- If the glob pattern does contain a slash (`/`), it will match for paths as well:\n  - **`\"./*.js\"`** will match all JS files in the git repo root, so `/test.js` but not `/foo/bar/test.js`\n  - **`\"foo/**/\\*.js\"`** will match all JS files inside the`/foo`directory, so`/foo/bar/test.js`but not`/test.js`\n\nWhen matching, `lint-staged` will do the following\n\n- Resolve the git root automatically, no configuration needed.\n- Pick the staged files which are present inside the project directory.\n- Filter them using the specified glob patterns.\n- Pass absolute paths to the linters as arguments.\n\n**NOTE:** `lint-staged` will pass _absolute_ paths to the linters to avoid any confusion in case they're executed in a different working directory (i.e. when your `.git` directory isn't the same as your `package.json` directory).\n\nAlso see [How to use `lint-staged` in a multi package monorepo?](#how-to-use-lint-staged-in-a-multi-package-monorepo)\n\n### Ignoring files\n\nThe concept of `lint-staged` is to run configured linter (or other) tasks on files that are staged in git. `lint-staged` will always pass a list of all staged files to the task, and ignoring any files should be configured in the task itself.\n\nConsider a project that uses [`prettier`](https://prettier.io/) to keep code format consistent across all files. The project also stores minified 3rd-party vendor libraries in the `vendor/` directory. To keep `prettier` from throwing errors on these files, the vendor directory should be added to prettier's ignore configuration, the `.prettierignore` file. Running `npx prettier .` will ignore the entire vendor directory, throwing no errors. When `lint-staged` is added to the project and configured to run prettier, all modified and staged files in the vendor directory will be ignored by prettier, even though it receives them as input.\n\nIn advanced scenarios, where it is impossible to configure the linter task itself to ignore files, but some staged files should still be ignored by `lint-staged`, it is possible to filter filepaths before passing them to tasks by using the function syntax. See [Example: Ignore files from match](#example-ignore-files-from-match).\n\n## What commands are supported?\n\nSupported are any executables installed locally or globally via `npm` as well as any executable from your \\$PATH.\n\n> Using globally installed scripts is discouraged, since lint-staged may not work for someone who doesn\u2019t have it installed.\n\n`lint-staged` uses [execa](https://github.com/sindresorhus/execa#preferlocal) to locate locally installed scripts. So in your `.lintstagedrc` you can write:\n\n```json\n{\n  \"*.js\": \"eslint --fix\"\n}\n```\n\nPass arguments to your commands separated by space as you would do in the shell. See [examples](#examples) below.\n\n## Running multiple commands in a sequence\n\nYou can run multiple commands in a sequence on every glob. To do so, pass an array of commands instead of a single one. This is useful for running autoformatting tools like `eslint --fix` or `stylefmt` but can be used for any arbitrary sequences.\n\nFor example:\n\n```json\n{\n  \"*.js\": [\"eslint\", \"prettier --write\"]\n}\n```\n\ngoing to execute `eslint` and if it exits with `0` code, it will execute `prettier --write` on all staged `*.js` files.\n\n## Using JS functions to customize tasks\n\nWhen supplying configuration in JS format it is possible to define the task as a function, which will receive an array of staged filenames/paths and should return the complete command as a string. It is also possible to return an array of complete command strings, for example when the task supports only a single file input. The function can be either sync or async.\n\n```ts\ntype TaskFn = (filenames: string[]) => string | string[] | Promise<string | string[]>\n```\n\n### Example: Wrap filenames in single quotes and run once per file\n\n```js\n// .lintstagedrc.js\nmodule.exports = {\n  '**/*.js?(x)': (filenames) => filenames.map((filename) => `prettier --write '${filename}'`)\n}\n```\n\n### Example: Run `tsc` on changes to TypeScript files, but do not pass any filename arguments\n\n```js\n// lint-staged.config.js\nmodule.exports = {\n  '**/*.ts?(x)': () => 'tsc -p tsconfig.json --noEmit'\n}\n```\n\n### Example: Run eslint on entire repo if more than 10 staged files\n\n```js\n// .lintstagedrc.js\nmodule.exports = {\n  '**/*.js?(x)': (filenames) =>\n    filenames.length > 10 ? 'eslint .' : `eslint ${filenames.join(' ')}`\n}\n```\n\n### Example: Use your own globs\n\n```js\n// lint-staged.config.js\nconst micromatch = require('micromatch')\n\nmodule.exports = {\n  '*': (allFiles) => {\n    const match = micromatch(allFiles, ['*.js', '*.ts'])\n    return `eslint ${match.join(' ')}`\n  }\n}\n```\n\n### Example: Ignore files from match\n\nIf for some reason you want to ignore files from the glob match, you can use `micromatch.not()`:\n\n```js\n// lint-staged.config.js\nconst micromatch = require('micromatch')\n\nmodule.exports = {\n  '*.js': (files) => {\n    // from `files` filter those _NOT_ matching `*test.js`\n    const match = micromatch.not(files, '*test.js')\n    return `eslint ${match.join(' ')}`\n  }\n}\n```\n\nPlease note that for most cases, globs can achieve the same effect. For the above example, a matching glob would be `!(*test).js`.\n\n### Example: Use relative paths for commands\n\n```js\nconst path = require('path')\n\nmodule.exports = {\n  '*.ts': (absolutePaths) => {\n    const cwd = process.cwd()\n    const relativePaths = absolutePaths.map((file) => path.relative(cwd, file))\n    return `ng lint myProjectName --files ${relativePaths.join(' ')}`\n  }\n}\n```\n\n## Reformatting the code\n\nTools like [Prettier](https://prettier.io), ESLint/TSLint, or stylelint can reformat your code according to an appropriate config by running `prettier --write`/`eslint --fix`/`tslint --fix`/`stylelint --fix`. Lint-staged will automatically add any modifications to the commit as long as there are no errors.\n\n```json\n{\n  \"*.js\": \"prettier --write\"\n}\n```\n\nPrior to version 10, tasks had to manually include `git add` as the final step. This behavior has been integrated into lint-staged itself in order to prevent race conditions with multiple tasks editing the same files. If lint-staged detects `git add` in task configurations, it will show a warning in the console. Please remove `git add` from your configuration after upgrading.\n\n## Examples\n\nAll examples assuming you\u2019ve already set up lint-staged and husky in the `package.json`.\n\n```json\n{\n  \"name\": \"My project\",\n  \"version\": \"0.1.0\",\n  \"scripts\": {\n    \"my-custom-script\": \"linter --arg1 --arg2\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {}\n}\n```\n\n_Note we don\u2019t pass a path as an argument for the runners. This is important since lint-staged will do this for you._\n\n### ESLint with default parameters for `*.js` and `*.jsx` running as a pre-commit hook\n\n```json\n{\n  \"*.{js,jsx}\": \"eslint\"\n}\n```\n\n### Automatically fix code style with `--fix` and add to commit\n\n```json\n{\n  \"*.js\": \"eslint --fix\"\n}\n```\n\nThis will run `eslint --fix` and automatically add changes to the commit.\n\n### Reuse npm script\n\nIf you wish to reuse a npm script defined in your package.json:\n\n```json\n{\n  \"*.js\": \"npm run my-custom-script --\"\n}\n```\n\nThe following is equivalent:\n\n```json\n{\n  \"*.js\": \"linter --arg1 --arg2\"\n}\n```\n\n### Use environment variables with linting commands\n\nLinting commands _do not_ support the shell convention of expanding environment variables. To enable the convention yourself, use a tool like [`cross-env`](https://github.com/kentcdodds/cross-env).\n\nFor example, here is `jest` running on all `.js` files with the `NODE_ENV` variable being set to `\"test\"`:\n\n```json\n{\n  \"*.js\": [\"cross-env NODE_ENV=test jest --bail --findRelatedTests\"]\n}\n```\n\n### Automatically fix code style with `prettier` for javascript, typescript, markdown, HTML, or CSS\n\n```json\n{\n  \"*.{js,jsx,ts,tsx,md,html,css}\": \"prettier --write\"\n}\n```\n\n### Stylelint for CSS with defaults and for SCSS with SCSS syntax\n\n```json\n{\n  \"*.css\": \"stylelint\",\n  \"*.scss\": \"stylelint --syntax=scss\"\n}\n```\n\n### Run PostCSS sorting and Stylelint to check\n\n```json\n{\n  \"*.scss\": [\"postcss --config path/to/your/config --replace\", \"stylelint\"]\n}\n```\n\n### Minify the images\n\n```json\n{\n  \"*.{png,jpeg,jpg,gif,svg}\": \"imagemin-lint-staged\"\n}\n```\n\n<details>\n  <summary>More about <code>imagemin-lint-staged</code></summary>\n\n[imagemin-lint-staged](https://github.com/tomchentw/imagemin-lint-staged) is a CLI tool designed for lint-staged usage with sensible defaults.\n\nSee more on [this blog post](https://medium.com/@tomchentw/imagemin-lint-staged-in-place-minify-the-images-before-adding-to-the-git-repo-5acda0b4c57e) for benefits of this approach.\n\n</details>\n\n### Typecheck your staged files with flow\n\n```json\n{\n  \"*.{js,jsx}\": \"flow focus-check\"\n}\n```\n\n## Frequently Asked Questions\n\n### Can I use `lint-staged` via node?\n\nYes!\n\n```js\nconst lintStaged = require('lint-staged')\n\ntry {\n  const success = await lintStaged()\n  console.log(success ? 'Linting was successful!' : 'Linting failed!')\n} catch (e) {\n  // Failed to load configuration\n  console.error(e)\n}\n```\n\nParameters to `lintStaged` are equivalent to their CLI counterparts:\n\n```js\nconst success = await lintStaged({\n  allowEmpty: false,\n  concurrent: true,\n  configPath: './path/to/configuration/file',\n  cwd: process.cwd(),\n  debug: false,\n  maxArgLength: null,\n  quiet: false,\n  relative: false,\n  shell: false\n  stash: true,\n  verbose: false\n})\n```\n\nYou can also pass config directly with `config` option:\n\n```js\nconst success = await lintStaged({\n  allowEmpty: false,\n  concurrent: true,\n  config: { '*.js': 'eslint --fix' },\n  cwd: process.cwd(),\n  debug: false,\n  maxArgLength: null,\n  quiet: false,\n  relative: false,\n  shell: false,\n  stash: true,\n  verbose: false\n})\n```\n\nThe `maxArgLength` option configures chunking of tasks into multiple parts that are run one after the other. This is to avoid issues on Windows platforms where the maximum length of the command line argument string is limited to 8192 characters. Lint-staged might generate a very long argument string when there are many staged files. This option is set automatically from the cli, but not via the Node.js API by default.\n\n### Using with JetBrains IDEs _(WebStorm, PyCharm, IntelliJ IDEA, RubyMine, etc.)_\n\n_**Update**_: The latest version of JetBrains IDEs now support running hooks as you would expect.\n\nWhen using the IDE's GUI to commit changes with the `precommit` hook, you might see inconsistencies in the IDE and command line. This is [known issue](https://youtrack.jetbrains.com/issue/IDEA-135454) at JetBrains so if you want this fixed, please vote for it on YouTrack.\n\nUntil the issue is resolved in the IDE, you can use the following config to work around it:\n\nhusky v1.x\n\n```json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\",\n      \"post-commit\": \"git update-index --again\"\n    }\n  }\n}\n```\n\nhusky v0.x\n\n```json\n{\n  \"scripts\": {\n    \"precommit\": \"lint-staged\",\n    \"postcommit\": \"git update-index --again\"\n  }\n}\n```\n\n_Thanks to [this comment](https://youtrack.jetbrains.com/issue/IDEA-135454#comment=27-2710654) for the fix!_\n\n### How to use `lint-staged` in a multi package monorepo?\n\nStarting with v5.0, `lint-staged` automatically resolves the git root **without any** additional configuration. You configure `lint-staged` as you normally would if your project root and git root were the same directory.\n\nIf you wish to use `lint-staged` in a multi package monorepo, it is recommended to install [`husky`](https://github.com/typicode/husky) in the root package.json.\n[`lerna`](https://github.com/lerna/lerna) can be used to execute the `precommit` script in all sub-packages.\n\nExample repo: [sudo-suhas/lint-staged-multi-pkg](https://github.com/sudo-suhas/lint-staged-multi-pkg).\n\n### Can I lint files outside of the current project folder?\n\ntl;dr: Yes, but the pattern should start with `../`.\n\nBy default, `lint-staged` executes linters only on the files present inside the project folder(where `lint-staged` is installed and run from).\nSo this question is relevant _only_ when the project folder is a child folder inside the git repo.\nIn certain project setups, it might be desirable to bypass this restriction. See [#425](https://github.com/okonet/lint-staged/issues/425), [#487](https://github.com/okonet/lint-staged/issues/487) for more context.\n\n`lint-staged` provides an escape hatch for the same(`>= v7.3.0`). For patterns that start with `../`, all the staged files are allowed to match against the pattern.\nNote that patterns like `*.js`, `**/*.js` will still only match the project files and not any of the files in parent or sibling directories.\n\nExample repo: [sudo-suhas/lint-staged-django-react-demo](https://github.com/sudo-suhas/lint-staged-django-react-demo).\n\n### How can i ignore files from `.eslintignore` ?\n\nESLint throws out `warning File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override` warnings that breaks the linting process ( if you used `--max-warnings=0` which is recommended ).\n\nBased on the discussion from https://github.com/eslint/eslint/issues/9977 , it was decided that using [the outlined script ](https://github.com/eslint/eslint/issues/9977#issuecomment-406420893)is the best route to fix this.\n\nSo you can setup a `.lintstagedrc.js` config file to do this:\n\n```js\nconst { CLIEngine } = require('eslint')\n\nconst cli = new CLIEngine({})\n\nmodule.exports = {\n  '*.js': (files) =>\n    'eslint --max-warnings=0 ' + files.filter((file) => !cli.isPathIgnored(file)).join(' ')\n}\n```"}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 482039}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 2440417}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 10591374}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 30538694}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 53144353}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 92656777}], "dependentsCount": 678, "starsCount": 23}, "github": {"starsCount": 7099, "forksCount": 271, "subscribersCount": 37, "issues": {"count": 883, "openCount": 63, "distribution": {"3600": 125, "10800": 66, "32400": 67, "97200": 101, "291600": 111, "874800": 115, "2624400": 88, "7873200": 74, "23619600": 50, "70858800": 71, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "okonet", "commitsCount": 255}, {"username": "iiroj", "commitsCount": 204}, {"username": "sudo-suhas", "commitsCount": 42}, {"username": "greenkeeper[bot]", "commitsCount": 22}, {"username": "luftywiranda13", "commitsCount": 19}, {"username": "greenkeeperio-bot", "commitsCount": 15}, {"username": "cameronhunter", "commitsCount": 13}, {"username": "sapegin", "commitsCount": 7}, {"username": "ybiquitous", "commitsCount": 5}, {"username": "Arhane", "commitsCount": 4}, {"username": "TheWolfNL", "commitsCount": 4}, {"username": "albertjan", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 3}, {"username": "rvetere", "commitsCount": 3}, {"username": "FezVrasta", "commitsCount": 2}, {"username": "MrRefactoring", "commitsCount": 2}, {"username": "ai", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "johnnywalker", "commitsCount": 2}, {"username": "plroebuck", "commitsCount": 2}, {"username": "rodneyrehm", "commitsCount": 2}, {"username": "0xflotus", "commitsCount": 1}, {"username": "1ven", "commitsCount": 1}, {"username": "Anber", "commitsCount": 1}, {"username": "ChristianMurphy", "commitsCount": 1}, {"username": "DeFuex", "commitsCount": 1}, {"username": "ELLIOTTCABLE", "commitsCount": 1}, {"username": "Hotell", "commitsCount": 1}, {"username": "IlyaSemenov", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "Justkant", "commitsCount": 1}, {"username": "MichaelBelousov", "commitsCount": 1}, {"username": "Noirbot", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "Tom910", "commitsCount": 1}, {"username": "albanx", "commitsCount": 1}, {"username": "alexilyaev", "commitsCount": 1}, {"username": "alexrinass", "commitsCount": 1}, {"username": "aried3r", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "bebraw", "commitsCount": 1}, {"username": "benblank", "commitsCount": 1}, {"username": "bgoscinski", "commitsCount": 1}, {"username": "binki", "commitsCount": 1}, {"username": "bnjjj", "commitsCount": 1}, {"username": "camacho", "commitsCount": 1}, {"username": "carnun", "commitsCount": 1}, {"username": "cenk1cenk2", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "efedorenko", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "fubhy", "commitsCount": 1}, {"username": "georeith", "commitsCount": 1}, {"username": "jasonxia23", "commitsCount": 1}, {"username": "jeffreyffs", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "josiahwiebe", "commitsCount": 1}, {"username": "julien-f", "commitsCount": 1}, {"username": "kachkaev", "commitsCount": 1}, {"username": "kentcdodds", "commitsCount": 1}, {"username": "kevinpagtakhan", "commitsCount": 1}, {"username": "kwonoj", "commitsCount": 1}, {"username": "levy9527", "commitsCount": 1}, {"username": "loklaan", "commitsCount": 1}, {"username": "malsf21", "commitsCount": 1}, {"username": "mbulfair", "commitsCount": 1}, {"username": "mojodna", "commitsCount": 1}, {"username": "mxstbr", "commitsCount": 1}, {"username": "nadavkaner", "commitsCount": 1}, {"username": "nataly87s", "commitsCount": 1}, {"username": "nikgraf", "commitsCount": 1}, {"username": "onigoetz", "commitsCount": 1}, {"username": "oprogramador", "commitsCount": 1}, {"username": "philihp", "commitsCount": 1}, {"username": "rodrigobdz", "commitsCount": 1}, {"username": "sa1dai", "commitsCount": 1}, {"username": "shadyvb", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "silbinarywolf", "commitsCount": 1}, {"username": "taylorham", "commitsCount": 1}, {"username": "timkindberg", "commitsCount": 1}, {"username": "tnrich", "commitsCount": 1}, {"username": "tomchentw", "commitsCount": 1}, {"username": "typicode", "commitsCount": 1}, {"username": "zploskey", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 6}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 58}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 85}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 231}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 21988, "testsSize": 103680}, "badges": [{"urls": {"original": "https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged?branch=master&svg=true", "service": "https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged", "shields": "https://img.shields.io/appveyor/ci/github/okonet/lint-staged.svg", "content": "https://img.shields.io/appveyor/ci/github/okonet/lint-staged.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 7515, "downloadsCount": 10179564.666666666, "downloadsAcceleration": 35145.95960806696, "dependentsCount": 678}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.39504665765097163}}, "score": {"final": 0.8552324967239112, "detail": {"quality": 0.9752221879636276, "popularity": 0.6416936413190719, "maintenance": 0.9659230453518508}}}}, {"babel-plugin-transform-runtime": {"analyzedAt": "2020-05-20T10:34:28.800Z", "collected": {"metadata": {"name": "babel-plugin-transform-runtime", "scope": "unscoped", "version": "6.23.0", "description": "Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals", "keywords": ["babel-plugin"], "date": "2017-02-13T23:04:28.038Z", "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-runtime", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-runtime": "^6.22.0"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.22.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-plugin-transform-runtime\n\nExternalise references to helpers and builtins, automatically polyfilling your code without polluting globals\n\n## Installation\n\n```sh\n$ npm install babel-plugin-transform-runtime\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-runtime\"]\n}\n```\n\n### Via CLI\n\n```sh\n$ babel --plugins transform-runtime script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-runtime\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 167409}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 900966}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4025144}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 12528344}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 23338768}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 50765732}], "dependentsCount": 2321, "starsCount": 32}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36557, "forksCount": 4277, "subscribersCount": 868, "issues": {"count": 11523, "openCount": 788, "distribution": {"3600": 2450, "10800": 906, "32400": 1061, "97200": 1226, "291600": 1049, "874800": 1006, "2624400": 839, "7873200": 792, "23619600": 839, "70858800": 1093, "212576400": 262}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1262}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 466}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 179}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 152}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 27}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 189}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 396}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 743}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11798557, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7364999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 41833, "downloadsCount": 4176114.6666666665, "downloadsAcceleration": -3584.27640791476, "dependentsCount": 2321}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24285635487506546}}, "score": {"final": 0.6728486566556228, "detail": {"quality": 0.8542368835096752, "popularity": 0.6179162490613582, "maintenance": 0.5723054412321282}}}}, {"async": {"analyzedAt": "2020-06-25T08:54:48.477Z", "collected": {"metadata": {"name": "async", "scope": "unscoped", "version": "3.2.0", "description": "Higher-order functions and common patterns for asynchronous code", "keywords": ["async", "callback", "module", "utility"], "date": "2020-02-24T02:58:20.125Z", "author": {"name": "Caolan McMahon"}, "publisher": {"username": "aearly", "email": "alexander.early@gmail.com"}, "maintainers": [{"username": "aearly", "email": "alexander.early@gmail.com"}, {"username": "beaugunderson", "email": "beau@beaugunderson.com"}, {"username": "caolan", "email": "caolan.mcmahon@gmail.com"}, {"username": "hargasinski", "email": "argasinski.hubert@gmail.com"}, {"username": "megawac", "email": "megawac@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/caolan/async.git"}, "links": {"npm": "https://www.npmjs.com/package/async", "homepage": "https://caolan.github.io/async/", "repository": "https://github.com/caolan/async", "bugs": "https://github.com/caolan/async/issues"}, "license": "MIT", "devDependencies": {"babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-minify": "^0.5.0", "babel-plugin-add-module-exports": "^0.2.1", "babel-plugin-istanbul": "^5.1.4", "babel-plugin-syntax-async-generators": "^6.13.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2", "babel-preset-es2015": "^6.3.13", "babel-preset-es2017": "^6.22.0", "babel-register": "^6.26.0", "babelify": "^8.0.0", "benchmark": "^2.1.1", "bluebird": "^3.4.6", "browserify": "^16.2.3", "chai": "^4.2.0", "cheerio": "^0.22.0", "coveralls": "^3.0.4", "es6-promise": "^2.3.0", "eslint": "^6.0.1", "eslint-plugin-prefer-arrow": "^1.1.5", "fs-extra": "^0.26.7", "jsdoc": "^3.6.2", "karma": "^4.1.0", "karma-browserify": "^5.3.0", "karma-edge-launcher": "^0.4.2", "karma-firefox-launcher": "^1.1.0", "karma-junit-reporter": "^1.2.0", "karma-mocha": "^1.2.0", "karma-mocha-reporter": "^2.2.0", "karma-safari-launcher": "^1.0.0", "mocha": "^6.1.4", "mocha-junit-reporter": "^1.18.0", "native-promise-only": "^0.8.0-a", "nyc": "^14.1.1", "rimraf": "^2.5.0", "rollup": "^0.63.4", "rollup-plugin-node-resolve": "^2.0.0", "rollup-plugin-npm": "^2.0.0", "rsvp": "^3.0.18", "semver": "^5.5.0", "yargs": "^11.0.0"}, "releases": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 3}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 4}, {"from": "2018-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 9}], "hasTestScript": true, "readme": "![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![Build Status via Azure Pipelines](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n<!--\n|Linux|Windows|MacOS|\n|-|-|-|\n|[![Linux Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Linux&configuration=Linux%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![Windows Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Windows&configuration=Windows%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![MacOS Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=OSX&configuration=OSX%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master)| -->\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/v3/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm i async`, it can also be used directly in the browser.  A ESM/MJS version is included in the main `async` package that should automatically be used with compatible bundlers such as Webpack and Rollup.\n\nA pure ESM version of Async is available as [`async-es`](https://www.npmjs.com/package/async-es).\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\nvar async = require(\"async\");\n\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```"}, "npm": {"downloads": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 5299286}, {"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 23130614}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 118300385}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 354712787}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 678393408}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 1305393622}], "dependentsCount": 23222, "starsCount": 1212}, "github": {"homepage": "http://caolan.github.io/async/", "starsCount": 26599, "forksCount": 2378, "subscribersCount": 719, "issues": {"count": 1713, "openCount": 7, "distribution": {"3600": 182, "10800": 77, "32400": 146, "97200": 206, "291600": 196, "874800": 164, "2624400": 127, "7873200": 121, "23619600": 249, "70858800": 210, "212576400": 35}, "isDisabled": false}, "contributors": [{"username": "aearly", "commitsCount": 396}, {"username": "megawac", "commitsCount": 168}, {"username": "hargasinski", "commitsCount": 62}, {"username": "ivanseidel", "commitsCount": 28}, {"username": "beaugunderson", "commitsCount": 25}, {"username": "ezubarev", "commitsCount": 20}, {"username": "fregante", "commitsCount": 19}, {"username": "zartdinov", "commitsCount": 11}, {"username": "brianmaissy", "commitsCount": 10}, {"username": "suguru03", "commitsCount": 8}, {"username": "ex1st", "commitsCount": 7}, {"username": "fritx", "commitsCount": 7}, {"username": "jessehouchins", "commitsCount": 7}, {"username": "justincy", "commitsCount": 7}, {"username": "Kikobeats", "commitsCount": 6}, {"username": "andalm", "commitsCount": 6}, {"username": "raydog", "commitsCount": 6}, {"username": "rmg", "commitsCount": 6}, {"username": "seriousManual", "commitsCount": 6}, {"username": "allanca", "commitsCount": 5}, {"username": "mikermcneil", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "andsnpl", "commitsCount": 4}, {"username": "bojand", "commitsCount": 4}, {"username": "edeustace", "commitsCount": 4}, {"username": "jnordberg", "commitsCount": 4}, {"username": "kimptoc", "commitsCount": 4}, {"username": "leahciMic", "commitsCount": 4}, {"username": "tekwiz", "commitsCount": 4}, {"username": "vsivsi", "commitsCount": 4}, {"username": "adam-26", "commitsCount": 3}, {"username": "aianus", "commitsCount": 3}, {"username": "ajfranzoia", "commitsCount": 3}, {"username": "asyncanup", "commitsCount": 3}, {"username": "boutell", "commitsCount": 3}, {"username": "calvinfo", "commitsCount": 3}, {"username": "dacoozheng", "commitsCount": 3}, {"username": "erik-krogh", "commitsCount": 3}, {"username": "marcolino", "commitsCount": 3}, {"username": "parshap", "commitsCount": 3}, {"username": "rhyzx", "commitsCount": 3}, {"username": "silentroach", "commitsCount": 3}, {"username": "th3james", "commitsCount": 3}, {"username": "uzyn", "commitsCount": 3}, {"username": "CodeMan99", "commitsCount": 2}, {"username": "MaZderMind", "commitsCount": 2}, {"username": "ORESoftware", "commitsCount": 2}, {"username": "Qix-", "commitsCount": 2}, {"username": "alFReD-NSH", "commitsCount": 2}, {"username": "andrewrk", "commitsCount": 2}, {"username": "asilvas", "commitsCount": 2}, {"username": "bao987654321", "commitsCount": 2}, {"username": "benfleis", "commitsCount": 2}, {"username": "ceedubs", "commitsCount": 2}, {"username": "chrisdukakis", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "ericz", "commitsCount": 2}, {"username": "gr2m", "commitsCount": 2}, {"username": "indexzero", "commitsCount": 2}, {"username": "jahraphael", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jiabei", "commitsCount": 2}, {"username": "jkroso", "commitsCount": 2}, {"username": "jsdevel", "commitsCount": 2}, {"username": "jstewmon", "commitsCount": 2}, {"username": "juanarbol", "commitsCount": 2}, {"username": "jub3i", "commitsCount": 2}, {"username": "mmalecki", "commitsCount": 2}, {"username": "nazomikan", "commitsCount": 2}, {"username": "pablonete", "commitsCount": 2}, {"username": "raszi", "commitsCount": 2}, {"username": "scop", "commitsCount": 2}, {"username": "smbape", "commitsCount": 2}, {"username": "spacegangster", "commitsCount": 2}, {"username": "tiankongldp", "commitsCount": 2}, {"username": "vvo", "commitsCount": 2}, {"username": "Grasseh", "commitsCount": 1}, {"username": "JoeCortopassi", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "alexandercerutti", "commitsCount": 1}, {"username": "andrebsguedes", "commitsCount": 1}, {"username": "avnersorek", "commitsCount": 1}, {"username": "baboquivari", "commitsCount": 1}, {"username": "baopham", "commitsCount": 1}, {"username": "binarykitchen", "commitsCount": 1}, {"username": "iamakulov", "commitsCount": 1}, {"username": "jakemingolla", "commitsCount": 1}, {"username": "justinmchase", "commitsCount": 1}, {"username": "karataev", "commitsCount": 1}, {"username": "matteofigus", "commitsCount": 1}, {"username": "omginbd", "commitsCount": 1}, {"username": "qw-in", "commitsCount": 1}, {"username": "reedfeng", "commitsCount": 1}, {"username": "sam09", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "surajwy", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "yemreinci", "commitsCount": 1}], "commits": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 1}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 24}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 32}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 3463, "testsSize": 322399, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/caolan/async.svg?branch=master", "service": "https://api.travis-ci.org/caolan/async.svg?branch=master", "shields": "https://img.shields.io/travis/caolan/async/master.svg", "content": "https://img.shields.io/travis/caolan/async/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/async.svg", "shields": "https://img.shields.io/npm/v/async.svg", "content": "https://img.shields.io/npm/v/async.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://coveralls.io/repos/caolan/async/badge.svg?branch=master", "service": "https://coveralls.io/repos/caolan/async/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/caolan/async/master.svg", "content": "https://img.shields.io/coveralls/caolan/async/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.99}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 31008, "downloadsCount": 118237595.66666667, "downloadsAcceleration": 139839.1672374428, "dependentsCount": 23222}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9785841053479658, "detail": {"quality": 0.9997814257657044, "popularity": 0.9391057147154067, "maintenance": 0.9998933641938921}}}}, {"eslint-plugin-node": {"analyzedAt": "2020-06-21T21:06:44.277Z", "collected": {"metadata": {"name": "eslint-plugin-node", "scope": "unscoped", "version": "11.1.0", "description": "Additional ESLint's rules for Node.js", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "node", "nodejs", "ecmascript", "shebang", "file", "path", "import", "require"], "date": "2020-03-28T11:46:46.795Z", "author": {"name": "Toru Nagashima"}, "publisher": {"username": "mysticatea", "email": "public@mysticatea.dev"}, "maintainers": [{"username": "mysticatea", "email": "star.ctor@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mysticatea/eslint-plugin-node.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-node", "homepage": "https://github.com/mysticatea/eslint-plugin-node#readme", "repository": "https://github.com/mysticatea/eslint-plugin-node", "bugs": "https://github.com/mysticatea/eslint-plugin-node/issues"}, "license": "MIT", "dependencies": {"eslint-plugin-es": "^3.0.0", "eslint-utils": "^2.0.0", "ignore": "^5.1.1", "minimatch": "^3.0.4", "resolve": "^1.10.1", "semver": "^6.1.0"}, "devDependencies": {"@mysticatea/eslint-plugin": "^10.0.3", "codecov": "^3.3.0", "eslint": "^6.3.0", "eslint-plugin-node": "file:.", "fast-glob": "^2.2.6", "globals": "^11.12.0", "mocha": "^6.1.4", "nyc": "^14.0.0", "opener": "^1.5.1", "punycode": "^2.1.1", "rimraf": "^2.6.3"}, "peerDependencies": {"eslint": ">=5.16.0"}, "releases": [{"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 2}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 3}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 5}, {"from": "2018-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-node\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-node.svg)](https://www.npmjs.com/package/eslint-plugin-node)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-plugin-node.svg)](http://www.npmtrends.com/eslint-plugin-node)\n[![Build Status](https://github.com/mysticatea/eslint-plugin-node/workflows/CI/badge.svg)](https://github.com/mysticatea/eslint-plugin-node/actions)\n[![Coverage Status](https://codecov.io/gh/mysticatea/eslint-plugin-node/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/eslint-plugin-node)\n[![Dependency Status](https://david-dm.org/mysticatea/eslint-plugin-node.svg)](https://david-dm.org/mysticatea/eslint-plugin-node)\n\nAdditional ESLint's rules for Node.js\n\n## \ud83d\udcbf Install & Usage\n\n```\n$ npm install --save-dev eslint eslint-plugin-node\n```\n\n- Requires Node.js `>=8.10.0`\n- Requires ESLint `>=5.16.0`\n\n**Note:** It recommends a use of [the \"engines\" field of package.json](https://docs.npmjs.com/files/package.json#engines). The \"engines\" field is used by `node/no-unsupported-features/*` rules.\n\n**.eslintrc.json** (An example)\n\n```jsonc\n{\n    \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:node/recommended\"\n    ],\n    \"parserOptions\": {\n        // Only ESLint 6.2.0 and later support ES2020.\n        \"ecmaVersion\": 2020\n    },\n    \"rules\": {\n        \"node/exports-style\": [\"error\", \"module.exports\"],\n        \"node/file-extension-in-import\": [\"error\", \"always\"],\n        \"node/prefer-global/buffer\": [\"error\", \"always\"],\n        \"node/prefer-global/console\": [\"error\", \"always\"],\n        \"node/prefer-global/process\": [\"error\", \"always\"],\n        \"node/prefer-global/url-search-params\": [\"error\", \"always\"],\n        \"node/prefer-global/url\": [\"error\", \"always\"],\n        \"node/prefer-promises/dns\": \"error\",\n        \"node/prefer-promises/fs\": \"error\"\n    }\n}\n```\n\n**package.json** (An example)\n\n```json\n{\n    \"name\": \"your-module\",\n    \"version\": \"1.0.0\",\n    \"type\": \"commonjs\",\n    \"engines\": {\n        \"node\": \">=8.10.0\"\n    }\n}\n```\n\n## \ud83d\udcd6 Rules\n\n- \u2b50\ufe0f - the mark of recommended rules.\n- \u2712\ufe0f - the mark of fixable rules.\n\n<!--RULES_TABLE_START-->\n### Possible Errors\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-callback-literal](./docs/rules/no-callback-literal.md) | ensure Node.js-style error-first callback pattern is followed |  |\n| [node/no-exports-assign](./docs/rules/no-exports-assign.md) | disallow the assignment to `exports` | \u2b50\ufe0f |\n| [node/no-extraneous-import](./docs/rules/no-extraneous-import.md) | disallow `import` declarations which import extraneous modules | \u2b50\ufe0f |\n| [node/no-extraneous-require](./docs/rules/no-extraneous-require.md) | disallow `require()` expressions which import extraneous modules | \u2b50\ufe0f |\n| [node/no-missing-import](./docs/rules/no-missing-import.md) | disallow `import` declarations which import non-existence modules | \u2b50\ufe0f |\n| [node/no-missing-require](./docs/rules/no-missing-require.md) | disallow `require()` expressions which import non-existence modules | \u2b50\ufe0f |\n| [node/no-unpublished-bin](./docs/rules/no-unpublished-bin.md) | disallow `bin` files that npm ignores | \u2b50\ufe0f |\n| [node/no-unpublished-import](./docs/rules/no-unpublished-import.md) | disallow `import` declarations which import private modules | \u2b50\ufe0f |\n| [node/no-unpublished-require](./docs/rules/no-unpublished-require.md) | disallow `require()` expressions which import private modules | \u2b50\ufe0f |\n| [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) | disallow unsupported ECMAScript built-ins on the specified version | \u2b50\ufe0f |\n| [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) | disallow unsupported ECMAScript syntax on the specified version | \u2b50\ufe0f |\n| [node/no-unsupported-features/node-builtins](./docs/rules/no-unsupported-features/node-builtins.md) | disallow unsupported Node.js built-in APIs on the specified version | \u2b50\ufe0f |\n| [node/process-exit-as-throw](./docs/rules/process-exit-as-throw.md) | make `process.exit()` expressions the same code path as `throw` | \u2b50\ufe0f |\n| [node/shebang](./docs/rules/shebang.md) | suggest correct usage of shebang | \u2b50\ufe0f\u2712\ufe0f |\n\n### Best Practices\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-deprecated-api](./docs/rules/no-deprecated-api.md) | disallow deprecated APIs | \u2b50\ufe0f |\n\n### Stylistic Issues\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/exports-style](./docs/rules/exports-style.md) | enforce either `module.exports` or `exports` |  |\n| [node/file-extension-in-import](./docs/rules/file-extension-in-import.md) | enforce the style of file extensions in `import` declarations | \u2712\ufe0f |\n| [node/prefer-global/buffer](./docs/rules/prefer-global/buffer.md) | enforce either `Buffer` or `require(\"buffer\").Buffer` |  |\n| [node/prefer-global/console](./docs/rules/prefer-global/console.md) | enforce either `console` or `require(\"console\")` |  |\n| [node/prefer-global/process](./docs/rules/prefer-global/process.md) | enforce either `process` or `require(\"process\")` |  |\n| [node/prefer-global/text-decoder](./docs/rules/prefer-global/text-decoder.md) | enforce either `TextDecoder` or `require(\"util\").TextDecoder` |  |\n| [node/prefer-global/text-encoder](./docs/rules/prefer-global/text-encoder.md) | enforce either `TextEncoder` or `require(\"util\").TextEncoder` |  |\n| [node/prefer-global/url-search-params](./docs/rules/prefer-global/url-search-params.md) | enforce either `URLSearchParams` or `require(\"url\").URLSearchParams` |  |\n| [node/prefer-global/url](./docs/rules/prefer-global/url.md) | enforce either `URL` or `require(\"url\").URL` |  |\n| [node/prefer-promises/dns](./docs/rules/prefer-promises/dns.md) | enforce `require(\"dns\").promises` |  |\n| [node/prefer-promises/fs](./docs/rules/prefer-promises/fs.md) | enforce `require(\"fs\").promises` |  |\n\n### Deprecated rules\n\nThese rules have been deprecated in accordance with the [deprecation policy](https://eslint.org/docs/user-guide/rule-deprecation), and replaced by newer rules:\n\n| Rule ID | Replaced by |\n|:--------|:------------|\n| [node/no-hide-core-modules](./docs/rules/no-hide-core-modules.md) | (nothing) |\n| [node/no-unsupported-features](./docs/rules/no-unsupported-features.md) | [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) and [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) |\n\n<!--RULES_TABLE_END-->\n\n## \ud83d\udd27 Configs\n\nThis plugin provides three configs:\n\n- `plugin:node/recommended` condiders both CommonJS and ES Modules. If [`\"type\":\"module\"` field](https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff#b023) existed in package.json then it considers files as ES Modules. Otherwise it considers files as CommonJS. In addition, it considers `*.mjs` files as ES Modules and `*.cjs` files as CommonJS.\n- `plugin:node/recommended-module` considers all files as ES Modules.\n- `plugin:node/recommended-script` considers all files as CommonJS.\n\nThose preset config:\n\n- enable [no-process-exit](http://eslint.org/docs/rules/no-process-exit) rule because [the official document](https://nodejs.org/api/process.html#process_process_exit_code) does not recommend a use of `process.exit()`.\n- enable plugin rules which are given :star: in the above table.\n- add `{ecmaVersion: 2019}` and etc into `parserOptions`.\n- add proper globals into `globals`.\n- add this plugin into `plugins`.\n\n## \ud83d\udc6b FAQ\n\n- Q: The `no-missing-import` / `no-missing-require` rules don't work with nested folders in SublimeLinter-eslint\n- A: See [context.getFilename() in rule returns relative path](https://github.com/roadhump/SublimeLinter-eslint#contextgetfilename-in-rule-returns-relative-path) in the SublimeLinter-eslint FAQ.\n\n## \ud83d\udea5 Semantic Versioning Policy\n\n`eslint-plugin-node` follows [semantic versioning](http://semver.org/) and [ESLint's Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n- Patch release (intended to not break your lint build)\n    - A bug fix in a rule that results in it reporting fewer errors.\n    - Improvements to documentation.\n    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    - Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n- Minor release (might break your lint build)\n    - A bug fix in a rule that results in it reporting more errors.\n    - A new rule is created.\n    - A new option to an existing rule is created.\n    - An existing rule is deprecated.\n- Major release (likely to break your lint build)\n    - A support for old Node version is dropped.\n    - A support for old ESLint version is dropped.\n    - An existing rule is changed in it reporting more errors.\n    - An existing rule is removed.\n    - An existing option of a rule is removed.\n    - An existing config is updated.\n\n## \ud83d\udcf0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/eslint-plugin-node/releases)\n\n## \u2764\ufe0f Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run coverage` shows the coverage result of `npm test` command.\n- `npm run clean` removes the coverage result of `npm test` command."}, "npm": {"downloads": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 90472}, {"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 1777813}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 7450906}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 22309272}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 39672977}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 69150183}], "dependentsCount": 1307, "starsCount": 17}, "github": {"starsCount": 657, "forksCount": 87, "subscribersCount": 9, "issues": {"count": 234, "openCount": 48, "distribution": {"3600": 15, "10800": 10, "32400": 22, "97200": 26, "291600": 31, "874800": 22, "2624400": 31, "7873200": 32, "23619600": 24, "70858800": 14, "212576400": 7}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 335}, {"username": "aladdin-add", "commitsCount": 4}, {"username": "AprilArcus", "commitsCount": 2}, {"username": "feross", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "Fjandin", "commitsCount": 1}, {"username": "Lalem001", "commitsCount": 1}, {"username": "LitoMore", "commitsCount": 1}, {"username": "ZauberNerd", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "davej", "commitsCount": 1}, {"username": "fabiopaiva", "commitsCount": 1}, {"username": "fisker", "commitsCount": 1}, {"username": "fukuchi", "commitsCount": 1}, {"username": "imSidJ", "commitsCount": 1}, {"username": "jackharrhy", "commitsCount": 1}, {"username": "jokeyrhyme", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "platinumazure", "commitsCount": 1}, {"username": "remidenele", "commitsCount": 1}, {"username": "rkaneko", "commitsCount": 1}, {"username": "ronkorving", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "sudo-suhas", "commitsCount": 1}, {"username": "takenspc", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yeonjuan", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 0}, {"from": "2020-05-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 4}, {"from": "2020-03-23T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 4}, {"from": "2019-12-24T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 15}, {"from": "2019-06-22T00:00:00.000Z", "to": "2020-06-21T00:00:00.000Z", "count": 50}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 9423, "testsSize": 610463}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-node.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-node.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-node.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-plugin-node.svg", "shields": "https://img.shields.io/npm/dm/eslint-plugin-node.svg", "content": "https://img.shields.io/npm/dm/eslint-plugin-node.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/mysticatea/eslint-plugin-node.svg", "service": "https://david-dm.org/mysticatea/eslint-plugin-node.svg", "shields": "https://img.shields.io/david/mysticatea/eslint-plugin-node.svg", "content": "https://img.shields.io/david/mysticatea/eslint-plugin-node.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "coverage": 0.99, "outdatedDependencies": {"semver": {"required": "^6.1.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9984999999999999, "health": 0.75, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 802, "downloadsCount": 7436424, "downloadsAcceleration": 22465.96219558599, "dependentsCount": 1307}, "maintenance": {"releasesFrequency": 0.7704623287671233, "commitsFrequency": 0.817345890410959, "openIssues": 0.9914529914529915, "issuesDistribution": 0.25420167975832036}}, "score": {"final": 0.804356370309748, "detail": {"quality": 0.9790874969714923, "popularity": 0.5590074526344563, "maintenance": 0.8999357508464021}}}}, {"extract-text-webpack-plugin": {"analyzedAt": "2020-05-20T05:12:22.275Z", "collected": {"metadata": {"name": "extract-text-webpack-plugin", "scope": "unscoped", "version": "3.0.2", "description": "Extract text from bundle into a file.", "date": "2017-10-25T17:10:40.610Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}, {"username": "spacek33z", "email": "kees@webduck.nl"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/webpack-contrib/extract-text-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/extract-text-webpack-plugin", "homepage": "http://github.com/webpack-contrib/extract-text-webpack-plugin", "repository": "https://github.com/webpack-contrib/extract-text-webpack-plugin", "bugs": "https://github.com/webpack-contrib/extract-text-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"async": "^2.4.1", "loader-utils": "^1.1.0", "schema-utils": "^0.3.0", "webpack-sources": "^1.0.1"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-jest": "^21.2.0", "babel-plugin-transform-object-rest-spread": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-preset-env": "^1.6.1", "cross-env": "^5.1.0", "css-loader": "^0.28.7", "del-cli": "^1.1.0", "eslint": "^4.9.0", "eslint-config-webpack": "^1.2.5", "eslint-plugin-import": "^2.8.0", "file-loader": "^1.1.5", "jest": "^21.2.1", "lint-staged": "^4.3.0", "nsp": "^2.8.1", "pre-commit": "^1.2.2", "raw-loader": "^0.5.1", "standard-version": "^4.2.0", "style-loader": "^0.19.0", "webpack": "^3.8.1", "webpack-defaults": "^1.6.0"}, "peerDependencies": {"webpack": "^3.1.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "deprecated": "Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin", "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 205084}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1090953}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4839192}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 14803523}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 28047740}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 62026356}], "dependentsCount": 3857, "starsCount": 103}, "github": {"starsCount": 4081, "forksCount": 552, "subscribersCount": 100, "issues": {"count": 819, "openCount": 0, "distribution": {"3600": 102, "10800": 39, "32400": 46, "97200": 57, "291600": 69, "874800": 66, "2624400": 83, "7873200": 91, "23619600": 120, "70858800": 121, "212576400": 25}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 84}, {"username": "texastoland", "commitsCount": 17}, {"username": "bebraw", "commitsCount": 15}, {"username": "d3viant0ne", "commitsCount": 14}, {"username": "scottdj92", "commitsCount": 11}, {"username": "lcxfs1991", "commitsCount": 10}, {"username": "evilebottnawi", "commitsCount": 6}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "andreypopp", "commitsCount": 4}, {"username": "insin", "commitsCount": 3}, {"username": "CtrlZvi", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "Daniel15", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "MicheleBertoli", "commitsCount": 1}, {"username": "MirrorBytes", "commitsCount": 1}, {"username": "RabidFX", "commitsCount": 1}, {"username": "SherylHohman", "commitsCount": 1}, {"username": "ShinyChang", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "SpaceK33z", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "akihikodaki", "commitsCount": 1}, {"username": "bcbcb", "commitsCount": 1}, {"username": "billgo", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "candu", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "daltones", "commitsCount": 1}, {"username": "diurnalist", "commitsCount": 1}, {"username": "fortruce", "commitsCount": 1}, {"username": "frederikprijck", "commitsCount": 1}, {"username": "helloyou2012", "commitsCount": 1}, {"username": "huan086", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jameslnewell", "commitsCount": 1}, {"username": "kostasmanionis", "commitsCount": 1}, {"username": "lvming6816077", "commitsCount": 1}, {"username": "mateatslc", "commitsCount": 1}, {"username": "numical", "commitsCount": 1}, {"username": "patrickhpan", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "ratson", "commitsCount": 1}, {"username": "renarsvilnis", "commitsCount": 1}, {"username": "robertsheacole", "commitsCount": 1}, {"username": "samertm", "commitsCount": 1}, {"username": "simon04", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "spicydonuts", "commitsCount": 1}, {"username": "sresant", "commitsCount": 1}, {"username": "timse", "commitsCount": 1}, {"username": "x-yuri", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 19608, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^0.3.0", "stable": "2.6.6", "latest": "2.6.6"}, "async": {"required": "^2.4.1", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 4892, "downloadsCount": 4934507.666666667, "downloadsAcceleration": -5685.816514459671, "dependentsCount": 3857}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.4216351325727148, "detail": {"quality": 0.4692737693360471, "popularity": 0.5619038120233486, "maintenance": 0.24053333589636755}}}}, {"eslint-plugin-standard": {"analyzedAt": "2020-06-13T09:52:55.261Z", "collected": {"metadata": {"name": "eslint-plugin-standard", "scope": "unscoped", "version": "4.0.1", "description": "ESlint Plugin for the Standard Linter", "keywords": ["eslint", "eslintplugin"], "date": "2019-08-19T20:25:09.852Z", "author": {"name": "Jamund Ferguson", "email": "jamund@gmail.com", "username": "xjamundx"}, "publisher": {"username": "feross", "email": "feross@feross.org"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}, {"username": "xjamundx", "email": "jamund@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/standard/eslint-plugin-standard.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-standard", "homepage": "https://github.com/standard/eslint-plugin-standard#readme", "repository": "https://github.com/standard/eslint-plugin-standard", "bugs": "https://github.com/standard/eslint-plugin-standard/issues"}, "license": "MIT", "devDependencies": {"eslint": "^6.1.0", "mocha": "^6.2.0", "standard": "*"}, "peerDependencies": {"eslint": ">=5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# eslint-plugin-standard [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg\n[travis-url]: https://travis-ci.org/standard/eslint-plugin-standard\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-standard.svg\n[npm-url]: https://npmjs.org/package/eslint-plugin-standard\n[downloads-image]: https://img.shields.io/npm/dm/eslint-plugin-standard.svg\n[downloads-url]: https://npmjs.org/package/eslint-plugin-standard\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\nESlint Rules for the Standard Linter\n\n### Usage\n\n`npm install --save-dev eslint-plugin-standard`\n\n### Configuration\n\n```js\n{\n  rules: {\n    'standard/object-curly-even-spacing': [2, \"either\"],\n    'standard/array-bracket-even-spacing': [2, \"either\"],\n    'standard/computed-property-even-spacing': [2, \"even\"],\n    'standard/no-callback-literal': [2, [\"cb\", \"callback\"]]\n  }\n}\n```\n\n### Rules Explanations\n\nThere are several rules that were created specifically for the `standard` linter.\n\n- `object-curly-even-spacing` - Like `object-curly-spacing` from ESLint except it has an `either` option which lets you have 1 or 0 spaces padding.\n- `array-bracket-even-spacing` - Like `array-bracket-even-spacing` from ESLint except it has an `either` option which lets you have 1 or 0 spacing padding.\n- `computed-property-even-spacing` - Like `computed-property-spacing` around ESLint except is has an `even` option which lets you have 1 or 0 spacing padding.\n- `no-callback-literal` - Ensures that we strictly follow the callback pattern with `undefined`, `null` or an error object in the first position of a callback."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 197310}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1262546}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5470237}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 15943739}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 28517838}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 51832068}], "dependentsCount": 1093, "starsCount": 10}, "github": {"starsCount": 108, "forksCount": 20, "subscribersCount": 7, "issues": {"count": 35, "openCount": 2, "distribution": {"3600": 7, "10800": 1, "32400": 3, "97200": 5, "291600": 2, "874800": 1, "2624400": 4, "7873200": 3, "23619600": 5, "70858800": 3, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 54}, {"username": "xjamundx", "commitsCount": 3}, {"username": "delaguilaluis", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "Flet", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "limpid-kzonix", "commitsCount": 1}, {"username": "sorear", "commitsCount": 1}, {"username": "voxpelli", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1862, "testsSize": 49754, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg", "service": "https://api.travis-ci.org/standard/eslint-plugin-standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg", "content": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-standard.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-standard.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-plugin-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-plugin-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-plugin-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 155, "downloadsCount": 5314579.666666667, "downloadsAcceleration": 14190.583789954333, "dependentsCount": 1093}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8101584129749972, "detail": {"quality": 0.9681725440576688, "popularity": 0.48498277797095535, "maintenance": 0.9998933641938921}}}}, {"eslint-plugin-prettier": {"analyzedAt": "2020-06-14T23:24:17.989Z", "collected": {"metadata": {"name": "eslint-plugin-prettier", "scope": "unscoped", "version": "3.1.4", "description": "Runs prettier as an eslint rule", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "prettier"], "date": "2020-06-14T23:23:38.075Z", "author": {"name": "Teddy Katz"}, "publisher": {"username": "bpscott", "email": "ben@reload.me.uk"}, "maintainers": [{"username": "bpscott", "email": "ben@reload.me.uk"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/eslint-plugin-prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-prettier", "homepage": "https://github.com/prettier/eslint-plugin-prettier#readme", "repository": "https://github.com/prettier/eslint-plugin-prettier", "bugs": "https://github.com/prettier/eslint-plugin-prettier/issues"}, "license": "MIT", "dependencies": {"prettier-linter-helpers": "^1.0.0"}, "devDependencies": {"@not-an-aardvark/node-release-script": "^0.1.0", "eslint": "^7.0.0", "eslint-config-not-an-aardvark": "^2.1.0", "eslint-config-prettier": "^6.0.0", "eslint-plugin-eslint-plugin": "^2.0.0", "eslint-plugin-node": "^8.0.0", "eslint-plugin-self": "^1.1.0", "mocha": "^6.0.0", "prettier": "^1.15.3", "vue-eslint-parser": "^6.0.0"}, "peerDependencies": {"eslint": ">=5.0.0", "prettier": ">=1.13.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-prettier [![Build Status](https://travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master)](https://travis-ci.org/prettier/eslint-plugin-prettier)\n\nRuns [Prettier](https://github.com/prettier/prettier) as an [ESLint](http://eslint.org) rule and reports differences as individual ESLint issues.\n\n## Sample\n\n```js\nerror: Insert `,` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:22:25:\n  20 | import {\n  21 |   observeActiveEditorsDebounced,\n> 22 |   editorChangesDebounced\n     |                         ^\n  23 | } from './debounced';;\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n\n\nerror: Delete `;` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:23:21:\n  21 |   observeActiveEditorsDebounced,\n  22 |   editorChangesDebounced\n> 23 | } from './debounced';;\n     |                     ^\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n  26 | import {cacheWhileSubscribed} from '../commons-node/observable';\n\n\n2 errors found.\n```\n\n> `./node_modules/.bin/eslint --format codeframe pkg/commons-atom/ActiveEditorRegistry.js` (code from [nuclide](https://github.com/facebook/nuclide)).\n\n## Installation\n\n```sh\nnpm install --save-dev eslint-plugin-prettier\nnpm install --save-dev --save-exact prettier\n```\n\n**_`eslint-plugin-prettier` does not install Prettier or ESLint for you._** _You must install these yourself._\n\nThen, in your `.eslintrc.json`:\n\n```json\n{\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}\n```\n\n## Recommended Configuration\n\nThis plugin works best if you disable all other ESLint rules relating to code formatting, and only enable rules that detect patterns in the AST. (If another active ESLint rule disagrees with `prettier` about how code should be formatted, it will be impossible to avoid lint errors.) You can use [eslint-config-prettier](https://github.com/prettier/eslint-config-prettier) to disable all formatting-related ESLint rules.\n\nIf your desired formatting does not match the `prettier` output, you should use a different tool such as [prettier-eslint](https://github.com/prettier/prettier-eslint) instead.\n\nTo integrate this plugin with `eslint-config-prettier`, you can use the `\"recommended\"` configuration:\n\n1. In addition to the above installation instructions, install `eslint-config-prettier`:\n\n   ```sh\n   npm install --save-dev eslint-config-prettier\n   ```\n\n2. Then you need to add `plugin:prettier/recommended` as the last extension in your `.eslintrc.json`:\n\n   ```json\n   {\n     \"extends\": [\"plugin:prettier/recommended\"]\n   }\n   ```\n\nThis does three things:\n\n- Enables `eslint-plugin-prettier`.\n- Sets the `prettier/prettier` rule to `\"error\"`.\n- Extends the `eslint-config-prettier` configuration.\n\nYou can then set Prettier's own options inside a `.prettierrc` file.\n\n3. In order to support special ESLint plugins (e.g. [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react)), add extra exclusions for the plugins you use like so:\n\n```json\n{\n  \"extends\": [\n    \"plugin:prettier/recommended\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\"\n  ]\n}\n```\n\nFor the list of every available exclusion rule set, please see the [readme of eslint-config-prettier](https://github.com/prettier/eslint-config-prettier/blob/master/README.md).\n\n## Options\n\n> Note: While it is possible to pass options to Prettier via your ESLint configuration file, it is not recommended because editor extensions such as `prettier-atom` and `prettier-vscode` **will** read [`.prettierrc`](https://prettier.io/docs/en/configuration.html), but **won't** read settings from ESLint, which can lead to an inconsistent experience.\n\n- The first option:\n\n  - An object representing [options](https://prettier.io/docs/en/options.html) that will be passed into prettier. Example:\n\n    ```json\n    \"prettier/prettier\": [\"error\", {\"singleQuote\": true, \"parser\": \"flow\"}]\n    ```\n\n    NB: This option will merge and override any config set with `.prettierrc` files\n\n- The second option:\n\n  - An object with the following options\n\n    - `usePrettierrc`: Enables loading of the Prettier configuration file, (default: `true`). May be useful if you are using multiple tools that conflict with each other, or do not wish to mix your ESLint settings with your Prettier configuration.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"usePrettierrc\": false\n      }]\n      ```\n\n    - `fileInfoOptions`: Options that are passed to [prettier.getFileInfo](https://prettier.io/docs/en/api.html#prettiergetfileinfofilepath-options) to decide whether a file needs to be formatted. Can be used for example to opt-out from ignoring files located in `node_modules` directories.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"fileInfoOptions\": {\n          \"withNodeModules\": true\n        }\n      }]\n      ```\n\n- The rule is autofixable -- if you run `eslint` with the `--fix` flag, your code will be formatted according to `prettier` style.\n\n---\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/prettier/eslint-plugin-prettier/blob/master/CONTRIBUTING.md)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 151009}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3672413}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15156085}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44687487}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 76323253}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 126299254}], "dependentsCount": 1978, "starsCount": 6}, "github": {"starsCount": 1536, "forksCount": 104, "subscribersCount": 19, "issues": {"count": 304, "openCount": 16, "distribution": {"3600": 121, "10800": 13, "32400": 20, "97200": 30, "291600": 20, "874800": 29, "2624400": 23, "7873200": 25, "23619600": 14, "70858800": 7, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "not-an-aardvark", "commitsCount": 35}, {"username": "BPScott", "commitsCount": 25}, {"username": "zertosh", "commitsCount": 6}, {"username": "azz", "commitsCount": 3}, {"username": "dependabot-preview[bot]", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "SimenB", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "eliperelman", "commitsCount": 1}, {"username": "ikatyang", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "kripod", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "louim", "commitsCount": 1}, {"username": "lydell", "commitsCount": 1}, {"username": "oieduardorabelo", "commitsCount": 1}, {"username": "rootulp", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "sebjambor", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 16}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 5191, "testsSize": 8859, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master", "service": "https://api.travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master", "shields": "https://img.shields.io/travis/prettier/eslint-plugin-prettier/master.svg", "content": "https://img.shields.io/travis/prettier/eslint-plugin-prettier/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1688, "downloadsCount": 14895829, "downloadsAcceleration": 59292.54967656011, "dependentsCount": 1978}, "maintenance": {"releasesFrequency": 0.4839041095890411, "commitsFrequency": 0.8161643835616438, "openIssues": 1, "issuesDistribution": 0.7967484687393199}}, "score": {"final": 0.8544768812044419, "detail": {"quality": 0.940855086992985, "popularity": 0.651114606374565, "maintenance": 0.9838006939298535}}}}, {"karma-chrome-launcher": {"analyzedAt": "2020-06-09T04:59:59.597Z", "collected": {"metadata": {"name": "karma-chrome-launcher", "scope": "unscoped", "version": "3.1.0", "description": "A Karma plugin. Launcher for Chrome and Chrome Canary.", "keywords": ["karma-plugin", "karma-launcher", "chrome"], "date": "2019-08-13T19:33:03.137Z", "author": {"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Rog\u00e9rio Vicente", "email": "rogeriopvl@gmail.com"}, {"name": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"name": "rogeriopvl", "email": "rogeriopvl@gmail.com"}, {"name": "Friedel Ziegelmayer", "email": "dignifiedquire@gmail.com"}, {"name": "greenkeeperio-bot", "email": "support@greenkeeper.io"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Micha\u0142 Go\u0142\u0119biowski-Owczarek", "email": "m.goleb@gmail.com"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "Filipe Guerra", "email": "alias.mac@gmail.com"}, {"name": "Andrey Taranov", "email": "andrey.taranov@nordea.com"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "J. Abbott", "email": "abbotto@users.noreply.github.com"}, {"name": "Joe Doyle", "email": "valdain@gmail.com"}, {"name": "Julien Sanchez", "email": "julien.sanchez@lim.eu"}, {"name": "Florian Richter", "email": "florian@lkr24.de"}, {"name": "Alexander Fedyashov", "email": "af@e42.guru"}, {"name": "Marko Vuksanovic", "email": "markovuksanovic@gmail.com"}, {"name": "Fran\u00e7ois SIMOND", "email": "frsimond@users.noreply.github.com"}, {"name": "Nicholas Mitchell", "email": "mitchellnicholasl@gmail.com"}, {"name": "Parashuram N", "email": "code@r.nparashuram.com"}, {"name": "Hai Feng Kao", "email": "haifeng@cocoaspice.in"}, {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Vincent Voyer", "email": "vincent.voyer@algolia.com"}, {"name": "David", "email": "davidsu@wix.com"}, {"name": "brutalcrozt", "email": "goendoell49@gmail.com"}, {"name": "cexbrayat", "email": "cedric@ninja-squad.com"}, {"name": "daniel rodriguez", "email": "maieutiquer@users.noreply.github.com"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "gkostov", "email": "p_e_a@gbg.bg"}, {"name": "Florian-R", "email": "florian.r.dev@gmail.com"}, {"name": "J Rob Gant", "email": "rgant@alum.wpi.edu"}, {"name": "Jeff Cross", "email": "middlefloor@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-chrome-launcher.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-chrome-launcher", "homepage": "https://github.com/karma-runner/karma-chrome-launcher#readme", "repository": "https://github.com/karma-runner/karma-chrome-launcher", "bugs": "https://github.com/karma-runner/karma-chrome-launcher/issues"}, "license": "MIT", "dependencies": {"which": "^1.2.1"}, "devDependencies": {"chai": "^4.2.0", "grunt": "^1.0.1", "grunt-auto-release": "^0.0.7", "grunt-bump": "^0.8.0", "grunt-conventional-changelog": "^6.1.0", "grunt-conventional-github-releaser": "^1.0.0", "grunt-karma": "^3.0.0", "grunt-npm": "^0.0.2", "grunt-simple-mocha": "^0.4.0", "jasmine-node": "^3.0.0", "karma": "^4.1.0", "karma-mocha": "1.x || ^0.2.0", "load-grunt-tasks": "^4.0.0", "mocha": "^5.2.0", "sinon": "^7.1.1", "standard": "^12.0.0"}, "releases": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 3}, {"from": "2018-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# karma-chrome-launcher\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-chrome-launcher)\n [![npm version](https://img.shields.io/npm/v/karma-chrome-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-chrome-launcher) [![npm downloads](https://img.shields.io/npm/dm/karma-chrome-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-chrome-launcher)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-chrome-launcher) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-chrome-launcher) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-chrome-launcher#info=devDependencies)\n\n> Launcher for Google Chrome, Google Chrome Canary and Google Chromium.\n\n## Installation\n\nThe easiest way is to keep `karma-chrome-launcher` as a devDependency in your `package.json`,\nby running\n\n```bash\n$ npm i -D karma-chrome-launcher\n```\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['Chrome', 'Chrome_without_security'], // You may use 'ChromeCanary', 'Chromium' or any other supported browser\n\n    // you can define custom flags\n    customLaunchers: {\n      Chrome_without_security: {\n        base: 'Chrome',\n        flags: ['--disable-web-security', '--disable-site-isolation-trials']\n      }\n    }\n  })\n}\n```\n\nThe `--user-data-dir` is set to a temporary directory but can be overridden on a custom launcher as shown below.\nOne reason to do this is to have a permanent Chrome user data directory inside the project directory to be able to\ninstall plugins there (e.g. JetBrains IDE Support plugin).\n\n```js\ncustomLaunchers: {\n  Chrome_with_debugging: {\n    base: 'Chrome',\n    chromeDataDir: path.resolve(__dirname, '.chrome')\n  }\n}\n```\n\nYou can pass list of browsers as a CLI argument too:\n\n```bash\n$ karma start --browsers Chrome,Chrome_without_security\n```\n\n## Headless Chromium with Puppeteer\n\nThe Chrome DevTools team created [Puppeteer](https://github.com/GoogleChrome/puppeteer) - it will automatically install Chromium for all\nplatforms and contains everything you need to run it from within your CI.\n\n### Available Browsers\n*Note: Headless mode requires a browser version >= 59*\n\n- Chrome (CHROME_BIN)\n- ChromeHeadless (CHROME_BIN)\n- Chromium (CHROMIUM_BIN)\n- ChromiumHeadless (CHROMIUM_BIN)\n- ChromeCanary (CHROME_CANARY_BIN)\n- ChromeCanaryHeadless (CHROME_CANARY_BIN)\n- Dartium (DARTIUM_BIN)\n\n#### Usage\n```bash\n$ npm i -D puppeteer karma-chrome-launcher\n```\n\n```js\n// karma.conf.js\nprocess.env.CHROME_BIN = require('puppeteer').executablePath()\n\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['ChromeHeadless']\n  })\n}\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n[homepage]: http://karma-runner.github.com"}, "npm": {"downloads": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 278851}, {"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 1595815}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 6555457}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 19948210}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 37057677}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 70486109}], "dependentsCount": 521, "starsCount": 23}, "github": {"starsCount": 415, "forksCount": 114, "subscribersCount": 15, "issues": {"count": 223, "openCount": 44, "distribution": {"3600": 15, "10800": 7, "32400": 12, "97200": 16, "291600": 6, "874800": 14, "2624400": 25, "7873200": 35, "23619600": 38, "70858800": 25, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "zzo", "commitsCount": 30}, {"username": "vojtajina", "commitsCount": 28}, {"username": "dignifiedquire", "commitsCount": 24}, {"username": "rogeriopvl", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "johnjbarton", "commitsCount": 4}, {"username": "mgol", "commitsCount": 4}, {"username": "alias-mac", "commitsCount": 2}, {"username": "Fidge123", "commitsCount": 1}, {"username": "Florian-R", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "abbotto", "commitsCount": 1}, {"username": "aymericbeaumet", "commitsCount": 1}, {"username": "brutalcrozt", "commitsCount": 1}, {"username": "cexbrayat", "commitsCount": 1}, {"username": "dpogue", "commitsCount": 1}, {"username": "frsimond", "commitsCount": 1}, {"username": "gkostov", "commitsCount": 1}, {"username": "haifengkao", "commitsCount": 1}, {"username": "ishitatsuyuki", "commitsCount": 1}, {"username": "jeffbcross", "commitsCount": 1}, {"username": "maieutiquer", "commitsCount": 1}, {"username": "markovuksanovic", "commitsCount": 1}, {"username": "nimi", "commitsCount": 1}, {"username": "rgant", "commitsCount": 1}], "commits": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3136, "testsSize": 3243, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-chrome-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-chrome-launcher.svg", "content": "https://img.shields.io/npm/v/karma-chrome-launcher.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-chrome-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-chrome-launcher.svg", "content": "https://img.shields.io/npm/dm/karma-chrome-launcher.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-chrome-launcher.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-chrome-launcher.svg", "shields": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg", "content": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-chrome-launcher/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["standard"], "outdatedDependencies": {"which": {"required": "^1.2.1", "stable": "2.0.2", "latest": "2.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 592, "downloadsCount": 6649403.333333333, "downloadsAcceleration": 9541.490468036529, "dependentsCount": 521}, "maintenance": {"releasesFrequency": 0.1849315068493151, "commitsFrequency": 0.08054794520547946, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6098949470351951, "detail": {"quality": 0.9703532029269117, "popularity": 0.4929037618397996, "maintenance": 0.4179219128948334}}}}, {"postcss-loader": {"analyzedAt": "2020-06-14T19:10:19.952Z", "collected": {"metadata": {"name": "postcss-loader", "scope": "unscoped", "version": "3.0.0", "description": "PostCSS loader for webpack", "keywords": ["css", "postcss", "postcss-runner", "webpack", "webpack-loader"], "date": "2018-08-08T17:43:31.231Z", "author": {"name": "Andrey Sitnik", "email": "andrey@sitnik.ru", "username": "ai"}, "publisher": {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, "maintainers": [{"username": "ai", "email": "andrey@sitnik.ru"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/postcss/postcss-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/postcss-loader", "homepage": "https://github.com/postcss/postcss-loader#readme", "repository": "https://github.com/postcss/postcss-loader", "bugs": "https://github.com/postcss/postcss-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^1.1.0", "postcss": "^7.0.0", "postcss-load-config": "^2.0.0", "schema-utils": "^1.0.0"}, "devDependencies": {"@webpack-utilities/test": "^1.0.0-alpha.0", "jest": "^23.0.0", "jsdoc-to-markdown": "^4.0.0", "postcss-import": "^11.0.0", "postcss-js": "^2.0.0", "standard": "^11.0.0", "standard-version": "^4.0.0", "sugarss": "^1.0.0", "webpack": "^4.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"180\" height=\"180\" hspace=\"10\"\n    alt=\"PostCSS Logo\"\n    src=\"https://api.postcss.org/logo.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" hspace=\"10\"\n      src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\n  </a>\n  <div align=\"center\">\n    <a href=\"https://evilmartians.com/?utm_source=postcss\">\n      <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n        alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\" vspace=\"10\">\n    </a>\n  </div>\n  <h1>PostCSS Loader</h1>\n  <p>Loader for <a href=\"https://webpack.js.org/\">webpack</a> to process CSS with <a href=\"https://postcss.org/\">PostCSS</a></p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D postcss-loader\n```\n\n<h2 align=\"center\">Usage</h2>\n\n### `Configuration`\n\n**`postcss.config.js`**\n```js\nmodule.exports = {\n  parser: 'sugarss',\n  plugins: {\n    'postcss-import': {},\n    'postcss-preset-env': {},\n    'cssnano': {}\n  }\n}\n```\n\nYou can read more about common PostCSS Config [here](https://github.com/michael-ciniawsky/postcss-load-config).\n\n### `Config Cascade`\n\nYou can use different `postcss.config.js` files in different directories.\nConfig lookup starts from `path.dirname(file)` and walks the file tree upwards until a config file is found.\n\n```\n|\u2013 components\n| |\u2013 component\n| | |\u2013 index.js\n| | |\u2013 index.png\n| | |\u2013 style.css (1)\n| | |\u2013 postcss.config.js (1)\n| |\u2013 component\n| | |\u2013 index.js\n| | |\u2013 image.png\n| | |\u2013 style.css (2)\n|\n|\u2013 postcss.config.js (1 && 2 (recommended))\n|\u2013 webpack.config.js\n|\n|\u2013 package.json\n```\n\nAfter setting up your `postcss.config.js`, add `postcss-loader` to your `webpack.config.js`. You can use it standalone or in conjunction with `css-loader` (recommended). Use it **after** `css-loader` and `style-loader`, but **before** other preprocessor loaders like e.g `sass|less|stylus-loader`, if you use any.\n\n**`webpack.config.js`**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [ 'style-loader', 'postcss-loader' ]\n      }\n    ]\n  }\n}\n```\n\n> \u26a0\ufe0f  When `postcss-loader` is used standalone (without `css-loader`) don't use `@import` in your CSS, since this can lead to quite bloated bundles\n\n**`webpack.config.js` (recommended)**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { importLoaders: 1 } },\n          'postcss-loader'\n        ]\n      }\n    ]\n  }\n}\n```\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`exec`](#exec)|`{Boolean}`|`undefined`|Enable PostCSS Parser support in `CSS-in-JS`|\n|[`parser`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Parser|\n|[`syntax`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Syntax|\n|[`stringifier`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Stringifier|\n|[`config`](#config)|`{Object}`|`undefined`|Set `postcss.config.js` config path && `ctx`|\n|[`plugins`](#plugins)|`{Array\\|Function}`|`[]`|Set PostCSS Plugins|\n|[`sourceMap`](#sourcemap)|`{String\\|Boolean}`|`false`|Enable Source Maps|\n\n### `Exec`\n\nIf you use JS styles without the [`postcss-js`][postcss-js] parser, add the `exec` option.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.style.js$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { importLoaders: 1 } },\n    { loader: 'postcss-loader', options: { parser: 'sugarss', exec: true } }\n  ]\n}\n```\n\n### `Config`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`path`](#path)|`{String}`|`undefined`|PostCSS Config Directory|\n|[`context`](#context)|`{Object}`|`undefined`|PostCSS Config Context|\n\n#### `Path`\n\nYou can manually specify the path to search for your config (`postcss.config.js`) with the `config.path` option. This is needed if you store your config  in a separate e.g `./config || ./.config` folder.\n\n> \u26a0\ufe0f  Otherwise it is **unnecessary** to set this option and is **not** recommended\n\n> \u26a0\ufe0f  Note that you **can't** use a **filename** other than the [supported config formats] (e.g `.postcssrc.js`, `postcss.config.js`), this option only allows you to manually specify the **directory** where config lookup should **start** from\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    config: {\n      path: 'path/to/.config/' \u2705\n      path: 'path/to/.config/css.config.js' \u274c\n    }\n  }\n}\n```\n\n[supported config formats]: https://github.com/michael-ciniawsky/postcss-load-config#usage\n\n#### `Context (ctx)`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|`env`|`{String}`|`'development'`|`process.env.NODE_ENV`|\n|`file`|`{Object}`|`loader.resourcePath`|`extname`, `dirname`, `basename`|\n|`options`|`{Object}`|`{}`|Options|\n\n`postcss-loader` exposes context `ctx` to the config file, making your `postcss.config.js` dynamic, so can use it to do some real magic \u2728\n\n**`postcss.config.js`**\n```js\nmodule.exports = ({ file, options, env }) => ({\n  parser: file.extname === '.sss' ? 'sugarss' : false,\n  plugins: {\n    'postcss-import': { root: file.dirname },\n    'postcss-preset-env': options['postcss-preset-env'] ? options['postcss-preset-env'] : false,\n    'cssnano': env === 'production' ? options.cssnano : false\n  }\n})\n```\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    config: {\n      ctx: {\n        'postcss-preset-env': {...options},\n        cssnano: {...options},\n      }\n    }\n  }\n}\n```\n\n### `Plugins`\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    ident: 'postcss',\n    plugins: (loader) => [\n      require('postcss-import')({ root: loader.resourcePath }),\n      require('postcss-preset-env')(),\n      require('cssnano')()\n    ]\n  }\n}\n```\n\n> \u26a0\ufe0f  webpack requires an identifier (`ident`) in `options` when `{Function}/require` is used (Complex Options). The `ident` can be freely named as long as it is unique. It's recommended to name it (`ident: 'postcss'`)\n\n### `Syntaxes`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`parser`](#parser)|`{String\\|Function}`|`undefined`|Custom PostCSS Parser|\n|[`syntax`](#syntax)|`{String\\|Function}`|`undefined`|Custom PostCSS Syntax|\n|[`stringifier`](#stringifier)|`{String\\|Function}`|`undefined`|Custom PostCSS Stringifier|\n\n#### `Parser`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.sss$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { parser: 'sugarss' } }\n  ]\n}\n```\n\n#### `Syntax`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { syntax: 'sugarss' } }\n  ]\n}\n```\n\n#### `Stringifier`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { stringifier: 'midas' } }\n  ]\n}\n```\n\n### `SourceMap`\n\nEnables source map support, `postcss-loader` will use the previous source map given by other loaders and update it accordingly, if no previous loader is applied before `postcss-loader`, the loader will generate a source map for you.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css/,\n  use: [\n    { loader: 'style-loader', options: { sourceMap: true } },\n    { loader: 'css-loader', options: { sourceMap: true } },\n    { loader: 'postcss-loader', options: { sourceMap: true } },\n    { loader: 'sass-loader', options: { sourceMap: true } }\n  ]\n}\n```\n\n#### `'inline'`\n\nYou can set the `sourceMap: 'inline'` option to inline the source map\nwithin the CSS directly as an annotation comment.\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    sourceMap: 'inline'\n  }\n}\n```\n\n```css\n.class { color: red; }\n\n/*# sourceMappingURL=data:application/json;base64, ... */\n```\n\n<h2 align=\"center\">Examples</h2>\n\n### `Stylelint`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    'css-loader',\n    {\n      loader: 'postcss-loader',\n      options: {\n        ident: 'postcss',\n        plugins: [\n          require('postcss-import')(),\n          require('stylelint')(),\n          ...,\n        ]\n      }\n    }\n  ]\n}\n```\n\n### `Autoprefixing`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    'css-loader',\n    {\n      loader: 'postcss-loader',\n      options: {\n        ident: 'postcss',\n        plugins: [\n          require('autoprefixer')({...options}),\n          ...,\n        ]\n      }\n    }\n  ]\n}\n```\n\n> :warning: [`postcss-preset-env`](https://github.com/csstools/postcss-preset-env) includes [`autoprefixer`](https://github.com/postcss/autoprefixer), so adding it separately is not necessary if you already use the preset.\n\n### `CSS Modules`\n\nThis loader [cannot be used] with [CSS Modules] out of the box due\nto the way `css-loader` processes file imports. To make them work properly,\neither add the css-loader\u2019s [`importLoaders`] option.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { modules: true, importLoaders: 1 } },\n    'postcss-loader'\n  ]\n}\n```\n\nor use [postcss-modules] instead of `css-loader`.\n\n[`importLoaders`]: https://github.com/webpack-contrib/css-loader#importloaders\n[cannot be used]: https://github.com/webpack/css-loader/issues/137\n[CSS Modules]: https://github.com/webpack/css-loader#css-modules\n[postcss-modules]: https://github.com/css-modules/postcss-modules\n\n### `CSS-in-JS`\n\nIf you want to process styles written in JavaScript, use the [postcss-js] parser.\n\n[postcss-js]: https://github.com/postcss/postcss-js\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.style.js$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { importLoaders: 2 } },\n    { loader: 'postcss-loader', options: { parser: 'postcss-js' } },\n    'babel-loader'\n  ]\n}\n```\n\nAs result you will be able to write styles in the following way\n\n```js\nimport colors from './styles/colors'\n\nexport default {\n    '.menu': {\n      color: colors.main,\n      height: 25,\n      '&_link': {\n      color: 'white'\n    }\n  }\n}\n```\n\n> :warning: If you are using Babel you need to do the following in order for the setup to work\n\n> 1. Add [babel-plugin-add-module-exports] to your configuration\n> 2. You need to have only one **default** export per style module\n\n[babel-plugin-add-module-exports]: https://github.com/59naga/babel-plugin-add-module-exports\n\n### [Extract CSS][ExtractPlugin]\n\n[ExtractPlugin]: https://github.com/webpack-contrib/mini-css-extract-plugin\n\n**`webpack.config.js`**\n```js\nconst devMode = process.env.NODE_ENV !== 'production'\n\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          devMode ? 'style-loader' : MiniCssExtractPlugin.loader,\n          'css-loader',\n          'postcss-loader'\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: devMode ? '[name].css' : '[name].[hash].css'\n    })\n  ]\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/evilebottnawi\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/postcss-loader.svg\n[npm-url]: https://npmjs.com/package/postcss-loader\n\n[node]: https://img.shields.io/node/v/postcss-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/postcss/postcss-loader.svg\n[deps-url]: https://david-dm.org/postcss/postcss-loader\n\n[tests]: https://img.shields.io/travis/postcss/postcss-loader.svg\n[tests-url]: https://travis-ci.org/postcss/postcss-loader\n\n[cover]: https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg\n[cover-url]: https://coveralls.io/github/postcss/postcss-loader\n\n[chat]: https://badges.gitter.im/postcss/postcss.svg\n[chat-url]: https://gitter.im/postcss/postcss"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 282031}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 6780956}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 28292499}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 87640924}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 156879533}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 284650829}], "dependentsCount": 6517, "starsCount": 62}, "github": {"starsCount": 2592, "forksCount": 189, "subscribersCount": 37, "issues": {"count": 431, "openCount": 15, "distribution": {"3600": 126, "10800": 45, "32400": 55, "97200": 52, "291600": 39, "874800": 27, "2624400": 31, "7873200": 30, "23619600": 17, "70858800": 9, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "ai", "commitsCount": 172}, {"username": "michael-ciniawsky", "commitsCount": 76}, {"username": "cybercase", "commitsCount": 4}, {"username": "evilebottnawi", "commitsCount": 4}, {"username": "ertrzyiks", "commitsCount": 3}, {"username": "jantimon", "commitsCount": 3}, {"username": "EsrefDurna", "commitsCount": 2}, {"username": "MoOx", "commitsCount": 2}, {"username": "Munter", "commitsCount": 2}, {"username": "badsyntax", "commitsCount": 2}, {"username": "halfzebra", "commitsCount": 2}, {"username": "izaakschroeder", "commitsCount": 2}, {"username": "jescalan", "commitsCount": 2}, {"username": "komlev", "commitsCount": 2}, {"username": "mcjfunk", "commitsCount": 2}, {"username": "CKGrafico", "commitsCount": 1}, {"username": "Fnatte", "commitsCount": 1}, {"username": "JayAndCatchFire", "commitsCount": 1}, {"username": "Simek", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "SimonDegraeve", "commitsCount": 1}, {"username": "alibosworth", "commitsCount": 1}, {"username": "amankkg", "commitsCount": 1}, {"username": "andreypopp", "commitsCount": 1}, {"username": "archr", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "bcbcb", "commitsCount": 1}, {"username": "bjacobel", "commitsCount": 1}, {"username": "brandonaaskov", "commitsCount": 1}, {"username": "brnrdog", "commitsCount": 1}, {"username": "camshaft", "commitsCount": 1}, {"username": "clydin", "commitsCount": 1}, {"username": "cspotcode", "commitsCount": 1}, {"username": "egoist", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "iMaximal", "commitsCount": 1}, {"username": "iamakulov", "commitsCount": 1}, {"username": "josephfinlayson", "commitsCount": 1}, {"username": "kisenka", "commitsCount": 1}, {"username": "kud", "commitsCount": 1}, {"username": "leyyinad", "commitsCount": 1}, {"username": "liitfr", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "olegakbarov", "commitsCount": 1}, {"username": "paleite", "commitsCount": 1}, {"username": "partyka1", "commitsCount": 1}, {"username": "patrickabkarian", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "robmoorman", "commitsCount": 1}, {"username": "romanslonov", "commitsCount": 1}, {"username": "sainthkh", "commitsCount": 1}, {"username": "solcik", "commitsCount": 1}, {"username": "stsdc", "commitsCount": 1}, {"username": "swa1ps", "commitsCount": 1}, {"username": "taion", "commitsCount": 1}, {"username": "troutowicz", "commitsCount": 1}, {"username": "xakep139", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}, {"username": "y-gagar1n", "commitsCount": 1}, {"username": "yargalot", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}, {"username": "zenbrent", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12456, "testsSize": 17177, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/postcss-loader.svg", "shields": "https://img.shields.io/npm/v/postcss-loader.svg", "content": "https://img.shields.io/npm/v/postcss-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/postcss/postcss-loader.svg", "service": "https://david-dm.org/postcss/postcss-loader.svg", "shields": "https://img.shields.io/david/postcss/postcss-loader.svg", "content": "https://img.shields.io/david/postcss/postcss-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/travis/postcss/postcss-loader.svg", "service": "https://api.travis-ci.org/postcss/postcss-loader.svg", "shields": "https://img.shields.io/travis/postcss/postcss-loader.svg", "content": "https://img.shields.io/travis/postcss/postcss-loader.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg", "service": "https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg", "shields": "https://img.shields.io/coveralls/postcss/postcss-loader.svg", "content": "https://img.shields.io/coveralls/postcss/postcss-loader.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://badges.gitter.im/postcss/postcss.svg", "service": "https://badges.gitter.im/postcss/postcss.svg", "shields": "https://img.shields.io/gitter/room/postcss/postcss.svg", "content": "https://img.shields.io/gitter/room/postcss/postcss.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "standard"], "coverage": 0.87, "outdatedDependencies": {"loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9804999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 2942, "downloadsCount": 29213641.333333332, "downloadsAcceleration": 63726.422812024364, "dependentsCount": 6517}, "maintenance": {"releasesFrequency": 0.3113013698630137, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0.904859064731672}}, "score": {"final": 0.8163934134226994, "detail": {"quality": 0.9363270210462904, "popularity": 0.7504776872159922, "maintenance": 0.7795089045234715}}}}, {"eslint-config-prettier": {"analyzedAt": "2020-06-15T05:50:28.513Z", "collected": {"metadata": {"name": "eslint-config-prettier", "scope": "unscoped", "version": "6.11.0", "description": "Turns off all rules that are unnecessary or might conflict with Prettier.", "keywords": ["eslint", "eslintconfig", "prettier"], "date": "2020-04-21T19:13:14.331Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/eslint-config-prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-prettier", "homepage": "https://github.com/prettier/eslint-config-prettier#readme", "repository": "https://github.com/prettier/eslint-config-prettier", "bugs": "https://github.com/prettier/eslint-config-prettier/issues"}, "license": "MIT", "dependencies": {"get-stdin": "^6.0.0"}, "devDependencies": {"@typescript-eslint/eslint-plugin": "2.29.0", "@typescript-eslint/parser": "2.29.0", "babel-eslint": "10.1.0", "cross-spawn": "7.0.2", "doctoc": "1.4.0", "eslint": "6.8.0", "eslint-config-google": "0.14.0", "eslint-find-rules": "3.4.0", "eslint-plugin-babel": "5.3.0", "eslint-plugin-flowtype": "4.7.0", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-react": "7.19.0", "eslint-plugin-standard": "4.0.1", "eslint-plugin-unicorn": "18.0.1", "eslint-plugin-vue": "6.2.2", "jest": "25.4.0", "prettier": "2.0.5", "replace": "1.1.5", "rimraf": "3.0.2", "typescript": "3.7.5"}, "peerDependencies": {"eslint": ">=3.14.1"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 3}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 6}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 15}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 29}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-config-prettier\n\nTurns off all rules that are unnecessary or might conflict with [Prettier].\n\nThis lets you use your favorite shareable config without letting its stylistic choices get in the way when using Prettier.\n\nNote that this config _only_ turns rules _off,_ so it only makes sense using it together with some other config.\n\n## Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n  - [Excluding deprecated rules](#excluding-deprecated-rules)\n- [CLI helper tool](#cli-helper-tool)\n- [Example configuration](#example-configuration)\n- [Special rules](#special-rules)\n  - [arrow-body-style and prefer-arrow-callback](#arrow-body-style-and-prefer-arrow-callback)\n  - [curly](#curly)\n  - [lines-around-comment](#lines-around-comment)\n  - [max-len](#max-len)\n  - [no-confusing-arrow](#no-confusing-arrow)\n  - [no-mixed-operators](#no-mixed-operators)\n  - [no-tabs](#no-tabs)\n  - [no-unexpected-multiline](#no-unexpected-multiline)\n  - [quotes](#quotes)\n    - [Enforce backticks](#enforce-backticks)\n    - [Forbid unnecessary backticks](#forbid-unnecessary-backticks)\n      - [Example _double_ quote configuration](#example-_double_-quote-configuration)\n      - [Example _single_ quote configuration](#example-_single_-quote-configuration)\n  - [vue/html-self-closing](#vuehtml-self-closing)\n- [Other rules worth mentioning](#other-rules-worth-mentioning)\n  - [no-sequences](#no-sequences)\n- [Contributing](#contributing)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nInstall eslint-config-prettier:\n\n```\nnpm install --save-dev eslint-config-prettier\n```\n\nThen, add eslint-config-prettier to the \"extends\" array in your `.eslintrc.*` file. Make sure to put it **last,** so it gets the chance to override other configs.\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"some-other-config-you-use\",\n    \"prettier\"\n  ]\n}\n```\n\nA few ESLint plugins are supported as well:\n\n- [@typescript-eslint/eslint-plugin]\n- [eslint-plugin-babel]\n- [eslint-plugin-flowtype]\n- [eslint-plugin-react]\n- [eslint-plugin-standard]\n- [eslint-plugin-unicorn]\n- [eslint-plugin-vue]\n\nAdd extra exclusions for the plugins you use like so:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"some-other-config-you-use\",\n    \"prettier\",\n    \"prettier/@typescript-eslint\",\n    \"prettier/babel\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\",\n    \"prettier/unicorn\",\n    \"prettier/vue\"\n  ]\n}\n```\n\nIf you extend a config which uses a plugin, it is recommended to add `\"prettier/that-plugin\"` (if available). For example, [eslint-config-airbnb] enables [eslint-plugin-react] rules, so `\"prettier/react\"` is needed:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"airbnb\",\n    \"prettier\",\n    \"prettier/react\"\n  ]\n}\n```\n\nIf you\u2019re unsure which plugins are used, you can usually find them in your `package.json`.\n\n### Excluding deprecated rules\n\nSome of the rules that eslint-config-prettier turns off may be deprecated. **This is perfectly fine,** but if you really need to omit the deprecated rules, you can do so by setting the `ESLINT_CONFIG_PRETTIER_NO_DEPRECATED` environment variable to a non-empty value. For example:\n\n```\nenv ESLINT_CONFIG_PRETTIER_NO_DEPRECATED=true npx eslint-find-rules --deprecated index.js\n```\n\n## CLI helper tool\n\neslint-config-prettier also ships with a little CLI tool to help you check if your configuration contains any rules that are unnecessary or conflict with Prettier.\n\nYou can run it using `npx`:\n\n```\nnpx eslint --print-config path/to/main.js | npx eslint-config-prettier-check\n```\n\n(Change `path/to/main.js` to a file that exists in your project.)\n\nIn theory you need to run `npx eslint --print-config file.js | npx eslint-config-prettier-check` for every single file in your project to be 100% sure that there are no conflicting rules, because ESLint supports having different rules for different files. But usually you\u2019ll have about the same rules for all files, so it is enough to run the command on one file (pick one that you won\u2019t be moving). If you use [multiple configuration files] or [overrides], you can (but you probably don\u2019t need to!) run the above script several times with different `--print-config` arguments, such as:\n\n```\nnpx eslint --print-config index.js | npx eslint-config-prettier-check\nnpx eslint --print-config test/index.js | npx eslint-config-prettier-check\nnpx eslint --print-config legacy/main.js | npx eslint-config-prettier-check\n```\n\nExit codes:\n\n- 0: No problems found.\n- 1: Unexpected error.\n- 2: Conflicting rules found.\n\n## Example configuration\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"standard\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:flowtype/recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:unicorn/recommended\",\n    \"plugin:vue/recommended\",\n    \"prettier\",\n    \"prettier/@typescript-eslint\",\n    \"prettier/babel\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\",\n    \"prettier/unicorn\",\n    \"prettier/vue\"\n  ],\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"babel\",\n    \"flowtype\",\n    \"react\",\n    \"standard\",\n    \"unicorn\",\n    \"vue\"\n  ],\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  },\n  \"env\": {\n    \"es6\": true,\n    \"node\": true\n  }\n}\n```\n\n## Special rules\n\nThere a few rules that eslint-config-prettier disables that actually can be enabled in some cases.\n\n- Some require certain options. The CLI helper tool validates this.\n- Some require special attention when writing code. The CLI helper tool warns you if any of those rules are enabled, but can\u2019t tell if anything is problematic.\n- Some can cause problems if using [eslint-plugin-prettier] and `--fix`.\n\nFor maximum ease of use, the special rules are disabled by default. If you want them, you need to explicitly specify them in your ESLint config.\n\n### [arrow-body-style] and [prefer-arrow-callback]\n\n**These rules might cause problems if using [eslint-plugin-prettier] and `--fix`.**\n\nIf you use any of these rules together with the `prettier/prettier` rule from [eslint-plugin-prettier], you can in some cases end up with invalid code due to a bug in ESLint\u2019s autofix.\n\nThese rules are safe to use if:\n\n- You don\u2019t use [eslint-plugin-prettier]. In other words, you run `eslint --fix` and `prettier --write` as separate steps.\n- You _do_ use [eslint-plugin-prettier], but don\u2019t use `--fix`. (But then, what\u2019s the point?)\n\nYou _can_ still use these rules together with [eslint-plugin-prettier] if you want, because the bug does not occur _all the time._ But if you do, you need to keep in mind that you might end up with invalid code, where you manually have to insert a missing closing parenthesis to get going again.\n\nIf you\u2019re fixing large of amounts of previously unformatted code, consider temporarily disabling the `prettier/prettier` rule and running `eslint --fix` and `prettier --write` separately.\n\nSee these issues for more information:\n\n- [eslint-config-prettier#31]\n- [eslint-config-prettier#71]\n- [eslint-plugin-prettier#65]\n\nWhen the autofix bug in ESLint has been fixed, the special case for these rules can be removed.\n\n### [curly]\n\n**This rule requires certain options.**\n\nIf a block (for example after `if`, `else`, `for` or `while`) contains only one statement, JavaScript allows omitting the curly braces around that statement. This rule enforces if or when those optional curly braces should be omitted.\n\nIf you use the `\"multi-line\"` or `\"multi-or-nest\"` option, the rule can conflict with Prettier.\n\nFor example, the `\"multi-line\"` option allows this line:\n\n<!-- prettier-ignore -->\n```js\nif (cart.items && cart.items[0] && cart.items[0].quantity === 0) updateCart(cart);\n```\n\nHowever, Prettier might consider the line too long and turn it into the following, which the `\"multi-line\"` option does _not_ allow:\n\n<!-- prettier-ignore -->\n```js\nif (cart.items && cart.items[0] && cart.items[0].quantity === 0)\n  updateCart(cart);\n```\n\nIf you like this rule, it can be used just fine with Prettier as long as you don\u2019t use the `\"multi-line\"` or `\"multi-or-nest\"` option.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"curly\": [\"error\", \"all\"]\n  }\n}\n```\n\n### [lines-around-comment]\n\n**This rule can be used with certain options.**\n\nThis rule requires empty lines before and/or after comments. Prettier preserves blank lines, with two exceptions:\n\n- Several blank lines in a row are collapsed into a single blank line. This is fine.\n- Blank lines at the beginning and end of blocks, objects and arrays are always removed. This may lead to conflicts.\n\nBy default, ESLint requires a blank line above the comment is this case:\n\n<!-- prettier-ignore -->\n```js\nif (result) {\n\n  /* comment */\n  return result;\n}\n```\n\nHowever, Prettier removes the blank line:\n\n<!-- prettier-ignore -->\n```js\nif (result) {\n  /* comment */\n  return result;\n}\n```\n\nIf you like this rule, it can be used just fine with Prettier as long as you add some extra configuration to allow comments at the start and end of blocks, objects and arrays.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"lines-around-comment\": [\n      \"error\",\n      {\n        \"beforeBlockComment\": true,\n        \"afterBlockComment\": true,\n        \"beforeLineComment\": true,\n        \"afterLineComment\": true,\n        \"allowBlockStart\": true,\n        \"allowBlockEnd\": true,\n        \"allowObjectStart\": true,\n        \"allowObjectEnd\": true,\n        \"allowArrayStart\": true,\n        \"allowArrayEnd\": true\n      }\n    ]\n  }\n}\n```\n\n### [max-len]\n\n(The following applies to [vue/max-len] as well.)\n\n**This rule requires special attention when writing code.**\n\nUsually, Prettier takes care of following a maximum line length automatically. However, there are cases where Prettier can\u2019t do anything, such as for long strings, regular expressions and comments. Those need to be split up by a human.\n\nIf you\u2019d like to enforce an even stricter maximum line length policy than Prettier can provide automatically, you can enable this rule. Just remember to keep `max-len`\u2019s options and Prettier\u2019s `printWidth` option in sync.\n\nKeep in mind that you might have to refactor code slightly if Prettier formats lines in a way that the `max-len` rule does not approve of.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"max-len\": [\"error\", {\"code\": 80, \"ignoreUrls\": true}]\n  }\n}\n```\n\n### [no-confusing-arrow]\n\n**This rule requires certain options.**\n\nFor example, the rule could warn about this line:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => 1 ? 2 : 3;\n```\n\nWith `{allowParens: true}` (the default since ESLint 6.0.0), adding parentheses is considered a valid way to avoid the arrow confusion:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => (1 ? 2 : 3);\n```\n\nWhile Prettier keeps those parentheses, it removes them if the line is long enough to introduce a line break:\n\n<!-- prettier-ignore -->\n```js\nEnterpriseCalculator.prototype.calculateImportantNumbers = inputNumber =>\n  1 ? 2 : 3;\n```\n\nWith `{allowParens: false}`, ESLint instead suggests switching to an explicit return:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => { return 1 ? 2 : 3; };\n```\n\nThat causes no problems with Prettier.\n\nIf you like this rule, it can be used just fine with Prettier as long as the `allowParens` option is off.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-confusing-arrow\": [\"error\", { \"allowParens\": false }]\n  }\n}\n```\n\n(Note: The CLI helper tool considers `{allowParens: true}` to be the default, which is the case since ESLint 6.0.0. The tool will produce a warning if you use the default even if you use an older version of ESLint. It doesn\u2019t hurt to explicitly set `{allowParens: false}` even though it is technically redundant. This way you are prepared for a future ESLint upgrade and the CLI tool can be kept simple.)\n\n### [no-mixed-operators]\n\n**This rule requires special attention when writing code.**\n\nThis rule forbids mixing certain operators, such as `&&` and `||`.\n\nFor example, the rule could warn about this line:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + b * c;\n```\n\nThe rule suggests adding parentheses, like this:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + (b * c);\n```\n\nHowever, Prettier removes many \u201cunnecessary\u201d parentheses, turning it back to:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + b * c;\n```\n\nIf you want to use this rule with Prettier, you need to split the expression into another variable:\n\n<!-- prettier-ignore -->\n```js\nvar bar = b * c;\nvar foo = a + bar;\n```\n\nKeep in mind that Prettier prints _some_ \u201cunnecessary\u201d parentheses, though:\n\n<!-- prettier-ignore -->\n```js\nvar foo = (a && b) || c;\n```\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-mixed-operators\": \"error\"\n  }\n}\n```\n\n### [no-tabs]\n\n**This rule requires certain Prettier options.**\n\nThis rule disallows the use of tab characters at all. It can be used just fine with Prettier as long as you don\u2019t configure Prettier to indent using tabs.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-tabs\": \"error\"\n  }\n}\n```\n\nExample Prettier configuration (this is the default, so adding this is not required):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"useTabs\": false\n}\n```\n\n**Note:** Since [ESlint 5.7.0] this rule can be configured to work regardless of your Prettier configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-tabs\": [\"error\", {\"allowIndentationTabs\": true}]\n  }\n}\n```\n\nA future version of eslint-config-prettier might check for that automatically.\n\n### [no-unexpected-multiline]\n\n**This rule requires special attention when writing code.**\n\nThis rule disallows confusing multiline expressions where a newline looks like it is ending a statement, but is not.\n\nFor example, the rule could warn about this:\n\n<!-- prettier-ignore -->\n```js\nvar hello = \"world\"\n[1, 2, 3].forEach(addNumber)\n```\n\nPrettier usually formats this in a way that makes it obvious that a semicolon was missing:\n\n<!-- prettier-ignore -->\n```js\nvar hello = \"world\"[(1, 2, 3)].forEach(addNumber);\n```\n\nHowever, there are cases where Prettier breaks things into several lines such that the `no-unexpected-multiline` conflicts.\n\n<!-- prettier-ignore -->\n```js\nconst value = text.trim().split(\"\\n\")[position].toLowerCase();\n```\n\nPrettier breaks it up into several lines, though, causing a conflict:\n\n<!-- prettier-ignore -->\n```js\nconst value = text\n  .trim()\n  .split(\"\\n\")\n  [position].toLowerCase();\n```\n\nIf you like this rule, it can usually be used with Prettier without problems, but occasionally you might need to either temporarily disable the rule or refactor your code.\n\n<!-- prettier-ignore -->\n```js\nconst value = text\n  .trim()\n  .split(\"\\n\")\n  // eslint-disable-next-line no-unexpected-multiline\n  [position].toLowerCase();\n\n// Or:\n\nconst lines = text.trim().split(\"\\n\");\nconst value = lines[position].toLowerCase();\n```\n\n**Note:** If you _do_ enable this rule, you have to run ESLint and Prettier as two separate steps (and ESLint first) in order to get any value out of it. Otherwise Prettier might reformat your code in such a way that ESLint never gets a chance to report anything (as seen in the first example).\n\nExample configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-unexpected-multiline\": \"error\"\n  }\n}\n```\n\n### [quotes]\n\n(The following applies to [babel/quotes] and [@typescript-eslint/quotes] as well.)\n\n**This rule requires certain options and certain Prettier options.**\n\nUsually, you don\u2019t need this rule at all. But there are two cases where it could be useful:\n\n- To enforce the use of backticks rather than single or double quotes for strings.\n- To forbid backticks where regular strings could have been used.\n\n#### Enforce backticks\n\nIf you\u2019d like all strings to use backticks (never quotes), enable the `\"backtick\"` option.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\"error\", \"backtick\"]\n  }\n}\n```\n\n#### Forbid unnecessary backticks\n\nIn the following example, the first array item could have been written with quotes instead of backticks.\n\n<!-- prettier-ignore -->\n```js\nconst strings = [\n  `could have been a regular string`,\n  `\n    multiple\n    lines\n  `,\n  `uses ${interpolation}`,\n  String.raw`\\tagged/`,\n];\n```\n\nIf you\u2019d like ESLint to enforce `` `could have been a regular string` `` being written as either `\"could have been a regular string\"` or `'could have been a regular string'`, you need to use some specific configuration. The `quotes` rule has two options, a string option and an object option.\n\n- The first (string) option needs to be set to `\"single\"` or `\"double\"` and be kept in sync with Prettier\u2019s [singleQuote] option.\n- The second (object) option needs the following properties:\n  - `\"avoidEscape\": true` to follow Prettier\u2019s [string formatting rules].\n  - `\"allowTemplateLiterals\": false` to disallow unnecessary backticks.\n\n##### Example _double_ quote configuration\n\nESLint:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\n      \"error\",\n      \"double\",\n      { \"avoidEscape\": true, \"allowTemplateLiterals\": false }\n    ]\n  }\n}\n```\n\nPrettier (this is the default, so adding this is not required):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"singleQuote\": false\n}\n```\n\n##### Example _single_ quote configuration\n\nESLint:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\n      \"error\",\n      \"single\",\n      { \"avoidEscape\": true, \"allowTemplateLiterals\": false }\n    ]\n  }\n}\n```\n\nPrettier:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"singleQuote\": true\n}\n```\n\n### [vue/html-self-closing]\n\n**This rule requires certain options.**\n\nThis rule enforces whether elements should be self-closing or not.\n\nPrettier generally preserves the way you wrote your elements:\n\n<!-- prettier-ignore -->\n```vue\n<div />\n<div></div>\n<MyComponent />\n<MyComponent></MyComponent>\n<svg><path d=\"\" /></svg>\n<svg><path d=\"\"></path></svg>\n```\n\nBut for known _void_ HTML elements, Prettier always uses the self-closing style. For example, `<img>` is turned into `<img />`.\n\nIf you like this rule, it can be used just fine with Prettier as long as you set `html.void` to `\"any\"`.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"vue/html-self-closing\": [\n      \"error\",\n      {\n        \"html\": {\n          \"void\": \"any\"\n        }\n      }\n    ]\n  }\n}\n```\n\n## Other rules worth mentioning\n\nThese rules don\u2019t conflict with Prettier, but have some gotchas when used with Prettier.\n\n### [no-sequences]\n\nThis rule forbids using JavaScript\u2019s confusing comma operator (sequence expressions). This piece of code is not doing what it looks like:\n\n<!-- prettier-ignore -->\n```js\nmatrix[4, 7];\n```\n\nPrettier adds parentheses to the above to make it clear that a sequence expression is used:\n\n<!-- prettier-ignore -->\n```js\nmatrix[(4, 7)];\n```\n\nHowever, the `no-sequences` rule allows comma operators if the expression sequence is explicitly wrapped in parentheses. Since Prettier automatically wraps them in parentheses, you might never see any warnings from ESLint about comma operators.\n\nEnding up with an accidental sequence expression can easily happen while refactoring. If you want ESLint to catch such mistakes, it is recommended to forbid sequence expressions entirely using [no-restricted-syntax] \\([as mentioned in the `no-sequences` documentation][no-sequences-full]):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-restricted-syntax\": [\"error\", \"SequenceExpression\"]\n  }\n}\n```\n\nIf you still need to use the comma operator for some edge case, you can place an `// eslint-disable-next-line no-restricted-syntax` comment on the line above the expression. `no-sequences` can safely be disabled if you use the `no-restricted-syntax` approach.\n\nYou can also supply a custom message if you want:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-restricted-syntax\": [\n      \"error\",\n      {\n        \"selector\": \"SequenceExpression\",\n        \"message\": \"The comma operator is confusing and a common mistake. Don\u2019t use it!\"\n      }\n    ]\n  }\n}\n```\n\n## Contributing\n\neslint-config-prettier has been tested with:\n\n- ESLint 6.8.0\n  - eslint-config-prettier 5.1.0 and older were tested with ESLint 5.x\n  - eslint-config-prettier 2.10.0 and older were tested with ESLint 4.x\n  - eslint-config-prettier 2.1.1 and older were tested with ESLint 3.x\n- prettier 2.0.5\n- @typescript-eslint/eslint-plugin 2.29.0\n- eslint-plugin-babel 5.3.0\n- eslint-plugin-flowtype 4.7.0\n- eslint-plugin-react 7.19.0\n- eslint-plugin-standard 4.0.1\n- eslint-plugin-unicorn 18.0.1\n- eslint-plugin-vue 6.2.2\n\nHave new rules been added since those versions? Have we missed any rules? Is there a plugin you would like to see exclusions for? Open an issue or a pull request!\n\nIf you\u2019d like to add support for eslint-plugin-foobar, this is how you\u2019d go about it:\n\nFirst, create `foobar.js`:\n\n<!-- prettier-ignore -->\n```js\n\"use strict\";\n\nmodule.exports = {\n  rules: {\n    \"foobar/some-rule\": \"off\"\n  }\n};\n```\n\nThen, create `test-lint/foobar.js`:\n\n<!-- prettier-ignore -->\n```js\n/* eslint-disable quotes */\n\"use strict\";\n\n// Prettier does not want spaces before the parentheses, but\n// `plugin:foobar/recommended` wants one.\nconsole.log();\n```\n\n`test-lint/foobar.js` must fail when used with eslint-plugin-foobar and eslint-plugin-prettier at the same time \u2013 until `\"prettier/foobar\"` is added to the \"extends\" property of an ESLint config. The file should be formatted according to Prettier, and that formatting should disagree with the plugin.\n\nFinally, you need to mention the plugin in several places:\n\n- Add `\"foobar.js\"` to the \"files\" field in `package.json`.\n- Add eslint-plugin-foobar to the \"devDependencies\" field in `package.json`.\n- Make sure that at least one rule from eslint-plugin-foobar gets used in `.eslintrc.base.js`.\n- Add it to the list of supported plugins, to the example config and to Contributing section in `README.md`.\n\nWhen you\u2019re done, run `npm test` to verify that you got it all right. It runs several other npm scripts:\n\n- `\"test:lint\"` makes sure that the files in `test-lint/` pass ESLint when the exclusions from eslint-config-prettier are used. It also lints the code of eslint-config-prettier itself, and checks that Prettier has been run on all files.\n- `\"test:lint-verify-fail\"` is run by a test in `test/lint-verify-fail.test.js`.\n- `\"test:lint-rules\"` is run by a test in `test/rules.test.js`.\n- `\"test:jest\"` runs unit tests that check a number of things:\n  - That eslint-plugin-foobar is mentioned in all the places shown above.\n  - That no unknown rules are turned off. This helps catching typos, for example.\n  - That the CLI works.\n- `\"test:cli-sanity\"` and `\"test:cli-sanity-warning\"` are sanity checks for the CLI.\n\n## License\n\n[MIT](LICENSE).\n\n[@typescript-eslint/eslint-plugin]: https://github.com/typescript-eslint/typescript-eslint\n[@typescript-eslint/quotes]: https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/quotes.md\n[eslint 5.7.0]: https://eslint.org/blog/2018/10/eslint-v5.7.0-released\n[prettier]: https://github.com/prettier/prettier\n[arrow-body-style]: https://eslint.org/docs/rules/arrow-body-style\n[babel/quotes]: https://github.com/babel/eslint-plugin-babel#rules\n[curly]: https://eslint.org/docs/rules/curly\n[eslint-config-airbnb]: https://www.npmjs.com/package/eslint-config-airbnb\n[eslint-config-prettier#31]: https://github.com/prettier/eslint-config-prettier/issues/31\n[eslint-config-prettier#71]: https://github.com/prettier/eslint-config-prettier/issues/71\n[eslint-plugin-babel]: https://github.com/babel/eslint-plugin-babel\n[eslint-plugin-flowtype]: https://github.com/gajus/eslint-plugin-flowtype\n[eslint-plugin-prettier#65]: https://github.com/prettier/eslint-plugin-prettier/issues/65\n[eslint-plugin-prettier]: https://github.com/prettier/eslint-plugin-prettier\n[eslint-plugin-react]: https://github.com/yannickcr/eslint-plugin-react\n[eslint-plugin-standard]: https://github.com/xjamundx/eslint-plugin-standard\n[eslint-plugin-unicorn]: https://github.com/sindresorhus/eslint-plugin-unicorn\n[eslint-plugin-vue]: https://github.com/vuejs/eslint-plugin-vue\n[lines-around-comment]: https://eslint.org/docs/rules/lines-around-comment\n[max-len]: https://eslint.org/docs/rules/max-len\n[multiple configuration files]: https://eslint.org/docs/user-guide/configuring#configuration-cascading-and-hierarchy\n[no-confusing-arrow]: https://eslint.org/docs/rules/no-confusing-arrow\n[no-mixed-operators]: https://eslint.org/docs/rules/no-mixed-operators\n[no-restricted-syntax]: https://eslint.org/docs/rules/no-restricted-syntax\n[no-sequences-full]: https://eslint.org/docs/rules/no-sequences#when-not-to-use-it\n[no-sequences]: https://eslint.org/docs/rules/no-sequences\n[no-tabs]: https://eslint.org/docs/rules/no-tabs\n[no-unexpected-multiline]: https://eslint.org/docs/rules/no-unexpected-multiline\n[overrides]: https://eslint.org/docs/user-guide/configuring#configuration-based-on-glob-patterns\n[prefer-arrow-callback]: https://eslint.org/docs/rules/prefer-arrow-callback\n[quotes]: https://eslint.org/docs/rules/quotes\n[singlequote]: https://prettier.io/docs/en/options.html#quotes\n[string formatting rules]: https://prettier.io/docs/en/rationale.html#strings\n[vue/html-self-closing]: https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-self-closing.md\n[vue/max-len]: https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/max-len.md"}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 167588}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 4042760}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 16565125}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 50925646}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 86113234}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 139865319}], "dependentsCount": 2448, "starsCount": 7}, "github": {"starsCount": 2227, "forksCount": 112, "subscribersCount": 15, "issues": {"count": 150, "openCount": 4, "distribution": {"3600": 46, "10800": 18, "32400": 17, "97200": 21, "291600": 18, "874800": 16, "2624400": 8, "7873200": 3, "23619600": 2, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 216}, {"username": "ybiquitous", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 5}, {"username": "Hoishin", "commitsCount": 2}, {"username": "sudo-suhas", "commitsCount": 2}, {"username": "xcatliu", "commitsCount": 2}, {"username": "0xR", "commitsCount": 1}, {"username": "alexilyaev", "commitsCount": 1}, {"username": "bakkot", "commitsCount": 1}, {"username": "bartocc", "commitsCount": 1}, {"username": "formatlos", "commitsCount": 1}, {"username": "gaurav5430", "commitsCount": 1}, {"username": "j-f1", "commitsCount": 1}, {"username": "joecritch", "commitsCount": 1}, {"username": "mauricedb", "commitsCount": 1}, {"username": "miangraham", "commitsCount": 1}, {"username": "michalsnik", "commitsCount": 1}, {"username": "nfriedly", "commitsCount": 1}, {"username": "pleunv", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "silvenon", "commitsCount": 1}, {"username": "tibdex", "commitsCount": 1}], "commits": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 28}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 69}]}, "source": {"files": {"readmeSize": 25830, "testsSize": 13111, "hasChangelog": true}, "linters": ["eslint", "prettier"], "outdatedDependencies": {"get-stdin": {"required": "^6.0.0", "stable": "8.0.0", "latest": "8.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 2383, "downloadsCount": 16975215.333333332, "downloadsAcceleration": 66048.09482496197, "dependentsCount": 2448}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8388439322413299, "detail": {"quality": 0.835439333855388, "popularity": 0.6806191922422317, "maintenance": 0.9999868994283785}}}}, {"rollup-plugin-babel": {"analyzedAt": "2020-06-19T21:55:28.555Z", "collected": {"metadata": {"name": "rollup-plugin-babel", "scope": "unscoped", "version": "4.4.0", "description": "Seamless integration between Rollup and Babel.", "keywords": ["rollup-plugin", "babel", "es2015", "es6"], "date": "2020-03-07T09:51:08.304Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "andarist", "email": "mateuszburzynski@gmail.com"}, "maintainers": [{"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "andarist", "email": "mateuszburzynski@gmail.com"}, {"username": "eventualbuddha", "email": "brian@donovans.cc"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "victorystick", "email": "victorystick@gmail.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "shellscape", "email": "andrew@shellscape.org"}], "contributors": [{"name": "Bogdan Chadkin", "email": "trysound@yandex.ru"}, {"name": "Mateusz Burzy\u0144ski", "email": "mateuszburzynski@gmail.com", "url": "https://github.com/Andarist"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-babel.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-babel", "homepage": "https://github.com/rollup/rollup-plugin-babel", "repository": "https://github.com/rollup/rollup-plugin-babel", "bugs": "https://github.com/rollup/rollup-plugin-babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-module-imports": "^7.0.0", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.3.4", "@babel/plugin-external-helpers": "^7.0.0", "@babel/plugin-proposal-decorators": "^7.0.0", "@babel/plugin-transform-runtime": "^7.0.0", "@babel/preset-env": "^7.3.4", "buble": "^0.19.3", "eslint": "^5.15.1", "eslint-config-prettier": "^3.3.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^1.0.1", "lint-staged": "^7.2.2", "mocha": "^5.2.0", "prettier": "^1.15.3", "rollup": "^2.0.1", "rollup-plugin-buble": "^0.19.2", "rollup-plugin-json": "^3.0.0", "source-map": "^0.6.1", "source-map-support": "^0.5.6"}, "peerDependencies": {"@babel/core": "7 || ^7.0.0-rc.2", "rollup": ">=0.60.0 <3"}, "releases": [{"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 0}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 2}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 4}, {"from": "2018-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 23}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-babel.", "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 90378}, {"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 487256}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 2096579}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 6006068}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 9733398}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 15846080}], "dependentsCount": 841, "starsCount": 10}, "github": {"starsCount": 695, "forksCount": 85, "subscribersCount": 24, "issues": {"count": 359, "openCount": 0, "distribution": {"3600": 48, "10800": 28, "32400": 34, "97200": 27, "291600": 25, "874800": 35, "2624400": 27, "7873200": 43, "23619600": 42, "70858800": 49, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "Andarist", "commitsCount": 77}, {"username": "Rich-Harris", "commitsCount": 72}, {"username": "hzoo", "commitsCount": 14}, {"username": "eventualbuddha", "commitsCount": 5}, {"username": "TrySound", "commitsCount": 4}, {"username": "Victorystick", "commitsCount": 3}, {"username": "danez", "commitsCount": 3}, {"username": "shellscape", "commitsCount": 3}, {"username": "ericf", "commitsCount": 2}, {"username": "esphen", "commitsCount": 2}, {"username": "nicolo-ribaudo", "commitsCount": 2}, {"username": "sorgloomer", "commitsCount": 2}, {"username": "zeitiger", "commitsCount": 2}, {"username": "ArtMcBain", "commitsCount": 1}, {"username": "DenisCarriere", "commitsCount": 1}, {"username": "DrewML", "commitsCount": 1}, {"username": "FezVrasta", "commitsCount": 1}, {"username": "Kinrany", "commitsCount": 1}, {"username": "NMinhNguyen", "commitsCount": 1}, {"username": "adam-golab", "commitsCount": 1}, {"username": "cangoektas", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "denkristoffer", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "gingur", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kopax", "commitsCount": 1}, {"username": "lukastaegert", "commitsCount": 1}, {"username": "mikeheddes", "commitsCount": 1}, {"username": "miketrexler", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "ryanwalters", "commitsCount": 1}, {"username": "shad-k", "commitsCount": 1}, {"username": "snuggs", "commitsCount": 1}, {"username": "swernerx", "commitsCount": 1}, {"username": "tswaters", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}, {"username": "wmhilton", "commitsCount": 1}, {"username": "ylemkimon", "commitsCount": 1}], "commits": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 0}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 0}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 3}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 4}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 12}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 12915, "hasChangelog": true}, "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 857, "downloadsCount": 2002022.6666666667, "downloadsAcceleration": 9283.141095890409, "dependentsCount": 841}, "maintenance": {"releasesFrequency": 0.7154109589041097, "commitsFrequency": 0.3480821917808219, "openIssues": 1, "issuesDistribution": 0.2633568141371937}}, "score": {"final": 0.6273471729097403, "detail": {"quality": 0.49446543604080473, "popularity": 0.47422475653025054, "maintenance": 0.894368220891175}}}}, {"tape": {"analyzedAt": "2020-06-02T23:23:18.671Z", "collected": {"metadata": {"name": "tape", "scope": "unscoped", "version": "5.0.1", "description": "tap-producing test harness for node and browsers", "keywords": ["tap", "test", "harness", "assert", "browser"], "date": "2020-05-25T04:05:25.924Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "domenic", "email": "d@domenic.me"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "raynos", "email": "raynos2@gmail.com"}, {"username": "substack", "email": "substack@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/substack/tape.git"}, "links": {"npm": "https://www.npmjs.com/package/tape", "homepage": "https://github.com/substack/tape", "repository": "https://github.com/substack/tape", "bugs": "https://github.com/substack/tape/issues"}, "license": "MIT", "dependencies": {"deep-equal": "^2.0.3", "defined": "^1.0.0", "dotignore": "^0.1.2", "for-each": "^0.3.3", "function-bind": "^1.1.1", "glob": "^7.1.6", "has": "^1.0.3", "inherits": "^2.0.4", "is-regex": "^1.0.5", "minimist": "^1.2.5", "object-inspect": "^1.7.0", "object-is": "^1.1.2", "object.assign": "^4.1.0", "resolve": "^1.17.0", "resumer": "^0.0.0", "string.prototype.trim": "^1.2.1", "through": "^2.3.8"}, "devDependencies": {"concat-stream": "^1.6.2", "eclint": "^2.8.1", "ecstatic": "^4.1.4", "eslint": "^7.0.0", "falafel": "^2.2.4", "js-yaml": "^3.13.1", "tap": "^8.0.1", "tap-parser": "^3.0.5"}, "releases": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 3}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 4}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 14}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 15}, {"from": "2018-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 20}], "hasTestScript": true, "readme": "# tape\n\ntap-producing test harness for node and browsers\n\n[![build status](https://secure.travis-ci.org/substack/tape.svg?branch=master)](http://travis-ci.org/substack/tape)\n\n![tape](https://web.archive.org/web/20170612184731if_/http://substack.net/images/tape_drive.png)\n\n# example\n\n``` js\nvar test = require('tape');\n\ntest('timing test', function (t) {\n    t.plan(2);\n\n    t.equal(typeof Date.now, 'function');\n    var start = Date.now();\n\n    setTimeout(function () {\n        t.equal(Date.now() - start, 100);\n    }, 100);\n});\n```\n\n```\n$ node example/timing.js\nTAP version 13\n# timing test\nok 1 should be strictly equal\nnot ok 2 should be strictly equal\n  ---\n    operator: equal\n    expected: 100\n    actual:   107\n  ...\n\n1..2\n# tests 2\n# pass  1\n# fail  1\n```\n\n# usage\n\nYou always need to `require('tape')` in test files. You can run the tests by\nusual node means (`require('test-file.js')` or `node test-file.js`). You can\nalso run tests using the `tape` binary to utilize globbing, on Windows for\nexample:\n\n```sh\n$ tape tests/**/*.js\n```\n\n`tape`'s arguments are passed to the\n[`glob`](https://www.npmjs.com/package/glob) module. If you want `glob` to\nperform the expansion on a system where the shell performs such expansion, quote\nthe arguments as necessary:\n\n```sh\n$ tape 'tests/**/*.js'\n$ tape \"tests/**/*.js\"\n```\n\n## Preloading modules\n\nAdditionally, it is possible to make `tape` load one or more modules before running any tests, by using the `-r` or `--require` flag. Here's an example that loads [babel-register](http://babeljs.io/docs/usage/require/) before running any tests, to allow for JIT compilation:\n\n```sh\n$ tape -r babel-register tests/**/*.js\n```\n\nDepending on the module you're loading, you may be able to parameterize it using environment variables or auxiliary files. Babel, for instance, will load options from [`.babelrc`](http://babeljs.io/docs/usage/babelrc/) at runtime.\n\nThe `-r` flag behaves exactly like node's `require`, and uses the same module resolution algorithm. This means that if you need to load local modules, you have to prepend their path with `./` or `../` accordingly.\n\nFor example:\n\n```sh\n$ tape -r ./my/local/module tests/**/*.js\n```\n\nPlease note that all modules loaded using the `-r` flag will run *before* any tests, regardless of when they are specified. For example, `tape -r a b -r c` will actually load `a` and `c` *before* loading `b`, since they are flagged as required modules.\n\n# things that go well with tape\n\n`tape` maintains a fairly minimal core. Additional features are usually added by using another module alongside `tape`.\n\n## pretty reporters\n\nThe default TAP output is good for machines and humans that are robots.\n\nIf you want a more colorful / pretty output there are lots of modules on npm\nthat will output something pretty if you pipe TAP into them:\n\n- [tap-spec](https://github.com/scottcorgan/tap-spec)\n- [tap-dot](https://github.com/scottcorgan/tap-dot)\n- [faucet](https://github.com/substack/faucet)\n- [tap-bail](https://github.com/juliangruber/tap-bail)\n- [tap-browser-color](https://github.com/kirbysayshi/tap-browser-color)\n- [tap-json](https://github.com/gummesson/tap-json)\n- [tap-min](https://github.com/derhuerst/tap-min)\n- [tap-nyan](https://github.com/calvinmetcalf/tap-nyan)\n- [tap-pessimist](https://www.npmjs.org/package/tap-pessimist)\n- [tap-prettify](https://github.com/toolness/tap-prettify)\n- [colortape](https://github.com/shuhei/colortape)\n- [tap-xunit](https://github.com/aghassemi/tap-xunit)\n- [tap-difflet](https://github.com/namuol/tap-difflet)\n- [tape-dom](https://github.com/gritzko/tape-dom)\n- [tap-diff](https://github.com/axross/tap-diff)\n- [tap-notify](https://github.com/axross/tap-notify)\n- [tap-summary](https://github.com/zoubin/tap-summary)\n- [tap-markdown](https://github.com/Hypercubed/tap-markdown)\n- [tap-html](https://github.com/gabrielcsapo/tap-html)\n- [tap-react-browser](https://github.com/mcnuttandrew/tap-react-browser)\n- [tap-junit](https://github.com/dhershman1/tap-junit)\n- [tap-nyc](https://github.com/MegaArman/tap-nyc)\n- [tap-spec (emoji patch)](https://github.com/Sceat/tap-spec-emoji)\n- [tape-repeater](https://github.com/rgruesbeck/tape-repeater)\n\nTo use them, try `node test/index.js | tap-spec` or pipe it into one\nof the modules of your choice!\n\n## uncaught exceptions\n\nBy default, uncaught exceptions in your tests will not be intercepted, and will cause `tape` to crash. If you find this behavior undesirable, use [`tape-catch`](https://github.com/michaelrhodes/tape-catch) to report any exceptions as TAP errors.\n\n## other\n\n- CoffeeScript support with https://www.npmjs.com/package/coffeetape\n- Promise support with https://www.npmjs.com/package/blue-tape or https://www.npmjs.com/package/tape-promise\n- ES6 support with https://www.npmjs.com/package/babel-tape-runner or https://www.npmjs.com/package/buble-tape-runner\n- Different test syntax with https://github.com/pguth/flip-tape (warning: mutates String.prototype)\n- Electron test runner with https://github.com/tundrax/electron-tap\n- Concurrency support with https://github.com/imsnif/mixed-tape\n- In-process reporting with https://github.com/DavidAnson/tape-player\n\n# methods\n\nThe assertion methods in `tape` are heavily influenced or copied from the methods\nin [node-tap](https://github.com/isaacs/node-tap).\n\n```js\nvar test = require('tape')\n```\n\n## test([name], [opts], cb)\n\nCreate a new test with an optional `name` string and optional `opts` object.\n`cb(t)` fires with the new test object `t` once all preceding tests have\nfinished. Tests execute serially.\n\nAvailable `opts` options are:\n- opts.skip = true/false. See test.skip.\n- opts.timeout = 500. Set a timeout for the test, after which it will fail. See test.timeoutAfter.\n- opts.objectPrintDepth = 5. Configure max depth of expected / actual object printing. Environmental variable `NODE_TAPE_OBJECT_PRINT_DEPTH` can set the desired default depth for all tests; locally-set values will take precedence.\n- opts.todo = true/false. Test will be allowed to fail.\n\nIf you forget to `t.plan()` out how many assertions you are going to run and you\ndon't call `t.end()` explicitly, your test will hang.\n\n## test.skip([name], [opts], cb)\n\nGenerate a new test that will be skipped over.\n\n## test.onFinish(fn)\n\nThe onFinish hook will get invoked when ALL `tape` tests have finished\nright before `tape` is about to print the test summary.\n\n## test.onFailure(fn)\n\nThe onFailure hook will get invoked whenever any `tape` tests has failed.\n\n## t.plan(n)\n\nDeclare that `n` assertions should be run. `t.end()` will be called\nautomatically after the `n`th assertion. If there are any more assertions after\nthe `n`th, or after `t.end()` is called, they will generate errors.\n\n## t.end(err)\n\nDeclare the end of a test explicitly. If `err` is passed in `t.end` will assert\nthat it is falsey.\n\n## t.fail(msg)\n\nGenerate a failing assertion with a message `msg`.\n\n## t.pass(msg)\n\nGenerate a passing assertion with a message `msg`.\n\n## t.timeoutAfter(ms)\n\nAutomatically timeout the test after X ms.\n\n## t.skip(msg)\n\nGenerate an assertion that will be skipped over.\n\n## t.ok(value, msg)\n\nAssert that `value` is truthy with an optional description of the assertion `msg`.\n\nAliases: `t.true()`, `t.assert()`\n\n## t.notOk(value, msg)\n\nAssert that `value` is falsy with an optional description of the assertion `msg`.\n\nAliases: `t.false()`, `t.notok()`\n\n## t.error(err, msg)\n\nAssert that `err` is falsy. If `err` is non-falsy, use its `err.message` as the\ndescription message.\n\nAliases: `t.ifError()`, `t.ifErr()`, `t.iferror()`\n\n## t.equal(actual, expected, msg)\n\nAssert that `Object.is(actual, expected)` with an optional description of the assertion `msg`.\n\nAliases: `t.equals()`, `t.isEqual()`, `t.strictEqual()`, `t.strictEquals()`, `t.is()`\n\n## t.notEqual(actual, expected, msg)\n\nAssert that `!Object.is(actual, expected)` with an optional description of the assertion `msg`.\n\nAliases: `t.notEquals()`, `t.isNotEqual()`, `t.doesNotEqual()`, `t.isInequal()`, `t.notStrictEqual()`, `t.notStrictEquals()`, `t.isNot()`, `t.not()`\n\n## t.looseEqual(actual, expected, msg)\n\nAssert that `actual == expected` with an optional description of the assertion `msg`.\n\nAliases: `t.looseEquals()`\n\n## t.notLooseEqual(actual, expected, msg)\n\nAssert that `actual != expected` with an optional description of the assertion `msg`.\n\nAliases: `t.notLooseEquals()`\n\n## t.deepEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith strict comparisons (`===`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.deepEquals()`, `t.isEquivalent()`, `t.same()`\n\n## t.notDeepEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` do not have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith strict comparisons (`===`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.notDeepEquals`, `t.notEquivalent()`, `t.notDeeply()`, `t.notSame()`,\n`t.isNotDeepEqual()`, `t.isNotDeeply()`, `t.isNotEquivalent()`,\n`t.isInequivalent()`\n\n## t.deepLooseEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith loose comparisons (`==`) on leaf nodes and an optional description of the assertion `msg`.\n\n## t.notDeepLooseEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` do not have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith loose comparisons (`==`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.notLooseEqual()`, `t.notLooseEquals()`\n\n## t.throws(fn, expected, msg)\n\nAssert that the function call `fn()` throws an exception. `expected`, if present, must be a `RegExp` or `Function`. The `RegExp` matches the string representation of the exception, as generated by `err.toString()`. The `Function` is the exception thrown (e.g. `Error`). `msg` is an optional description of the assertion.\n\n## t.doesNotThrow(fn, expected, msg)\n\nAssert that the function call `fn()` does not throw an exception. `expected`, if present, limits what should not be thrown. For example, set `expected` to `/user/` to fail the test only if the string representation of the exception contains the word `user`. Any other exception would pass the test. If `expected` is omitted, any exception will fail the test. `msg` is an optional description of the assertion.\n\n## t.test(name, [opts], cb)\n\nCreate a subtest with a new test handle `st` from `cb(st)` inside the current\ntest `t`. `cb(st)` will only fire when `t` finishes. Additional tests queued up\nafter `t` will not be run until all subtests finish.\n\nYou may pass the same options that [`test()`](#testname-opts-cb) accepts.\n\n## t.comment(message)\n\nPrint a message without breaking the tap output. (Useful when using e.g. `tap-colorize` where output is buffered & `console.log` will print in incorrect order vis-a-vis tap output.)\n\n## t.match(string, regexp, message)\n\nAssert that `string` matches the RegExp `regexp`. Will throw (not just fail) when the first two arguments are the wrong type.\n\n## t.doesNotMatch(string, regexp, message)\n\nAssert that `string` does not match the RegExp `regexp`. Will throw (not just fail) when the first two arguments are the wrong type.\n\n## var htest = test.createHarness()\n\nCreate a new test harness instance, which is a function like `test()`, but with\na new pending stack and test state.\n\nBy default the TAP output goes to `console.log()`. You can pipe the output to\nsomeplace else if you `htest.createStream().pipe()` to a destination stream on\nthe first tick.\n\n## test.only([name], [opts], cb)\n\nLike `test([name], [opts], cb)` except if you use `.only` this is the only test case\nthat will run for the entire process, all other test cases using `tape` will\nbe ignored.\n\n## var stream = test.createStream(opts)\n\nCreate a stream of output, bypassing the default output stream that writes\nmessages to `console.log()`. By default `stream` will be a text stream of TAP\noutput, but you can get an object stream instead by setting `opts.objectMode` to\n`true`.\n\n### tap stream reporter\n\nYou can create your own custom test reporter using this `createStream()` api:\n\n``` js\nvar test = require('tape');\nvar path = require('path');\n\ntest.createStream().pipe(process.stdout);\n\nprocess.argv.slice(2).forEach(function (file) {\n    require(path.resolve(file));\n});\n```\n\nYou could substitute `process.stdout` for whatever other output stream you want,\nlike a network connection or a file.\n\nPass in test files to run as arguments:\n\n```sh\n$ node tap.js test/x.js test/y.js\nTAP version 13\n# (anonymous)\nnot ok 1 should be strictly equal\n  ---\n    operator: equal\n    expected: \"boop\"\n    actual:   \"beep\"\n  ...\n# (anonymous)\nok 2 should be strictly equal\nok 3 (unnamed assert)\n# wheee\nok 4 (unnamed assert)\n\n1..4\n# tests 4\n# pass  3\n# fail  1\n```\n\n### object stream reporter\n\nHere's how you can render an object stream instead of TAP:\n\n``` js\nvar test = require('tape');\nvar path = require('path');\n\ntest.createStream({ objectMode: true }).on('data', function (row) {\n    console.log(JSON.stringify(row))\n});\n\nprocess.argv.slice(2).forEach(function (file) {\n    require(path.resolve(file));\n});\n```\n\nThe output for this runner is:\n\n```sh\n$ node object.js test/x.js test/y.js\n{\"type\":\"test\",\"name\":\"(anonymous)\",\"id\":0}\n{\"id\":0,\"ok\":false,\"name\":\"should be strictly equal\",\"operator\":\"equal\",\"actual\":\"beep\",\"expected\":\"boop\",\"error\":{},\"test\":0,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":0}\n{\"type\":\"test\",\"name\":\"(anonymous)\",\"id\":1}\n{\"id\":0,\"ok\":true,\"name\":\"should be strictly equal\",\"operator\":\"equal\",\"actual\":2,\"expected\":2,\"test\":1,\"type\":\"assert\"}\n{\"id\":1,\"ok\":true,\"name\":\"(unnamed assert)\",\"operator\":\"ok\",\"actual\":true,\"expected\":true,\"test\":1,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":1}\n{\"type\":\"test\",\"name\":\"wheee\",\"id\":2}\n{\"id\":0,\"ok\":true,\"name\":\"(unnamed assert)\",\"operator\":\"ok\",\"actual\":true,\"expected\":true,\"test\":2,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":2}\n```\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```sh\nnpm install tape --save-dev\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 88623}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 559536}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2391945}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 7616630}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 14953677}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 28322975}], "dependentsCount": 815, "starsCount": 154}, "github": {"starsCount": 5318, "forksCount": 300, "subscribersCount": 73, "issues": {"count": 520, "openCount": 39, "distribution": {"3600": 54, "10800": 51, "32400": 44, "97200": 55, "291600": 37, "874800": 45, "2624400": 35, "7873200": 27, "23619600": 32, "70858800": 61, "212576400": 79}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 199}, {"username": "ljharb", "commitsCount": 177}, {"username": "Raynos", "commitsCount": 48}, {"username": "nelsonic", "commitsCount": 17}, {"username": "grncdr", "commitsCount": 14}, {"username": "marcusberner", "commitsCount": 14}, {"username": "fongandrew", "commitsCount": 10}, {"username": "mstade", "commitsCount": 10}, {"username": "isaacs", "commitsCount": 6}, {"username": "r0mflip", "commitsCount": 6}, {"username": "DavidAnson", "commitsCount": 5}, {"username": "FredrikNoren", "commitsCount": 5}, {"username": "domenic", "commitsCount": 5}, {"username": "nhamer", "commitsCount": 5}, {"username": "nicolagi", "commitsCount": 5}, {"username": "TehShrike", "commitsCount": 3}, {"username": "braddunbar", "commitsCount": 3}, {"username": "jtlapp", "commitsCount": 3}, {"username": "mkls", "commitsCount": 3}, {"username": "Sceat", "commitsCount": 2}, {"username": "abelmokadem", "commitsCount": 2}, {"username": "aredridel", "commitsCount": 2}, {"username": "michaelrhodes", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "rgruesbeck", "commitsCount": 2}, {"username": "ronkorving", "commitsCount": 2}, {"username": "timgates42", "commitsCount": 2}, {"username": "tmcw", "commitsCount": 2}, {"username": "AWinterman", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "Hypercubed", "commitsCount": 1}, {"username": "JoshuaGrams", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "KayleePop", "commitsCount": 1}, {"username": "Matt-Esch", "commitsCount": 1}, {"username": "MegaArman", "commitsCount": 1}, {"username": "Sequoia", "commitsCount": 1}, {"username": "Wilfred", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "aghassemi", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "andrewdeandrade", "commitsCount": 1}, {"username": "axelpale", "commitsCount": 1}, {"username": "aychtang", "commitsCount": 1}, {"username": "bambusekd", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "blakeembrey", "commitsCount": 1}, {"username": "blowery", "commitsCount": 1}, {"username": "brendanlong", "commitsCount": 1}, {"username": "chrisnicola", "commitsCount": 1}, {"username": "davidtheclark", "commitsCount": 1}, {"username": "defunctzombie", "commitsCount": 1}, {"username": "derhuerst", "commitsCount": 1}, {"username": "dhershman1", "commitsCount": 1}, {"username": "dmitriz", "commitsCount": 1}, {"username": "dscape", "commitsCount": 1}, {"username": "evcohen", "commitsCount": 1}, {"username": "feross", "commitsCount": 1}, {"username": "freeall", "commitsCount": 1}, {"username": "gabrielcsapo", "commitsCount": 1}, {"username": "gritzko", "commitsCount": 1}, {"username": "hayes", "commitsCount": 1}, {"username": "ifraixedes", "commitsCount": 1}, {"username": "imsnif", "commitsCount": 1}, {"username": "inadarei", "commitsCount": 1}, {"username": "jarofghosts", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "johnhenry", "commitsCount": 1}, {"username": "joshgillies", "commitsCount": 1}, {"username": "jprichardson", "commitsCount": 1}, {"username": "kirbysayshi", "commitsCount": 1}, {"username": "kuraga", "commitsCount": 1}, {"username": "marques-work", "commitsCount": 1}, {"username": "mathiasrw", "commitsCount": 1}, {"username": "mcnuttandrew", "commitsCount": 1}, {"username": "nikcorg", "commitsCount": 1}, {"username": "nowells", "commitsCount": 1}, {"username": "paulcpederson", "commitsCount": 1}, {"username": "perguth", "commitsCount": 1}, {"username": "rafcioki", "commitsCount": 1}, {"username": "rhendric", "commitsCount": 1}, {"username": "scottbessler", "commitsCount": 1}, {"username": "snuggs", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "trescube", "commitsCount": 1}, {"username": "tundrax", "commitsCount": 1}, {"username": "wbinnssmith", "commitsCount": 1}], "commits": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 0}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 11}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 23}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 86}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 100}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 14361, "testsSize": 171970}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/tape.svg?branch=master", "service": "https://api.travis-ci.org/substack/tape.svg?branch=master", "shields": "https://img.shields.io/travis/substack/tape/master.svg", "content": "https://img.shields.io/travis/substack/tape/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 5932, "downloadsCount": 2538876.6666666665, "downloadsAcceleration": 1903.2749429223768, "dependentsCount": 815}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7017986151008231, "detail": {"quality": 0.9448135602324892, "popularity": 0.5286320391364085, "maintenance": 0.6666666666666666}}}}, {"eslint-config-standard": {"analyzedAt": "2020-06-14T22:02:43.751Z", "collected": {"metadata": {"name": "eslint-config-standard", "scope": "unscoped", "version": "14.1.1", "description": "JavaScript Standard Style - ESLint Shareable Config", "keywords": ["JavaScript Standard Style", "check", "checker", "code", "code checker", "code linter", "code standards", "code style", "enforce", "eslint", "eslintconfig", "hint", "jscs", "jshint", "lint", "policy", "quality", "simple", "standard", "standard style", "style", "style checker", "style linter", "verify"], "date": "2020-03-20T18:03:49.444Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org", "username": "feross"}, "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}, {"username": "flet", "email": "flettre@gmail.com"}, {"username": "linusu", "email": "linus@folkdatorn.se"}], "repository": {"type": "git", "url": "git://github.com/standard/eslint-config-standard.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-standard", "homepage": "https://github.com/standard/eslint-config-standard", "repository": "https://github.com/standard/eslint-config-standard", "bugs": "https://github.com/standard/eslint-config-standard/issues"}, "license": "MIT", "devDependencies": {"eslint": "^6.2.2", "eslint-plugin-import": "^2.18.0", "eslint-plugin-node": "^10.0.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.0", "tape": "^4.8.0"}, "peerDependencies": {"eslint": ">=6.2.2", "eslint-plugin-import": ">=2.18.0", "eslint-plugin-node": ">=9.1.0", "eslint-plugin-promise": ">=4.2.1", "eslint-plugin-standard": ">=4.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 10}], "hasTestScript": true, "readme": "# eslint-config-standard [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/standard/eslint-config-standard/master.svg\n[travis-url]: https://travis-ci.org/standard/eslint-config-standard\n[npm-image]: https://img.shields.io/npm/v/eslint-config-standard.svg\n[npm-url]: https://npmjs.org/package/eslint-config-standard\n[downloads-image]: https://img.shields.io/npm/dm/eslint-config-standard.svg\n[downloads-url]: https://npmjs.org/package/eslint-config-standard\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### An ESLint [Shareable Config](http://eslint.org/docs/developer-guide/shareable-configs) for [JavaScript Standard Style](http://standardjs.com)\n\n[![JavaScript Style Guide - Standard Style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n\n## Install\n\nThis module is for advanced users. You probably want to use [`standard`](http://standardjs.com) instead :)\n\n```bash\nnpm install eslint-config-standard\n```\n\n## Usage\n\nShareable configs are designed to work with the `extends` feature of `.eslintrc` files.\nYou can learn more about\n[Shareable Configs](http://eslint.org/docs/developer-guide/shareable-configs) on the\nofficial ESLint website.\n\n**If you want to set up the config automatically**, follow these steps in your project directory:\n\n1. `npx eslint --init`\n2. Select \"Use a popular style guide.\"\n3. Select \"Standard.\"\n4. Select a config file format.\n5. If prompted, confirm the installation of the necessary dependencies.\n\nThe above steps will automatically set up an ESLint configuration and install the necessary dependencies for you.\n\n**If you want to set up the config manually**, run the following command:\n\n```bash\nnpm install --save-dev eslint-config-standard eslint-plugin-standard eslint-plugin-promise eslint-plugin-import eslint-plugin-node\n```\n\nThen, add this to your `.eslintrc` file:\n\n```\n{\n  \"extends\": \"standard\"\n}\n```\n\n*Note: We omitted the `eslint-config-` prefix since it is automatically assumed by ESLint.*\n\nYou can override settings from the shareable config by adding them directly into your\n`.eslintrc` file.\n\n### Looking for something easier than this?\n\nThe easiest way to use JavaScript Standard Style to check your code is to use the\n[`standard`](http://standardjs.com) package. This comes with a global\nNode command line program (`standard`) that you can run or add to your `npm test` script\nto quickly check your style.\n\n## Badge\n\nUse this in one of your projects? Include one of these badges in your readme to\nlet people know that your code is using the standard style.\n\n[![js-standard-style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n\n```markdown\n[![js-standard-style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n```\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n\n```markdown\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n```\n\n## Learn more\n\nFor the full listing of rules, editor plugins, FAQs, and more, visit the main\n[JavaScript Standard Style repo](http://standardjs.com).\n\n## License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org)."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 60414}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1252566}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5271016}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15861354}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 28493074}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 51312970}], "dependentsCount": 1077, "starsCount": 31}, "github": {"homepage": "https://standardjs.com", "starsCount": 1900, "forksCount": 476, "subscribersCount": 44, "issues": {"count": 167, "openCount": 17, "distribution": {"3600": 23, "10800": 7, "32400": 17, "97200": 20, "291600": 15, "874800": 11, "2624400": 15, "7873200": 18, "23619600": 26, "70858800": 13, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 279}, {"username": "Flet", "commitsCount": 4}, {"username": "LinusU", "commitsCount": 4}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "mightyiam", "commitsCount": 3}, {"username": "xjamundx", "commitsCount": 3}, {"username": "AdamVig", "commitsCount": 2}, {"username": "MrSwitch", "commitsCount": 2}, {"username": "dcousens", "commitsCount": 2}, {"username": "jokeyrhyme", "commitsCount": 2}, {"username": "acarballo-cs", "commitsCount": 1}, {"username": "blgm", "commitsCount": 1}, {"username": "danyshaanan", "commitsCount": 1}, {"username": "davegregg", "commitsCount": 1}, {"username": "davidjb", "commitsCount": 1}, {"username": "ddelnano", "commitsCount": 1}, {"username": "jleft", "commitsCount": 1}, {"username": "justinkalland", "commitsCount": 1}, {"username": "laurentdesmet", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "lukekarrys", "commitsCount": 1}, {"username": "mmazzarolo", "commitsCount": 1}, {"username": "mvanduijker", "commitsCount": 1}, {"username": "nickmccurdy", "commitsCount": 1}, {"username": "robinpokorny", "commitsCount": 1}, {"username": "simonkberg", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3491, "testsSize": 731, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/eslint-config-standard/master.svg", "service": "https://api.travis-ci.org/standard/eslint-config-standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/eslint-config-standard/master.svg", "content": "https://img.shields.io/travis/standard/eslint-config-standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/v/eslint-config-standard.svg", "content": "https://img.shields.io/npm/v/eslint-config-standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-config-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2477, "downloadsCount": 5287118, "downloadsAcceleration": 13207.107496194818, "dependentsCount": 1077}, "maintenance": {"releasesFrequency": 0.7542808219178082, "commitsFrequency": 0.6113013698630138, "openIssues": 1, "issuesDistribution": 0.3563965310383021}}, "score": {"final": 0.82457439014353, "detail": {"quality": 0.9782284044490229, "popularity": 0.5660403111440762, "maintenance": 0.9514050283097042}}}}, {"@types/react": {"analyzedAt": "2019-08-05T08:55:54.883Z", "collected": {"metadata": {"name": "@types/react", "scope": "types", "version": "16.8.24", "description": "TypeScript definitions for React", "date": "2019-07-31T17:06:47.611Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "AssureSign", "url": "http://www.assuresign.com"}, {"name": "Microsoft", "url": "https://microsoft.com"}, {"name": "John Reilly", "url": "https://github.com/johnnyreilly"}, {"name": "Benoit Benezech", "url": "https://github.com/bbenezech"}, {"name": "Patricio Zavolinsky", "url": "https://github.com/pzavolinsky"}, {"name": "Digiguru", "url": "https://github.com/digiguru"}, {"name": "Eric Anderson", "url": "https://github.com/ericanderson"}, {"name": "Dovydas Navickas", "url": "https://github.com/DovydasNavickas"}, {"name": "St\u00e9phane Goetz", "url": "https://github.com/onigoetz"}, {"name": "Josh Rutherford", "url": "https://github.com/theruther4d"}, {"name": "Guilherme H\u00fcbner", "url": "https://github.com/guilhermehubner"}, {"name": "Ferdy Budhidharma", "url": "https://github.com/ferdaber"}, {"name": "Johann Rakotoharisoa", "url": "https://github.com/jrakotoharisoa"}, {"name": "Olivier Pascal", "url": "https://github.com/pascaloliv"}, {"name": "Martin Hochel", "url": "https://github.com/hotell"}, {"name": "Frank Li", "url": "https://github.com/franklixuefei"}, {"name": "Jessica Franco", "url": "https://github.com/Jessidhia"}, {"name": "Saransh Kataria", "url": "https://github.com/saranshkataria"}, {"name": "Kanitkorn Sujautra", "url": "https://github.com/lukyth"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/react"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Freact", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "dependencies": {"@types/prop-types": "*", "csstype": "^2.2.0"}, "releases": [{"from": "2019-07-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 3}, {"from": "2019-05-07T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 12}, {"from": "2019-02-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 30}, {"from": "2018-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 69}, {"from": "2017-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 155}], "readme": "# Installation\r\n> `npm install --save @types/react`\r\n\r\n# Summary\r\nThis package contains type definitions for React (http://facebook.github.io/react/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react/v15\r\n\r\nAdditional Details\r\n * Last updated: Wed, 31 Jul 2019 17:06:41 GMT\r\n * Dependencies: none\r\n * Global values: React\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, AssureSign <http://www.assuresign.com>, Microsoft <https://microsoft.com>, John Reilly <https://github.com/johnnyreilly/>, Benoit Benezech <https://github.com/bbenezech>, Patricio Zavolinsky <https://github.com/pzavolinsky>, Digiguru <https://github.com/digiguru>, Eric Anderson <https://github.com/ericanderson>, Dovydas Navickas <https://github.com/DovydasNavickas>, and St\u00e9phane Goetz <https://github.com/onigoetz>."}, "npm": {"downloads": [{"from": "2019-08-04T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 149379}, {"from": "2019-07-29T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 3381902}, {"from": "2019-07-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 13547426}, {"from": "2019-05-07T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 39983042}, {"from": "2019-02-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 68573782}, {"from": "2018-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 104908891}], "dependentsCount": 2419, "starsCount": 8}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 8, "downloadsCount": 13327680.666666666, "downloadsAcceleration": 64425.770966514436, "dependentsCount": 2419}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-react-d2bl25z1ud/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-24T11:24:14.904Z"}, "score": {"final": 0.3666225949966041, "detail": {"quality": 0.19891579971391418, "popularity": 0.543660538330752, "maintenance": 0.3333333333333333}}}}, {"@babel/preset-react": {"analyzedAt": "2020-06-30T13:34:02.791Z", "collected": {"metadata": {"name": "@babel/preset-react", "scope": "babel", "version": "7.10.4", "description": "Babel preset for all React plugins.", "date": "2020-06-30T13:13:09.010Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-react"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-react", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-plugin-utils": "^7.10.4", "@babel/plugin-transform-react-display-name": "^7.10.4", "@babel/plugin-transform-react-jsx": "^7.10.4", "@babel/plugin-transform-react-jsx-development": "^7.10.4", "@babel/plugin-transform-react-jsx-self": "^7.10.4", "@babel/plugin-transform-react-jsx-source": "^7.10.4", "@babel/plugin-transform-react-pure-annotations": "^7.10.4"}, "devDependencies": {"@babel/core": "^7.10.4", "@babel/helper-plugin-test-runner": "^7.10.4", "@babel/helper-transform-fixture-test-runner": "^7.10.4"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 0}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 7}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 10}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 21}], "readme": "# @babel/preset-react\n\n> Babel preset for all React plugins.\n\nSee our website [@babel/preset-react](https://babeljs.io/docs/en/next/babel-preset-react.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22area%3A%20react%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-react\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-react --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1202064}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6824616}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 27855655}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 84666610}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 148831495}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 231091180}], "dependentsCount": 2959, "starsCount": 4}, "github": {"homepage": "https://babel.dev", "starsCount": 36907, "forksCount": 4352, "subscribersCount": 865, "issues": {"count": 11675, "openCount": 796, "distribution": {"3600": 2467, "10800": 919, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1011, "2624400": 845, "7873200": 837, "23619600": 854, "70858800": 1089, "212576400": 276}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 482}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 201}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 36}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 145}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 385}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 471, "testsSize": 3287, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 1, "branding": 1}, "popularity": {"communityInterest": 42227, "downloadsCount": 28222203.333333332, "downloadsAcceleration": 122277.60778158298, "dependentsCount": 2959}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2370762220708152}}, "score": {"final": 0.8900782909607572, "detail": {"quality": 0.9572286288571267, "popularity": 0.8338904976925288, "maintenance": 0.8887086517463834}}}}, {"rxjs": {"analyzedAt": "2020-05-16T04:33:51.156Z", "collected": {"metadata": {"name": "rxjs", "scope": "unscoped", "version": "6.5.5", "description": "Reactive Extensions for modern JavaScript", "keywords": ["Rx", "RxJS", "ReactiveX", "ReactiveExtensions", "Streams", "Observables", "Observable", "Stream", "ES6", "ES2015"], "date": "2020-04-03T01:34:30.900Z", "author": {"name": "Ben Lesh", "email": "ben@benlesh.com", "username": "blesh"}, "publisher": {"username": "blesh", "email": "ben@benlesh.com"}, "maintainers": [{"username": "blesh", "email": "ben@benlesh.com"}], "contributors": [{"name": "Ben Lesh", "email": "ben@benlesh.com"}, {"name": "Paul Taylor", "email": "paul.e.taylor@me.com"}, {"name": "Jeff Cross", "email": "crossj@google.com"}, {"name": "Matthew Podwysocki", "email": "matthewp@microsoft.com"}, {"name": "OJ Kwon", "email": "kwon.ohjoong@gmail.com"}, {"name": "Andre Staltz", "email": "andre@staltz.com"}], "repository": {"type": "git", "url": "git+https://github.com/reactivex/rxjs.git"}, "links": {"npm": "https://www.npmjs.com/package/rxjs", "homepage": "https://github.com/ReactiveX/RxJS", "repository": "https://github.com/reactivex/rxjs", "bugs": "https://github.com/ReactiveX/RxJS/issues"}, "license": "Apache-2.0", "dependencies": {"tslib": "^1.9.0"}, "devDependencies": {"@angular-devkit/build-optimizer": "0.4.6", "@angular-devkit/schematics": "^0.5.4", "@types/chai": "4.1.2", "@types/lodash": "4.14.102", "@types/mocha": "2.2.48", "@types/node": "9.4.5", "@types/sinon": "4.1.3", "@types/sinon-chai": "2.7.29", "@types/source-map": "^0.5.2", "babel-polyfill": "6.26.0", "benchmark": "2.1.0", "benchpress": "2.0.0-beta.1", "chai": "4.1.2", "check-side-effects": "0.0.20", "color": "3.0.0", "colors": "1.1.2", "commitizen": "2.9.6", "coveralls": "3.0.0", "cross-env": "5.1.3", "cz-conventional-changelog": "1.2.0", "danger": "1.1.0", "dependency-cruiser": "2.13.0", "doctoc": "1.3.0", "dtslint": "0.6.1", "escape-string-regexp": "1.0.5", "esdoc": "0.4.7", "eslint": "4.17.0", "eslint-plugin-jasmine": "^2.10.1", "fs-extra": "5.0.0", "get-folder-size": "1.0.1", "glob": "7.1.2", "gm": "1.23.1", "google-closure-compiler-js": "20170218.0.0", "gzip-size": "4.1.0", "http-server": "0.11.1", "husky": "0.14.3", "klaw-sync": "3.0.2", "lint-staged": "7.1.1", "lodash": "4.17.5", "markdown-doctest": "0.9.1", "minimist": "1.2.0", "mkdirp": "0.5.1", "mocha": "5.0.0", "mocha-in-sauce": "0.0.1", "npm-run-all": "4.1.2", "nyc": "11.4.1", "opn-cli": "3.1.0", "platform": "1.3.5", "promise": "8.0.1", "protractor": "3.1.1", "rollup": "0.66.6", "rollup-plugin-alias": "1.4.0", "rollup-plugin-inject": "2.0.0", "rollup-plugin-node-resolve": "2.0.0", "rx": "latest", "rxjs": "^5.5.7", "shx": "0.2.2", "sinon": "4.3.0", "sinon-chai": "2.14.0", "source-map-support": "0.5.3", "symbol-observable": "1.0.1", "systemjs": "^0.21.0", "ts-node": "6.1.0", "tsconfig-paths": "3.2.0", "tslint": "5.9.1", "tslint-etc": "1.2.6", "tslint-no-toplevel-property-access": "0.0.2", "tslint-no-unused-expression-chai": "0.0.3", "typescript": "^3.0.1", "validate-commit-msg": "2.14.0", "webpack": "1.13.1", "xmlhttprequest": "1.8.0"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 3}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 5}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 7}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# <img src=\"docs_app/assets/Rx_Logo_S.png\" alt=\"RxJS Logo\" width=\"86\" height=\"86\"> RxJS: Reactive Extensions For JavaScript\n\n[![CircleCI](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg)](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x)\n[![npm version](https://badge.fury.io/js/%40reactivex%2Frxjs.svg)](http://badge.fury.io/js/%40reactivex%2Frxjs)\n[![Join the chat at https://gitter.im/Reactive-Extensions/RxJS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Reactive-Extensions/RxJS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# RxJS 6 Stable\n\n### MIGRATION AND RELEASE INFORMATION:\n\nFind out how to update to v6, **automatically update your TypeScript code**, and more!\n\n- [Current home is MIGRATION.md](./docs_app/content/guide/v6/migration.md)\n\n### FOR V 5.X PLEASE GO TO [THE 5.0 BRANCH](https://github.com/ReactiveX/rxjs/tree/5.x)\n\nReactive Extensions Library for JavaScript. This is a rewrite of [Reactive-Extensions/RxJS](https://github.com/Reactive-Extensions/RxJS) and is the latest production-ready version of RxJS. This rewrite is meant to have better performance, better modularity, better debuggable call stacks, while staying mostly backwards compatible, with some breaking changes that reduce the API surface.\n\n[Apache 2.0 License](LICENSE.txt)\n\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Contribution Guidelines](CONTRIBUTING.md)\n- [Maintainer Guidelines](doc_app/content/maintainer-guidelines.md)\n- [API Documentation](https://rxjs.dev/)\n\n## Versions In This Repository\n\n- [master](https://github.com/ReactiveX/rxjs/commits/master) - This is all of the current, unreleased work, which is against v6 of RxJS right now\n- [stable](https://github.com/ReactiveX/rxjs/commits/stable) - This is the branch for the latest version you'd get if you do `npm install rxjs`\n\n## Important\n\nBy contributing or commenting on issues in this repository, whether you've read them or not, you're agreeing to the [Contributor Code of Conduct](CODE_OF_CONDUCT.md). Much like traffic laws, ignorance doesn't grant you immunity.\n\n## Installation and Usage\n\n### ES6 via npm\n\n```sh\nnpm install rxjs\n```\n\nIt's recommended to pull in the Observable creation methods you need directly from `'rxjs'` as shown below with `range`. And you can pull in any operator you need from one spot, under `'rxjs/operators'`.\n\n```ts\nimport { range } from \"rxjs\";\nimport { map, filter } from \"rxjs/operators\";\n\nrange(1, 200)\n  .pipe(\n    filter(x => x % 2 === 1),\n    map(x => x + x)\n  )\n  .subscribe(x => console.log(x));\n```\n\nHere, we're using the built-in `pipe` method on Observables to combine operators. See [pipeable operators](https://github.com/ReactiveX/rxjs/blob/master/doc/pipeable-operators.md) for more information.\n\n### CommonJS via npm\n\nTo install this library for CommonJS (CJS) usage, use the following command:\n\n```sh\nnpm install rxjs\n```\n\n(Note: destructuring available in Node 8+)\n\n```js\nconst { range } = require('rxjs');\nconst { map, filter } = require('rxjs/operators');\n\nrange(1, 200).pipe(\n  filter(x => x % 2 === 1),\n  map(x => x + x)\n).subscribe(x => console.log(x));\n```\n\n### CDN\n\nFor CDN, you can use [unpkg](https://unpkg.com/):\n\nhttps://unpkg.com/rxjs/bundles/rxjs.umd.min.js\n\nThe global namespace for rxjs is `rxjs`:\n\n```js\nconst { range } = rxjs;\nconst { map, filter } = rxjs.operators;\n\nrange(1, 200)\n  .pipe(\n    filter(x => x % 2 === 1),\n    map(x => x + x)\n  )\n  .subscribe(x => console.log(x));\n```\n\n## Goals\n\n- Smaller overall bundles sizes\n- Provide better performance than preceding versions of RxJS\n- To model/follow the [Observable Spec Proposal](https://github.com/zenparsing/es-observable) to the observable\n- Provide more modular file structure in a variety of formats\n- Provide more debuggable call stacks than preceding versions of RxJS\n\n## Building/Testing\n\n- `npm run build_all` - builds everything\n- `npm test` - runs tests\n- `npm run test_no_cache` - run test with `ts-node` set to false\n\n## Performance Tests\n\nRun `npm run build_perf` or `npm run perf` to run the performance tests with `protractor`.\n\nRun `npm run perf_micro [operator]` to run micro performance test benchmarking operator.\n\n## Adding documentation\n\nWe appreciate all contributions to the documentation of any type. All of the information needed to get the docs app up and running locally as well as how to contribute can be found in the [documentation directory](./docs_app).\n\n## Generating PNG marble diagrams\n\nThe script `npm run tests2png` requires some native packages installed locally: `imagemagick`, `graphicsmagick`, and `ghostscript`.\n\nFor Mac OS X with [Homebrew](http://brew.sh/):\n\n- `brew install imagemagick`\n- `brew install graphicsmagick`\n- `brew install ghostscript`\n- You may need to install the Ghostscript fonts manually:\n  - Download the tarball from the [gs-fonts project](https://sourceforge.net/projects/gs-fonts)\n  - `mkdir -p /usr/local/share/ghostscript && tar zxvf /path/to/ghostscript-fonts.tar.gz -C /usr/local/share/ghostscript`\n\nFor Debian Linux:\n\n- `sudo add-apt-repository ppa:dhor/myway`\n- `apt-get install imagemagick`\n- `apt-get install graphicsmagick`\n- `apt-get install ghostscript`\n\nFor Windows and other Operating Systems, check the download instructions here:\n\n- http://imagemagick.org\n- http://www.graphicsmagick.org\n- http://www.ghostscript.com/"}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 3294188}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 19832453}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 84016110}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 236427704}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 413339660}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 712145976}], "dependentsCount": 13849, "starsCount": 102}, "github": {"homepage": "https://rxjs.dev", "starsCount": 21890, "forksCount": 2279, "subscribersCount": 476, "issues": {"count": 5424, "openCount": 385, "distribution": {"3600": 678, "10800": 322, "32400": 369, "97200": 610, "291600": 591, "874800": 789, "2624400": 619, "7873200": 504, "23619600": 437, "70858800": 429, "212576400": 76}, "isDisabled": false}, "contributors": [{"username": "benlesh", "commitsCount": 1114}, {"username": "kwonoj", "commitsCount": 446}, {"username": "staltz", "commitsCount": 311}, {"username": "cartant", "commitsCount": 130}, {"username": "jasonaden", "commitsCount": 119}, {"username": "trxcllnt", "commitsCount": 78}, {"username": "timdeschryver", "commitsCount": 71}, {"username": "luisgabriel", "commitsCount": 65}, {"username": "tetsuharuohzeki", "commitsCount": 58}, {"username": "mpodlasin", "commitsCount": 44}, {"username": "david-driscoll", "commitsCount": 41}, {"username": "dkosasih", "commitsCount": 39}, {"username": "jeffbcross", "commitsCount": 34}, {"username": "jayphelps", "commitsCount": 33}, {"username": "natmegs", "commitsCount": 28}, {"username": "pertrai1", "commitsCount": 27}, {"username": "justinwoo", "commitsCount": 23}, {"username": "martinsik", "commitsCount": 20}, {"username": "dzhavat", "commitsCount": 19}, {"username": "tanem", "commitsCount": 16}, {"username": "robwormald", "commitsCount": 15}, {"username": "IgorMinar", "commitsCount": 13}, {"username": "adrianomelo", "commitsCount": 13}, {"username": "jinroh", "commitsCount": 13}, {"username": "SangKa", "commitsCount": 12}, {"username": "rall", "commitsCount": 9}, {"username": "BioPhoton", "commitsCount": 8}, {"username": "darthtrevino", "commitsCount": 8}, {"username": "figueredo", "commitsCount": 8}, {"username": "gkalpak", "commitsCount": 8}, {"username": "Widdershin", "commitsCount": 7}, {"username": "feloy", "commitsCount": 7}, {"username": "imcotton", "commitsCount": 7}, {"username": "moniuch", "commitsCount": 7}, {"username": "Brooooooklyn", "commitsCount": 6}, {"username": "kolodny", "commitsCount": 6}, {"username": "niklas-wortmann", "commitsCount": 6}, {"username": "peaBerberian", "commitsCount": 6}, {"username": "robstoll", "commitsCount": 6}, {"username": "ajcrites", "commitsCount": 5}, {"username": "alexeagle", "commitsCount": 5}, {"username": "bmeurer", "commitsCount": 5}, {"username": "jakovljevic-mladen", "commitsCount": 5}, {"username": "mtaran-google", "commitsCount": 5}, {"username": "rob3c", "commitsCount": 5}, {"username": "waseemahmad31", "commitsCount": 5}, {"username": "alan-agius4", "commitsCount": 4}, {"username": "bafolts", "commitsCount": 4}, {"username": "bbonnet", "commitsCount": 4}, {"username": "edbzn", "commitsCount": 4}, {"username": "felixfbecker", "commitsCount": 4}, {"username": "luillyfe", "commitsCount": 4}, {"username": "masaeedu", "commitsCount": 4}, {"username": "ngfelixl", "commitsCount": 4}, {"username": "oscarlorentzon", "commitsCount": 4}, {"username": "rgbkrk", "commitsCount": 4}, {"username": "vsavkin", "commitsCount": 4}, {"username": "xp44mm", "commitsCount": 4}, {"username": "OliverJAsh", "commitsCount": 3}, {"username": "PDavid", "commitsCount": 3}, {"username": "PatrickJS", "commitsCount": 3}, {"username": "Xapuu", "commitsCount": 3}, {"username": "ZackDeRose", "commitsCount": 3}, {"username": "alex-wilmer", "commitsCount": 3}, {"username": "bowenni", "commitsCount": 3}, {"username": "chrisprice", "commitsCount": 3}, {"username": "christianalfoni", "commitsCount": 3}, {"username": "claudiordgz", "commitsCount": 3}, {"username": "gluck", "commitsCount": 3}, {"username": "hmil", "commitsCount": 3}, {"username": "ladyleet", "commitsCount": 3}, {"username": "leggechr", "commitsCount": 3}, {"username": "mattpodwysocki", "commitsCount": 3}, {"username": "mattyao1984", "commitsCount": 3}, {"username": "mprobst", "commitsCount": 3}, {"username": "nathan-lapinski", "commitsCount": 3}, {"username": "nikagar4", "commitsCount": 3}, {"username": "oboukli", "commitsCount": 3}, {"username": "rarmatei", "commitsCount": 3}, {"username": "sarbbottam", "commitsCount": 3}, {"username": "Daschyppoo", "commitsCount": 2}, {"username": "Eddie-CooRo", "commitsCount": 2}, {"username": "Spetastian", "commitsCount": 2}, {"username": "abraham", "commitsCount": 2}, {"username": "arpadvas", "commitsCount": 2}, {"username": "artem-galas", "commitsCount": 2}, {"username": "claasahl", "commitsCount": 2}, {"username": "evertbouw", "commitsCount": 2}, {"username": "filipesilva", "commitsCount": 2}, {"username": "gregmagolan", "commitsCount": 2}, {"username": "kirjahylly", "commitsCount": 2}, {"username": "manekinekko", "commitsCount": 2}, {"username": "mazulatas", "commitsCount": 2}, {"username": "reod", "commitsCount": 2}, {"username": "shairez", "commitsCount": 2}, {"username": "thorn0", "commitsCount": 2}, {"username": "tomwhite007", "commitsCount": 2}, {"username": "willheslam", "commitsCount": 2}, {"username": "ravinsinghd", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 6}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 51}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 130}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 257}], "statuses": [{"context": "ci/circleci: typescriptLatestSupported", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: dtslint", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: build", "state": "success"}]}, "source": {"files": {"readmeSize": 3664, "testsSize": 2302068, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg", "service": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg", "shields": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.svg", "content": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "6.x"}}}], "linters": ["eslint", "tslint"], "outdatedDependencies": {"tslib": {"required": "^1.9.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 24846, "downloadsCount": 78809234.66666667, "downloadsAcceleration": 298674.67823439883, "dependentsCount": 13849}, "maintenance": {"releasesFrequency": 0.932277397260274, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4103505752002883}}, "score": {"final": 0.9483255813947398, "detail": {"quality": 0.9561101603150903, "popularity": 0.9200507336511197, "maintenance": 0.9699279329209165}}}}, {"babel-runtime": {"analyzedAt": "2020-06-06T23:47:40.408Z", "collected": {"metadata": {"name": "babel-runtime", "scope": "unscoped", "version": "6.26.0", "description": "babel selfContained runtime", "date": "2017-08-16T15:54:10.021Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-runtime", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"core-js": "^2.4.0", "regenerator-runtime": "^0.11.0"}, "devDependencies": {"babel-helpers": "^6.22.0", "babel-plugin-transform-runtime": "^6.23.0"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-runtime"}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1612918}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 9511604}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 41400954}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 124645267}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 235357227}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 463796916}], "dependentsCount": 10900, "starsCount": 23}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36730, "forksCount": 4310, "subscribersCount": 866, "issues": {"count": 11608, "openCount": 778, "distribution": {"3600": 2462, "10800": 917, "32400": 1067, "97200": 1239, "291600": 1055, "874800": 1002, "2624400": 851, "7873200": 809, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 13}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 59}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 218}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 410}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324664, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"regenerator-runtime": {"required": "^0.11.0", "stable": "0.13.5", "latest": "0.13.5"}, "core-js": {"required": "^2.4.0", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 42028, "downloadsCount": 41548422.333333336, "downloadsAcceleration": 36554.74640410958, "dependentsCount": 10900}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24040725297032078}}, "score": {"final": 0.7544952082830829, "detail": {"quality": 0.8275530770138868, "popularity": 0.875812792240797, "maintenance": 0.5705565939846802}}}}, {"glob": {"analyzedAt": "2020-06-07T17:12:37.480Z", "collected": {"metadata": {"name": "glob", "scope": "unscoped", "version": "7.1.6", "description": "a little globber", "date": "2019-11-06T22:07:44.189Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/node-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/glob", "homepage": "https://github.com/isaacs/node-glob#readme", "repository": "https://github.com/isaacs/node-glob", "bugs": "https://github.com/isaacs/node-glob/issues"}, "license": "ISC", "dependencies": {"fs.realpath": "^1.0.0", "inflight": "^1.0.4", "inherits": "2", "minimatch": "^3.0.4", "once": "^1.3.0", "path-is-absolute": "^1.0.0"}, "devDependencies": {"mkdirp": "0", "rimraf": "^2.2.8", "tap": "^12.0.1", "tick": "0.0.6"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](logo/glob.png)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Glob Logo\nGlob's logo was created by [Tanya Brassie](http://tanyabrassie.com/). Logo files can be found [here](https://github.com/isaacs/node-glob/tree/master/logo).\n\nThe logo is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n\n![](oh-my-glob.gif)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1860587}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 34265308}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 143561429}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 445916366}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 824173826}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1540269573}], "dependentsCount": 15328, "starsCount": 352}, "github": {"starsCount": 6406, "forksCount": 418, "subscribersCount": 102, "issues": {"count": 413, "openCount": 106, "distribution": {"3600": 32, "10800": 25, "32400": 36, "97200": 28, "291600": 24, "874800": 30, "2624400": 29, "7873200": 45, "23619600": 44, "70858800": 42, "212576400": 78}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 403}, {"username": "tanyabrassie", "commitsCount": 3}, {"username": "bcardarella", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "wdavidw", "commitsCount": 2}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "amelon-bflo", "commitsCount": 1}, {"username": "basarat", "commitsCount": 1}, {"username": "benhutchins", "commitsCount": 1}, {"username": "contra", "commitsCount": 1}, {"username": "denis-sokolov", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "jakobmattsson", "commitsCount": 1}, {"username": "jimt", "commitsCount": 1}, {"username": "jldec", "commitsCount": 1}, {"username": "marclipovsky", "commitsCount": 1}, {"username": "maxg", "commitsCount": 1}, {"username": "mikeobrien", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "peterbraden", "commitsCount": 1}, {"username": "vegetableman", "commitsCount": 1}, {"username": "vkichline", "commitsCount": 1}, {"username": "zakhenry", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 15002, "testsSize": 52183, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/node-glob.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/node-glob.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/node-glob/master.svg", "content": "https://img.shields.io/travis/isaacs/node-glob/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/isaacs/node-glob/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/isaacs/node-glob/master.svg", "content": "https://img.shields.io/coveralls/isaacs/node-glob/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "coverage": 0.94, "outdatedDependencies": {"path-is-absolute": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.866, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 7307, "downloadsCount": 148638788.66666666, "downloadsAcceleration": 231072.7919330292, "dependentsCount": 15328}, "maintenance": {"releasesFrequency": 0.43458904109589047, "commitsFrequency": 0.06904109589041096, "openIssues": 0.9055690072639225, "issuesDistribution": 0}}, "score": {"final": 0.7809906743558308, "detail": {"quality": 0.9517780450854492, "popularity": 0.8799526266292125, "maintenance": 0.5356395471713477}}}}, {"browserify": {"analyzedAt": "2020-06-26T20:56:18.063Z", "collected": {"metadata": {"name": "browserify", "scope": "unscoped", "version": "16.5.1", "description": "browser-side require() the node way", "keywords": ["browser", "require", "commonjs", "commonj-esque", "bundle", "npm", "javascript"], "date": "2020-03-30T10:23:13.908Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "goto-bus-stop", "email": "renee@kooi.me"}, "maintainers": [{"username": "ahdinosaur", "email": "michael.williams@enspiral.com"}, {"username": "anandthakker", "email": "vestibule@anandthakker.net"}, {"username": "ashaffer88", "email": "darawk@gmail.com"}, {"username": "balupton", "email": "b@lupton.cc"}, {"username": "bpostlethwaite", "email": "post.ben.here@gmail.com"}, {"username": "bret", "email": "bcomnes@gmail.com"}, {"username": "cwmma", "email": "calvin.metcalf@gmail.com"}, {"username": "defunctzombie", "email": "shtylman@gmail.com"}, {"username": "domenic", "email": "d@domenic.me"}, {"username": "dominictarr", "email": "dominic.tarr@gmail.com"}, {"username": "elnounch", "email": "contact@elnounch.net"}, {"username": "emilbayes", "email": "github@tixz.dk"}, {"username": "feross", "email": "feross@feross.org"}, {"username": "forbeslindesay", "email": "forbes@lindesay.co.uk"}, {"username": "fpereira1", "email": "pereira.filype@gmail.com"}, {"username": "garann", "email": "garann@gmail.com"}, {"username": "gkatsev", "email": "me@gkatsev.com"}, {"username": "goto-bus-stop", "email": "renee@kooi.me"}, {"username": "hughsk", "email": "hughskennedy@gmail.com"}, {"username": "indutny", "email": "fedor@indutny.com"}, {"username": "jmm", "email": "npm-public@jessemccarthy.net"}, {"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "jryans", "email": "jryans@gmail.com"}, {"username": "leichtgewicht", "email": "martin.heidegger@gmail.com"}, {"username": "lukechilds", "email": "lukechilds123@gmail.com"}, {"username": "mafintosh", "email": "mathiasbuus@gmail.com"}, {"username": "mattdesl", "email": "dave.des@gmail.com"}, {"username": "maxogden", "email": "max@maxogden.com"}, {"username": "mellowmelon", "email": "palmermebane@gmail.com"}, {"username": "parshap", "email": "parshap+npm@gmail.com"}, {"username": "pkrumins", "email": "peteris.krumins@gmail.com"}, {"username": "sethvincent", "email": "sethvincent@gmail.com"}, {"username": "stevemao", "email": "maochenyan@gmail.com"}, {"username": "substack", "email": "substack@gmail.com"}, {"username": "tehshrike", "email": "me@JoshDuff.com"}, {"username": "terinjokes", "email": "terinjokes@gmail.com"}, {"username": "thlorenz", "email": "thlorenz@gmx.de"}, {"username": "ungoldman", "email": "ungoldman@gmail.com"}, {"username": "yerkopalma", "email": "yerko.palma@usach.cl"}, {"username": "yoshuawuyts", "email": "yoshuawuyts@gmail.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/browserify/browserify.git"}, "links": {"npm": "https://www.npmjs.com/package/browserify", "homepage": "https://github.com/browserify/browserify#readme", "repository": "https://github.com/browserify/browserify", "bugs": "https://github.com/browserify/browserify/issues"}, "license": "MIT", "dependencies": {"JSONStream": "^1.0.3", "assert": "^1.4.0", "browser-pack": "^6.0.1", "browser-resolve": "^1.11.0", "browserify-zlib": "~0.2.0", "buffer": "~5.2.1", "cached-path-relative": "^1.0.0", "concat-stream": "^1.6.0", "console-browserify": "^1.1.0", "constants-browserify": "~1.0.0", "crypto-browserify": "^3.0.0", "defined": "^1.0.0", "deps-sort": "^2.0.0", "domain-browser": "^1.2.0", "duplexer2": "~0.1.2", "events": "^2.0.0", "glob": "^7.1.0", "has": "^1.0.0", "htmlescape": "^1.1.0", "https-browserify": "^1.0.0", "inherits": "~2.0.1", "insert-module-globals": "^7.0.0", "labeled-stream-splicer": "^2.0.0", "mkdirp-classic": "^0.5.2", "module-deps": "^6.0.0", "os-browserify": "~0.3.0", "parents": "^1.0.1", "path-browserify": "~0.0.0", "process": "~0.11.0", "punycode": "^1.3.2", "querystring-es3": "~0.2.0", "read-only-stream": "^2.0.0", "readable-stream": "^2.0.2", "resolve": "^1.1.4", "shasum": "^1.0.0", "shell-quote": "^1.6.1", "stream-browserify": "^2.0.0", "stream-http": "^3.0.0", "string_decoder": "^1.1.1", "subarg": "^1.0.0", "syntax-error": "^1.1.1", "through2": "^2.0.0", "timers-browserify": "^1.0.1", "tty-browserify": "0.0.1", "url": "~0.11.0", "util": "~0.10.1", "vm-browserify": "^1.0.0", "xtend": "^4.0.0"}, "devDependencies": {"backbone": "~0.9.2", "browser-unpack": "^1.1.1", "coffee-script": "~1.10.0", "coffeeify": "~1.1.0", "has-object-spread": "^1.0.0", "has-template-literals": "^1.0.0", "isstream": "^0.1.2", "make-generator-function": "^1.1.0", "semver": "^5.5.0", "seq": "0.3.5", "tap": "^10.7.2", "temp": "=0.8.3", "through": "^2.3.4"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# browserify\n\n`require('modules')` in the browser\n\nUse a [node](http://nodejs.org)-style `require()` to organize your browser code\nand load modules installed by [npm](https://www.npmjs.com).\n\nbrowserify will recursively analyze all the `require()` calls in your app in\norder to build a bundle you can serve up to the browser in a single `<script>`\ntag.\n\n[![build status](https://img.shields.io/travis/browserify/browserify/master.svg)](https://travis-ci.org/browserify/browserify)\n\n![browserify!](./assets/logo.png)\n\n# getting started\n\nIf you're new to browserify, check out the\n[browserify handbook](https://github.com/browserify/browserify-handbook)\nand the resources on [browserify.org](http://browserify.org/).\n\n# example\n\nWhip up a file, `main.js` with some `require()`s in it. You can use relative\npaths like `'./foo.js'` and `'../lib/bar.js'` or module paths like `'gamma'`\nthat will search `node_modules/` using\n[node's module lookup algorithm](https://github.com/browserify/resolve).\n\n``` js\nvar foo = require('./foo.js');\nvar bar = require('../lib/bar.js');\nvar gamma = require('gamma');\n\nvar elem = document.getElementById('result');\nvar x = foo(100) + bar('baz');\nelem.textContent = gamma(x);\n```\n\nExport functionality by assigning onto `module.exports` or `exports`:\n\n``` js\nmodule.exports = function (n) { return n * 111 }\n```\n\nNow just use the `browserify` command to build a bundle starting at `main.js`:\n\n```\n$ browserify main.js > bundle.js\n```\n\nAll of the modules that `main.js` needs are included in the `bundle.js` from a\nrecursive walk of the `require()` graph using\n[required](https://github.com/defunctzombie/node-required).\n\nTo use this bundle, just toss a `<script src=\"bundle.js\"></script>` into your\nhtml!\n\n# install\n\nWith [npm](https://www.npmjs.com/) do:\n\n```\nnpm install -g browserify\n```\n\n# usage\n\n```\nUsage: browserify [entry files] {OPTIONS}\n\nStandard Options:\n\n    --outfile, -o  Write the browserify bundle to this file.\n                   If unspecified, browserify prints to stdout.\n\n    --require, -r  A module name or file to bundle.require()\n                   Optionally use a colon separator to set the target.\n\n      --entry, -e  An entry point of your app\n\n     --ignore, -i  Replace a file with an empty stub. Files can be globs.\n\n    --exclude, -u  Omit a file from the output bundle. Files can be globs.\n\n   --external, -x  Reference a file from another bundle. Files can be globs.\n\n  --transform, -t  Use a transform module on top-level files.\n\n    --command, -c  Use a transform command on top-level files.\n\n  --standalone -s  Generate a UMD bundle for the supplied export name.\n                   This bundle works with other module systems and sets the name\n                   given as a window global if no module system is found.\n\n       --debug -d  Enable source maps that allow you to debug your files\n                   separately.\n\n       --help, -h  Show this message\n\nFor advanced options, type `browserify --help advanced`.\n\nSpecify a parameter.\n```\n\n```\nAdvanced Options:\n\n  --insert-globals, --ig, --fast    [default: false]\n\n    Skip detection and always insert definitions for process, global,\n    __filename, and __dirname.\n\n    benefit: faster builds\n    cost: extra bytes\n\n  --insert-global-vars, --igv\n\n    Comma-separated list of global variables to detect and define.\n    Default: __filename,__dirname,process,Buffer,global\n\n  --detect-globals, --dg            [default: true]\n\n    Detect the presence of process, global, __filename, and __dirname and define\n    these values when present.\n\n    benefit: npm modules more likely to work\n    cost: slower builds\n\n  --ignore-missing, --im            [default: false]\n\n    Ignore `require()` statements that don't resolve to anything.\n\n  --noparse=FILE\n\n    Don't parse FILE at all. This will make bundling much, much faster for giant\n    libs like jquery or threejs.\n\n  --no-builtins\n\n    Turn off builtins. This is handy when you want to run a bundle in node which\n    provides the core builtins.\n\n  --no-commondir\n\n    Turn off setting a commondir. This is useful if you want to preserve the\n    original paths that a bundle was generated with.\n\n  --no-bundle-external\n\n    Turn off bundling of all external modules. This is useful if you only want\n    to bundle your local files.\n\n  --bare\n\n    Alias for both --no-builtins, --no-commondir, and sets --insert-global-vars\n    to just \"__filename,__dirname\". This is handy if you want to run bundles in\n    node.\n\n  --no-browser-field, --no-bf\n\n    Turn off package.json browser field resolution. This is also handy if you\n    need to run a bundle in node.\n\n  --transform-key\n\n    Instead of the default package.json#browserify#transform field to list\n    all transforms to apply when running browserify, a custom field, like, e.g.\n    package.json#browserify#production or package.json#browserify#staging\n    can be used, by for example running:\n    * `browserify index.js --transform-key=production > bundle.js`\n    * `browserify index.js --transform-key=staging > bundle.js`\n\n  --node\n\n    Alias for --bare and --no-browser-field.\n\n  --full-paths\n\n    Turn off converting module ids into numerical indexes. This is useful for\n    preserving the original paths that a bundle was generated with.\n\n  --deps\n\n    Instead of standard bundle output, print the dependency array generated by\n    module-deps.\n\n  --no-dedupe\n\n    Turn off deduping.\n\n  --list\n\n    Print each file in the dependency graph. Useful for makefiles.\n\n  --extension=EXTENSION\n\n    Consider files with specified EXTENSION as modules, this option can used\n    multiple times.\n\n  --global-transform=MODULE, -g MODULE\n\n    Use a transform module on all files after any ordinary transforms have run.\n\n  --ignore-transform=MODULE, -it MODULE\n\n    Do not run certain transformations, even if specified elsewhere.\n\n  --plugin=MODULE, -p MODULE\n\n    Register MODULE as a plugin.\n\nPassing arguments to transforms and plugins:\n\n  For -t, -g, and -p, you may use subarg syntax to pass options to the\n  transforms or plugin function as the second parameter. For example:\n\n    -t [ foo -x 3 --beep ]\n\n  will call the `foo` transform for each applicable file by calling:\n\n    foo(file, { x: 3, beep: true })\n\n```\n\n# compatibility\n\nMany [npm](https://www.npmjs.com/) modules that don't do IO will just work after being\nbrowserified. Others take more work.\n\nMany node built-in modules have been wrapped to work in the browser, but only\nwhen you explicitly `require()` or use their functionality.\n\nWhen you `require()` any of these modules, you will get a browser-specific shim:\n\n* [assert](https://www.npmjs.com/package/assert)\n* [buffer](https://www.npmjs.com/package/buffer)\n* [console](https://www.npmjs.com/package/console-browserify)\n* [constants](https://www.npmjs.com/package/constants-browserify)\n* [crypto](https://www.npmjs.com/package/crypto-browserify)\n* [domain](https://www.npmjs.com/package/domain-browser)\n* [events](https://www.npmjs.com/package/events)\n* [http](https://www.npmjs.com/package/stream-http)\n* [https](https://www.npmjs.com/package/https-browserify)\n* [os](https://www.npmjs.com/package/os-browserify)\n* [path](https://www.npmjs.com/package/path-browserify)\n* [punycode](https://www.npmjs.com/package/punycode)\n* [querystring](https://www.npmjs.com/package/querystring-es3)\n* [stream](https://www.npmjs.com/package/stream-browserify)\n* [string_decoder](https://www.npmjs.com/package/string_decoder)\n* [timers](https://www.npmjs.com/package/timers-browserify)\n* [tty](https://www.npmjs.com/package/tty-browserify)\n* [url](https://www.npmjs.com/package/url)\n* [util](https://www.npmjs.com/package/util)\n* [vm](https://www.npmjs.com/package/vm-browserify)\n* [zlib](https://www.npmjs.com/package/browserify-zlib)\n\nAdditionally, if you use any of these variables, they\n[will be defined](https://github.com/browserify/insert-module-globals)\nin the bundled output in a browser-appropriate way:\n\n* [process](https://www.npmjs.com/package/process)\n* [Buffer](https://www.npmjs.com/package/buffer)\n* global - top-level scope object (window)\n* __filename - file path of the currently executing file\n* __dirname - directory path of the currently executing file\n\n# more examples\n\n## external requires\n\nYou can just as easily create a bundle that will export a `require()` function so\nyou can `require()` modules from another script tag. Here we'll create a\n`bundle.js` with the [through](https://www.npmjs.com/package/through)\nand [duplexer](https://www.npmjs.com/package/duplexer) modules.\n\n```\n$ browserify -r through -r duplexer -r ./my-file.js:my-module > bundle.js\n```\n\nThen in your page you can do:\n\n``` html\n<script src=\"bundle.js\"></script>\n<script>\n  var through = require('through');\n  var duplexer = require('duplexer');\n  var myModule = require('my-module');\n  /* ... */\n</script>\n```\n\n## external source maps\n\nIf you prefer the source maps be saved to a separate `.js.map` source map file, you may use\n[exorcist](https://github.com/thlorenz/exorcist) in order to achieve that. It's as simple as:\n\n```\n$ browserify main.js --debug | exorcist bundle.js.map > bundle.js\n```\n\nLearn about additional options [here](https://github.com/thlorenz/exorcist#usage).\n\n## multiple bundles\n\nIf browserify finds a `require`d function already defined in the page scope, it\nwill fall back to that function if it didn't find any matches in its own set of\nbundled modules.\n\nIn this way, you can use browserify to split up bundles among multiple pages to\nget the benefit of caching for shared, infrequently-changing modules, while\nstill being able to use `require()`. Just use a combination of `--external` and\n`--require` to factor out common dependencies.\n\nFor example, if a website with 2 pages, `beep.js`:\n\n``` js\nvar robot = require('./robot.js');\nconsole.log(robot('beep'));\n```\n\nand `boop.js`:\n\n``` js\nvar robot = require('./robot.js');\nconsole.log(robot('boop'));\n```\n\nboth depend on `robot.js`:\n\n``` js\nmodule.exports = function (s) { return s.toUpperCase() + '!' };\n```\n\n```\n$ browserify -r ./robot.js > static/common.js\n$ browserify -x ./robot.js beep.js > static/beep.js\n$ browserify -x ./robot.js boop.js > static/boop.js\n```\n\nThen on the beep page you can have:\n\n``` html\n<script src=\"common.js\"></script>\n<script src=\"beep.js\"></script>\n```\n\nwhile the boop page can have:\n\n``` html\n<script src=\"common.js\"></script>\n<script src=\"boop.js\"></script>\n```\n\nThis approach using `-r` and `-x` works fine for a small number of split assets,\nbut there are plugins for automatically factoring out components which are\ndescribed in the\n[partitioning section of the browserify handbook](https://github.com/browserify/browserify-handbook#partitioning).\n\n## api example\n\nYou can use the API directly too:\n\n``` js\nvar browserify = require('browserify');\nvar b = browserify();\nb.add('./browser/main.js');\nb.bundle().pipe(process.stdout);\n```\n\n# methods\n\n``` js\nvar browserify = require('browserify')\n```\n\n## `browserify([files] [, opts])`\n\nReturns a new browserify instance.\n\n<dl>\n<dt>\nfiles\n</dt>\n\n<dd>\nString, file object, or array of those types (they may be mixed) specifying entry file(s).\n</dd>\n\n<dt>\nopts\n</dt>\n\n<dd>\nObject.\n</dd>\n</dl>\n\n`files` and `opts` are both optional, but must be in the order shown if both are\npassed.\n\nEntry files may be passed in `files` and / or `opts.entries`.\n\nExternal requires may be specified in `opts.require`, accepting the same formats\nthat the `files` argument does.\n\nIf an entry file is a stream, its contents will be used. You should pass\n`opts.basedir` when using streaming files so that relative requires can be\nresolved.\n\n`opts.entries` has the same definition as `files`.\n\n`opts.noParse` is an array which will skip all require() and global parsing for\neach file in the array. Use this for giant libs like jquery or threejs that\ndon't have any requires or node-style globals but take forever to parse.\n\n`opts.transform` is an array of transform functions or modules names which will\ntransform the source code before the parsing.\n\n`opts.ignoreTransform` is an array of transformations that will not be run,\neven if specified elsewhere.\n\n`opts.plugin` is an array of plugin functions or module names to use. See the\nplugins section below for details.\n\n`opts.extensions` is an array of optional extra extensions for the module lookup\nmachinery to use when the extension has not been specified.\nBy default browserify considers only `.js` and `.json` files in such cases.\n\n`opts.basedir` is the directory that browserify starts bundling from for\nfilenames that start with `.`.\n\n`opts.paths` is an array of directories that browserify searches when looking\nfor modules which are not referenced using relative path. Can be absolute or\nrelative to `basedir`. Equivalent of setting `NODE_PATH` environmental variable\nwhen calling `browserify` command.\n\n`opts.commondir` sets the algorithm used to parse out the common paths. Use\n`false` to turn this off, otherwise it uses the\n[commondir](https://www.npmjs.com/package/commondir) module.\n\n`opts.fullPaths` disables converting module ids into numerical indexes. This is\nuseful for preserving the original paths that a bundle was generated with.\n\n`opts.builtins` sets the list of built-ins to use, which by default is set in\n`lib/builtins.js` in this distribution.\n\n`opts.bundleExternal` boolean option to set if external modules should be\nbundled. Defaults to true.\n\nWhen `opts.browserField` is false, the package.json browser field will be\nignored. When `opts.browserField` is set to a `string`, then a custom field name\ncan be used instead of the default `\"browser\"` field.\n\nWhen `opts.insertGlobals` is true, always insert `process`, `global`,\n`__filename`, and `__dirname` without analyzing the AST for faster builds but\nlarger output bundles. Default false.\n\nWhen `opts.detectGlobals` is true, scan all files for `process`, `global`,\n`__filename`, and `__dirname`, defining as necessary. With this option npm\nmodules are more likely to work but bundling takes longer. Default true.\n\nWhen `opts.ignoreMissing` is true, ignore `require()` statements that don't\nresolve to anything.\n\nWhen `opts.debug` is true, add a source map inline to the end of the bundle.\nThis makes debugging easier because you can see all the original files if\nyou are in a modern enough browser.\n\nWhen `opts.standalone` is a non-empty string, a standalone module is created\nwith that name and a [umd](https://github.com/forbeslindesay/umd) wrapper.\nYou can use namespaces in the standalone global export using a `.` in the string\nname as a separator, for example `'A.B.C'`. The global export will be [sanitized\nand camel cased](https://github.com/ForbesLindesay/umd#name-casing-and-characters).\n\nNote that in standalone mode the `require()` calls from the original source will\nstill be around, which may trip up AMD loaders scanning for `require()` calls.\nYou can remove these calls with\n[derequire](https://www.npmjs.com/package/derequire):\n\n```\n$ npm install -g derequire\n$ browserify main.js --standalone Foo | derequire > bundle.js\n```\n\n`opts.insertGlobalVars` will be passed to\n[insert-module-globals](https://www.npmjs.com/package/insert-module-globals)\nas the `opts.vars` parameter.\n\n`opts.externalRequireName` defaults to `'require'` in `expose` mode but you can\nuse another name.\n\n`opts.bare` creates a bundle that does not include Node builtins, and does not\nreplace global Node variables except for `__dirname` and `__filename`.\n\n`opts.node` creates a bundle that runs in Node and does not use the browser\nversions of dependencies. Same as passing `{ bare: true, browserField: false }`.\n\nNote that if files do not contain javascript source code then you also need to\nspecify a corresponding transform for them.\n\nAll other options are forwarded along to\n[module-deps](https://www.npmjs.com/package/module-deps)\nand [browser-pack](https://www.npmjs.com/package/browser-pack) directly.\n\n## b.add(file, opts)\n\nAdd an entry file from `file` that will be executed when the bundle loads.\n\nIf `file` is an array, each item in `file` will be added as an entry file.\n\n## b.require(file, opts)\n\nMake `file` available from outside the bundle with `require(file)`.\n\nThe `file` param is anything that can be resolved by `require.resolve()`,\nincluding files from `node_modules`. Like with `require.resolve()`, you must\nprefix `file` with `./` to require a local file (not in `node_modules`).\n\n`file` can also be a stream, but you should also use `opts.basedir` so that\nrelative requires will be resolvable.\n\nIf `file` is an array, each item in `file` will be required.\nIn `file` array form, you can use a string or object for each item. Object items\nshould have a `file` property and the rest of the parameters will be used for\nthe `opts`.\n\nUse the `expose` property of opts to specify a custom dependency name.\n`require('./vendor/angular/angular.js', {expose: 'angular'})` enables `require('angular')`\n\n## b.bundle(cb)\n\nBundle the files and their dependencies into a single javascript file.\n\nReturn a readable stream with the javascript file contents or\noptionally specify a `cb(err, buf)` to get the buffered results.\n\n## b.external(file)\n\nPrevent `file` from being loaded into the current bundle, instead referencing\nfrom another bundle.\n\nIf `file` is an array, each item in `file` will be externalized.\n\nIf `file` is another bundle, that bundle's contents will be read and excluded\nfrom the current bundle as the bundle in `file` gets bundled.\n\n## b.ignore(file)\n\nPrevent the module name or file at `file` from showing up in the output bundle.\n\nIf `file` is an array, each item in `file` will be ignored.\n\nInstead you will get a file with `module.exports = {}`.\n\n## b.exclude(file)\n\nPrevent the module name or file at `file` from showing up in the output bundle.\n\nIf `file` is an array, each item in `file` will be excluded.\n\nIf your code tries to `require()` that file it will throw unless you've provided\nanother mechanism for loading it.\n\n## b.transform(tr, opts={})\n\nTransform source code before parsing it for `require()` calls with the transform\nfunction or module name `tr`.\n\nIf `tr` is a function, it will be called with `tr(file)` and it should return a\n[through-stream](https://github.com/substack/stream-handbook#through)\nthat takes the raw file contents and produces the transformed source.\n\nIf `tr` is a string, it should be a module name or file path of a\n[transform module](https://github.com/browserify/module-deps#transforms)\nwith a signature of:\n\n``` js\nvar through = require('through');\nmodule.exports = function (file) { return through() };\n```\n\nYou don't need to necessarily use the\n[through](https://www.npmjs.com/package/through) module.\nBrowserify is compatible with the newer, more verbose\n[Transform streams](http://nodejs.org/api/stream.html#stream_class_stream_transform_1)\nbuilt into Node v0.10.\n\nHere's how you might compile coffee script on the fly using `.transform()`:\n\n``` js\nvar coffee = require('coffee-script');\nvar through = require('through');\n\nb.transform(function (file) {\n    var data = '';\n    return through(write, end);\n\n    function write (buf) { data += buf }\n    function end () {\n        this.queue(coffee.compile(data));\n        this.queue(null);\n    }\n});\n```\n\nNote that on the command-line with the `-c` flag you can just do:\n\n```\n$ browserify -c 'coffee -sc' main.coffee > bundle.js\n```\n\nOr better still, use the [coffeeify](https://github.com/jnordberg/coffeeify)\nmodule:\n\n```\n$ npm install coffeeify\n$ browserify -t coffeeify main.coffee > bundle.js\n```\n\nIf `opts.global` is `true`, the transform will operate on ALL files, despite\nwhether they exist up a level in a `node_modules/` directory. Use global\ntransforms cautiously and sparingly, since most of the time an ordinary\ntransform will suffice. You can also not configure global transforms in a\n`package.json` like you can with ordinary transforms.\n\nGlobal transforms always run after any ordinary transforms have run.\n\nTransforms may obtain options from the command-line with\n[subarg](https://www.npmjs.com/package/subarg) syntax:\n\n```\n$ browserify -t [ foo --bar=555 ] main.js\n```\n\nor from the api:\n\n```\nb.transform('foo', { bar: 555 })\n```\n\nIn both cases, these options are provided as the second argument to the\ntransform function:\n\n```\nmodule.exports = function (file, opts) { /* opts.bar === 555 */ }\n```\n\nOptions sent to the browserify constructor are also provided under\n`opts._flags`. These browserify options are sometimes required if your transform\nneeds to do something different when browserify is run in debug mode, for\nexample.\n\n## b.plugin(plugin, opts)\n\nRegister a `plugin` with `opts`. Plugins can be a string module name or a\nfunction the same as transforms.\n\n`plugin(b, opts)` is called with the browserify instance `b`.\n\nFor more information, consult the plugins section below.\n\n## b.pipeline\n\nThere is an internal\n[labeled-stream-splicer](https://www.npmjs.com/package/labeled-stream-splicer)\npipeline with these labels:\n\n* `'record'` - save inputs to play back later on subsequent `bundle()` calls\n* `'deps'` - [module-deps](https://www.npmjs.com/package/module-deps)\n* `'json'` - adds `module.exports=` to the beginning of json files\n* `'unbom'` - remove byte-order markers\n* `'unshebang'` - remove #! labels on the first line\n* `'syntax'` - check for syntax errors\n* `'sort'` - sort the dependencies for deterministic bundles\n* `'dedupe'` - remove duplicate source contents\n* `'label'` - apply integer labels to files\n* `'emit-deps'` - emit `'dep'` event\n* `'debug'` - apply source maps\n* `'pack'` - [browser-pack](https://www.npmjs.com/package/browser-pack)\n* `'wrap'` - apply final wrapping, `require=` and a newline and semicolon\n\nYou can call `b.pipeline.get()` with a label name to get a handle on a stream pipeline\nthat you can `push()`, `unshift()`, or `splice()` to insert your own transform\nstreams.\n\n## b.reset(opts)\n\nReset the pipeline back to a normal state. This function is called automatically\nwhen `bundle()` is called multiple times.\n\nThis function triggers a 'reset' event.\n\n# package.json\n\nbrowserify uses the `package.json` in its module resolution algorithm, just like\nnode. If there is a `\"main\"` field, browserify will start resolving the package\nat that point. If there is no `\"main\"` field, browserify will look for an\n`\"index.js\"` file in the module root directory. Here are some more\nsophisticated things you can do in the package.json:\n\n## browser field\n\nThere is a special \"[browser](https://github.com/defunctzombie/package-browser-field-spec)\" field you can\nset in your package.json on a per-module basis to override file resolution for\nbrowser-specific versions of files.\n\nFor example, if you want to have a browser-specific module entry point for your\n`\"main\"` field you can just set the `\"browser\"` field to a string:\n\n``` json\n\"browser\": \"./browser.js\"\n```\n\nor you can have overrides on a per-file basis:\n\n``` json\n\"browser\": {\n  \"fs\": \"level-fs\",\n  \"./lib/ops.js\": \"./browser/opts.js\"\n}\n```\n\nNote that the browser field only applies to files in the local module, and like\ntransforms, it doesn't apply into `node_modules` directories.\n\n## browserify.transform\n\nYou can specify source transforms in the package.json in the\n`browserify.transform` field. There is more information about how source\ntransforms work in package.json on the\n[module-deps readme](https://github.com/browserify/module-deps#transforms).\n\nFor example, if your module requires [brfs](https://www.npmjs.com/package/brfs), you\ncan add\n\n``` json\n\"browserify\": { \"transform\": [ \"brfs\" ] }\n```\n\nto your package.json. Now when somebody `require()`s your module, brfs will\nautomatically be applied to the files in your module without explicit\nintervention by the person using your module. Make sure to add transforms to\nyour package.json dependencies field.\n\n# events\n\n## b.on('file', function (file, id, parent) {})\n## b.pipeline.on('file', function (file, id, parent) {})\n\nWhen a file is resolved for the bundle, the bundle emits a `'file'` event with\nthe full `file` path, the `id` string passed to `require()`, and the `parent`\nobject used by\n[browser-resolve](https://github.com/defunctzombie/node-browser-resolve).\n\nYou could use the `file` event to implement a file watcher to regenerate bundles\nwhen files change.\n\n## b.on('package', function (pkg) {})\n## b.pipeline.on('package', function (pkg) {})\n\nWhen a package file is read, this event fires with the contents. The package\ndirectory is available at `pkg.__dirname`.\n\n## b.on('bundle', function (bundle) {})\n\nWhen `.bundle()` is called, this event fires with the `bundle` output stream.\n\n## b.on('reset', function () {})\n\nWhen the `.reset()` method is called or implicitly called by another call to\n`.bundle()`, this event fires.\n\n## b.on('transform', function (tr, file) {})\n## b.pipeline.on('transform', function (tr, file) {})\n\nWhen a transform is applied to a file, the `'transform'` event fires on the\nbundle stream with the transform stream `tr` and the `file` that the transform\nis being applied to.\n\n# plugins\n\nFor some more advanced use-cases, a transform is not sufficiently extensible.\nPlugins are modules that take the bundle instance as their first parameter and\nan option hash as their second.\n\nPlugins can be used to do perform some fancy features that transforms can't do.\nFor example, [factor-bundle](https://www.npmjs.com/package/factor-bundle) is a\nplugin that can factor out common dependencies from multiple entry-points into a\ncommon bundle. Use plugins with `-p` and pass options to plugins with\n[subarg](https://www.npmjs.com/package/subarg) syntax:\n\n```\nbrowserify x.js y.js -p [ factor-bundle -o bundle/x.js -o bundle/y.js ] \\\n  > bundle/common.js\n```\n\nFor a list of plugins, consult the\n[browserify-plugin tag](https://www.npmjs.com/browse/keyword/browserify-plugin)\non npm.\n\n# list of source transforms\n\nThere is a [wiki page that lists the known browserify\ntransforms](https://github.com/browserify/browserify/wiki/list-of-transforms).\n\nIf you write a transform, make sure to add your transform to that wiki page and\nadd a package.json keyword of `browserify-transform` so that\n[people can browse for all the browserify\ntransforms](https://www.npmjs.com/browse/keyword/browserify-transform) on npmjs.org.\n\n# third-party tools\n\nThere is a [wiki page that lists the known browserify\ntools](https://github.com/browserify/browserify/wiki/browserify-tools).\n\nIf you write a tool, make sure to add it to that wiki page and\nadd a package.json keyword of `browserify-tool` so that\n[people can browse for all the browserify\ntools](https://www.npmjs.com/browse/keyword/browserify-tool) on npmjs.org.\n\n# changelog\n\nReleases are documented in\n[changelog.markdown](changelog.markdown) and on the\n[browserify twitter feed](https://twitter.com/browserify).\n\n# license\n\n[MIT](./LICENSE)\n\n![browserify!](./assets/browserify.png)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 159105}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 706255}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3692292}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10566033}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 19616736}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 37159068}], "dependentsCount": 2525, "starsCount": 928}, "github": {"homepage": "http://browserify.org/", "starsCount": 13259, "forksCount": 1161, "subscribersCount": 310, "issues": {"count": 1949, "openCount": 349, "distribution": {"3600": 188, "10800": 108, "32400": 113, "97200": 131, "291600": 123, "874800": 161, "2624400": 167, "7873200": 167, "23619600": 216, "70858800": 206, "212576400": 369}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 1573}, {"username": "goto-bus-stop", "commitsCount": 43}, {"username": "zertosh", "commitsCount": 42}, {"username": "feross", "commitsCount": 28}, {"username": "domenic", "commitsCount": 15}, {"username": "ForbesLindesay", "commitsCount": 13}, {"username": "jmm", "commitsCount": 12}, {"username": "andreypopp", "commitsCount": 11}, {"username": "thlorenz", "commitsCount": 10}, {"username": "kumavis", "commitsCount": 8}, {"username": "defunctzombie", "commitsCount": 7}, {"username": "terinjokes", "commitsCount": 6}, {"username": "TehShrike", "commitsCount": 5}, {"username": "guybrush", "commitsCount": 5}, {"username": "hughsk", "commitsCount": 5}, {"username": "ljharb", "commitsCount": 5}, {"username": "AvianFlu", "commitsCount": 4}, {"username": "calvinmetcalf", "commitsCount": 4}, {"username": "erithmetic", "commitsCount": 4}, {"username": "jacwright", "commitsCount": 4}, {"username": "jhnns", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "1602", "commitsCount": 3}, {"username": "ElNounch", "commitsCount": 3}, {"username": "Gozala", "commitsCount": 3}, {"username": "Raynos", "commitsCount": 3}, {"username": "alexstrat", "commitsCount": 3}, {"username": "apaleslimghost", "commitsCount": 3}, {"username": "chapel", "commitsCount": 3}, {"username": "christophemacabiau", "commitsCount": 3}, {"username": "devongovett", "commitsCount": 3}, {"username": "jaredhanson", "commitsCount": 3}, {"username": "parroit", "commitsCount": 3}, {"username": "pyrotechnick", "commitsCount": 3}, {"username": "ryysud", "commitsCount": 3}, {"username": "Abhinay077", "commitsCount": 2}, {"username": "KylePDavis", "commitsCount": 2}, {"username": "MellowMelon", "commitsCount": 2}, {"username": "TooTallNate", "commitsCount": 2}, {"username": "Volune", "commitsCount": 2}, {"username": "agilgur5", "commitsCount": 2}, {"username": "al-k21", "commitsCount": 2}, {"username": "bakape", "commitsCount": 2}, {"username": "bcomnes", "commitsCount": 2}, {"username": "codelahoma", "commitsCount": 2}, {"username": "connrs", "commitsCount": 2}, {"username": "cymen", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "garrows", "commitsCount": 2}, {"username": "indutny", "commitsCount": 2}, {"username": "jazzzz", "commitsCount": 2}, {"username": "jcppman", "commitsCount": 2}, {"username": "jessetane", "commitsCount": 2}, {"username": "jgoz", "commitsCount": 2}, {"username": "johnkpaul", "commitsCount": 2}, {"username": "jryans", "commitsCount": 2}, {"username": "linoleum-js", "commitsCount": 2}, {"username": "mantoni", "commitsCount": 2}, {"username": "mattdesl", "commitsCount": 2}, {"username": "maxtaco", "commitsCount": 2}, {"username": "mwiencek", "commitsCount": 2}, {"username": "noahmedling", "commitsCount": 2}, {"username": "spmason", "commitsCount": 2}, {"username": "tilgovi", "commitsCount": 2}, {"username": "toots", "commitsCount": 2}, {"username": "wvanbergen", "commitsCount": 2}, {"username": "yoshuawuyts", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 1}, {"username": "ReadmeCritic", "commitsCount": 1}, {"username": "Shingyx", "commitsCount": 1}, {"username": "amiller-gh", "commitsCount": 1}, {"username": "bendrucker", "commitsCount": 1}, {"username": "blahah", "commitsCount": 1}, {"username": "chadhietala", "commitsCount": 1}, {"username": "chrisirhc", "commitsCount": 1}, {"username": "dignifiedquire", "commitsCount": 1}, {"username": "dominykas", "commitsCount": 1}, {"username": "emilbayes", "commitsCount": 1}, {"username": "faiq", "commitsCount": 1}, {"username": "farzonl", "commitsCount": 1}, {"username": "ganemone", "commitsCount": 1}, {"username": "idlewinn", "commitsCount": 1}, {"username": "jhiesey", "commitsCount": 1}, {"username": "jscissr", "commitsCount": 1}, {"username": "julian-maughan", "commitsCount": 1}, {"username": "kintel", "commitsCount": 1}, {"username": "kt3k", "commitsCount": 1}, {"username": "laurynasl-wix", "commitsCount": 1}, {"username": "mcollina", "commitsCount": 1}, {"username": "mjhm", "commitsCount": 1}, {"username": "mnichols", "commitsCount": 1}, {"username": "mohd-akram", "commitsCount": 1}, {"username": "natevw", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "serapath", "commitsCount": 1}, {"username": "steve-taylor", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "wogsland", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 25}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 26838, "testsSize": 144617, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/browserify/browserify/master.svg", "service": "https://api.travis-ci.org/browserify/browserify.svg?branch=master", "shields": "https://img.shields.io/travis/browserify/browserify/master.svg", "content": "https://img.shields.io/travis/browserify/browserify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "outdatedDependencies": {"assert": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "events": {"required": "^2.0.0", "stable": "3.1.0", "latest": "3.1.0"}, "path-browserify": {"required": "~0.0.0", "stable": "1.0.1", "latest": "1.0.1"}, "util": {"required": "~0.10.1", "stable": "0.12.3", "latest": "0.12.3"}, "stream-browserify": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "concat-stream": {"required": "^1.6.0", "stable": "2.0.0", "latest": "2.0.0"}, "punycode": {"required": "^1.3.2", "stable": "2.1.1", "latest": "2.1.1"}, "through2": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "timers-browserify": {"required": "^1.0.1", "stable": "2.0.11", "latest": "2.0.11"}, "readable-stream": {"required": "^2.0.2", "stable": "3.6.0", "latest": "3.6.0"}, "buffer": {"required": "~5.2.1", "stable": "5.6.0", "latest": "5.6.0"}, "domain-browser": {"required": "^1.2.0", "stable": "4.11.0", "latest": "4.11.0"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.725, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 15758, "downloadsCount": 3522011, "downloadsAcceleration": 7111.7337899543345, "dependentsCount": 2525}, "maintenance": {"releasesFrequency": 0.4839041095890412, "commitsFrequency": 0.4976712328767124, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7120587580377183, "detail": {"quality": 0.860378062822859, "popularity": 0.6492953400193899, "maintenance": 0.6476913433830691}}}}, {"babel-polyfill": {"analyzedAt": "2020-06-27T01:38:32.999Z", "collected": {"metadata": {"name": "babel-polyfill", "scope": "unscoped", "version": "6.26.0", "description": "Provides polyfills necessary for a full ES2015+ environment", "date": "2017-08-16T15:54:12.145Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-polyfill", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-runtime": "^6.26.0", "core-js": "^2.5.0", "regenerator-runtime": "^0.10.5"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-config-internal": "link:./eslint/babel-eslint-config-internal", "@babel/eslint-parser": "link:./eslint/babel-eslint-parser", "@babel/eslint-plugin-development": "link:./eslint/babel-eslint-plugin-development", "@babel/eslint-plugin-development-internal": "link:./eslint/babel-eslint-plugin-development-internal", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-polyfill"}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 428850}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 2168035}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 11275992}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 35196181}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 69397406}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 136707603}], "dependentsCount": 5495, "starsCount": 57}, "github": {"homepage": "https://babel.dev", "starsCount": 36882, "forksCount": 4344, "subscribersCount": 865, "issues": {"count": 11664, "openCount": 794, "distribution": {"3600": 2464, "10800": 920, "32400": 1070, "97200": 1243, "291600": 1063, "874800": 1008, "2624400": 843, "7873200": 838, "23619600": 850, "70858800": 1090, "212576400": 275}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 481}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 200}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 32}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 151}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 381}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 800}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8026, "testsSize": 12417762, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"regenerator-runtime": {"required": "^0.10.5", "stable": "0.13.5", "latest": "0.13.5"}, "core-js": {"required": "^2.5.0", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 42247, "downloadsCount": 11732060.333333334, "downloadsAcceleration": 3081.197070015216, "dependentsCount": 5495}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23743811080316723}}, "score": {"final": 0.7400363712034239, "detail": {"quality": 0.9252009260476962, "popularity": 0.7529479911391701, "maintenance": 0.5684122756868732}}}}, {"bluebird": {"analyzedAt": "2020-06-26T20:54:50.126Z", "collected": {"metadata": {"name": "bluebird", "scope": "unscoped", "version": "3.7.2", "description": "Full featured Promises/A+ implementation with exceptionally good performance", "keywords": ["promise", "performance", "promises", "promises-a", "promises-aplus", "async", "await", "deferred", "deferreds", "future", "flow control", "dsl", "fluent interface"], "date": "2019-11-28T22:55:40.312Z", "author": {"name": "Petka Antonov", "email": "petka_antonov@hotmail.com", "url": "http://github.com/petkaantonov/", "username": "esailija"}, "publisher": {"username": "esailija", "email": "petka_antonov@hotmail.com"}, "maintainers": [{"username": "esailija", "email": "petka_antonov@hotmail.com"}], "repository": {"type": "git", "url": "git://github.com/petkaantonov/bluebird.git"}, "links": {"npm": "https://www.npmjs.com/package/bluebird", "homepage": "https://github.com/petkaantonov/bluebird", "repository": "https://github.com/petkaantonov/bluebird", "bugs": "http://github.com/petkaantonov/bluebird/issues"}, "license": "MIT", "devDependencies": {"acorn": "^6.0.2", "acorn-walk": "^6.1.0", "baconjs": "^0.7.43", "bluebird": "^2.9.2", "body-parser": "^1.10.2", "browserify": "^8.1.1", "cli-table": "~0.3.1", "co": "^4.2.0", "cross-spawn": "^0.2.3", "glob": "^4.3.2", "grunt-saucelabs": "~8.4.1", "highland": "^2.3.0", "istanbul": "^0.3.5", "jshint": "^2.6.0", "jshint-stylish": "~0.2.0", "kefir": "^2.4.1", "mkdirp": "~0.5.0", "mocha": "~2.1", "open": "~0.0.5", "optimist": "~0.6.1", "rimraf": "~2.2.6", "rx": "^2.3.25", "serve-static": "^1.7.1", "sinon": "~1.7.3", "uglify-js": "~2.4.16"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"http://promisesaplus.com/\">\n    <img src=\"http://promisesaplus.com/assets/logo-small.png\" alt=\"Promises/A+ logo\"\n         title=\"Promises/A+ 1.1 compliant\" align=\"right\" />\n</a>\n\n\n[![Build Status](https://travis-ci.org/petkaantonov/bluebird.svg?branch=master)](https://travis-ci.org/petkaantonov/bluebird)\n[![coverage-98%](https://img.shields.io/badge/coverage-98%25-brightgreen.svg?style=flat)](http://petkaantonov.github.io/bluebird/coverage/debug/index.html)\n\n**Got a question?** Join us on [stackoverflow](http://stackoverflow.com/questions/tagged/bluebird), the [mailing list](https://groups.google.com/forum/#!forum/bluebird-js) or chat on [IRC](https://webchat.freenode.net/?channels=#promises)\n\n# Introduction\n\nBluebird is a fully featured promise library with focus on innovative features and performance\n\nSee the [**bluebird website**](http://bluebirdjs.com/docs/getting-started.html) for further documentation, references and instructions. See the [**API reference**](http://bluebirdjs.com/docs/api-reference.html) here.\n\nFor bluebird 2.x documentation and files, see the [2.x tree](https://github.com/petkaantonov/bluebird/tree/2.x).\n\n### Note \n\nPromises in Node.js 10 are significantly faster than before. Bluebird still includes a lot of features like cancellation, iteration methods and warnings that native promises don't. If you are using Bluebird for performance rather than for those - please consider giving native promises a shot and running the benchmarks yourself.\n\n# Questions and issues\n\nThe [github issue tracker](https://github.com/petkaantonov/bluebird/issues) is **_only_** for bug reports and feature requests. Anything else, such as questions for help in using the library, should be posted in [StackOverflow](http://stackoverflow.com/questions/tagged/bluebird) under tags `promise` and `bluebird`.\n\n\n\n## Thanks\n\nThanks to BrowserStack for providing us with a free account which lets us support old browsers like IE8. \n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2019 Petka Antonov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3366092}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 14938993}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 77276652}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 233282006}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 454655816}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 833362474}], "dependentsCount": 19081, "starsCount": 598}, "github": {"homepage": "http://bluebirdjs.com", "starsCount": 19149, "forksCount": 2347, "subscribersCount": 370, "issues": {"count": 1641, "openCount": 98, "distribution": {"3600": 327, "10800": 163, "32400": 166, "97200": 196, "291600": 128, "874800": 134, "2624400": 151, "7873200": 142, "23619600": 105, "70858800": 57, "212576400": 72}, "isDisabled": false}, "contributors": [{"username": "petkaantonov", "commitsCount": 1463}, {"username": "benjamingr", "commitsCount": 70}, {"username": "spion", "commitsCount": 24}, {"username": "calvinmetcalf", "commitsCount": 10}, {"username": "overlookmotel", "commitsCount": 6}, {"username": "sukima", "commitsCount": 6}, {"username": "alubbe", "commitsCount": 4}, {"username": "hvrauhal", "commitsCount": 4}, {"username": "lextiz", "commitsCount": 4}, {"username": "Page-", "commitsCount": 3}, {"username": "PatrickJS", "commitsCount": 3}, {"username": "bjouhier", "commitsCount": 3}, {"username": "lddubeau", "commitsCount": 3}, {"username": "lvivski", "commitsCount": 3}, {"username": "markstos", "commitsCount": 3}, {"username": "nornagon", "commitsCount": 3}, {"username": "oliversalzburg", "commitsCount": 3}, {"username": "strawbrary", "commitsCount": 3}, {"username": "tgriesser", "commitsCount": 3}, {"username": "xaka", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "JonAbrams", "commitsCount": 2}, {"username": "LudwikJaniuk", "commitsCount": 2}, {"username": "Retsam", "commitsCount": 2}, {"username": "cos", "commitsCount": 2}, {"username": "cscott", "commitsCount": 2}, {"username": "fasterthanlime", "commitsCount": 2}, {"username": "finnigantime", "commitsCount": 2}, {"username": "floatdrop", "commitsCount": 2}, {"username": "frosas", "commitsCount": 2}, {"username": "grncdr", "commitsCount": 2}, {"username": "iarna", "commitsCount": 2}, {"username": "jasonmerino", "commitsCount": 2}, {"username": "jghaines", "commitsCount": 2}, {"username": "jmm", "commitsCount": 2}, {"username": "jonasi", "commitsCount": 2}, {"username": "kevinoid", "commitsCount": 2}, {"username": "marchant", "commitsCount": 2}, {"username": "mgenware", "commitsCount": 2}, {"username": "mhamann", "commitsCount": 2}, {"username": "mk-pmb", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "stites", "commitsCount": 2}, {"username": "vitaly-t", "commitsCount": 2}, {"username": "vladimirkosmala", "commitsCount": 2}, {"username": "wavded", "commitsCount": 2}, {"username": "wgottschalk", "commitsCount": 2}, {"username": "yonjah", "commitsCount": 2}, {"username": "Ajido", "commitsCount": 1}, {"username": "AngryPidgeon", "commitsCount": 1}, {"username": "BlueHatbRit", "commitsCount": 1}, {"username": "DavidTPate", "commitsCount": 1}, {"username": "Elvis-Sarfo", "commitsCount": 1}, {"username": "Ginden", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "LosBunkos", "commitsCount": 1}, {"username": "MylesBorins", "commitsCount": 1}, {"username": "Piccirello", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "SMUsamaShah", "commitsCount": 1}, {"username": "Sebmaster", "commitsCount": 1}, {"username": "Shingyx", "commitsCount": 1}, {"username": "a8568730", "commitsCount": 1}, {"username": "acinader", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "bernard-lin", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "charlie-s", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "elyobo", "commitsCount": 1}, {"username": "felipefcm", "commitsCount": 1}, {"username": "gabegorelick", "commitsCount": 1}, {"username": "gef756", "commitsCount": 1}, {"username": "geniusjam", "commitsCount": 1}, {"username": "gricey432", "commitsCount": 1}, {"username": "josephlin55555", "commitsCount": 1}, {"username": "kjnsn", "commitsCount": 1}, {"username": "marktinsley", "commitsCount": 1}, {"username": "miteshvmehta", "commitsCount": 1}, {"username": "mlostekk", "commitsCount": 1}, {"username": "mrbar42", "commitsCount": 1}, {"username": "myshov", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "ramiloif", "commitsCount": 1}, {"username": "renewooller", "commitsCount": 1}, {"username": "rgeraldporter", "commitsCount": 1}, {"username": "ricksbrown", "commitsCount": 1}, {"username": "rmariuzzo", "commitsCount": 1}, {"username": "ry8806", "commitsCount": 1}, {"username": "sdbedi", "commitsCount": 1}, {"username": "skyline-123", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "thechutrain", "commitsCount": 1}, {"username": "themez", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "timlesallen", "commitsCount": 1}, {"username": "watson", "commitsCount": 1}, {"username": "worldsense-tms", "commitsCount": 1}, {"username": "yakovmeister", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 14}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3058, "testsSize": 959013, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/petkaantonov/bluebird.svg?branch=master", "service": "https://api.travis-ci.org/petkaantonov/bluebird.svg?branch=master", "shields": "https://img.shields.io/travis/petkaantonov/bluebird/master.svg", "content": "https://img.shields.io/travis/petkaantonov/bluebird/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 22564, "downloadsCount": 77760668.66666667, "downloadsAcceleration": 133846.08097412472, "dependentsCount": 19081}, "maintenance": {"releasesFrequency": 0.2958904109589041, "commitsFrequency": 0.7465068493150685, "openIssues": 1, "issuesDistribution": 0.2349851599576661}}, "score": {"final": 0.8950128738471197, "detail": {"quality": 0.9651362625005069, "popularity": 0.914857402960982, "maintenance": 0.8150625830303542}}}}, {"babel-register": {"analyzedAt": "2020-06-14T11:45:27.629Z", "collected": {"metadata": {"name": "babel-register", "scope": "unscoped", "version": "6.26.0", "description": "babel require hook", "date": "2017-08-16T15:54:23.130Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-register", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-core": "^6.26.0", "babel-runtime": "^6.26.0", "core-js": "^2.5.0", "home-or-tmp": "^2.0.0", "lodash": "^4.17.4", "mkdirp": "^0.5.1", "source-map-support": "^0.4.15"}, "devDependencies": {"decache": "^4.1.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/v2/annotated-source/register.html).\n\n## Install\n\n```sh\nnpm install babel-register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"babel-register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`\nand `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"babel-register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: false\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"babel-register\")({\n  // Optional ignore regex - if any filenames **do** match this regex then they\n  // aren't compiled.\n  ignore: /regex/,\n\n  // Ignore can also be specified as a function.\n  ignore: function(filename) {\n    if (filename === \"/path/to/es6-file.js\") {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of .es6, `.es`, `.jsx`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\"],\n\n  // Setting this to false will disable the cache.\n  cache: true\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `babel-node` and `babel-register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 120866}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2766789}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11750855}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 38161579}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 73678217}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 159575610}], "dependentsCount": 1717, "starsCount": 39}, "github": {"homepage": "https://babel.dev", "starsCount": 36790, "forksCount": 4312, "subscribersCount": 867, "issues": {"count": 11637, "openCount": 793, "distribution": {"3600": 2464, "10800": 918, "32400": 1067, "97200": 1241, "291600": 1061, "874800": 1011, "2624400": 847, "7873200": 819, "23619600": 846, "70858800": 1092, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 157}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 399}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 792}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12333901, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "home-or-tmp": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "source-map-support": {"required": "^0.4.15", "stable": "0.5.19", "latest": "0.5.19"}, "core-js": {"required": "^2.5.0", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 42107, "downloadsCount": 12720526.333333334, "downloadsAcceleration": -18342.07741628615, "dependentsCount": 1717}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23994129349371512}}, "score": {"final": 0.6760295608104322, "detail": {"quality": 0.8275530770138868, "popularity": 0.6519600013030945, "maintenance": 0.5702218207148089}}}}, {"should": {"analyzedAt": "2020-06-28T09:09:48.007Z", "collected": {"metadata": {"name": "should", "scope": "unscoped", "version": "13.2.3", "description": "test framework agnostic BDD-style assertions", "keywords": ["test", "bdd", "assert", "should"], "date": "2018-07-30T13:57:31.472Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "btd", "email": "bardadymchik@gmail.com"}, "maintainers": [{"username": "btd", "email": "bardadymchik@gmail.com"}, {"username": "gjohnson", "email": "gjj391@gmail.com"}, {"username": "travisjeffery", "email": "tj@travisjeffery.com"}], "repository": {"type": "git", "url": "git+https://github.com/shouldjs/should.js.git"}, "links": {"npm": "https://www.npmjs.com/package/should", "homepage": "https://github.com/shouldjs/should.js", "repository": "https://github.com/shouldjs/should.js", "bugs": "https://github.com/shouldjs/should.js/issues"}, "license": "MIT", "dependencies": {"should-equal": "^2.0.0", "should-format": "^3.0.3", "should-type": "^1.4.0", "should-type-adaptors": "^1.0.1", "should-util": "^1.0.0"}, "devDependencies": {"bluebird": "^3.5.1", "eslint": "^3.19.0", "eslint-config-shouldjs": "^1.0.0", "mocha": "^4.0.1", "mocha-better-spec-reporter": "latest", "prettier": "^1.7.4", "rollup": "^0.53.0", "rollup-plugin-node-resolve": "^3.0.0", "tslint": "^5.8.0", "typescript": "^2.5.3", "zuul": "latest"}, "releases": [{"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2020-03-30T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2019-12-31T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2019-06-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2018-06-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# should.js\n\n[![Join the chat at https://gitter.im/shouldjs/should.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/shouldjs/should.js)\n\n[![Build Status](https://travis-ci.org/shouldjs/should.js.svg?branch=master)](https://travis-ci.org/shouldjs/should.js)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/shouldjs.svg)](https://saucelabs.com/u/shouldjs)\n\n_should_ is an expressive, readable, framework-agnostic assertion library. The main goals of this library are __to be expressive__ and __to be helpful__. It keeps your test code clean, and your error messages helpful.\n\nBy default (when you `require('should')`) _should_ extends the `Object.prototype` with a single non-enumerable getter that allows you to express how that object should behave. It also returns itself when required with `require`.\n\nIt is also possible to use should.js without getter (it will not even try to extend Object.prototype), just `require('should/as-function')`. Or if you already use version that auto add getter, you can call `.noConflict` function.\n\n**Results of `(something).should` getter and `should(something)` in most situations are the same**\n\n### Upgrading instructions\n\nPlease check [wiki page](https://github.com/shouldjs/should.js/wiki/Breaking-changes) for upgrading instructions.\n\n### FAQ\n\nYou can take look in [FAQ](https://github.com/shouldjs/should.js/wiki/FAQ).\n\n## Example\n```javascript\nvar should = require('should');\n\nvar user = {\n    name: 'tj'\n  , pets: ['tobi', 'loki', 'jane', 'bandit']\n};\n\nuser.should.have.property('name', 'tj');\nuser.should.have.property('pets').with.lengthOf(4);\n\n// If the object was created with Object.create(null)\n// then it doesn't inherit `Object.prototype`, so it will not have `.should` getter\n// so you can do:\nshould(user).have.property('name', 'tj');\n\n// also you can test in that way for null's\nshould(null).not.be.ok();\n\nsomeAsyncTask(foo, function(err, result){\n  should.not.exist(err);\n  should.exist(result);\n  result.bar.should.equal(foo);\n});\n```\n## To begin\n\n 1. Install it:\n\n    ```bash\n    $ npm install should --save-dev\n    ```\n\n 2. Require it and use:\n\n    ```js\n    var should = require('should');\n\n    (5).should.be.exactly(5).and.be.a.Number();\n    ```\n\n    ```js\n    var should = require('should/as-function');\n\n    should(10).be.exactly(5).and.be.a.Number();\n    ```\n\n  3. For TypeScript users:\n\n    ```js\n    import * as should from 'should';\n\n    (0).should.be.Number();\n    ```\n\n## In browser\n\nWell, even when browsers by complaints of authors have 100% es5 support, it does not mean it has no bugs. Please see [wiki](https://github.com/shouldjs/should.js/wiki/Known-Bugs) for known bugs.\n\nIf you want to use _should_ in browser, use the `should.js` file in the root of this repository, or build it yourself. To build a fresh version:\n\n```bash\n$ npm install\n$ npm run browser\n```\n\nThe script is exported to `window.should`:\n\n```js\nshould(10).be.exactly(10)\n```\n\nYou can easy install it with npm or bower:\n\n```sh\nnpm install should -D\n# or\nbower install shouldjs/should.js\n```\n\n## API docs\n\nActual api docs generated by jsdoc comments and available at [http://shouldjs.github.io](http://shouldjs.github.io).\n\n## Usage examples\n\nPlease look on usage in [examples](https://github.com/shouldjs/examples)\n\n## .not\n\n`.not` negates the current assertion.\n\n## .any\n\n`.any` allow for assertions with multiple parameters to assert any of the parameters (but not all). This is similar to the native JavaScript [array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n\n# Assertions\n## chaining assertions\n\nEvery assertion will return a `should.js`-wrapped Object, so assertions can be chained.\nTo help chained assertions read more clearly, you can use the following helpers anywhere in your chain: `.an`, `.of`, `.a`, `.and`, `.be`, `.have`, `.with`, `.is`, `.which`. Use them for better readability; they do nothing at all.\nFor example:\n```js\nuser.should.be.an.instanceOf(Object).and.have.property('name', 'tj');\nuser.pets.should.be.instanceof(Array).and.have.lengthOf(4);\n```\nAlmost all assertions return the same object - so you can easy chain them. But some (eg: `.length` and `.property`) move the assertion object to a property value, so be careful.\n\n## Adding own assertions\n\nAdding own assertion is pretty easy. You need to call `should.Assertion.add` function. It accept 2 arguments:\n\n1. name of assertion method (string)\n2. assertion function (function)\n\nWhat assertion function should do. It should check only positive case. `should` will handle `.not` itself.\n`this` in assertion function will be instance of `should.Assertion` and you **must** define in any way this.params object\n in your assertion function call before assertion check happen.\n\n`params` object can contain several fields:\n\n- `operator` - it is string which describe your assertion\n- `actual` it is actual value, you can assume it is your own this.obj if you need to define you own\n- `expected` it is any value that expected to be matched this.obj\n\nYou can assume its usage in generating AssertionError message like: expected `obj`? || this.obj not? `operator` `expected`?\n\nIn `should` sources appeared 2 kinds of usage of this method.\n\nFirst not preferred and used **only** for shortcuts to other assertions, e.g how `.should.be.true()` defined:\n\n```javascript\nAssertion.add('true', function() {\n    this.is.exactly(true);\n});\n```\nThere you can see that assertion function do not define own `this.params` and instead call within the same assertion `.exactly`\nthat will fill `this.params`. **You should use this way very carefully, but you can use it**.\n\nSecond way preferred and i assume you will use it instead of first.\n\n```javascript\nAssertion.add('true', function() {\n    this.params = { operator: 'to be true', expected: true };\n\n    should(this.obj).be.exactly(true);\n});\n```\nin this case this.params defined and then used new assertion context (because called `.should`). Internally this way does not\n create any edge cases as first.\n\n```javascript\nAssertion.add('asset', function() {\n    this.params = { operator: 'to be asset' };\n\n    this.obj.should.have.property('id').which.is.a.Number();\n    this.obj.should.have.property('path');\n})\n\n//then\n> ({ id: '10' }).should.be.an.asset();\nAssertionError: expected { id: '10' } to be asset\n    expected '10' to be a number\n\n> ({ id: 10 }).should.be.an.asset();\nAssertionError: expected { id: 10 } to be asset\n    expected { id: 10 } to have property path\n```\n\n## Additional projects\n\n* [`should-sinon`](https://github.com/shouldjs/sinon) - adds additional assertions for sinon.js\n* [`should-immutable`](https://github.com/shouldjs/should-immutable) - extends different parts of should.js to make immutable.js first-class citizen in should.js\n* [`should-http`](https://github.com/shouldjs/http) - adds small assertions for assertion on http responses for node only\n* [`should-jq`](https://github.com/shouldjs/jq) - assertions for jq (need maintainer)\n* [`karma-should`](https://github.com/seegno/karma-should) - make more or less easy to work karma with should.js\n* [`should-spies`](https://github.com/shouldjs/spies) - small and dirty simple zero dependencies spies\n\n\n## Contributions\n\n[Actual list of contributors](https://github.com/visionmedia/should.js/graphs/contributors) if you want to show it your friends.\n\nTo run the tests for _should_ simply run:\n\n    $ npm test\n\nSee also [CONTRIBUTING](./CONTRIBUTING.md).\n\n## OMG IT EXTENDS OBJECT???!?!@\n\nYes, yes it does, with a single getter _should_, and no it won't break your code, because it does this **properly** with a non-enumerable property.\n\nAlso it is possible use it without extension. Just use `require('should/as-function')` everywhere.\n\n## License\n\nMIT. See LICENSE for details."}, "npm": {"downloads": [{"from": "2020-06-27T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 26076}, {"from": "2020-06-21T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 408573}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 1976625}, {"from": "2020-03-30T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 7161170}, {"from": "2019-12-31T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 13285801}, {"from": "2019-06-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 22719129}], "dependentsCount": 954, "starsCount": 132}, "github": {"homepage": "http://shouldjs.github.io", "starsCount": 1885, "forksCount": 134, "subscribersCount": 44, "issues": {"count": 187, "openCount": 11, "distribution": {"3600": 38, "10800": 22, "32400": 21, "97200": 29, "291600": 8, "874800": 23, "2624400": 18, "7873200": 11, "23619600": 5, "70858800": 5, "212576400": 7}, "isDisabled": false}, "contributors": [{"username": "btd", "commitsCount": 359}, {"username": "tj", "commitsCount": 132}, {"username": "aseemk", "commitsCount": 10}, {"username": "rixth", "commitsCount": 10}, {"username": "serby", "commitsCount": 7}, {"username": "TooTallNate", "commitsCount": 4}, {"username": "alsotang", "commitsCount": 4}, {"username": "gabrielfalcao", "commitsCount": 4}, {"username": "travisjeffery", "commitsCount": 4}, {"username": "alFReD-NSH", "commitsCount": 3}, {"username": "fediev", "commitsCount": 3}, {"username": "nickdaugherty", "commitsCount": 3}, {"username": "fredr", "commitsCount": 2}, {"username": "nbrownus", "commitsCount": 2}, {"username": "theycallmeswift", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "vlad-shatskyi", "commitsCount": 2}, {"username": "Awk34", "commitsCount": 1}, {"username": "Erkan-Yilmaz", "commitsCount": 1}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "Raynos", "commitsCount": 1}, {"username": "RubenVerborgh", "commitsCount": 1}, {"username": "SpenceSellers", "commitsCount": 1}, {"username": "boatmeme", "commitsCount": 1}, {"username": "bodenr", "commitsCount": 1}, {"username": "carldunham", "commitsCount": 1}, {"username": "chris-grabcad", "commitsCount": 1}, {"username": "citizensas", "commitsCount": 1}, {"username": "dlochrie", "commitsCount": 1}, {"username": "eldargab", "commitsCount": 1}, {"username": "garrows", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "guileen", "commitsCount": 1}, {"username": "ichernev", "commitsCount": 1}, {"username": "isayme", "commitsCount": 1}, {"username": "jakearchibald", "commitsCount": 1}, {"username": "joshrickert", "commitsCount": 1}, {"username": "jsdevel", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "juandelgado", "commitsCount": 1}, {"username": "kaspars", "commitsCount": 1}, {"username": "lackac", "commitsCount": 1}, {"username": "lumaxis", "commitsCount": 1}, {"username": "mcandre", "commitsCount": 1}, {"username": "mrlannigan", "commitsCount": 1}, {"username": "msemenistyi", "commitsCount": 1}, {"username": "msievers83", "commitsCount": 1}, {"username": "ndastur", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "qqzh002", "commitsCount": 1}, {"username": "rafmagana", "commitsCount": 1}, {"username": "robi50", "commitsCount": 1}, {"username": "rudolf", "commitsCount": 1}, {"username": "seejohnrun", "commitsCount": 1}, {"username": "sergiitk", "commitsCount": 1}, {"username": "shubhodeep9", "commitsCount": 1}, {"username": "skovalyov", "commitsCount": 1}, {"username": "stimberm", "commitsCount": 1}, {"username": "titarenko", "commitsCount": 1}, {"username": "tjwudi", "commitsCount": 1}, {"username": "tricknotes", "commitsCount": 1}, {"username": "tvjg", "commitsCount": 1}, {"username": "ulikoehler", "commitsCount": 1}, {"username": "vp2177", "commitsCount": 1}, {"username": "yamadapc", "commitsCount": 1}, {"username": "zarino", "commitsCount": 1}], "commits": [{"from": "2020-06-21T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2020-03-30T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2019-12-31T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}, {"from": "2019-06-29T00:00:00.000Z", "to": "2020-06-28T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7809, "testsSize": 68474, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/shouldjs/should.js.svg?branch=master", "service": "https://api.travis-ci.org/shouldjs/should.js.svg?branch=master", "shields": "https://img.shields.io/travis/shouldjs/should.js/master.svg", "content": "https://img.shields.io/travis/shouldjs/should.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 2262, "downloadsCount": 2387056.6666666665, "downloadsAcceleration": 3802.281868340946, "dependentsCount": 954}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.81585998375229, "detail": {"quality": 0.9651362625005069, "popularity": 0.503875507240788, "maintenance": 0.9998933641938921}}}}, {"mkdirp": {"analyzedAt": "2020-06-07T07:49:19.964Z", "collected": {"metadata": {"name": "mkdirp", "scope": "unscoped", "version": "1.0.4", "description": "Recursively mkdir, like `mkdir -p`", "keywords": ["mkdir", "directory", "make dir", "make", "dir", "recursive", "native"], "date": "2020-04-03T17:03:08.825Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/isaacs/node-mkdirp.git"}, "links": {"npm": "https://www.npmjs.com/package/mkdirp", "homepage": "https://github.com/isaacs/node-mkdirp#readme", "repository": "https://github.com/isaacs/node-mkdirp", "bugs": "https://github.com/isaacs/node-mkdirp/issues"}, "license": "MIT", "devDependencies": {"require-inject": "^1.4.4", "tap": "^14.10.7"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1667771}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 27708911}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 114362609}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 322660893}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 500934058}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 839540447}], "dependentsCount": 16240, "starsCount": 345}, "github": {"forkOf": "substack/node-mkdirp", "starsCount": 40, "forksCount": 15, "subscribersCount": 2, "issues": {"count": 27, "openCount": 2, "distribution": {"3600": 3, "10800": 3, "32400": 2, "97200": 3, "291600": 4, "874800": 7, "2624400": 3, "7873200": 2, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 61}, {"username": "isaacs", "commitsCount": 35}, {"username": "MylesBorins", "commitsCount": 2}, {"username": "calvinmetcalf", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 1}, {"username": "doublerebel", "commitsCount": 1}, {"username": "smurthas", "commitsCount": 1}, {"username": "sqs", "commitsCount": 1}, {"username": "ulikoehler", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 23}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 23}]}, "source": {"files": {"readmeSize": 0, "testsSize": 18761, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.49000000000000005, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 411, "downloadsCount": 107553631, "downloadsAcceleration": 498708.0820395738, "dependentsCount": 16240}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7551541095890411, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.850740476596969, "detail": {"quality": 0.7593159414206894, "popularity": 0.7800824776224051, "maintenance": 0.999762362865487}}}}, {"eslint-config-airbnb-base": {"analyzedAt": "2020-06-11T06:43:27.724Z", "collected": {"metadata": {"name": "eslint-config-airbnb-base", "scope": "unscoped", "version": "14.2.0", "description": "Airbnb's base JS ESLint config, following our styleguide", "keywords": ["eslint", "eslintconfig", "config", "airbnb", "javascript", "styleguide", "es2015", "es2016", "es2017", "es2018"], "date": "2020-06-11T06:39:44.801Z", "author": {"name": "Jake Teton-Landis", "url": "https://twitter.com/@jitl"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "airbnbeng", "email": "opensource@airbnb.com"}, {"username": "etienne_tripier", "email": "etienne.tripier@airbnb.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "milesj", "email": "mileswjohnson@gmail.com"}, {"username": "noratarano", "email": "noratarano@gmail.com"}, {"username": "schleyfox", "email": "ben@pixelmachine.org"}, {"username": "sharmilajesupaul", "email": "tosharmila@gmail.com"}], "contributors": [{"name": "Jake Teton-Landis", "url": "https://twitter.com/jitl"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com", "url": "http://ljharb.codes"}, {"name": "Harrison Shoff", "url": "https://twitter.com/hshoff"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/javascript.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-airbnb-base", "homepage": "https://github.com/airbnb/javascript", "repository": "https://github.com/airbnb/javascript", "bugs": "https://github.com/airbnb/javascript/issues"}, "license": "MIT", "dependencies": {"confusing-browser-globals": "^1.0.9", "object.assign": "^4.1.0", "object.entries": "^1.1.2"}, "devDependencies": {"@babel/runtime": "^7.8.7", "babel-preset-airbnb": "^4.5.0", "babel-tape-runner": "^3.0.0", "eclint": "^2.8.1", "eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-find-rules": "^3.5.0", "eslint-plugin-import": "^2.21.2", "in-publish": "^2.0.1", "safe-publish-latest": "^1.1.4", "tape": "^5.0.1"}, "peerDependencies": {"eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-plugin-import": "^2.21.2"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# eslint-config-airbnb-base\n\n[![npm version](https://badge.fury.io/js/eslint-config-airbnb-base.svg)](http://badge.fury.io/js/eslint-config-airbnb-base)\n\nThis package provides Airbnb's base JS .eslintrc (without React plugins) as an extensible shared config.\n\n## Usage\n\nWe export two ESLint configurations for your usage.\n\n### eslint-config-airbnb-base\n\nOur default export contains all of our ESLint rules, including ECMAScript 6+. It requires `eslint` and `eslint-plugin-import`.\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb-base@latest\" peerDependencies\n  ```\n\n  If using **npm 5+**, use this shortcut\n\n  ```sh\n  npx install-peerdeps --dev eslint-config-airbnb-base\n  ```\n\n  If using **yarn**, you can also use the shortcut described above if you have npm 5+ installed on your machine, as the command will detect that you are using yarn and will act accordingly.\n  Otherwise, run `npm info \"eslint-config-airbnb-base@latest\" peerDependencies` to list the peer dependencies and versions, then run `yarn add --dev <dependency>@<version>` for each listed peer dependency.\n\n\n  If using **npm < 5**, Linux/OSX users can run\n\n  ```sh\n  (\n    export PKG=eslint-config-airbnb-base;\n    npm info \"$PKG@latest\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG@latest\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n    npm install --save-dev eslint-config-airbnb-base eslint@^#.#.# eslint-plugin-import@^#.#.#\n  ```\n\n  If using **npm < 5**, Windows users can either install all the peer dependencies manually, or use the [install-peerdeps](https://github.com/nathanhleung/install-peerdeps) cli tool.\n\n  ```sh\n  npm install -g install-peerdeps\n  install-peerdeps --dev eslint-config-airbnb-base\n  ```\n\n  The cli will produce and run a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb-base eslint@^#.#.# eslint-plugin-import@^#.#.#\n  ```\n\n2. Add `\"extends\": \"airbnb-base\"` to your .eslintrc.\n\n### eslint-config-airbnb-base/legacy\n\nLints ES5 and below. Requires `eslint` and `eslint-plugin-import`.\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb-base@latest\" peerDependencies\n  ```\n\n  Linux/OSX users can run\n  ```sh\n  (\n    export PKG=eslint-config-airbnb-base;\n    npm info \"$PKG\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb-base eslint@^3.0.1 eslint-plugin-import@^1.10.3\n  ```\n\n2. Add `\"extends\": \"airbnb-base/legacy\"` to your .eslintrc\n\nSee [Airbnb's overarching ESLint config](https://npmjs.com/eslint-config-airbnb), [Airbnb's JavaScript styleguide](https://github.com/airbnb/javascript), and the [ESlint config docs](https://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information.\n\n### eslint-config-airbnb-base/whitespace\n\nThis entry point only errors on whitespace rules and sets all other rules to warnings. View the list of whitespace rules [here](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb-base/whitespace.js).\n\n## Improving this config\n\nConsider adding test cases if you're making complicated rules changes, like anything involving regexes. Perhaps in a distant future, we could use literate programming to structure our README as test cases for our .eslintrc?\n\nYou can run tests with `npm test`.\n\nYou can make sure this module lints with itself using `npm run lint`."}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 571969}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3046650}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 13142375}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 38563595}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 67535608}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 120517833}], "dependentsCount": 1279, "starsCount": 58}, "github": {"starsCount": 96929, "forksCount": 18845, "subscribersCount": 3634, "issues": {"count": 2203, "openCount": 116, "distribution": {"3600": 617, "10800": 246, "32400": 337, "97200": 216, "291600": 185, "874800": 113, "2624400": 117, "7873200": 106, "23619600": 85, "70858800": 87, "212576400": 94}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 502}, {"username": "hshoff", "commitsCount": 166}, {"username": "lencioni", "commitsCount": 50}, {"username": "architectcodes", "commitsCount": 19}, {"username": "sharmilajesupaul", "commitsCount": 16}, {"username": "vsemozhetbyt", "commitsCount": 15}, {"username": "1pete", "commitsCount": 14}, {"username": "ssorallen", "commitsCount": 13}, {"username": "goatslacker", "commitsCount": 12}, {"username": "chrisngobanh", "commitsCount": 10}, {"username": "thisconnect", "commitsCount": 9}, {"username": "SimenB", "commitsCount": 8}, {"username": "Ryan-McBride", "commitsCount": 7}, {"username": "taion", "commitsCount": 7}, {"username": "bl00mber", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "felipethome", "commitsCount": 5}, {"username": "graingert", "commitsCount": 5}, {"username": "joaomilho", "commitsCount": 5}, {"username": "kevinweber", "commitsCount": 5}, {"username": "mitsuruog", "commitsCount": 5}, {"username": "spikebrehm", "commitsCount": 5}, {"username": "simono", "commitsCount": 4}, {"username": "vladshcherbin", "commitsCount": 4}, {"username": "AlicanC", "commitsCount": 3}, {"username": "RobLoach", "commitsCount": 3}, {"username": "adrienverge", "commitsCount": 3}, {"username": "amsardesai", "commitsCount": 3}, {"username": "asherdale", "commitsCount": 3}, {"username": "camazorro", "commitsCount": 3}, {"username": "chentsulin", "commitsCount": 3}, {"username": "jabacchetta", "commitsCount": 3}, {"username": "karanjthakkar", "commitsCount": 3}, {"username": "kripod", "commitsCount": 3}, {"username": "leonidlebedev", "commitsCount": 3}, {"username": "lvarayut", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "pigoz", "commitsCount": 3}, {"username": "raunofreiberg", "commitsCount": 3}, {"username": "remcohaszing", "commitsCount": 3}, {"username": "trshafer", "commitsCount": 3}, {"username": "unkillbob", "commitsCount": 3}, {"username": "0xCMP", "commitsCount": 2}, {"username": "A-Tokyo", "commitsCount": 2}, {"username": "ClimbsRocks", "commitsCount": 2}, {"username": "Doweig", "commitsCount": 2}, {"username": "Ensive", "commitsCount": 2}, {"username": "HerringtonDarkholme", "commitsCount": 2}, {"username": "JBallin", "commitsCount": 2}, {"username": "KevinGrandon", "commitsCount": 2}, {"username": "NLDev", "commitsCount": 2}, {"username": "ParkSB", "commitsCount": 2}, {"username": "TheSavior", "commitsCount": 2}, {"username": "akai", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "atkinchris", "commitsCount": 2}, {"username": "bertho-zero", "commitsCount": 2}, {"username": "billyjanitsch", "commitsCount": 2}, {"username": "carterchung", "commitsCount": 2}, {"username": "cmalard", "commitsCount": 2}, {"username": "coliff", "commitsCount": 2}, {"username": "cooperka", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "daxelrod", "commitsCount": 2}, {"username": "evenfrost", "commitsCount": 2}, {"username": "fbergr", "commitsCount": 2}, {"username": "felixsanz", "commitsCount": 2}, {"username": "frenzzy", "commitsCount": 2}, {"username": "fvgs", "commitsCount": 2}, {"username": "gmccue", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "honzi", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "iamnirav", "commitsCount": 2}, {"username": "johnmanong", "commitsCount": 2}, {"username": "jondubin", "commitsCount": 2}, {"username": "kamronbatman", "commitsCount": 2}, {"username": "kaplanmaxe", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "lasota-piotr", "commitsCount": 2}, {"username": "liuchong", "commitsCount": 2}, {"username": "mifi", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "nicoder", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "olistic", "commitsCount": 2}, {"username": "pra85", "commitsCount": 2}, {"username": "rodocite", "commitsCount": 2}, {"username": "ronal2do", "commitsCount": 2}, {"username": "sangaman", "commitsCount": 2}, {"username": "sidoshi", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "sindrenm", "commitsCount": 2}, {"username": "spen", "commitsCount": 2}, {"username": "thepeoplesbourgeois", "commitsCount": 2}, {"username": "tikotzky", "commitsCount": 2}, {"username": "timofurrer", "commitsCount": 2}, {"username": "uzumaxy", "commitsCount": 2}, {"username": "vahan-hartooni", "commitsCount": 2}, {"username": "wyattdanger", "commitsCount": 2}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 9}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 13}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 32}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 91}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 3654, "testsSize": 1407, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 119566, "downloadsCount": 12854531.666666666, "downloadsAcceleration": 38226.325304414015, "dependentsCount": 1279}, "maintenance": {"releasesFrequency": 0.43458904109589047, "commitsFrequency": 0.9409178082191781, "openIssues": 1, "issuesDistribution": 0.2668729606981069}}, "score": {"final": 0.859446300736287, "detail": {"quality": 0.9407345552073143, "popularity": 0.7639885956115737, "maintenance": 0.8852283591715486}}}}, {"@babel/plugin-proposal-class-properties": {"analyzedAt": "2020-06-30T13:41:58.033Z", "collected": {"metadata": {"name": "@babel/plugin-proposal-class-properties", "scope": "babel", "version": "7.10.4", "description": "This plugin transforms static class properties as well as properties declared with the property initializer syntax", "keywords": ["babel-plugin"], "date": "2020-06-30T13:13:32.148Z", "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-plugin-proposal-class-properties"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fplugin-proposal-class-properties", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-create-class-features-plugin": "^7.10.4", "@babel/helper-plugin-utils": "^7.10.4"}, "devDependencies": {"@babel/core": "^7.10.4", "@babel/helper-plugin-test-runner": "^7.10.4"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 0}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 7}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 27}], "readme": "# @babel/plugin-proposal-class-properties\n\n> This plugin transforms static class properties as well as properties declared with the property initializer syntax\n\nSee our website [@babel/plugin-proposal-class-properties](https://babeljs.io/docs/en/next/babel-plugin-proposal-class-properties.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/plugin-proposal-class-properties\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/plugin-proposal-class-properties --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1635053}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 9270300}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 37025182}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 102661554}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 188314933}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 317261901}], "dependentsCount": 2933, "starsCount": 1}, "source": {"files": {"readmeSize": 498, "testsSize": 572140, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.4365, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 1, "downloadsCount": 34220518, "downloadsAcceleration": 135486.35755327248, "dependentsCount": 2933}, "maintenance": {"releasesFrequency": 0.8382705479452055, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5968056781414987, "detail": {"quality": 0.9158863410170694, "popularity": 0.5869973017658043, "maintenance": 0.3331163434809896}}}}, {"standard": {"analyzedAt": "2020-06-23T01:46:19.432Z", "collected": {"metadata": {"name": "standard", "scope": "unscoped", "version": "14.3.4", "description": "JavaScript Standard Style", "keywords": ["JavaScript Standard Style", "check", "checker", "code", "code checker", "code linter", "code standards", "code style", "enforce", "eslint", "hint", "jscs", "jshint", "lint", "policy", "quality", "simple", "standard", "standard style", "style", "style checker", "style linter", "verify"], "date": "2020-05-11T16:26:45.103Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org/", "username": "feross"}, "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "bret", "email": "bcomnes@gmail.com"}, {"username": "dcousens", "email": "npm@dcousens.com"}, {"username": "dcposch", "email": "dcposch@dcpos.ch"}, {"username": "feross", "email": "feross@feross.org"}, {"username": "flet", "email": "flettre@gmail.com"}, {"username": "jb55", "email": "bill@casarin.me"}, {"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "linusu", "email": "linus@folkdatorn.se"}, {"username": "mafintosh", "email": "mathiasbuus@gmail.com"}, {"username": "maxogden", "email": "max@maxogden.com"}, {"username": "othiym23", "email": "ogd@aoaioxxysz.net"}, {"username": "reggi", "email": "thomas@reggi.com"}, {"username": "rstacruz", "email": "dropbox@ricostacruz.com"}, {"username": "timoxley", "email": "secoif@gmail.com"}, {"username": "watson", "email": "w@tson.dk"}, {"username": "xjamundx", "email": "jamund@gmail.com"}, {"username": "yoshuawuyts", "email": "i@yoshuawuyts.com"}], "repository": {"type": "git", "url": "git://github.com/standard/standard.git"}, "links": {"npm": "https://www.npmjs.com/package/standard", "homepage": "https://standardjs.com", "repository": "https://github.com/standard/standard", "bugs": "https://github.com/standard/standard/issues"}, "license": "MIT", "dependencies": {"eslint": "~6.8.0", "eslint-config-standard": "14.1.1", "eslint-config-standard-jsx": "8.1.0", "eslint-plugin-import": "~2.18.0", "eslint-plugin-node": "~10.0.0", "eslint-plugin-promise": "~4.2.1", "eslint-plugin-react": "~7.14.2", "eslint-plugin-standard": "~4.0.0", "standard-engine": "^12.0.0"}, "devDependencies": {"babel-eslint": "^10.0.3", "cross-spawn": "^7.0.0", "eslint-index": "^1.3.0", "hallmark": "^2.0.0", "minimist": "^1.2.2", "mkdirp": "^1.0.3", "run-parallel-limit": "^1.0.3", "standard-packages": "^3.6.1", "tape": "^4.6.0"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 2}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 4}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 20}], "hasTestScript": true, "readme": "<h1 align=\"center\">\n  <a href=\"https://standardjs.com\"><img src=\"https://cdn.rawgit.com/standard/standard/master/sticker.svg\" alt=\"Standard - JavaScript Style Guide\" width=\"200\"></a>\n  <br>\n  JavaScript Standard Style\n  <br>\n  <br>\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/ZegqCBr\"><img src=\"https://img.shields.io/discord/612704110008991783\" alt=\"discord\"></a>\n  <a href=\"https://travis-ci.org/standard/standard\"><img src=\"https://img.shields.io/travis/standard/standard/master.svg\" alt=\"travis\"></a>\n  <a href=\"https://www.npmjs.com/package/standard\"><img src=\"https://img.shields.io/npm/v/standard.svg\" alt=\"npm version\"></a>\n  <a href=\"https://www.npmjs.com/package/eslint-config-standard\"><img src=\"https://img.shields.io/npm/dm/eslint-config-standard.svg\" alt=\"npm downloads\"></a>\n  <a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"Standard - JavaScript Style Guide\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"/docs/README-en.md\">English</a> \u2022\n  <a href=\"/docs/README-esla.md\">Espa\u00f1ol (Latinoam\u00e9rica)</a> \u2022\n  <a href=\"/docs/README-fr.md\">Fran\u00e7ais</a> \u2022\n  <a href=\"/docs/README-iteu.md\">Italiano (Italian)</a> \u2022\n  <a href=\"/docs/README-ja.md\">\u65e5\u672c\u8a9e (Japanese)</a> \u2022\n  <a href=\"/docs/README-kokr.md\">\ud55c\uad6d\uc5b4 (Korean)</a> \u2022\n  <a href=\"/docs/README-ptbr.md\">Portugu\u00eas (Brasil)</a> \u2022\n  <a href=\"/docs/README-zhcn.md\">\u7b80\u4f53\u4e2d\u6587 (Simplified Chinese)</a> \u2022\n  <a href=\"/docs/README-zhtw.md\">\u7e41\u9ad4\u4e2d\u6587 (Taiwanese Mandarin)</a>\n</p>\n\n## JavaScript style guide, linter, and formatter\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce code quality in your\n  project. No decisions to make. No `.eslintrc` files to manage. It just works.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nGive it a try by running `npx standard --fix` right now!\n\n## Table of Contents\n\n- Quick start\n  - [Install](#install)\n  - [Usage](#usage)\n  - [What you might do if you're clever](#what-you-might-do-if-youre-clever)\n- FAQ\n  - [Why should I use JavaScript Standard Style?](#why-should-i-use-javascript-standard-style)\n  - [Who uses JavaScript Standard Style?](#who-uses-javascript-standard-style)\n  - [Are there text editor plugins?](#are-there-text-editor-plugins)\n  - [Is there a readme badge?](#is-there-a-readme-badge)\n  - [I disagree with rule X, can you change it?](#i-disagree-with-rule-x-can-you-change-it)\n  - [But this isn't a real web standard!](#but-this-isnt-a-real-web-standard)\n  - [Is there an automatic formatter?](#is-there-an-automatic-formatter)\n  - [How do I ignore files?](#how-do-i-ignore-files)\n  - [How do I hide a certain warning?](#how-do-i-hide-a-certain-warning)\n  - [I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?](#i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors)\n  - [How do I use experimental JavaScript (ES Next) features?](#how-do-i-use-experimental-javascript-es-next-features)\n  - [Can I use a JavaScript language variant, like Flow or TypeScript?](#can-i-use-a-javascript-language-variant-like-flow-or-typescript)\n  - [What about Mocha, Jest, Jasmine, QUnit, etc?](#what-about-mocha-jest-jasmine-qunit-etc)\n  - [What about Web Workers and Service Workers?](#what-about-web-workers-and-service-workers)\n  - [Can I check code inside of Markdown or HTML files?](#can-i-check-code-inside-of-markdown-or-html-files)\n  - [Is there a Git `pre-commit` hook?](#is-there-a-git-pre-commit-hook)\n  - [How do I make the output all colorful and pretty?](#how-do-i-make-the-output-all-colorful-and-pretty)\n  - [Is there a Node.js API?](#is-there-a-nodejs-api)\n  - [How do I contribute to StandardJS?](#how-do-i-contribute-to-standardjs)\n- [License](#license)\n\n## Install\n\nThe easiest way to use JavaScript Standard Style is to install it globally as a\nNode command line program. Run the following command in Terminal:\n\n```bash\n$ npm install standard --global\n```\n\nOr, you can install `standard` locally, for use in a single project:\n\n```bash\n$ npm install standard --save-dev\n```\n\n*Note: To run the preceding commands, [Node.js](http://nodejs.org) and [npm](https://npmjs.com) must be installed.*\n\n## Usage\n\nAfter you've installed `standard`, you should be able to use the `standard` program. The\nsimplest use case would be checking the style of all JavaScript files in the\ncurrent working directory:\n\n```bash\n$ standard\nError: Use JavaScript Standard Style\n  lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n```\n\nIf you've installed `standard` locally, run with `npx` instead:\n\n```bash\n$ npx standard\n```\n\nYou can optionally pass in a directory (or directories) using the glob pattern. Be\nsure to quote paths containing glob patterns so that they are expanded by\n`standard` instead of your shell:\n\n```bash\n$ standard \"src/util/**/*.js\" \"test/**/*.js\"\n```\n\n**Note:** by default `standard` will look for all files matching the patterns:\n`**/*.js`, `**/*.jsx`.\n\n## What you might do if you're clever\n\n1. Add it to `package.json`\n\n  ```json\n  {\n    \"name\": \"my-cool-package\",\n    \"devDependencies\": {\n      \"standard\": \"*\"\n    },\n    \"scripts\": {\n      \"test\": \"standard && node my-tests.js\"\n    }\n  }\n  ```\n\n2. Style is checked automatically when you run `npm test`\n\n  ```bash\n  $ npm test\n  Error: Use JavaScript Standard Style\n    lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n  ```\n\n3. Never give style feedback on a pull request again!\n\n## Why should I use JavaScript Standard Style?\n\nThe beauty of JavaScript Standard Style is that it's simple. No one wants to\nmaintain multiple hundred-line style configuration files for every module/project\nthey work on. Enough of this madness!\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce consistent style in your\n  project. Just drop it in.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nAdopting `standard` style means ranking the importance of code clarity and\ncommunity conventions higher than personal style. This might not make sense for\n100% of projects and development cultures, however open source can be a hostile\nplace for newbies. Setting up clear, automated contributor expectations makes a\nproject healthier.\n\nFor more info, see the conference talk [\"Write Perfect Code with Standard and\nESLint\"](https://www.youtube.com/watch?v=kuHfMw8j4xk). In this talk, you'll learn\nabout linting, when to use `standard` versus `eslint`, and how `prettier` compares\nto `standard`.\n\n## Who uses JavaScript Standard Style?\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodejs.png>](https://nodejs.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/npm.png>](https://www.npmjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/github.png>](https://github.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/elastic.png>](https://www.elastic.co) |\n|---|---|---|---|\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/express.png>](http://expressjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/electron.png>](http://electron.atom.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nuxtjs.png>](https://nuxtjs.org/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/atom.png>](https://atom.io) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/mongodb.jpg>](https://www.mongodb.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zendesk.png>](https://www.zendesk.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/brave.png>](https://www.brave.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zeit.png>](https://zeit.co) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodesource.png>](https://nodesource.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nearform.png>](http://www.nearform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/typeform.png>](https://www.typeform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/gov-uk.png>](https://gds.blog.gov.uk) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/heroku.png>](https://www.heroku.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/saucelabs.png>](https://saucelabs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/automattic.png>](https://automattic.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/godaddy.png>](https://www.godaddy.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webtorrent.png>](https://webtorrent.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ipfs.png>](https://ipfs.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/dat.png>](https://datproject.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitcoinjs.png>](https://bitcoinjs.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/voltra.png>](https://voltra.co) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/treasuredata.png>](https://www.treasuredata.com) | [<img alt=\"Free MIDIs, MIDI file downloads\" width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitmidi.png>](https://bitmidi.com) | [<img width=190 alt=\"College essays, AP notes\" src=https://cdn.rawgit.com/standard/standard/master/docs/logos/studynotes.jpg>](https://www.apstudynotes.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/optiopay.png>](https://www.optiopay.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/jaguar-landrover.png>](https://www.jlrtechincubator.com/jlrti/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bustle.jpg>](https://www.bustle.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zentrick.png>](https://www.zentrick.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/greenkeeper.png>](https://greenkeeper.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/karma.png>](https://karma-runner.github.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/taser.png>](https://www.taser.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/neo4j.png>](https://www.neo4j.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/rentograph.png>](https://rentograph.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/eaze.png>](https://www.eaze.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ctrl-alt-deseat.png>](https://www.ctrlaltdeseat.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/clevertech.png>](https://clevertech.biz) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/aragon.png>](https://aragon.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/flowsent.png>](https://www.flowsent.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/puma-browser.png>](https://www.pumabrowser.com/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webstorm.png>](https://www.jetbrains.com/webstorm/) |\n|---|---|---|---|\n\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/fastify.png>](https://www.fastify.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/scuttlebutt.png>](https://www.scuttlebutt.nz) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/solid.png>](https://solid.inrupt.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/grab.png>](https://www.grab.com) |\n|---|---|---|---|\n\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/swissdev-js-jobs.png>](https://swissdevjobs.ch/jobs/JavaScript/All) | Your logo here | Your logo here | Your logo here |\n|---|---|---|---|\n\n\nIn addition to companies, many community members use `standard` on packages that\nare [too numerous](https://raw.githubusercontent.com/standard/standard-packages/master/all.json)\nto list here.\n\n`standard` is also the top-starred linter in GitHub's\n[Clean Code Linter](https://github.com/showcases/clean-code-linters) showcase.\n\n## Are there text editor plugins?\n\nFirst, install `standard`. Then, install the appropriate plugin for your editor:\n\n### Sublime Text\n\nUsing **[Package Control][sublime-1]**, install **[SublimeLinter][sublime-2]** and\n**[SublimeLinter-contrib-standard][sublime-3]**.\n\nFor automatic formatting on save, install **[StandardFormat][sublime-4]**.\n\n[sublime-1]: https://packagecontrol.io/\n[sublime-2]: http://www.sublimelinter.com/en/latest/\n[sublime-3]: https://packagecontrol.io/packages/SublimeLinter-contrib-standard\n[sublime-4]: https://packagecontrol.io/packages/StandardFormat\n\n### Atom\n\nInstall **[linter-js-standard][atom-1]**.\n\nAlternatively, you can install **[linter-js-standard-engine][atom-4]**. Instead of\nbundling a version of `standard` it will automatically use the version installed\nin your current project. It will also work out of the box with other linters based\non **[standard-engine][atom-5]**.\n\nFor automatic formatting, install **[standard-formatter][atom-2]**. For snippets,\ninstall **[standardjs-snippets][atom-3]**.\n\n[atom-1]: https://atom.io/packages/linter-js-standard\n[atom-2]: https://atom.io/packages/standard-formatter\n[atom-3]: https://atom.io/packages/standardjs-snippets\n[atom-4]: https://atom.io/packages/linter-js-standard-engine\n[atom-5]: https://github.com/standard/standard-engine\n\n### Visual Studio Code\n\nInstall **[vscode-standardjs][vscode-1]**. (Includes support for automatic formatting.)\n\nFor JS snippets, install: **[vscode-standardjs-snippets][vscode-2]**. For React snippets, install **[vscode-react-standard][vscode-3]**.\n\n[vscode-1]: https://marketplace.visualstudio.com/items/chenxsan.vscode-standardjs\n[vscode-2]: https://marketplace.visualstudio.com/items?itemName=capaj.vscode-standardjs-snippets\n[vscode-3]: https://marketplace.visualstudio.com/items/TimonVS.ReactSnippetsStandard\n\n### Vim\n\nInstall **[ale][vim-1]**. And add these lines to your `.vimrc` file.\n\n```vim\nlet g:ale_linters = {\n\\   'javascript': ['standard'],\n\\}\nlet g:ale_fixers = {'javascript': ['standard']}\n```\n\nThis sets standard as your only linter and fixer for javascript files and so prevents conflicts with eslint. For linting and automatic fixing on save, add these lines to `.vimrc`:\n```vim\nlet g:ale_lint_on_save = 1\nlet g:ale_fix_on_save = 1\n```\n\n\nAlternative plugins to consider include [neomake][vim-2] and [syntastic][vim-3], both of which have built-in support for `standard` (though configuration may be necessary).\n\n[vim-1]: https://github.com/w0rp/ale\n[vim-2]: https://github.com/neomake/neomake\n[vim-3]: https://github.com/vim-syntastic/syntastic\n\n### Emacs\n\nInstall **[Flycheck][emacs-1]** and check out the **[manual][emacs-2]** to learn\nhow to enable it in your projects.\n\n[emacs-1]: http://www.flycheck.org\n[emacs-2]: http://www.flycheck.org/en/latest/user/installation.html\n\n### Brackets\n\nSearch the extension registry for **[\"Standard Code Style\"][brackets-1]** and click \"Install\".\n\n[brackets-1]: https://github.com/ishamf/brackets-standard/\n\n### WebStorm (PhpStorm, IntelliJ, RubyMine, JetBrains, etc.)\n\nWebStorm [recently announced native support](https://blog.jetbrains.com/webstorm/2017/01/webstorm-2017-1-eap-171-2272/)\nfor `standard` directly in the IDE.\n\nIf you still prefer to configure `standard` manually, [follow this guide][webstorm-1]. This applies to all JetBrains products, including PhpStorm, IntelliJ, RubyMine, etc.\n\n[webstorm-1]: docs/webstorm.md\n\n## Is there a readme badge?\n\nYes! If you use `standard` in your project, you can include one of these badges in\nyour readme to let people know that your code is using the standard style.\n\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n\n```md\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n```\n\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n```md\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n```\n\n## I disagree with rule X, can you change it?\n\nNo. The whole point of `standard` is to save you time by avoiding\n[bikeshedding][bikeshedding] about code style. There are lots of debates online about\ntabs vs. spaces, etc. that will never be resolved. These debates just distract from\ngetting stuff done. At the end of the day you have to 'just pick something', and\nthat's the whole philosophy of `standard` -- its a bunch of sensible 'just pick\nsomething' opinions. Hopefully, users see the value in that over defending their\nown opinions.\n\nThere are a couple of similar packages for anyone who does not want to completely accept `standard`:\n- [semistandard](https://github.com/standard/semistandard) - standard, with semicolons\n- [standardx](https://github.com/standard/standardx) - standard, with custom tweaks\n\nIf you really want to configure hundreds of ESLint rules individually, you can\nalways use `eslint` directly with\n[eslint-config-standard](https://github.com/standard/eslint-config-standard) to\nlayer your changes on top.\n[`standard-eject`](https://github.com/josephfrazier/standard-eject) can help\nyou migrate from `standard` to `eslint` and `eslint-config-standard`.\n\nPro tip: Just use `standard` and move on. There are actual real problems that you\ncould spend your time solving! :P\n\n[bikeshedding]: https://www.freebsd.org/doc/en/books/faq/misc.html#bikeshed-painting\n\n## But this isn't a real web standard!\n\nOf course it's not! The style laid out here is not affiliated with any official web\nstandards groups, which is why this repo is called `standard/standard` and not\n`ECMA/standard`.\n\nThe word \"standard\" has more meanings than just \"web standard\" :-) For example:\n\n- This module helps hold our code to a high *standard of quality*.\n- This module ensures that new contributors follow some basic *style standards*.\n\n## Is there an automatic formatter?\n\nYes! You can use `standard --fix` to fix most issues automatically.\n\n`standard --fix` is built into `standard` for maximum convenience. Most problems\nare fixable, but some errors (like forgetting to handle errors) must be fixed\nmanually.\n\nTo save you time, `standard` outputs the message \"`Run standard --fix to\nautomatically fix some problems`\" when it detects problems that can be fixed\nautomatically.\n\n## How do I ignore files?\n\nCertain paths (`node_modules/`, `coverage/`, `vendor/`, `*.min.js`, `bundle.js`,\nand files/folders that begin with `.` like `.git/`) are automatically ignored.\n\nPaths in a project's root `.gitignore` file are also automatically ignored.\n\nSometimes you need to ignore additional folders or specific minified files. To do\nthat, add a `standard.ignore` property to `package.json`:\n\n```json\n\"standard\": {\n  \"ignore\": [\n    \"**/out/\",\n    \"/lib/select2/\",\n    \"/lib/ckeditor/\",\n    \"tmp.js\"\n  ]\n}\n```\n\n## How do I hide a certain warning?\n\nIn rare cases, you'll need to break a rule and hide the warning generated by\n`standard`.\n\nJavaScript Standard Style uses [ESLint](http://eslint.org/) under-the-hood and\nyou can hide warnings as you normally would if you used ESLint directly.\n\nTo get verbose output (so you can find the particular rule name to ignore), run:\n\n```bash\n$ standard --verbose\nError: Use JavaScript Standard Style\n  routes/error.js:20:36: 'file' was used before it was defined. (no-use-before-define)\n```\n\nDisable **all rules** on a specific line:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line\n```\n\nOr, disable **only** the `\"no-use-before-define\"` rule:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line no-use-before-define\n```\n\nOr, disable the `\"no-use-before-define\"` rule for **multiple lines**:\n\n```js\n/* eslint-disable no-use-before-define */\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\n/* eslint-enable no-use-before-define */\n```\n\n## I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?\n\nSome packages (e.g. `mocha`) put their functions (e.g. `describe`, `it`) on the\nglobal object (poor form!). Since these functions are not defined or `require`'d\nanywhere in your code, `standard` will warn that you're using a variable that is\nnot defined (usually, this rule is really useful for catching typos!). But we want\nto disable it for these global variables.\n\nTo let `standard` (as well as humans reading your code) know that certain variables\nare global in your code, add this to the top of your file:\n\n```js\n/* global myVar1, myVar2 */\n```\n\nIf you have hundreds of files, it may be desirable to avoid adding comments to\nevery file. In this case, run:\n\n```bash\n$ standard --global myVar1 --global myVar2\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"globals\": [ \"myVar1\", \"myVar2\" ]\n  }\n}\n```\n\n*Note: `global` and `globals` are equivalent.*\n\n## How do I use experimental JavaScript (ES Next) features?\n\n`standard` supports the latest ECMAScript features, ES8 (ES2017), including\nlanguage feature proposals that are in \"Stage 4\" of the proposal process.\n\nTo support experimental language features, `standard` supports specifying a\ncustom JavaScript parser. Before using a custom parser, consider whether the added\ncomplexity is worth it.\n\nTo use a custom parser, first install it from npm:\n\n```bash\nnpm install babel-eslint --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\"\n  }\n}\n```\n\n## Can I use a JavaScript language variant, like Flow or TypeScript?\n\n`standard` supports the latest ECMAScript features. However, Flow and TypeScript add new\nsyntax to the language, so they are not supported out-of-the-box.\n\nTo support JavaScript language variants, `standard` supports specifying a custom JavaScript\nparser as well as an ESLint plugin to handle the changed syntax. Before using a JavaScript\nlanguage variant, consider whether the added complexity is worth it.\n\n### Flow\n\nTo use Flow, you need to run `standard` with `babel-eslint` as the parser and\n`eslint-plugin-flowtype` as a plugin.\n\n```bash\nnpm install babel-eslint eslint-plugin-flowtype --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint --plugin flowtype\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\",\n    \"plugins\": [ \"flowtype\" ]\n  }\n}\n```\n\n*Note: `plugin` and `plugins` are equivalent.*\n\n### TypeScript\n\nTo use TypeScript, you need to run `standard` with `@typescript-eslint/parser` as the parser,\n`@typescript-eslint/eslint-plugin` as a plugin, and tell standard to lint `**/*.ts` files (since it\ndoesn't by default).\n\nUnfortunately, there's an outstanding [issue](https://github.com/standard/standard/issues/1283)\nwith `standard` and Typescript where `standard` would incorrectly emit unused-variable errors\n(e.g: when you import interfaces). And as a workaround, you need to use\n[standardx](https://github.com/standard/standardx) instead:sweat_smile:.\n\n```bash\nnpm install standardx @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev\n```\n\nThen run:\n\n```bash\n$ standardx --parser @typescript-eslint/parser --plugin @typescript-eslint/eslint-plugin **/*.ts\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"eslintConfig\": {\n    \"rules\": {\n      \"no-unused-vars\": \"off\",\n      \"@typescript-eslint/no-unused-vars\": \"error\"\n    }\n  },\n  \"standardx\": {\n    \"parser\": \"@typescript-eslint/parser\",\n    \"plugins\": [ \"@typescript-eslint/eslint-plugin\" ]\n  }\n}\n```\n\nWith that in `package.json`, you can run:\n\n```bash\nstandardx **/*.ts\n```\n\nAnd you probably should remove `standard` too to avoid confusion where it's used by mistake\ninstead of `standardx`.\n\n```bash\nnpm uninstall standard\n```\n\n## What about Mocha, Jest, Jasmine, QUnit, etc?\n\nTo support mocha in test files, add this to the top of the test files:\n\n```js\n/* eslint-env mocha */\n```\n\nOr, run:\n\n```bash\n$ standard --env mocha\n```\n\nWhere `mocha` can be one of `jest`, `jasmine`, `qunit`, `phantomjs`, and so on. To see a\nfull list, check ESLint's\n[specifying environments](http://eslint.org/docs/user-guide/configuring.html#specifying-environments)\ndocumentation. For a list of what globals are available for these environments,\ncheck the\n[globals](https://github.com/sindresorhus/globals/blob/master/globals.json) npm\nmodule.\n\n*Note: `env` and `envs` are equivalent.*\n\n## What about Web Workers and Service Workers?\n\nAdd this to the top of web worker files:\n\n```js\n/* eslint-env worker */\n```\n\nThis lets `standard` (as well as humans reading the code) know that `self` is a\nglobal in web worker code.\n\nFor Service workers, add this instead:\n\n```js\n/* eslint-env serviceworker */\n```\n\n## Can I check code inside of Markdown or HTML files?\n\nTo check code inside Markdown files, use [`standard-markdown`](https://www.npmjs.com/package/standard-markdown).\n\nAlternatively, there are ESLint plugins that can check code inside Markdown, HTML,\nand many other types of language files:\n\nTo check code inside Markdown files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-markdown\n```\n\nThen, to check JS that appears inside code blocks, run:\n\n```bash\n$ standard --plugin markdown '**/*.md'\n```\n\nTo check code inside HTML files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-html\n```\n\nThen, to check JS that appears inside `<script>` tags, run:\n\n```bash\n$ standard --plugin html '**/*.html'\n```\n\n## Is there a Git `pre-commit` hook?\n\nFunny you should ask!\n\n```bash\n#!/bin/bash\n\n# Ensure all JavaScript files staged for commit pass standard code style\nfunction xargs-r() {\n  # Portable version of \"xargs -r\". The -r flag is a GNU extension that\n  # prevents xargs from running if there are no input files.\n  if IFS= read -r -d $'\\n' path; then\n    { echo \"$path\"; cat; } | xargs $@\n  fi\n}\ngit diff --name-only --cached --relative | grep '\\.jsx\\?$' | sed 's/[^[:alnum:]]/\\\\&/g' | xargs-r -E '' -t standard\nif [[ $? -ne 0 ]]; then\n  echo 'JavaScript Standard Style errors were detected. Aborting commit.'\n  exit 1\nfi\n```\n\n## How do I make the output all colorful and pretty?\n\nThe built-in output is simple and straightforward, but if you like shiny things,\ninstall [snazzy](https://www.npmjs.com/package/snazzy):\n\n```bash\n$ npm install snazzy\n```\n\nAnd run:\n\n```bash\n$ standard --verbose | snazzy\n```\n\nThere's also [standard-tap](https://www.npmjs.com/package/standard-tap),\n[standard-json](https://www.npmjs.com/package/standard-json),\n[standard-reporter](https://www.npmjs.com/package/standard-reporter), and\n[standard-summary](https://www.npmjs.com/package/standard-summary).\n\n## Is there a Node.js API?\n\nYes!\n\n### `standard.lintText(text, [opts], callback)`\n\nLint the provided source `text`. An `opts` object may be provided:\n\n```js\n{\n  cwd: '',      // current working directory (default: process.cwd())\n  filename: '', // path of the file containing the text being linted (optional, though some eslint plugins require it)\n  fix: false,   // automatically fix problems\n  globals: [],  // custom global variables to declare\n  plugins: [],  // custom eslint plugins\n  envs: [],     // custom eslint environment\n  parser: ''    // custom js parser (e.g. babel-eslint)\n}\n```\n\nAdditional options may be loaded from a `package.json` if it's found for the\ncurrent working directory.\n\nThe `callback` will be called with an `Error` and `results` object.\n\nThe `results` object will contain the following properties:\n\n```js\nvar results = {\n  results: [\n    {\n      filePath: '',\n      messages: [\n        { ruleId: '', message: '', line: 0, column: 0 }\n      ],\n      errorCount: 0,\n      warningCount: 0,\n      output: '' // fixed source code (only present with {fix: true} option)\n    }\n  ],\n  errorCount: 0,\n  warningCount: 0\n}\n```\n\n### `results = standard.lintTextSync(text, [opts])`\n\nSynchronous version of `standard.lintText()`. If an error occurs, an exception is\nthrown. Otherwise, a `results` object is returned.\n\n### `standard.lintFiles(files, [opts], callback)`\n\nLint the provided `files` globs. An `opts` object may be provided:\n\n```js\nvar opts = {\n  ignore: [],   // file globs to ignore (has sane defaults)\n  cwd: '',      // current working directory (default: process.cwd())\n  fix: false,   // automatically fix problems\n  globals: [],  // global variables to declare\n  plugins: [],  // eslint plugins\n  envs: [],     // eslint environment\n  parser: ''    // js parser (e.g. babel-eslint)\n}\n```\n\nThe `callback` will be called with an `Error` and `results` object (same as above).\n\n## How do I contribute to StandardJS?\n\nContributions are welcome! Check out the [issues](https://github.com/standard/standard/issues) or the [PRs](https://github.com/standard/standard/pulls), and make your own if you want something that you don't see there.\n\nWant to chat? Join contributors on IRC in the `#standard` channel on freenode.\n\nHere are some important packages in the `standard` ecosystem:\n\n- **[standard](https://github.com/standard/standard)** - this repo\n  - **[standard-engine](https://github.com/standard/standard-engine)** - cli engine for arbitrary eslint rules\n  - **[eslint-config-standard](https://github.com/standard/eslint-config-standard)** - eslint rules for standard\n  - **[eslint-config-standard-jsx](https://github.com/standard/eslint-config-standard-jsx)** - eslint rules for standard (JSX)\n  - **[eslint-plugin-standard](https://github.com/standard/eslint-plugin-standard)** - custom eslint rules for standard (not part of eslint core)\n  - **[eslint](https://github.com/eslint/eslint)** - the linter that powers standard\n- **[snazzy](https://github.com/standard/snazzy)** - pretty terminal output for standard\n- **[standard-www](https://github.com/standard/standard-www)** - code for https://standardjs.com\n- **[semistandard](https://github.com/standard/semistandard)** - standard, with semicolons (if you must)\n- **[standardx](https://github.com/standard/standardx)** - standard, with custom tweaks\n\nThere are also many **[editor plugins](#are-there-text-editor-plugins)**, a list of\n**[npm packages that use `standard`](https://github.com/standard/standard-packages)**,\nand an awesome list of\n**[packages in the `standard` ecosystem](https://github.com/standard/awesome-standard)**.\n\n## Security Policies and Procedures\n\nThe `standard` team and community take all security bugs in `standard` seriously. Please see our [security policies and procedures](https://github.com/standard/.github/blob/master/SECURITY.md) document to learn how to report issues.\n\n## License\n\n[MIT](LICENSE). Copyright (c) [Feross Aboukhadijeh](https://feross.org)."}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 196309}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 992957}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 3157445}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 5823896}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 10641177}], "dependentsCount": 399, "starsCount": 162}, "github": {"homepage": "https://standardjs.com", "starsCount": 23926, "forksCount": 1845, "subscribersCount": 475, "issues": {"count": 1509, "openCount": 133, "distribution": {"3600": 255, "10800": 104, "32400": 129, "97200": 176, "291600": 132, "874800": 135, "2624400": 136, "7873200": 136, "23619600": 174, "70858800": 85, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 972}, {"username": "devjin0617", "commitsCount": 42}, {"username": "Flet", "commitsCount": 31}, {"username": "munierujp", "commitsCount": 31}, {"username": "greenkeeper[bot]", "commitsCount": 17}, {"username": "Asoul", "commitsCount": 15}, {"username": "LinusU", "commitsCount": 11}, {"username": "falmar", "commitsCount": 11}, {"username": "maxogden", "commitsCount": 10}, {"username": "greenkeeperio-bot", "commitsCount": 9}, {"username": "rstacruz", "commitsCount": 9}, {"username": "RichardLitt", "commitsCount": 5}, {"username": "ahmadnassri", "commitsCount": 5}, {"username": "watson", "commitsCount": 5}, {"username": "dangen-effy", "commitsCount": 4}, {"username": "imrobinized", "commitsCount": 4}, {"username": "joshuacolvin", "commitsCount": 4}, {"username": "kohashi", "commitsCount": 4}, {"username": "ricardofbarros", "commitsCount": 4}, {"username": "wayou", "commitsCount": 4}, {"username": "capaj", "commitsCount": 3}, {"username": "chenxsan", "commitsCount": 3}, {"username": "pablopunk", "commitsCount": 3}, {"username": "reggi", "commitsCount": 3}, {"username": "tusharmath", "commitsCount": 3}, {"username": "yoshuawuyts", "commitsCount": 3}, {"username": "HCLonely", "commitsCount": 2}, {"username": "LitoMore", "commitsCount": 2}, {"username": "alexmoreno", "commitsCount": 2}, {"username": "bcomnes", "commitsCount": 2}, {"username": "brandonhorst", "commitsCount": 2}, {"username": "charliegerard", "commitsCount": 2}, {"username": "coderberry", "commitsCount": 2}, {"username": "daper", "commitsCount": 2}, {"username": "ehmicky", "commitsCount": 2}, {"username": "gustavnikolaj", "commitsCount": 2}, {"username": "helloitsjoe", "commitsCount": 2}, {"username": "jelz", "commitsCount": 2}, {"username": "mafintosh", "commitsCount": 2}, {"username": "mightyiam", "commitsCount": 2}, {"username": "mnquintana", "commitsCount": 2}, {"username": "prigara", "commitsCount": 2}, {"username": "sonicdoe", "commitsCount": 2}, {"username": "theoomoregbee", "commitsCount": 2}, {"username": "timoxley", "commitsCount": 2}, {"username": "tzmanics", "commitsCount": 2}, {"username": "ungoldman", "commitsCount": 2}, {"username": "vweevers", "commitsCount": 2}, {"username": "zigomir", "commitsCount": 2}, {"username": "AlexxNica", "commitsCount": 1}, {"username": "Amabel", "commitsCount": 1}, {"username": "CafeLungo", "commitsCount": 1}, {"username": "Gerhut", "commitsCount": 1}, {"username": "LionNatsu", "commitsCount": 1}, {"username": "MarvinJWendt", "commitsCount": 1}, {"username": "Nishisonic", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "Tommytrg", "commitsCount": 1}, {"username": "Vrq", "commitsCount": 1}, {"username": "aahventures", "commitsCount": 1}, {"username": "adriantrunzo", "commitsCount": 1}, {"username": "ahimta", "commitsCount": 1}, {"username": "aichholzer", "commitsCount": 1}, {"username": "aladdin-add", "commitsCount": 1}, {"username": "andresattler", "commitsCount": 1}, {"username": "anteriovieira", "commitsCount": 1}, {"username": "austinorth", "commitsCount": 1}, {"username": "callmecavs", "commitsCount": 1}, {"username": "ciffelia", "commitsCount": 1}, {"username": "cnwangjie", "commitsCount": 1}, {"username": "davecarlson", "commitsCount": 1}, {"username": "despia", "commitsCount": 1}, {"username": "didilinkin", "commitsCount": 1}, {"username": "domdomegg", "commitsCount": 1}, {"username": "eladchen", "commitsCount": 1}, {"username": "elowes", "commitsCount": 1}, {"username": "ematipico", "commitsCount": 1}, {"username": "epixian", "commitsCount": 1}, {"username": "erikmueller", "commitsCount": 1}, {"username": "fa7ad", "commitsCount": 1}, {"username": "html5cat", "commitsCount": 1}, {"username": "iaurg", "commitsCount": 1}, {"username": "igorsantos07", "commitsCount": 1}, {"username": "jaredreich", "commitsCount": 1}, {"username": "javiermendozain", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "joshuagoran", "commitsCount": 1}, {"username": "jtrussell", "commitsCount": 1}, {"username": "lbbaldassari", "commitsCount": 1}, {"username": "lukasoppermann", "commitsCount": 1}, {"username": "mackermans", "commitsCount": 1}, {"username": "nyuszika7h", "commitsCount": 1}, {"username": "pe4cey", "commitsCount": 1}, {"username": "peterjenkins", "commitsCount": 1}, {"username": "termosa", "commitsCount": 1}, {"username": "tonyfinn", "commitsCount": 1}, {"username": "tumobi", "commitsCount": 1}, {"username": "xiaoyu2er", "commitsCount": 1}, {"username": "yanxi-me", "commitsCount": 1}, {"username": "yyjazsf", "commitsCount": 1}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 2}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 17}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 213}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 32374, "testsSize": 5296, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/standard/master.svg", "service": "https://api.travis-ci.org/standard/standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/standard/master.svg", "content": "https://img.shields.io/travis/standard/standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/standard.svg", "shields": "https://img.shields.io/npm/v/standard.svg", "content": "https://img.shields.io/npm/v/standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-config-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig"], "outdatedDependencies": {"eslint-plugin-node": {"required": "~10.0.0", "stable": "11.1.0", "latest": "11.1.0"}, "eslint-plugin-react": {"required": "~7.14.2", "stable": "7.20.0", "latest": "7.20.0"}, "eslint-plugin-import": {"required": "~2.18.0", "stable": "2.21.2", "latest": "2.21.2"}, "eslint": {"required": "~6.8.0", "stable": "7.3.0", "latest": "7.3.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.5, "branding": 0.85}, "popularity": {"communityInterest": 26508, "downloadsCount": 1052481.6666666667, "downloadsAcceleration": 1786.4313165905623, "dependentsCount": 399}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.909527397260274, "openIssues": 1, "issuesDistribution": 0.24833624123315673}}, "score": {"final": 0.7654711600968059, "detail": {"quality": 0.8838631477522659, "popularity": 0.5327609195205482, "maintenance": 0.8967025541112411}}}}, {"@types/mocha": {"analyzedAt": "2019-05-30T18:06:39.562Z", "collected": {"metadata": {"name": "@types/mocha", "scope": "types", "version": "5.2.7", "description": "TypeScript definitions for mocha", "date": "2019-05-30T18:06:22.403Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Kazi Manzur Rashid", "url": "https://github.com/kazimanzurrashid"}, {"name": "otiai10", "url": "https://github.com/otiai10"}, {"name": "jt000", "url": "https://github.com/jt000"}, {"name": "Vadim Macagon", "url": "https://github.com/enlight"}, {"name": "Andrew Bradley", "url": "https://github.com/cspotcode"}, {"name": "Dmitrii Sorin", "url": "https://github.com/1999"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/mocha"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fmocha", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-04-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 0}, {"from": "2018-12-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 1}, {"from": "2018-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 6}, {"from": "2017-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 16}], "readme": "# Installation\r\n> `npm install --save @types/mocha`\r\n\r\n# Summary\r\nThis package contains type definitions for mocha ( https://mochajs.org ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/mocha\r\n\r\nAdditional Details\r\n * Last updated: Thu, 30 May 2019 18:05:34 GMT\r\n * Dependencies: none\r\n * Global values: Mocha, after, afterEach, before, beforeEach, context, describe, it, mocha, run, setup, specify, suite, suiteSetup, suiteTeardown, teardown, test, xcontext, xdescribe, xit, xspecify\r\n\r\n# Credits\r\nThese definitions were written by Kazi Manzur Rashid <https://github.com/kazimanzurrashid>, otiai10 <https://github.com/otiai10>, jt000 <https://github.com/jt000>, Vadim Macagon <https://github.com/enlight>, Andrew Bradley <https://github.com/cspotcode>, Dmitrii Sorin <https://github.com/1999>."}, "npm": {"downloads": [{"from": "2019-05-29T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 134423}, {"from": "2019-05-23T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 665890}, {"from": "2019-04-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 3122423}, {"from": "2019-03-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 9313436}, {"from": "2018-12-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 17203153}, {"from": "2018-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 29667349}], "dependentsCount": 367, "starsCount": 2}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 2, "downloadsCount": 3104478.6666666665, "downloadsAcceleration": 9273.255612633184, "dependentsCount": 367}, "maintenance": {"releasesFrequency": 0.6090753424657535, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-mocha-stx2dpudtda/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-04-29T23:45:14.388Z"}, "score": {"final": 0.3006064363461506, "detail": {"quality": 0.19891579971391418, "popularity": 0.3599352698459417, "maintenance": 0.3284410056739908}}}}, {"yargs": {"analyzedAt": "2020-07-01T05:06:03.528Z", "collected": {"metadata": {"name": "yargs", "scope": "unscoped", "version": "15.3.1", "description": "yargs the modern, pirate-themed, successor to optimist.", "keywords": ["argument", "args", "option", "parser", "parsing", "cli", "command"], "date": "2020-03-16T07:34:00.988Z", "publisher": {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}, "maintainers": [{"username": "bcoe", "email": "bencoe@gmail.com"}, {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}], "contributors": [{"name": "Yargs Contributors", "url": "https://github.com/yargs/yargs/graphs/contributors"}], "repository": {"type": "git", "url": "git+https://github.com/yargs/yargs.git"}, "links": {"npm": "https://www.npmjs.com/package/yargs", "homepage": "https://yargs.js.org/", "repository": "https://github.com/yargs/yargs", "bugs": "https://github.com/yargs/yargs/issues"}, "license": "MIT", "dependencies": {"cliui": "^6.0.0", "decamelize": "^1.2.0", "find-up": "^4.1.0", "get-caller-file": "^2.0.1", "require-directory": "^2.1.1", "require-main-filename": "^2.0.0", "set-blocking": "^2.0.0", "string-width": "^4.2.0", "which-module": "^2.0.0", "y18n": "^4.0.0", "yargs-parser": "^18.1.1"}, "devDependencies": {"c8": "^7.0.0", "chai": "^4.2.0", "chalk": "^3.0.0", "coveralls": "^3.0.9", "cpr": "^3.0.1", "cross-spawn": "^7.0.0", "es6-promise": "^4.2.5", "hashish": "0.0.4", "mocha": "^7.0.0", "rimraf": "^3.0.0", "standard": "^14.0.0", "which": "^2.0.0", "yargs-test-extends": "^1.0.1"}, "releases": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 0}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 3}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 14}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 24}, {"from": "2018-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 35}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-30T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 8672041}, {"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 44901281}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 190415407}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 570430260}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1075382623}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1873563690}], "dependentsCount": 16768, "starsCount": 514}, "github": {"homepage": "http://yargs.js.org/", "starsCount": 7817, "forksCount": 757, "subscribersCount": 78, "issues": {"count": 1676, "openCount": 244, "distribution": {"3600": 216, "10800": 68, "32400": 101, "97200": 150, "291600": 171, "874800": 246, "2624400": 174, "7873200": 155, "23619600": 121, "70858800": 139, "212576400": 135}, "isDisabled": false}, "contributors": [{"username": "bcoe", "commitsCount": 242}, {"username": "substack", "commitsCount": 145}, {"username": "mleguen", "commitsCount": 37}, {"username": "nexdrew", "commitsCount": 36}, {"username": "maxrimue", "commitsCount": 23}, {"username": "greenkeeperio-bot", "commitsCount": 22}, {"username": "lrlna", "commitsCount": 18}, {"username": "elas7", "commitsCount": 15}, {"username": "nylen", "commitsCount": 11}, {"username": "chrisn", "commitsCount": 10}, {"username": "indexzero", "commitsCount": 9}, {"username": "jfhbrook", "commitsCount": 8}, {"username": "disjukr", "commitsCount": 7}, {"username": "osher", "commitsCount": 7}, {"username": "aorinevo", "commitsCount": 6}, {"username": "coreyfarrell", "commitsCount": 6}, {"username": "roryokane", "commitsCount": 6}, {"username": "feyzo", "commitsCount": 5}, {"username": "laggingreflex", "commitsCount": 5}, {"username": "rilut", "commitsCount": 5}, {"username": "tschaub", "commitsCount": 5}, {"username": "zkat", "commitsCount": 5}, {"username": "cameronhunter", "commitsCount": 4}, {"username": "codemonkey3045", "commitsCount": 4}, {"username": "coderarity", "commitsCount": 4}, {"username": "evocateur", "commitsCount": 4}, {"username": "kamilogorek", "commitsCount": 4}, {"username": "sgentle", "commitsCount": 4}, {"username": "trevorlinton", "commitsCount": 4}, {"username": "Khaledgarbaya", "commitsCount": 3}, {"username": "LinusU", "commitsCount": 3}, {"username": "LoicMahieu", "commitsCount": 3}, {"username": "Morishiri", "commitsCount": 3}, {"username": "novemberborn", "commitsCount": 3}, {"username": "oti", "commitsCount": 3}, {"username": "pirxpilot", "commitsCount": 3}, {"username": "qiu8310", "commitsCount": 3}, {"username": "raine", "commitsCount": 3}, {"username": "severen", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "sudo-suhas", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "DeadAlready", "commitsCount": 2}, {"username": "ashi009", "commitsCount": 2}, {"username": "babhishek21", "commitsCount": 2}, {"username": "bwagner", "commitsCount": 2}, {"username": "cg-cnu", "commitsCount": 2}, {"username": "chbrown", "commitsCount": 2}, {"username": "dogboydog", "commitsCount": 2}, {"username": "fizker", "commitsCount": 2}, {"username": "forivall", "commitsCount": 2}, {"username": "glenwinters", "commitsCount": 2}, {"username": "iarna", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jandockx", "commitsCount": 2}, {"username": "jdbruijn", "commitsCount": 2}, {"username": "kemitchell", "commitsCount": 2}, {"username": "madrisan", "commitsCount": 2}, {"username": "p0v1n0m", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "phanning", "commitsCount": 2}, {"username": "pvdlg", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "soulgalore", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "AndrewFinlay", "commitsCount": 1}, {"username": "BigBlueHat", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "G-Rath", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "RobinCsl", "commitsCount": 1}, {"username": "aakti", "commitsCount": 1}, {"username": "andrewdotn", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "cherryblossom000", "commitsCount": 1}, {"username": "cspotcode", "commitsCount": 1}, {"username": "dahim2006", "commitsCount": 1}, {"username": "dapplion", "commitsCount": 1}, {"username": "federicojasson", "commitsCount": 1}, {"username": "hogashi", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jaredgreen", "commitsCount": 1}, {"username": "jean-emmanuel", "commitsCount": 1}, {"username": "juergba", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "kidonng", "commitsCount": 1}, {"username": "mathielo", "commitsCount": 1}, {"username": "micha149", "commitsCount": 1}, {"username": "mtreinik", "commitsCount": 1}, {"username": "petrgrishin", "commitsCount": 1}, {"username": "rluvaton", "commitsCount": 1}, {"username": "royra", "commitsCount": 1}, {"username": "ruyadorno", "commitsCount": 1}, {"username": "rvolgers", "commitsCount": 1}, {"username": "sliftist", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "yxliang01", "commitsCount": 1}, {"username": "zypA13510", "commitsCount": 1}], "commits": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 3}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 28}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 74}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 151}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 337218, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "standard"], "coverage": 1, "outdatedDependencies": {"decamelize": {"required": "^1.2.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 0.8181818181818181, "branding": 0.4}, "popularity": {"communityInterest": 9264, "downloadsCount": 190143420, "downloadsAcceleration": 513856.43198249605, "dependentsCount": 16768}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9816438356164384, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8305990072419005, "detail": {"quality": 0.9408301727656898, "popularity": 0.900047564518069, "maintenance": 0.6666665938024842}}}}, {"eslint-loader": {"analyzedAt": "2020-06-07T19:18:25.023Z", "collected": {"metadata": {"name": "eslint-loader", "scope": "unscoped", "version": "4.0.2", "description": "A ESlint loader for webpack", "keywords": ["eslint", "lint", "linter", "loader", "webpack"], "date": "2020-04-24T20:00:05.031Z", "author": {"name": "Maxime Thirouin"}, "publisher": {"username": "ricardogobbosouza", "email": "ricardogobbosouza@yahoo.com.br"}, "maintainers": [{"username": "moox", "email": "m@moox.io"}], "contributors": [{"name": "Ricardo Gobbo de Souza", "email": "ricardogobbosouza@yahoo.com.br"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/eslint-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-loader", "homepage": "https://github.com/webpack-contrib/eslint-loader", "repository": "https://github.com/webpack-contrib/eslint-loader", "bugs": "https://github.com/webpack-contrib/eslint-loader/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^3.3.1", "fs-extra": "^8.1.0", "loader-utils": "^2.0.0", "object-hash": "^2.0.3", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.0", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-eslint": "^10.1.0", "babel-jest": "^25.2.6", "chokidar": "^3.3.1", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-friendly-formatter": "^4.0.1", "eslint-plugin-import": "^2.20.2", "husky": "^4.2.3", "jest": "^25.2.6", "jest-junit": "^10.0.0", "lint-staged": "^10.1.1", "npm-run-all": "^4.1.5", "prettier": "^2.0.2", "standard-version": "^7.1.0", "webpack": "^4.42.1"}, "peerDependencies": {"eslint": "^6.0.0 || ^7.0.0", "webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/eslint/eslint\"><img width=\"200\" height=\"200\" src=\"https://cdn.worldvectorlogo.com/logos/eslint.svg\"></a>\n  <a href=\"https://github.com/webpack/webpack\"><img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\"></a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# eslint-loader\n\n> A ESlint loader for webpack\n\n## Install\n\n```bash\nnpm install eslint-loader --save-dev\n```\n\n**Note**: You also need to install `eslint` from npm, if you haven't already:\n\n```bash\nnpm install eslint --save-dev\n```\n\n## Usage\n\nIn your webpack configuration:\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          // eslint options (if necessary)\n        },\n      },\n    ],\n  },\n  // ...\n};\n```\n\nWhen using with transpiling loaders (like `babel-loader`), make sure they are in correct order (bottom to top). Otherwise files will be checked after being processed by `babel-loader`:\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: ['babel-loader', 'eslint-loader'],\n      },\n    ],\n  },\n  // ...\n};\n```\n\nTo be safe, you can use `enforce: 'pre'` section to check source files, not modified by other loaders (like `babel-loader`):\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        enforce: 'pre',\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader',\n      },\n    ],\n  },\n  // ...\n};\n```\n\n## Options\n\nYou can pass [eslint options](http://eslint.org/docs/developer-guide/nodejs-api#cliengine) using standard webpack [loader options](https://webpack.js.org/configuration/module/#useentry).\n\n**Note**: That the config option you provide will be passed to the `CLIEngine`. This is a different set of options than what you'd specify in `package.json` or `.eslintrc`. See the [eslint docs](http://eslint.org/docs/developer-guide/nodejs-api#cliengine) for more detail.\n\n### `cache`\n\n- Type: `Boolean|String`\n- Default: `false`\n\nThis option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.\n\nThis can either be a `boolean` value or the cache directory path(ex: `'./.eslint-loader-cache'`).\n\nIf `cache: true` is used, the cache is written to the `./node_modules/.cache/eslint-loader` directory. This is the recommended usage.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          cache: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `eslintPath`\n\n- Type: `String`\n- Default: `eslint`\n\nPath to `eslint` instance that will be used for linting. If the `eslintPath` is a folder like a official eslint, or specify a `formatter` option. Now you dont have to install `eslint`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          eslintPath: path.join(__dirname, 'reusable-eslint'),\n        },\n      },\n    ],\n  },\n};\n```\n\n### `fix`\n\n- Type: `Boolean`\n- Default: `false`\n\nThis option will enable [ESLint autofix feature](http://eslint.org/docs/user-guide/command-line-interface#fix).\n\n**Be careful: this option will change source files.**\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          fix: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `formatter`\n\n- Type: `String|Function`\n- Default: `stylish`\n\nThis option accepts a function that will have one argument: an array of eslint messages (object). The function must return the output as a string. You can use official [eslint formatters](https://eslint.org/docs/user-guide/formatters/).\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          // several examples !\n\n          // default value\n          formatter: 'stylish',\n\n          // community formatter\n          formatter: require('eslint-friendly-formatter'),\n\n          // custom formatter\n          formatter: function (results) {\n            // `results` format is available here\n            // http://eslint.org/docs/developer-guide/nodejs-api.html#executeonfiles()\n\n            // you should return a string\n            // DO NOT USE console.*() directly !\n            return 'OUTPUT';\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### Errors and Warning\n\n**By default the loader will auto adjust error reporting depending on eslint errors/warnings counts.** You can still force this behavior by using `emitError` **or** `emitWarning` options:\n\n#### `emitError`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill always return errors, if this option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          emitError: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `emitWarning`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill always return warnings, if option is set to `true`. **If you're using hot module replacement, you may wish to enable this in development, or else updates will be skipped when there's an eslint error.**\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          emitWarning: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `failOnError`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill cause the module build to fail if there are any errors, if option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          failOnError: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `failOnWarning`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill cause the module build to fail if there are any warnings, if option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          failOnWarning: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `quiet`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill process and report errors only and ignore warnings, if this option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          quiet: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `outputReport`\n\n- Type: `Boolean|Object`\n- Default: `false`\n\nWrite the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI.\n\nThe `filePath` is an absolute path or relative to the webpack config: `output.path`. You can pass in a different `formatter` for the output file, if none is passed in the default/configured formatter will be used.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          outputReport: {\n            filePath: 'checkstyle.xml',\n            formatter: 'checkstyle',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n## Gotchas\n\n### NoEmitOnErrorsPlugin\n\n`NoEmitOnErrorsPlugin` is now automatically enabled in webpack 4, when mode is either unset, or set to production. So even ESLint warnings will fail the build. No matter what error settings are used for `eslint-loader`, except if `emitWarning` enabled.\n\n### Defining `configFile` or using `eslint -c path/.eslintrc`\n\nBear in mind that when you define `configFile`, `eslint` doesn't automatically look for `.eslintrc` files in the directory of the file to be linted. More information is available in official eslint documentation in section [_Using Configuration Files_](http://eslint.org/docs/user-guide/configuring#using-configuration-files). See [#129](https://github.com/webpack-contrib/eslint-loader/issues/129).\n\n## Changelog\n\n[Changelog](CHANGELOG.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/eslint-loader.svg\n[npm-url]: https://npmjs.com/package/eslint-loader\n[node]: https://img.shields.io/node/v/eslint-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/eslint-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/eslint-loader\n[tests]: https://dev.azure.com/webpack-contrib/eslint-loader/_apis/build/status/webpack-contrib.eslint-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/eslint-loader/_build/latest?definitionId=4&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/eslint-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/eslint-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=eslint-loader\n[size-url]: https://packagephobia.now.sh/result?p=eslint-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 206221}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3532317}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14491292}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 43239713}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 75817150}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 136143348}], "dependentsCount": 4109, "starsCount": 27}, "github": {"starsCount": 1047, "forksCount": 131, "subscribersCount": 18, "issues": {"count": 331, "openCount": 6, "distribution": {"3600": 39, "10800": 20, "32400": 24, "97200": 44, "291600": 37, "874800": 40, "2624400": 33, "7873200": 26, "23619600": 33, "70858800": 32, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "MoOx", "commitsCount": 81}, {"username": "ricardogobbosouza", "commitsCount": 37}, {"username": "evilebottnawi", "commitsCount": 7}, {"username": "wrakky", "commitsCount": 5}, {"username": "sudo-suhas", "commitsCount": 4}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "JamesHenry", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "edmorley", "commitsCount": 2}, {"username": "eschablowski", "commitsCount": 2}, {"username": "genintho", "commitsCount": 2}, {"username": "nkbt", "commitsCount": 2}, {"username": "trungdq88", "commitsCount": 2}, {"username": "viankakrisna", "commitsCount": 2}, {"username": "Alex-Sokolov", "commitsCount": 1}, {"username": "HDuck", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "NickHeiner", "commitsCount": 1}, {"username": "PoziWorld", "commitsCount": 1}, {"username": "Semigradsky", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "aaharu", "commitsCount": 1}, {"username": "alexsunxl", "commitsCount": 1}, {"username": "barraponto", "commitsCount": 1}, {"username": "bjornbytes", "commitsCount": 1}, {"username": "brigand", "commitsCount": 1}, {"username": "buihdk", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "christianhg", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "davidfou", "commitsCount": 1}, {"username": "deryni", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "farneman", "commitsCount": 1}, {"username": "fknussel", "commitsCount": 1}, {"username": "hinok", "commitsCount": 1}, {"username": "jameslnewell", "commitsCount": 1}, {"username": "jaridmargolin", "commitsCount": 1}, {"username": "julmot", "commitsCount": 1}, {"username": "lancefisher", "commitsCount": 1}, {"username": "lmnsg", "commitsCount": 1}, {"username": "maxhauser", "commitsCount": 1}, {"username": "mgtitimoli", "commitsCount": 1}, {"username": "neokeld", "commitsCount": 1}, {"username": "nicolaslt", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "vidhill", "commitsCount": 1}, {"username": "vinodc", "commitsCount": 1}, {"username": "waiterZen", "commitsCount": 1}, {"username": "werme", "commitsCount": 1}, {"username": "wonism", "commitsCount": 1}, {"username": "yamalight", "commitsCount": 1}, {"username": "yhostc", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 18}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 51}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 9859, "testsSize": 19415, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-loader.svg", "shields": "https://img.shields.io/npm/v/eslint-loader.svg", "content": "https://img.shields.io/npm/v/eslint-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/eslint-loader.svg", "service": "https://david-dm.org/webpack-contrib/eslint-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/eslint-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/eslint-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"fs-extra": {"required": "^8.1.0", "stable": "9.0.1", "latest": "9.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.991, "health": 0.75, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1278, "downloadsCount": 14413237.666666666, "downloadsAcceleration": 39564.62690258751, "dependentsCount": 4109}, "maintenance": {"releasesFrequency": 0.9600171232876713, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8781952813425147, "detail": {"quality": 0.9881396916998894, "popularity": 0.6622156177135258, "maintenance": 0.999936878950897}}}}, {"rollup-plugin-commonjs": {"analyzedAt": "2020-06-13T03:37:30.360Z", "collected": {"metadata": {"name": "rollup-plugin-commonjs", "scope": "unscoped", "version": "10.1.0", "description": "Convert CommonJS modules to ES2015", "date": "2019-08-27T06:47:22.227Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "shellscape", "email": "andrew@shellscape.org"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-commonjs.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-commonjs", "homepage": "https://github.com/rollup/rollup-plugin-commonjs", "repository": "https://github.com/rollup/rollup-plugin-commonjs", "bugs": "https://github.com/rollup/rollup-plugin-commonjs/issues"}, "license": "MIT", "dependencies": {"estree-walker": "^0.6.1", "is-reference": "^1.1.2", "magic-string": "^0.25.2", "resolve": "^1.11.0", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.4.5", "@babel/preset-env": "^7.4.5", "@babel/register": "^7.4.4", "acorn": "^6.1.1", "eslint": "^6.0.1", "eslint-plugin-import": "^2.18.0", "husky": "^2.4.1", "lint-staged": "^8.2.1", "locate-character": "^2.0.5", "mocha": "^6.1.4", "prettier": "^1.18.2", "require-relative": "^0.8.7", "rollup": "^1.16.2", "rollup-plugin-babel": "^4.3.3", "rollup-plugin-json": "^4.0.0", "rollup-plugin-node-resolve": "^5.1.0", "shx": "^0.3.2", "source-map": "^0.6.1", "source-map-support": "^0.5.12", "typescript": "^3.5.2"}, "peerDependencies": {"rollup": ">=1.12.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 19}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-commonjs.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-commonjs [![Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/rollup/rollup-plugin-commonjs.svg\n[travis]: https://travis-ci.org/rollup/rollup-plugin-commonjs\n\nConvert CommonJS modules to ES6, so they can be included in a Rollup bundle\n\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-commonjs\n```\n\n\n## Usage\n\nTypically, you would use this plugin alongside [rollup-plugin-node-resolve](https://github.com/rollup/rollup-plugin-node-resolve), so that you could bundle your CommonJS dependencies in `node_modules`.\n\n```js\n// rollup.config.js\nimport commonjs from 'rollup-plugin-commonjs';\nimport nodeResolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  plugins: [\n    nodeResolve({\n      jsnext: true,\n      main: true\n    }),\n\n    commonjs({\n      // non-CommonJS modules will be ignored, but you can also\n      // specifically include/exclude files\n      include: 'node_modules/**',  // Default: undefined\n      exclude: [ 'node_modules/foo/**', 'node_modules/bar/**' ],  // Default: undefined\n      // these values can also be regular expressions\n      // include: /node_modules/\n\n      // search for files other than .js files (must already\n      // be transpiled by a previous plugin!)\n      extensions: [ '.js', '.coffee' ],  // Default: [ '.js' ]\n\n      // if true then uses of `global` won't be dealt with by this plugin\n      ignoreGlobal: false,  // Default: false\n\n      // if false then skip sourceMap generation for CommonJS modules\n      sourceMap: false,  // Default: true\n\n      // explicitly specify unresolvable named exports\n      // (see below for more details)\n      namedExports: { 'react': ['createElement', 'Component' ] },  // Default: undefined\n\n      // sometimes you have to leave require statements\n      // unconverted. Pass an array containing the IDs\n      // or a `id => boolean` function. Only use this\n      // option if you know what you're doing!\n      ignore: [ 'conditional-runtime-dependency' ]\n    })\n  ]\n};\n```\n\n### Usage with symlinks\n\nSymlinks are common in monorepos and are also created by the `npm link` command. Rollup with `rollup-plugin-node-resolve` resolves modules to their real paths by default. So `include` and `exclude` paths should handle real paths rather than symlinked paths (e.g. `../common/node_modules/**` instead of `node_modules/**`). You may also use a regular expression for `include` that works regardless of base path. Try this:\n\n```\ncommonjs({\n  include: /node_modules/\n})\n```\n\nWhether symlinked module paths are [realpathed](http://man7.org/linux/man-pages/man3/realpath.3.html) or preserved depends on Rollup's `preserveSymlinks` setting, which is false by default, matching Node.js' default behavior. Setting `preserveSymlinks` to true in your Rollup config will cause `import` and `export` to match based on symlinked paths instead.\n\n### Custom named exports\n\nThis plugin will attempt to create named exports, where appropriate, so you can do this...\n\n```js\n// importer.js\nimport { named } from './exporter.js';\n\n// exporter.js\nmodule.exports = { named: 42 }; // or `exports.named = 42;`\n```\n\n...but that's not always possible:\n\n```js\n// importer.js\nimport { named } from 'my-lib';\n\n// my-lib.js\nvar myLib = exports;\nmyLib.named = 'you can\\'t see me';\n```\n\nIn those cases, you can specify custom named exports:\n\n```js\ncommonjs({\n  namedExports: {\n    // left-hand side can be an absolute path, a path\n    // relative to the current directory, or the name\n    // of a module in node_modules\n    'my-lib': [ 'named' ]\n  }\n})\n```\n\n\n## Strict mode\n\nES modules are *always* parsed in strict mode. That means that certain non-strict constructs (like octal literals) will be treated as syntax errors when Rollup parses modules that use them. Some older CommonJS modules depend on those constructs, and if you depend on them your bundle will blow up. There's basically nothing we can do about that.\n\nLuckily, there is absolutely no good reason *not* to use strict mode for everything \u2014 so the solution to this problem is to lobby the authors of those modules to update them.\n\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 70656}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 473083}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2079251}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6685778}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13469357}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26908719}], "dependentsCount": 905, "starsCount": 4}, "github": {"starsCount": 472, "forksCount": 123, "subscribersCount": 14, "issues": {"count": 423, "openCount": 0, "distribution": {"3600": 45, "10800": 14, "32400": 21, "97200": 30, "291600": 27, "874800": 30, "2624400": 39, "7873200": 66, "23619600": 47, "70858800": 74, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "Rich-Harris", "commitsCount": 142}, {"username": "lukastaegert", "commitsCount": 65}, {"username": "TrySound", "commitsCount": 20}, {"username": "guybedford", "commitsCount": 10}, {"username": "MattiasBuelens", "commitsCount": 5}, {"username": "adrianheine", "commitsCount": 5}, {"username": "otolab", "commitsCount": 5}, {"username": "bterlson", "commitsCount": 4}, {"username": "tivac", "commitsCount": 4}, {"username": "unstubbable", "commitsCount": 4}, {"username": "calvinmetcalf", "commitsCount": 3}, {"username": "jthoms1", "commitsCount": 3}, {"username": "mbostock", "commitsCount": 3}, {"username": "MaartenX", "commitsCount": 2}, {"username": "NotWoods", "commitsCount": 2}, {"username": "Victorystick", "commitsCount": 2}, {"username": "dmitrage", "commitsCount": 2}, {"username": "jnields", "commitsCount": 2}, {"username": "mister-what", "commitsCount": 2}, {"username": "nicolashenry", "commitsCount": 2}, {"username": "pshrmn", "commitsCount": 2}, {"username": "shellscape", "commitsCount": 2}, {"username": "DenisCarriere", "commitsCount": 1}, {"username": "Manduro", "commitsCount": 1}, {"username": "NathanielHill", "commitsCount": 1}, {"username": "Torsten85", "commitsCount": 1}, {"username": "Tundon", "commitsCount": 1}, {"username": "aleclarson", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "bhousel", "commitsCount": 1}, {"username": "btd", "commitsCount": 1}, {"username": "caleb531", "commitsCount": 1}, {"username": "creationix", "commitsCount": 1}, {"username": "dralletje", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "jharris4", "commitsCount": 1}, {"username": "lautis", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "madbence", "commitsCount": 1}, {"username": "maranomynet", "commitsCount": 1}, {"username": "marijnh", "commitsCount": 1}, {"username": "ntilwalli", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}, {"username": "porsager", "commitsCount": 1}, {"username": "sormy", "commitsCount": 1}, {"username": "tionkje", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 17}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 4200, "testsSize": 40134, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/rollup/rollup-plugin-commonjs.svg", "service": "https://api.travis-ci.org/rollup/rollup-plugin-commonjs.svg", "shields": "https://img.shields.io/travis/rollup/rollup-plugin-commonjs.svg", "content": "https://img.shields.io/travis/rollup/rollup-plugin-commonjs.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint", "prettier"], "outdatedDependencies": {"estree-walker": {"required": "^0.6.1", "stable": "2.0.1", "latest": "2.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 661, "downloadsCount": 2228592.6666666665, "downloadsAcceleration": -826.7269596651458, "dependentsCount": 905}, "maintenance": {"releasesFrequency": 0.5782534246575343, "commitsFrequency": 0.19561643835616438, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5391959737159376, "detail": {"quality": 0.6061101603150907, "popularity": 0.39807337010731536, "maintenance": 0.6229635602395718}}}}, {"babel-plugin-transform-object-rest-spread": {"analyzedAt": "2020-06-14T11:43:13.570Z", "collected": {"metadata": {"name": "babel-plugin-transform-object-rest-spread", "scope": "unscoped", "version": "6.26.0", "description": "Compile object rest and spread to ES5", "keywords": ["babel-plugin"], "date": "2017-08-16T15:54:11.363Z", "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-object-rest-spread", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-syntax-object-rest-spread": "^6.8.0", "babel-runtime": "^6.26.0"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.22.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-plugin-transform-object-rest-spread\n\n> This plugin allows Babel to transform rest properties for object destructuring assignment and spread properties for object literals.\n\n## Example\n\n### Rest Properties\n\n```js\nlet { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };\nconsole.log(x); // 1\nconsole.log(y); // 2\nconsole.log(z); // { a: 3, b: 4 }\n```\n\n### Spread Properties\n\n```js\nlet n = { x, y, ...z };\nconsole.log(n); // { x: 1, y: 2, a: 3, b: 4 }\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-object-rest-spread\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-object-rest-spread\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-object-rest-spread script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-object-rest-spread\"]\n});\n```\n\n## Options\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nBy default, this plugin uses Babel's `extends` helper which polyfills `Object.assign`. Enabling this option will use `Object.assign` directly.\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\n    [\"transform-object-rest-spread\", { \"useBuiltIns\": true }]\n  ]\n}\n```\n\n**In**\n\n```js\nz = { x, ...y };\n```\n\n**Out**\n\n```js\nz = Object.assign({ x }, y);\n```\n\n## References\n\n* [Proposal: Object Rest/Spread Properties for ECMAScript](https://github.com/sebmarkbage/ecmascript-rest-spread)\n* [Spec](http://sebmarkbage.github.io/ecmascript-rest-spread)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 155829}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3395459}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14040787}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 43061013}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 78165284}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 153044058}], "dependentsCount": 1567, "starsCount": 17}, "github": {"homepage": "https://babel.dev", "starsCount": 36790, "forksCount": 4312, "subscribersCount": 867, "issues": {"count": 11637, "openCount": 793, "distribution": {"3600": 2464, "10800": 918, "32400": 1067, "97200": 1241, "291600": 1061, "874800": 1011, "2624400": 847, "7873200": 819, "23619600": 846, "70858800": 1092, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 157}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 399}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 792}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12333901, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 42085, "downloadsCount": 14353671, "downloadsAcceleration": 15920.058257229844, "dependentsCount": 1567}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23994129349371512}}, "score": {"final": 0.7245495668846541, "detail": {"quality": 0.8881375218233649, "popularity": 0.7386590659641761, "maintenance": 0.5702218207148089}}}}, {"ava": {"analyzedAt": "2020-06-20T12:19:27.225Z", "collected": {"metadata": {"name": "ava", "scope": "unscoped", "version": "3.8.2", "description": "Node.js test runner that lets you develop with confidence.", "keywords": ["\ud83e\udd84", "test", "runner", "testing", "ava", "concurrent", "parallel", "fast", "tdd", "cli-app", "cli", "jest", "mocha", "tape", "tap", "qunit", "jasmine", "babel", "assert", "assertion", "promise", "promises", "async", "function", "await", "generator", "generators", "yield", "observable", "observables", "unit", "snapshot", "expect", "typescript"], "date": "2020-05-08T12:14:10.097Z", "publisher": {"username": "novemberborn", "email": "mark@novemberborn.net"}, "maintainers": [{"username": "novemberborn", "email": "mark@novemberborn.net"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "vdemedes", "email": "vdemedes@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/avajs/ava.git"}, "links": {"npm": "https://www.npmjs.com/package/ava", "homepage": "https://avajs.dev", "repository": "https://github.com/avajs/ava", "bugs": "https://github.com/avajs/ava/issues"}, "license": "MIT", "dependencies": {"@concordance/react": "^2.0.0", "acorn": "^7.1.1", "acorn-walk": "^7.1.1", "ansi-styles": "^4.2.1", "arrgv": "^1.0.2", "arrify": "^2.0.1", "callsites": "^3.1.0", "chalk": "^4.0.0", "chokidar": "^3.4.0", "chunkd": "^2.0.1", "ci-info": "^2.0.0", "ci-parallel-vars": "^1.0.0", "clean-yaml-object": "^0.1.0", "cli-cursor": "^3.1.0", "cli-truncate": "^2.1.0", "code-excerpt": "^2.1.1", "common-path-prefix": "^3.0.0", "concordance": "^4.0.0", "convert-source-map": "^1.7.0", "currently-unhandled": "^0.4.1", "debug": "^4.1.1", "del": "^5.1.0", "emittery": "^0.6.0", "equal-length": "^1.0.0", "figures": "^3.2.0", "globby": "^11.0.0", "ignore-by-default": "^1.0.0", "import-local": "^3.0.2", "indent-string": "^4.0.0", "is-error": "^2.2.2", "is-plain-object": "^3.0.0", "is-promise": "^4.0.0", "lodash": "^4.17.15", "matcher": "^3.0.0", "md5-hex": "^3.0.1", "mem": "^6.1.0", "ms": "^2.1.2", "ora": "^4.0.4", "p-map": "^4.0.0", "picomatch": "^2.2.2", "pkg-conf": "^3.1.0", "plur": "^4.0.0", "pretty-ms": "^7.0.0", "read-pkg": "^5.2.0", "resolve-cwd": "^3.0.0", "slash": "^3.0.0", "source-map-support": "^0.5.19", "stack-utils": "^2.0.2", "strip-ansi": "^6.0.0", "supertap": "^1.0.0", "temp-dir": "^2.0.0", "trim-off-newlines": "^1.0.1", "update-notifier": "^4.1.0", "write-file-atomic": "^3.0.3", "yargs": "^15.3.1"}, "devDependencies": {"@ava/babel": "^1.0.1", "@ava/test": "github:avajs/test", "@babel/plugin-proposal-do-expressions": "^7.8.3", "@sinonjs/fake-timers": "^6.0.1", "ansi-escapes": "^4.3.1", "c8": "^7.1.2", "delay": "^4.3.0", "esm": "^3.2.25", "execa": "^4.0.0", "get-stream": "^5.1.0", "p-event": "^4.1.0", "proxyquire": "^2.1.3", "react": "^16.13.1", "react-test-renderer": "^16.13.1", "replace-string": "^3.0.0", "sinon": "^9.0.2", "source-map-fixtures": "^2.1.0", "tap": "^14.10.7", "temp-write": "^4.0.0", "tempy": "^0.5.0", "touch": "^3.1.0", "tsd": "^0.11.0", "typescript": "^3.8.3", "xo": "^0.30.0", "zen-observable": "^0.8.15"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 9}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 17}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 37}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# <img src=\"media/header.png\" title=\"AVA\" alt=\"AVA logo\" width=\"530\">\n\n[![Build Status](https://travis-ci.org/avajs/ava.svg?branch=master)](https://travis-ci.org/avajs/ava)  [![Coverage Status](https://codecov.io/gh/avajs/ava/branch/master/graph/badge.svg)](https://codecov.io/gh/avajs/ava/branch/master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/ava)\n[![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\nAVA is a test runner for Node.js with a concise API, detailed error output, embrace of new language features and process isolation that lets you develop with confidence \ud83d\ude80\n\nFollow the [AVA Twitter account](https://twitter.com/ava__js) for updates.\n\nRead our [contributing guide](.github/CONTRIBUTING.md) if you're looking to contribute (issues / PRs / etc).\n\n![](media/mini-reporter.gif)\n\n\nTranslations: [Espa\u00f1ol](https://github.com/avajs/ava-docs/blob/master/es_ES/readme.md), [Fran\u00e7ais](https://github.com/avajs/ava-docs/blob/master/fr_FR/readme.md), [Italiano](https://github.com/avajs/ava-docs/blob/master/it_IT/readme.md), [\u65e5\u672c\u8a9e](https://github.com/avajs/ava-docs/blob/master/ja_JP/readme.md), [\ud55c\uad6d\uc5b4](https://github.com/avajs/ava-docs/blob/master/ko_KR/readme.md), [Portugu\u00eas](https://github.com/avajs/ava-docs/blob/master/pt_BR/readme.md), [\u0420\u0443\u0441\u0441\u043a\u0438\u0439](https://github.com/avajs/ava-docs/blob/master/ru_RU/readme.md), [\u7b80\u4f53\u4e2d\u6587](https://github.com/avajs/ava-docs/blob/master/zh_CN/readme.md)\n\n\n## Why AVA?\n\n- Minimal and fast\n- Simple test syntax\n- Runs tests concurrently\n- Enforces writing atomic tests\n- No implicit globals\n- Includes TypeScript definitions\n- [Magic assert](#magic-assert)\n- [Isolated environment for each test file](./docs/01-writing-tests.md#process-isolation)\n- [Write your tests using the latest JavaScript syntax](https://github.com/avajs/babel)\n- [Promise support](./docs/01-writing-tests.md#promise-support)\n- [Async function support](./docs/01-writing-tests.md#async-function-support)\n- [Observable support](./docs/01-writing-tests.md#observable-support)\n- [Enhanced assertion messages](./docs/03-assertions.md#enhanced-assertion-messages)\n- [Automatic parallel test runs in CI](#parallel-runs-in-ci)\n- [TAP reporter](./docs/05-command-line.md#tap-reporter)\n\n\n## Usage\n\nTo install and set up AVA, run:\n\n```console\nnpm init ava\n```\n\nYour `package.json` will then look like this (exact version notwithstanding):\n\n```json\n{\n\t\"name\": \"awesome-package\",\n\t\"scripts\": {\n\t\t\"test\": \"ava\"\n\t},\n\t\"devDependencies\": {\n\t\t\"ava\": \"^1.0.0\"\n\t}\n}\n```\n\nOr if you prefer using Yarn:\n\n```console\nyarn add ava --dev\n```\n\nAlternatively you can install `ava` manually:\n\n```console\nnpm install --save-dev ava\n```\n\nDon't forget to configure the `test` script in your `package.json` as per above.\n\n### Create your test file\n\nCreate a file named `test.js` in the project root directory:\n\n```js\nconst test = require('ava');\n\ntest('foo', t => {\n\tt.pass();\n});\n\ntest('bar', async t => {\n\tconst bar = Promise.resolve('bar');\n\tt.is(await bar, 'bar');\n});\n```\n\n### Running your tests\n\n```console\nnpm test\n```\n\nOr with `npx`:\n\n```console\nnpx ava\n```\n\nRun with the `--watch` flag to enable AVA's [watch mode](docs/recipes/watch-mode.md):\n\n```console\nnpx ava --watch\n```\n\n## Supported Node.js versions\n\nAVA supports the latest release of any major version that [is supported by Node.js itself](https://github.com/nodejs/Release#release-schedule). Read more in our [support statement](docs/support-statement.md).\n\n## Highlights\n\n### Magic assert\n\nAVA adds code excerpts and clean diffs for actual and expected values. If values in the assertion are objects or arrays, only a diff is displayed, to remove the noise and focus on the problem. The diff is syntax-highlighted too! If you are comparing strings, both single and multi line, AVA displays a different kind of output, highlighting the added or missing characters.\n\n![](media/magic-assert-combined.png)\n\n### Clean stack traces\n\nAVA automatically removes unrelated lines in stack traces, allowing you to find the source of an error much faster, as seen above.\n\n### Parallel runs in CI\n\nAVA automatically detects whether your CI environment supports parallel builds. Each build will run a subset of all test files, while still making sure all tests get executed. See the [`ci-parallel-vars`](https://www.npmjs.com/package/ci-parallel-vars) package for a list of supported CI environments.\n\n## Documentation\n\nPlease see the [files in the `docs` directory](./docs):\n\n* [Writing tests](./docs/01-writing-tests.md)\n* [Execution context](./docs/02-execution-context.md)\n* [Assertions](./docs/03-assertions.md)\n* [Snapshot testing](./docs/04-snapshot-testing.md)\n* [Command line (CLI)](./docs/05-command-line.md)\n* [Configuration](./docs/06-configuration.md)\n* [Test timeouts](./docs/07-test-timeouts.md)\n\n### Common pitfalls\n\nWe have a growing list of [common pitfalls](docs/08-common-pitfalls.md) you may experience while using AVA. If you encounter any issues you think are common, comment in [this issue](https://github.com/avajs/ava/issues/404).\n\n### Recipes\n\n- [Test setup](docs/recipes/test-setup.md)\n- [Code coverage](docs/recipes/code-coverage.md)\n- [Watch mode](docs/recipes/watch-mode.md)\n- [Endpoint testing](docs/recipes/endpoint-testing.md)\n- [When to use `t.plan()`](docs/recipes/when-to-use-plan.md)\n- [Browser testing](docs/recipes/browser-testing.md)\n- [TypeScript](docs/recipes/typescript.md)\n- [Flow](docs/recipes/flow.md)\n- [Configuring Babel](https://github.com/avajs/babel)\n- [Using ES modules](docs/recipes/es-modules.md)\n- [Passing arguments to your test files](docs/recipes/passing-arguments-to-your-test-files.md)\n- [Testing React components](docs/recipes/react.md)\n- [Testing Vue.js components](docs/recipes/vue.md)\n- [Debugging tests with Chrome DevTools](docs/recipes/debugging-with-chrome-devtools.md)\n- [Debugging tests with VSCode](docs/recipes/debugging-with-vscode.md)\n- [Debugging tests with WebStorm](docs/recipes/debugging-with-webstorm.md)\n- [Isolated MongoDB integration tests](docs/recipes/isolated-mongodb-integration-tests.md)\n- [Testing web apps using Puppeteer](docs/recipes/puppeteer.md)\n- [Testing web apps using Selenium WebDriverJS](docs/recipes/testing-with-selenium-webdriverjs.md)\n\n## FAQ\n\n### Why not `mocha`, `tape`, `tap`?\n\nMocha requires you to use implicit globals like `describe` and `it` with the default interface (which most people use). It's not very opinionated and executes tests serially without process isolation, making it slow.\n\nTape and tap are pretty good. AVA is highly inspired by their syntax. They too execute tests serially. Their default [TAP](https://testanything.org) output isn't very user-friendly though so you always end up using an external tap reporter.\n\nIn contrast AVA is highly opinionated and runs tests concurrently, with a separate process for each test file. Its default reporter is easy on the eyes and yet AVA still supports TAP output through a CLI flag.\n\n### How is the name written and pronounced?\n\nAVA, not Ava or ava. Pronounced [`/\u02c8e\u026av\u0259/`](media/pronunciation.m4a?raw=true): Ay (f**a**ce, m**a**de) V (**v**ie, ha**v**e) A (comm**a**, **a**go)\n\n### What is the header background?\n\nIt's the [Andromeda galaxy](https://simple.wikipedia.org/wiki/Andromeda_galaxy).\n\n### What is the difference between concurrency and parallelism?\n\n[Concurrency is not parallelism. It enables parallelism.](https://stackoverflow.com/q/1050222)\n\n## Support\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/ava)\n- [Spectrum](https://spectrum.chat/ava)\n- [Twitter](https://twitter.com/ava__js)\n\n## Related\n\n- [eslint-plugin-ava](https://github.com/avajs/eslint-plugin-ava) - Lint rules for AVA tests\n- [sublime-ava](https://github.com/avajs/sublime-ava) - Snippets for AVA tests\n- [atom-ava](https://github.com/avajs/atom-ava) - Snippets for AVA tests\n- [vscode-ava](https://github.com/samverschueren/vscode-ava) - Snippets for AVA tests\n- [gulp-ava](https://github.com/avajs/gulp-ava) - Run tests with gulp\n- [grunt-ava](https://github.com/avajs/grunt-ava) - Run tests with grunt\n- [More\u2026](https://github.com/avajs/awesome-ava#packages)\n\n## Links\n\n- [AVA stickers, t-shirts, etc](https://www.redbubble.com/people/sindresorhus/works/30330590-ava-logo)\n- [Awesome list](https://github.com/avajs/awesome-ava)\n- [AVA Casts](http://avacasts.com)\n- [Do you like AVA? Donate here!](https://opencollective.com/ava)\n- [More\u2026](https://github.com/avajs/awesome-ava)\n\n## Team\n\n[![Mark Wubben](https://github.com/novemberborn.png?size=100)](https://github.com/novemberborn) | [![Sindre Sorhus](https://github.com/sindresorhus.png?size=100)](https://github.com/sindresorhus) | [![Vadim Demedes](https://github.com/vadimdemedes.png?size=100)](https://github.com/vadimdemedes)\n---|---|---\n[Mark Wubben](https://novemberborn.net) | [Sindre Sorhus](https://sindresorhus.com) | [Vadim Demedes](https://github.com/vadimdemedes)\n\n###### Former\n\n- [Kevin M\u00e5rtensson](https://github.com/kevva)\n- [James Talmage](https://github.com/jamestalmage)\n- [Juan Soto](https://github.com/sotojuan)\n- [Jeroen Engels](https://github.com/jfmengels)\n\n\n<div align=\"center\">\n\t<br>\n\t<br>\n\t<br>\n\t<a href=\"https://avajs.dev\">\n\t\t<img src=\"media/logo.svg\" width=\"200\" alt=\"AVA\">\n\t</a>\n\t<br>\n\t<br>\n</div>"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 29919}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 199936}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 863416}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2762160}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5047329}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 8980080}], "dependentsCount": 301, "starsCount": 102}, "github": {"starsCount": 18009, "forksCount": 1243, "subscribersCount": 241, "issues": {"count": 2514, "openCount": 80, "distribution": {"3600": 334, "10800": 149, "32400": 151, "97200": 328, "291600": 323, "874800": 311, "2624400": 241, "7873200": 211, "23619600": 199, "70858800": 179, "212576400": 88}, "isDisabled": false}, "contributors": [{"username": "novemberborn", "commitsCount": 537}, {"username": "sindresorhus", "commitsCount": 281}, {"username": "jamestalmage", "commitsCount": 136}, {"username": "vadimdemedes", "commitsCount": 72}, {"username": "forresst", "commitsCount": 37}, {"username": "kevva", "commitsCount": 22}, {"username": "SamVerschueren", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 6}, {"username": "kugtong33", "commitsCount": 6}, {"username": "lukechilds", "commitsCount": 6}, {"username": "nfcampos", "commitsCount": 6}, {"username": "ariporad", "commitsCount": 5}, {"username": "jamiebuilds", "commitsCount": 5}, {"username": "jfmengels", "commitsCount": 5}, {"username": "okyantoro", "commitsCount": 5}, {"username": "qlonik", "commitsCount": 5}, {"username": "BusbyActual", "commitsCount": 4}, {"username": "ThomasBem", "commitsCount": 4}, {"username": "cgcgbcbc", "commitsCount": 4}, {"username": "dflupu", "commitsCount": 4}, {"username": "ivogabe", "commitsCount": 4}, {"username": "kasperlewau", "commitsCount": 4}, {"username": "sotojuan", "commitsCount": 4}, {"username": "ulken", "commitsCount": 4}, {"username": "yovasx2", "commitsCount": 4}, {"username": "LasaleFamine", "commitsCount": 3}, {"username": "bunysae", "commitsCount": 3}, {"username": "codeslikejaggars", "commitsCount": 3}, {"username": "leebyron", "commitsCount": 3}, {"username": "mightyiam", "commitsCount": 3}, {"username": "timdeschryver", "commitsCount": 3}, {"username": "BarryThePenguin", "commitsCount": 2}, {"username": "Carnubak", "commitsCount": 2}, {"username": "ChristianMurphy", "commitsCount": 2}, {"username": "JPeer264", "commitsCount": 2}, {"username": "Michael55555", "commitsCount": 2}, {"username": "Qix-", "commitsCount": 2}, {"username": "StoneCypher", "commitsCount": 2}, {"username": "TrySound", "commitsCount": 2}, {"username": "adriantoine", "commitsCount": 2}, {"username": "ajtorres9", "commitsCount": 2}, {"username": "alathon", "commitsCount": 2}, {"username": "alexisfontaine", "commitsCount": 2}, {"username": "anishkny", "commitsCount": 2}, {"username": "anoff", "commitsCount": 2}, {"username": "asafigan", "commitsCount": 2}, {"username": "btkostner", "commitsCount": 2}, {"username": "cdaringe", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 2}, {"username": "fluffywaffles", "commitsCount": 2}, {"username": "grnch", "commitsCount": 2}, {"username": "ingro", "commitsCount": 2}, {"username": "jagoda", "commitsCount": 2}, {"username": "jarlehansen", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jokeyrhyme", "commitsCount": 2}, {"username": "jugglinmike", "commitsCount": 2}, {"username": "kutyel", "commitsCount": 2}, {"username": "lo1tuma", "commitsCount": 2}, {"username": "mattkrick", "commitsCount": 2}, {"username": "mdvorscak", "commitsCount": 2}, {"username": "micaelmbagira", "commitsCount": 2}, {"username": "naptowncode", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "pine", "commitsCount": 2}, {"username": "platy11", "commitsCount": 2}, {"username": "ronen", "commitsCount": 2}, {"username": "sh7dm", "commitsCount": 2}, {"username": "sharkykh", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "thebrokenfinger", "commitsCount": 2}, {"username": "twada", "commitsCount": 2}, {"username": "uiur", "commitsCount": 2}, {"username": "vancouverwill", "commitsCount": 2}, {"username": "zs-zs", "commitsCount": 2}, {"username": "Autre31415", "commitsCount": 1}, {"username": "DYefimov", "commitsCount": 1}, {"username": "HeathNaylor", "commitsCount": 1}, {"username": "MoppetX", "commitsCount": 1}, {"username": "Scrum", "commitsCount": 1}, {"username": "alexdrans", "commitsCount": 1}, {"username": "aptester", "commitsCount": 1}, {"username": "arlac77", "commitsCount": 1}, {"username": "fisker", "commitsCount": 1}, {"username": "futpib", "commitsCount": 1}, {"username": "jhechtf", "commitsCount": 1}, {"username": "jimmywarting", "commitsCount": 1}, {"username": "maximelkin", "commitsCount": 1}, {"username": "paulrobertlloyd", "commitsCount": 1}, {"username": "pcdevil", "commitsCount": 1}, {"username": "sramam", "commitsCount": 1}, {"username": "stavalfi", "commitsCount": 1}, {"username": "theashraf", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "toddkcarlson", "commitsCount": 1}, {"username": "tryzniak", "commitsCount": 1}, {"username": "tymfear", "commitsCount": 1}, {"username": "yjpa7145", "commitsCount": 1}, {"username": "zackschuster", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 6}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 10}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 48}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 128}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 195}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 9464, "testsSize": 70610}, "badges": [{"urls": {"original": "https://travis-ci.org/avajs/ava.svg?branch=master", "service": "https://api.travis-ci.org/avajs/ava.svg?branch=master", "shields": "https://img.shields.io/travis/avajs/ava/master.svg", "content": "https://img.shields.io/travis/avajs/ava/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "coverage": 0.94, "outdatedDependencies": {"code-excerpt": {"required": "^2.1.1", "stable": "3.0.0", "latest": "3.0.0"}, "ignore-by-default": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}, "concordance": {"required": "^4.0.0", "stable": "5.0.0", "latest": "5.0.0"}, "emittery": {"required": "^0.6.0", "stable": "0.7.0", "latest": "0.7.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.991, "health": 0.8545454545454545, "branding": 0.55}, "popularity": {"communityInterest": 19695, "downloadsCount": 920720, "downloadsAcceleration": 1903.8330479452052, "dependentsCount": 301}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.17463256120836956}}, "score": {"final": 0.767478856388986, "detail": {"quality": 0.9865914185692933, "popularity": 0.5091090114900692, "maintenance": 0.8380379337047824}}}}]