[{"eslint": {"analyzedAt": "2020-06-05T23:59:50.234Z", "collected": {"metadata": {"name": "eslint", "scope": "unscoped", "version": "7.2.0", "description": "An AST-based pattern checker for JavaScript.", "keywords": ["ast", "lint", "javascript", "ecmascript", "espree"], "date": "2020-06-05T23:57:57.988Z", "author": {"name": "Nicholas C. Zakas", "email": "nicholas+npm@nczconsulting.com"}, "publisher": {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint", "homepage": "https://eslint.org", "repository": "https://github.com/eslint/eslint", "bugs": "https://github.com/eslint/eslint/issues/"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "ajv": "^6.10.0", "chalk": "^4.0.0", "cross-spawn": "^7.0.2", "debug": "^4.0.1", "doctrine": "^3.0.0", "eslint-scope": "^5.1.0", "eslint-utils": "^2.0.0", "eslint-visitor-keys": "^1.2.0", "espree": "^7.1.0", "esquery": "^1.2.0", "esutils": "^2.0.2", "file-entry-cache": "^5.0.1", "functional-red-black-tree": "^1.0.1", "glob-parent": "^5.0.0", "globals": "^12.1.0", "ignore": "^4.0.6", "import-fresh": "^3.0.0", "imurmurhash": "^0.1.4", "inquirer": "^7.0.0", "is-glob": "^4.0.0", "js-yaml": "^3.13.1", "json-stable-stringify-without-jsonify": "^1.0.1", "levn": "^0.4.1", "lodash": "^4.17.14", "minimatch": "^3.0.4", "natural-compare": "^1.4.0", "optionator": "^0.9.1", "progress": "^2.0.0", "regexpp": "^3.1.0", "semver": "^7.2.1", "strip-ansi": "^6.0.0", "strip-json-comments": "^3.1.0", "table": "^5.2.3", "text-table": "^0.2.0", "v8-compile-cache": "^2.0.3"}, "devDependencies": {"@babel/core": "^7.4.3", "@babel/preset-env": "^7.4.3", "acorn": "^7.2.0", "babel-loader": "^8.0.5", "chai": "^4.0.1", "cheerio": "^0.22.0", "common-tags": "^1.8.0", "core-js": "^3.1.3", "dateformat": "^3.0.3", "ejs": "^3.0.2", "escape-string-regexp": "^3.0.0", "eslint": "file:.", "eslint-config-eslint": "file:packages/eslint-config-eslint", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-internal-rules": "file:tools/internal-rules", "eslint-plugin-jsdoc": "^22.1.0", "eslint-plugin-node": "^11.1.0", "eslint-release": "^2.0.0", "eslump": "^2.0.0", "esprima": "^4.0.1", "glob": "^7.1.6", "jsdoc": "^3.5.5", "karma": "^4.0.1", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.3", "karma-webpack": "^4.0.0-rc.6", "leche": "^2.2.3", "lint-staged": "^10.1.2", "load-perf": "^0.2.0", "markdownlint": "^0.19.0", "markdownlint-cli": "^0.22.0", "memfs": "^3.0.1", "mocha": "^7.1.1", "mocha-junit-reporter": "^1.23.0", "npm-license": "^0.3.3", "nyc": "^15.0.1", "proxyquire": "^2.0.1", "puppeteer": "^2.1.1", "recast": "^0.19.0", "regenerator-runtime": "^0.13.2", "shelljs": "^0.8.2", "sinon": "^9.0.1", "temp": "^0.9.0", "webpack": "^4.35.0", "webpack-cli": "^3.3.5", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 2}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 4}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 8}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 23}, {"from": "2018-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![NPM version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield)\n<br />\n[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)\n[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)\n[![Follow us on Twitter](https://img.shields.io/twitter/follow/geteslint?label=Follow&style=social)](https://twitter.com/intent/user?screen_name=geteslint)\n\n# ESLint\n\n[Website](https://eslint.org) |\n[Configuring](https://eslint.org/docs/user-guide/configuring) |\n[Rules](https://eslint.org/docs/rules/) |\n[Contributing](https://eslint.org/docs/developer-guide/contributing) |\n[Reporting Bugs](https://eslint.org/docs/developer-guide/contributing/reporting-bugs) |\n[Code of Conduct](https://js.foundation/community/code-of-conduct) |\n[Twitter](https://twitter.com/geteslint) |\n[Mailing List](https://groups.google.com/group/eslint) |\n[Chat Room](https://eslint.org/chat)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Table of Contents\n\n1. [Installation and Usage](#installation-and-usage)\n2. [Configuration](#configuration)\n3. [Code of Conduct](#code-of-conduct)\n4. [Filing Issues](#filing-issues)\n5. [Frequently Asked Questions](#faq)\n6. [Releases](#releases)\n7. [Semantic Versioning Policy](#semantic-versioning-policy)\n8. [License](#license)\n9. [Team](#team)\n10. [Sponsors](#sponsors)\n11. [Technology Sponsors](#technology-sponsors)\n\n## <a name=\"installation-and-usage\"></a>Installation and Usage\n\nPrerequisites: [Node.js](https://nodejs.org/) (`^10.12.0`, or `>=12.0.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\n\nYou can install ESLint using npm:\n\n```\n$ npm install eslint --save-dev\n```\n\nYou should then set up a configuration file:\n\n```\n$ ./node_modules/.bin/eslint --init\n```\n\nAfter that, you can run ESLint on any file or directory like this:\n\n```\n$ ./node_modules/.bin/eslint yourfile.js\n```\n\n## <a name=\"configuration\"></a>Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/user-guide/configuring)).\n\n## <a name=\"code-of-conduct\"></a>Code of Conduct\n\nESLint adheres to the [JS Foundation Code of Conduct](https://js.foundation/community/code-of-conduct).\n\n## <a name=\"filing-issues\"></a>Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](https://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](https://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](https://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](https://eslint.org/docs/developer-guide/contributing/changes)\n\n## <a name=\"faq\"></a>Frequently Asked Questions\n\n### I'm using JSCS, should I migrate to ESLint?\n\nYes. [JSCS has reached end of life](https://eslint.org/blog/2016/07/jscs-end-of-life) and is no longer supported.\n\nWe have prepared a [migration guide](https://eslint.org/docs/user-guide/migrating-from-jscs) to help you convert your JSCS settings to an ESLint configuration.\n\nWe are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.\n\n### Does Prettier replace ESLint?\n\nNo, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.\n\n### Why can't ESLint find my plugins?\n\n* Make sure your plugins (and ESLint) are both in your project's `package.json` as devDependencies (or dependencies, if your project uses ESLint at runtime).\n* Make sure you have run `npm install` and all your dependencies are installed.\n* Make sure your plugins' peerDependencies have been installed as well. You can use `npm view eslint-plugin-myplugin peerDependencies` to see what peer dependencies `eslint-plugin-myplugin` has.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/user-guide/configuring)). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What ECMAScript versions does ESLint support?\n\nESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, and 2019. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through [configuration](https://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.\n\nIn other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use the [babel-eslint](https://github.com/babel/babel-eslint) parser and [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/developer-guide/contributing). Until then, please use the appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://eslint.org/chat).\n\n## <a name=\"releases\"></a>Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.\n\n## <a name=\"semantic-versioning-policy\"></a>Semantic Versioning Policy\n\nESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\n* Patch release (intended to not break your lint build)\n    * A bug fix in a rule that results in ESLint reporting fewer errors.\n    * A bug fix to the CLI or core (including formatters).\n    * Improvements to documentation.\n    * Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    * Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n* Minor release (might break your lint build)\n    * A bug fix in a rule that results in ESLint reporting more errors.\n    * A new rule is created.\n    * A new option to an existing rule that does not result in ESLint reporting more errors by default.\n    * An existing rule is deprecated.\n    * A new CLI capability is created.\n    * New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\n    * A new formatter is created.\n    * `eslint:recommended` is updated and will result in strictly fewer errors (e.g., rule removals).\n* Major release (likely to break your lint build)\n    * `eslint:recommended` is updated and may result in new errors (e.g., rule additions, most rule option updates).\n    * A new option to an existing rule that results in ESLint reporting more errors by default.\n    * An existing formatter is removed.\n    * Part of the public API is removed or changed in an incompatible way.\n\nAccording to our policy, any minor update may report more errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `\"eslint\": \"~3.1.0\"` to guarantee the results of your builds.\n\n## <a name=\"license\"></a>License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large)\n\n## <a name=\"team\"></a>Team\n\nThese folks keep the project moving and are resources for help.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--teamstart-->\n\n### Technical Steering Committee (TSC)\n\nThe people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/nzakas\">\n<img src=\"https://github.com/nzakas.png?s=75\" width=\"75\" height=\"75\"><br />\nNicholas C. Zakas\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/btmills\">\n<img src=\"https://github.com/btmills.png?s=75\" width=\"75\" height=\"75\"><br />\nBrandon Mills\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mysticatea\">\n<img src=\"https://github.com/mysticatea.png?s=75\" width=\"75\" height=\"75\"><br />\nToru Nagashima\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/kaicataldo\">\n<img src=\"https://github.com/kaicataldo.png?s=75\" width=\"75\" height=\"75\"><br />\nKai Cataldo\n</a>\n</td></tr></tbody></table>\n\n\n### Reviewers\n\nThe people who review and implement new features.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/aladdin-add\">\n<img src=\"https://github.com/aladdin-add.png?s=75\" width=\"75\" height=\"75\"><br />\n\u859b\u5b9a\u8c14\u7684\u732b\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mdjermanovic\">\n<img src=\"https://github.com/mdjermanovic.png?s=75\" width=\"75\" height=\"75\"><br />\nMilos Djermanovic\n</a>\n</td></tr></tbody></table>\n\n\n\n\n### Committers\n\nThe people who review and fix bugs and help triage issues.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/g-plane\">\n<img src=\"https://github.com/g-plane.png?s=75\" width=\"75\" height=\"75\"><br />\nPig Fang\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/yeonjuan\">\n<img src=\"https://github.com/yeonjuan.png?s=75\" width=\"75\" height=\"75\"><br />\nYeonJuan\n</a>\n</td></tr></tbody></table>\n\n\n<!--teamend-->\n\n## <a name=\"sponsors\"></a>Sponsors\n\nThe following companies, organizations, and individuals support ESLint's ongoing maintenance and development. [Become a Sponsor](https://opencollective.com/eslint) to get your logo on our README and website.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--sponsorsstart-->\n<h3>Gold Sponsors</h3>\n<p><a href=\"https://www.shopify.com\"><img src=\"https://images.opencollective.com/shopify/e780cd4/logo.png\" alt=\"Shopify\" height=\"96\"></a> <a href=\"https://www.salesforce.com\"><img src=\"https://images.opencollective.com/salesforce/ca8f997/logo.png\" alt=\"Salesforce\" height=\"96\"></a> <a href=\"https://www.airbnb.com/\"><img src=\"https://images.opencollective.com/airbnb/d327d66/logo.png\" alt=\"Airbnb\" height=\"96\"></a></p><h3>Silver Sponsors</h3>\n<p><a href=\"https://liftoff.io/\"><img src=\"https://images.opencollective.com/liftoff/5c4fa84/logo.png\" alt=\"Liftoff\" height=\"64\"></a> <a href=\"https://www.ampproject.org/\"><img src=\"https://images.opencollective.com/amp/c8a3b25/logo.png\" alt=\"AMP Project\" height=\"64\"></a></p><h3>Bronze Sponsors</h3>\n<p><a href=\"https://bruce.agency\"><img src=\"https://images.opencollective.com/brucemade/0c70c59/logo.png\" alt=\"Bruce\" height=\"32\"></a> <a href=\"https://edubirdie.com/\"><img src=\"https://images.opencollective.com/edubirdie2/b1d51ab/logo.png\" alt=\"EduBirdie\" height=\"32\"></a> <a href=\"https://www.casinotop.com/\"><img src=\"https://images.opencollective.com/casinotop-com/10fd95b/logo.png\" alt=\"CasinoTop.com\" height=\"32\"></a> <a href=\"https://www.casinotopp.net/\"><img src=\"https://images.opencollective.com/casino-topp/1dd399a/logo.png\" alt=\"Casino Topp\" height=\"32\"></a> <a href=\"https://writersperhour.com/write-my-essay\"><img src=\"https://images.opencollective.com/writersperhour/5787d4b/logo.png\" alt=\"Writers Per Hour\" height=\"32\"></a> <a href=\"https://www.crosswordsolver.org/anagram-solver/\"><img src=\"https://images.opencollective.com/anagram-solver/2666271/logo.png\" alt=\"Anagram Solver\" height=\"32\"></a> <a href=\"https://cooltechzone.com/netflix-vpn\"><img src=\"https://images.opencollective.com/vpn-netflix/4850160/logo.png\" alt=\"vpn netflix\" height=\"32\"></a> <a href=\"https://www.kasinot.fi\"><img src=\"https://images.opencollective.com/kasinot-fi/e09aa2e/logo.png\" alt=\"Kasinot.fi\" height=\"32\"></a> <a href=\"https://www.pelisivut.com\"><img src=\"https://images.opencollective.com/pelisivut/04f08f2/logo.png\" alt=\"Pelisivut\" height=\"32\"></a> <a href=\"https://www.nettikasinot.org\"><img src=\"https://images.opencollective.com/nettikasinot-org/bbd887f/logo.png\" alt=\"Nettikasinot.org\" height=\"32\"></a> <a href=\"https://www.bonus.com.de/freispiele\"><img src=\"https://images.opencollective.com/bonusfinder-deutschland/646169e/logo.png\" alt=\"BonusFinder Deutschland\" height=\"32\"></a> <a href=\"https://www.bugsnag.com/platforms?utm_source=Open Collective&utm_medium=Website&utm_content=open-source&utm_campaign=2019-community&utm_term=\"><img src=\"https://images.opencollective.com/bugsnag-stability-monitoring/c2cef36/logo.png\" alt=\"Bugsnag Stability Monitoring\" height=\"32\"></a> <a href=\"https://mixpanel.com\"><img src=\"https://images.opencollective.com/mixpanel/cd682f7/logo.png\" alt=\"Mixpanel\" height=\"32\"></a> <a href=\"https://www.vpsserver.com\"><img src=\"https://images.opencollective.com/vpsservercom/logo.png\" alt=\"VPS Server\" height=\"32\"></a> <a href=\"https://icons8.com\"><img src=\"https://images.opencollective.com/icons8/0b37d14/logo.png\" alt=\"Free Icons by Icons8\" height=\"32\"></a> <a href=\"https://discordapp.com\"><img src=\"https://images.opencollective.com/discordapp/7e3d9a9/logo.png\" alt=\"Discord\" height=\"32\"></a> <a href=\"https://themeisle.com\"><img src=\"https://images.opencollective.com/themeisle/d5592fe/logo.png\" alt=\"ThemeIsle\" height=\"32\"></a> <a href=\"https://tekhattan.com\"><img src=\"https://images.opencollective.com/tekhattan/bc73c28/logo.png\" alt=\"TekHattan\" height=\"32\"></a> <a href=\"https://www.marfeel.com/\"><img src=\"https://images.opencollective.com/marfeel/4b88e30/logo.png\" alt=\"Marfeel\" height=\"32\"></a> <a href=\"http://www.firesticktricks.com\"><img src=\"https://images.opencollective.com/fire-stick-tricks/b8fbe2c/logo.png\" alt=\"Fire Stick Tricks\" height=\"32\"></a></p>\n<!--sponsorsend-->\n\n## <a name=\"technology-sponsors\"></a>Technology Sponsors\n\n* Site search ([eslint.org](https://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)"}, "npm": {"downloads": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 2193267}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 11409734}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 49201753}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 139777650}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 250093902}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 450550833}], "dependentsCount": 9823, "starsCount": 329}, "github": {"homepage": "https://eslint.org", "starsCount": 16526, "forksCount": 2920, "subscribersCount": 305, "issues": {"count": 13321, "openCount": 188, "distribution": {"3600": 1497, "10800": 954, "32400": 1171, "97200": 1763, "291600": 1896, "874800": 1659, "2624400": 1360, "7873200": 1601, "23619600": 1067, "70858800": 334, "212576400": 19}, "isDisabled": false}, "contributors": [{"username": "nzakas", "commitsCount": 754}, {"username": "not-an-aardvark", "commitsCount": 510}, {"username": "mysticatea", "commitsCount": 333}, {"username": "alberto", "commitsCount": 231}, {"username": "eslint[bot]", "commitsCount": 187}, {"username": "gyandeeps", "commitsCount": 182}, {"username": "mdjermanovic", "commitsCount": 162}, {"username": "ilyavolodin", "commitsCount": 149}, {"username": "kaicataldo", "commitsCount": 135}, {"username": "aladdin-add", "commitsCount": 133}, {"username": "btmills", "commitsCount": 133}, {"username": "platinumazure", "commitsCount": 133}, {"username": "michaelficarra", "commitsCount": 112}, {"username": "BYK", "commitsCount": 82}, {"username": "iancmyers", "commitsCount": 71}, {"username": "lo1tuma", "commitsCount": 68}, {"username": "IanVS", "commitsCount": 57}, {"username": "g-plane", "commitsCount": 43}, {"username": "mduvall", "commitsCount": 42}, {"username": "vitorbal", "commitsCount": 37}, {"username": "pedrottimark", "commitsCount": 34}, {"username": "yeonjuan", "commitsCount": 34}, {"username": "roadhump", "commitsCount": 24}, {"username": "DavidAnson", "commitsCount": 23}, {"username": "jrajav", "commitsCount": 23}, {"username": "anikethsaha", "commitsCount": 19}, {"username": "gcochard", "commitsCount": 19}, {"username": "VictorHom", "commitsCount": 18}, {"username": "jamesallardice", "commitsCount": 17}, {"username": "jrpool", "commitsCount": 17}, {"username": "ljharb", "commitsCount": 16}, {"username": "scriptdaemon", "commitsCount": 16}, {"username": "golopot", "commitsCount": 15}, {"username": "jrvidal", "commitsCount": 15}, {"username": "j-f1", "commitsCount": 11}, {"username": "bradzacher", "commitsCount": 10}, {"username": "goatslacker", "commitsCount": 10}, {"username": "makepanic", "commitsCount": 10}, {"username": "mgol", "commitsCount": 10}, {"username": "sstern6", "commitsCount": 10}, {"username": "albertosantini", "commitsCount": 9}, {"username": "mamacdon", "commitsCount": 9}, {"username": "tschaub", "commitsCount": 9}, {"username": "xjamundx", "commitsCount": 9}, {"username": "knunery", "commitsCount": 8}, {"username": "madbence", "commitsCount": 8}, {"username": "soda0289", "commitsCount": 8}, {"username": "vegetableman", "commitsCount": 8}, {"username": "andrewdeandrade", "commitsCount": 7}, {"username": "brettz9", "commitsCount": 7}, {"username": "gkz", "commitsCount": 7}, {"username": "jonathanKingston", "commitsCount": 7}, {"username": "pmcelhaney", "commitsCount": 7}, {"username": "spadgos", "commitsCount": 7}, {"username": "spmurrayzzz", "commitsCount": 7}, {"username": "vsemozhetbyt", "commitsCount": 7}, {"username": "Krinkle", "commitsCount": 6}, {"username": "PoziWorld", "commitsCount": 6}, {"username": "TheSavior", "commitsCount": 6}, {"username": "Trott", "commitsCount": 6}, {"username": "alefteris", "commitsCount": 6}, {"username": "annie", "commitsCount": 6}, {"username": "aparajita", "commitsCount": 6}, {"username": "briandipalma", "commitsCount": 6}, {"username": "dguo", "commitsCount": 6}, {"username": "glenjamin", "commitsCount": 6}, {"username": "hzoo", "commitsCount": 6}, {"username": "jrfeenst", "commitsCount": 6}, {"username": "pdehaan", "commitsCount": 6}, {"username": "puzrin", "commitsCount": 6}, {"username": "rajenp", "commitsCount": 6}, {"username": "revolter", "commitsCount": 6}, {"username": "sindresorhus", "commitsCount": 6}, {"username": "Delapouite", "commitsCount": 5}, {"username": "Mardak", "commitsCount": 5}, {"username": "MichaelPaulukonis", "commitsCount": 5}, {"username": "NateEag", "commitsCount": 5}, {"username": "aubergine10", "commitsCount": 5}, {"username": "cjihrig", "commitsCount": 5}, {"username": "ilovejary", "commitsCount": 5}, {"username": "malcolmsgroves", "commitsCount": 5}, {"username": "mathieumg", "commitsCount": 5}, {"username": "meeber", "commitsCount": 5}, {"username": "mjomble", "commitsCount": 5}, {"username": "molee1905", "commitsCount": 5}, {"username": "nre", "commitsCount": 5}, {"username": "onurtemizkan", "commitsCount": 5}, {"username": "tikotzky", "commitsCount": 5}, {"username": "valorkin", "commitsCount": 5}, {"username": "whitneyit", "commitsCount": 5}, {"username": "BridgeAR", "commitsCount": 4}, {"username": "JPeer264", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 4}, {"username": "gajus", "commitsCount": 4}, {"username": "i-ron-y", "commitsCount": 4}, {"username": "nwoltman", "commitsCount": 4}, {"username": "preco21", "commitsCount": 4}, {"username": "realityking", "commitsCount": 4}, {"username": "scottohara", "commitsCount": 4}, {"username": "silverwind", "commitsCount": 4}], "commits": [{"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 10}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 43}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 140}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 276}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 583}]}, "source": {"files": {"readmeSize": 16914, "testsSize": 9397275, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint.svg", "shields": "https://img.shields.io/npm/v/eslint.svg", "content": "https://img.shields.io/npm/v/eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint.svg", "shields": "https://img.shields.io/npm/dm/eslint.svg", "content": "https://img.shields.io/npm/dm/eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.69, "outdatedDependencies": {"globals": {"required": "^12.1.0", "stable": "13.0.0", "latest": "13.0.0"}, "ignore": {"required": "^4.0.6", "stable": "5.1.8", "latest": "5.1.8"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7035, "health": 0.8888888888888888, "branding": 0.7}, "popularity": {"communityInterest": 20180, "downloadsCount": 46592550, "downloadsAcceleration": 140174.32808219176, "dependentsCount": 9823}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8089377590870581}}, "score": {"final": 0.9448923446732803, "detail": {"quality": 0.9588653192819246, "popularity": 0.8781983316865605, "maintenance": 0.9996095222811623}}}}, {"mocha": {"analyzedAt": "2020-06-10T21:41:22.186Z", "collected": {"metadata": {"name": "mocha", "scope": "unscoped", "version": "8.0.1", "description": "simple, flexible, fun test framework", "keywords": ["mocha", "test", "bdd", "tdd", "tap", "testing", "chai", "assertion", "ava", "jest", "tape", "jasmine", "karma"], "date": "2020-06-10T21:39:54.728Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "boneskull", "email": "boneskull@boneskull.com"}, "maintainers": [{"username": "boneskull", "email": "boneskull@boneskull.com"}, {"username": "craigtaub", "email": "craigtaub@googlemail.com"}, {"username": "juergba", "email": "filodron@gmail.com"}, {"username": "munter", "email": "munter@fumle.dk"}], "contributors": [{"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, {"name": "James Carr", "email": "james.r.carr@gmail.com"}, {"name": "Fredrik Lindin", "email": "fredriklindin@gmail.com"}, {"name": "Konstantin Ka\u0308fer", "email": "github@kkaefer.com"}, {"name": "David Henderson", "email": "david.henderson@triggeredmessaging.com"}, {"name": "Harry Brundage", "email": "harry.brundage@gmail.com"}, {"name": "Quang Van", "email": "quangvvv@gmail.com"}, {"name": "hokaccha", "email": "k.hokamura@gmail.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "FARKAS M\u00e1t\u00e9", "email": "mate.farkas@virtual-call-center.eu"}, {"name": "Ben Lindsey", "email": "ben.lindsey@vungle.com"}, {"name": "Steve Mason", "email": "stevem@brandwatch.com"}, {"name": "Ryunosuke SATO", "email": "tricknotes.rs@gmail.com"}, {"name": "Nathan Rajlich", "email": "nathan@tootallnate.net"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "Yuest Wang", "email": "yuestwang@gmail.com"}, {"name": "Maciej Ma\u0142ecki", "email": "maciej.malecki@notimplemented.org"}, {"name": "Joshua Krall", "email": "joshuakrall@pobox.com"}, {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com"}, {"name": "Will Langstroth", "email": "will@langstroth.com"}, {"name": "Attila Domokos", "email": "adomokos@gmail.com"}, {"name": "Jussi Virtanen", "email": "jussi.k.virtanen@gmail.com"}, {"name": "Phil Sung", "email": "psung@dnanexus.com"}, {"name": "vlad", "email": "iamvlad@gmail.com"}, {"name": "Paul Miller", "email": "paul@paulmillr.com"}, {"name": "Bj\u00f8rge N\u00e6ss", "email": "bjoerge@origo.no"}, {"name": "Jeff Kunkle", "email": "jeff.kunkle@nearinfinity.com"}, {"name": "Fabio M. Costa", "email": "fabiomcosta@gmail.com"}, {"name": "Michael Riley", "email": "michael.riley@autodesk.com"}, {"name": "Ian Young", "email": "ian.greenleaf@gmail.com"}, {"name": "Jakub Nes\u030cetr\u030cil", "email": "jakub@apiary.io"}, {"name": "Tyson Tate", "email": "tyson@tysontate.com"}, {"name": "Jo Liss", "email": "joliss42@gmail.com"}, {"name": "Arian Stolwijk", "email": "arian@aryweb.nl"}, {"name": "Brendan Nee", "email": "brendan.nee@gmail.com"}, {"name": "Xavier Antoviaque", "email": "xavier@antoviaque.org"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Brian Beck", "email": "exogen@gmail.com"}, {"name": "Dave McKenna", "email": "davemckenna01@gmail.com"}, {"name": "Richard Dingwall", "email": "rdingwall@gmail.com"}, {"name": "Cory Thomas", "email": "cory.thomas@bazaarvoice.com"}, {"name": "R56", "email": "rviskus@gmail.com"}, {"name": "Ian Storm Taylor", "email": "ian@ianstormtaylor.com"}, {"name": "Andreas Brekken", "email": "andreas@opuno.com"}, {"name": "abrkn", "email": "a@abrkn.com"}, {"name": "Nathan Bowser", "email": "nathan.bowser@spiderstrategies.com"}, {"name": "L\u00e1szl\u00f3 B\u00e1csi", "email": "lackac@lackac.hu"}, {"name": "Atsuya Takagi", "email": "asoftonight@gmail.com"}, {"name": "Gavin Mogan", "email": "GavinM@airg.com"}, {"name": "fengmk2", "email": "fengmk2@gmail.com"}, {"name": "Seiya Konno", "email": "nulltask@gmail.com"}, {"name": "Jan Lehnardt", "email": "jan@apache.org"}, {"name": "Matt Robenolt", "email": "matt@ydekproductions.com"}, {"name": "Jonas Westerlund", "email": "jonas.westerlund@me.com"}, {"name": "Koen Punt", "email": "koen@koenpunt.nl"}, {"name": "Jason Barry", "email": "jay@jcbarry.com"}, {"name": "Austin Birch", "email": "mraustinbirch@gmail.com"}, {"name": "Adam Crabtree", "email": "adam.crabtree@redrobotlabs.com"}, {"name": "Casey Foster", "email": "casey@caseywebdev.com"}, {"name": "Jonathan Creamer", "email": "matrixhasyou2k4@gmail.com"}, {"name": "Brian Moore", "email": "guardbionic-github@yahoo.com"}, {"name": "traleig1", "email": "darkphoenix739@gmail.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}, {"name": "airportyh", "email": "airportyh@gmail.com"}, {"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Russ Bradberry", "email": "devdazed@me.com"}, {"name": "Ivan", "email": "ivan@kinvey.com"}, {"name": "Corey Butler", "email": "corey@coreybutler.com"}, {"name": "Paul Armstrong", "email": "paul@paularmstrongdesigns.com"}, {"name": "Herman Junge", "email": "herman@geekli.st"}, {"name": "Michael Schoonmaker", "email": "michael.r.schoonmaker@gmail.com"}, {"name": "Wil Moore III", "email": "wil.moore@wilmoore.com"}, {"name": "Pete Hawkins", "email": "pete@petes-imac.frontinternal.net"}, {"name": "tgautier@yahoo.com", "email": "tgautier@gmail.com"}, {"name": "yuitest", "email": "yuitest@cjhat.net"}, {"name": "Matt Smith", "email": "matthewgarysmith@gmail.com"}, {"name": "Katie Gengler", "email": "katiegengler@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Nathan Alderson", "email": "nathan.alderson@adtran.com"}, {"name": "Shawn Krisman", "email": "telaviv@github"}, {"name": "Merrick Christensen", "email": "merrick.christensen@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Simon Gaeremynck", "email": "gaeremyncks@gmail.com"}, {"name": "Jaakko Salonen", "email": "jaakko.salonen@iki.fi"}, {"name": "Jonathan Rajavuori", "email": "jrajav@gmail.com"}, {"name": "Forbes Lindesay", "email": "forbes@lindesay.co.uk"}, {"name": "Standa Opichal", "email": "opichals@gmail.com"}, {"name": "Matthew Shanley", "email": "matthewshanley@littlesecretsrecords.com"}, {"name": "James Lal", "email": "james@lightsofapollo.com"}, {"name": "Greg Perkins", "email": "gregperkins@alum.mit.edu"}, {"name": "Gareth Murphy", "email": "gareth.cpm@gmail.com"}, {"name": "Juzer Ali", "email": "er.juzerali@gmail.com"}, {"name": "Sasha Koss", "email": "koss@nocorp.me"}, {"name": "Justin DuJardin", "email": "justin.dujardin@sococo.com"}, {"name": "Frederico Silva", "email": "frederico.silva@gmail.com"}, {"name": "Jesse Dailey", "email": "jesse.dailey@gmail.com"}, {"name": "Yanis Wang", "email": "yanis.wang@gmail.com"}, {"name": "fcrisci", "email": "fabio.crisci@amadeus.com"}, {"name": "Javier Aranda", "email": "javierav@javierav.com"}, {"name": "Florian Margaine", "email": "florian@margaine.com"}, {"name": "fool2fish", "email": "fool2fish@gmail.com"}, {"name": "James Bowes", "email": "jbowes@repl.ca"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Mathieu Desv\u00e9", "email": "mathieudesve@MacBook-Pro-de-Mathieu.local"}, {"name": "Glen Huang", "email": "curvedmark@gmail.com"}, {"name": "Simon Goumaz", "email": "simon@attentif.ch"}, {"name": "Alexander Early", "email": "alexander.early@gmail.com"}, {"name": "Jimmy Cuadra", "email": "jimmy@jimmycuadra.com"}, {"name": "Russell Munson", "email": "rmunson@github.com"}, {"name": "lodr", "email": "salva@unoyunodiez.com"}, {"name": "Liam Newman", "email": "bitwiseman@gmail.com"}, {"name": "Dmitry Shirokov", "email": "deadrunk@gmail.com"}, {"name": "Fredrik Enestad", "email": "fredrik@devloop.se"}, {"name": "Kirill Korolyov", "email": "kirill.korolyov@gmail.com"}, {"name": "grasGendarme", "email": "me@grasgendar.me"}, {"name": "Mike Pennisi", "email": "mike@mikepennisi.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Tim Ehat", "email": "timehat@gmail.com"}, {"name": "Jeremy Martin", "email": "jmar777@gmail.com"}, {"name": "Mal Graty", "email": "mal.graty@googlemail.com"}, {"name": "Di Wu", "email": "dwu@palantir.com"}, {"name": "badunk", "email": "baduncaduncan@gmail.com"}, {"name": "Marc Kuo", "email": "kuomarc2@gmail.com"}, {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com"}, {"name": "Salehen Shovon Rahman", "email": "salehen.rahman@gmail.com"}, {"name": "eiji.ienaga", "email": "eiji.ienaga@gmail.com"}, {"name": "Oscar Godson", "email": "oscargodson@outlook.com"}, {"name": "Daniel Stockman", "email": "daniel.stockman@gmail.com"}, {"name": "Stephen Mathieson", "email": "smath23@gmail.com"}, {"name": "Travis Jeffery", "email": "tj@travisjeffery.com"}, {"name": "Andreas Lind Petersen", "email": "andreas@one.com"}, {"name": "Romain Prieto", "email": "romain.prieto@gmail.com"}, {"name": "JP Bochi", "email": "jpbochi@gmail.com"}, {"name": "Teddy Zeenny", "email": "teddyzeenny@gmail.com"}, {"name": "Roman Neuhauser", "email": "rneuhauser@suse.cz"}, {"name": "XhmikosR", "email": "xhmikosr@users.sourceforge.net"}, {"name": "Brian Lalor", "email": "blalor@bravo5.org"}, {"name": "Refael Ackermann", "email": "refael@empeeric.com"}, {"name": "ChrisWren", "email": "cthewren@gmail.com"}, {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com"}, {"name": "berni", "email": "berni@extensa.pl"}, {"name": "Andrey Popp", "email": "8mayday@gmail.com"}, {"name": "Brian M. Carlson", "email": "brian.m.carlson@gmail.com"}, {"name": "Michael Olson", "email": "mwolson@member.fsf.org"}, {"name": "Arnaud Brousseau", "email": "arnaud.brousseau@gmail.com"}, {"name": "Peter Rust", "email": "peter@cornerstonenw.com"}, {"name": "Vadim Nikitin", "email": "vnikiti@ncsu.edu"}, {"name": "Roman Shtylman", "email": "shtylman@gmail.com"}, {"name": "Tapiwa Kelvin", "email": "tapiwa@munzwa.tk"}, {"name": "Rustem Mustafin", "email": "mustafin.rustem@gmail.com"}, {"name": "Glen Mailer", "email": "glenjamin@gmail.com"}, {"name": "Nathan Black", "email": "nathan@nathanblack.org"}, {"name": "sebv", "email": "seb.vincent@gmail.com"}, {"name": "andy matthews", "email": "andy@commadelimited.com"}, {"name": "Benjie Gillam", "email": "benjie@jemjie.com"}, {"name": "Noshir Patel", "email": "nosh@blackpiano.com"}, {"name": "Ben Noordhuis", "email": "info@bnoordhuis.nl"}, {"name": "Jacob Wejendorp", "email": "jacob@wejendorp.dk"}, {"name": "claudyus", "email": "claudyus@HEX.(none)", "url": "none"}, {"name": "Denis Bardadym", "email": "bardadymchik@gmail.com"}, {"name": "Connor Dunn", "email": "connorhd@gmail.com"}, {"name": "Jonathan Ong", "email": "jonathanrichardong@gmail.com"}, {"name": "Harish", "email": "hyeluri@gmail.com"}, {"name": "Michal Charemza", "email": "michalcharemza@gmail.com"}, {"name": "startswithaj", "email": "jake.mc@icloud.com"}, {"name": "Gareth Aye", "email": "gaye@mozilla.com"}, {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "kavun", "email": "kevin.a.reed@gmail.com"}, {"name": "Christoffer Hallas", "email": "christoffer.hallas@gmail.com"}, {"name": "Jonathan Park", "email": "jpark@daptiv.com"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "John Doty", "email": "jrhdoty@gmail.com"}, {"name": "Shaine Hatch", "email": "shaine@squidtree.com"}, {"name": "Ben Bradley", "email": "ben@bradleyit.com"}, {"name": "qiuzuhui", "email": "qiuzuhui@users.noreply.github.com"}, {"name": "Jean Ponchon", "email": "gelule@gmail.com"}, {"name": "Linus Unneb\u00e4ck", "email": "linus@folkdatorn.se"}, {"name": "Mattias Tidlund", "email": "mattias.tidlund@learningwell.se"}, {"name": "Matija Marohni\u0107", "email": "matija.marohnic@gmail.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Joel Kemp", "email": "mrjoelkemp@gmail.com"}, {"name": "Zsolt Tak\u00e1cs", "email": "zsolt@takacs.cc"}, {"name": "jsdevel", "email": "js.developer.undefined@gmail.com"}, {"name": "lakmeer", "email": "lakmeerkravid@gmail.com"}, {"name": "Joshua Appelman", "email": "jappelman@xebia.com"}, {"name": "Christopher Hiller", "email": "boneskull@boneskull.com"}, {"name": "Michael Demmer", "email": "demmer@jut.io"}, {"name": "Giovanni Bassi", "email": "giggio@giggio.net"}, {"name": "Panu Horsmalahti", "email": "panu.horsmalahti@iki.fi"}, {"name": "nishigori", "email": "Takuya_Nishigori@voyagegroup.com"}, {"name": "Nicolo Taddei", "email": "taddei.uk@gmail.com"}, {"name": "Diogo Monteiro", "email": "diogo.gmt@gmail.com"}, {"name": "mrShturman", "email": "mrshturman@gmail.com"}, {"name": "PoppinL", "email": "poppinlp@gmail.com"}, {"name": "samuel goldszmidt", "email": "samuel.goldszmidt@gmail.com"}, {"name": "Rob Wu", "email": "rob@robwu.nl"}, {"name": "Kent C. Dodds", "email": "kent+github@doddsfamily.us"}, {"name": "Kevin Conway", "email": "kevinjacobconway@gmail.com"}, {"name": "Dominique Quatravaux", "email": "dominique@quatravaux.org"}, {"name": "zhiyelee", "email": "zhiyelee@gmail.com"}, {"name": "Quanlong He", "email": "kyan.ql.he@gmail.com"}, {"name": "omardelarosa", "email": "thedelarosa@gmail.com"}, {"name": "Ariel Mashraki", "email": "ariel@mashraki.co.il"}, {"name": "Sean Lang", "email": "slang800@gmail.com"}, {"name": "David da Silva Cont\u00edn", "email": "dasilvacontin@gmail.com"}, {"name": "C. Scott Ananian", "email": "cscott@cscott.net"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Richard Knop", "email": "RichardKnop@users.noreply.github.com"}, {"name": "Buck Doyle", "email": "b@chromatin.ca"}, {"name": "Jonas Dohse", "email": "jonas@mbr-targeting.com"}, {"name": "oveddan", "email": "stangogh@gmail.com"}, {"name": "monowerker", "email": "monowerker@gmail.com"}, {"name": "Marcello Bastea-Forte", "email": "marcello@cellosoft.com"}, {"name": "Beno\u00eet Zugmeyer", "email": "bzugmeyer@gmail.com"}, {"name": "Vlad Magdalin", "email": "vlad@webflow.com"}, {"name": "Moshe Kolodny", "email": "mkolodny@integralads.com"}, {"name": "Tom Coquereau", "email": "tom@thau.me"}, {"name": "Timothy Gu", "email": "timothygu99@gmail.com"}, {"name": "Ian Zamojc", "email": "ian@thesecretlocation.net"}, {"name": "Martin Marko", "email": "marcus@gratex.com"}, {"name": "Chris Buckley", "email": "chris@cmbuckley.co.uk"}, {"name": "Jake Craige", "email": "james.craige@gmail.com"}, {"name": "Fede Ramirez", "email": "i@2fd.me"}, {"name": "Parker Moore", "email": "parkrmoore@gmail.com"}, {"name": "Todd Agulnick", "email": "tagulnick@onjack.com"}, {"name": "Daniel St. Jules", "email": "danielst.jules@gmail.com"}, {"name": "Rico Sta. Cruz", "email": "rstacruz@users.noreply.github.com"}, {"name": "Anis Safine", "email": "anis.safine.ext@francetv.fr"}, {"name": "Adam Gruber", "email": "talknmime@gmail.com"}, {"name": "Sam Mussell", "email": "smussell@gmail.com"}, {"name": "klaemo", "email": "klaemo@fastmail.fm"}, {"name": "Stewart Taylor", "email": "stewart.taylor1@gmail.com"}, {"name": "Jordan Sexton", "email": "jordan@jordansexton.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Andrii Shumada", "email": "eagleeyes91@gmail.com"}, {"name": "Dominic Barnes", "email": "dominic@dbarnes.info"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Sune Simonsen", "email": "sune@we-knowhow.dk"}, {"name": "Kyle Mitchell", "email": "kyle@kemitchell.com"}, {"name": "James Nylen", "email": "jnylen@gmail.com"}, {"name": "Jonathan Delgado", "email": "jdelgado@rewip.com"}, {"name": "Jake Marsh", "email": "jakemmarsh@gmail.com"}, {"name": "slyg", "email": "syl.faucherand@gmail.com"}, {"name": "Tomer Eskenazi", "email": "tomer.eskenazi@ironsrc.com"}, {"name": "Jeff Schilling", "email": "jeff.schilling@q2ebanking.com"}, {"name": "Ryan Hubbard", "email": "ryanmhubbard@gmail.com"}, {"name": "amsul", "email": "reach@amsul.ca"}, {"name": "Kevin Kirsche", "email": "Kev.Kirsche+GitHub@gmail.com"}, {"name": "Gabriel Silk", "email": "gabesilk@gmail.com"}, {"name": "Johnathon Sanders", "email": "outdooricon@gmail.com"}, {"name": "Max Goodman", "email": "c@chromakode.com"}, {"name": "Nathan Houle", "email": "nathan@nathanhoule.com"}, {"name": "Ben Vinegar", "email": "ben@benv.ca"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Tingan Ho", "email": "tingan87@gmail.com"}, {"name": "Guy Arye", "email": "arye.guy@gmail.com"}, {"name": "Nik Nyby", "email": "nnyby@columbia.edu"}, {"name": "Artem Govorov", "email": "artem.govorov@gmail.com"}, {"name": "Ajay Kodali", "email": "ajay.kodali@citrix.com"}, {"name": "Ryan Tablada", "email": "ryan.tablada@gmail.com"}, {"name": "Pavel Zubkou", "email": "pavel.zubkou@gmail.com"}, {"name": "gigadude", "email": "gigadude@users.noreply.github.com"}, {"name": "Outsider", "email": "outsideris@gmail.com"}, {"name": "Jason Lai", "email": "jason@getpebble.com"}, {"name": "Aaron Krause", "email": "aaronjkrause@gmail.com"}, {"name": "wsw", "email": "wsw0108@gmail.com"}, {"name": "Kevin Burke", "email": "kev@inburke.com"}, {"name": "Berker Peksag", "email": "berker.peksag@gmail.com"}, {"name": "nexdrew", "email": "andrew.goode@nextraq.com"}, {"name": "Hugo Giraudel", "email": "hugo.giraudel@gmail.com"}, {"name": "Rich Trott", "email": "rtrott@gmail.com"}, {"name": "Matt Giles", "email": "matt.giles@cerner.com"}, {"name": "Joey Cozza", "email": "joey@grow.com"}, {"name": "Kris Rasmussen", "email": "kristopher.rasmussen@gmail.com"}, {"name": "James G. Kim", "email": "jgkim@jayg.org"}, {"name": "Sorin Iclanzan", "email": "sorin@iclanzan.com"}, {"name": "Rob Raux", "email": "rraux@peachworks.com"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@jetbrains.com"}, {"name": "Ian W. Remmel", "email": "design@ianwremmel.com"}, {"name": "tmont", "email": "tommy.mont@gmail.com"}, {"name": "John Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "Fagner Brack", "email": "github3@fagnermartins.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Michiel de Jong", "email": "michiel@unhosted.org"}, {"name": "Benoit Larroque", "email": "zeta.ben@gmail.com"}, {"name": "Charles Lowell", "email": "cowboyd@frontside.io"}, {"name": "Joao Moreno", "email": "mail@joaomoreno.com"}, {"name": "Long Ho", "email": "longlho@users.noreply.github.com"}, {"name": "Robert Rossmann", "email": "rr.rossmann@me.com"}, {"name": "Aaron Hamid", "email": "aaron.hamid@gmail.com"}, {"name": "Stone", "email": "baoshi.li@adleida.com"}, {"name": "Tom Hughes", "email": "tom@compton.nu"}, {"name": "Soel", "email": "shachar.soel@sap.com"}, {"name": "Mislav Marohni\u0107", "email": "mislav.marohnic@gmail.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Frank Leon Rose", "email": "frankleonrose@gmail.com"}, {"name": "Ryan Shaw", "email": "ryan.shaw@min.vc"}, {"name": "Thedark1337", "email": "thedark1337@thedark1337.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "ryym", "email": "ryym.64@gmail.com"}, {"name": "Josh Lory", "email": "josh.lory@code.org"}, {"name": "Jonathan Kim", "email": "jkimbo@gmail.com"}, {"name": "Al Scott", "email": "al.scott@atomicobject.com"}, {"name": "Tobias Bieniek", "email": "tobias.bieniek@gmail.com"}, {"name": "Benjamin Eidelman", "email": "beneidel@gmail.com"}, {"name": "Julien Wajsberg", "email": "felash@gmail.com"}, {"name": "sarehag", "email": "joakim.sarehag@gmail.com"}, {"name": "Alexander Shepelin", "email": "Brightcor@gmail.com"}, {"name": "OlegTsyba", "email": "oleg.tsyba.ua@gmail.com"}, {"name": "Xavier Damman", "email": "xdamman@gmail.com"}, {"name": "Mick Brooks", "email": "mick.brooks@sinking.in"}, {"name": "Erik Eng", "email": "mail@ptz0n.se"}, {"name": "Kelong Wang", "email": "buaawkl@gmail.com"}, {"name": "J\u00e9r\u00e9mie Astori", "email": "jeremie@astori.fr"}, {"name": "ScottFreeCode", "email": "ScottFreeCode@users.noreply.github.com"}, {"name": "Sergio Santoro", "email": "santoro.srg@gmail.com"}, {"name": "Adrian Ludwig", "email": "me@adrianludwig.pl"}, {"name": "Anders Olsen Sandvik", "email": "Andersos@users.noreply.github.com"}, {"name": "Thomas Grainger", "email": "tagrain@gmail.com"}, {"name": "jimenglish81", "email": "jimenglish81@gmail.com"}, {"name": "Avi Vahl", "email": "avi.vahl@wix.com"}, {"name": "Jason Leyba", "email": "jmleyba@gmail.com"}, {"name": "silentcloud", "email": "rjmuqiang@gmail.com"}, {"name": "Dmitriy Simushev", "email": "simushevds@gmail.com"}, {"name": "simov", "email": "simeonvelichkov@gmail.com"}, {"name": "Ross Warren", "email": "rosswarren4@gmail.com"}, {"name": "Benson Trent", "email": "bensontrent@gmail.com"}, {"name": "rmacklin", "email": "richard.github@nrm.com"}, {"name": "Rob Loach", "email": "robloach@gmail.com"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Callum Macrae", "email": "callum@macr.ae"}, {"name": "ELLIOTTCABLE", "email": "me@ell.io"}, {"name": "Anton", "email": "anton.redfox@gmail.com"}, {"name": "Peter M\u00fcller", "email": "munter@fumle.dk"}, {"name": "APerson", "email": "danielhglus@gmail.com"}, {"name": "not-an-aardvark", "email": "not-an-aardvark@users.noreply.github.com"}, {"name": "Alhadis", "email": "gardnerjohng@gmail.com"}, {"name": "Slobodan Mi\u0161kovi\u0107", "email": "slobodan@miskovic.ca"}, {"name": "Philip M. White", "email": "philip@mailworks.org"}, {"name": "Christian", "email": "me@rndm.de"}, {"name": "anton", "email": "anton.valickij@gmail.com"}, {"name": "Dmitry Sorin", "email": "info@staypositive.ru"}, {"name": "Vivek Ganesan", "email": "caliberoviv@gmail.com"}, {"name": "Josh Eversmann", "email": "josh.eversmann@gmail.com"}, {"name": "inxorable", "email": "inxorable@codewren.ch"}, {"name": "Ben Harris", "email": "benhdev@gmail.com"}, {"name": "Aaron Petcoff", "email": "hello@aaronpetcoff.me"}, {"name": "Matt Bierner", "email": "mattbierner@gmail.com"}, {"name": "Ville Saukkonen", "email": "villesau@users.noreply.github.com"}, {"name": "Ben Hutchison", "email": "ben@aldaviva.com"}, {"name": "Volker Buzek", "email": "volker.buzek@sap.com"}, {"name": "Scott Kao", "email": "Scottkao85@users.noreply.github.com"}, {"name": "Sulabh Bista", "email": "sul4bh@gmail.com"}, {"name": "rotemdan", "email": "rotemdan@gmail.com"}, {"name": "Fumiaki MATSUSHIMA", "email": "mtsmfm@gmail.com"}, {"name": "Markus Tacker", "email": "m@coderbyheart.com"}, {"name": "Christoph Neuroth", "email": "christoph.neuroth@gmail.com"}, {"name": "Enric Pallerols", "email": "enric@pallerols.cat"}, {"name": "Craig Taub", "email": "craigtaub@gmail.com"}, {"name": "Yoshiya Hinosawa", "email": "hinosawa@waku-2.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Chris Lamb", "email": "chris@chris-lamb.co.uk"}, {"name": "Igwe Kalu", "email": "igwe.kalu@live.com"}, {"name": "Kevin Wang", "email": "kevin@fossa.io"}, {"name": "Laurence Rowe", "email": "lrowe@netflix.com"}, {"name": "Jakob Krigovsky", "email": "jakob@krigovsky.com"}, {"name": "Chris", "email": "chrisleck@users.noreply.github.com"}, {"name": "Kunal Nagpal", "email": "kunagpal@users.noreply.github.com"}, {"name": "elergy", "email": "elergy@yandex-team.ru"}, {"name": "Jupp M\u00fcller", "email": "jupp0r@gmail.com"}, {"name": "Popr\u00e1di \u00c1rp\u00e1d", "email": "popradi.arpad11@gmail.com"}, {"name": "Charlie Rudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "Angelica Valenta", "email": "angelicavalenta@gmail.com"}, {"name": "Jan Krems", "email": "jan.krems@groupon.com"}, {"name": "Josh Soref", "email": "jsoref@users.noreply.github.com"}, {"name": "solodynamo", "email": "bittuf3@gmail.com"}, {"name": "Eli Skeggs", "email": "skeggse@users.noreply.github.com"}, {"name": "Nikolaos Georgiou", "email": "Nikolaos.Georgiou@gmail.com"}, {"name": "olsonpm", "email": "olsonpm@users.noreply.github.com"}, {"name": "David Neubauer", "email": "davidneub@gmail.com"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "38elements", "email": "mh19820223@gmail.com"}, {"name": "Guangcong Luo", "email": "guangcongluo@gmail.com"}, {"name": "David M. Lee", "email": "leedm777@yahoo.com"}, {"name": "tripu", "email": "t@tripu.info"}, {"name": "Pat Finnigan", "email": "patrick.k.finnigan@gmail.com"}, {"name": "Eugene Tiutiunnyk", "email": "eugene.tiutiunnyk@lookout.com"}, {"name": "Aaron Brady", "email": "aaron@mori.com"}, {"name": "Charles Merriam", "email": "charles.merriam@gmail.com"}, {"name": "Kevin Partington", "email": "platinum.azure@kernelpanicstudios.com"}, {"name": "Lane Kelly", "email": "lanekelly16@gmail.com"}, {"name": "Cube", "email": "maty21@gmail.com"}, {"name": "yehiyam", "email": "yehiyam@users.noreply.github.com"}, {"name": "Jon Surrell", "email": "jon.surrell@automattic.com"}, {"name": "\u73b0\u5145", "email": "qixiang.cqx@alibaba-inc.com"}, {"name": "Ahmad Bamieh", "email": "ahmadbamieh@gmail.com"}, {"name": "Capacitor Set", "email": "CapacitorSet@users.noreply.github.com"}, {"name": "Anthony", "email": "keppi@o2.pl"}, {"name": "Can Oztokmak", "email": "can@zeplin.io"}, {"name": "ImgBot", "email": "31427850+ImgBotApp@users.noreply.github.com"}, {"name": "Thomas Broadley", "email": "buriedunderbooks@hotmail.com"}, {"name": "FND", "email": "FND@users.noreply.github.com"}, {"name": "Dina Berry", "email": "dfberry@users.noreply.github.com"}, {"name": "Marais Rossouw", "email": "me@maraisr.com"}, {"name": "Andrew Krawchyk", "email": "903716+akrawchyk@users.noreply.github.com"}, {"name": "Ted Yavuzkurt", "email": "hello@TedY.io"}, {"name": "Daniel Ruf", "email": "daniel@daniel-ruf.de"}, {"name": "Harry Wolff", "email": "hswolff@users.noreply.github.com"}, {"name": "Valeri Karpov", "email": "val@karpov.io"}, {"name": "Silvio Massari", "email": "silvio.massari@auth0.com"}, {"name": "Joseph Lin", "email": "josephlin55555@gmail.com"}, {"name": "Honza Javorek", "email": "mail@honzajavorek.cz"}, {"name": "Harry Sarson", "email": "harry.sarson@hotmail.co.uk"}, {"name": "Anish Karandikar", "email": "anishkny@gmail.com"}, {"name": "Victor", "email": "victor@turo.com"}, {"name": "Emanuele", "email": "my.burning@gmail.com"}, {"name": "Thomas Vantuycom", "email": "thomasvantuycom@protonmail.com"}, {"name": "Alex Bainter", "email": "metalex9@users.noreply.github.com"}, {"name": "Jerry Muzsik", "email": "jerrymuzsik@icloud.com"}, {"name": "Nicolas Girault", "email": "nic.girault@gmail.com"}, {"name": "dfberry", "email": "dinaberry@outlook.com"}, {"name": "DavNej", "email": "davnej.dev@gmail.com"}, {"name": "Paul Roebuck", "email": "plroebuck@users.noreply.github.com"}, {"name": "Tim Harshman", "email": "goteamtim+git@gmail.com"}, {"name": "Charles Samborski", "email": "demurgos@demurgos.net"}, {"name": "Tobias Mollstam", "email": "tobias@mollstam.com"}, {"name": "Ben Glassman", "email": "benglass@users.noreply.github.com"}, {"name": "Mark Owsiak", "email": "mark.owsiak@gmail.com"}, {"name": "fargies", "email": "fargies@users.noreply.github.com"}, {"name": "Marc Udoff", "email": "mlucool@gmail.com"}, {"name": "gizemkeser", "email": "44727928+gizemkeser@users.noreply.github.com"}, {"name": "Fin Chen", "email": "finfin@gmail.com"}, {"name": "Brittany Moore", "email": "moore.brittanyann@gmail.com"}, {"name": "F\u00e1bio Santos", "email": "fabiosantosart@gmail.com"}, {"name": "Jayasankar", "email": "jayasankar.m@gmail.com"}, {"name": "Juerg B", "email": "44573692+juergba@users.noreply.github.com"}, {"name": "Svetlana", "email": "39729453+Lana-Light@users.noreply.github.com"}, {"name": "Martijn Cuppens", "email": "martijn.cuppens@intracto.com"}, {"name": "Anna Henningsen", "email": "github@addaleax.net"}, {"name": "Andreas Lind", "email": "andreaslindpetersen@gmail.com"}, {"name": "Chen Yangjian", "email": "252317+cyjake@users.noreply.github.com"}, {"name": "Corey Farrell", "email": "git@cfware.com"}, {"name": "Wanseob Lim", "email": "email@wanseob.com"}, {"name": "Szauka", "email": "33459309+Szauka@users.noreply.github.com"}, {"name": "Brian Tomlin", "email": "tendonstrength@gmail.com"}, {"name": "Sylvain", "email": "sstephant+github@gmail.com"}, {"name": "Adam Ginzberg", "email": "aginzberg@gmail.com"}, {"name": "XhmikosR", "email": "xhmikosr@gmail.com"}, {"name": "Gast\u00f3n I. Silva", "email": "givanse@gmail.com"}, {"name": "Andrew Bradley", "email": "cspotcode@gmail.com"}, {"name": "Andrew Bradley", "email": "abradley@brightcove.com"}, {"name": "DavidLi119", "email": "han.david.li@gmail.com"}, {"name": "James D. Rogers", "email": "jd2rogers2@gmail.com"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "juergba", "email": "filodron@gmail.com"}, {"name": "Sylvester Keil", "email": "sylvester@keil.or.at"}, {"name": "Bjorn Stromberg", "email": "bjorn@bjornstar.com"}, {"name": "Stephen Hess", "email": "trescube@users.noreply.github.com"}, {"name": "toyjhlee", "email": "toyjhlee@gmail.com"}, {"name": "Piotr Kuczynski", "email": "piotr.kuczynski@gmail.com"}, {"name": "Thomas Scholtes", "email": "thomas-scholtes@gmx.de"}, {"name": "Brian Lagerman", "email": "49239617+brian-lagerman@users.noreply.github.com"}, {"name": "Pascal", "email": "pascal@pascal.com"}, {"name": "Gabe Gorelick", "email": "gabegorelick@gmail.com"}, {"name": "Daniel Ruf", "email": "827205+DanielRuf@users.noreply.github.com"}, {"name": "Mario D\u00edaz Ce\u00f1era", "email": "46492068+MarioDiaz98@users.noreply.github.com"}, {"name": "Oliver Salzburg", "email": "oliver.salzburg@gmail.com"}, {"name": "Sona Lee", "email": "mojosoeun@gmail.com"}, {"name": "Park Seong-beom", "email": "parkgds@gmail.com"}, {"name": "EunChan Park", "email": "pec9399@naver.com"}, {"name": "Mia", "email": "miajeongdev@gmail.com"}, {"name": "Lindsay-Needs-Sleep", "email": "51773923+Lindsay-Needs-Sleep@users.noreply.github.com"}, {"name": "Soobin Bak", "email": "qls014738@gmail.com"}, {"name": "Peter Schmidt", "email": "peter@peterjs.com"}, {"name": "SheetJSDev", "email": "dev@sheetjs.com"}, {"name": "HyunSangHan", "email": "gustkd3@gmail.com"}, {"name": "Jan-Philip Gehrcke", "email": "jgehrcke@googlemail.com"}, {"name": "Robert Kieffer", "email": "robert@broofa.com"}, {"name": "Saerom Bang", "email": "saerombang11@gmail.com"}, {"name": "Kyle Fuller", "email": "kyle@fuller.li"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Hugo Kim", "email": "k7120792@gmail.com"}, {"name": "KyoungWan", "email": "kyngwan@gmail.com"}, {"name": "Zirak", "email": "zirakertan@gmail.com"}, {"name": "Christian Holm", "email": "christian@peakon.com"}, {"name": "Kai Cataldo", "email": "kai@kaicataldo.com"}, {"name": "Gil Tayar", "email": "gil.tayar@applitools.com"}, {"name": "Ulises Gasc\u00f3n", "email": "UlisesGascon@users.noreply.github.com"}, {"name": "kundol", "email": "jhc9639@naver.com"}, {"name": "Arvid Ottenberg", "email": "arvid.ottenberg@gmx.de"}, {"name": "Daniel0113", "email": "Daniel.febles97@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "JacobLey", "email": "37151850+JacobLey@users.noreply.github.com"}, {"name": "Gil Tayar", "email": "gil@tayar.org"}], "repository": {"type": "git", "url": "git+https://github.com/mochajs/mocha.git"}, "links": {"npm": "https://www.npmjs.com/package/mocha", "homepage": "https://mochajs.org/", "repository": "https://github.com/mochajs/mocha", "bugs": "https://github.com/mochajs/mocha/issues/"}, "license": "MIT", "dependencies": {"ansi-colors": "4.1.1", "browser-stdout": "1.3.1", "chokidar": "3.3.1", "debug": "3.2.6", "diff": "4.0.2", "escape-string-regexp": "1.0.5", "find-up": "4.1.0", "glob": "7.1.6", "growl": "1.10.5", "he": "1.2.0", "js-yaml": "3.13.1", "log-symbols": "3.0.0", "minimatch": "3.0.4", "ms": "2.1.2", "object.assign": "4.1.0", "promise.allsettled": "1.0.2", "serialize-javascript": "3.0.0", "strip-json-comments": "3.0.1", "supports-color": "7.1.0", "which": "2.0.2", "wide-align": "1.1.3", "workerpool": "6.0.0", "yargs": "13.3.2", "yargs-parser": "13.1.2", "yargs-unparser": "1.6.0"}, "devDependencies": {"@11ty/eleventy": "^0.10.0", "@11ty/eleventy-plugin-inclusive-language": "^1.0.0", "@mocha/docdash": "^2.1.3", "assetgraph-builder": "^8.0.1", "autoprefixer": "^9.7.4", "babel-eslint": "^10.1.0", "browserify": "^16.5.0", "browserify-package-json": "^1.0.1", "chai": "^4.2.0", "coffee-script": "^1.12.7", "coveralls": "^3.0.11", "cross-env": "^6.0.3", "cross-spawn": "^7.0.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-config-semistandard": "^15.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-import": "^2.20.1", "eslint-plugin-node": "^11.0.0", "eslint-plugin-prettier": "^3.1.2", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "fs-extra": "^9.0.0", "husky": "^4.2.3", "hyperlink": "^4.4.3", "image-size": "^0.8.3", "jsdoc": "^3.6.3", "karma": "^4.4.1", "karma-browserify": "^7.0.0", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.5", "karma-sauce-launcher": "^2.0.2", "lint-staged": "^9.5.0", "markdown-it": "^10.0.0", "markdown-it-anchor": "^5.2.5", "markdown-it-attrs": "^3.0.2", "markdown-it-emoji": "^1.4.0", "markdown-it-prism": "^2.0.5", "markdown-toc": "^1.2.0", "markdownlint-cli": "^0.22.0", "needle": "^2.4.1", "nps": "^5.9.12", "nyc": "^15.0.0", "prettier": "^1.19.1", "remark": "^11.0.2", "remark-github": "^8.0.0", "remark-inline-links": "^3.1.3", "rewiremock": "^3.14.1", "rimraf": "^3.0.2", "sinon": "^9.0.1", "strip-ansi": "^6.0.0", "svgo": "^1.3.2", "through2": "^3.0.1", "to-vfile": "^6.1.0", "unexpected": "^11.14.0", "unexpected-eventemitter": "^2.2.0", "unexpected-sinon": "^10.11.2", "uslug": "^1.0.4", "watchify": "^3.11.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 8}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 11}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <img src=\"https://cldup.com/xFVFxOioAU.svg\" alt=\"Mocha test framework\"/>\n</p>\n\n<p align=\"center\">\u2615\ufe0f Simple, flexible, fun JavaScript test framework for Node.js & The Browser \u2615\ufe0f</p>\n\n<p align=\"center\"><a href=\"http://travis-ci.org/mochajs/mocha\"><img src=\"https://api.travis-ci.org/mochajs/mocha.svg?branch=master\" alt=\"Build Status\"></a>  <a href=\"https://coveralls.io/github/mochajs/mocha\"><img src=\"https://coveralls.io/repos/github/mochajs/mocha/badge.svg\" alt=\"Coverage Status\"></a>  <a href=\"https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_shield\"><img src=\"https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=shield\" alt=\"FOSSA Status\"></a>  <a href=\"https://gitter.im/mochajs/mocha?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Gitter\"></a>  <a href=\"https://github.com/mochajs/mocha#backers\"><img src=\"https://opencollective.com/mochajs/backers/badge.svg\" alt=\"OpenCollective\"></a>  <a href=\"https://github.com/mochajs/mocha#sponsors\"><img src=\"https://opencollective.com/mochajs/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n</p>\n\n<p align=\"center\"><br><img alt=\"Mocha Browser Support h/t SauceLabs\" src=\"https://saucelabs.com/browser-matrix/mochajs.svg\" width=\"354\"></p>\n\n## Links\n\n- **[Documentation](https://mochajs.org/)**\n- **[Release Notes / History / Changes](https://github.com/mochajs/mocha/blob/master/CHANGELOG.md)**\n- [Code of Conduct](https://github.com/mochajs/mocha/blob/master/.github/CODE_OF_CONDUCT.md)\n- [Contributing](https://github.com/mochajs/mocha/blob/master/.github/CONTRIBUTING.md)\n- [Gitter Chatroom](https://gitter.im/mochajs/mocha) (ask questions here!)\n- [Google Group](https://groups.google.com/group/mochajs)\n- [Issue Tracker](https://github.com/mochajs/mocha/issues)\n\n## Backers\n\n[Become a backer](https://opencollective.com/mochajs#backer) and show your support to our open source project.\n\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/0/avatar)](https://opencollective.com/mochajs/backer/0/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/1/avatar)](https://opencollective.com/mochajs/backer/1/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/2/avatar)](https://opencollective.com/mochajs/backer/2/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/3/avatar)](https://opencollective.com/mochajs/backer/3/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/4/avatar)](https://opencollective.com/mochajs/backer/4/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/5/avatar)](https://opencollective.com/mochajs/backer/5/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/6/avatar)](https://opencollective.com/mochajs/backer/6/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/7/avatar)](https://opencollective.com/mochajs/backer/7/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/8/avatar)](https://opencollective.com/mochajs/backer/8/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/9/avatar)](https://opencollective.com/mochajs/backer/9/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/10/avatar)](https://opencollective.com/mochajs/backer/10/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/11/avatar)](https://opencollective.com/mochajs/backer/11/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/12/avatar)](https://opencollective.com/mochajs/backer/12/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/13/avatar)](https://opencollective.com/mochajs/backer/13/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/14/avatar)](https://opencollective.com/mochajs/backer/14/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/15/avatar)](https://opencollective.com/mochajs/backer/15/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/16/avatar)](https://opencollective.com/mochajs/backer/16/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/17/avatar)](https://opencollective.com/mochajs/backer/17/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/18/avatar)](https://opencollective.com/mochajs/backer/18/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/19/avatar)](https://opencollective.com/mochajs/backer/19/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/20/avatar)](https://opencollective.com/mochajs/backer/20/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/21/avatar)](https://opencollective.com/mochajs/backer/21/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/22/avatar)](https://opencollective.com/mochajs/backer/22/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/23/avatar)](https://opencollective.com/mochajs/backer/23/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/24/avatar)](https://opencollective.com/mochajs/backer/24/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/25/avatar)](https://opencollective.com/mochajs/backer/25/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/26/avatar)](https://opencollective.com/mochajs/backer/26/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/27/avatar)](https://opencollective.com/mochajs/backer/27/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/28/avatar)](https://opencollective.com/mochajs/backer/28/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/29/avatar)](https://opencollective.com/mochajs/backer/29/website)\n\n## Sponsors\n\nDoes your company use Mocha? Ask your manager or marketing team if your company would be interested in supporting our project. Support will allow the maintainers to dedicate more time for maintenance and new features for everyone. Also, your company's logo will show [on GitHub](https://github.com/mochajs/mocha#readme) and on [our site](https://mochajs.org) - who doesn't want a little extra exposure? [Here's the info](https://opencollective.com/mochajs#sponsor).\n\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/0/avatar)](https://opencollective.com/mochajs/sponsor/0/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/1/avatar)](https://opencollective.com/mochajs/sponsor/1/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/2/avatar)](https://opencollective.com/mochajs/sponsor/2/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/3/avatar)](https://opencollective.com/mochajs/sponsor/3/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/4/avatar)](https://opencollective.com/mochajs/sponsor/4/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/5/avatar)](https://opencollective.com/mochajs/sponsor/5/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/6/avatar)](https://opencollective.com/mochajs/sponsor/6/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/7/avatar)](https://opencollective.com/mochajs/sponsor/7/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/8/avatar)](https://opencollective.com/mochajs/sponsor/8/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/9/avatar)](https://opencollective.com/mochajs/sponsor/9/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/10/avatar)](https://opencollective.com/mochajs/sponsor/10/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/11/avatar)](https://opencollective.com/mochajs/sponsor/11/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/12/avatar)](https://opencollective.com/mochajs/sponsor/12/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/13/avatar)](https://opencollective.com/mochajs/sponsor/13/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/14/avatar)](https://opencollective.com/mochajs/sponsor/14/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/15/avatar)](https://opencollective.com/mochajs/sponsor/15/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/16/avatar)](https://opencollective.com/mochajs/sponsor/16/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/17/avatar)](https://opencollective.com/mochajs/sponsor/17/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/18/avatar)](https://opencollective.com/mochajs/sponsor/18/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/19/avatar)](https://opencollective.com/mochajs/sponsor/19/website)\n\n## Development\n\nYou might want to know that:\n\n- Mocha is the _most-depended-upon_ module on npm (source: [libraries.io](https://libraries.io/search?order=desc&platforms=NPM&sort=dependents_count)), and\n- Mocha is an _independent_ open-source project, maintained exclusively by volunteers.\n\nYou might want to help:\n\n- New to contributing to Mocha? Check out this list of [good first issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-issue)\n- Mocha could use a hand with [these issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\n- The [maintainer's handbook](https://github.com/mochajs/mocha/blob/master/MAINTAINERS.md) explains how things get done\n\nFinally, come [chat with the maintainers](https://gitter.im/mochajs/contributors) on Gitter if you want to help with:\n\n- Triaging issues, answering questions\n- Review, merging, and closing pull requests\n- Other project-maintenance-y things\n\n## License\n\nCopyright 2011-2020 OpenJS Foundation and contributors. Licensed [MIT](https://github.com/mochajs/mocha/blob/master/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 882252}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4716770}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 19792768}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 56947413}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 100958909}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 183001035}], "dependentsCount": 5915, "starsCount": 704}, "github": {"homepage": "https://mochajs.org", "starsCount": 19417, "forksCount": 2660, "subscribersCount": 410, "issues": {"count": 4289, "openCount": 305, "distribution": {"3600": 447, "10800": 210, "32400": 221, "97200": 428, "291600": 439, "874800": 441, "2624400": 480, "7873200": 392, "23619600": 469, "70858800": 440, "212576400": 322}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 867}, {"username": "boneskull", "commitsCount": 583}, {"username": "travisjeffery", "commitsCount": 105}, {"username": "craigtaub", "commitsCount": 72}, {"username": "juergba", "commitsCount": 67}, {"username": "Munter", "commitsCount": 60}, {"username": "plroebuck", "commitsCount": 46}, {"username": "dasilvacontin", "commitsCount": 43}, {"username": "danielstjules", "commitsCount": 34}, {"username": "outsideris", "commitsCount": 29}, {"username": "rauchg", "commitsCount": 29}, {"username": "ScottFreeCode", "commitsCount": 27}, {"username": "a8m", "commitsCount": 19}, {"username": "XhmikosR", "commitsCount": 18}, {"username": "adomokos", "commitsCount": 13}, {"username": "jfirebaugh", "commitsCount": 10}, {"username": "joliss", "commitsCount": 9}, {"username": "ndhoule", "commitsCount": 9}, {"username": "Bamieh", "commitsCount": 8}, {"username": "TooTallNate", "commitsCount": 8}, {"username": "domenic", "commitsCount": 8}, {"username": "jugglinmike", "commitsCount": 8}, {"username": "tricknotes", "commitsCount": 7}, {"username": "brendannee", "commitsCount": 6}, {"username": "geigerzaehler", "commitsCount": 6}, {"username": "jamescarr", "commitsCount": 6}, {"username": "rstacruz", "commitsCount": 6}, {"username": "Raynos", "commitsCount": 5}, {"username": "aheckmann", "commitsCount": 5}, {"username": "hokaccha", "commitsCount": 5}, {"username": "mislav", "commitsCount": 5}, {"username": "papandreou", "commitsCount": 5}, {"username": "sunesimonsen", "commitsCount": 5}, {"username": "DanielRuf", "commitsCount": 4}, {"username": "antoviaque", "commitsCount": 4}, {"username": "cspotcode", "commitsCount": 4}, {"username": "ematipico", "commitsCount": 4}, {"username": "harrysarson", "commitsCount": 4}, {"username": "jkrall", "commitsCount": 4}, {"username": "makepanic", "commitsCount": 4}, {"username": "mantoni", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "vkarpov15", "commitsCount": 4}, {"username": "xxczaki", "commitsCount": 4}, {"username": "38elements", "commitsCount": 3}, {"username": "ArtemGovorov", "commitsCount": 3}, {"username": "AviVahl", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "HyunSangHan", "commitsCount": 3}, {"username": "amsul", "commitsCount": 3}, {"username": "arvidOtt", "commitsCount": 3}, {"username": "avaly", "commitsCount": 3}, {"username": "benjie", "commitsCount": 3}, {"username": "demmer", "commitsCount": 3}, {"username": "dhendo", "commitsCount": 3}, {"username": "dump247", "commitsCount": 3}, {"username": "fool2fish", "commitsCount": 3}, {"username": "fredr", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "haru01", "commitsCount": 3}, {"username": "iammerrick", "commitsCount": 3}, {"username": "jldailey", "commitsCount": 3}, {"username": "jonathanong", "commitsCount": 3}, {"username": "nathanbowser", "commitsCount": 3}, {"username": "paulmillr", "commitsCount": 3}, {"username": "seppevs", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "tysonmote", "commitsCount": 3}, {"username": "wejendorp", "commitsCount": 3}, {"username": "xdamman", "commitsCount": 3}, {"username": "1999", "commitsCount": 2}, {"username": "TimothyGu", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "adamgruber", "commitsCount": 2}, {"username": "akrawchyk", "commitsCount": 2}, {"username": "anishkny", "commitsCount": 2}, {"username": "bd82", "commitsCount": 2}, {"username": "bdharris08", "commitsCount": 2}, {"username": "beneidel", "commitsCount": 2}, {"username": "charlierudolph", "commitsCount": 2}, {"username": "dfberry", "commitsCount": 2}, {"username": "giltayar", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ianwremmel", "commitsCount": 2}, {"username": "inukshuk", "commitsCount": 2}, {"username": "jonnyreeves", "commitsCount": 2}, {"username": "jsoref", "commitsCount": 2}, {"username": "kunagpal", "commitsCount": 2}, {"username": "lrowe", "commitsCount": 2}, {"username": "maty21", "commitsCount": 2}, {"username": "mlucool", "commitsCount": 2}, {"username": "ngeor", "commitsCount": 2}, {"username": "not-an-aardvark", "commitsCount": 2}, {"username": "silentcloud", "commitsCount": 2}, {"username": "skeggse", "commitsCount": 2}, {"username": "sul4bh", "commitsCount": 2}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 9}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 24}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 62}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 96}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 155}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}]}, "source": {"files": {"readmeSize": 10210, "testsSize": 657189, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "service": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "shields": "https://img.shields.io/travis/mochajs/mocha/master.svg", "content": "https://img.shields.io/travis/mochajs/mocha/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "service": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "shields": "https://img.shields.io/coveralls/mochajs/mocha.svg", "content": "https://img.shields.io/coveralls/mochajs/mocha.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"js-yaml": {"required": "3.13.1", "stable": "3.14.0", "latest": "3.14.0"}, "yargs": {"required": "13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}, "log-symbols": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "strip-json-comments": {"required": "3.0.1", "stable": "3.1.0", "latest": "3.1.0"}, "yargs-parser": {"required": "13.1.2", "stable": "18.1.3", "latest": "5.0.0-security.0"}, "escape-string-regexp": {"required": "1.0.5", "stable": "4.0.0", "latest": "4.0.0"}, "serialize-javascript": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "chokidar": {"required": "3.3.1", "stable": "3.4.0", "latest": "3.4.0"}, "debug": {"required": "3.2.6", "stable": "4.1.1", "latest": "4.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.816, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 23291, "downloadsCount": 18982471, "downloadsAcceleration": 54474.090962709306, "dependentsCount": 5915}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7923408206630028, "detail": {"quality": 0.9142460504770785, "popularity": 0.8135247776758456, "maintenance": 0.6666666666666666}}}}, {"typescript": {"analyzedAt": "2019-04-12T06:15:16.975Z", "collected": {"metadata": {"name": "typescript", "scope": "unscoped", "version": "3.4.3", "description": "TypeScript is a language for application scale JavaScript development", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript"], "date": "2019-04-09T23:21:12.530Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "typescript", "email": "typescript@microsoft.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/TypeScript.git"}, "links": {"npm": "https://www.npmjs.com/package/typescript", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/TypeScript", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "Apache-2.0", "devDependencies": {"@octokit/rest": "latest", "@types/browserify": "latest", "@types/chai": "latest", "@types/convert-source-map": "latest", "@types/del": "latest", "@types/glob": "latest", "@types/gulp": "^4.0.5", "@types/gulp-concat": "latest", "@types/gulp-newer": "latest", "@types/gulp-rename": "0.0.33", "@types/gulp-sourcemaps": "0.0.32", "@types/jake": "latest", "@types/merge2": "latest", "@types/minimatch": "latest", "@types/minimist": "latest", "@types/mkdirp": "latest", "@types/mocha": "latest", "@types/ms": "latest", "@types/node": "8.5.5", "@types/q": "latest", "@types/source-map-support": "latest", "@types/through2": "latest", "@types/travis-fold": "latest", "@types/xml2js": "^0.4.0", "browser-resolve": "^1.11.2", "browserify": "latest", "chai": "latest", "chalk": "latest", "convert-source-map": "latest", "del": "latest", "fancy-log": "latest", "fs-extra": "^6.0.1", "gulp": "^4.0.0", "gulp-concat": "latest", "gulp-insert": "latest", "gulp-newer": "latest", "gulp-rename": "latest", "gulp-sourcemaps": "latest", "istanbul": "latest", "lodash": "^4.17.11", "merge2": "latest", "minimist": "latest", "mkdirp": "latest", "mocha": "latest", "mocha-fivemat-progress-reporter": "latest", "ms": "latest", "plugin-error": "latest", "pretty-hrtime": "^1.0.3", "prex": "^0.4.3", "q": "latest", "remove-internal": "^2.9.2", "source-map-support": "latest", "through2": "latest", "travis-fold": "latest", "tslint": "latest", "typescript": "next", "vinyl": "latest", "vinyl-sourcemaps-apply": "latest", "xml2js": "^0.4.19"}, "releases": [{"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 28}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 73}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 135}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 272}, {"from": "2017-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 588}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2019-04-11T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 1062633}, {"from": "2019-04-05T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 5945211}, {"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 24753626}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 66611336}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 114604898}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 193806251}], "dependentsCount": 5813, "starsCount": 261}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0.4}, "popularity": {"communityInterest": 261, "downloadsCount": 22203778.666666668, "downloadsAcceleration": 99965.67104261796, "dependentsCount": 5813}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/typescript-qgbwxfi3ye/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-15T07:14:48.602Z"}, "score": {"final": 0.43938296326547405, "detail": {"quality": 0.29661503613275836, "popularity": 0.667805102168514, "maintenance": 0.3333333333333333}}}}, {"webpack": {"analyzedAt": "2020-06-11T22:38:57.104Z", "collected": {"metadata": {"name": "webpack", "scope": "unscoped", "version": "4.43.0", "description": "Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jsx, es7, css, less, ... and your custom stuff.", "date": "2020-04-21T16:19:14.009Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, "maintainers": [{"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack", "homepage": "https://github.com/webpack/webpack", "repository": "https://github.com/webpack/webpack", "bugs": "https://github.com/webpack/webpack/issues"}, "license": "MIT", "dependencies": {"@webassemblyjs/ast": "1.9.0", "@webassemblyjs/helper-module-context": "1.9.0", "@webassemblyjs/wasm-edit": "1.9.0", "@webassemblyjs/wasm-parser": "1.9.0", "acorn": "^6.4.1", "ajv": "^6.10.2", "ajv-keywords": "^3.4.1", "chrome-trace-event": "^1.0.2", "enhanced-resolve": "^4.1.0", "eslint-scope": "^4.0.3", "json-parse-better-errors": "^1.0.2", "loader-runner": "^2.4.0", "loader-utils": "^1.2.3", "memory-fs": "^0.4.1", "micromatch": "^3.1.10", "mkdirp": "^0.5.3", "neo-async": "^2.6.1", "node-libs-browser": "^2.2.1", "schema-utils": "^1.0.0", "tapable": "^1.1.3", "terser-webpack-plugin": "^1.4.3", "watchpack": "^1.6.1", "webpack-sources": "^1.4.1"}, "devDependencies": {"@babel/core": "^7.7.2", "@types/node": "^10.12.21", "@types/tapable": "^1.0.1", "@types/webpack-sources": "^0.1.4", "@yarnpkg/lockfile": "^1.1.0", "babel-loader": "^8.0.6", "benchmark": "^2.1.1", "bundle-loader": "~0.5.0", "coffee-loader": "^0.9.0", "coffeescript": "^2.3.2", "coveralls": "^3.0.2", "css-loader": "^2.1.0", "es6-promise-polyfill": "^1.1.1", "eslint": "^5.8.0", "eslint-config-prettier": "^4.0.0", "eslint-plugin-jest": "^22.2.2", "eslint-plugin-jsdoc": "^15.3.2", "eslint-plugin-node": "^8.0.0", "eslint-plugin-prettier": "^3.0.0", "express": "~4.16.4", "file-loader": "^3.0.1", "glob": "^7.1.3", "husky": "^1.1.3", "i18n-webpack-plugin": "^1.0.0", "istanbul": "^0.4.5", "jest": "^24.9.0", "jest-junit": "^8.0.0", "json-loader": "^0.5.7", "json-schema-to-typescript": "^6.0.1", "less": "^3.9.0", "less-loader": "^4.0.3", "lint-staged": "^8.0.4", "lodash": "^4.17.4", "prettier": "^1.14.3", "pug": "^2.0.4", "pug-loader": "^2.4.0", "raw-loader": "^1.0.0", "react": "^16.8.0", "react-dom": "^16.8.0", "rimraf": "^2.6.2", "script-loader": "~0.7.0", "simple-git": "^1.65.0", "strip-ansi": "^5.2.0", "style-loader": "^0.23.1", "typescript": "^3.0.0-rc", "url-loader": "^1.1.2", "val-loader": "^1.0.2", "vm-browserify": "~1.1.0", "wast-loader": "^1.5.5", "webpack-dev-middleware": "^3.5.1", "webassembly-feature": "1.3.0", "worker-loader": "^2.0.0", "xxhashjs": "^0.2.1"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 5}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 15}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 62}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 130}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2143125}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 11745051}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 49738819}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 145125702}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 259102193}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 475319869}], "dependentsCount": 15710, "starsCount": 551}, "github": {"homepage": "https://webpack.js.org", "starsCount": 54539, "forksCount": 7064, "subscribersCount": 1629, "issues": {"count": 10889, "openCount": 475, "distribution": {"3600": 1229, "10800": 846, "32400": 1083, "97200": 1658, "291600": 1182, "874800": 1048, "2624400": 666, "7873200": 573, "23619600": 1228, "70858800": 1112, "212576400": 264}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 4150}, {"username": "timse", "commitsCount": 329}, {"username": "ooflorent", "commitsCount": 269}, {"username": "TheLarkInn", "commitsCount": 207}, {"username": "xtuc", "commitsCount": 110}, {"username": "shubheksha", "commitsCount": 86}, {"username": "niieani", "commitsCount": 84}, {"username": "jamesgeorge007", "commitsCount": 68}, {"username": "evilebottnawi", "commitsCount": 64}, {"username": "smelukov", "commitsCount": 62}, {"username": "wizardofhogwarts", "commitsCount": 51}, {"username": "jsoref", "commitsCount": 49}, {"username": "michael-ciniawsky", "commitsCount": 47}, {"username": "mohsen1", "commitsCount": 46}, {"username": "EugeneHlushko", "commitsCount": 45}, {"username": "vankop", "commitsCount": 45}, {"username": "sendilkumarn", "commitsCount": 38}, {"username": "willmendesneto", "commitsCount": 37}, {"username": "mc-zone", "commitsCount": 29}, {"username": "byzyk", "commitsCount": 26}, {"username": "hiroppy", "commitsCount": 26}, {"username": "Connormiha", "commitsCount": 24}, {"username": "Travmatth", "commitsCount": 24}, {"username": "alistairjcbrown", "commitsCount": 23}, {"username": "gajus", "commitsCount": 23}, {"username": "Janpot", "commitsCount": 22}, {"username": "SpaceK33z", "commitsCount": 21}, {"username": "kennyt", "commitsCount": 20}, {"username": "ljqx", "commitsCount": 20}, {"username": "gribnoysup", "commitsCount": 18}, {"username": "thaiat", "commitsCount": 18}, {"username": "MLoughry", "commitsCount": 17}, {"username": "ScriptedAlchemy", "commitsCount": 16}, {"username": "jhnns", "commitsCount": 16}, {"username": "rrharvey", "commitsCount": 16}, {"username": "dependabot-preview[bot]", "commitsCount": 15}, {"username": "carloscuatin", "commitsCount": 14}, {"username": "einarlove", "commitsCount": 13}, {"username": "evenstensberg", "commitsCount": 12}, {"username": "kingdaro", "commitsCount": 12}, {"username": "ljcrapo", "commitsCount": 12}, {"username": "Legends", "commitsCount": 11}, {"username": "e-cloud", "commitsCount": 11}, {"username": "esbenp", "commitsCount": 11}, {"username": "timneutkens", "commitsCount": 11}, {"username": "yurynix", "commitsCount": 11}, {"username": "chuckdumont", "commitsCount": 10}, {"username": "jbottigliero", "commitsCount": 10}, {"username": "rtsao", "commitsCount": 10}, {"username": "snitin315", "commitsCount": 10}, {"username": "SimenB", "commitsCount": 9}, {"username": "jeffin143", "commitsCount": 9}, {"username": "jharris4", "commitsCount": 9}, {"username": "joeldenning", "commitsCount": 9}, {"username": "pierreneter", "commitsCount": 9}, {"username": "smikula", "commitsCount": 9}, {"username": "KTruong008", "commitsCount": 8}, {"username": "PlayMa256", "commitsCount": 8}, {"username": "acupofspirt", "commitsCount": 8}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 8}, {"username": "DanielRuf", "commitsCount": 7}, {"username": "NaviMarella", "commitsCount": 7}, {"username": "Tom910", "commitsCount": 7}, {"username": "chicoxyzzy", "commitsCount": 7}, {"username": "dtinth", "commitsCount": 7}, {"username": "jescalan", "commitsCount": 7}, {"username": "matthewmeyer", "commitsCount": 7}, {"username": "probablyup", "commitsCount": 7}, {"username": "simon04", "commitsCount": 7}, {"username": "zhaoshengjun", "commitsCount": 7}, {"username": "AndersDJohnson", "commitsCount": 6}, {"username": "ManuelBauer", "commitsCount": 6}, {"username": "MhMadHamster", "commitsCount": 6}, {"username": "Tushkiz", "commitsCount": 6}, {"username": "alberto", "commitsCount": 6}, {"username": "aretecode", "commitsCount": 6}, {"username": "franjohn21", "commitsCount": 6}, {"username": "fscherwi", "commitsCount": 6}, {"username": "ilgonmic", "commitsCount": 6}, {"username": "loganfsmyth", "commitsCount": 6}, {"username": "martynd", "commitsCount": 6}, {"username": "maxwoo-houzz", "commitsCount": 6}, {"username": "mikegreiling", "commitsCount": 6}, {"username": "montogeek", "commitsCount": 6}, {"username": "ritikrishu", "commitsCount": 6}, {"username": "ronanamsterdam", "commitsCount": 6}, {"username": "zastavnitskiy", "commitsCount": 6}, {"username": "FranckFreiburger", "commitsCount": 5}, {"username": "Hypnosphi", "commitsCount": 5}, {"username": "anikethsaha", "commitsCount": 5}, {"username": "bring-shrubbery", "commitsCount": 5}, {"username": "dav-is", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "jevancc", "commitsCount": 5}, {"username": "joshunger", "commitsCount": 5}, {"username": "konojunya", "commitsCount": 5}, {"username": "renatoagds", "commitsCount": 5}, {"username": "ryandrew14", "commitsCount": 5}, {"username": "styfle", "commitsCount": 5}, {"username": "zcfan", "commitsCount": 5}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 76}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 342}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 762}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1552}], "statuses": [{"context": "codecov/changes/integration", "state": "success"}, {"context": "codecov/changes/basic", "state": "success"}, {"context": "codecov/changes/lintunit", "state": "success"}, {"context": "codecov/project/basic", "state": "success"}, {"context": "codecov/project/integration", "state": "success"}, {"context": "codecov/project/lintunit", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3514530}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"memory-fs": {"required": "^0.4.1", "stable": "0.5.0", "latest": "0.5.0"}, "loader-runner": {"required": "^2.4.0", "stable": "3.1.0", "latest": "3.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "eslint-scope": {"required": "^4.0.3", "stable": "5.1.0", "latest": "5.1.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "terser-webpack-plugin": {"required": "^1.4.3", "stable": "3.0.3", "latest": "3.0.3"}, "micromatch": {"required": "^3.1.10", "stable": "4.0.2", "latest": "4.0.2"}, "acorn": {"required": "^6.4.1", "stable": "7.3.1", "latest": "7.3.1"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 63883, "downloadsCount": 48375234, "downloadsAcceleration": 123231.20705859974, "dependentsCount": 15710}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.14915609259567497}}, "score": {"final": 0.8399069790139193, "detail": {"quality": 0.766173211081965, "popularity": 0.9288991407212788, "maintenance": 0.8141151898196636}}}}, {"chai": {"analyzedAt": "2020-06-14T17:56:59.894Z", "collected": {"metadata": {"name": "chai", "scope": "unscoped", "version": "4.2.0", "description": "BDD/TDD assertion library for node.js and the browser. Test framework agnostic.", "keywords": ["test", "assertion", "assert", "testing", "chai"], "date": "2018-09-26T12:15:22.143Z", "author": {"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, "publisher": {"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}, "maintainers": [{"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}], "contributors": [{"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com", "url": "http://domenicdenicola.com"}, {"name": "Veselin Todorov", "email": "hi@vesln.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chaijs/chai.git"}, "links": {"npm": "https://www.npmjs.com/package/chai", "homepage": "http://chaijs.com", "repository": "https://github.com/chaijs/chai", "bugs": "https://github.com/chaijs/chai/issues"}, "license": "MIT", "dependencies": {"assertion-error": "^1.1.0", "check-error": "^1.0.2", "deep-eql": "^3.0.1", "get-func-name": "^2.0.0", "pathval": "^1.1.0", "type-detect": "^4.0.5"}, "devDependencies": {"browserify": "^16.0.0", "bump-cli": "^1.1.3", "codecov": "^3.0.0", "istanbul": "^0.4.3", "karma": "^2.0.0", "karma-firefox-launcher": "^1.0.0", "karma-mocha": "^1.0.1", "karma-phantomjs-launcher": "^1.0.0", "karma-sauce-launcher": "^1.2.0", "mocha": "^5.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\">\n  </a>\n  <br>\n  chai\n</h1>\n\n<p align=center>\n  Chai is a BDD / TDD assertion library for <a href=\"http://nodejs.org\">node</a> and the browser that can be delightfully paired with any javascript testing framework.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://github.com/chaijs/chai/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/package/chai\">\n    <img\n      alt=\"node:?\"\n      src=\"https://img.shields.io/badge/node-%3E=4.0-blue.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs.svg\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://www.npmjs.com/packages/chai\">\n    <img\n      alt=\"downloads:?\"\n      src=\"https://img.shields.io/npm/dm/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://travis-ci.org/chaijs/chai\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://codecov.io/gh/chaijs/chai\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/chai\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://opencollective.com/chaijs\">\n    <img\n      alt=\"OpenCollective Backers\"\n      src=\"https://opencollective.com/chaijs/backers/badge.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\nFor more information or to download plugins, view the [documentation](http://chaijs.com).\n\n## What is Chai?\n\nChai is an _assertion library_, similar to Node's built-in `assert`. It makes testing much easier by giving you lots of assertions you can run against your code.\n\n## Installation\n\n### Node.js\n\n`chai` is available on [npm](http://npmjs.org). To install it, type:\n\n    $ npm install chai\n\n### Browsers\n\nYou can also use it within the browser; install via npm and use the `chai.js` file found within the download. For example:\n\n```html\n<script src=\"./node_modules/chai/chai.js\"></script>\n```\n\n## Usage\n\nImport the library in your code, and then pick one of the styles you'd like to use - either `assert`, `expect` or `should`:\n\n```js\nvar chai = require('chai');  \nvar assert = chai.assert;    // Using Assert style\nvar expect = chai.expect;    // Using Expect style\nvar should = chai.should();  // Using Should style\n```\n\n### Pre-Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nrequire('chai/register-assert');  // Using Assert style\nrequire('chai/register-expect');  // Using Expect style\nrequire('chai/register-should');  // Using Should style\n```\n\n### Pre-Native Modules Usage (_as local variables_)\n\n```js\nconst { assert } = require('chai');  // Using Assert style\nconst { expect } = require('chai');  // Using Expect style\nconst { should } = require('chai');  // Using Should style\nshould();  // Modifies `Object.prototype`\n\nconst { expect, use } = require('chai');  // Creates local variables `expect` and `use`; useful for plugin use\n```\n\n### Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nimport 'chai/register-assert';  // Using Assert style\nimport 'chai/register-expect';  // Using Expect style\nimport 'chai/register-should';  // Using Should style\n```\n\n### Native Modules Usage (_local import only_)\n\n```js\nimport { assert } from 'chai';  // Using Assert style\nimport { expect } from 'chai';  // Using Expect style\nimport { should } from 'chai';  // Using Should style\nshould();  // Modifies `Object.prototype`\n```\n\n### Usage with Mocha\n\n```bash\nmocha spec.js -r chai/register-assert  # Using Assert style\nmocha spec.js -r chai/register-expect  # Using Expect style\nmocha spec.js -r chai/register-should  # Using Should style\n```\n\n[Read more about these styles in our docs](http://chaijs.com/guide/styles/).\n\n## Plugins\n\nChai offers a robust Plugin architecture for extending Chai's assertions and interfaces.\n\n- Need a plugin? View the [official plugin list](http://chaijs.com/plugins).\n- Want to build a plugin? Read the [plugin api documentation](http://chaijs.com/guide/plugins/).\n- Have a plugin and want it listed? Simply add the following keywords to your package.json:\n  -  `chai-plugin`\n  -  `browser` if your plugin works in the browser as well as Node.js\n  -  `browser-only` if your plugin does not work with Node.js\n\n### Related Projects\n\n- [chaijs / chai-docs](https://github.com/chaijs/chai-docs): The chaijs.com website source code.\n- [chaijs / assertion-error](https://github.com/chaijs/assertion-error): Custom `Error` constructor thrown upon an assertion failing.\n- [chaijs / deep-eql](https://github.com/chaijs/deep-eql): Improved deep equality testing for Node.js and the browser.\n- [chaijs / type-detect](https://github.com/chaijs/type-detect): Improved typeof detection for Node.js and the browser.\n- [chaijs / check-error](https://github.com/chaijs/check-error): Error comparison and information related utility for Node.js and the browser.\n- [chaijs / loupe](https://github.com/chaijs/loupe): Inspect utility for Node.js and browsers.\n- [chaijs / pathval](https://github.com/chaijs/pathval): Object value retrieval given a string path.\n- [chaijs / get-func-name](https://github.com/chaijs/get-func-name): Utility for getting a function's name for node and the browser.\n\n### Contributing\n\nThank you very much for considering to contribute!\n\nPlease make sure you follow our [Code Of Conduct](https://github.com/chaijs/chai/blob/master/CODE_OF_CONDUCT.md) and we also strongly recommend reading our [Contributing Guide](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md).\n\nHere are a few issues other contributors frequently ran into when opening pull requests:\n\n- Please do not commit changes to the `chai.js` build. We do it once per release.\n- Before pushing your commits, please make sure you [rebase](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md#pull-requests) them.\n\n### Contributors\n\nPlease see the full\n[Contributors Graph](https://github.com/chaijs/chai/graphs/contributors) for our\nlist of contributors.\n\n### Core Contributors\n\nFeel free to reach out to any of the core contributors with your questions or\nconcerns. We will do our best to respond in a timely manner.\n\n[![Jake Luer](https://avatars3.githubusercontent.com/u/58988?v=3&s=50)](https://github.com/logicalparadox)\n[![Veselin Todorov](https://avatars3.githubusercontent.com/u/330048?v=3&s=50)](https://github.com/vesln)\n[![Keith Cirkel](https://avatars3.githubusercontent.com/u/118266?v=3&s=50)](https://github.com/keithamus)\n[![Lucas Fernandes da Costa](https://avatars3.githubusercontent.com/u/6868147?v=3&s=50)](https://github.com/lucasfcosta)\n[![Grant Snodgrass](https://avatars3.githubusercontent.com/u/17260989?v=3&s=50)](https://github.com/meeber)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 180355}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3604157}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14923649}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 45825630}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 83642615}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 156130988}], "dependentsCount": 5314, "starsCount": 316}, "github": {"homepage": "http://chaijs.com", "starsCount": 6858, "forksCount": 622, "subscribersCount": 132, "issues": {"count": 1346, "openCount": 60, "distribution": {"3600": 178, "10800": 109, "32400": 129, "97200": 191, "291600": 116, "874800": 132, "2624400": 124, "7873200": 120, "23619600": 134, "70858800": 96, "212576400": 17}, "isDisabled": false}, "contributors": [{"username": "logicalparadox", "commitsCount": 455}, {"username": "vesln", "commitsCount": 74}, {"username": "meeber", "commitsCount": 70}, {"username": "keithamus", "commitsCount": 52}, {"username": "lucasfcosta", "commitsCount": 52}, {"username": "domenic", "commitsCount": 40}, {"username": "astorije", "commitsCount": 27}, {"username": "vieiralucas", "commitsCount": 22}, {"username": "shvaikalesh", "commitsCount": 18}, {"username": "joshperry", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 11}, {"username": "zetamorph", "commitsCount": 11}, {"username": "Turbo87", "commitsCount": 9}, {"username": "cmpolis", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 8}, {"username": "RubenVerborgh", "commitsCount": 6}, {"username": "abetomo", "commitsCount": 6}, {"username": "brutalcrozt", "commitsCount": 5}, {"username": "jgonera", "commitsCount": 5}, {"username": "joliss", "commitsCount": 5}, {"username": "jsoref", "commitsCount": 5}, {"username": "leider", "commitsCount": 5}, {"username": "scottnonnenberg", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 4}, {"username": "aaronsofaly", "commitsCount": 4}, {"username": "dasilvacontin", "commitsCount": 4}, {"username": "jfirebaugh", "commitsCount": 4}, {"username": "josher19", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "umireon", "commitsCount": 4}, {"username": "Droogans", "commitsCount": 3}, {"username": "andreineculau", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "flaambe", "commitsCount": 3}, {"username": "gregglind", "commitsCount": 3}, {"username": "jasonkarns", "commitsCount": 3}, {"username": "jeffbski", "commitsCount": 3}, {"username": "jkroso", "commitsCount": 3}, {"username": "jurko-gospodnetic", "commitsCount": 3}, {"username": "ljharb", "commitsCount": 3}, {"username": "matthewlucock", "commitsCount": 3}, {"username": "piamancini", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "voliva", "commitsCount": 3}, {"username": "Alhadis", "commitsCount": 2}, {"username": "Bartvds", "commitsCount": 2}, {"username": "cezarykluczynski", "commitsCount": 2}, {"username": "eouw0o83hf", "commitsCount": 2}, {"username": "eshao", "commitsCount": 2}, {"username": "kkirsche", "commitsCount": 2}, {"username": "matthew-n", "commitsCount": 2}, {"username": "romario333", "commitsCount": 2}, {"username": "rpgeeganage", "commitsCount": 2}, {"username": "tkazec", "commitsCount": 2}, {"username": "v1adko", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "wyvernzora", "commitsCount": 2}, {"username": "zzen", "commitsCount": 2}, {"username": "ColinEberhardt", "commitsCount": 1}, {"username": "Hpauric", "commitsCount": 1}, {"username": "PauloGoncalvesBH", "commitsCount": 1}, {"username": "Pklong", "commitsCount": 1}, {"username": "Powell-v2", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "StPeng", "commitsCount": 1}, {"username": "andersonaguiar", "commitsCount": 1}, {"username": "aryzing", "commitsCount": 1}, {"username": "asbish", "commitsCount": 1}, {"username": "bdadam", "commitsCount": 1}, {"username": "bmeurer", "commitsCount": 1}, {"username": "callumlocke", "commitsCount": 1}, {"username": "curtisgibby", "commitsCount": 1}, {"username": "dinostheo", "commitsCount": 1}, {"username": "gdelmas", "commitsCount": 1}, {"username": "generalandrew", "commitsCount": 1}, {"username": "giltayar", "commitsCount": 1}, {"username": "hadighattas", "commitsCount": 1}, {"username": "haykam821", "commitsCount": 1}, {"username": "kharandziuk", "commitsCount": 1}, {"username": "kidmillions", "commitsCount": 1}, {"username": "kumarmj", "commitsCount": 1}, {"username": "lizhengnacl", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "piranna", "commitsCount": 1}, {"username": "polomsky", "commitsCount": 1}, {"username": "qbolec", "commitsCount": 1}, {"username": "s-leroux", "commitsCount": 1}, {"username": "s0", "commitsCount": 1}, {"username": "simonewebdesign", "commitsCount": 1}, {"username": "solodynamo", "commitsCount": 1}, {"username": "sophiebits", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tusbar", "commitsCount": 1}, {"username": "unional", "commitsCount": 1}, {"username": "wadie", "commitsCount": 1}, {"username": "yanca018", "commitsCount": 1}, {"username": "zetaben", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7626, "testsSize": 424953, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/chai.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/chai.svg", "content": "https://img.shields.io/npm/dm/chai.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square", "service": "https://api.travis-ci.org/chaijs/chai.svg?branch=master", "shields": "https://img.shields.io/travis/chaijs/chai/master.svg", "content": "https://img.shields.io/travis/chaijs/chai/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square", "service": "https://codecov.io/github/chaijs/chai/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/chaijs/chai.svg", "content": "https://img.shields.io/codecov/c/github/chaijs/chai.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/chaijs/chai.svg?style=flat-square", "service": "https://david-dm.org/chaijs/chai.svg", "shields": "https://img.shields.io/david/chaijs/chai.svg", "content": "https://img.shields.io/david/chaijs/chai.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "coverage": 0.94, "outdatedDependencies": {"deep-eql": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.991, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 8028, "downloadsCount": 15275210, "downloadsAcceleration": 26655.97452435312, "dependentsCount": 5314}, "maintenance": {"releasesFrequency": 0.07397260273972603, "commitsFrequency": 0.7552910958904109, "openIssues": 1, "issuesDistribution": 0.4425492395514394}}, "score": {"final": 0.8028485915817144, "detail": {"quality": 0.9732401190276777, "popularity": 0.7416901382521681, "maintenance": 0.7179571642432923}}}}, {"babel-core": {"analyzedAt": "2020-05-01T07:05:33.275Z", "collected": {"metadata": {"name": "babel-core", "scope": "unscoped", "version": "6.26.3", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2018-04-27T09:47:04.101Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-core", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-code-frame": "^6.26.0", "babel-generator": "^6.26.0", "babel-helpers": "^6.24.1", "babel-messages": "^6.23.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "babel-template": "^6.26.0", "babel-traverse": "^6.26.0", "babel-types": "^6.26.0", "babylon": "^6.18.0", "convert-source-map": "^1.5.1", "debug": "^2.6.9", "json5": "^0.5.1", "lodash": "^4.17.4", "minimatch": "^3.0.4", "path-is-absolute": "^1.0.1", "private": "^0.1.8", "slash": "^1.0.0", "source-map": "^0.5.7"}, "devDependencies": {"babel-helper-fixtures": "^6.26.2", "babel-helper-transform-fixture-test-runner": "^6.26.2", "babel-polyfill": "^6.26.0"}, "releases": [{"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2018-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-core\n\n> Babel compiler core.\n\n\n```javascript\nvar babel = require(\"babel-core\");\nimport { transform } from 'babel-core';\nimport * as babel from 'babel-core';\n```\n\nAll transformations will use your local configuration files (.babelrc or in package.json). See [options](#options) to disable it.\n\n## babel.transform(code: string, [options?](#options): Object)\n\nTransforms the passed in `code`. Returning an object with the generated code,\nsource map, and AST.\n\n```js\nbabel.transform(code, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nvar result = babel.transform(\"code();\", options);\nresult.code;\nresult.map;\nresult.ast;\n```\n\n## babel.transformFile(filename: string, [options?](#options): Object, callback: Function)\n\nAsynchronously transforms the entire contents of a file.\n\n```js\nbabel.transformFile(filename, options, callback)\n```\n\n**Example**\n\n```js\nbabel.transformFile(\"filename.js\", options, function (err, result) {\n  result; // => { code, map, ast }\n});\n```\n\n## babel.transformFileSync(filename: string, [options?](#options): Object)\n\nSynchronous version of `babel.transformFile`. Returns the transformed contents of\nthe `filename`.\n\n```js\nbabel.transformFileSync(filename, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nbabel.transformFileSync(\"filename.js\", options).code;\n```\n\n## babel.transformFromAst(ast: Object, code?: string, [options?](#options): Object)\n\nGiven, an [AST](https://astexplorer.net/), transform it.\n\n```js\nconst code = \"if (true) return;\";\nconst ast = babylon.parse(code, { allowReturnOutsideFunction: true });\nconst { code, map, ast } = babel.transformFromAst(ast, code, options);\n```\n\n## Options\n\n> #### Babel CLI\n> \n> You can pass these options from the Babel CLI like so:\n> \n> `babel --name=value`\n\nFollowing is a table of the options you can use:\n\n| Option                   | Default              | Description                     |\n| ------------------------ | -------------------- | ------------------------------- |\n| `ast`                    | `true`               | Include the AST in the returned object |\n| `auxiliaryCommentAfter`  | `null`               | Attach a comment after all non-user injected code. |\n| `auxiliaryCommentBefore` | `null`               | Attach a comment before all non-user injected code. |\n| `babelrc`                | `true`               | Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, [use `--no-babelrc` instead](https://babeljs.io/docs/en/babel-cli#ignoring-babelrc). |\n| `code`                   | `true`               | Enable code generation |\n| `comments`               | `true`               | Output comments in generated output. |\n| `compact`                | `\"auto\"`             | Do not include superfluous whitespace characters and line terminators. When set to `\"auto\"` compact is set to `true` on input sizes of >500KB. |\n| `env`                    | `{}`                 | This is an object of keys that represent different environments. For example, you may have: `{ env: { production: { /* specific options */ } } }` which will use those options when the environment variable `BABEL_ENV` is set to `\"production\"`. If `BABEL_ENV` isn't set then `NODE_ENV` will be used, if it's not set then it defaults to `\"development\"` |\n| `extends`                | `null`               | A path to an `.babelrc` file to extend |\n| `filename`               | `\"unknown\"`          | Filename for use in errors etc. |\n| `filenameRelative`       | `(filename)`         | Filename relative to `sourceRoot`. |\n| `generatorOpts`          | `{}`                 | An object containing the options to be passed down to the babel code generator, babel-generator |\n| `getModuleId`            | `null`               | Specify a custom callback to generate a module id with. Called as `getModuleId(moduleName)`. If falsy value is returned then the generated module id is used. |\n| `highlightCode`          | `true`               | ANSI highlight syntax error code frames |\n| `ignore`                 | `null`               | Opposite to the `only` option. `ignore` is disregarded if `only` is specified. |\n| `inputSourceMap`         | `null`               | A source map object that the output source map will be based on. |\n| `minified`               | `false`              | Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping `()` from `new` when safe) |\n| `moduleId`               | `null`               | Specify a custom name for module ids. |\n| `moduleIds`              | `false`              | If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for `common` modules) |\n| `moduleRoot`             | `(sourceRoot)`       | Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions. |\n| `only`                   | `null`               | A [glob](https://github.com/isaacs/minimatch), regex, or mixed array of both, matching paths to **only** compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it's returned verbatim. |\n| `parserOpts`             | `{}`                 | An object containing the options to be passed down to the babel parser, babylon |\n| `plugins`                | `[]`                 | List of [plugins](https://babeljs.io/docs/en/plugins) to load and use. |\n| `presets`                | `[]`                 | List of [presets](https://babeljs.io/docs/en/plugins#presets) (a set of plugins) to load and use. |\n| `retainLines`            | `false`              | Retain line numbers. This will lead to wacky code but is handy for scenarios where you can't use source maps. (**NOTE:** This will not retain the columns) |\n| `resolveModuleSource`    | `null`               | Resolve a module source ie. `import \"SOURCE\";` to a custom value. Called as `resolveModuleSource(source, filename)`. |\n| `shouldPrintComment`     | `null`               | An optional callback that controls whether a comment should be output or not. Called as `shouldPrintComment(commentContents)`. **NOTE:** This overrides the `comment` option when used. |\n| `sourceFileName`         | `(filenameRelative)` | Set `sources[0]` on returned source map. |\n| `sourceMaps`             | `false`              | If truthy, adds a `map` property to returned output. If set to `\"inline\"`, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to `\"both\"` then a `map` property is returned as well as a source map comment appended. **This does not emit sourcemap files by itself!** To have sourcemaps emitted using the CLI, you must pass it the `--source-maps` option. |\n| `sourceMapTarget`        | `(filenameRelative)` | Set `file` on returned source map. |\n| `sourceRoot`             | `(moduleRoot)`       | The root from which all sources are relative. |\n| `sourceType`             | `\"module\"`           | Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\". |\n| `wrapPluginVisitorMethod`| `null`               | An optional callback that can be used to wrap visitor methods. **NOTE:** This is useful for things like introspection, and not really needed for implementing anything. Called as `wrapPluginVisitorMethod(pluginAlias, visitorType, callback)`."}, "npm": {"downloads": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1133658}, {"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 6115395}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 26441263}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 77357404}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 142925167}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 307092574}], "dependentsCount": 9615, "starsCount": 149}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36429, "forksCount": 4253, "subscribersCount": 870, "issues": {"count": 11445, "openCount": 750, "distribution": {"3600": 2444, "10800": 903, "32400": 1055, "97200": 1217, "291600": 1036, "874800": 995, "2624400": 842, "7873200": 767, "23619600": 846, "70858800": 1088, "212576400": 252}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1260}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 462}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 176}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 150}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 12}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 53}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 205}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 466}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 761}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11778783, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "json5": {"required": "^0.5.1", "stable": "2.1.3", "latest": "2.1.3"}, "debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.1.1"}, "source-map": {"required": "^0.5.7", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 41800, "downloadsCount": 25785801.333333332, "downloadsAcceleration": -1823.7241818873736, "dependentsCount": 9615}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.25033694554283}}, "score": {"final": 0.7425015508652161, "detail": {"quality": 0.9251863785324729, "popularity": 0.7520027907772424, "maintenance": 0.5764133158098269}}}}, {"react": {"analyzedAt": "2020-06-04T15:36:46.538Z", "collected": {"metadata": {"name": "react", "scope": "unscoped", "version": "16.13.1", "description": "React is a JavaScript library for building user interfaces.", "keywords": ["react"], "date": "2020-03-19T19:53:13.309Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react"}, "links": {"npm": "https://www.npmjs.com/package/react", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 11}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 27}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 64}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 123}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1473052}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7694898}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 34563022}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 102355442}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 180052251}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 328640770}], "dependentsCount": 40819, "starsCount": 755}, "github": {"homepage": "https://reactjs.org", "starsCount": 149891, "forksCount": 29168, "subscribersCount": 6661, "issues": {"count": 18868, "openCount": 613, "distribution": {"3600": 3821, "10800": 1823, "32400": 1863, "97200": 2344, "291600": 1800, "874800": 1677, "2624400": 1373, "7873200": 1191, "23619600": 1424, "70858800": 1195, "212576400": 357}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1382}, {"username": "bvaughn", "commitsCount": 1215}, {"username": "sophiebits", "commitsCount": 874}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 699}, {"username": "acdlite", "commitsCount": 689}, {"username": "trueadm", "commitsCount": 391}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 55}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 27}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "rickhanlonii", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 84}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 387}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 663}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1401}], "statuses": [{"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 448651, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.679, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 186575, "downloadsCount": 34118480.666666664, "downloadsAcceleration": 87904.91855022832, "dependentsCount": 40819}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4275987312188692}}, "score": {"final": 0.9401666598395249, "detail": {"quality": 0.9000004941806147, "popularity": 0.9411219688101008, "maintenance": 0.9736394928623007}}}}, {"babel-loader": {"analyzedAt": "2020-06-14T06:24:38.180Z", "collected": {"metadata": {"name": "babel-loader", "scope": "unscoped", "version": "8.1.0", "description": "babel module loader for webpack", "keywords": ["webpack", "loader", "babel", "es6", "transpiler", "module"], "date": "2020-03-20T14:51:00.743Z", "author": {"name": "Luis Couto", "email": "hello@luiscouto.pt"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-loader", "homepage": "https://github.com/babel/babel-loader", "repository": "https://github.com/babel/babel-loader", "bugs": "https://github.com/babel/babel-loader/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^2.1.0", "loader-utils": "^1.4.0", "mkdirp": "^0.5.3", "pify": "^4.0.1", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.2.0", "@babel/core": "^7.2.0", "@babel/preset-env": "^7.2.0", "ava": "^2.4.0", "babel-eslint": "^10.0.1", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-react-intl": "^4.1.19", "cross-env": "^6.0.0", "eslint": "^6.5.1", "eslint-config-babel": "^9.0.0", "eslint-config-prettier": "^6.3.0", "eslint-plugin-flowtype": "^4.3.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^3.0.7", "lint-staged": "^9.4.1", "nyc": "^14.1.1", "prettier": "^1.15.3", "react": "^16.0.0", "react-intl": "^3.3.2", "react-intl-webpack-plugin": "^0.3.0", "rimraf": "^3.0.0", "webpack": "^4.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0", "webpack": ">=2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "> This README is for babel-loader v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/babel-loader/tree/7.x) for docs with Babel v6\n\n[![NPM Status](https://img.shields.io/npm/v/babel-loader.svg?style=flat)](https://www.npmjs.com/package/babel-loader)\n[![Build Status](https://travis-ci.org/babel/babel-loader.svg?branch=master)](https://travis-ci.org/babel/babel-loader)\n[![Build Status](https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true)](https://ci.appveyor.com/project/babel/babel-loader/branch/master)\n[![codecov](https://codecov.io/gh/babel/babel-loader/branch/master/graph/badge.svg)](https://codecov.io/gh/babel/babel-loader)\n\n<div align=\"center\">\n  <a href=\"https://github.com/babel/babel\">\n    <img src=\"https://rawgit.com/babel/logo/master/babel.svg\" alt=\"Babel logo\" width=\"200\" height=\"200\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img src=\"https://webpack.js.org/assets/icon-square-big.svg\" alt=\"webpack logo\" width=\"200\" height=\"200\">\n  </a>\n</div>\n\n<h1 align=\"center\">Babel Loader</h1>\n\nThis package allows transpiling JavaScript files using [Babel](https://github.com/babel/babel) and [webpack](https://github.com/webpack/webpack).\n\n**Note**: Issues with the output should be reported on the Babel [Issues](https://github.com/babel/babel/issues) tracker.\n\n<h2 align=\"center\">Install</h2>\n\n> webpack 4.x | babel-loader 8.x | babel 7.x\n\n```bash\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\n```\n\n<h2 align=\"center\">Usage</h2>\n\nwebpack documentation: [Loaders](https://webpack.js.org/loaders/)\n\nWithin your webpack configuration object, you'll need to add the babel-loader to the list of modules, like so:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env']\n        }\n      }\n    }\n  ]\n}\n```\n\n### Options\n\nSee the `babel` [options](https://babeljs.io/docs/en/options).\n\nYou can pass options to the loader by using the [`options`](https://webpack.js.org/configuration/module/#rule-options-rule-query) property:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env'],\n          plugins: ['@babel/plugin-proposal-object-rest-spread']\n        }\n      }\n    }\n  ]\n}\n```\n\nThis loader also supports the following loader-specific option:\n\n* `cacheDirectory`: Default `false`. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to `true` in options (`{cacheDirectory: true}`), the loader will use the default cache directory in `node_modules/.cache/babel-loader` or fallback to the default OS temporary file directory if no `node_modules` folder could be found in any root directory.\n\n* `cacheIdentifier`: Default is a string composed by the `@babel/core`'s version, the `babel-loader`'s version, the contents of `.babelrc` file if it exists, and the value of the environment variable `BABEL_ENV` with a fallback to the `NODE_ENV` environment variable. This can be set to a custom value to force cache busting if the identifier changes.\n\n* `cacheCompression`: Default `true`. When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to `false` -- your project may benefit from this if it transpiles thousands of files.\n\n* `customize`: Default `null`. The path of a module that exports a `custom` callback [like the one that you'd pass to `.custom()`](#customized-loader). Since you already have to make a new file to use this, it is recommended that you instead use `.custom` to create a wrapper loader. Only use this if you _must_ continue using `babel-loader` directly, but still want to customize.\n\n## Troubleshooting\n\n### babel-loader is slow!\n\nMake sure you are transforming as few files as possible. Because you are probably matching `/\\.m?js$/`, you might be transforming the `node_modules` folder or other unwanted source.\n\nTo exclude `node_modules`, see the `exclude` option in the `loaders` config as documented above.\n\nYou can also speed up babel-loader by as much as 2x by using the `cacheDirectory` option. This will cache transformations to the filesystem.\n\n### Babel is injecting helpers into each file and bloating my code!\n\nBabel uses very small helpers for common functions such as `_extend`. By default, this will be added to every file that requires it.\n\nYou can instead require the Babel runtime as a separate module to avoid the duplication.\n\nThe following configuration disables automatic per-file runtime injection in Babel, requiring `@babel/plugin-transform-runtime` instead and making all helper references use it.\n\nSee the [docs](https://babeljs.io/docs/plugins/transform-runtime/) for more information.\n\n**NOTE**: You must run `npm install -D @babel/plugin-transform-runtime` to include this in your project and `@babel/runtime` itself as a dependency with `npm install @babel/runtime`.\n\n```javascript\nrules: [\n  // the 'transform-runtime' plugin tells Babel to\n  // require the runtime instead of inlining it.\n  {\n    test: /\\.m?js$/,\n    exclude: /(node_modules|bower_components)/,\n    use: {\n      loader: 'babel-loader',\n      options: {\n        presets: ['@babel/preset-env'],\n        plugins: ['@babel/plugin-transform-runtime']\n      }\n    }\n  }\n]\n```\n\n#### **NOTE**: transform-runtime & custom polyfills (e.g. Promise library)\n\nSince [@babel/plugin-transform-runtime](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime) includes a polyfill that includes a custom [regenerator-runtime](https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js) and [core-js](https://github.com/zloirock/core-js), the following usual shimming method using `webpack.ProvidePlugin` will not work:\n\n```javascript\n// ...\n        new webpack.ProvidePlugin({\n            'Promise': 'bluebird'\n        }),\n// ...\n```\n\nThe following approach will not work either:\n\n```javascript\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\nvar promise = new Promise;\n```\n\nwhich outputs to (using `runtime`):\n\n```javascript\n'use strict';\n\nvar _Promise = require('@babel/runtime/core-js/promise')['default'];\n\nrequire('@babel/runtime/core-js/promise')['default'] = require('bluebird');\n\nvar promise = new _Promise();\n```\n\nThe previous `Promise` library is referenced and used before it is overridden.\n\nOne approach is to have a \"bootstrap\" step in your application that would first override the default globals before your application:\n\n```javascript\n// bootstrap.js\n\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\n// ...\n\nrequire('./app');\n```\n\n### The Node.js API for `babel` has been moved to `babel-core`.\n\nIf you receive this message, it means that you have the npm package `babel` installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel',\n  }\n```\n\nwebpack then tries to load the `babel` package instead of the `babel-loader`.\n\nTo fix this, you should uninstall the npm package `babel`, as it is deprecated in Babel v6. (Instead, install `@babel/cli` or `@babel/core`.)\nIn the case one of your dependencies is installing `babel` and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel-loader',\n  }\n```\n\n## Customize config based on webpack target\n\nWebpack supports bundling multiple [targets](https://webpack.js.org/concepts/targets/). For cases where you may want different Babel configurations for each target (like `web` _and_ `node`), this loader provides a `target` property via Babel's [caller](https://babeljs.io/docs/en/config-files#apicallercb) API.\n\nFor example, to change the environment targets passed to `@babel/preset-env` based on the webpack target:\n\n```javascript\n// babel.config.js\n\nmodule.exports = api => {\n  return {\n    plugins: [\n      \"@babel/plugin-proposal-nullish-coalescing-operator\",\n      \"@babel/plugin-proposal-optional-chaining\"\n    ],\n    presets: [\n      [\n        \"@babel/preset-env\",\n        {\n          useBuiltIns: \"entry\",\n          // caller.target will be the same as the target option from webpack\n          targets: api.caller(caller => caller && caller.target === \"node\")\n            ? { node: \"current\" }\n            : { chrome: \"58\", ie: \"11\" }\n        }\n      ]\n    ]\n  }\n}\n```\n\n## Customized Loader\n\n`babel-loader` exposes a loader-builder utility that allows users to add custom handling\nof Babel's configuration for each file that it processes.\n\n`.custom` accepts a callback that will be called with the loader's instance of\n`babel` so that tooling can ensure that it using exactly the same `@babel/core`\ninstance as the loader itself.\n\nIn cases where you want to customize without actually having a file to call `.custom`, you\nmay also pass the `customize` option with a string pointing at a file that exports\nyour `custom` callback function.\n\n### Example\n\n```js\n// Export from \"./my-custom-loader.js\" or whatever you want.\nmodule.exports = require(\"babel-loader\").custom(babel => {\n  function myPlugin() {\n    return {\n      visitor: {},\n    };\n  }\n\n  return {\n    // Passed the loader options.\n    customOptions({ opt1, opt2, ...loader }) {\n      return {\n        // Pull out any custom options that the loader might have.\n        custom: { opt1, opt2 },\n\n        // Pass the options back with the two custom options removed.\n        loader,\n      };\n    },\n\n    // Passed Babel's 'PartialConfig' object.\n    config(cfg) {\n      if (cfg.hasFilesystemConfig()) {\n        // Use the normal config\n        return cfg.options;\n      }\n\n      return {\n        ...cfg.options,\n        plugins: [\n          ...(cfg.options.plugins || []),\n\n          // Include a custom plugin in the options.\n          myPlugin,\n        ],\n      };\n    },\n\n    result(result) {\n      return {\n        ...result,\n        code: result.code + \"\\n// Generated by some custom loader\",\n      };\n    },\n  };\n});\n```\n\n```js\n// And in your Webpack config\nmodule.exports = {\n  // ..\n  module: {\n    rules: [{\n      // ...\n      loader: path.join(__dirname, 'my-custom-loader.js'),\n      // ...\n    }]\n  }\n};\n```\n\n### `customOptions(options: Object): { custom: Object, loader: Object }`\n\nGiven the loader's options, split custom options out of `babel-loader`'s\noptions.\n\n\n### `config(cfg: PartialConfig): Object`\n\nGiven Babel's `PartialConfig` object, return the `options` object that should\nbe passed to `babel.transform`.\n\n\n### `result(result: Result): Result`\n\nGiven Babel's result object, allow loaders to make additional tweaks to it.\n\n\n## License\n[MIT](https://couto.mit-license.org/)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 363199}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8337418}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 34678955}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 106350422}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 183673512}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 330703324}], "dependentsCount": 10739, "starsCount": 119}, "github": {"starsCount": 4211, "forksCount": 386, "subscribersCount": 78, "issues": {"count": 834, "openCount": 52, "distribution": {"3600": 148, "10800": 65, "32400": 66, "97200": 66, "291600": 69, "874800": 69, "2624400": 74, "7873200": 71, "23619600": 81, "70858800": 94, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "danez", "commitsCount": 107}, {"username": "Couto", "commitsCount": 86}, {"username": "loganfsmyth", "commitsCount": 26}, {"username": "greenkeeper[bot]", "commitsCount": 25}, {"username": "hzoo", "commitsCount": 16}, {"username": "sebmck", "commitsCount": 14}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 5}, {"username": "existentialism", "commitsCount": 4}, {"username": "STRML", "commitsCount": 3}, {"username": "d3viant0ne", "commitsCount": 3}, {"username": "jupl", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "JLHwung", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "gaearon", "commitsCount": 2}, {"username": "hawkrives", "commitsCount": 2}, {"username": "hiroppy", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "mlegenhausen", "commitsCount": 2}, {"username": "tricknotes", "commitsCount": 2}, {"username": "yuyokk", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "DanielApt", "commitsCount": 1}, {"username": "Delagen", "commitsCount": 1}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "MoOx", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Ognian", "commitsCount": 1}, {"username": "Oliboy50", "commitsCount": 1}, {"username": "PatNeedham", "commitsCount": 1}, {"username": "Rob-ot", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "YonatanKra", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adrienharnay", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "alexander-schranz", "commitsCount": 1}, {"username": "alexturpin", "commitsCount": 1}, {"username": "andreypopp", "commitsCount": 1}, {"username": "anilanar", "commitsCount": 1}, {"username": "bfanger", "commitsCount": 1}, {"username": "bjornstar", "commitsCount": 1}, {"username": "chrisvasz", "commitsCount": 1}, {"username": "creeperyang", "commitsCount": 1}, {"username": "dashed", "commitsCount": 1}, {"username": "davidtheclark", "commitsCount": 1}, {"username": "dferber90", "commitsCount": 1}, {"username": "didoarellano", "commitsCount": 1}, {"username": "eubenesa", "commitsCount": 1}, {"username": "eur00t", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gpbl", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "hantq", "commitsCount": 1}, {"username": "hedgepigdaniel", "commitsCount": 1}, {"username": "iansu", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jagzviruz", "commitsCount": 1}, {"username": "jennings", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "jrios", "commitsCount": 1}, {"username": "jscheid", "commitsCount": 1}, {"username": "koalex", "commitsCount": 1}, {"username": "leonaves", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "lukejagodzinski", "commitsCount": 1}, {"username": "moimael", "commitsCount": 1}, {"username": "nicolo-ribaudo", "commitsCount": 1}, {"username": "nikopavlica", "commitsCount": 1}, {"username": "ogonkov", "commitsCount": 1}, {"username": "philipwalton", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "popuguytheparrot", "commitsCount": 1}, {"username": "privatenumber", "commitsCount": 1}, {"username": "ramasilveyra", "commitsCount": 1}, {"username": "rvgrinsven", "commitsCount": 1}, {"username": "sandofvega", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sidraval", "commitsCount": 1}, {"username": "sohkai", "commitsCount": 1}, {"username": "taion", "commitsCount": 1}, {"username": "thymikee", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "timse", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 17}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 11142, "testsSize": 27135, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-loader.svg?style=flat", "shields": "https://img.shields.io/npm/v/babel-loader.svg", "content": "https://img.shields.io/npm/v/babel-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/babel/babel-loader.svg?branch=master", "service": "https://api.travis-ci.org/babel/babel-loader.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-loader/master.svg", "content": "https://img.shields.io/travis/babel/babel-loader/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master", "shields": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.64, "outdatedDependencies": {"pify": {"required": "^4.0.1", "stable": "5.0.0", "latest": "5.0.0"}, "loader-utils": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "find-cache-dir": {"required": "^2.1.0", "stable": "3.3.1", "latest": "3.3.1"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.946, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4886, "downloadsCount": 35450140.666666664, "downloadsAcceleration": 91075.13961187218, "dependentsCount": 10739}, "maintenance": {"releasesFrequency": 0.6044520547945206, "commitsFrequency": 0.6156164383561644, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7922150703789704, "detail": {"quality": 0.9303336534159067, "popularity": 0.8058661642442861, "maintenance": 0.6601766196248523}}}}, {"jest": {"analyzedAt": "2020-05-08T02:59:25.750Z", "collected": {"metadata": {"name": "jest", "scope": "unscoped", "version": "26.0.1", "description": "Delightful JavaScript Testing.", "keywords": ["ava", "babel", "coverage", "easy", "expect", "facebook", "immersive", "instant", "jasmine", "jest", "jsdom", "mocha", "mocking", "painless", "qunit", "runner", "sandboxed", "snapshot", "tap", "tape", "test", "testing", "typescript", "watch"], "date": "2020-05-05T10:41:51.741Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git"}, "links": {"npm": "https://www.npmjs.com/package/jest", "homepage": "https://jestjs.io/", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/core": "^26.0.1", "import-local": "^3.0.2", "jest-cli": "^26.0.1"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 14}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 24}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 25}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 27}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 69}], "readme": "# Jest\n\n\ud83c\udccf Delightful JavaScript Testing\n\n- **\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb Developer Ready**: Complete and ready to set-up JavaScript testing solution. Works out of the box for any React project.\n\n- **\ud83c\udfc3\ud83c\udffd Instant Feedback**: Failed tests run first. Fast interactive mode can switch between running all tests or only test files related to changed files.\n\n- **\ud83d\udcf8 Snapshot Testing**: Jest can [capture snapshots](https://jestjs.io/docs/snapshot-testing.html) of React trees or other serializable values to simplify UI testing.\n\nRead More: https://jestjs.io/"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1410885}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 7218220}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 31531534}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 88591875}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 152155911}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 271129272}], "dependentsCount": 5462, "starsCount": 91}, "github": {"homepage": "https://jestjs.io", "starsCount": 30815, "forksCount": 4361, "subscribersCount": 521, "issues": {"count": 9959, "openCount": 1015, "distribution": {"3600": 2086, "10800": 925, "32400": 932, "97200": 1289, "291600": 937, "874800": 817, "2624400": 729, "7873200": 662, "23619600": 652, "70858800": 803, "212576400": 127}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 622}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "rubennorte", "commitsCount": 55}, {"username": "jeysal", "commitsCount": 53}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "Connormiha", "commitsCount": 37}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "ai", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stephtr", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 38}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 140}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 244}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 368}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 597}], "statuses": [{"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 551, "testsSize": 2228979, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 35888, "downloadsCount": 29530625, "downloadsAcceleration": 102680.47585616441, "dependentsCount": 5462}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.44369703103193414}}, "score": {"final": 0.9258049104968532, "detail": {"quality": 0.9487312745630544, "popularity": 0.8549882333726262, "maintenance": 0.9769704184214794}}}}, {"lodash": {"analyzedAt": "2020-06-17T13:55:04.876Z", "collected": {"metadata": {"name": "lodash", "scope": "unscoped", "version": "4.17.15", "description": "Lodash modular utilities.", "keywords": ["modules", "stdlib", "util"], "date": "2019-07-19T02:28:46.584Z", "author": {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "username": "jdalton"}, "publisher": {"username": "jdalton", "email": "john.david.dalton@gmail.com"}, "maintainers": [{"username": "jdalton", "email": "john.david.dalton@gmail.com"}, {"username": "mathias", "email": "mathias@qiwi.be"}], "contributors": [{"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Mathias Bynens", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/lodash/lodash.git"}, "links": {"npm": "https://www.npmjs.com/package/lodash", "homepage": "https://lodash.com/", "repository": "https://github.com/lodash/lodash", "bugs": "https://github.com/lodash/lodash/issues"}, "license": "MIT", "devDependencies": {"async": "^2.1.4", "benchmark": "^2.1.3", "chalk": "^1.1.3", "cheerio": "^0.22.0", "codecov.io": "~0.1.6", "coveralls": "^2.11.15", "curl-amd": "~0.8.12", "docdown": "~0.7.2", "dojo": "^1.12.1", "ecstatic": "^2.2.2", "eslint": "^6.2.0", "eslint-plugin-import": "^2.18.2", "esm": "^3.1.3", "fs-extra": "~1.0.0", "glob": "^7.1.1", "istanbul": "0.4.5", "jquery": "^3.4.1", "lodash": "4.17.11", "lodash-doc-globals": "^0.1.1", "markdown-doctest": "^0.9.1", "mocha": "^5.2.0", "optional-dev-dependency": "^2.0.0", "platform": "^1.3.3", "qunit-extras": "^3.0.0", "qunitjs": "^2.1.0", "request": "^2.79.0", "requirejs": "^2.3.2", "sauce-tunnel": "^2.5.0", "uglify-js": "2.7.5", "webpack": "^1.14.0"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 4}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available."}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 5026446}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 26546003}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 115052181}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 347812037}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 663944155}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1319703105}], "dependentsCount": 81650, "starsCount": 1497}, "github": {"homepage": "https://lodash.com/", "starsCount": 45252, "forksCount": 4981, "subscribersCount": 868, "issues": {"count": 4805, "openCount": 126, "distribution": {"3600": 2143, "10800": 849, "32400": 950, "97200": 313, "291600": 207, "874800": 139, "2624400": 59, "7873200": 66, "23619600": 68, "70858800": 10, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jdalton", "commitsCount": 6643}, {"username": "jashkenas", "commitsCount": 314}, {"username": "falsyvalues", "commitsCount": 77}, {"username": "greenkeeperio-bot", "commitsCount": 46}, {"username": "bnjmnt4n", "commitsCount": 39}, {"username": "blikblum", "commitsCount": 38}, {"username": "ratbeard", "commitsCount": 22}, {"username": "ryantenney", "commitsCount": 22}, {"username": "braddunbar", "commitsCount": 21}, {"username": "megawac", "commitsCount": 19}, {"username": "jfmengels", "commitsCount": 18}, {"username": "mathiasbynens", "commitsCount": 10}, {"username": "octatone", "commitsCount": 9}, {"username": "phated", "commitsCount": 8}, {"username": "iamnoah", "commitsCount": 7}, {"username": "jridgewell", "commitsCount": 7}, {"username": "michaelficarra", "commitsCount": 7}, {"username": "samuelclay", "commitsCount": 7}, {"username": "rheh", "commitsCount": 6}, {"username": "AdamCraven", "commitsCount": 5}, {"username": "FilipZawada", "commitsCount": 5}, {"username": "danallison", "commitsCount": 5}, {"username": "danheberden", "commitsCount": 5}, {"username": "octref", "commitsCount": 5}, {"username": "pimterry", "commitsCount": 5}, {"username": "billyjanitsch", "commitsCount": 4}, {"username": "dr-skot", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "shinuza", "commitsCount": 4}, {"username": "tomByrer", "commitsCount": 4}, {"username": "younesfkihi", "commitsCount": 4}, {"username": "102", "commitsCount": 3}, {"username": "aretecode", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "craigmichaelmartin", "commitsCount": 3}, {"username": "danjm", "commitsCount": 3}, {"username": "jamiebuilds", "commitsCount": 3}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "kishanov", "commitsCount": 3}, {"username": "lifesinger", "commitsCount": 3}, {"username": "moonformeli", "commitsCount": 3}, {"username": "rfletcher", "commitsCount": 3}, {"username": "Delapouite", "commitsCount": 2}, {"username": "DmitryBaranovskiy", "commitsCount": 2}, {"username": "JeffAMcGee", "commitsCount": 2}, {"username": "Keith-CY", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "alanhogan", "commitsCount": 2}, {"username": "alireza-mh", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "beaugunderson", "commitsCount": 2}, {"username": "bjh", "commitsCount": 2}, {"username": "brianhaveri", "commitsCount": 2}, {"username": "chaoflow", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "gu-xionghong", "commitsCount": 2}, {"username": "h7lin", "commitsCount": 2}, {"username": "islemaster", "commitsCount": 2}, {"username": "jayphelps", "commitsCount": 2}, {"username": "jpiccari", "commitsCount": 2}, {"username": "jrburke", "commitsCount": 2}, {"username": "kevinji", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 2}, {"username": "malclocke", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "maw", "commitsCount": 2}, {"username": "mcmire", "commitsCount": 2}, {"username": "saravyas", "commitsCount": 2}, {"username": "steelsojka", "commitsCount": 2}, {"username": "terinjokes", "commitsCount": 2}, {"username": "think2011", "commitsCount": 2}, {"username": "timmywil", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "yuchi", "commitsCount": 2}, {"username": "yuxino", "commitsCount": 2}, {"username": "43081j", "commitsCount": 1}, {"username": "Jack-Works", "commitsCount": 1}, {"username": "Mohit21GoJs", "commitsCount": 1}, {"username": "RajuPedda", "commitsCount": 1}, {"username": "abdullahtariq1171", "commitsCount": 1}, {"username": "anatoliy8493", "commitsCount": 1}, {"username": "asilinwei", "commitsCount": 1}, {"username": "camjc", "commitsCount": 1}, {"username": "carbureted", "commitsCount": 1}, {"username": "cooperka", "commitsCount": 1}, {"username": "dracos", "commitsCount": 1}, {"username": "dwelle", "commitsCount": 1}, {"username": "dwesty17", "commitsCount": 1}, {"username": "fs-projects", "commitsCount": 1}, {"username": "futurist", "commitsCount": 1}, {"username": "gwwar", "commitsCount": 1}, {"username": "jacob87o2", "commitsCount": 1}, {"username": "lirantal", "commitsCount": 1}, {"username": "lvzhenbang", "commitsCount": 1}, {"username": "niexias", "commitsCount": 1}, {"username": "phapdinh", "commitsCount": 1}, {"username": "prog1dev", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tkrugg", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 4}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 7}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 44}]}, "source": {"files": {"readmeSize": 3208, "testsSize": 701226, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 0.33}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6495, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 52698, "downloadsCount": 115937345.66666667, "downloadsAcceleration": 73100.3621194826, "dependentsCount": 81650}, "maintenance": {"releasesFrequency": 0.25890410958904114, "commitsFrequency": 0.7299143835616438, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.9323998626810894, "detail": {"quality": 0.9394135941480269, "popularity": 0.9558057026863682, "maintenance": 0.9029822528470071}}}}, {"babel-eslint": {"analyzedAt": "2020-05-05T01:52:29.234Z", "collected": {"metadata": {"name": "babel-eslint", "scope": "unscoped", "version": "10.1.0", "description": "Custom parser for ESLint", "date": "2020-02-26T00:13:23.677Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jameshenry", "email": "npm@jameshenry.email"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "monastic.panic", "email": "monastic.panic@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "sebmck", "email": "npm@sebastian.barretomckenzie.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-eslint", "homepage": "https://github.com/babel/babel-eslint", "repository": "https://github.com/babel/babel-eslint", "bugs": "https://github.com/babel/babel-eslint/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "@babel/parser": "^7.7.0", "@babel/traverse": "^7.7.0", "@babel/types": "^7.7.0", "eslint-visitor-keys": "^1.0.0", "resolve": "^1.12.0"}, "devDependencies": {"babel-eslint": "^8.2.6", "dedent": "^0.7.0", "eslint": "^5.6.0", "eslint-config-babel": "^7.0.1", "eslint-plugin-flowtype": "^2.30.3", "eslint-plugin-import": "^2.14.0", "eslint-plugin-prettier": "^2.1.2", "espree": "^3.5.2", "husky": "^1.0.0-rc.13", "lint-staged": "^7.2.2", "mocha": "^5.0.1", "prettier": "^1.4.4"}, "peerDependencies": {"eslint": ">= 4.12.1"}, "releases": [{"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 4}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 6}, {"from": "2018-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# babel-eslint [![npm](https://img.shields.io/npm/v/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint) [![travis](https://img.shields.io/travis/babel/babel-eslint/master.svg)](https://travis-ci.org/babel/babel-eslint) [![npm-downloads](https://img.shields.io/npm/dm/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint)\n\n**babel-eslint** allows you to lint **ALL** valid Babel code with the fantastic\n[ESLint](https://github.com/eslint/eslint).\n\n### Why Use babel-eslint\n\nYou only need to use babel-eslint if you are using types (Flow) or experimental features not supported in ESLint itself yet. Otherwise try the default parser (you don't have to use it just because you are using Babel).\n\n---\n\n> If there is an issue, first check if it can be reproduced with the regular parser or with the latest versions of `eslint` and `babel-eslint`!\n\nFor questions and support please visit the [`#discussion`](https://babeljs.slack.com/messages/discussion/) babel slack channel (sign up [here](https://github.com/babel/notes/issues/38)) or eslint [gitter](https://gitter.im/eslint/eslint)!\n\n> Note that the `ecmaFeatures` config property may still be required for ESLint to work properly with features not in ECMAScript 5 by default. Examples are `globalReturn` and `modules`).\n\n## Known Issues\n\nFlow:\n> Check out [eslint-plugin-flowtype](https://github.com/gajus/eslint-plugin-flowtype): An `eslint` plugin that makes flow type annotations global variables and marks declarations as used. Solves the problem of false positives with `no-undef` and `no-unused-vars`.\n- `no-undef` for global flow types: `ReactElement`, `ReactClass` [#130](https://github.com/babel/babel-eslint/issues/130#issuecomment-111215076)\n  - Workaround: define types as globals in `.eslintrc` or define types and import them `import type ReactElement from './types'`\n- `no-unused-vars/no-undef` with Flow declarations (`declare module A {}`) [#132](https://github.com/babel/babel-eslint/issues/132#issuecomment-112815926)\n\nModules/strict mode\n- `no-unused-vars: [2, {vars: local}]` [#136](https://github.com/babel/babel-eslint/issues/136)\n\nPlease check out [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react) for React/JSX issues\n- `no-unused-vars` with jsx\n\nPlease check out [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) for other issues\n\n## How does it work?\n\nESLint allows custom parsers. This is great but some of the syntax nodes that Babel supports\naren't supported by ESLint. When using this plugin, ESLint is monkeypatched and your code is\ntransformed into code that ESLint can understand. All location info such as line numbers,\ncolumns is also retained so you can track down errors with ease.\n\nBasically `babel-eslint` exports an [`index.js`](/index.js) that a linter can use.\nIt just needs to export a `parse` method that takes in a string of code and outputs an AST.\n\n## Usage\n\n### Supported ESLint versions\n\nESLint | babel-eslint\n------------ | -------------\n4.x | >= 6.x\n3.x | >= 6.x\n2.x | >= 6.x\n1.x | >= 5.x\n\n### Install\n\nEnsure that you have substituted the correct version lock for `eslint` and `babel-eslint` into this command:\n\n```sh\n$ npm install eslint@4.x babel-eslint@8 --save-dev\n# or\n$ yarn add eslint@4.x babel-eslint@8 -D\n```\n\n### Setup\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    \"strict\": 0\n  }\n}\n```\n\nCheck out the [ESLint docs](http://eslint.org/docs/rules/) for all possible rules.\n\n### Configuration\n\n- `sourceType` can be set to `'module'`(default) or `'script'` if your code isn't using ECMAScript modules.\n- `allowImportExportEverywhere` (default `false`) can be set to `true` to allow import and export declarations to appear anywhere a statement is allowed if your build environment supports that. Otherwise import and export declarations can only appear at a program's top level.\n- `codeFrame` (default `true`) can be set to `false` to disable the code frame in the reporter. This is useful since some eslint formatters don't play well with it.\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"allowImportExportEverywhere\": false,\n    \"codeFrame\": true\n  }\n}\n```\n\n### Run\n\n```sh\n$ eslint your-files-here\n```"}, "npm": {"downloads": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 1064340}, {"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5887517}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 25189796}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 73192669}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 127732226}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 239659761}], "dependentsCount": 7671, "starsCount": 75}, "github": {"homepage": "https://github.com/babel/babel-eslint/issues/88", "starsCount": 2916, "forksCount": 220, "subscribersCount": 57, "issues": {"count": 820, "openCount": 108, "distribution": {"3600": 149, "10800": 48, "32400": 65, "97200": 83, "291600": 68, "874800": 70, "2624400": 76, "7873200": 81, "23619600": 67, "70858800": 76, "212576400": 37}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 222}, {"username": "sebmck", "commitsCount": 66}, {"username": "danez", "commitsCount": 30}, {"username": "kaicataldo", "commitsCount": 17}, {"username": "zertosh", "commitsCount": 17}, {"username": "existentialism", "commitsCount": 16}, {"username": "mysticatea", "commitsCount": 9}, {"username": "BenoitZugmeyer", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 7}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "rubennorte", "commitsCount": 5}, {"username": "fatfisz", "commitsCount": 4}, {"username": "josh", "commitsCount": 4}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "soda0289", "commitsCount": 3}, {"username": "Cellule", "commitsCount": 2}, {"username": "Couto", "commitsCount": 2}, {"username": "bgw", "commitsCount": 2}, {"username": "douglasduteil", "commitsCount": 2}, {"username": "kesne", "commitsCount": 2}, {"username": "leebyron", "commitsCount": 2}, {"username": "Constellation", "commitsCount": 1}, {"username": "Globegitter", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "MethodGrab", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "ahomu", "commitsCount": 1}, {"username": "alexkuz", "commitsCount": 1}, {"username": "aoberoi", "commitsCount": 1}, {"username": "bary12", "commitsCount": 1}, {"username": "borela", "commitsCount": 1}, {"username": "bryanrsmith", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "clemmy", "commitsCount": 1}, {"username": "danharper", "commitsCount": 1}, {"username": "ecbrodie", "commitsCount": 1}, {"username": "edmorley", "commitsCount": 1}, {"username": "emersonlaurentino", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gmaclennan", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "jmurretxactly", "commitsCount": 1}, {"username": "joa", "commitsCount": 1}, {"username": "jony89", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "neverendingqs", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "ota-meshi", "commitsCount": 1}, {"username": "paramaggarwal", "commitsCount": 1}, {"username": "rattrayalex", "commitsCount": 1}, {"username": "rhettlivingston", "commitsCount": 1}, {"username": "skyrpex", "commitsCount": 1}, {"username": "stevenjob", "commitsCount": 1}, {"username": "vaibhavmule", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "viztor", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4261, "testsSize": 69362}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-eslint.svg", "shields": "https://img.shields.io/npm/v/babel-eslint.svg", "content": "https://img.shields.io/npm/v/babel-eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "service": "https://api.travis-ci.org/babel/babel-eslint.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "content": "https://img.shields.io/travis/babel/babel-eslint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-eslint.svg", "shields": "https://img.shields.io/npm/dm/babel-eslint.svg", "content": "https://img.shields.io/npm/dm/babel-eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3330, "downloadsCount": 24397556.333333332, "downloadsAcceleration": 59019.793645357684, "dependentsCount": 7671}, "maintenance": {"releasesFrequency": 0.8482876712328767, "commitsFrequency": 0.3890753424657534, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7852911272962273, "detail": {"quality": 0.9681538918419647, "popularity": 0.7553506712951872, "maintenance": 0.6584920708294923}}}}, {"@types/node": {"analyzedAt": "2019-10-30T15:45:53.550Z", "collected": {"metadata": {"name": "@types/node", "scope": "types", "version": "12.12.2", "description": "TypeScript definitions for Node.js", "date": "2019-10-30T15:45:00.019Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Microsoft TypeScript", "url": "https://github.com/Microsoft"}, {"name": "DefinitelyTyped", "url": "https://github.com/DefinitelyTyped"}, {"name": "Alberto Schiabel", "url": "https://github.com/jkomyno"}, {"name": "Alexander T.", "url": "https://github.com/a-tarasyuk"}, {"name": "Alvis HT Tang", "url": "https://github.com/alvis"}, {"name": "Andrew Makarov", "url": "https://github.com/r3nya"}, {"name": "Benjamin Toueg", "url": "https://github.com/btoueg"}, {"name": "Bruno Scheufler", "url": "https://github.com/brunoscheufler"}, {"name": "Chigozirim C.", "url": "https://github.com/smac89"}, {"name": "Christian Vaagland Tellnes", "url": "https://github.com/tellnes"}, {"name": "David Junger", "url": "https://github.com/touffy"}, {"name": "Deividas Bakanas", "url": "https://github.com/DeividasBakanas"}, {"name": "Eugene Y. Q. Shen", "url": "https://github.com/eyqs"}, {"name": "Flarna", "url": "https://github.com/Flarna"}, {"name": "Hannes Magnusson", "url": "https://github.com/Hannes-Magnusson-CK"}, {"name": "Ho\u00e0ng V\u0103n Kh\u1ea3i", "url": "https://github.com/KSXGitHub"}, {"name": "Huw", "url": "https://github.com/hoo29"}, {"name": "Kelvin Jin", "url": "https://github.com/kjin"}, {"name": "Klaus Meinhardt", "url": "https://github.com/ajafff"}, {"name": "Lishude", "url": "https://github.com/islishude"}, {"name": "Mariusz Wiktorczyk", "url": "https://github.com/mwiktorczyk"}, {"name": "Mohsen Azimi", "url": "https://github.com/mohsen1"}, {"name": "Nicolas Even", "url": "https://github.com/n-e"}, {"name": "Nicolas Voigt", "url": "https://github.com/octo-sniffle"}, {"name": "Nikita Galkin", "url": "https://github.com/galkin"}, {"name": "Parambir Singh", "url": "https://github.com/parambirs"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}, {"name": "Simon Schick", "url": "https://github.com/SimonSchick"}, {"name": "Thomas den Hollander", "url": "https://github.com/ThomasdenH"}, {"name": "Wilco Bakker", "url": "https://github.com/WilcoBakker"}, {"name": "wwwy3y3", "url": "https://github.com/wwwy3y3"}, {"name": "Zane Hannan AU", "url": "https://github.com/ZaneHannanAU"}, {"name": "Samuel Ainsworth", "url": "https://github.com/samuela"}, {"name": "Kyle Uehlein", "url": "https://github.com/kuehlein"}, {"name": "Jordi Oliveras Rovira", "url": "https://github.com/j-oliveras"}, {"name": "Thanik Bhongbhibhat", "url": "https://github.com/bhongy"}, {"name": "Marcin Kopacz", "url": "https://github.com/chyzwar"}, {"name": "Trivikram Kamat", "url": "https://github.com/trivikr"}, {"name": "Minh Son Nguyen", "url": "https://github.com/nguymin4"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/node"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fnode", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 27}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 50}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 96}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 212}, {"from": "2017-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 462}], "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Oct 2019 15:44:41 GMT\r\n * Dependencies: none\r\n * Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Ho\u00e0ng V\u0103n Kh\u1ea3i <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Nikita Galkin <https://github.com/galkin>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>, Marcin Kopacz <https://github.com/chyzwar>, Trivikram Kamat <https://github.com/trivikr>, and Minh Son Nguyen <https://github.com/nguymin4>."}, "npm": {"downloads": [{"from": "2019-10-29T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 3322016}, {"from": "2019-10-23T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 17892909}, {"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 74095524}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 209443714}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 391479005}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 656625029}], "dependentsCount": 8111, "starsCount": 22}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 22, "downloadsCount": 69814571.33333333, "downloadsAcceleration": 261697.19918188732, "dependentsCount": 8111}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-node-0ve47y4wt38/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-09T21:09:10.796Z"}, "score": {"final": 0.4171751300292884, "detail": {"quality": 0.198969320144589, "popularity": 0.688050478054986, "maintenance": 0.3333333333333333}}}}, {"eslint-plugin-import": {"analyzedAt": "2020-06-10T02:21:35.073Z", "collected": {"metadata": {"name": "eslint-plugin-import", "scope": "unscoped", "version": "2.21.2", "description": "Import with sanity.", "keywords": ["eslint", "eslintplugin", "es6", "jsnext", "modules", "import", "export"], "date": "2020-06-10T02:21:04.046Z", "author": {"name": "Ben Mosher", "email": "me@benmosher.com", "username": "benmosher"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "benmosher", "email": "me@benmosher.com"}, {"username": "jfmengels", "email": "jfm.engels@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/benmosher/eslint-plugin-import.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-import", "homepage": "https://github.com/benmosher/eslint-plugin-import", "repository": "https://github.com/benmosher/eslint-plugin-import", "bugs": "https://github.com/benmosher/eslint-plugin-import/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "array.prototype.flat": "^1.2.3", "contains-path": "^0.1.0", "debug": "^2.6.9", "doctrine": "1.5.0", "eslint-import-resolver-node": "^0.3.3", "eslint-module-utils": "^2.6.0", "has": "^1.0.3", "minimatch": "^3.0.4", "object.values": "^1.1.1", "read-pkg-up": "^2.0.0", "resolve": "^1.17.0", "tsconfig-paths": "^3.9.0"}, "devDependencies": {"@eslint/import-test-order-redirect-scoped": "file:./tests/files/order-redirect-scoped", "@test-scope/some-module": "file:./tests/files/symlinked-module", "@typescript-eslint/parser": "^2.23.0", "array.prototype.flatmap": "^1.2.3", "babel-cli": "^6.26.0", "babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-plugin-istanbul": "^4.1.6", "babel-plugin-module-resolver": "^2.7.1", "babel-preset-es2015-argon": "latest", "babel-preset-flow": "^6.23.0", "babel-register": "^6.26.0", "babylon": "^6.18.0", "chai": "^4.2.0", "coveralls": "^3.0.6", "cross-env": "^4.0.0", "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0", "eslint-import-resolver-node": "file:./resolvers/node", "eslint-import-resolver-typescript": "^1.0.2", "eslint-import-resolver-webpack": "file:./resolvers/webpack", "eslint-import-test-order-redirect": "file:./tests/files/order-redirect", "eslint-module-utils": "file:./utils", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-import": "2.x", "eslint-plugin-json": "^2.1.1", "fs-copy-file-sync": "^1.1.1", "glob": "^7.1.6", "in-publish": "^2.0.1", "linklocal": "^2.8.2", "lodash.isarray": "^4.0.0", "mocha": "^3.5.3", "npm-which": "^3.0.1", "nyc": "^11.9.0", "redux": "^3.7.2", "rimraf": "^2.7.1", "semver": "^6.3.0", "sinon": "^2.4.1", "typescript": "~3.9.5", "typescript-eslint-parser": "^22.0.0"}, "peerDependencies": {"eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 5}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 10}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 18}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-import\n\n[![build status](https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master)](https://travis-ci.org/benmosher/eslint-plugin-import)\n[![Coverage Status](https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master)](https://coveralls.io/github/benmosher/eslint-plugin-import?branch=master)\n[![win32 build status](https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true)](https://ci.appveyor.com/project/benmosher/eslint-plugin-import/branch/master)\n[![npm](https://img.shields.io/npm/v/eslint-plugin-import.svg)](https://www.npmjs.com/package/eslint-plugin-import)\n[![npm downloads](https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000)](http://www.npmtrends.com/eslint-plugin-import)\n\nThis plugin intends to support linting of ES2015+ (ES6+) import/export syntax, and prevent issues with misspelling of file paths and import names. All the goodness that the ES2015+ static module syntax intends to provide, marked up in your editor.\n\n**IF YOU ARE USING THIS WITH SUBLIME**: see the [bottom section](#sublimelinter-eslint) for important info.\n\n## Rules\n\n### Static analysis\n\n* Ensure imports point to a file/module that can be resolved. ([`no-unresolved`])\n* Ensure named imports correspond to a named export in the remote file. ([`named`])\n* Ensure a default export is present, given a default import. ([`default`])\n* Ensure imported namespaces contain dereferenced properties as they are dereferenced. ([`namespace`])\n* Restrict which files can be imported in a given folder ([`no-restricted-paths`])\n* Forbid import of modules using absolute paths ([`no-absolute-path`])\n* Forbid `require()` calls with expressions ([`no-dynamic-require`])\n* Prevent importing the submodules of other modules ([`no-internal-modules`])\n* Forbid webpack loader syntax in imports ([`no-webpack-loader-syntax`])\n* Forbid a module from importing itself ([`no-self-import`])\n* Forbid a module from importing a module with a dependency path back to itself ([`no-cycle`])\n* Prevent unnecessary path segments in import and require statements ([`no-useless-path-segments`])\n* Forbid importing modules from parent directories ([`no-relative-parent-imports`])\n\n[`no-unresolved`]: ./docs/rules/no-unresolved.md\n[`named`]: ./docs/rules/named.md\n[`default`]: ./docs/rules/default.md\n[`namespace`]: ./docs/rules/namespace.md\n[`no-restricted-paths`]: ./docs/rules/no-restricted-paths.md\n[`no-absolute-path`]: ./docs/rules/no-absolute-path.md\n[`no-dynamic-require`]: ./docs/rules/no-dynamic-require.md\n[`no-internal-modules`]: ./docs/rules/no-internal-modules.md\n[`no-webpack-loader-syntax`]: ./docs/rules/no-webpack-loader-syntax.md\n[`no-self-import`]: ./docs/rules/no-self-import.md\n[`no-cycle`]: ./docs/rules/no-cycle.md\n[`no-useless-path-segments`]: ./docs/rules/no-useless-path-segments.md\n[`no-relative-parent-imports`]: ./docs/rules/no-relative-parent-imports.md\n\n### Helpful warnings\n\n\n* Report any invalid exports, i.e. re-export of the same name ([`export`])\n* Report use of exported name as identifier of default export ([`no-named-as-default`])\n* Report use of exported name as property of default export ([`no-named-as-default-member`])\n* Report imported names marked with `@deprecated` documentation tag ([`no-deprecated`])\n* Forbid the use of extraneous packages ([`no-extraneous-dependencies`])\n* Forbid the use of mutable exports with `var` or `let`. ([`no-mutable-exports`])\n* Report modules without exports, or exports without matching import in another module ([`no-unused-modules`])\n\n[`export`]: ./docs/rules/export.md\n[`no-named-as-default`]: ./docs/rules/no-named-as-default.md\n[`no-named-as-default-member`]: ./docs/rules/no-named-as-default-member.md\n[`no-deprecated`]: ./docs/rules/no-deprecated.md\n[`no-extraneous-dependencies`]: ./docs/rules/no-extraneous-dependencies.md\n[`no-mutable-exports`]: ./docs/rules/no-mutable-exports.md\n[`no-unused-modules`]: ./docs/rules/no-unused-modules.md\n\n### Module systems\n\n* Report potentially ambiguous parse goal (`script` vs. `module`) ([`unambiguous`])\n* Report CommonJS `require` calls and `module.exports` or `exports.*`. ([`no-commonjs`])\n* Report AMD `require` and `define` calls. ([`no-amd`])\n* No Node.js builtin modules. ([`no-nodejs-modules`])\n\n[`unambiguous`]: ./docs/rules/unambiguous.md\n[`no-commonjs`]: ./docs/rules/no-commonjs.md\n[`no-amd`]: ./docs/rules/no-amd.md\n[`no-nodejs-modules`]: ./docs/rules/no-nodejs-modules.md\n\n\n### Style guide\n\n* Ensure all imports appear before other statements ([`first`])\n* Ensure all exports appear after other statements ([`exports-last`])\n* Report repeated import of the same module in multiple places ([`no-duplicates`])\n* Forbid namespace (a.k.a. \"wildcard\" `*`) imports ([`no-namespace`])\n* Ensure consistent use of file extension within the import path ([`extensions`])\n* Enforce a convention in module import order ([`order`])\n* Enforce a newline after import statements ([`newline-after-import`])\n* Prefer a default export if module exports a single name ([`prefer-default-export`])\n* Limit the maximum number of dependencies a module can have ([`max-dependencies`])\n* Forbid unassigned imports ([`no-unassigned-import`])\n* Forbid named default exports ([`no-named-default`])\n* Forbid default exports ([`no-default-export`])\n* Forbid named exports ([`no-named-export`])\n* Forbid anonymous values as default exports ([`no-anonymous-default-export`])\n* Prefer named exports to be grouped together in a single export declaration ([`group-exports`])\n* Enforce a leading comment with the webpackChunkName for dynamic imports ([`dynamic-import-chunkname`])\n\n[`first`]: ./docs/rules/first.md\n[`exports-last`]: ./docs/rules/exports-last.md\n[`no-duplicates`]: ./docs/rules/no-duplicates.md\n[`no-namespace`]: ./docs/rules/no-namespace.md\n[`extensions`]: ./docs/rules/extensions.md\n[`order`]: ./docs/rules/order.md\n[`newline-after-import`]: ./docs/rules/newline-after-import.md\n[`prefer-default-export`]: ./docs/rules/prefer-default-export.md\n[`max-dependencies`]: ./docs/rules/max-dependencies.md\n[`no-unassigned-import`]: ./docs/rules/no-unassigned-import.md\n[`no-named-default`]: ./docs/rules/no-named-default.md\n[`no-anonymous-default-export`]: ./docs/rules/no-anonymous-default-export.md\n[`group-exports`]: ./docs/rules/group-exports.md\n[`no-default-export`]: ./docs/rules/no-default-export.md\n[`no-named-export`]: ./docs/rules/no-named-export.md\n[`dynamic-import-chunkname`]: ./docs/rules/dynamic-import-chunkname.md\n\n## `eslint-plugin-import` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `eslint-plugin-import` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-import?utm_source=npm-eslint-plugin-import&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install eslint-plugin-import -g\n```\n\nor if you manage ESLint as a dev dependency:\n\n```sh\n# inside your project's working tree\nnpm install eslint-plugin-import --save-dev\n```\n\nAll rules are off by default. However, you may configure them manually\nin your `.eslintrc.(yml|json|js)`, or extend one of the canned configs:\n\n```yaml\n---\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n\n# or configure manually:\nplugins:\n  - import\n\nrules:\n  import/no-unresolved: [2, {commonjs: true, amd: true}]\n  import/named: 2\n  import/namespace: 2\n  import/default: 2\n  import/export: 2\n  # etc...\n```\n\n# TypeScript\n\nYou may use the following shortcut or assemble your own config using the granular settings described below.\n\nMake sure you have installed [`@typescript-eslint/parser`] which is used in the following configuration. Unfortunately NPM does not allow to list optional peer dependencies.\n\n```yaml\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n  - plugin:import/typescript # this line does the trick\n```\n\n[`@typescript-eslint/parser`]: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser\n\n# Resolvers\n\nWith the advent of module bundlers and the current state of modules and module\nsyntax specs, it's not always obvious where `import x from 'module'` should look\nto find the file behind `module`.\n\nUp through v0.10ish, this plugin has directly used substack's [`resolve`] plugin,\nwhich implements Node's import behavior. This works pretty well in most cases.\n\nHowever, webpack allows a number of things in import module source strings that\nNode does not, such as loaders (`import 'file!./whatever'`) and a number of\naliasing schemes, such as [`externals`]: mapping a module id to a global name at\nruntime (allowing some modules to be included more traditionally via script tags).\n\nIn the interest of supporting both of these, v0.11 introduces resolvers.\n\nCurrently [Node] and [webpack] resolution have been implemented, but the\nresolvers are just npm packages, so [third party packages are supported](https://github.com/benmosher/eslint-plugin-import/wiki/Resolvers) (and encouraged!).\n\nYou can reference resolvers in several ways (in order of precedence):\n\n- as a conventional `eslint-import-resolver` name, like `eslint-import-resolver-foo`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  # uses 'eslint-import-resolver-foo':\n  import/resolver: foo\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      foo: { someConfig: value }\n    }\n  }\n}\n```\n\n- with a full npm module name, like `my-awesome-npm-module`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/resolver: 'my-awesome-npm-module'\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      'my-awesome-npm-module': { someConfig: value }\n    }\n  }\n}\n```\n\n- with a filesystem path to resolver, defined in this example as a `computed property` name:\n\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      [path.resolve('../../../my-resolver')]: { someConfig: value }\n    }\n  }\n}\n```\n\nRelative paths will be resolved relative to the source's nearest `package.json` or\nthe process's current working directory if no `package.json` is found.\n\n\n\nIf you are interesting in writing a resolver, see the [spec](./resolvers/README.md) for more details.\n\n[`resolve`]: https://www.npmjs.com/package/resolve\n[`externals`]: http://webpack.github.io/docs/library-and-externals.html\n\n[Node]: https://www.npmjs.com/package/eslint-import-resolver-node\n[webpack]: https://www.npmjs.com/package/eslint-import-resolver-webpack\n\n# Settings\n\nYou may set the following settings in your `.eslintrc`:\n\n#### `import/extensions`\n\nA list of file extensions that will be parsed as modules and inspected for\n`export`s.\n\nThis defaults to `['.js']`, unless you are using the `react` shared config,\nin which case it is specified as `['.js', '.jsx']`.\n\n```js\n\"settings\": {\n  \"import/extensions\": [\n    \".js\",\n    \".jsx\"\n  ]\n}\n```\n\nIf you require more granular extension definitions, you can use:\n\n```js\n\"settings\": {\n  \"import/resolver\": {\n    \"node\": {\n      \"extensions\": [\n        \".js\",\n        \".jsx\"\n      ]\n    }\n  }\n}\n```\n\nNote that this is different from (and likely a subset of) any `import/resolver`\nextensions settings, which may include `.json`, `.coffee`, etc. which will still\nfactor into the `no-unresolved` rule.\n\nAlso, the following `import/ignore` patterns will overrule this list.\n\n#### `import/ignore`\n\nA list of regex strings that, if matched by a path, will\nnot report the matching module if no `export`s are found.\nIn practice, this means rules other than [`no-unresolved`](./docs/rules/no-unresolved.md#ignore) will not report on any\n`import`s with (absolute filesystem) paths matching this pattern.\n\n`no-unresolved` has its own [`ignore`](./docs/rules/no-unresolved.md#ignore) setting.\n\n```yaml\nsettings:\n  import/ignore:\n    - \\.coffee$          # fraught with parse errors\n    - \\.(scss|less|css)$ # can't parse unprocessed CSS modules, either\n```\n\n#### `import/core-modules`\n\nAn array of additional modules to consider as \"core\" modules--modules that should\nbe considered resolved but have no path on the filesystem. Your resolver may\nalready define some of these (for example, the Node resolver knows about `fs` and\n`path`), so you need not redefine those.\n\nFor example, Electron exposes an `electron` module:\n\n```js\nimport 'electron'  // without extra config, will be flagged as unresolved!\n```\n\nthat would otherwise be unresolved. To avoid this, you may provide `electron` as a\ncore module:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/core-modules: [ electron ]\n```\n\nIn Electron's specific case, there is a shared config named `electron`\nthat specifies this for you.\n\nContribution of more such shared configs for other platforms are welcome!\n\n#### `import/external-module-folders`\n\nAn array of folders. Resolved modules only from those folders will be considered as \"external\". By default - `[\"node_modules\"]`. Makes sense if you have configured your path or webpack to handle your internal paths differently and want to consider modules from some folders, for example `bower_components` or `jspm_modules`, as \"external\".\n\nThis option is also useful in a monorepo setup: list here all directories that contain monorepo's packages and they will be treated as external ones no matter which resolver is used.\n\nEach item in this array is either a folder's name, its subpath, or its absolute prefix path:\n\n- `jspm_modules` will match any file or folder named `jspm_modules` or which has a direct or non-direct parent named `jspm_modules`, e.g. `/home/me/project/jspm_modules` or `/home/me/project/jspm_modules/some-pkg/index.js`.\n\n- `packages/core` will match any path that contains these two segments, for example `/home/me/project/packages/core/src/utils.js`.\n\n- `/home/me/project/packages` will only match files and directories inside this directory, and the directory itself.\n\nPlease note that incomplete names are not allowed here so `components` won't match `bower_components` and `packages/ui` won't match `packages/ui-utils` (but will match `packages/ui/utils`).\n\n#### `import/parsers`\n\nA map from parsers to file extension arrays. If a file extension is matched, the\ndependency parser will require and use the map key as the parser instead of the\nconfigured ESLint parser. This is useful if you're inter-op-ing with TypeScript\ndirectly using webpack, for example:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/parsers:\n    @typescript-eslint/parser: [ .ts, .tsx ]\n```\n\nIn this case, [`@typescript-eslint/parser`](https://www.npmjs.com/package/@typescript-eslint/parser)\nmust be installed and require-able from the running `eslint` module's location\n(i.e., install it as a peer of ESLint).\n\nThis is currently only tested with `@typescript-eslint/parser` (and its predecessor,\n`typescript-eslint-parser`) but should theoretically work with any moderately\nESTree-compliant parser.\n\nIt's difficult to say how well various plugin features will be supported, too,\ndepending on how far down the rabbit hole goes. Submit an issue if you find strange\nbehavior beyond here, but steel your heart against the likely outcome of closing\nwith `wontfix`.\n\n\n#### `import/resolver`\n\nSee [resolvers](#resolvers).\n\n#### `import/cache`\n\nSettings for cache behavior. Memoization is used at various levels to avoid the copious amount of `fs.statSync`/module parse calls required to correctly report errors.\n\nFor normal `eslint` console runs, the cache lifetime is irrelevant, as we can strongly assume that files should not be changing during the lifetime of the linter process (and thus, the cache in memory)\n\nFor long-lasting processes, like [`eslint_d`] or [`eslint-loader`], however, it's important that there be some notion of staleness.\n\nIf you never use [`eslint_d`] or [`eslint-loader`], you may set the cache lifetime to `Infinity` and everything should be fine:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: \u221e  # or Infinity\n```\n\nOtherwise, set some integer, and cache entries will be evicted after that many seconds have elapsed:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: 5  # 30 is the default\n```\n\n[`eslint_d`]: https://www.npmjs.com/package/eslint_d\n[`eslint-loader`]: https://www.npmjs.com/package/eslint-loader\n\n#### `import/internal-regex`\n\nA regex for packages should be treated as internal. Useful when you are utilizing a monorepo setup or developing a set of packages that depend on each other.\n\nBy default, any package referenced from [`import/external-module-folders`](#importexternal-module-folders) will be considered as \"external\", including packages in a monorepo like yarn workspace or lerna environment. If you want to mark these packages as \"internal\" this will be useful.\n\nFor example, if your packages in a monorepo are all in `@scope`, you can configure `import/internal-regex` like this\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/internal-regex: ^@scope/\n```\n\n\n## SublimeLinter-eslint\n\nSublimeLinter-eslint introduced a change to support `.eslintignore` files\nwhich altered the way file paths are passed to ESLint when linting during editing.\nThis change sends a relative path instead of the absolute path to the file (as ESLint\nnormally provides), which can make it impossible for this plugin to resolve dependencies\non the filesystem.\n\nThis workaround should no longer be necessary with the release of ESLint 2.0, when\n`.eslintignore` will be updated to work more like a `.gitignore`, which should\nsupport proper ignoring of absolute paths via `--stdin-filename`.\n\nIn the meantime, see [roadhump/SublimeLinter-eslint#58](https://github.com/roadhump/SublimeLinter-eslint/issues/58)\nfor more details and discussion, but essentially, you may find you need to add the following\n`SublimeLinter` config to your Sublime project file:\n\n```json\n{\n    \"folders\":\n    [\n        {\n            \"path\": \"code\"\n        }\n    ],\n    \"SublimeLinter\":\n    {\n        \"linters\":\n        {\n            \"eslint\":\n            {\n                \"chdir\": \"${project}/code\"\n            }\n        }\n    }\n}\n```\n\nNote that `${project}/code` matches the `code` provided at `folders[0].path`.\n\nThe purpose of the `chdir` setting, in this case, is to set the working directory\nfrom which ESLint is executed to be the same as the directory on which SublimeLinter-eslint\nbases the relative path it provides.\n\nSee the SublimeLinter docs on [`chdir`](http://www.sublimelinter.com/en/latest/linter_settings.html#chdir)\nfor more information, in case this does not work with your project.\n\nIf you are not using `.eslintignore`, or don't have a Sublime project file, you can also\ndo the following via a `.sublimelinterrc` file in some ancestor directory of your\ncode:\n\n```json\n{\n  \"linters\": {\n    \"eslint\": {\n      \"args\": [\"--stdin-filename\", \"@\"]\n    }\n  }\n}\n```\n\nI also found that I needed to set `rc_search_limit` to `null`, which removes the file\nhierarchy search limit when looking up the directory tree for `.sublimelinterrc`:\n\nIn Package Settings / SublimeLinter / User Settings:\n```json\n{\n  \"user\": {\n    \"rc_search_limit\": null\n  }\n}\n```\n\nI believe this defaults to `3`, so you may not need to alter it depending on your\nproject folder max depth."}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1440420}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7659734}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 31818037}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 91337814}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 159290443}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 281461185}], "dependentsCount": 7584, "starsCount": 48}, "github": {"starsCount": 2568, "forksCount": 877, "subscribersCount": 30, "issues": {"count": 1782, "openCount": 302, "distribution": {"3600": 144, "10800": 88, "32400": 110, "97200": 218, "291600": 151, "874800": 186, "2624400": 186, "7873200": 190, "23619600": 190, "70858800": 175, "212576400": 144}, "isDisabled": false}, "contributors": [{"username": "benmosher", "commitsCount": 835}, {"username": "ljharb", "commitsCount": 119}, {"username": "jfmengels", "commitsCount": 35}, {"username": "greenkeeperio-bot", "commitsCount": 28}, {"username": "rfermann", "commitsCount": 27}, {"username": "golopot", "commitsCount": 18}, {"username": "sompylasar", "commitsCount": 17}, {"username": "graingert", "commitsCount": 12}, {"username": "josh", "commitsCount": 9}, {"username": "le0nik", "commitsCount": 9}, {"username": "sheepsteak", "commitsCount": 9}, {"username": "k15a", "commitsCount": 8}, {"username": "christophercurrie", "commitsCount": 7}, {"username": "knpwrs", "commitsCount": 7}, {"username": "Arcanemagus", "commitsCount": 6}, {"username": "lydell", "commitsCount": 6}, {"username": "manuth", "commitsCount": 6}, {"username": "singles", "commitsCount": 6}, {"username": "byteme980", "commitsCount": 5}, {"username": "futpib", "commitsCount": 5}, {"username": "j-f1", "commitsCount": 5}, {"username": "ljqx", "commitsCount": 5}, {"username": "millerized", "commitsCount": 5}, {"username": "tizmagik", "commitsCount": 5}, {"username": "yp", "commitsCount": 5}, {"username": "bmish", "commitsCount": 4}, {"username": "danny-andrews", "commitsCount": 4}, {"username": "kevin940726", "commitsCount": 4}, {"username": "mplewis", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "zloirock", "commitsCount": 4}, {"username": "1pete", "commitsCount": 3}, {"username": "bradzacher", "commitsCount": 3}, {"username": "gajus", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "lo1tuma", "commitsCount": 3}, {"username": "lukeapage", "commitsCount": 3}, {"username": "preco21", "commitsCount": 3}, {"username": "schmod", "commitsCount": 3}, {"username": "scottnonnenberg", "commitsCount": 3}, {"username": "silvenon", "commitsCount": 3}, {"username": "spencerhakim", "commitsCount": 3}, {"username": "swernerx", "commitsCount": 3}, {"username": "syymza", "commitsCount": 3}, {"username": "timkraut", "commitsCount": 3}, {"username": "AamuLumi", "commitsCount": 2}, {"username": "AdamSelene", "commitsCount": 2}, {"username": "Kiwka", "commitsCount": 2}, {"username": "Mairu", "commitsCount": 2}, {"username": "Satyam", "commitsCount": 2}, {"username": "adjerbetian", "commitsCount": 2}, {"username": "arcanis", "commitsCount": 2}, {"username": "brendo", "commitsCount": 2}, {"username": "briandipalma", "commitsCount": 2}, {"username": "chrislloyd", "commitsCount": 2}, {"username": "daltones", "commitsCount": 2}, {"username": "duncanbeevers", "commitsCount": 2}, {"username": "echenley", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 2}, {"username": "giodamelio", "commitsCount": 2}, {"username": "gmathieu", "commitsCount": 2}, {"username": "isiahmeadows", "commitsCount": 2}, {"username": "jameslnewell", "commitsCount": 2}, {"username": "jeffshaver", "commitsCount": 2}, {"username": "joaovieira", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "julien1619", "commitsCount": 2}, {"username": "justinanastos", "commitsCount": 2}, {"username": "kamalbennani", "commitsCount": 2}, {"username": "kirill-konshin", "commitsCount": 2}, {"username": "kmui2", "commitsCount": 2}, {"username": "laysent", "commitsCount": 2}, {"username": "manovotny", "commitsCount": 2}, {"username": "nevir", "commitsCount": 2}, {"username": "nosnickid", "commitsCount": 2}, {"username": "ntdb", "commitsCount": 2}, {"username": "patrick-steele-idem", "commitsCount": 2}, {"username": "pcorpet", "commitsCount": 2}, {"username": "saschanaz", "commitsCount": 2}, {"username": "sharmilajesupaul", "commitsCount": 2}, {"username": "skozin", "commitsCount": 2}, {"username": "sonicdoe", "commitsCount": 2}, {"username": "spalger", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "tihonove", "commitsCount": 2}, {"username": "toshafed", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "xjamundx", "commitsCount": 2}, {"username": "Ephem", "commitsCount": 1}, {"username": "Hypnosphi", "commitsCount": 1}, {"username": "Maxim-Mazurok", "commitsCount": 1}, {"username": "MikeyBeLike", "commitsCount": 1}, {"username": "adamborowski", "commitsCount": 1}, {"username": "arvigeus", "commitsCount": 1}, {"username": "astorije", "commitsCount": 1}, {"username": "barbogast", "commitsCount": 1}, {"username": "darkartur", "commitsCount": 1}, {"username": "malykhinvi", "commitsCount": 1}, {"username": "migueloller", "commitsCount": 1}, {"username": "nickofthyme", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 12}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 25}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 52}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 98}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 184}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 19447, "testsSize": 410809, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "service": "https://api.travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "shields": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master", "shields": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000", "shields": "https://img.shields.io/npm/dt/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/dt/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "contains-path": {"required": "^0.1.0", "stable": "1.0.0", "latest": "1.0.0"}, "doctrine": {"required": "1.5.0", "stable": "3.0.0", "latest": "3.0.0"}, "read-pkg-up": {"required": "^2.0.0", "stable": "7.0.1", "latest": "7.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.822, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 3623, "downloadsCount": 30445938, "downloadsAcceleration": 100823.76759893459, "dependentsCount": 7584}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7797395297678366, "detail": {"quality": 0.9147581481765792, "popularity": 0.777082148518656, "maintenance": 0.6666666666666666}}}}, {"babel-cli": {"analyzedAt": "2020-03-29T12:00:46.823Z", "collected": {"metadata": {"name": "babel-cli", "scope": "unscoped", "version": "6.26.0", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2017-08-16T15:54:25.041Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-cli", "homepage": "https://babeljs.io/"}, "license": "MIT", "dependencies": {"babel-core": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "commander": "^2.11.0", "convert-source-map": "^1.5.0", "fs-readdir-recursive": "^1.0.0", "glob": "^7.1.2", "lodash": "^4.17.4", "output-file-sync": "^1.1.2", "path-is-absolute": "^1.0.1", "slash": "^1.0.0", "source-map": "^0.5.6", "v8flags": "^2.1.1", "chokidar": "^1.6.1"}, "devDependencies": {"babel-helper-fixtures": "^6.26.0"}, "optionalDependencies": {"chokidar": "^1.6.1"}, "releases": [{"from": "2020-02-28T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 0}, {"from": "2019-10-01T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 0}, {"from": "2019-03-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 1}, {"from": "2018-03-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-cli\n\n> Babel command line.\n \nIn addition, various entry point scripts live in the top-level package at `babel-cli/bin`.\n\nThere are some shell-executable utility scripts, `babel-external-helpers.js` and `babel-node.js`, and the main Babel cli script, `babel.js`.\n\n## Install\n\n```sh\nnpm install --save-dev babel-cli\n```\n\n## Usage \n\n```sh\nbabel script.js\n```\n\nFor more in depth documentation see: http://babeljs.io/docs/usage/cli/"}, "npm": {"downloads": [{"from": "2020-03-28T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 28263}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 538691}, {"from": "2020-02-28T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 2260808}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 6594646}, {"from": "2019-10-01T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 13730478}, {"from": "2019-03-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 31165106}], "dependentsCount": 2947, "starsCount": 92}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36139, "forksCount": 4175, "subscribersCount": 883, "issues": {"count": 11292, "openCount": 723, "distribution": {"3600": 2429, "10800": 894, "32400": 1038, "97200": 1195, "291600": 1027, "874800": 968, "2624400": 816, "7873200": 758, "23619600": 841, "70858800": 1089, "212576400": 237}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 445}, {"username": "nicolo-ribaudo", "commitsCount": 445}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "JLHwung", "commitsCount": 159}, {"username": "jridgewell", "commitsCount": 145}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 67}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 48}, {"username": "babel-bot", "commitsCount": 38}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-03-22T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 17}, {"from": "2020-02-28T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 99}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 230}, {"from": "2019-10-01T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 469}, {"from": "2019-03-30T00:00:00.000Z", "to": "2020-03-29T00:00:00.000Z", "count": 723}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11742467, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "output-file-sync": {"required": "^1.1.2", "stable": "2.0.1", "latest": "2.0.1"}, "slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "v8flags": {"required": "^2.1.1", "stable": "3.1.3", "latest": "3.1.3"}, "source-map": {"required": "^0.5.6", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "chokidar": {"required": "^1.6.1", "stable": "3.3.1", "latest": "3.3.1"}, "commander": {"required": "^2.11.0", "stable": "5.0.0", "latest": "5.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 41388, "downloadsCount": 2198215.3333333335, "downloadsAcceleration": -4781.751027397262, "dependentsCount": 2947}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2571921448540768}}, "score": {"final": 0.709753987132846, "detail": {"quality": 0.9251863785324729, "popularity": 0.6038882492882846, "maintenance": 0.6309633894920132}}}}, {"react-dom": {"analyzedAt": "2020-06-05T01:51:23.453Z", "collected": {"metadata": {"name": "react-dom", "scope": "unscoped", "version": "16.13.1", "description": "React package for working with the DOM.", "keywords": ["react"], "date": "2020-03-19T19:53:23.004Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react-dom"}, "links": {"npm": "https://www.npmjs.com/package/react-dom", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2", "scheduler": "^0.19.1"}, "peerDependencies": {"react": "^16.13.1"}, "releases": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 3}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 10}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 28}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 65}, {"from": "2018-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 127}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1375316}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 7077138}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 31754518}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 94542587}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 165314806}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 297956602}], "dependentsCount": 27887, "starsCount": 214}, "github": {"homepage": "https://reactjs.org", "starsCount": 149917, "forksCount": 29176, "subscribersCount": 6664, "issues": {"count": 18868, "openCount": 613, "distribution": {"3600": 3821, "10800": 1823, "32400": 1863, "97200": 2342, "291600": 1800, "874800": 1679, "2624400": 1371, "7873200": 1192, "23619600": 1425, "70858800": 1195, "212576400": 357}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1382}, {"username": "bvaughn", "commitsCount": 1215}, {"username": "sophiebits", "commitsCount": 874}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 699}, {"username": "acdlite", "commitsCount": 689}, {"username": "trueadm", "commitsCount": 391}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 55}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 27}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "rickhanlonii", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 84}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 387}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 663}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1401}], "statuses": [{"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1777758, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.679, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 186071, "downloadsCount": 31514195.666666668, "downloadsAcceleration": 86065.15178843227, "dependentsCount": 27887}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.42753220669803554}}, "score": {"final": 0.9371719606801716, "detail": {"quality": 0.9000004941806147, "popularity": 0.9325803199449256, "maintenance": 0.9736248584150382}}}}, {"rimraf": {"analyzedAt": "2020-05-14T08:26:13.124Z", "collected": {"metadata": {"name": "rimraf", "scope": "unscoped", "version": "3.0.2", "description": "A deep deletion module for node (like `rm -rf`)", "date": "2020-02-09T06:18:37.504Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/rimraf.git"}, "links": {"npm": "https://www.npmjs.com/package/rimraf", "homepage": "https://github.com/isaacs/rimraf#readme", "repository": "https://github.com/isaacs/rimraf", "bugs": "https://github.com/isaacs/rimraf/issues"}, "license": "ISC", "dependencies": {"glob": "^7.1.3"}, "devDependencies": {"mkdirp": "^0.5.1", "tap": "^12.1.1"}, "releases": [{"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 3}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 6}, {"from": "2018-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Build Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf) [![Dependency Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf) [![devDependency Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)\n\nThe [UNIX command](http://en.wikipedia.org/wiki/Rm_(Unix)) `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, [opts], callback)`\n\nThe first parameter will be interpreted as a globbing pattern for files. If you\nwant to disable globbing you can do so with `opts.disableGlob` (defaults to\n`false`). This might be handy, for instance, if you have filenames that contain\nglobbing wildcard characters.\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* Windows: `EBUSY` and `ENOTEMPTY` - rimraf will back off a maximum of\n  `opts.maxBusyTries` times before giving up, adding 100ms of wait\n  between each attempt.  The default `maxBusyTries` is 3.\n* `ENOENT` - If the file doesn't exist, rimraf will return\n  successfully, since your desired outcome is already the case.\n* `EMFILE` - Since `readdir` requires opening a file descriptor, it's\n  possible to hit `EMFILE` if too many file descriptors are in use.\n  In the sync case, there's nothing to be done for this.  But in the\n  async case, rimraf will gradually back off with timeouts up to\n  `opts.emfileWait` ms, which defaults to 1000.\n\n## options\n\n* unlink, chmod, stat, lstat, rmdir, readdir,\n  unlinkSync, chmodSync, statSync, lstatSync, rmdirSync, readdirSync\n\n    In order to use a custom file system library, you can override\n    specific fs functions on the options object.\n\n    If any of these functions are present on the options object, then\n    the supplied function will be used instead of the default fs\n    method.\n\n    Sync methods are only relevant for `rimraf.sync()`, of course.\n\n    For example:\n\n    ```javascript\n    var myCustomFS = require('some-custom-fs')\n\n    rimraf('some-thing', myCustomFS, callback)\n    ```\n\n* maxBusyTries\n\n    If an `EBUSY`, `ENOTEMPTY`, or `EPERM` error code is encountered\n    on Windows systems, then rimraf will retry with a linear backoff\n    wait of 100ms longer on each try.  The default maxBusyTries is 3.\n\n    Only relevant for async usage.\n\n* emfileWait\n\n    If an `EMFILE` error is encountered, then rimraf will retry\n    repeatedly with a linear backoff of 1ms longer on each try, until\n    the timeout counter hits this max.  The default limit is 1000.\n\n    If you repeatedly encounter `EMFILE` errors, then consider using\n    [graceful-fs](http://npm.im/graceful-fs) in your program.\n\n    Only relevant for async usage.\n\n* glob\n\n    Set to `false` to disable [glob](http://npm.im/glob) pattern\n    matching.\n\n    Set to an object to pass options to the glob module.  The default\n    glob options are `{ nosort: true, silent: true }`.\n\n    Glob version 6 is used in this module.\n\n    Relevant for both sync and async usage.\n\n* disableGlob\n\n    Set to any non-falsey value to disable globbing entirely.\n    (Equivalent to setting `glob: false`.)\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that's not so good.  Use\nthe async API.  It's better.\n\n## CLI\n\nIf installed with `npm install rimraf -g` it can be used as a global\ncommand `rimraf <path> [<path> ...]` which is useful for cross platform support.\n\n## mkdirp\n\nIf you need to create a directory recursively, check out\n[mkdirp](https://github.com/substack/node-mkdirp)."}, "npm": {"downloads": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 6382447}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 33359109}, {"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 141774508}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 392490250}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 675468369}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 1114011353}], "dependentsCount": 9202, "starsCount": 320}, "github": {"starsCount": 3744, "forksCount": 214, "subscribersCount": 40, "issues": {"count": 215, "openCount": 56, "distribution": {"3600": 17, "10800": 21, "32400": 11, "97200": 19, "291600": 18, "874800": 11, "2624400": 7, "7873200": 21, "23619600": 31, "70858800": 27, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 154}, {"username": "PeterDaveHello", "commitsCount": 3}, {"username": "yosefd", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "Tidyzq", "commitsCount": 1}, {"username": "aslushnikov", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "cowboy", "commitsCount": 1}, {"username": "jkozera", "commitsCount": 1}, {"username": "josiasmontag", "commitsCount": 1}, {"username": "marr", "commitsCount": 1}, {"username": "mmalecki", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}, {"username": "quetzalcoatl", "commitsCount": 1}, {"username": "ritch", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "tomByrer", "commitsCount": 1}, {"username": "wvl", "commitsCount": 1}, {"username": "zerok", "commitsCount": 1}], "commits": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 4}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3600, "testsSize": 10271, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/rimraf.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/rimraf.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/rimraf/master.svg", "content": "https://img.shields.io/travis/isaacs/rimraf/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf.svg", "service": "https://david-dm.org/isaacs/rimraf.svg", "shields": "https://img.shields.io/david/isaacs/rimraf.svg", "content": "https://img.shields.io/david/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "service": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "shields": "https://img.shields.io/david/dev/isaacs/rimraf.svg", "content": "https://img.shields.io/david/dev/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "coverage": 0.73}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.9595, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4340, "downloadsCount": 130830083.33333333, "downloadsAcceleration": 593561.7965182648, "dependentsCount": 9202}, "maintenance": {"releasesFrequency": 0.7642979452054794, "commitsFrequency": 0.39410958904109594, "openIssues": 0.8992248062015504, "issuesDistribution": 0}}, "score": {"final": 0.8196670516788406, "detail": {"quality": 0.9765177509669819, "popularity": 0.846736597392599, "maintenance": 0.6581540494323898}}}}, {"babel-preset-es2015": {"analyzedAt": "2020-06-12T08:06:30.193Z", "collected": {"metadata": {"name": "babel-preset-es2015", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all es2015 plugins.", "date": "2017-04-07T15:19:43.605Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-es2015", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.24.1", "babel-plugin-transform-es2015-classes": "^6.24.1", "babel-plugin-transform-es2015-computed-properties": "^6.24.1", "babel-plugin-transform-es2015-destructuring": "^6.22.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.24.1", "babel-plugin-transform-es2015-for-of": "^6.22.0", "babel-plugin-transform-es2015-function-name": "^6.24.1", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.24.1", "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1", "babel-plugin-transform-es2015-modules-systemjs": "^6.24.1", "babel-plugin-transform-es2015-modules-umd": "^6.24.1", "babel-plugin-transform-es2015-object-super": "^6.24.1", "babel-plugin-transform-es2015-parameters": "^6.24.1", "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.24.1", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.22.0", "babel-plugin-transform-es2015-unicode-regex": "^6.24.1", "babel-plugin-transform-regenerator": "^6.24.1"}, "devDependencies": {"babel-helper-transform-fixture-test-runner": "^6.24.1", "babel-helper-plugin-test-runner": "^6.24.1"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 1}], "deprecated": "\ud83d\ude4c  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!", "hasTestScript": true, "readme": "# babel-preset-es2015\n\n> Babel preset for all es2015 plugins.\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-es2015\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"es2015\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets es2015\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"es2015\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable \"spec\" transformations for any plugins in this preset that allow them."}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 169343}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 916623}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4041305}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 12503299}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 24208530}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 51603138}], "dependentsCount": 5333, "starsCount": 84}, "github": {"homepage": "https://babel.dev", "starsCount": 36772, "forksCount": 4311, "subscribersCount": 867, "issues": {"count": 11632, "openCount": 793, "distribution": {"3600": 2464, "10800": 919, "32400": 1067, "97200": 1242, "291600": 1060, "874800": 1009, "2624400": 849, "7873200": 813, "23619600": 847, "70858800": 1091, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 61}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 208}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 416}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 795}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12325222, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.7364999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42133, "downloadsCount": 4167766.3333333335, "downloadsAcceleration": -3388.730136986298, "dependentsCount": 5333}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23995269539214686}}, "score": {"final": 0.6116261393818799, "detail": {"quality": 0.6119022770963006, "popularity": 0.653922435207642, "maintenance": 0.5690931540866144}}}}, {"@babel/core": {"analyzedAt": "2020-06-04T04:35:57.845Z", "collected": {"metadata": {"name": "@babel/core", "scope": "babel", "version": "7.10.2", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2020-05-30T19:25:23.141Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-core"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcore", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.10.1", "@babel/generator": "^7.10.2", "@babel/helper-module-transforms": "^7.10.1", "@babel/helpers": "^7.10.1", "@babel/parser": "^7.10.2", "@babel/template": "^7.10.1", "@babel/traverse": "^7.10.1", "@babel/types": "^7.10.2", "convert-source-map": "^1.7.0", "debug": "^4.1.0", "gensync": "^1.0.0-beta.1", "json5": "^2.1.2", "lodash": "^4.17.13", "resolve": "^1.3.2", "semver": "^5.4.1", "source-map": "^0.5.0"}, "devDependencies": {"@babel/helper-transform-fixture-test-runner": "^7.10.1"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 23}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}], "readme": "# @babel/core\n\n> Babel compiler core.\n\nSee our website [@babel/core](https://babeljs.io/docs/en/next/babel-core.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20core%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/core\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/core --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3321002}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 17420999}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 73933417}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 207817011}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 357205824}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 591179253}], "dependentsCount": 8202, "starsCount": 3}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36700, "forksCount": 4308, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1238, "291600": 1053, "874800": 1008, "2624400": 847, "7873200": 807, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 414, "testsSize": 163727, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.4.1", "stable": "7.3.2", "latest": "7.3.2"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 41977, "downloadsCount": 69272337, "downloadsAcceleration": 302396.4151826484, "dependentsCount": 8202}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2398263939099552}}, "score": {"final": 0.9169577921660841, "detail": {"quality": 0.9480551633850297, "popularity": 0.9174484633642661, "maintenance": 0.8898122313516634}}}}, {"babel-preset-env": {"analyzedAt": "2020-06-10T15:15:14.576Z", "collected": {"metadata": {"name": "babel-preset-env", "scope": "unscoped", "version": "1.7.0", "description": "A Babel preset for each environment.", "date": "2018-05-10T14:31:21.930Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-preset-env.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel-preset-env", "bugs": "https://github.com/babel/babel-preset-env/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-syntax-trailing-function-commas": "^6.22.0", "babel-plugin-transform-async-to-generator": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.23.0", "babel-plugin-transform-es2015-classes": "^6.23.0", "babel-plugin-transform-es2015-computed-properties": "^6.22.0", "babel-plugin-transform-es2015-destructuring": "^6.23.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.22.0", "babel-plugin-transform-es2015-for-of": "^6.23.0", "babel-plugin-transform-es2015-function-name": "^6.22.0", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.22.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0", "babel-plugin-transform-es2015-modules-systemjs": "^6.23.0", "babel-plugin-transform-es2015-modules-umd": "^6.23.0", "babel-plugin-transform-es2015-object-super": "^6.22.0", "babel-plugin-transform-es2015-parameters": "^6.23.0", "babel-plugin-transform-es2015-shorthand-properties": "^6.22.0", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.22.0", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.23.0", "babel-plugin-transform-es2015-unicode-regex": "^6.22.0", "babel-plugin-transform-exponentiation-operator": "^6.22.0", "babel-plugin-transform-regenerator": "^6.22.0", "browserslist": "^3.2.6", "invariant": "^2.2.2", "semver": "^5.3.0"}, "devDependencies": {"babel-cli": "^6.23.0", "babel-eslint": "^7.1.1", "babel-helper-fixtures": "^6.22.0", "babel-helper-plugin-test-runner": "^6.22.0", "babel-plugin-istanbul": "^3.1.2", "babel-preset-env": "^1.4.0", "babel-register": "^6.23.0", "chai": "^3.5.0", "codecov": "^1.0.1", "compat-table": "github:kangax/compat-table#957f1ff15972e8fb2892a172f985e9af27bf1c75", "eslint": "^3.17.1", "eslint-config-babel": "^6.0.0", "eslint-plugin-flowtype": "^2.29.1", "fs-extra": "~2.0.0", "lodash": "^4.17.4", "mocha": "^3.2.0", "nyc": "^10.1.2", "electron-to-chromium": "^1.3.11", "rimraf": "^2.6.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# Now that `babel-preset-env` has stabilized, it has been [moved into the main Babel mono-repo](https://github.com/babel/babel/tree/master/packages/babel-preset-env) and this repo has been archived.\n\nThe move makes it much easier to release and develop in sync with the rest of Babel!\n\nThis repo will be made read-only, as all of the issues/labels have been moved over as well. Please report any bugs and open pull requests over on the [main mono-repo](https://github.com/babel/babel).\n\n---\n\n# babel-preset-env [![npm](https://img.shields.io/npm/v/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![travis](https://img.shields.io/travis/babel/babel-preset-env/master.svg)](https://travis-ci.org/babel/babel-preset-env) [![npm-downloads](https://img.shields.io/npm/dm/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![codecov](https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200)](https://codecov.io/github/babel/babel-preset-env)\n\n> A Babel preset that compiles [ES2015+](https://github.com/tc39/proposals/blob/master/finished-proposals.md) down to ES5 by automatically determining the Babel plugins and polyfills you need based on your targeted browser or runtime environments.\n\n```sh\nnpm install babel-preset-env --save-dev\n```\n\nWithout any configuration options, babel-preset-env behaves exactly the same as babel-preset-latest (or babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 together).\n\n> However, we don't recommend using `preset-env` this way because it doesn't take advantage of it's greater capabilities of targeting specific browsers.\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\nYou can also configure it to only include the polyfills and transforms needed for the browsers you support. Compiling only what's needed can make your bundles smaller and your life easier.\n\nThis example only includes the polyfills and code transforms needed for coverage of users > 0.25%, ignoring Internet Explorer 11 and Opera Mini.. We use [browserslist](https://github.com/ai/browserslist) to parse this information, so you can use [any valid query format supported by browserslist](https://github.com/ai/browserslist#queries).\n\n```js\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        // The % refers to the global coverage of users from browserslist\n        \"browsers\": [ \">0.25%\", \"not ie 11\", \"not op_mini all\"]\n      }\n    }]\n  ]\n}\n```\n\n> You can also target individual versions of browsers instead of using a query with `\"targets\": { \"chrome\": \"52\" }`.\n\nSimilarly, if you're targeting Node.js instead of the browser, you can configure babel-preset-env to only include the polyfills and transforms necessary for a particular version:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"6.10\"\n      }\n    }]\n  ]\n}\n```\n\nFor convenience, you can use `\"node\": \"current\"` to only include the necessary polyfills and transforms for the Node.js version that you use to run Babel:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\nCheck out the many options (especially `useBuiltIns` to polyfill less)!\n\n- [How it Works](#how-it-works)\n- [Install](#install)\n- [Usage](#usage)\n- [Options](#options)\n- [Examples](#examples)\n- [Caveats](#caveats)\n- [Other Cool Projects](#other-cool-projects)\n\n## How it Works\n\n### Determine environment support for ECMAScript features\n\nUse external data such as [`compat-table`](https://github.com/kangax/compat-table) to determine browser support. (We should create PRs there when necessary)\n\n![](https://cloud.githubusercontent.com/assets/588473/19214029/58deebce-8d48-11e6-9004-ee3fbcb75d8b.png)\n\nWe can periodically run [build-data.js](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which generates [plugins.json](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json).\n\nRef: [#7](https://github.com/babel/babel-preset-env/issues/7)\n\n### Maintain a mapping between JavaScript features and Babel plugins\n\n> Currently located at [plugin-features.js](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js).\n\nThis should be straightforward to do in most cases. There might be cases where plugins should be split up more or certain plugins aren't standalone enough (or impossible to do).\n\n### Support all plugins in Babel that are considered `latest`\n\n> Default behavior without options is the same as `babel-preset-latest`.\n\nIt won't include `stage-x` plugins. env will support all plugins in what we consider the latest version of JavaScript (by matching what we do in [`babel-preset-latest`](http://babeljs.io/docs/plugins/preset-latest/)).\n\nRef: [#14](https://github.com/babel/babel-preset-env/issues/14)\n\n### Determine the lowest common denominator of plugins to be included in the preset\n\nIf you are targeting IE 8 and Chrome 55 it will include all plugins required by IE 8 since you would need to support both still.\n\n### Support a target option `\"node\": \"current\"` to compile for the currently running node version.\n\nFor example, if you are building on Node 6, arrow functions won't be converted, but they will if you build on Node 0.12.\n\n### Support a `browsers` option like autoprefixer\n\nUse [browserslist](https://github.com/ai/browserslist) to declare supported environments by performing queries like `> 1%, last 2 versions`.\n\nRef: [#19](https://github.com/babel/babel-preset-env/pull/19)\n\n## Install\n\nWith [npm](https://www.npmjs.com):\n\n```sh\nnpm install --save-dev babel-preset-env\n```\n\nOr [yarn](https://yarnpkg.com):\n\n```sh\nyarn add babel-preset-env --dev\n```\n\n## Usage\n\nThe default behavior without options runs all transforms (behaves the same as [babel-preset-latest](https://babeljs.io/docs/plugins/preset-latest/)).\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\n## Options\n\nFor more information on setting options for a preset, refer to the [plugin/preset options](http://babeljs.io/docs/plugins/#plugin-preset-options) documentation.\n\n### `targets`\n\n`{ [string]: number | string }`, defaults to `{}`.\n\nTakes an object of environment versions to support.\n\nEach target environment takes a number or a string (we recommend using a string when specifying minor versions like `node: \"6.10\"`).\n\nExample environments: `chrome`, `opera`, `edge`, `firefox`, `safari`, `ie`, `ios`, `android`, `node`, `electron`.\n\nThe [data](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) for this is generated by running the [build-data script](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which pulls in data from [compat-table](https://kangax.github.io/compat-table).\n\n### `targets.node`\n\n`number | string | \"current\" | true`\n\nIf you want to compile against the current node version, you can specify `\"node\": true` or `\"node\": \"current\"`, which would be the same as `\"node\": process.versions.node`.\n\n### `targets.browsers`\n\n`Array<string> | string`\n\nA query to select browsers (ex: last 2 versions, > 5%) using [browserslist](https://github.com/ai/browserslist).\n\nNote, browsers' results are overridden by explicit items from `targets`.\n\n### `targets.uglify`\n\n`true`\n\nWhen using `uglify-js` to minify your code, you may run into syntax errors when targeting later browsers since `uglify-js` does not support any ES2015+ syntax.\n\nTo prevent these errors - set the `uglify` option to `true`, which enables all transformation plugins and as a result, your code is fully compiled to ES5. However, the `useBuiltIns` option will still work as before and only include the polyfills that your target(s) need.\n\n> Uglify has support for ES2015 syntax via [uglify-es](https://github.com/mishoo/UglifyJS2/tree/harmony). If you are using syntax unsupported by `uglify-es`, we recommend using [babel-minify](https://github.com/babel/minify).\n\n> Note: This option is deprecated in 2.x and replaced with a [`forceAllTransforms` option](https://github.com/babel/babel-preset-env/pull/264).\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable more spec compliant, but potentially slower, transformations for any plugins in this preset that support them.\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `debug`\n\n`boolean`, defaults to `false`.\n\nOutputs the targets/plugins used and the version specified in [plugin data version](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) to `console.log`.\n\n### `include`\n\n`Array<string>`, defaults to `[]`.\n\n> NOTE: `whitelist` is deprecated and will be removed in the next major in favor of this.\n\nAn array of plugins to always include.\n\nValid options include any:\n\n- [Babel plugins](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js) - both with (`babel-plugin-transform-es2015-spread`) and without prefix (`transform-es2015-spread`) are supported.\n\n- [Built-ins](https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js), such as `map`, `set`, or `object.assign`.\n\nThis option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn't work.\n\nFor example, Node 4 supports native classes but not spread. If `super` is used with a spread argument, then the `transform-es2015-classes` transform needs to be `include`d, as it is not possible to transpile a spread with `super` otherwise.\n\n> NOTE: The `include` and `exclude` options _only_ work with the [plugins included with this preset](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js); so, for example, including `transform-do-expressions` or excluding `transform-function-bind` will throw errors. To use a plugin _not_ included with this preset, add them to your [config](https://babeljs.io/docs/usage/babelrc/) directly.\n\n### `exclude`\n\n`Array<string>`, defaults to `[]`.\n\nAn array of plugins to always exclude/remove.\n\nThe possible options are the same as the `include` option.\n\nThis option is useful for \"blacklisting\" a transform like `transform-regenerator` if you don't use generators and don't want to include `regeneratorRuntime` (when using `useBuiltIns`) or for using another plugin like [fast-async](https://github.com/MatAtBread/fast-async) instead of [Babel's async-to-gen](http://babeljs.io/docs/plugins/transform-async-generator-functions/).\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nA way to apply `babel-preset-env` for polyfills (via \"babel-polyfill\").\n\n> NOTE: This does not currently polyfill experimental/stage-x built-ins like the regular \"babel-polyfill\" does.\n> This will only work with npm >= 3 (which should be used with Babel 6 anyway)\n\n```\nnpm install babel-polyfill --save\n```\n\nThis option enables a new plugin that replaces the statement `import \"babel-polyfill\"` or `require(\"babel-polyfill\")` with individual requires for `babel-polyfill` based on environment.\n\n> NOTE: Only use `require(\"babel-polyfill\");` once in your whole app.\n> Multiple imports or requires of `babel-polyfill` will throw an error since it can cause global collisions and other issues that are hard to trace.\n> We recommend creating a single entry file that only contains the `require` statement.\n\n**In**\n\n```js\nimport \"babel-polyfill\";\n```\n\n**Out (different based on environment)**\n\n```js\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es7.string.pad-end\";\nimport \"core-js/modules/web.timers\";\nimport \"core-js/modules/web.immediate\";\nimport \"core-js/modules/web.dom.iterable\";\n```\n\nThis will also work for `core-js` directly (`import \"core-js\";`)\n\n```\nnpm install core-js --save\n```\n\n---\n\n## Examples\n\n### Export with various targets\n\n```js\nexport class A {}\n```\n\n#### Target only Chrome 52\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n#### Target Chrome 52 with webpack 2/rollup and loose mode\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      },\n      \"modules\": false,\n      \"loose\": true\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport class A {}\n```\n\n#### Target specific browsers via browserslist\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52,\n        \"browsers\": [\"last 2 versions\", \"safari 7\"]\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport var A = function A() {\n  _classCallCheck(this, A);\n};\n```\n\n#### Target latest node via `node: true` or `node: \"current\"`\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n### Show debug output\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [ \"env\", {\n      \"targets\": {\n        \"safari\": 10\n      },\n      \"modules\": false,\n      \"useBuiltIns\": true,\n      \"debug\": true\n    }]\n  ]\n}\n```\n\n**stdout**\n\n```sh\nUsing targets:\n{\n  \"safari\": 10\n}\n\nModules transform: false\n\nUsing plugins:\n  transform-exponentiation-operator {}\n  transform-async-to-generator {}\n\nUsing polyfills:\n  es7.object.values {}\n  es7.object.entries {}\n  es7.object.get-own-property-descriptors {}\n  web.timers {}\n  web.immediate {}\n  web.dom.iterable {}\n```\n\n### Include and exclude specific plugins/built-ins\n\n> always include arrow functions, explicitly exclude generators\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 versions\", \"safari >= 7\"]\n      },\n      \"include\": [\"transform-es2015-arrow-functions\", \"es6.map\"],\n      \"exclude\": [\"transform-regenerator\", \"es6.set\"]\n    }]\n  ]\n}\n```\n\n## Caveats\n\nIf you get a `SyntaxError: Unexpected token ...` error when using the [object-rest-spread](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread) transform then make sure the plugin has been updated to, at least, `v6.19.0`.\n\n## Other Cool Projects\n\n- [babel-preset-modern-browsers](https://github.com/christophehurpeau/babel-preset-modern-browsers)\n- ?"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 316148}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1672594}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7148841}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 22040524}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 42275200}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 90852689}], "dependentsCount": 3547, "starsCount": 71}, "github": {"homepage": "https://github.com/babel/babel/tree/master/packages/babel-preset-env", "starsCount": 3570, "forksCount": 192, "subscribersCount": 65, "issues": {"count": 458, "openCount": 1, "distribution": {"3600": 111, "10800": 36, "32400": 42, "97200": 54, "291600": 43, "874800": 41, "2624400": 38, "7873200": 36, "23619600": 44, "70858800": 12, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 121}, {"username": "existentialism", "commitsCount": 77}, {"username": "yavorsky", "commitsCount": 31}, {"username": "baer", "commitsCount": 10}, {"username": "alxpy", "commitsCount": 3}, {"username": "chicoxyzzy", "commitsCount": 2}, {"username": "Gerhut", "commitsCount": 1}, {"username": "Kilian", "commitsCount": 1}, {"username": "aaronang", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "bakkot", "commitsCount": 1}, {"username": "basicdays", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "corysimmons", "commitsCount": 1}, {"username": "darahak", "commitsCount": 1}, {"username": "devdevil666", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "imrobinized", "commitsCount": 1}, {"username": "josephrexme", "commitsCount": 1}, {"username": "jthegedus", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "leggiero", "commitsCount": 1}, {"username": "matthiaskern", "commitsCount": 1}, {"username": "mikegreiling", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "rmariuzzo", "commitsCount": 1}, {"username": "rohmanhm", "commitsCount": 1}, {"username": "roman-yakobnyuk", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suchipi", "commitsCount": 1}, {"username": "valscion", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "xtuc", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 14306, "testsSize": 77503, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-preset-env.svg", "shields": "https://img.shields.io/npm/v/babel-preset-env.svg", "content": "https://img.shields.io/npm/v/babel-preset-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "service": "https://api.travis-ci.org/babel/babel-preset-env.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/travis/babel/babel-preset-env/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-preset-env.svg", "shields": "https://img.shields.io/npm/dm/babel-preset-env.svg", "content": "https://img.shields.io/npm/dm/babel-preset-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel-preset-env/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "outdatedDependencies": {"semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "browserslist": {"required": "^3.2.6", "stable": "4.12.0", "latest": "4.12.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8666666666666667, "branding": 1}, "popularity": {"communityInterest": 3934, "downloadsCount": 7346841.333333333, "downloadsAcceleration": -6166.507800608822, "dependentsCount": 3547}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.831366836323083, "detail": {"quality": 0.9433477143178834, "popularity": 0.5668585971212147, "maintenance": 0.9998914658151222}}}}, {"prettier": {"analyzedAt": "2020-06-07T08:21:12.524Z", "collected": {"metadata": {"name": "prettier", "scope": "unscoped", "version": "2.0.5", "description": "Prettier is an opinionated code formatter", "date": "2020-04-21T17:05:57.825Z", "author": {"name": "James Long"}, "publisher": {"username": "thorn0", "email": "georgii.dolzhykov@gmail.com"}, "maintainers": [{"username": "azz", "email": "derflatulator@gmail.com"}, {"username": "duailibe", "email": "lucasds@gmail.com"}, {"username": "ikatyang", "email": "ikatyang@gmail.com"}, {"username": "jlongster", "email": "longster@gmail.com"}, {"username": "suchipi", "email": "me@suchipi.com"}, {"username": "vjeux", "email": "vjeuxx@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/prettier", "homepage": "https://prettier.io", "repository": "https://github.com/prettier/prettier", "bugs": "https://github.com/prettier/prettier/issues"}, "license": "MIT", "dependencies": {"@angular/compiler": "9.1.9", "@babel/code-frame": "7.10.1", "@babel/parser": "7.10.2", "@glimmer/syntax": "0.53.0", "@iarna/toml": "2.2.5", "@typescript-eslint/typescript-estree": "3.1.0", "angular-estree-parser": "2.0.3", "angular-html-parser": "1.7.0", "camelcase": "6.0.0", "chalk": "4.0.0", "ci-info": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "cjk-regex": "2.0.0", "cosmiconfig": "6.0.0", "dashify": "2.0.0", "diff": "4.0.2", "editorconfig": "0.15.3", "editorconfig-to-prettier": "0.1.1", "escape-string-regexp": "4.0.0", "esutils": "2.0.3", "fast-glob": "3.2.2", "find-parent-dir": "0.3.0", "find-project-root": "1.1.1", "flow-parser": "0.126.1", "get-stream": "5.1.0", "globby": "11.0.1", "graphql": "15.0.0", "html-element-attributes": "2.2.1", "html-styles": "1.0.0", "html-tag-names": "1.1.5", "ignore": "4.0.6", "jest-docblock": "26.0.0", "json-stable-stringify": "1.0.1", "leven": "3.1.0", "lines-and-columns": "1.1.6", "linguist-languages": "7.9.0", "lodash": "4.17.15", "mem": "6.1.0", "minimatch": "3.0.4", "minimist": "1.2.5", "n-readlines": "1.0.0", "outdent": "0.7.1", "parse-srcset": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "please-upgrade-node": "3.2.0", "postcss-less": "3.1.4", "postcss-media-query-parser": "0.2.3", "postcss-scss": "2.1.1", "postcss-selector-parser": "2.2.3", "postcss-values-parser": "2.0.1", "regexp-util": "1.2.2", "remark-math": "1.0.6", "remark-parse": "5.0.0", "resolve": "1.17.0", "semver": "7.3.2", "string-width": "4.2.0", "tslib": "1.13.0", "typescript": "3.9.5", "unicode-regex": "3.0.0", "unified": "9.0.0", "vnopts": "1.0.2", "yaml-unist-parser": "1.2.1"}, "devDependencies": {"@babel/core": "7.10.2", "@babel/preset-env": "7.10.2", "@rollup/plugin-alias": "3.1.0", "@rollup/plugin-babel": "5.0.2", "@rollup/plugin-commonjs": "12.0.0", "@rollup/plugin-json": "4.0.3", "@rollup/plugin-node-resolve": "8.0.0", "@rollup/plugin-replace": "2.3.2", "babel-loader": "8.1.0", "benchmark": "2.1.4", "builtin-modules": "3.1.0", "codecov": "3.7.0", "cross-env": "7.0.2", "cspell": "4.0.63", "eslint": "7.1.0", "eslint-config-prettier": "6.11.0", "eslint-formatter-friendly": "7.0.0", "eslint-plugin-import": "2.20.2", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-react": "7.20.0", "eslint-plugin-unicorn": "20.1.0", "execa": "4.0.2", "jest": "26.0.1", "jest-snapshot-serializer-ansi": "1.0.0", "jest-snapshot-serializer-raw": "1.1.0", "jest-watch-typeahead": "0.6.0", "prettier": "2.0.5", "rimraf": "3.0.2", "rollup": "2.13.1", "rollup-plugin-node-globals": "1.4.0", "rollup-plugin-terser": "6.1.0", "shelljs": "0.8.4", "snapshot-diff": "0.8.0", "strip-ansi": "6.0.0", "synchronous-promise": "2.0.13", "tempy": "0.5.0", "terser-webpack-plugin": "3.0.3", "webpack": "4.43.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 30}], "hasSelectiveFiles": true, "readme": "![Prettier Banner](https://raw.githubusercontent.com/prettier/prettier-logo/master/images/prettier-banner-light.png)\n\n<h2 align=\"center\">Opinionated Code Formatter</h2>\n\n<p align=\"center\">\n  <em>\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  </em>\n  <br />\n  <em>\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  </em>\n  <br />\n  <em>\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  </em>\n  <br />\n  <em>\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  </em>\n  <br />\n  <em>\n    <a href=\"https://prettier.io/docs/en/plugins.html\">\n      Your favorite language?\n    </a>\n  </em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3AProd+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Prod?label=Prod&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ADev+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Dev?label=Dev&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ALint+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Lint?label=Lint&style=flat-square\"></a>\n  <a href=\"https://codecov.io/gh/prettier/prettier\">\n    <img alt=\"Codecov Coverage Status\" src=\"https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/acdlite/status/974390255393505280\">\n    <img alt=\"Blazing Fast\" src=\"https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square\"></a>\n  <br/>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"npm version\" src=\"https://img.shields.io/npm/v/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"weekly downloads from npm\" src=\"https://img.shields.io/npm/dw/prettier.svg?style=flat-square\"></a>\n  <a href=\"#badge\">\n    <img alt=\"code style: prettier\" src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\"></a>\n  <a href=\"https://gitter.im/jlongster/prettier\">\n    <img alt=\"Chat on Gitter\" src=\"https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/PrettierCode\">\n    <img alt=\"Follow Prettier on Twitter\" src=\"https://img.shields.io/twitter/follow/prettiercode.svg?label=follow+prettier&style=flat-square\"></a>\n</p>\n\n## Intro\n\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\n\n### Input\n\n<!-- prettier-ignore -->\n```js\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\n```\n\n### Output\n\n```js\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\n```\n\nPrettier can be run [in your editor](http://prettier.io/docs/en/editors.html) on-save, in a [pre-commit hook](https://prettier.io/docs/en/precommit.html), or in [CI environments](https://prettier.io/docs/en/cli.html#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\n---\n\n**[Documentation](https://prettier.io/docs/en/)**\n\n<!-- prettier-ignore -->\n[Install](https://prettier.io/docs/en/install.html) \u00b7\n[Options](https://prettier.io/docs/en/options.html) \u00b7\n[CLI](https://prettier.io/docs/en/cli.html) \u00b7\n[API](https://prettier.io/docs/en/api.html)\n\n**[Playground](https://prettier.io/playground/)**\n\n---\n\n## Badge\n\nShow the world you're using _Prettier_ \u2192 [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\n```md\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 450346}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8908846}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 37274581}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 108918013}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 187419957}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 325686336}], "dependentsCount": 4178, "starsCount": 62}, "github": {"homepage": "https://prettier.io", "starsCount": 36715, "forksCount": 2359, "subscribersCount": 415, "issues": {"count": 8413, "openCount": 700, "distribution": {"3600": 1643, "10800": 928, "32400": 902, "97200": 1153, "291600": 910, "874800": 711, "2624400": 633, "7873200": 485, "23619600": 380, "70858800": 498, "212576400": 170}, "isDisabled": false}, "contributors": [{"username": "vjeux", "commitsCount": 570}, {"username": "ikatyang", "commitsCount": 430}, {"username": "fisker", "commitsCount": 352}, {"username": "duailibe", "commitsCount": 284}, {"username": "azz", "commitsCount": 241}, {"username": "thorn0", "commitsCount": 150}, {"username": "lydell", "commitsCount": 146}, {"username": "jlongster", "commitsCount": 128}, {"username": "evilebottnawi", "commitsCount": 116}, {"username": "josephfrazier", "commitsCount": 92}, {"username": "existentialism", "commitsCount": 80}, {"username": "sosukesuzuki", "commitsCount": 63}, {"username": "j-f1", "commitsCount": 46}, {"username": "lipis", "commitsCount": 46}, {"username": "suchipi", "commitsCount": 35}, {"username": "yamafaktory", "commitsCount": 34}, {"username": "despairblue", "commitsCount": 27}, {"username": "bakkot", "commitsCount": 24}, {"username": "JamesHenry", "commitsCount": 22}, {"username": "rattrayalex", "commitsCount": 22}, {"username": "karl", "commitsCount": 19}, {"username": "dcyriller", "commitsCount": 17}, {"username": "kachkaev", "commitsCount": 17}, {"username": "SimenB", "commitsCount": 14}, {"username": "mitermayer", "commitsCount": 12}, {"username": "bnjmnt4n", "commitsCount": 11}, {"username": "stubailo", "commitsCount": 9}, {"username": "okonet", "commitsCount": 8}, {"username": "rogeliog", "commitsCount": 8}, {"username": "JounQin", "commitsCount": 7}, {"username": "Shinigami92", "commitsCount": 7}, {"username": "ad1992", "commitsCount": 7}, {"username": "hzoo", "commitsCount": 7}, {"username": "sasurau4", "commitsCount": 7}, {"username": "knowbody", "commitsCount": 6}, {"username": "tchak", "commitsCount": 6}, {"username": "thymikee", "commitsCount": 6}, {"username": "Cryrivers", "commitsCount": 5}, {"username": "GavinJoyce", "commitsCount": 5}, {"username": "asottile", "commitsCount": 5}, {"username": "dependabot[bot]", "commitsCount": 5}, {"username": "jackyho112", "commitsCount": 5}, {"username": "karlhorky", "commitsCount": 5}, {"username": "umidbekkarimov", "commitsCount": 5}, {"username": "yangsu", "commitsCount": 5}, {"username": "czosel", "commitsCount": 4}, {"username": "jridgewell", "commitsCount": 4}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "prigara", "commitsCount": 4}, {"username": "rcoedo", "commitsCount": 4}, {"username": "sompylasar", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "voithos", "commitsCount": 4}, {"username": "warrenseine", "commitsCount": 4}, {"username": "BPScott", "commitsCount": 3}, {"username": "CiGit", "commitsCount": 3}, {"username": "Haroenv", "commitsCount": 3}, {"username": "amasad", "commitsCount": 3}, {"username": "bd82", "commitsCount": 3}, {"username": "brainkim", "commitsCount": 3}, {"username": "cola119", "commitsCount": 3}, {"username": "coliff", "commitsCount": 3}, {"username": "danez", "commitsCount": 3}, {"username": "danharper", "commitsCount": 3}, {"username": "darahak", "commitsCount": 3}, {"username": "ericsakmar", "commitsCount": 3}, {"username": "johann-sonntagbauer", "commitsCount": 3}, {"username": "mattleff", "commitsCount": 3}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "ntotten", "commitsCount": 3}, {"username": "onurtemizkan", "commitsCount": 3}, {"username": "rhengles", "commitsCount": 3}, {"username": "shisama", "commitsCount": 3}, {"username": "tgriesser", "commitsCount": 3}, {"username": "adek05", "commitsCount": 2}, {"username": "aquibm", "commitsCount": 2}, {"username": "beausmith", "commitsCount": 2}, {"username": "chadian", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "dangmai", "commitsCount": 2}, {"username": "fvictorio", "commitsCount": 2}, {"username": "g-harel", "commitsCount": 2}, {"username": "gkz", "commitsCount": 2}, {"username": "gnapse", "commitsCount": 2}, {"username": "jablko", "commitsCount": 2}, {"username": "jaideng123", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "jbrown215", "commitsCount": 2}, {"username": "jsnajdr", "commitsCount": 2}, {"username": "kaicataldo", "commitsCount": 2}, {"username": "kddeisz", "commitsCount": 2}, {"username": "mahirshah", "commitsCount": 2}, {"username": "matthew-gerstman", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "robert-j-webb", "commitsCount": 2}, {"username": "selvazhagan", "commitsCount": 2}, {"username": "sh7dm", "commitsCount": 2}, {"username": "wuweiweiwu", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 142}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 448}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 791}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1174}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 4159, "testsSize": 8528172, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square", "service": "https://codecov.io/github/prettier/prettier/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/prettier/prettier.svg", "content": "https://img.shields.io/codecov/c/github/prettier/prettier.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/prettier.svg", "content": "https://img.shields.io/npm/v/prettier.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/dw/prettier.svg", "content": "https://img.shields.io/npm/dw/prettier.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square", "service": "https://badges.gitter.im/jlongster/prettier.svg", "shields": "https://img.shields.io/gitter/room/jlongster/prettier.svg", "content": "https://img.shields.io/gitter/room/jlongster/prettier.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"parse-srcset": {"required": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "stable": "1.0.2", "latest": "1.0.2"}, "ci-info": {"required": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "stable": "2.0.0", "latest": "2.0.0"}, "tslib": {"required": "1.13.0", "stable": "2.0.0", "latest": "2.0.0"}, "remark-math": {"required": "1.0.6", "stable": "2.0.1", "latest": "2.0.1"}, "remark-parse": {"required": "5.0.0", "stable": "8.0.2", "latest": "8.0.2"}, "postcss-selector-parser": {"required": "2.2.3", "stable": "6.0.2", "latest": "3.1.2"}, "postcss-values-parser": {"required": "2.0.1", "stable": "3.2.1", "latest": "3.2.1"}, "ignore": {"required": "4.0.6", "stable": "5.1.8", "latest": "5.1.8"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6955, "health": 0.7333333333333334, "branding": 1}, "popularity": {"communityInterest": 39649, "downloadsCount": 36306004.333333336, "downloadsAcceleration": 124781.33841324205, "dependentsCount": 4178}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.46399702138277754}}, "score": {"final": 0.9276127920868151, "detail": {"quality": 0.9472052853044814, "popularity": 0.857810255108068, "maintenance": 0.9806217634504195}}}}, {"css-loader": {"analyzedAt": "2020-06-13T14:27:25.197Z", "collected": {"metadata": {"name": "css-loader", "scope": "unscoped", "version": "3.6.0", "description": "css loader module for webpack", "keywords": ["webpack", "css", "loader", "url", "import"], "date": "2020-06-13T14:27:06.915Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/css-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/css-loader", "homepage": "https://github.com/webpack-contrib/css-loader", "repository": "https://github.com/webpack-contrib/css-loader", "bugs": "https://github.com/webpack-contrib/css-loader/issues"}, "license": "MIT", "dependencies": {"camelcase": "^5.3.1", "cssesc": "^3.0.0", "icss-utils": "^4.1.1", "loader-utils": "^1.2.3", "normalize-path": "^3.0.0", "postcss": "^7.0.32", "postcss-modules-extract-imports": "^2.0.0", "postcss-modules-local-by-default": "^3.0.2", "postcss-modules-scope": "^2.2.0", "postcss-modules-values": "^3.0.0", "postcss-value-parser": "^4.1.0", "schema-utils": "^2.7.0", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/preset-env": "^7.10.2", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.5.1", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.1", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.21.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.5.4", "lint-staged": "^10.2.10", "memfs": "^3.2.0", "npm-run-all": "^4.1.5", "postcss-loader": "^3.0.0", "postcss-preset-env": "^6.7.0", "prettier": "^2.0.5", "sass": "^1.26.8", "sass-loader": "^8.0.2", "standard-version": "^8.0.0", "strip-ansi": "^6.0.0", "url-loader": "^4.1.0", "webpack": "^4.43.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 7}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img width=\"180\" height=\"180\" vspace=\"20\"\n    src=\"https://cdn.worldvectorlogo.com/logos/css-3.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# css-loader\n\nThe `css-loader` interprets `@import` and `url()` like `import/require()` and will resolve them.\n\n## Getting Started\n\nTo begin, you'll need to install `css-loader`:\n\n```console\nnpm install --save-dev css-loader\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**file.js**\n\n```js\nimport css from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader) and the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see [below](https://github.com/webpack-contrib/css-loader#assets)).\n\nAnd run `webpack` via your preferred method.\n\n### `toString`\n\nYou can also use the css-loader results directly as a string, such as in Angular's component style.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['to-string-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nor\n\n```js\nconst css = require('./test.css').toString();\n\nconsole.log(css); // {String}\n```\n\nIf there are SourceMaps, they will also be included in the result string.\n\nIf, for one reason or another, you need to extract CSS as a\nplain string resource (i.e. not wrapped in a JS module) you\nmight want to check out the [extract-loader](https://github.com/peerigon/extract-loader).\nIt's useful when you, for instance, need to post process the CSS as a string.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'handlebars-loader', // handlebars loader expects raw resource string\n          'extract-loader',\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|                    Name                     |            Type             | Default  | Description                                                            |\n| :-----------------------------------------: | :-------------------------: | :------: | :--------------------------------------------------------------------- |\n|              **[`url`](#url)**              |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `url`/`image-set` functions handling                  |\n|           **[`import`](#import)**           |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `@import` at-rules handling                           |\n|          **[`modules`](#modules)**          | `{Boolean\\|String\\|Object}` | `false`  | Enables/Disables CSS Modules and their configuration                   |\n|        **[`sourceMap`](#sourcemap)**        |         `{Boolean}`         | `false`  | Enables/Disables generation of source maps                             |\n|    **[`importLoaders`](#importloaders)**    |         `{Number}`          |   `0`    | Enables/Disables or setups number of loaders applied before CSS loader |\n| **[`localsConvention`](#localsconvention)** |         `{String}`          | `'asIs'` | Style of exported classnames                                           |\n|       **[`onlyLocals`](#onlylocals)**       |         `{Boolean}`         | `false`  | Export only locals                                                     |\n|         **[`esModule`](#esmodule)**         |         `{Boolean}`         | `false`  | Use ES modules syntax                                                  |\n\n### `url`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `url`/`image-set` functions handling.\nControl `url()` resolving. Absolute URLs and root-relative URLs are not resolving.\n\nExamples resolutions:\n\n```\nurl(image.png) => require('./image.png')\nurl('image.png') => require('./image.png')\nurl(./image.png) => require('./image.png')\nurl('./image.png') => require('./image.png')\nurl('http://dontwritehorriblecode.com/2112.png') => require('http://dontwritehorriblecode.com/2112.png')\nimage-set(url('image2x.png') 1x, url('image1x.png') 2x) => require('./image1x.png') and require('./image2x.png')\n```\n\nTo import assets from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\nurl(~module/image.png) => require('module/image.png')\nurl('~module/image.png') => require('module/image.png')\nurl(~aliasDirectory/image.png) => require('otherDirectory/image.png')\n```\n\n#### `Boolean`\n\nEnable/disable `url()` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `url()`. All filtered `url()` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: (url, resourcePath) => {\n            // resourcePath - path to css file\n\n            // Don't handle `img.png` urls\n            if (url.includes('img.png')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `import`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `@import` at-rules handling.\nControl `@import` resolving. Absolute urls in `@import` will be moved in runtime code.\n\nExamples resolutions:\n\n```\n@import 'style.css' => require('./style.css')\n@import url(style.css) => require('./style.css')\n@import url('style.css') => require('./style.css')\n@import './style.css' => require('./style.css')\n@import url(./style.css) => require('./style.css')\n@import url('./style.css') => require('./style.css')\n@import url('http://dontwritehorriblecode.com/style.css') => @import url('http://dontwritehorriblecode.com/style.css') in runtime\n```\n\nTo import styles from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\n@import url(~module/style.css) => require('module/style.css')\n@import url('~module/style.css') => require('module/style.css')\n@import url(~aliasDirectory/style.css) => require('otherDirectory/style.css')\n```\n\n#### `Boolean`\n\nEnable/disable `@import` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `@import`. All filtered `@import` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: (parsedImport, resourcePath) => {\n            // parsedImport.url - url of `@import`\n            // parsedImport.media - media query of `@import`\n            // resourcePath - path to css file\n\n            // Don't handle `style.css` import\n            if (parsedImport.url.includes('style.css')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `modules`\n\nType: `Boolean|String|Object`\nDefault: `false`\n\nEnables/Disables CSS Modules and their configuration.\n\nThe `modules` option enables/disables the **[CSS Modules](https://github.com/css-modules/css-modules)** specification and setup basic behaviour.\n\nUsing `false` value increase performance because we avoid parsing **CSS Modules** features, it will be useful for developers who use vanilla css or use other technologies.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Features`\n\n##### `Scope`\n\nUsing `local` value requires you to specify `:global` classes.\nUsing `global` value requires you to specify `:local` classes.\nUsing `pure` value requires selectors must contain at least one local class or id.\n\nYou can find more information [here](https://github.com/css-modules/css-modules).\n\nStyles can be locally scoped to avoid globally scoping styles.\n\nThe syntax `:local(.className)` can be used to declare `className` in the local scope. The local identifiers are exported by the module.\n\nWith `:local` (without brackets) local mode can be switched on for this selector.\nThe `:global(.className)` notation can be used to declare an explicit global selector.\nWith `:global` (without brackets) global mode can be switched on for this selector.\n\nThe loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.\n\n```css\n:local(.className) {\n  background: red;\n}\n:local .className {\n  color: green;\n}\n:local(.className .subClass) {\n  color: green;\n}\n:local .className .subClass :global(.global-class-name) {\n  color: blue;\n}\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n}\n._23_aKvs-b8bW2Vg3fwHozO {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 .global-class-name {\n  color: blue;\n}\n```\n\n> \u2139\ufe0f Identifiers are exported\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1',\n};\n```\n\nCamelCase is recommended for local selectors. They are easier to use within the imported JS module.\n\nYou can use `:local(#someId)`, but this is not recommended. Use classes instead of ids.\n\n##### `Composing`\n\nWhen declaring a local classname you can compose a local class from another local classname.\n\n```css\n:local(.className) {\n  background: red;\n  color: yellow;\n}\n\n:local(.subClass) {\n  composes: className;\n  background: blue;\n}\n```\n\nThis doesn't result in any change to the CSS itself but exports multiple classnames.\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1 _23_aKvs-b8bW2Vg3fwHozO',\n};\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n  color: yellow;\n}\n\n._13LGdX8RMStbBE9w-t0gZ1 {\n  background: blue;\n}\n```\n\n##### `Importing`\n\nTo import a local classname from another module.\n\n```css\n:local(.continueButton) {\n  composes: button from 'library/button.css';\n  background: red;\n}\n```\n\n```css\n:local(.nameEdit) {\n  composes: edit highlight from './edit.css';\n  background: red;\n}\n```\n\nTo import from multiple modules use multiple `composes:` rules.\n\n```css\n:local(.className) {\n  composes: edit hightlight from './edit.css';\n  composes: button from 'module/button.css';\n  composes: classFromThisModule;\n  background: red;\n}\n```\n\n##### `Values`\n\nYou can use `@value` to specific values to be reused throughout a document.\n\nWe recommend use prefix `v-` for values, `s-` for selectors and `m-` for media at-rules.\n\n```css\n@value v-primary: #BF4040;\n@value s-black: black-selector;\n@value m-large: (min-width: 960px);\n\n.header {\n  color: v-primary;\n  padding: 0 10px;\n}\n\n.s-black {\n  color: black;\n}\n\n@media m-large {\n  .header {\n    padding: 0 20px;\n  }\n}\n```\n\n#### `Boolean`\n\nEnable **CSS Modules** features.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nEnable **CSS Modules** features and setup `mode`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          // Using `local` value has same effect like using `modules: true`\n          modules: 'global',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Object`\n\nEnable **CSS Modules** features and setup options for them.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'local',\n            exportGlobals: true,\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n            context: path.resolve(__dirname, 'src'),\n            hashPrefix: 'my-custom-hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `auto`\n\nType: `Boolean|RegExp|Function`\nDefault: `'undefined'`\n\nAllows auto enable css modules based on filename.\n\n###### `Boolean`\n\nPossible values:\n\n- `true` - enable css modules for all files for which `/\\.module\\.\\w+$/i.test(filename)` return true\n- `false` - disable css modules\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `RegExp`\n\nEnable css modules for files based on the filename satisfying your regex check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: /\\.custom-module\\.\\w+$/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nEnable css modules for files based on the filename satisfying your filter function check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: (resourcePath) => resourcePath.endsWith('.custom-module.css'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `mode`\n\nType: `String|Function`\nDefault: `'local'`\n\nSetup `mode` option. You can omit the value when you want `local` mode.\n\n###### `String`\n\nPossible values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'global',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nAllows set different values for the `mode` option based on a filename\n\nPossible return values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            // Callback must return \"local\", \"global\", or \"pure\" values\n            mode: (resourcePath) => {\n              if (/pure.css$/i.test(resourcePath)) {\n                return 'pure';\n              }\n\n              if (/global.css$/i.test(resourcePath)) {\n                return 'global';\n              }\n\n              return 'local';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `exportGlobals`\n\nType: `Boolean`\nDefault: `false`\n\nAllow `css-loader` to export names from global class or id, so you can use that as local name.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            exportGlobals: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentName`\n\nType: `String`\nDefault: `'[hash:base64]'`\n\nYou can configure the generated ident with the `localIdentName` query parameter.\nSee [loader-utils's documentation](https://github.com/webpack/loader-utils#interpolatename) for more information on options.\n\nRecommendations:\n\n- use `'[path][name]__[local]'` for development\n- use `'[hash:base64]'` for production\n\nThe `[local]` placeholder contains original class.\n\n**Note:** all reserved (`<>:\"/\\|?*`) and control filesystem characters (excluding characters in the `[local]` placeholder) will be converted to `-`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `context`\n\nType: `String`\nDefault: `undefined`\n\nAllow to redefine basic loader context for local ident name.\nBy default we use `rootContext` of loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            context: path.resolve(__dirname, 'context'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `hashPrefix`\n\nType: `String`\nDefault: `undefined`\n\nAllow to add custom hash to generate more unique classes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            hashPrefix: 'hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `getLocalIdent`\n\nType: `Function`\nDefault: `undefined`\n\nYou can also specify the absolute path to your custom `getLocalIdent` function to generate classname based on a different schema.\nBy default we use built-in function to generate a classname.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            getLocalIdent: (context, localIdentName, localName, options) => {\n              return 'whatever_random_class_name';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentRegExp`\n\nType: `String|RegExp`\nDefault: `undefined`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentRegExp: /page-(.*)\\.css/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: `false`\n\nEnables/Disables generation of source maps.\n\nTo include source maps set the `sourceMap` option.\n\nThey are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          sourceMap: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `importLoaders`\n\nType: `Number`\nDefault: `0`\n\nEnables/Disables or setups number of loaders applied before CSS loader.\n\nThe option `importLoaders` allows you to configure how many loaders before `css-loader` should be applied to `@import`ed resources.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 2,\n              // 0 => no loaders (default);\n              // 1 => postcss-loader;\n              // 2 => postcss-loader, sass-loader\n            },\n          },\n          'postcss-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThis may change in the future when the module system (i. e. webpack) supports loader matching by origin.\n\n### `localsConvention`\n\nType: `String`\nDefault: `'asIs'`\n\nStyle of exported classnames.\n\nBy default, the exported JSON keys mirror the class names (i.e `asIs` value).\n\n|         Name          |    Type    | Description                                                                                      |\n| :-------------------: | :--------: | :----------------------------------------------------------------------------------------------- |\n|     **`'asIs'`**      | `{String}` | Class names will be exported as is.                                                              |\n|   **`'camelCase'`**   | `{String}` | Class names will be camelized, the original class name will not to be removed from the locals    |\n| **`'camelCaseOnly'`** | `{String}` | Class names will be camelized, the original class name will be removed from the locals           |\n|    **`'dashes'`**     | `{String}` | Only dashes in class names will be camelized                                                     |\n|  **`'dashesOnly'`**   | `{String}` | Dashes in class names will be camelized, the original class name will be removed from the locals |\n\n**file.css**\n\n```css\n.class-name {\n}\n```\n\n**file.js**\n\n```js\nimport { className } from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          localsConvention: 'camelCase',\n        },\n      },\n    ],\n  },\n};\n```\n\n### `onlyLocals`\n\nType: `Boolean`\nDefault: `false`\n\nExport only locals.\n\n**Useful** when you use **css modules** for pre-rendering (for example SSR).\nFor pre-rendering with `mini-css-extract-plugin` you should use this option instead of `style-loader!css-loader` **in the pre-rendering bundle**.\nIt doesn't embed CSS but only exports the identifier mappings.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          onlyLocals: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `css-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Assets\n\nThe following `webpack.config.js` can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as [Data URLs](https://tools.ietf.org/html/rfc2397) and copy larger files to the output directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n### Extract\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\n- This can be achieved by using the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract the CSS when running in production mode.\n\n- As an alternative, if seeking better development performance and css outputs that mimic production. [extract-css-chunks-webpack-plugin](https://github.com/faceyspacey/extract-css-chunks-webpack-plugin) offers a hot module reload friendly, extended version of mini-css-extract-plugin. HMR real CSS files in dev, works like mini-css in non-dev\n\n### Pure CSS, CSS modules and PostCSS\n\nWhen you have pure CSS (without CSS modules), CSS modules and PostCSS in your project you can use this setup:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        // For CSS modules\n        // For pure CSS - /\\.css$/i,\n        // For Sass/SCSS - /\\.((c|sa|sc)ss)$/i,\n        // For Less - /\\.((c|le)ss)$/i,\n        test: /\\.((c|sa|sc)ss)$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              // Run `postcss-loader` on each CSS `@import`, do not forget that `sass-loader` compile non CSS `@import`'s into a single file\n              // If you need run `sass-loader` and `postcss-loader` on each CSS `@import` please set it to `2`\n              importLoaders: 1,\n              // Automatically enable css modules for files satisfying `/\\.module\\.\\w+$/i` RegExp.\n              modules: { auto: true },\n            },\n          },\n          {\n            loader: 'postcss-loader',\n            options: { plugins: () => [postcssPresetEnv({ stage: 0 })] },\n          },\n          // Can be `less-loader`\n          // The `test` property should be `\\.less/i`\n          {\n            test: /\\.s[ac]ss$/i,\n            loader: 'sass-loader',\n          },\n        ],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/css-loader.svg\n[npm-url]: https://npmjs.com/package/css-loader\n[node]: https://img.shields.io/node/v/css-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/css-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/css-loader\n[tests]: https://github.com/webpack-contrib/css-loader/workflows/css-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/css-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/css-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/css-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1460626}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9265212}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 39645508}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 115235161}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 201782007}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 351014965}], "dependentsCount": 9729, "starsCount": 99}, "github": {"starsCount": 3800, "forksCount": 538, "subscribersCount": 59, "issues": {"count": 1091, "openCount": 24, "distribution": {"3600": 250, "10800": 63, "32400": 63, "97200": 80, "291600": 64, "874800": 71, "2624400": 84, "7873200": 98, "23619600": 127, "70858800": 176, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 200}, {"username": "sokra", "commitsCount": 132}, {"username": "d3viant0ne", "commitsCount": 15}, {"username": "michael-ciniawsky", "commitsCount": 13}, {"username": "bebraw", "commitsCount": 8}, {"username": "SpaceK33z", "commitsCount": 6}, {"username": "markdalgleish", "commitsCount": 6}, {"username": "ShyykoSerhiy", "commitsCount": 5}, {"username": "joscha", "commitsCount": 5}, {"username": "jhnns", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "BPScott", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "andreypopp", "commitsCount": 2}, {"username": "ben-eb", "commitsCount": 2}, {"username": "cap-Bernardito", "commitsCount": 2}, {"username": "kgram", "commitsCount": 2}, {"username": "kud", "commitsCount": 2}, {"username": "lemieux", "commitsCount": 2}, {"username": "liambuchanan", "commitsCount": 2}, {"username": "mrsteele", "commitsCount": 2}, {"username": "shama", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "Antonio-Laguna", "commitsCount": 1}, {"username": "Atinux", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "ScriptedAlchemy", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "Solant", "commitsCount": 1}, {"username": "Stephanemw", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "ahoym", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alreadyExisted", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "bbtfr", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "charlesponti", "commitsCount": 1}, {"username": "christianvuerings", "commitsCount": 1}, {"username": "danny-andrews-snap", "commitsCount": 1}, {"username": "diagramatics", "commitsCount": 1}, {"username": "diegofaria", "commitsCount": 1}, {"username": "dreyescat", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "faergeek", "commitsCount": 1}, {"username": "fresheneesz", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "helloyou2012", "commitsCount": 1}, {"username": "hugihlynsson", "commitsCount": 1}, {"username": "jkiimm", "commitsCount": 1}, {"username": "joelgallant", "commitsCount": 1}, {"username": "jquense", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lamhieu-vk", "commitsCount": 1}, {"username": "lettertwo", "commitsCount": 1}, {"username": "liuliangsir", "commitsCount": 1}, {"username": "longlho", "commitsCount": 1}, {"username": "manuelbieh", "commitsCount": 1}, {"username": "mareksuscak", "commitsCount": 1}, {"username": "maxlapides", "commitsCount": 1}, {"username": "mjackson", "commitsCount": 1}, {"username": "mmrko", "commitsCount": 1}, {"username": "monteiz", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "moretti", "commitsCount": 1}, {"username": "mweibel", "commitsCount": 1}, {"username": "ndresx", "commitsCount": 1}, {"username": "no1melman", "commitsCount": 1}, {"username": "oliverwoodings", "commitsCount": 1}, {"username": "petehunt", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "philipbordallo", "commitsCount": 1}, {"username": "princed", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "sanpoChew", "commitsCount": 1}, {"username": "seuros", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "sodatea", "commitsCount": 1}, {"username": "spencerbyw", "commitsCount": 1}, {"username": "swernerx", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "yavorsky", "commitsCount": 1}, {"username": "ziir", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 25}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 31}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 72}]}, "source": {"files": {"readmeSize": 26212, "testsSize": 2680041, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/css-loader.svg", "shields": "https://img.shields.io/npm/v/css-loader.svg", "content": "https://img.shields.io/npm/v/css-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/css-loader.svg", "service": "https://david-dm.org/webpack-contrib/css-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/css-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/css-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"camelcase": {"required": "^5.3.1", "stable": "6.0.0", "latest": "6.0.0"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7454999999999999, "health": 0.5384615384615384, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4582, "downloadsCount": 38411720.333333336, "downloadsAcceleration": 129789.60302511416, "dependentsCount": 9729}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8954280821917808, "openIssues": 1, "issuesDistribution": 0.018372403247356672}}, "score": {"final": 0.7967437144070117, "detail": {"quality": 0.9128567525353536, "popularity": 0.80868905464812, "maintenance": 0.6852729129130393}}}}, {"chalk": {"analyzedAt": "2020-06-09T07:44:09.486Z", "collected": {"metadata": {"name": "chalk", "scope": "unscoped", "version": "4.1.0", "description": "Terminal string styling done right", "keywords": ["color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2020-06-09T07:43:42.525Z", "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/chalk.git"}, "links": {"npm": "https://www.npmjs.com/package/chalk", "homepage": "https://github.com/chalk/chalk#readme", "repository": "https://github.com/chalk/chalk", "bugs": "https://github.com/chalk/chalk/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^4.1.0", "supports-color": "^7.1.0"}, "devDependencies": {"ava": "^2.4.0", "coveralls": "^3.0.7", "execa": "^4.0.0", "import-fresh": "^3.1.0", "matcha": "^0.7.0", "nyc": "^15.0.0", "resolve-from": "^5.0.0", "tsd": "^0.7.4", "xo": "^0.28.2"}, "releases": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 1}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 1}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 4}, {"from": "2018-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![npm dependents](https://badgen.net/npm/dependents/chalk)](https://www.npmjs.com/package/chalk?activeTab=dependents) [![Downloads](https://badgen.net/npm/dt/chalk)](https://www.npmjs.com/package/chalk) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) ![TypeScript-ready](https://img.shields.io/npm/types/chalk.svg) [![run on repl.it](https://repl.it/badge/github/chalk/chalk)](https://repl.it/github/chalk/chalk)\n\n<img src=\"https://cdn.jsdelivr.net/gh/chalk/ansi-styles@8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~50,000 packages](https://www.npmjs.com/browse/depended/chalk) as of January 1, 2020\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.level\n\nSpecifies the level of color support.\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.Instance({level: 0});\n```\n\n| Level | Description |\n| :---: | :--- |\n| `0` | All colors disabled |\n| `1` | Basic color support (16 colors) |\n| `2` | 256 color support |\n| `3` | Truecolor support (16 million colors) |\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n### chalk.stderr and chalk.stderr.supportsColor\n\n`chalk.stderr` contains a separate instance configured with color support detected for `stderr` stream instead of `stdout`. Override rules from `chalk.supportsColor` apply to this too. `chalk.stderr.supportsColor` is exposed for convenience.\n\n## Styles\n\n### Modifiers\n\n- `reset` - Resets the current color chain.\n- `bold` - Make text bold.\n- `dim` - Emitting only a small amount of light.\n- `italic` - Make text italic. *(Not widely supported)*\n- `underline` - Make text underline. *(Not widely supported)*\n- `inverse`- Inverse background and foreground colors.\n- `hidden` - Prints the text, but makes it invisible.\n- `strikethrough` - Puts a horizontal line through the center of the text. *(Not widely supported)*\n- `visible`- Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic.\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](https://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n\tThere are {bold 5280 feet} in a mile.\n\tIn {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following three statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk.bold.rgb(10, 100, 200)`Hello!`);\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- [`ansi`](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) - Example: `chalk.ansi(31).bgAnsi(93)('red on yellowBright')`\n- [`ansi256`](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) - Example: `chalk.bgAnsi256(194)('Honeydew, more or less')`\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [Windows Terminal](https://github.com/microsoft/terminal) instead of `cmd.exe`.\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n## chalk for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-chalk?utm_source=npm-chalk&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)"}, "npm": {"downloads": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 8443849}, {"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 48217157}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 194025179}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 548685851}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 937993316}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 1650231308}], "dependentsCount": 49301, "starsCount": 933}, "github": {"starsCount": 14591, "forksCount": 559, "subscribersCount": 140, "issues": {"count": 404, "openCount": 12, "distribution": {"3600": 100, "10800": 40, "32400": 37, "97200": 40, "291600": 24, "874800": 32, "2624400": 35, "7873200": 38, "23619600": 39, "70858800": 19, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 146}, {"username": "Qix-", "commitsCount": 34}, {"username": "kevva", "commitsCount": 3}, {"username": "pedrottimark", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "stroncium", "commitsCount": 3}, {"username": "LitoMore", "commitsCount": 2}, {"username": "Richienb", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "calebboyd", "commitsCount": 2}, {"username": "nazrhyn", "commitsCount": 2}, {"username": "popey456963", "commitsCount": 2}, {"username": "seanmonstar", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "vadimdemedes", "commitsCount": 2}, {"username": "AndrewKvalheim", "commitsCount": 1}, {"username": "BendingBender", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "GeorgeGkas", "commitsCount": 1}, {"username": "Haroenv", "commitsCount": 1}, {"username": "KSXGitHub", "commitsCount": 1}, {"username": "L1fescape", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "apsknight", "commitsCount": 1}, {"username": "atifaziz", "commitsCount": 1}, {"username": "bmeck", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "danielhusar", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "eankeen", "commitsCount": 1}, {"username": "farnabaz", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "keis", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "marado", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "martinheidegger", "commitsCount": 1}, {"username": "mischah", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "partheseas", "commitsCount": 1}, {"username": "paulmelnikow", "commitsCount": 1}, {"username": "saadq", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tom-sherman", "commitsCount": 1}, {"username": "toonijn", "commitsCount": 1}, {"username": "vanbujm", "commitsCount": 1}, {"username": "weikinhuang", "commitsCount": 1}, {"username": "yungsters", "commitsCount": 1}], "commits": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 2}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 2}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 8}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 9}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 31}]}, "source": {"files": {"readmeSize": 11949, "testsSize": 16265}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/chalk.svg?branch=master", "service": "https://api.travis-ci.org/chalk/chalk.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/chalk/master.svg", "content": "https://img.shields.io/travis/chalk/chalk/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/chalk/chalk/master.svg", "content": "https://img.shields.io/coveralls/chalk/chalk/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/types/chalk.svg", "shields": "https://img.shields.io/npm/types/chalk.svg", "content": "https://img.shields.io/npm/types/chalk.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "types"}}}], "linters": ["editorconfig", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.75, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 16275, "downloadsCount": 182895283.66666666, "downloadsAcceleration": 659054.1532343987, "dependentsCount": 49301}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9663090979321871, "detail": {"quality": 0.9544544206861331, "popularity": 0.9428878819744413, "maintenance": 0.9998914658151222}}}}, {"@babel/preset-env": {"analyzedAt": "2020-06-04T04:36:46.973Z", "collected": {"metadata": {"name": "@babel/preset-env", "scope": "babel", "version": "7.10.2", "description": "A Babel preset for each environment.", "date": "2020-05-30T19:25:19.763Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-env"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/compat-data": "^7.10.1", "@babel/helper-compilation-targets": "^7.10.2", "@babel/helper-module-imports": "^7.10.1", "@babel/helper-plugin-utils": "^7.10.1", "@babel/plugin-proposal-async-generator-functions": "^7.10.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-json-strings": "^7.10.1", "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.1", "@babel/plugin-proposal-numeric-separator": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-proposal-optional-catch-binding": "^7.10.1", "@babel/plugin-proposal-optional-chaining": "^7.10.1", "@babel/plugin-proposal-private-methods": "^7.10.1", "@babel/plugin-proposal-unicode-property-regex": "^7.10.1", "@babel/plugin-syntax-async-generators": "^7.8.0", "@babel/plugin-syntax-class-properties": "^7.10.1", "@babel/plugin-syntax-dynamic-import": "^7.8.0", "@babel/plugin-syntax-json-strings": "^7.8.0", "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0", "@babel/plugin-syntax-numeric-separator": "^7.10.1", "@babel/plugin-syntax-object-rest-spread": "^7.8.0", "@babel/plugin-syntax-optional-catch-binding": "^7.8.0", "@babel/plugin-syntax-optional-chaining": "^7.8.0", "@babel/plugin-syntax-top-level-await": "^7.10.1", "@babel/plugin-transform-arrow-functions": "^7.10.1", "@babel/plugin-transform-async-to-generator": "^7.10.1", "@babel/plugin-transform-block-scoped-functions": "^7.10.1", "@babel/plugin-transform-block-scoping": "^7.10.1", "@babel/plugin-transform-classes": "^7.10.1", "@babel/plugin-transform-computed-properties": "^7.10.1", "@babel/plugin-transform-destructuring": "^7.10.1", "@babel/plugin-transform-dotall-regex": "^7.10.1", "@babel/plugin-transform-duplicate-keys": "^7.10.1", "@babel/plugin-transform-exponentiation-operator": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-function-name": "^7.10.1", "@babel/plugin-transform-literals": "^7.10.1", "@babel/plugin-transform-member-expression-literals": "^7.10.1", "@babel/plugin-transform-modules-amd": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-modules-systemjs": "^7.10.1", "@babel/plugin-transform-modules-umd": "^7.10.1", "@babel/plugin-transform-named-capturing-groups-regex": "^7.8.3", "@babel/plugin-transform-new-target": "^7.10.1", "@babel/plugin-transform-object-super": "^7.10.1", "@babel/plugin-transform-parameters": "^7.10.1", "@babel/plugin-transform-property-literals": "^7.10.1", "@babel/plugin-transform-regenerator": "^7.10.1", "@babel/plugin-transform-reserved-words": "^7.10.1", "@babel/plugin-transform-shorthand-properties": "^7.10.1", "@babel/plugin-transform-spread": "^7.10.1", "@babel/plugin-transform-sticky-regex": "^7.10.1", "@babel/plugin-transform-template-literals": "^7.10.1", "@babel/plugin-transform-typeof-symbol": "^7.10.1", "@babel/plugin-transform-unicode-escapes": "^7.10.1", "@babel/plugin-transform-unicode-regex": "^7.10.1", "@babel/preset-modules": "^0.1.3", "@babel/types": "^7.10.2", "browserslist": "^4.12.0", "core-js-compat": "^3.6.2", "invariant": "^2.2.2", "levenary": "^1.1.1", "semver": "^5.5.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/helper-fixtures": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1", "@babel/plugin-syntax-dynamic-import": "^7.2.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 15}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 27}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 54}], "readme": "# @babel/preset-env\n\n> A Babel preset for each environment.\n\nSee our website [@babel/preset-env](https://babeljs.io/docs/en/next/babel-preset-env.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20preset-env%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-env\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-env --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2331028}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12245231}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52434507}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 148567888}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 259736596}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 443929302}], "dependentsCount": 5149, "starsCount": 9}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36700, "forksCount": 4308, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1238, "291600": 1053, "874800": 1008, "2624400": 847, "7873200": 807, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 466, "testsSize": 723814, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.5.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.96875, "branding": 1}, "popularity": {"communityInterest": 41983, "downloadsCount": 49522629.333333336, "downloadsAcceleration": 189577.16571537295, "dependentsCount": 5149}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2398263939099552}}, "score": {"final": 0.9082166485302199, "detail": {"quality": 0.9571750570328774, "popularity": 0.8846567155636418, "maintenance": 0.8898122313516634}}}}, {"gulp": {"analyzedAt": "2020-06-06T23:10:26.834Z", "collected": {"metadata": {"name": "gulp", "scope": "unscoped", "version": "4.0.2", "description": "The streaming build system.", "keywords": ["build", "stream", "system", "make", "tool", "asset", "pipeline", "series", "parallel", "streaming"], "date": "2019-05-06T17:49:36.803Z", "author": {"name": "Gulp Team", "email": "team@gulpjs.com", "url": "https://gulpjs.com/"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "contributors": [{"name": "Eric Schoffstall", "email": "yo@contra.io"}, {"name": "Blaine Bublitz", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/gulpjs/gulp.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp", "homepage": "https://gulpjs.com", "repository": "https://github.com/gulpjs/gulp", "bugs": "https://github.com/gulpjs/gulp/issues"}, "license": "MIT", "dependencies": {"glob-watcher": "^5.0.3", "gulp-cli": "^2.2.0", "undertaker": "^1.2.1", "vinyl-fs": "^3.0.0"}, "devDependencies": {"coveralls": "github:phated/node-coveralls#2.x", "eslint": "^2.13.1", "eslint-config-gulp": "^3.0.1", "expect": "^1.20.2", "mkdirp": "^0.5.1", "mocha": "^3.0.0", "nyc": "^10.3.2", "rimraf": "^2.6.3"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <a href=\"https://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n  <p align=\"center\">The streaming build system</p>\n</p>\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Azure Pipelines Build Status][azure-pipelines-image]][azure-pipelines-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![OpenCollective Backers][backer-badge]][backer-url] [![OpenCollective Sponsors][sponsor-badge]][sponsor-url] [![Gitter chat][gitter-image]][gitter-url]\n\n\n## What is gulp?\n\n- **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\n- **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\n- **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations\n- **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use\n\n## What's new in 4.0?!\n\n* The task system was rewritten from the ground-up, allowing task composition using `series()` and `parallel()` methods\n* The watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system\n* First-class support was added for incremental builds using `lastRun()`\n* A `symlink()` method was exposed to create symlinks instead of copying files\n* Built-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\n* Task registration of exported functions - using node or ES exports - is now recommended\n* Custom registries were designed, allowing for shared tasks or augmented functionality\n* Stream implementations were improved, allowing for better conditional and phased builds\n\n## Installation\n\nFollow our [Quick Start guide][quick-start].\n\n## Roadmap\n\nFind out about all our work-in-progress and outstanding issues at https://github.com/orgs/gulpjs/projects.\n\n## Documentation\n\nCheck out the [Getting Started guide][getting-started-guide] and [API docs][api-docs] on our website!\n\n__Excuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.__\n\n## Sample `gulpfile.js`\n\nThis file will give you a taste of what gulp does.\n\n```js\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n */\nfunction clean() {\n  // You can use multiple globbing patterns as you would with `gulp.src`,\n  // for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n/*\n * Define our tasks using plain functions\n */\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n */\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n/*\n * You can use CommonJS `exports` module notation to declare tasks\n */\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n/*\n * Define default task that can be called by just running `gulp` from cli\n */\nexports.default = build;\n```\n\n## Use latest JavaScript version in your gulpfile\n\n__Most new versions of node support most features that Babel provides, except the `import`/`export` syntax. When only that syntax is desired, rename to `gulpfile.esm.js`, install the [esm][esm-module] module, and skip the Babel portion below.__\n\nNode already supports a lot of __ES2015+__ features, but to avoid compatibility problems we suggest to install Babel and rename your `gulpfile.js` to `gulpfile.babel.js`.\n\n```sh\nnpm install --save-dev @babel/register @babel/core @babel/preset-env\n```\n\nThen create a **.babelrc** file with the preset configuration.\n\n```js\n{\n  \"presets\": [ \"@babel/preset-env\" ]\n}\n```\n\nAnd here's the same sample from above written in **ES2015+**.\n\n```js\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/*\n * For small tasks you can export arrow functions\n */\nexport const clean = () => del([ 'assets' ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n /*\n  * You could even use `export as` to rename exported tasks\n  */\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n/*\n * Export a default task\n */\nexport default build;\n```\n\n## Incremental Builds\n\nYou can filter out unchanged files between runs of a task using\nthe `gulp.src` function's `since` option and `gulp.lastRun`:\n```js\nconst paths = {\n  ...\n  images: {\n    src: 'src/images/**/*.{jpg,jpeg,png}',\n    dest: 'build/img/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin({optimizationLevel: 5}))\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\n```\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the `watch` task when running the `images` task\nfor a second time.\n\n## Want to contribute?\n\nAnyone can help make this project better - check out our [Contributing guide](/CONTRIBUTING.md)!\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities.\n\n[![Backers][backers-image]][support-url]\n\n## Sponsors\n\nBecome a sponsor to get your logo on our README on Github.\n\n[![Sponsors][sponsors-image]][support-url]\n\n[downloads-image]: https://img.shields.io/npm/dm/gulp.svg\n[npm-url]: https://www.npmjs.com/package/gulp\n[npm-image]: https://img.shields.io/npm/v/gulp.svg\n\n[azure-pipelines-url]: https://dev.azure.com/gulpjs/gulp/_build/latest?definitionId=1&branchName=master\n[azure-pipelines-image]: https://dev.azure.com/gulpjs/gulp/_apis/build/status/gulp?branchName=master\n\n[travis-url]: https://travis-ci.org/gulpjs/gulp\n[travis-image]: https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/gulp\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/gulp\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n\n[backer-url]: #backers\n[backer-badge]: https://opencollective.com/gulpjs/backers/badge.svg?color=blue\n[sponsor-url]: #sponsors\n[sponsor-badge]: https://opencollective.com/gulpjs/sponsors/badge.svg?color=blue\n\n[support-url]: https://opencollective.com/gulpjs#support\n\n[backers-image]: https://opencollective.com/gulpjs/backers.svg\n[sponsors-image]: https://opencollective.com/gulpjs/sponsors.svg\n\n[quick-start]: https://gulpjs.com/docs/en/getting-started/quick-start\n[getting-started-guide]: https://gulpjs.com/docs/en/getting-started/quick-start\n[api-docs]: https://gulpjs.com/docs/en/api/concepts"}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 220354}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1328090}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 5698828}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 17226212}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 32421520}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 65635528}], "dependentsCount": 6673, "starsCount": 1430}, "github": {"homepage": "https://gulpjs.com", "starsCount": 31769, "forksCount": 4395, "subscribersCount": 1135, "issues": {"count": 2426, "openCount": 23, "distribution": {"3600": 723, "10800": 292, "32400": 372, "97200": 304, "291600": 188, "874800": 172, "2624400": 118, "7873200": 111, "23619600": 90, "70858800": 41, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "contra", "commitsCount": 284}, {"username": "phated", "commitsCount": 123}, {"username": "robrich", "commitsCount": 43}, {"username": "janiceilene", "commitsCount": 36}, {"username": "sindresorhus", "commitsCount": 23}, {"username": "tkellen", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 10}, {"username": "lubelski", "commitsCount": 10}, {"username": "stryju", "commitsCount": 10}, {"username": "stevemao", "commitsCount": 9}, {"username": "callumacrae", "commitsCount": 8}, {"username": "nalbion", "commitsCount": 6}, {"username": "arvindr21", "commitsCount": 5}, {"username": "dinoboff", "commitsCount": 5}, {"username": "jamescrowley", "commitsCount": 5}, {"username": "stevelacy", "commitsCount": 5}, {"username": "terinjokes", "commitsCount": 5}, {"username": "AntouanK", "commitsCount": 4}, {"username": "appleboy", "commitsCount": 4}, {"username": "kt3k", "commitsCount": 4}, {"username": "lazd", "commitsCount": 4}, {"username": "lisposter", "commitsCount": 4}, {"username": "pdehaan", "commitsCount": 4}, {"username": "pkozlowski-opensource", "commitsCount": 4}, {"username": "staxmanade", "commitsCount": 4}, {"username": "CaryLandholt", "commitsCount": 3}, {"username": "SyntaxRules", "commitsCount": 3}, {"username": "asfktz", "commitsCount": 3}, {"username": "beenanner", "commitsCount": 3}, {"username": "breyed", "commitsCount": 3}, {"username": "hughsk", "commitsCount": 3}, {"username": "jedmao", "commitsCount": 3}, {"username": "sanfords", "commitsCount": 3}, {"username": "subhaze", "commitsCount": 3}, {"username": "t3chnoboy", "commitsCount": 3}, {"username": "LoganArnett", "commitsCount": 2}, {"username": "PatrickJS", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "ajoslin", "commitsCount": 2}, {"username": "azu", "commitsCount": 2}, {"username": "azweb76", "commitsCount": 2}, {"username": "baer", "commitsCount": 2}, {"username": "bhough", "commitsCount": 2}, {"username": "carpasse", "commitsCount": 2}, {"username": "chalkers", "commitsCount": 2}, {"username": "cognitom", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "darsain", "commitsCount": 2}, {"username": "devWayne", "commitsCount": 2}, {"username": "erquhart", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "fidian", "commitsCount": 2}, {"username": "fritx", "commitsCount": 2}, {"username": "grmlin", "commitsCount": 2}, {"username": "him2him2", "commitsCount": 2}, {"username": "jamiebuilds", "commitsCount": 2}, {"username": "kauegimenes", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "klausbayrhammer", "commitsCount": 2}, {"username": "laurelnaiad", "commitsCount": 2}, {"username": "mariuszskon", "commitsCount": 2}, {"username": "megakote", "commitsCount": 2}, {"username": "shakyShane", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tomByrer", "commitsCount": 2}, {"username": "willpracht", "commitsCount": 2}, {"username": "GAumala", "commitsCount": 1}, {"username": "Lucretiel", "commitsCount": 1}, {"username": "MattSturgeon", "commitsCount": 1}, {"username": "SomethingNew71", "commitsCount": 1}, {"username": "Sylk", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaronhooper", "commitsCount": 1}, {"username": "b3none", "commitsCount": 1}, {"username": "chalkygames123", "commitsCount": 1}, {"username": "chinhdo", "commitsCount": 1}, {"username": "chrisanderss0n", "commitsCount": 1}, {"username": "chrisjlee", "commitsCount": 1}, {"username": "cssmagic", "commitsCount": 1}, {"username": "dacodekid", "commitsCount": 1}, {"username": "ddprrt", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "jakearchibald", "commitsCount": 1}, {"username": "jeremenichelli", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "limdauto", "commitsCount": 1}, {"username": "martinvd", "commitsCount": 1}, {"username": "mikestreety", "commitsCount": 1}, {"username": "mimoduo", "commitsCount": 1}, {"username": "nmccready", "commitsCount": 1}, {"username": "ptb", "commitsCount": 1}, {"username": "ralomach", "commitsCount": 1}, {"username": "rninne", "commitsCount": 1}, {"username": "schlpbch", "commitsCount": 1}, {"username": "sttk", "commitsCount": 1}, {"username": "tonyhallett", "commitsCount": 1}, {"username": "xiaoyu2er", "commitsCount": 1}, {"username": "yanxyz", "commitsCount": 1}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 3}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 6}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 8}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 14}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 9045, "testsSize": 15922, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/gulp.svg", "shields": "https://img.shields.io/npm/dm/gulp.svg", "content": "https://img.shields.io/npm/dm/gulp.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/gulp.svg", "shields": "https://img.shields.io/npm/v/gulp.svg", "content": "https://img.shields.io/npm/v/gulp.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci", "service": "https://api.travis-ci.org/gulpjs/gulp.svg", "shields": "https://img.shields.io/travis/gulpjs/gulp.svg", "content": "https://img.shields.io/travis/gulpjs/gulp.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor", "service": "https://ci.appveyor.com/api/projects/status/gulpjs/gulp", "shields": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg", "content": "https://img.shields.io/appveyor/ci/gulpjs/gulp.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "service": "https://coveralls.io/repos/gulpjs/gulp/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "content": "https://img.shields.io/coveralls/gulpjs/gulp/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://badges.gitter.im/gulpjs/gulp.svg", "service": "https://badges.gitter.im/gulpjs/gulp.svg", "shields": "https://img.shields.io/gitter/room/gulpjs/gulp.svg", "content": "https://img.shields.io/gitter/room/gulpjs/gulp.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.875, "health": 1, "branding": 1}, "popularity": {"communityInterest": 38828, "downloadsCount": 5742070.666666667, "downloadsAcceleration": 2608.440030441394, "dependentsCount": 6673}, "maintenance": {"releasesFrequency": 0.3113013698630137, "commitsFrequency": 0.7440068493150684, "openIssues": 1, "issuesDistribution": 0.847273156286469}}, "score": {"final": 0.876160816631137, "detail": {"quality": 0.9832174251509739, "popularity": 0.727332571987759, "maintenance": 0.9332262539717975}}}}, {"tslint": {"analyzedAt": "2020-05-15T19:40:45.240Z", "collected": {"metadata": {"name": "tslint", "scope": "unscoped", "version": "6.1.2", "description": "An extensible static analysis linter for the TypeScript language", "keywords": ["cli", "typescript", "linter"], "date": "2020-04-27T02:21:04.328Z", "publisher": {"username": "palantir", "email": "pt-vendor-npm@palantir.com"}, "maintainers": [{"username": "palantir", "email": "pt-vendor-npm@palantir.com"}], "repository": {"type": "git", "url": "git+https://github.com/palantir/tslint.git"}, "links": {"npm": "https://www.npmjs.com/package/tslint", "homepage": "https://palantir.github.io/tslint", "repository": "https://github.com/palantir/tslint", "bugs": "https://github.com/palantir/tslint/issues"}, "license": "Apache-2.0", "dependencies": {"@babel/code-frame": "^7.0.0", "builtin-modules": "^1.1.1", "chalk": "^2.3.0", "commander": "^2.12.1", "diff": "^4.0.1", "glob": "^7.1.1", "js-yaml": "^3.13.1", "minimatch": "^3.0.4", "mkdirp": "^0.5.3", "resolve": "^1.3.2", "semver": "^5.3.0", "tslib": "^1.10.0", "tsutils": "^2.29.0"}, "devDependencies": {"@octokit/rest": "^16.24.3", "@types/babel__code-frame": "^7.0.1", "@types/chai": "^3.5.0", "@types/diff": "^3.2.0", "@types/glob": "^5.0.30", "@types/js-yaml": "^3.5.31", "@types/minimatch": "^2.0.29", "@types/mkdirp": "^0.5.2", "@types/mocha": "^5.2.6", "@types/node": "^7.0.29", "@types/resolve": "^0.0.4", "@types/rimraf": "^2.0.2", "@types/semver": "^5.3.30", "chai": "^3.5.0", "husky": "^0.14.3", "json-stringify-pretty-compact": "^1.2.0", "mocha": "^6.1.4", "npm-run-all": "^4.0.2", "nyc": "^14.1.1", "prettier": "~1.16.4", "rimraf": "^2.5.4", "ts-node": "^3.3.0", "tslint": "~5.13.0", "tslint-config-prettier": "^1.18.0", "tslint-plugin-prettier": "^2.0.1", "tslint-test-config-non-relative": "file:test/external/tslint-test-config-non-relative", "typescript": "~3.8.2", "yarn-deduplicate": "^1.1.1"}, "peerDependencies": {"typescript": ">=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >=3.0.0-dev || >= 3.1.0-dev || >= 3.2.0-dev"}, "releases": [{"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 2}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 4}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 5}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 12}, {"from": "2018-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 20}], "deprecated": "TSLint has been deprecated in favor of ESLint. Please see https://github.com/palantir/tslint/issues/4534 for more information.", "hasTestScript": true, "readme": "[![NPM version](https://badge.fury.io/js/tslint.svg)](https://badge.fury.io/js/tslint)\n[![Downloads](https://img.shields.io/npm/dm/tslint.svg)](https://npmjs.org/package/tslint)\n[![Dependency Status](https://david-dm.org/palantir/tslint.svg)](https://david-dm.org/palantir/tslint)\n[![devDependency Status](https://david-dm.org/palantir/tslint/dev-status.svg)](https://david-dm.org/palantir/tslint/?type=dev)\n[![peerDependency Status](https://david-dm.org/palantir/tslint/peer-status.svg)](https://david-dm.org/palantir/tslint/?type=peer)\n[![Circle CI](https://circleci.com/gh/palantir/tslint.svg?style=svg)](https://circleci.com/gh/palantir/tslint)\n\n# TSLint\n\n:warning: __TSLint is deprecated.__\n\n> See this issue for more details: [Roadmap: TSLint &rarr; ESLint](https://github.com/palantir/tslint/issues/4534). If you're interested in helping with the TSLint/ESLint migration, please check out our [OSS Fellowship](https://medium.com/palantir/fellowships-for-open-source-developers-3892e6b75ee1) program.\n\nTSLint is an extensible static analysis tool that checks [TypeScript](https://github.com/Microsoft/TypeScript) code for readability, maintainability, and functionality errors. It is widely supported across modern editors & build systems and can be customized with your own lint rules, configurations, and formatters.\n\nTSLint currently supports:\n\n-   an extensive set of core rules\n-   custom lint rules\n-   custom formatters (failure reporters)\n-   inline disabling and enabling of rules with comment flags in source code\n-   configuration presets (`tslint:latest`, `tslint-react`, etc.) and plugin composition\n-   automatic fixing of formatting & style violations\n-   integration with [MSBuild](https://github.com/joshuakgoldberg/tslint.msbuild), [Grunt](https://github.com/palantir/grunt-tslint), [Gulp](https://github.com/panuhorsmalahti/gulp-tslint), [Atom](https://github.com/AtomLinter/linter-tslint), [Eclipse](https://github.com/palantir/eclipse-tslint), [Emacs](https://www.flycheck.org/), [Sublime](https://packagecontrol.io/packages/SublimeLinter-contrib-tslint), [Vim](https://github.com/scrooloose/syntastic), [Visual Studio 2015](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebAnalyzer), [Visual Studio 2017](https://marketplace.visualstudio.com/items?itemName=RichNewman.TypeScriptAnalyzer), [Visual Studio code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-tslint-plugin) (alternative: use [this extension](https://marketplace.visualstudio.com/items?itemName=eg2.tslint) for TS <3.2), [WebStorm](https://www.jetbrains.com/webstorm/help/tslint.html) and [more](https://palantir.github.io/tslint/usage/third-party-tools/)\n\n## Installation & Usage\n\nPlease refer to the full installation & usage documentation on the [TSLint website](https://palantir.github.io/tslint/). There, you'll find information about\n\n-   [configuration](https://palantir.github.io/tslint/usage/configuration/),\n-   [core rules](https://palantir.github.io/tslint/rules/),\n-   [core formatters](https://palantir.github.io/tslint/formatters/), and\n-   [customization of TSLint](https://palantir.github.io/tslint/develop/custom-rules/).\n-   [inline disabling and enabling of rules with comment flags](https://palantir.github.io/tslint/usage/rule-flags/)\n\n## TSLint Playground\n\nThere is a sandbox environment for TSLint at [palantir.github.io/tslint-playground](https://palantir.github.io/tslint-playground/), which can be used to test rules and see how TSLint works. Issues can be filed against `tslint-playground` [here](https://github.com/palantir/tslint-playground).\n\n## Custom Rules & Plugins\n\n#### Custom rule sets from Palantir\n\n-   [tslint-react](https://github.com/palantir/tslint-react) - Lint rules related to React & JSX.\n-   [tslint-blueprint](https://github.com/palantir/tslint-blueprint) - Lint rules to enforce best practices with [blueprintjs libraries](https://github.com/palantir/blueprint)\n\n#### Custom rule sets from the community\n\nIf we don't have all the rules you're looking for, you can either write your own [custom rules](https://palantir.github.io/tslint/develop/custom-rules/) or use rules implementations developed by the community. The repos below are a good source of custom rules:\n\n-   [ESLint rules for TSLint](https://github.com/buzinas/tslint-eslint-rules) - Improve your TSLint with the missing ESLint Rules\n-   [tslint-microsoft-contrib](https://github.com/Microsoft/tslint-microsoft-contrib) - A set of TSLint rules used on some Microsoft projects\n-   [codelyzer](https://github.com/mgechev/codelyzer) - A set of tslint rules for static code analysis of Angular TypeScript projects\n-   [vrsource-tslint-rules](https://github.com/vrsource/vrsource-tslint-rules)\n-   [tslint-immutable](https://github.com/jonaskello/tslint-immutable) - TSLint rules to disable mutation in TypeScript\n-   [tslint-consistent-codestyle](https://github.com/ajafff/tslint-consistent-codestyle) - TSLint rules to enforce consistent code style in TypeScript\n-   [tslint-sonarts](https://github.com/SonarSource/SonarTS) - Bug-finding rules based on advanced code models to spot hard to find errors in TypeScript\n-   [tslint-clean-code](https://github.com/Glavin001/tslint-clean-code) - A set of TSLint rules inspired by the Clean Code handbook\n-   [rxjs-tslint-rules](https://github.com/cartant/rxjs-tslint-rules) - TSLint rules for RxJS\n\n## Development\n\nPrerequisites:\n\n-   `node` v7+\n-   `yarn` v1.0+\n\n#### Quick Start\n\n```bash\ngit clone git@github.com:palantir/tslint.git --config core.autocrlf=input --config core.eol=lf\nyarn\nyarn compile\nyarn test\n```"}, "npm": {"downloads": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 630658}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3332258}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 14271845}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 42800393}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 78883606}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 149365889}], "dependentsCount": 1923, "starsCount": 69}, "github": {"homepage": "http://palantir.github.io/tslint/", "starsCount": 5758, "forksCount": 942, "subscribersCount": 115, "issues": {"count": 4903, "openCount": 4, "distribution": {"3600": 572, "10800": 306, "32400": 314, "97200": 497, "291600": 441, "874800": 553, "2624400": 516, "7873200": 433, "23619600": 453, "70858800": 622, "212576400": 196}, "isDisabled": false}, "contributors": [{"username": "ashwinr", "commitsCount": 349}, {"username": "adidahiya", "commitsCount": 274}, {"username": "ajafff", "commitsCount": 253}, {"username": "andy-hanson", "commitsCount": 187}, {"username": "nchen63", "commitsCount": 146}, {"username": "gscshoyru", "commitsCount": 130}, {"username": "JKillian", "commitsCount": 71}, {"username": "JoshuaKGoldberg", "commitsCount": 68}, {"username": "DickvdBrink", "commitsCount": 49}, {"username": "andy-ms", "commitsCount": 23}, {"username": "YuichiNukiyama", "commitsCount": 20}, {"username": "IllusionMH", "commitsCount": 19}, {"username": "leeavital", "commitsCount": 19}, {"username": "chrismbarr", "commitsCount": 18}, {"username": "michaelgmiller", "commitsCount": 13}, {"username": "mprobst", "commitsCount": 13}, {"username": "weswigham", "commitsCount": 13}, {"username": "johnwiseheart", "commitsCount": 10}, {"username": "rrogowski", "commitsCount": 10}, {"username": "tanmoyopenroot", "commitsCount": 10}, {"username": "bowenni", "commitsCount": 9}, {"username": "derekcicerone", "commitsCount": 9}, {"username": "nomaed", "commitsCount": 9}, {"username": "am11", "commitsCount": 8}, {"username": "fent", "commitsCount": 8}, {"username": "alexeagle", "commitsCount": 7}, {"username": "bjornstar", "commitsCount": 7}, {"username": "rwaskiewicz", "commitsCount": 7}, {"username": "thmiceli", "commitsCount": 7}, {"username": "HamletDRC", "commitsCount": 6}, {"username": "NaridaL", "commitsCount": 6}, {"username": "ScottSWu", "commitsCount": 6}, {"username": "VincentLanglet", "commitsCount": 6}, {"username": "ericbf", "commitsCount": 6}, {"username": "mohsen1", "commitsCount": 6}, {"username": "pe8ter", "commitsCount": 6}, {"username": "reduckted", "commitsCount": 6}, {"username": "xt0rted", "commitsCount": 6}, {"username": "bencoveney", "commitsCount": 5}, {"username": "calebegg", "commitsCount": 5}, {"username": "donaldpipowitch", "commitsCount": 5}, {"username": "gtanner", "commitsCount": 5}, {"username": "mateuszwitkowski", "commitsCount": 5}, {"username": "myitcv", "commitsCount": 5}, {"username": "pablobirukov", "commitsCount": 5}, {"username": "vvakame", "commitsCount": 5}, {"username": "304NotModified", "commitsCount": 4}, {"username": "ThomasdenH", "commitsCount": 4}, {"username": "cyrilgandon", "commitsCount": 4}, {"username": "danvk", "commitsCount": 4}, {"username": "ericanderson", "commitsCount": 4}, {"username": "mmv", "commitsCount": 4}, {"username": "neoGeneva", "commitsCount": 4}, {"username": "patsissons", "commitsCount": 4}, {"username": "sbj42", "commitsCount": 4}, {"username": "wereHamster", "commitsCount": 4}, {"username": "yyoshiki41", "commitsCount": 4}, {"username": "Pajn", "commitsCount": 3}, {"username": "aboyton", "commitsCount": 3}, {"username": "aprilrd", "commitsCount": 3}, {"username": "arusakov", "commitsCount": 3}, {"username": "bolatovumar", "commitsCount": 3}, {"username": "enessoylu", "commitsCount": 3}, {"username": "fisx", "commitsCount": 3}, {"username": "fondasimone", "commitsCount": 3}, {"username": "irfanhudda", "commitsCount": 3}, {"username": "ksvitkovsky", "commitsCount": 3}, {"username": "mgechev", "commitsCount": 3}, {"username": "nikklassen", "commitsCount": 3}, {"username": "olore", "commitsCount": 3}, {"username": "timocov", "commitsCount": 3}, {"username": "vedadeepta", "commitsCount": 3}, {"username": "vgrigoriu", "commitsCount": 3}, {"username": "ColCh", "commitsCount": 2}, {"username": "DanielKucal", "commitsCount": 2}, {"username": "NN---", "commitsCount": 2}, {"username": "abierbaum", "commitsCount": 2}, {"username": "amacleay", "commitsCount": 2}, {"username": "berickson1", "commitsCount": 2}, {"username": "cheeZery", "commitsCount": 2}, {"username": "ethanresnick", "commitsCount": 2}, {"username": "guidsdo", "commitsCount": 2}, {"username": "ikatyang", "commitsCount": 2}, {"username": "jbsingh", "commitsCount": 2}, {"username": "jez9999", "commitsCount": 2}, {"username": "jmlopez-rod", "commitsCount": 2}, {"username": "joscha", "commitsCount": 2}, {"username": "keradus", "commitsCount": 2}, {"username": "lijunle", "commitsCount": 2}, {"username": "mbelsky", "commitsCount": 2}, {"username": "mitchellwills", "commitsCount": 2}, {"username": "mogzol", "commitsCount": 2}, {"username": "no23reason", "commitsCount": 2}, {"username": "nrathi", "commitsCount": 2}, {"username": "piotrgajow", "commitsCount": 2}, {"username": "saberduck", "commitsCount": 2}, {"username": "ulrichb", "commitsCount": 2}, {"username": "vilic", "commitsCount": 2}, {"username": "vmk1vmk", "commitsCount": 2}], "commits": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 9}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 15}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 84}], "statuses": [{"context": "ci/circleci: test2.4", "state": "success"}, {"context": "ci/circleci: test3.8", "state": "success"}, {"context": "ci/circleci: testNext", "state": "success"}, {"context": "ci/circleci: test2.8", "state": "success"}, {"context": "ci/circleci: test3.1", "state": "success"}, {"context": "ci/circleci: test3.4", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: testRc", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: test2.1", "state": "success"}]}, "source": {"files": {"readmeSize": 5617, "testsSize": 1252717, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/tslint.svg", "shields": "https://img.shields.io/npm/dm/tslint.svg", "content": "https://img.shields.io/npm/dm/tslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint.svg", "service": "https://david-dm.org/palantir/tslint.svg", "shields": "https://img.shields.io/david/palantir/tslint.svg", "content": "https://img.shields.io/david/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/dev-status.svg", "service": "https://david-dm.org/palantir/tslint/dev-status.svg", "shields": "https://img.shields.io/david/dev/palantir/tslint.svg", "content": "https://img.shields.io/david/dev/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/peer-status.svg", "service": "https://david-dm.org/palantir/tslint/peer-status.svg", "shields": "https://img.shields.io/david/peer/palantir/tslint.svg", "content": "https://img.shields.io/david/peer/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "peer"}}}, {"urls": {"original": "https://circleci.com/gh/palantir/tslint.svg?style=svg", "service": "https://circleci.com/gh/palantir/tslint.svg", "shields": "https://img.shields.io/circleci/project/github/palantir/tslint.svg", "content": "https://img.shields.io/circleci/project/github/palantir/tslint.json"}, "info": {"service": "circleci", "type": "build"}}], "linters": ["editorconfig", "prettier", "tslint"], "outdatedDependencies": {"builtin-modules": {"required": "^1.1.1", "stable": "3.1.0", "latest": "3.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "tslib": {"required": "^1.10.0", "stable": "2.0.0", "latest": "2.0.0"}, "chalk": {"required": "^2.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "tsutils": {"required": "^2.29.0", "stable": "3.17.1", "latest": "3.17.1"}, "commander": {"required": "^2.12.1", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 6983, "downloadsCount": 14266797.666666666, "downloadsAcceleration": 23881.7987062405, "dependentsCount": 1923}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8277910958904109, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6447889619554916, "detail": {"quality": 0.5690392981442357, "popularity": 0.6879139086353326, "maintenance": 0.6665922985424413}}}}, {"eslint-plugin-react": {"analyzedAt": "2020-05-13T03:46:16.936Z", "collected": {"metadata": {"name": "eslint-plugin-react", "scope": "unscoped", "version": "7.20.0", "description": "React specific linting rules for ESLint", "keywords": ["eslint", "eslint-plugin", "eslintplugin", "react"], "date": "2020-05-13T03:14:17.026Z", "author": {"name": "Yannick Croissant", "email": "yannick.croissant+npm@gmail.com", "username": "yannickcr"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "yannickcr", "email": "yannick.croissant+npm@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/yannickcr/eslint-plugin-react.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-react", "homepage": "https://github.com/yannickcr/eslint-plugin-react", "repository": "https://github.com/yannickcr/eslint-plugin-react", "bugs": "https://github.com/yannickcr/eslint-plugin-react/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "doctrine": "^2.1.0", "has": "^1.0.3", "jsx-ast-utils": "^2.2.3", "object.entries": "^1.1.1", "object.fromentries": "^2.0.2", "object.values": "^1.1.1", "prop-types": "^15.7.2", "resolve": "^1.15.1", "string.prototype.matchall": "^4.0.2", "xregexp": "^4.3.0"}, "devDependencies": {"@types/eslint": "^6.8.0", "@types/estree": "0.0.44", "@types/node": "^13.13.6", "@typescript-eslint/parser": "^2.33.0", "babel-eslint": "^8.2.6", "coveralls": "^3.1.0", "eslint": "^3 || ^4 || ^5 || ^6 || ^7", "eslint-config-airbnb-base": "^14.1.0", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-import": "^2.20.2", "istanbul": "^0.4.5", "markdown-magic": "^1.0.0", "mocha": "^5.2.0", "semver": "^6.3.0", "sinon": "^7.5.0", "typescript": "^3.9.2", "typescript-eslint-parser": "^20.1.1"}, "peerDependencies": {"eslint": "^3 || ^4 || ^5 || ^6 || ^7"}, "releases": [{"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 0}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 6}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 13}, {"from": "2018-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 24}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "ESLint-plugin-React\n===================\n\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][deps-image]][deps-url] [![Coverage Status][coverage-image]][coverage-url] [![Code Climate][climate-image]][climate-url] [![Tidelift][tidelift-image]][tidelift-url]\n\nReact specific linting rules for ESLint\n\n# Installation\n\nInstall [ESLint](https://www.github.com/eslint/eslint) either locally or globally. (Note that locally, per project, is strongly preferred)\n\n```sh\n$ npm install eslint --save-dev\n```\n\nIf you installed `ESLint` globally, you have to install React plugin globally too. Otherwise, install it locally.\n\n```sh\n$ npm install eslint-plugin-react --save-dev\n```\n\n# Configuration\n\nUse [our preset](#recommended) to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\"\n  ]\n```\n\nYou should also specify settings that will be shared across all the plugin rules. ([More about eslint shared settings](https://eslint.org/docs/user-guide/configuring#adding-shared-settings))\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createReactClass\", // Regex for Component Factory to use,\n                                         // default to \"createReactClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed.\n                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.\n                           // default to latest and warns if missing\n                           // It will default to \"detect\" in the future\n      \"flowVersion\": \"0.53\" // Flow version\n    },\n    \"propWrapperFunctions\": [\n        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.\n        \"forbidExtraProps\",\n        {\"property\": \"freeze\", \"object\": \"Object\"},\n        {\"property\": \"myFavoriteWrapper\"}\n    ],\n    \"linkComponents\": [\n      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />\n      \"Hyperlink\",\n      {\"name\": \"Link\", \"linkAttribute\": \"to\"}\n    ]\n  }\n}\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"react\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nEnable JSX support.\n\nWith ESLint 2+\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n# List of supported rules\n\n<!-- AUTO-GENERATED-CONTENT:START (BASIC_RULES) -->\n* [react/boolean-prop-naming](docs/rules/boolean-prop-naming.md): Enforces consistent naming for boolean props\n* [react/button-has-type](docs/rules/button-has-type.md): Forbid \"button\" element without an explicit \"type\" attribute\n* [react/default-props-match-prop-types](docs/rules/default-props-match-prop-types.md): Enforce all defaultProps are defined and not \"required\" in propTypes.\n* [react/destructuring-assignment](docs/rules/destructuring-assignment.md): Enforce consistent usage of destructuring assignment of props, state, and context\n* [react/display-name](docs/rules/display-name.md): Prevent missing displayName in a React component definition\n* [react/forbid-component-props](docs/rules/forbid-component-props.md): Forbid certain props on components\n* [react/forbid-dom-props](docs/rules/forbid-dom-props.md): Forbid certain props on DOM Nodes\n* [react/forbid-elements](docs/rules/forbid-elements.md): Forbid certain elements\n* [react/forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md): Forbid using another component's propTypes\n* [react/forbid-prop-types](docs/rules/forbid-prop-types.md): Forbid certain propTypes\n* [react/function-component-definition](docs/rules/function-component-definition.md): Standardize the way function component get defined (fixable)\n* [react/no-access-state-in-setstate](docs/rules/no-access-state-in-setstate.md): Reports when this.state is accessed within setState\n* [react/no-adjacent-inline-elements](docs/rules/no-adjacent-inline-elements.md): Prevent adjacent inline elements not separated by whitespace.\n* [react/no-array-index-key](docs/rules/no-array-index-key.md): Prevent usage of Array index in keys\n* [react/no-children-prop](docs/rules/no-children-prop.md): Prevent passing of children as props.\n* [react/no-danger](docs/rules/no-danger.md): Prevent usage of dangerous JSX props\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md): Report when a DOM element is using both children and dangerouslySetInnerHTML\n* [react/no-deprecated](docs/rules/no-deprecated.md): Prevent usage of deprecated methods\n* [react/no-did-mount-set-state](docs/rules/no-did-mount-set-state.md): Prevent usage of setState in componentDidMount\n* [react/no-did-update-set-state](docs/rules/no-did-update-set-state.md): Prevent usage of setState in componentDidUpdate\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md): Prevent direct mutation of this.state\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md): Prevent usage of findDOMNode\n* [react/no-is-mounted](docs/rules/no-is-mounted.md): Prevent usage of isMounted\n* [react/no-multi-comp](docs/rules/no-multi-comp.md): Prevent multiple component definition per file\n* [react/no-redundant-should-component-update](docs/rules/no-redundant-should-component-update.md): Flag shouldComponentUpdate when extending PureComponent\n* [react/no-render-return-value](docs/rules/no-render-return-value.md): Prevent usage of the return value of React.render\n* [react/no-set-state](docs/rules/no-set-state.md): Prevent usage of setState\n* [react/no-string-refs](docs/rules/no-string-refs.md): Prevent string definitions for references and prevent referencing this.refs\n* [react/no-this-in-sfc](docs/rules/no-this-in-sfc.md): Report \"this\" being used in stateless components\n* [react/no-typos](docs/rules/no-typos.md): Prevent common typos\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md): Detect unescaped HTML entities, which might represent malformed tags\n* [react/no-unknown-property](docs/rules/no-unknown-property.md): Prevent usage of unknown DOM property (fixable)\n* [react/no-unsafe](docs/rules/no-unsafe.md): Prevent usage of unsafe lifecycle methods\n* [react/no-unused-prop-types](docs/rules/no-unused-prop-types.md): Prevent definitions of unused prop types\n* [react/no-unused-state](docs/rules/no-unused-state.md): Prevent definition of unused state fields\n* [react/no-will-update-set-state](docs/rules/no-will-update-set-state.md): Prevent usage of setState in componentWillUpdate\n* [react/prefer-es6-class](docs/rules/prefer-es6-class.md): Enforce ES5 or ES6 class for React Components\n* [react/prefer-read-only-props](docs/rules/prefer-read-only-props.md): Require read-only props. (fixable)\n* [react/prefer-stateless-function](docs/rules/prefer-stateless-function.md): Enforce stateless components to be written as a pure function\n* [react/prop-types](docs/rules/prop-types.md): Prevent missing props validation in a React component definition\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md): Prevent missing React when using JSX\n* [react/require-default-props](docs/rules/require-default-props.md): Enforce a defaultProps definition for every prop that is not a required prop.\n* [react/require-optimization](docs/rules/require-optimization.md): Enforce React components to have a shouldComponentUpdate method\n* [react/require-render-return](docs/rules/require-render-return.md): Enforce ES5 or ES6 class for returning value in render function\n* [react/self-closing-comp](docs/rules/self-closing-comp.md): Prevent extra closing tags for components without children (fixable)\n* [react/sort-comp](docs/rules/sort-comp.md): Enforce component methods order\n* [react/sort-prop-types](docs/rules/sort-prop-types.md): Enforce propTypes declarations alphabetical sorting\n* [react/state-in-constructor](docs/rules/state-in-constructor.md): State initialization in an ES6 class component should be in a constructor\n* [react/static-property-placement](docs/rules/static-property-placement.md): Defines where React component static properties should be positioned.\n* [react/style-prop-object](docs/rules/style-prop-object.md): Enforce style prop value is an object\n* [react/void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md): Prevent passing of children to void DOM elements (e.g. `<br />`).\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## JSX-specific rules\n\n<!-- AUTO-GENERATED-CONTENT:START (JSX_RULES) -->\n* [react/jsx-boolean-value](docs/rules/jsx-boolean-value.md): Enforce boolean attributes notation in JSX (fixable)\n* [react/jsx-child-element-spacing](docs/rules/jsx-child-element-spacing.md): Ensures inline tags are not rendered without spaces between them\n* [react/jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md): Validate closing bracket location in JSX (fixable)\n* [react/jsx-closing-tag-location](docs/rules/jsx-closing-tag-location.md): Validate closing tag location for multiline JSX (fixable)\n* [react/jsx-curly-brace-presence](docs/rules/jsx-curly-brace-presence.md): Disallow unnecessary JSX expressions when literals alone are sufficient or enfore JSX expressions on literals in JSX children or attributes (fixable)\n* [react/jsx-curly-newline](docs/rules/jsx-curly-newline.md): Enforce consistent line breaks inside jsx curly (fixable)\n* [react/jsx-curly-spacing](docs/rules/jsx-curly-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes (fixable)\n* [react/jsx-equals-spacing](docs/rules/jsx-equals-spacing.md): Disallow or enforce spaces around equal signs in JSX attributes (fixable)\n* [react/jsx-filename-extension](docs/rules/jsx-filename-extension.md): Restrict file extensions that may contain JSX\n* [react/jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md): Ensure proper position of the first property in JSX (fixable)\n* [react/jsx-fragments](docs/rules/jsx-fragments.md): Enforce shorthand or standard form for React fragments (fixable)\n* [react/jsx-handler-names](docs/rules/jsx-handler-names.md): Enforce event handler naming conventions in JSX\n* [react/jsx-indent](docs/rules/jsx-indent.md): Validate JSX indentation (fixable)\n* [react/jsx-indent-props](docs/rules/jsx-indent-props.md): Validate props indentation in JSX (fixable)\n* [react/jsx-key](docs/rules/jsx-key.md): Report missing `key` props in iterators/collection literals\n* [react/jsx-max-depth](docs/rules/jsx-max-depth.md): Validate JSX maximum depth\n* [react/jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md): Limit maximum of props on a single line in JSX (fixable)\n* [react/jsx-no-bind](docs/rules/jsx-no-bind.md): Prevents usage of Function.prototype.bind and arrow functions in React component props\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md): Comments inside children section of tag should be placed inside braces\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md): Enforce no duplicate props\n* [react/jsx-no-literals](docs/rules/jsx-no-literals.md): Prevent using string literals in React component definition\n* [react/jsx-no-script-url](docs/rules/jsx-no-script-url.md): Forbid `javascript:` URLs\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md): Forbid `target=\"_blank\"` attribute without `rel=\"noreferrer\"`\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md): Disallow undeclared variables in JSX\n* [react/jsx-no-useless-fragment](docs/rules/jsx-no-useless-fragment.md): Disallow unnecessary fragments (fixable)\n* [react/jsx-one-expression-per-line](docs/rules/jsx-one-expression-per-line.md): Limit to one expression per line in JSX (fixable)\n* [react/jsx-pascal-case](docs/rules/jsx-pascal-case.md): Enforce PascalCase for user-defined JSX components\n* [react/jsx-props-no-multi-spaces](docs/rules/jsx-props-no-multi-spaces.md): Disallow multiple spaces between inline JSX props (fixable)\n* [react/jsx-props-no-spreading](docs/rules/jsx-props-no-spreading.md): Prevent JSX prop spreading\n* [react/jsx-sort-default-props](docs/rules/jsx-sort-default-props.md): Enforce default props alphabetical sorting\n* [react/jsx-sort-props](docs/rules/jsx-sort-props.md): Enforce props alphabetical sorting (fixable)\n* [react/jsx-space-before-closing](docs/rules/jsx-space-before-closing.md): Validate spacing before closing bracket in JSX (fixable)\n* [react/jsx-tag-spacing](docs/rules/jsx-tag-spacing.md): Validate whitespace in and around the JSX opening and closing brackets (fixable)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md): Prevent React to be marked as unused\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md): Prevent variables used in JSX to be marked as unused\n* [react/jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md): Prevent missing parentheses around multilines JSX (fixable)\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## Other useful plugins\n\n- Rules of Hooks: [eslint-plugin-react-hooks](https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks)\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n# Shareable configurations\n\n## Recommended\n\nThis plugin exports a `recommended` configuration that enforces React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\nThe rules enabled in this configuration are:\n\n* [react/display-name](docs/rules/display-name.md)\n* [react/jsx-key](docs/rules/jsx-key.md)\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md)\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md)\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md)\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md)\n* [react/no-children-prop](docs/rules/no-children-prop.md)\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md)\n* [react/no-deprecated](docs/rules/no-deprecated.md)\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md)\n* [react/no-is-mounted](docs/rules/no-is-mounted.md)\n* [react/no-render-return-value](docs/rules/no-render-return-value.md)\n* [react/no-string-refs](docs/rules/no-string-refs.md)\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md)\n* [react/no-unknown-property](docs/rules/no-unknown-property.md)\n* [react/prop-types](docs/rules/prop-types.md)\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)\n* [react/require-render-return](docs/rules/require-render-return.md)\n\n## All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options).\n\n# License\n\nESLint-plugin-React is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[travis-url]: https://travis-ci.org/yannickcr/eslint-plugin-react\n[travis-image]: https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg\n\n[deps-url]: https://david-dm.org/yannickcr/eslint-plugin-react\n[deps-image]: https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg\n\n[coverage-url]: https://coveralls.io/r/yannickcr/eslint-plugin-react?branch=master\n[coverage-image]: https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg\n\n[climate-url]: https://codeclimate.com/github/yannickcr/eslint-plugin-react\n[climate-image]: https://img.shields.io/codeclimate/maintainability/yannickcr/eslint-plugin-react.svg\n\n[status-url]: https://github.com/yannickcr/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/github/last-commit/yannickcr/eslint-plugin-react.svg\n\n[tidelift-url]: https://tidelift.com/subscription/pkg/npm-eslint-plugin-react?utm_source=npm-eslint-plugin-react&utm_medium=referral&utm_campaign=readme\n[tidelift-image]: https://tidelift.com/badges/github/yannickcr/eslint-plugin-react?style=flat"}, "npm": {"downloads": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1201512}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 6182788}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 26511115}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 76973028}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 131406017}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 235749353}], "dependentsCount": 7031, "starsCount": 95}, "github": {"starsCount": 6300, "forksCount": 1766, "subscribersCount": 91, "issues": {"count": 2639, "openCount": 481, "distribution": {"3600": 255, "10800": 171, "32400": 237, "97200": 272, "291600": 242, "874800": 255, "2624400": 239, "7873200": 191, "23619600": 221, "70858800": 291, "212576400": 265}, "isDisabled": false}, "contributors": [{"username": "yannickcr", "commitsCount": 510}, {"username": "ljharb", "commitsCount": 169}, {"username": "jseminck", "commitsCount": 87}, {"username": "alexzherdev", "commitsCount": 66}, {"username": "jackyho112", "commitsCount": 63}, {"username": "lencioni", "commitsCount": 50}, {"username": "golopot", "commitsCount": 45}, {"username": "jomasti", "commitsCount": 44}, {"username": "sergei-startsev", "commitsCount": 20}, {"username": "pfhayes", "commitsCount": 19}, {"username": "DianaSuvorova", "commitsCount": 18}, {"username": "TSMMark", "commitsCount": 15}, {"username": "petersendidit", "commitsCount": 14}, {"username": "webOS101", "commitsCount": 13}, {"username": "CalebMorris", "commitsCount": 12}, {"username": "ThiefMaster", "commitsCount": 12}, {"username": "snowypowers", "commitsCount": 12}, {"username": "fatfisz", "commitsCount": 11}, {"username": "yepninja", "commitsCount": 11}, {"username": "brettdh", "commitsCount": 10}, {"username": "jaaberg", "commitsCount": 10}, {"username": "AlexKVal", "commitsCount": 9}, {"username": "dustinsoftware", "commitsCount": 9}, {"username": "drx", "commitsCount": 8}, {"username": "justinanastos", "commitsCount": 8}, {"username": "deecewan", "commitsCount": 7}, {"username": "lukyth", "commitsCount": 7}, {"username": "zertosh", "commitsCount": 7}, {"username": "Daniel15", "commitsCount": 6}, {"username": "RDGthree", "commitsCount": 6}, {"username": "arperry", "commitsCount": 6}, {"username": "dfilipidisz", "commitsCount": 6}, {"username": "kentor", "commitsCount": 6}, {"username": "vitorbal", "commitsCount": 6}, {"username": "Cellule", "commitsCount": 5}, {"username": "EvHaus", "commitsCount": 5}, {"username": "haridusenadeera", "commitsCount": 5}, {"username": "kaykayehnn", "commitsCount": 5}, {"username": "tanmoyopenroot", "commitsCount": 5}, {"username": "toshi-toma", "commitsCount": 5}, {"username": "yuri-sakharov", "commitsCount": 5}, {"username": "Calyhre", "commitsCount": 4}, {"username": "ColCh", "commitsCount": 4}, {"username": "Hypnosphi", "commitsCount": 4}, {"username": "b0gok", "commitsCount": 4}, {"username": "benstepp", "commitsCount": 4}, {"username": "davazp", "commitsCount": 4}, {"username": "eelyafi", "commitsCount": 4}, {"username": "ferhatelmas", "commitsCount": 4}, {"username": "gbakernet", "commitsCount": 4}, {"username": "himynameisdave", "commitsCount": 4}, {"username": "nosilleg", "commitsCount": 4}, {"username": "pawelnvk", "commitsCount": 4}, {"username": "silvenon", "commitsCount": 4}, {"username": "vedadeepta", "commitsCount": 4}, {"username": "ManThursday", "commitsCount": 3}, {"username": "Miziak", "commitsCount": 3}, {"username": "MrHen", "commitsCount": 3}, {"username": "Slumber86", "commitsCount": 3}, {"username": "amerryma", "commitsCount": 3}, {"username": "benmosher", "commitsCount": 3}, {"username": "christophehurpeau", "commitsCount": 3}, {"username": "davidyorr", "commitsCount": 3}, {"username": "dguo", "commitsCount": 3}, {"username": "dreid", "commitsCount": 3}, {"username": "ethanjgoldberg", "commitsCount": 3}, {"username": "evcohen", "commitsCount": 3}, {"username": "gfx", "commitsCount": 3}, {"username": "gitim", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "jakemmarsh", "commitsCount": 3}, {"username": "jenil94", "commitsCount": 3}, {"username": "jetpacmonkey", "commitsCount": 3}, {"username": "jkimbo", "commitsCount": 3}, {"username": "jsnajdr", "commitsCount": 3}, {"username": "louisscruz", "commitsCount": 3}, {"username": "lynxtaa", "commitsCount": 3}, {"username": "marcelmokos", "commitsCount": 3}, {"username": "mathieumg", "commitsCount": 3}, {"username": "pwmckenna", "commitsCount": 3}, {"username": "randycoulman", "commitsCount": 3}, {"username": "shmuga", "commitsCount": 3}, {"username": "wbinnssmith", "commitsCount": 3}, {"username": "wyze", "commitsCount": 3}, {"username": "xeodou", "commitsCount": 3}, {"username": "ybiquitous", "commitsCount": 3}, {"username": "abhishekdev", "commitsCount": 2}, {"username": "coryhouse", "commitsCount": 2}, {"username": "dmason30", "commitsCount": 2}, {"username": "doochik", "commitsCount": 2}, {"username": "dozoisch", "commitsCount": 2}, {"username": "fleischie", "commitsCount": 2}, {"username": "flyerhzm", "commitsCount": 2}, {"username": "guliashvili", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "nicholas-l", "commitsCount": 2}, {"username": "rafbgarcia", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}], "commits": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 7}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 28}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 71}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 183}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 17091, "testsSize": 1324365, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-react.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "service": "https://api.travis-ci.org/yannickcr/eslint-plugin-react.svg?branch=master", "shields": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "service": "https://david-dm.org/yannickcr/eslint-plugin-react/dev-status.svg", "shields": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "content": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "service": "https://coveralls.io/repos/yannickcr/eslint-plugin-react/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"doctrine": {"required": "^2.1.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 0.8181818181818181, "branding": 0.6}, "popularity": {"communityInterest": 8352, "downloadsCount": 25657676, "downloadsAcceleration": 80489.99609969562, "dependentsCount": 7031}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8115685725586471, "detail": {"quality": 0.996031867393306, "popularity": 0.798359082878063, "maintenance": 0.6666666666666666}}}}, {"express": {"analyzedAt": "2020-05-08T05:03:35.750Z", "collected": {"metadata": {"name": "express", "scope": "unscoped", "version": "4.17.1", "description": "Fast, unopinionated, minimalist web framework", "keywords": ["express", "framework", "sinatra", "web", "rest", "restful", "router", "app", "api"], "date": "2019-05-26T04:25:34.606Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "dougwilson", "email": "doug@somethingdoug.com"}, "maintainers": [{"username": "dougwilson", "email": "doug@somethingdoug.com"}, {"username": "jasnell", "email": "jasnell@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}], "contributors": [{"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Ciaran Jessup", "email": "ciaranj@gmail.com"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "Jonathan Ong", "email": "me@jongleberry.com"}, {"name": "Roman Shtylman", "email": "shtylman+expressjs@gmail.com"}, {"name": "Young Jae Sim", "email": "hanul@hanul.me"}], "repository": {"type": "git", "url": "git+https://github.com/expressjs/express.git"}, "links": {"npm": "https://www.npmjs.com/package/express", "homepage": "http://expressjs.com/", "repository": "https://github.com/expressjs/express", "bugs": "https://github.com/expressjs/express/issues"}, "license": "MIT", "dependencies": {"accepts": "~1.3.7", "array-flatten": "1.1.1", "body-parser": "1.19.0", "content-disposition": "0.5.3", "content-type": "~1.0.4", "cookie": "0.4.0", "cookie-signature": "1.0.6", "debug": "2.6.9", "depd": "~1.1.2", "encodeurl": "~1.0.2", "escape-html": "~1.0.3", "etag": "~1.8.1", "finalhandler": "~1.1.2", "fresh": "0.5.2", "merge-descriptors": "1.0.1", "methods": "~1.1.2", "on-finished": "~2.3.0", "parseurl": "~1.3.3", "path-to-regexp": "0.1.7", "proxy-addr": "~2.0.5", "qs": "6.7.0", "range-parser": "~1.2.1", "safe-buffer": "5.1.2", "send": "0.17.1", "serve-static": "1.14.1", "setprototypeof": "1.1.1", "statuses": "~1.5.0", "type-is": "~1.6.18", "utils-merge": "1.0.1", "vary": "~1.1.2"}, "devDependencies": {"after": "0.8.2", "connect-redis": "3.4.1", "cookie-parser": "~1.4.4", "cookie-session": "1.3.3", "ejs": "2.6.1", "eslint": "2.13.1", "express-session": "1.16.1", "hbs": "4.0.4", "istanbul": "0.4.5", "marked": "0.6.2", "method-override": "3.0.0", "mocha": "5.2.0", "morgan": "1.9.1", "multiparty": "4.2.1", "pbkdf2-password": "1.2.1", "should": "13.2.3", "supertest": "3.3.0", "vhost": "~3.0.2"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2307451}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11993809}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 53669402}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 156293931}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 286493501}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 543332689}], "dependentsCount": 32310, "starsCount": 2567}, "github": {"homepage": "https://expressjs.com", "starsCount": 48503, "forksCount": 8095, "subscribersCount": 1820, "issues": {"count": 4248, "openCount": 152, "distribution": {"3600": 1086, "10800": 370, "32400": 429, "97200": 475, "291600": 336, "874800": 310, "2624400": 304, "7873200": 291, "23619600": 300, "70858800": 203, "212576400": 144}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 3527}, {"username": "dougwilson", "commitsCount": 987}, {"username": "jonathanong", "commitsCount": 65}, {"username": "defunctzombie", "commitsCount": 54}, {"username": "aheckmann", "commitsCount": 49}, {"username": "slaskis", "commitsCount": 21}, {"username": "ciaranj", "commitsCount": 16}, {"username": "blakeembrey", "commitsCount": 8}, {"username": "notrab", "commitsCount": 8}, {"username": "gmethvin", "commitsCount": 6}, {"username": "rauchg", "commitsCount": 6}, {"username": "riadhchtara", "commitsCount": 6}, {"username": "hiowenluke", "commitsCount": 5}, {"username": "swrh", "commitsCount": 5}, {"username": "chainhelen", "commitsCount": 4}, {"username": "kapouer", "commitsCount": 4}, {"username": "sorribas", "commitsCount": 4}, {"username": "wesleytodd", "commitsCount": 4}, {"username": "Fishrock123", "commitsCount": 3}, {"username": "crandmck", "commitsCount": 3}, {"username": "davglass", "commitsCount": 3}, {"username": "nick", "commitsCount": 3}, {"username": "nullfirm", "commitsCount": 3}, {"username": "oliversalzburg", "commitsCount": 3}, {"username": "sakateka", "commitsCount": 3}, {"username": "Hanul", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "Zoramite", "commitsCount": 2}, {"username": "agchou", "commitsCount": 2}, {"username": "angelsanz", "commitsCount": 2}, {"username": "bartsqueezy", "commitsCount": 2}, {"username": "bdotdub", "commitsCount": 2}, {"username": "benatkin", "commitsCount": 2}, {"username": "damphat", "commitsCount": 2}, {"username": "dpatti", "commitsCount": 2}, {"username": "dshaw", "commitsCount": 2}, {"username": "eivindfjeldstad", "commitsCount": 2}, {"username": "ericf", "commitsCount": 2}, {"username": "felixbuenemann", "commitsCount": 2}, {"username": "hacksparrow", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jakeg", "commitsCount": 2}, {"username": "jonjenkins", "commitsCount": 2}, {"username": "kavu", "commitsCount": 2}, {"username": "matheusazzi", "commitsCount": 2}, {"username": "redsquirrel", "commitsCount": 2}, {"username": "relvao", "commitsCount": 2}, {"username": "roark31337", "commitsCount": 2}, {"username": "saintedlama", "commitsCount": 2}, {"username": "seanjsong", "commitsCount": 2}, {"username": "shime", "commitsCount": 2}, {"username": "tritonrc", "commitsCount": 2}, {"username": "watch-the-stars", "commitsCount": 2}, {"username": "weaver", "commitsCount": 2}, {"username": "yamatt", "commitsCount": 2}, {"username": "A1vinSmith", "commitsCount": 1}, {"username": "AScriver", "commitsCount": 1}, {"username": "HubCodes", "commitsCount": 1}, {"username": "Jianru-Lin", "commitsCount": 1}, {"username": "KoyamaSohei", "commitsCount": 1}, {"username": "Lysander6", "commitsCount": 1}, {"username": "TomHoss", "commitsCount": 1}, {"username": "WORMSS", "commitsCount": 1}, {"username": "ZLester", "commitsCount": 1}, {"username": "adisrivas", "commitsCount": 1}, {"username": "amfern", "commitsCount": 1}, {"username": "amitzur", "commitsCount": 1}, {"username": "ankon", "commitsCount": 1}, {"username": "asafdav2", "commitsCount": 1}, {"username": "baslr", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chillypepper", "commitsCount": 1}, {"username": "cirosantilli", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "davidwood", "commitsCount": 1}, {"username": "estrada9166", "commitsCount": 1}, {"username": "flxwu", "commitsCount": 1}, {"username": "g-k", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iconoeugen", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jeonghwan-kim", "commitsCount": 1}, {"username": "joshuacaron", "commitsCount": 1}, {"username": "kunalspathak", "commitsCount": 1}, {"username": "loganripplinger", "commitsCount": 1}, {"username": "lpage", "commitsCount": 1}, {"username": "mwanago", "commitsCount": 1}, {"username": "nacimgoura", "commitsCount": 1}, {"username": "oztune", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "potato4d", "commitsCount": 1}, {"username": "pravdomil", "commitsCount": 1}, {"username": "seppevs", "commitsCount": 1}, {"username": "stevenanthonyrevo", "commitsCount": 1}, {"username": "thevoidf", "commitsCount": 1}, {"username": "tonyspb", "commitsCount": 1}, {"username": "tunniclm", "commitsCount": 1}, {"username": "yaman-jain", "commitsCount": 1}, {"username": "yanokenken", "commitsCount": 1}, {"username": "zuohuadong", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 0}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 7}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 19}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 34}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 376367, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 1, "outdatedDependencies": {"cookie-signature": {"required": "1.0.6", "stable": "1.1.0", "latest": "1.1.0"}, "array-flatten": {"required": "1.1.1", "stable": "3.0.0", "latest": "3.0.0"}, "setprototypeof": {"required": "1.1.1", "stable": "1.2.0", "latest": "1.2.0"}, "cookie": {"required": "0.4.0", "stable": "0.4.1", "latest": "0.4.1"}, "depd": {"required": "~1.1.2", "stable": "2.0.0", "latest": "2.0.0"}, "safe-buffer": {"required": "5.1.2", "stable": "5.2.0", "latest": "5.2.0"}, "statuses": {"required": "~1.5.0", "stable": "2.0.0", "latest": "2.0.0"}, "path-to-regexp": {"required": "0.1.7", "stable": "6.1.0", "latest": "6.1.0"}, "debug": {"required": "2.6.9", "stable": "4.1.1", "latest": "4.1.1"}, "qs": {"required": "6.7.0", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 61085, "downloadsCount": 52097977, "downloadsAcceleration": 100861.30214992393, "dependentsCount": 32310}, "maintenance": {"releasesFrequency": 0.8678082191780823, "commitsFrequency": 0.766695205479452, "openIssues": 1, "issuesDistribution": 0.30467759825367907}}, "score": {"final": 0.9203394495017267, "detail": {"quality": 0.8830939958089009, "popularity": 0.9428493544843415, "maintenance": 0.9297542191129629}}}}, {"webpack-dev-server": {"analyzedAt": "2020-05-08T18:02:44.155Z", "collected": {"metadata": {"name": "webpack-dev-server", "scope": "unscoped", "version": "3.11.0", "description": "Serves a webpack app. Updates the browser on changes.", "date": "2020-05-08T15:17:35.787Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "hiroppy", "email": "hello@hiroppy.me"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-dev-server.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-dev-server", "homepage": "https://github.com/webpack/webpack-dev-server#readme", "repository": "https://github.com/webpack/webpack-dev-server", "bugs": "https://github.com/webpack/webpack-dev-server/issues"}, "license": "MIT", "dependencies": {"ansi-html": "0.0.7", "bonjour": "^3.5.0", "chokidar": "^2.1.8", "compression": "^1.7.4", "connect-history-api-fallback": "^1.6.0", "debug": "^4.1.1", "del": "^4.1.1", "express": "^4.17.1", "html-entities": "^1.3.1", "http-proxy-middleware": "0.19.1", "import-local": "^2.0.0", "internal-ip": "^4.3.0", "ip": "^1.1.5", "is-absolute-url": "^3.0.3", "killable": "^1.0.1", "loglevel": "^1.6.8", "opn": "^5.5.0", "p-retry": "^3.0.1", "portfinder": "^1.0.26", "schema-utils": "^1.0.0", "selfsigned": "^1.10.7", "semver": "^6.3.0", "serve-index": "^1.9.1", "sockjs": "0.3.20", "sockjs-client": "1.4.0", "spdy": "^4.0.2", "strip-ansi": "^3.0.1", "supports-color": "^6.1.0", "url": "^0.11.0", "webpack-dev-middleware": "^3.7.2", "webpack-log": "^2.0.0", "ws": "^6.2.1", "yargs": "^13.3.2"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/runtime": "^7.9.6", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "babel-loader": "^8.1.0", "body-parser": "^1.19.0", "commitlint-azure-pipelines-cli": "^1.0.3", "copy-webpack-plugin": "^5.1.1", "css-loader": "^2.1.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-config-webpack": "^1.2.5", "eslint-plugin-import": "^2.20.2", "execa": "^1.0.0", "file-loader": "^5.1.0", "html-loader": "^0.5.5", "html-webpack-plugin": "^3.2.0", "husky": "^4.2.5", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.5.1", "less": "^3.11.1", "less-loader": "^5.0.0", "lint-staged": "^10.2.2", "marked": "^0.8.2", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "puppeteer": "^1.20.0", "rimraf": "^3.0.2", "standard-version": "^8.0.0", "style-loader": "^1.2.1", "supertest": "^4.0.2", "tcp-port-used": "^1.0.1", "typescript": "^3.8.3", "url-loader": "^3.0.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 0}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 0}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 16}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 33}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![downloads][downloads]][npm-url]\n[![contributors][contributors]][contributors-url]\n\n# webpack-dev-server\n\nUse [webpack](https://webpack.js.org) with a development server that provides\nlive reloading. This should be used for **development only**.\n\nIt uses [webpack-dev-middleware][middleware-url] under the hood, which provides\nfast in-memory access to the webpack assets.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Usage](#usage)\n  - [With the CLI](#with-the-cli)\n  - [With NPM Scripts](#with-npm-scripts)\n  - [The Result](#the-result)\n- [Browser Support](#browser-support)\n- [Support](#support)\n- [Contributing](#contributing)\n- [Attribution](#attribution)\n- [License](#license)\n\n## Getting Started\n\nFirst things first, install the module:\n\n```console\nnpm install webpack-dev-server --save-dev\n```\n\n_Note: While you can install and run webpack-dev-server globally, we recommend\ninstalling it locally. webpack-dev-server will always use a local installation\nover a global one._\n\n## Usage\n\nThere are two main, recommended methods of using the module:\n\n### With the CLI\n\nThe easiest way to use it is with the CLI. In the directory where your\n`webpack.config.js` is, run:\n\n```console\nnode_modules/.bin/webpack-dev-server\n```\n\n_**Note**: Many CLI options are available with `webpack-dev-server`. Explore this [link](https://webpack.js.org/configuration/dev-server/)._\n\n### With NPM Scripts\n\nNPM package.json scripts are a convenient and useful means to run locally installed\nbinaries without having to be concerned about their full paths. Simply define a\nscript as such:\n\n```json\n\"scripts\": {\n  \"start:dev\": \"webpack-dev-server\"\n}\n```\n\nAnd run the following in your terminal/console:\n\n```console\nnpm run start:dev\n```\n\nNPM will automagically reference the binary in `node_modules` for you, and\nexecute the file or command.\n\n### The Result\n\nEither method will start a server instance and begin listening for connections\nfrom `localhost` on port `8080`.\n\nwebpack-dev-server is configured by default to support live-reload of files as\nyou edit your assets while the server is running.\n\nSee [**the documentation**][docs-url] for more use cases and options.\n\n## Browser Support\n\nWhile `webpack-dev-server` transpiles the client (browser) scripts to an ES5\nstate, the project only officially supports the _last two versions of major\nbrowsers_. We simply don't have the resources to support every whacky\nbrowser out there.\n\nIf you find a bug with an obscure / old browser, we would actively welcome a\nPull Request to resolve the bug.\n\n## Support\n\nWe do our best to keep Issues in the repository focused on bugs, features, and\nneeded modifications to the code for the module. Because of that, we ask users\nwith general support, \"how-to\", or \"why isn't this working\" questions to try one\nof the other support channels that are available.\n\nYour first-stop-shop for support for webpack-dev-server should by the excellent\n[documentation][docs-url] for the module. If you see an opportunity for improvement\nof those docs, please head over to the [webpack.js.org repo][wjo-url] and open a\npull request.\n\nFrom there, we encourage users to visit the [webpack Gitter chat][chat-url] and\ntalk to the fine folks there. If your quest for answers comes up dry in chat,\nhead over to [StackOverflow][stack-url] and do a quick search or open a new\nquestion. Remember; It's always much easier to answer questions that include your\n`webpack.config.js` and relevant files!\n\nIf you're twitter-savvy you can tweet [#webpack][hash-url] with your question\nand someone should be able to reach out and lend a hand.\n\nIf you have discovered a :bug:, have a feature suggestion, or would like to see\na modification, please feel free to create an issue on Github. _Note: The issue\ntemplate isn't optional, so please be sure not to remove it, and please fill it\nout completely._\n\n## Contributing\n\nWe welcome your contributions! Please have a read of [CONTRIBUTING.md](CONTRIBUTING.md) for more information on how to get involved.\n\n## Attribution\n\nThis project is heavily inspired by [peerigon/nof5](https://github.com/peerigon/nof5).\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-dev-server.svg\n[npm-url]: https://npmjs.com/package/webpack-dev-server\n[node]: https://img.shields.io/node/v/webpack-dev-server.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack/webpack-dev-server.svg\n[deps-url]: https://david-dm.org/webpack/webpack-dev-server\n[tests]: https://dev.azure.com/webpack/webpack-dev-server/_apis/build/status/webpack.webpack-dev-server?branchName=master\n[tests-url]: https://dev.azure.com/webpack/webpack-dev-server/_build/latest?definitionId=7&branchName=master\n[cover]: https://codecov.io/gh/webpack/webpack-dev-server/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/webpack-dev-server\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[docs-url]: https://webpack.js.org/configuration/dev-server/#devserver\n[hash-url]: https://twitter.com/search?q=webpack\n[middleware-url]: https://github.com/webpack/webpack-dev-middleware\n[stack-url]: https://stackoverflow.com/questions/tagged/webpack-dev-server\n[uglify-url]: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n[wjo-url]: https://github.com/webpack/webpack.js.org\n[downloads]: https://img.shields.io/npm/dm/webpack-dev-server.svg\n[contributors-url]: https://github.com/webpack/webpack-dev-server/graphs/contributors\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-dev-server.svg"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1312563}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6652507}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 29813802}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 86807272}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 153094910}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 281209991}], "dependentsCount": 6721, "starsCount": 130}, "github": {"starsCount": 6227, "forksCount": 1093, "subscribersCount": 113, "issues": {"count": 2564, "openCount": 80, "distribution": {"3600": 349, "10800": 162, "32400": 189, "97200": 288, "291600": 268, "874800": 289, "2624400": 284, "7873200": 268, "23619600": 264, "70858800": 194, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "SpaceK33z", "commitsCount": 213}, {"username": "sokra", "commitsCount": 146}, {"username": "hiroppy", "commitsCount": 79}, {"username": "evilebottnawi", "commitsCount": 71}, {"username": "renovate[bot]", "commitsCount": 53}, {"username": "shellscape", "commitsCount": 48}, {"username": "Loonride", "commitsCount": 44}, {"username": "michael-ciniawsky", "commitsCount": 23}, {"username": "EslamHiko", "commitsCount": 11}, {"username": "SimenB", "commitsCount": 4}, {"username": "jamesgeorge007", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "mrsharpoblunto", "commitsCount": 4}, {"username": "nougad", "commitsCount": 4}, {"username": "yyx990803", "commitsCount": 4}, {"username": "3846masa", "commitsCount": 3}, {"username": "anikethsaha", "commitsCount": 3}, {"username": "arnihermann", "commitsCount": 3}, {"username": "filipesilva", "commitsCount": 3}, {"username": "jhnns", "commitsCount": 3}, {"username": "stutrek", "commitsCount": 3}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 3}, {"username": "MatthiasWinkelmann", "commitsCount": 2}, {"username": "Telokis", "commitsCount": 2}, {"username": "YoshinoriN", "commitsCount": 2}, {"username": "aves84", "commitsCount": 2}, {"username": "bhavya9107", "commitsCount": 2}, {"username": "chentsulin", "commitsCount": 2}, {"username": "coltonw", "commitsCount": 2}, {"username": "crohde7707", "commitsCount": 2}, {"username": "edi9999", "commitsCount": 2}, {"username": "elliottsj", "commitsCount": 2}, {"username": "everett1992", "commitsCount": 2}, {"username": "glenjamin", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koba04", "commitsCount": 2}, {"username": "mistic", "commitsCount": 2}, {"username": "mjackson", "commitsCount": 2}, {"username": "nekolab", "commitsCount": 2}, {"username": "odinho", "commitsCount": 2}, {"username": "orteth01", "commitsCount": 2}, {"username": "phairoh", "commitsCount": 2}, {"username": "radotzki", "commitsCount": 2}, {"username": "rishabh3112", "commitsCount": 2}, {"username": "ryanwholey", "commitsCount": 2}, {"username": "snitin315", "commitsCount": 2}, {"username": "svsool", "commitsCount": 2}, {"username": "troutowicz", "commitsCount": 2}, {"username": "usefulthink", "commitsCount": 2}, {"username": "watsoncj", "commitsCount": 2}, {"username": "yoannmoinet", "commitsCount": 2}, {"username": "zeen", "commitsCount": 2}, {"username": "zhangyuang", "commitsCount": 2}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "Ionaru", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "berthertogen", "commitsCount": 1}, {"username": "cben", "commitsCount": 1}, {"username": "chaos-git", "commitsCount": 1}, {"username": "digitaljohn", "commitsCount": 1}, {"username": "dmohns", "commitsCount": 1}, {"username": "elrumordelaluz", "commitsCount": 1}, {"username": "ematipico", "commitsCount": 1}, {"username": "ferdinando-ferreira", "commitsCount": 1}, {"username": "gabemeola", "commitsCount": 1}, {"username": "greim", "commitsCount": 1}, {"username": "heygrady", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jayjun", "commitsCount": 1}, {"username": "jdb8", "commitsCount": 1}, {"username": "jkrehm", "commitsCount": 1}, {"username": "jleifeld", "commitsCount": 1}, {"username": "jlguenego", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "joonas-lahtinen", "commitsCount": 1}, {"username": "jvasseur", "commitsCount": 1}, {"username": "lukebro", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "marcofugaro", "commitsCount": 1}, {"username": "mlrawlings", "commitsCount": 1}, {"username": "niedzielski", "commitsCount": 1}, {"username": "numb86", "commitsCount": 1}, {"username": "oNaiPs", "commitsCount": 1}, {"username": "orenfromberg", "commitsCount": 1}, {"username": "patrickhrastnik", "commitsCount": 1}, {"username": "pranshuchittora", "commitsCount": 1}, {"username": "rajkeshwar", "commitsCount": 1}, {"username": "rlamana", "commitsCount": 1}, {"username": "roblan", "commitsCount": 1}, {"username": "samsam2310", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "smelukov", "commitsCount": 1}, {"username": "sottar", "commitsCount": 1}, {"username": "tarrall", "commitsCount": 1}, {"username": "trescenzi", "commitsCount": 1}, {"username": "wood1986", "commitsCount": 1}, {"username": "yi-ge", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 10}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 33}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 76}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 304}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 5925, "testsSize": 336126, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/v/webpack-dev-server.svg", "content": "https://img.shields.io/npm/v/webpack-dev-server.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack/webpack-dev-server.svg", "service": "https://david-dm.org/webpack/webpack-dev-server.svg", "shields": "https://img.shields.io/david/webpack/webpack-dev-server.svg", "content": "https://img.shields.io/david/webpack/webpack-dev-server.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "content": "https://img.shields.io/npm/dm/webpack-dev-server.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"import-local": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "internal-ip": {"required": "^4.3.0", "stable": "6.0.0", "latest": "6.0.0"}, "strip-ansi": {"required": "^3.0.1", "stable": "6.0.0", "latest": "6.0.0"}, "p-retry": {"required": "^3.0.1", "stable": "4.2.0", "latest": "4.2.0"}, "webpack-log": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "opn": {"required": "^5.5.0", "stable": "6.0.0", "latest": "6.0.0"}, "del": {"required": "^4.1.1", "stable": "5.1.0", "latest": "5.1.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.6.6", "latest": "2.6.6"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "ws": {"required": "^6.2.1", "stable": "7.2.5", "latest": "7.2.5"}, "http-proxy-middleware": {"required": "0.19.1", "stable": "1.0.3", "latest": "1.0.3"}, "yargs": {"required": "^13.3.2", "stable": "15.3.1", "latest": "15.3.2-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 7663, "downloadsCount": 28935757.333333332, "downloadsAcceleration": 75861.00369101981, "dependentsCount": 6721}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.5354263641189586}}, "score": {"final": 0.9063069377945776, "detail": {"quality": 0.9373153428394709, "popularity": 0.7963430084212646, "maintenance": 0.9896922342722683}}}}, {"webpack-cli": {"analyzedAt": "2020-05-07T11:12:42.992Z", "collected": {"metadata": {"name": "webpack-cli", "scope": "unscoped", "version": "3.3.11", "description": "CLI for webpack & friends", "keywords": ["webpack", "cli", "scaffolding", "module", "bundler", "web"], "date": "2020-02-11T18:52:56.094Z", "publisher": {"username": "ematipico", "email": "my.burning@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ematipico", "email": "my.burning@gmail.com"}, {"username": "ev1stensberg", "email": "evenstensberg@gmail.com"}, {"username": "sendilkumarn", "email": "sendilkumarn@live.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-cli", "homepage": "https://github.com/webpack/webpack-cli#readme", "repository": "https://github.com/webpack/webpack-cli", "bugs": "https://github.com/webpack/webpack-cli/issues"}, "license": "MIT", "dependencies": {"chalk": "2.4.2", "cross-spawn": "6.0.5", "enhanced-resolve": "4.1.0", "findup-sync": "3.0.0", "global-modules": "2.0.0", "import-local": "2.0.0", "interpret": "1.2.0", "loader-utils": "1.2.3", "supports-color": "6.1.0", "v8-compile-cache": "2.0.3", "yargs": "13.2.4"}, "devDependencies": {"@babel/preset-env": "^7.8.3", "@babel/register": "7.8.3", "@commitlint/cli": "8.1.0", "@commitlint/config-lerna-scopes": "8.0.0", "@commitlint/travis-cli": "8.0.0", "@strictsoftware/typedoc-plugin-monorepo": "0.2.1", "@types/jest": "24.9.1", "@types/node": "12.0.8", "@typescript-eslint/eslint-plugin": "1.10.2", "@typescript-eslint/parser": "1.10.2", "babel-preset-env": "^1.7.0", "babel-preset-jest": "24.9.0", "codecov": "3.5.0", "commitizen": "4.0.3", "commitlint": "^8.1.0", "commitlint-config-cz": "0.12.0", "conventional-changelog-cli": "2.0.21", "cz-customizable": "6.2.0", "eslint": "5.16.0", "eslint-config-prettier": "5.0.0", "eslint-plugin-node": "9.1.0", "eslint-plugin-prettier": "3.1.0", "esm": "3.2.25", "execa": "1.0.0", "husky": "2.4.1", "jest": "24.9.0", "jest-cli": "24.9.0", "jest-junit": "6.4.0", "lerna": "3.15.0", "lint-staged": "8.2.1", "nyc": "14.1.1", "prettier": "1.18.2", "prettier-eslint-cli": "5.0.0", "readable-stream": "3.4.0", "rimraf": "2.6.3", "schema-utils": "1.0.0", "ts-jest": "24.0.2", "ts-node": "8.3.0", "typescript": "3.5.2", "webpack": "4.x.x", "webpack-dev-server": "3.7.2"}, "peerDependencies": {"webpack": "4.x.x"}, "releases": [{"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 7}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 9}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 18}, {"from": "2018-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 53}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 756033}, {"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 3773861}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 16838973}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 48388289}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 83254510}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 147332329}], "dependentsCount": 2496, "starsCount": 10}, "github": {"homepage": "https://webpack.js.org/api/cli", "starsCount": 1829, "forksCount": 344, "subscribersCount": 53, "issues": {"count": 1521, "openCount": 97, "distribution": {"3600": 150, "10800": 63, "32400": 141, "97200": 212, "291600": 247, "874800": 216, "2624400": 180, "7873200": 161, "23619600": 87, "70858800": 61, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "evenstensberg", "commitsCount": 449}, {"username": "dhruvdutt", "commitsCount": 123}, {"username": "rishabh3112", "commitsCount": 108}, {"username": "anshumanv", "commitsCount": 74}, {"username": "jamesgeorge007", "commitsCount": 72}, {"username": "ematipico", "commitsCount": 66}, {"username": "misterdev", "commitsCount": 60}, {"username": "Loonride", "commitsCount": 58}, {"username": "pranshuchittora", "commitsCount": 46}, {"username": "hemal7735", "commitsCount": 39}, {"username": "snitin315", "commitsCount": 31}, {"username": "anikethsaha", "commitsCount": 22}, {"username": "abenezerabebe", "commitsCount": 19}, {"username": "okonet", "commitsCount": 19}, {"username": "lakatostamas", "commitsCount": 16}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "sendilkumarn", "commitsCount": 13}, {"username": "DanielaValero", "commitsCount": 10}, {"username": "kingdaro", "commitsCount": 10}, {"username": "pksjce", "commitsCount": 8}, {"username": "evilebottnawi", "commitsCount": 7}, {"username": "godcrampy", "commitsCount": 7}, {"username": "EvsChen", "commitsCount": 6}, {"username": "DanielRuf", "commitsCount": 5}, {"username": "EugeneHlushko", "commitsCount": 5}, {"username": "nilliams", "commitsCount": 5}, {"username": "PlayMa256", "commitsCount": 4}, {"username": "bitpshr", "commitsCount": 4}, {"username": "dylanonelson", "commitsCount": 4}, {"username": "sokra", "commitsCount": 4}, {"username": "TheLarkInn", "commitsCount": 3}, {"username": "anu-007", "commitsCount": 3}, {"username": "jbottigliero", "commitsCount": 3}, {"username": "ryanclark", "commitsCount": 3}, {"username": "smelukov", "commitsCount": 3}, {"username": "avivr", "commitsCount": 2}, {"username": "himanshu010", "commitsCount": 2}, {"username": "jayjun", "commitsCount": 2}, {"username": "julioxavierr", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "AjayPoshak", "commitsCount": 1}, {"username": "AviVahl", "commitsCount": 1}, {"username": "BrooonS", "commitsCount": 1}, {"username": "CroMarmot", "commitsCount": 1}, {"username": "FadySamirSadek", "commitsCount": 1}, {"username": "Mistyyyy", "commitsCount": 1}, {"username": "NaviMarella", "commitsCount": 1}, {"username": "Parikshit-Hooda", "commitsCount": 1}, {"username": "Zarthus", "commitsCount": 1}, {"username": "aman29271", "commitsCount": 1}, {"username": "amitport", "commitsCount": 1}, {"username": "andersk", "commitsCount": 1}, {"username": "armujahid", "commitsCount": 1}, {"username": "atenni", "commitsCount": 1}, {"username": "axe312ger", "commitsCount": 1}, {"username": "azure-pipelines[bot]", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "chaseadamsio", "commitsCount": 1}, {"username": "connorjclark", "commitsCount": 1}, {"username": "davidstaheli", "commitsCount": 1}, {"username": "dfederm", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eavichay", "commitsCount": 1}, {"username": "fokusferit", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "harikrishnana2021", "commitsCount": 1}, {"username": "ianjsikes", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jeffin143", "commitsCount": 1}, {"username": "jevancc", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kabirbaidhya", "commitsCount": 1}, {"username": "karanjthakkar", "commitsCount": 1}, {"username": "liquidslr", "commitsCount": 1}, {"username": "manu-chroma", "commitsCount": 1}, {"username": "mohitm15", "commitsCount": 1}, {"username": "noscripter", "commitsCount": 1}, {"username": "ohana54", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "pastak", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "peter-mouland", "commitsCount": 1}, {"username": "prod3v3loper", "commitsCount": 1}, {"username": "qkdreyer", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "robertjmason", "commitsCount": 1}, {"username": "rossipedia", "commitsCount": 1}, {"username": "sfger", "commitsCount": 1}, {"username": "stephtr", "commitsCount": 1}, {"username": "sumit-gupta91", "commitsCount": 1}, {"username": "tabrindle", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "vagisha-nidhi", "commitsCount": 1}, {"username": "xlozinguez", "commitsCount": 1}, {"username": "xxczaki", "commitsCount": 1}], "commits": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 38}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 162}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 218}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 604}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 174483, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.47, "outdatedDependencies": {"interpret": {"required": "1.2.0", "stable": "2.0.0", "latest": "2.0.0"}, "findup-sync": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "import-local": {"required": "2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "supports-color": {"required": "6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "loader-utils": {"required": "1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "v8-compile-cache": {"required": "2.0.3", "stable": "2.1.0", "latest": "2.1.0"}, "cross-spawn": {"required": "6.0.5", "stable": "7.0.2", "latest": "7.0.2"}, "chalk": {"required": "2.4.2", "stable": "4.0.0", "latest": "4.0.0"}, "enhanced-resolve": {"required": "4.1.0", "stable": "4.1.1", "latest": "5.0.0-beta.4"}, "yargs": {"required": "13.2.4", "stable": "15.3.1", "latest": "15.3.2-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.9205, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 2332, "downloadsCount": 16129429.666666666, "downloadsAcceleration": 54130.93066971081, "dependentsCount": 2496}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.7627210241681395}}, "score": {"final": 0.8189138340135889, "detail": {"quality": 0.7747897343327368, "popularity": 0.6764646131266141, "maintenance": 0.9991837117698658}}}}, {"rollup": {"analyzedAt": "2020-06-17T18:49:11.161Z", "collected": {"metadata": {"name": "rollup", "scope": "unscoped", "version": "2.17.0", "description": "Next-generation ES module bundler", "keywords": ["modules", "bundler", "bundling", "es6", "optimizer"], "date": "2020-06-17T18:47:54.138Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "eventualbuddha", "email": "me@brian-donovan.com"}, {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup", "homepage": "https://rollupjs.org/", "repository": "https://github.com/rollup/rollup", "bugs": "https://github.com/rollup/rollup/issues"}, "license": "MIT", "dependencies": {"fsevents": "~2.1.2"}, "devDependencies": {"@rollup/plugin-alias": "^3.1.1", "@rollup/plugin-buble": "^0.21.3", "@rollup/plugin-commonjs": "^13.0.0", "@rollup/plugin-json": "^4.1.0", "@rollup/plugin-node-resolve": "^8.0.1", "@rollup/plugin-replace": "^2.3.3", "@types/micromatch": "^4.0.1", "@types/node": "^14.0.11", "@types/require-relative": "^0.8.0", "@types/signal-exit": "^3.0.0", "@types/yargs-parser": "^15.0.0", "acorn": "^7.3.1", "acorn-class-fields": "^0.3.6", "acorn-jsx": "^5.2.0", "acorn-numeric-separator": "^0.3.2", "acorn-static-class-features": "^0.2.3", "acorn-walk": "^7.1.1", "buble": "^0.20.0", "chokidar": "^3.4.0", "codecov": "^3.7.0", "colorette": "^1.2.0", "core-js": "^3.6.5", "cross-os": "^1.3.0", "date-time": "^3.1.0", "es5-shim": "^4.5.14", "es6-shim": "^0.35.5", "eslint": "^7.2.0", "eslint-plugin-import": "^2.21.1", "execa": "^4.0.2", "fixturify": "^2.1.0", "hash.js": "^1.1.7", "husky": "^4.2.5", "is-reference": "^1.2.0", "lint-staged": "^10.2.9", "locate-character": "^2.0.5", "magic-string": "^0.25.7", "markdownlint-cli": "^0.23.1", "micromatch": "^4.0.2", "mocha": "^7.2.0", "node-fetch": "^2.6.0", "nyc": "^15.1.0", "prettier": "^2.0.5", "pretty-bytes": "^5.3.0", "pretty-ms": "^7.0.0", "require-relative": "^0.8.7", "requirejs": "^2.3.6", "rollup": "^2.14.0", "rollup-plugin-license": "^2.1.0", "rollup-plugin-string": "^3.0.0", "rollup-plugin-terser": "^6.1.0", "rollup-plugin-thatworks": "^1.0.4", "rollup-plugin-typescript": "^1.0.1", "rollup-pluginutils": "^2.8.2", "sander": "^0.6.0", "shx": "^0.3.2", "signal-exit": "^3.0.3", "source-map": "^0.7.3", "source-map-support": "^0.5.19", "sourcemap-codec": "^1.4.8", "systemjs": "^6.3.2", "terser": "^4.7.0", "tslib": "^2.0.0", "tslint": "^6.1.2", "typescript": "^3.9.5", "url-parse": "^1.4.7", "yargs-parser": "^18.1.3"}, "optionalDependencies": {"fsevents": "~2.1.2"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 18}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 44}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 65}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 116}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 206}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Rollup\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/rollup\">\n    <img src=\"https://img.shields.io/npm/v/rollup.svg\" alt=\"npm version\" >\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=rollup\">\n    <img src=\"https://packagephobia.now.sh/badge?p=rollup\" alt=\"install size\" >\n  </a>\n  <a href=\"https://codecov.io/gh/rollup/rollup\">\n    <img src=\"https://codecov.io/gh/rollup/rollup/graph/badge.svg\" alt=\"code coverage\" >\n  </a>\n  <a href=\"#backers\" alt=\"sponsors on Open Collective\">\n      <img src=\"https://opencollective.com/rollup/backers/badge.svg\" alt=\"backers\" >\n  </a> \n  <a href=\"#sponsors\" alt=\"Sponsors on Open Collective\">\n    <img src=\"https://opencollective.com/rollup/sponsors/badge.svg\" alt=\"sponsors\" >\n  </a> \n  <a href=\"https://github.com/rollup/rollup/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/rollup.svg\" alt=\"license\">\n  </a>\n  <a href=\"https://david-dm.org/rollup/rollup\">\n    <img src=\"https://david-dm.org/rollup/rollup/status.svg\" alt=\"dependency status\">\n  </a>\n  <a href='https://gitter.im/rollup/rollup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge'>\n    <img src='https://badges.gitter.im/rollup/rollup.svg' alt='Join the chat at https://gitter.im/rollup/rollup'>\n  </a>\n</p>\n\n\n## Overview\n\nRollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.\n\n## Quick Start Guide\n\nInstall with `npm install --global rollup`. Rollup can be used either through a [command line interface](https://rollupjs.org/#command-line-reference) with an optional configuration file, or else through its [JavaScript API](https://rollupjs.org/guide/en/#javascript-api). Run `rollup --help` to see the available options and parameters. The starter project templates, [rollup-starter-lib](https://github.com/rollup/rollup-starter-lib) and [rollup-starter-app](https://github.com/rollup/rollup-starter-app), demonstrate common configuration options, and more detailed instructions are available throughout the [user guide](https://rollupjs.org/).\n\n### Commands\n\nThese commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js.\n\nFor browsers:\n\n```bash\n# compile to a <script> containing a self-executing function\nrollup main.js --format iife --name \"myBundle\" --file bundle.js\n```\n\nFor Node.js:\n\n```bash\n# compile to a CommonJS module\nrollup main.js --format cjs --file bundle.js\n```\n\nFor both browsers and Node.js:\n\n```bash\n# UMD format requires a bundle name\nrollup main.js --format umd --name \"myBundle\" --file bundle.js\n```\n\n## Why\n\nDeveloping software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place [isn't necessarily the answer](https://medium.com/@Rich_Harris/small-modules-it-s-not-quite-that-simple-3ca532d65de4). Unfortunately, JavaScript has not historically included this capability as a core feature in the language.\n\nThis finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. The specification is now implemented in all major browsers and in Node.js behind the --experimental-modules flag for \".mjs\" files. Rollup allows you to write your code using this module system, either outputting optimized ES modules for use in these native environments, or compiling it back down to existing supported formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to *write future-proof code*, and you also get the tremendous benefits of...\n\n## Tree Shaking\n\nIn addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project.\n\nFor example, with CommonJS, the *entire tool or library must be imported*.\n\n```js\n// import the entire utils object with CommonJS\nvar utils = require( 'utils' );\nvar query = 'Rollup';\n// use the ajax method of the utils object\nutils.ajax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBut with ES modules, instead of importing the whole `utils` object, we can just import the one `ajax` function we need:\n\n```js\n// import the ajax function with an ES import statement\nimport { ajax } from 'utils';\nvar query = 'Rollup';\n// call the ajax function\najax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBecause Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit `import` and `export` statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.\n\n## Compatibility\n\n### Importing CommonJS\n\nRollup can import existing CommonJS modules [through a plugin](https://github.com/rollup/plugins/tree/master/packages/commonjs).\n\n### Publishing ES Modules\n\nTo make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the `main` property in your `package.json` file. If your `package.json` file also has a `module` field, ES-module-aware tools like Rollup and [webpack 2](https://webpack.js.org/) will [import the ES module version](https://github.com/rollup/rollup/wiki/pkg.module) directly.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/rollup/rollup/graphs/contributors\"><img src=\"https://opencollective.com/rollup/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/rollup#backer)]\n\n<a href=\"https://opencollective.com/rollup#backers\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/rollup#sponsor)]\n\n<a href=\"https://opencollective.com/rollup/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n\n[MIT](https://github.com/rollup/rollup/blob/master/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 394664}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 2034589}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8615675}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 23729341}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 37989827}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 61051995}], "dependentsCount": 1908, "starsCount": 84}, "github": {"homepage": "https://rollupjs.org", "starsCount": 18374, "forksCount": 888, "subscribersCount": 270, "issues": {"count": 3634, "openCount": 200, "distribution": {"3600": 407, "10800": 183, "32400": 205, "97200": 420, "291600": 451, "874800": 523, "2624400": 352, "7873200": 328, "23619600": 363, "70858800": 360, "212576400": 42}, "isDisabled": false}, "contributors": [{"username": "lukastaegert", "commitsCount": 1289}, {"username": "Rich-Harris", "commitsCount": 1088}, {"username": "guybedford", "commitsCount": 345}, {"username": "Victorystick", "commitsCount": 134}, {"username": "TrySound", "commitsCount": 51}, {"username": "eventualbuddha", "commitsCount": 26}, {"username": "kellyselden", "commitsCount": 22}, {"username": "Andarist", "commitsCount": 20}, {"username": "Permutatrix", "commitsCount": 19}, {"username": "alan-agius4", "commitsCount": 17}, {"username": "greenkeeperio-bot", "commitsCount": 17}, {"username": "ankeetmaini", "commitsCount": 16}, {"username": "kzc", "commitsCount": 14}, {"username": "unstubbable", "commitsCount": 14}, {"username": "mbostock", "commitsCount": 13}, {"username": "nicolo-ribaudo", "commitsCount": 13}, {"username": "shellscape", "commitsCount": 9}, {"username": "mnater", "commitsCount": 8}, {"username": "LongTengDao", "commitsCount": 7}, {"username": "adrianheine", "commitsCount": 7}, {"username": "mourner", "commitsCount": 7}, {"username": "bigtimebuddy", "commitsCount": 6}, {"username": "tivac", "commitsCount": 6}, {"username": "vijithassar", "commitsCount": 6}, {"username": "Comandeer", "commitsCount": 5}, {"username": "Swatinem", "commitsCount": 5}, {"username": "btd", "commitsCount": 5}, {"username": "lukeapage", "commitsCount": 5}, {"username": "monkeywithacupcake", "commitsCount": 5}, {"username": "tjenkinson", "commitsCount": 5}, {"username": "NaridaL", "commitsCount": 4}, {"username": "NotWoods", "commitsCount": 4}, {"username": "anandthakker", "commitsCount": 4}, {"username": "caccialdo", "commitsCount": 4}, {"username": "emilos", "commitsCount": 4}, {"username": "fatfisz", "commitsCount": 4}, {"username": "hh10k", "commitsCount": 4}, {"username": "kyle1320", "commitsCount": 4}, {"username": "manucorporat", "commitsCount": 4}, {"username": "nathancahill", "commitsCount": 4}, {"username": "FredyC", "commitsCount": 3}, {"username": "alalonde", "commitsCount": 3}, {"username": "brandonocasey", "commitsCount": 3}, {"username": "christopherthielen", "commitsCount": 3}, {"username": "futurist", "commitsCount": 3}, {"username": "gkatsev", "commitsCount": 3}, {"username": "jakearchibald", "commitsCount": 3}, {"username": "joeldenning", "commitsCount": 3}, {"username": "klaascuvelier", "commitsCount": 3}, {"username": "krzksz", "commitsCount": 3}, {"username": "marijnh", "commitsCount": 3}, {"username": "operandom", "commitsCount": 3}, {"username": "roastlechon", "commitsCount": 3}, {"username": "skeggse", "commitsCount": 3}, {"username": "vanruesc", "commitsCount": 3}, {"username": "IvanSanchez", "commitsCount": 2}, {"username": "KSXGitHub", "commitsCount": 2}, {"username": "MattiasBuelens", "commitsCount": 2}, {"username": "aearly", "commitsCount": 2}, {"username": "alippai", "commitsCount": 2}, {"username": "askbeka", "commitsCount": 2}, {"username": "asmockler", "commitsCount": 2}, {"username": "bfred-it", "commitsCount": 2}, {"username": "bitjson", "commitsCount": 2}, {"username": "brianmhunt", "commitsCount": 2}, {"username": "cameron-martin", "commitsCount": 2}, {"username": "chyzwar", "commitsCount": 2}, {"username": "cprecioso", "commitsCount": 2}, {"username": "curran", "commitsCount": 2}, {"username": "danez", "commitsCount": 2}, {"username": "diervo", "commitsCount": 2}, {"username": "dmitrage", "commitsCount": 2}, {"username": "erikdesjardins", "commitsCount": 2}, {"username": "evocateur", "commitsCount": 2}, {"username": "evs-chris", "commitsCount": 2}, {"username": "giraffate", "commitsCount": 2}, {"username": "jacksonrayhamilton", "commitsCount": 2}, {"username": "jeffjewiss", "commitsCount": 2}, {"username": "keithamus", "commitsCount": 2}, {"username": "ksvitkovsky", "commitsCount": 2}, {"username": "lukeed", "commitsCount": 2}, {"username": "maranomynet", "commitsCount": 2}, {"username": "misoguy", "commitsCount": 2}, {"username": "nolanlawson", "commitsCount": 2}, {"username": "phter", "commitsCount": 2}, {"username": "rail44", "commitsCount": 2}, {"username": "stasm", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "tehvgg", "commitsCount": 2}, {"username": "tu4mo", "commitsCount": 2}, {"username": "vforvova", "commitsCount": 2}, {"username": "Heerschop", "commitsCount": 1}, {"username": "dgoldstein0", "commitsCount": 1}, {"username": "jacksteamdev", "commitsCount": 1}, {"username": "jgravois", "commitsCount": 1}, {"username": "joeljeske", "commitsCount": 1}, {"username": "luwol03", "commitsCount": 1}, {"username": "mangs", "commitsCount": 1}, {"username": "zlamma", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 6}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 56}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 171}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 275}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 502}], "statuses": [{"context": "ci/circleci: analysis", "state": "pending"}]}, "source": {"files": {"readmeSize": 8500, "testsSize": 2520333, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/rollup.svg", "shields": "https://img.shields.io/npm/v/rollup.svg", "content": "https://img.shields.io/npm/v/rollup.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/rollup.svg", "shields": "https://img.shields.io/npm/l/rollup.svg", "content": "https://img.shields.io/npm/l/rollup.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://david-dm.org/rollup/rollup/status.svg", "service": "https://david-dm.org/rollup/rollup/status.svg", "shields": "https://img.shields.io/david/rollup/rollup/status.svg", "content": "https://img.shields.io/david/rollup/rollup/status.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/rollup/rollup.svg%27", "service": "https://badges.gitter.im/rollup/rollup.svg", "shields": "https://img.shields.io/gitter/room/rollup/rollup.svg", "content": "https://img.shields.io/gitter/room/rollup/rollup.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier", "tslint"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.819, "health": 1, "branding": 1}, "popularity": {"communityInterest": 19715, "downloadsCount": 7909780.333333333, "downloadsAcceleration": 40928.070414764086, "dependentsCount": 1908}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.33459030732172096}}, "score": {"final": 0.8741648812561266, "detail": {"quality": 0.9756276646979446, "popularity": 0.7171052642559993, "maintenance": 0.944256398163267}}}}, {"style-loader": {"analyzedAt": "2020-06-07T15:29:42.697Z", "collected": {"metadata": {"name": "style-loader", "scope": "unscoped", "version": "1.2.1", "description": "style loader module for webpack", "keywords": ["webpack"], "date": "2020-04-28T13:33:15.533Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/style-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/style-loader", "homepage": "https://github.com/webpack-contrib/style-loader", "repository": "https://github.com/webpack-contrib/style-loader", "bugs": "https://github.com/webpack-contrib/style-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.6"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.4.0", "cross-env": "^7.0.2", "css-loader": "^3.5.3", "del": "^5.1.0", "del-cli": "^3.0.0", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.4.0", "jsdom": "^15.2.1", "lint-staged": "^10.1.7", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^2.0.5", "sass": "^1.26.5", "sass-loader": "^8.0.2", "semver": "^7.3.2", "standard-version": "^7.1.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11", "webpack-dev-server": "^3.10.3"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Style Loader</h1>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# style-loader\n\nInject CSS into the DOM.\n\n## Getting Started\n\nTo begin, you'll need to install `style-loader`:\n\n```console\nnpm install --save-dev style-loader\n```\n\nIt's recommended to combine `style-loader` with the [`css-loader`](https://github.com/webpack-contrib/css-loader)\n\nThen add the loader to your `webpack` config. For example:\n\n**style.css**\n\n```css\nbody {\n  background: green;\n}\n```\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|              Name               |         Type         |  Default   | Description                                              |\n| :-----------------------------: | :------------------: | :--------: | :------------------------------------------------------- |\n| [**`injectType`**](#injecttype) |      `{String}`      | `styleTag` | Allows to setup how styles will be injected into the DOM |\n| [**`attributes`**](#attributes) |      `{Object}`      |    `{}`    | Adds custom attributes to tag                            |\n|     [**`insert`**](#insert)     | `{String\\|Function}` |   `head`   | Inserts tag at the given position into the DOM           |\n|       [**`base`**](#base)       |      `{Number}`      |   `true`   | Sets module ID base (DLLPlugin)                          |\n|   [**`esModule`**](#esmodule)   |     `{Boolean}`      |  `false`   | Use ES modules syntax                                    |\n\n### `injectType`\n\nType: `String`\nDefault: `styleTag`\n\nAllows to setup how styles will be injected into the DOM.\n\nPossible values:\n\n- `styleTag`\n- `singletonStyleTag`\n- `lazyStyleTag`\n- `lazySingletonStyleTag`\n- `linkTag`\n\n#### `styleTag`\n\nAutomatically injects styles into the DOM using multiple `<style></style>`. It is **default** behaviour.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\nExample with Locals (CSS Modules):\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          // The `injectType`  option can be avoided because it is default behaviour\n          { loader: 'style-loader', options: { injectType: 'styleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `singletonStyleTag`\n\nAutomatically injects styles into the DOM using one `<style></style>`.\n\n> \u26a0 Source maps do not work.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'singletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazyStyleTag`\n\nInjects styles into the DOM using multiple `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazyStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'lazyStyleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazySingletonStyleTag`\n\nInjects styles into the DOM using one `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazySingletonStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Source maps do not work.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'lazySingletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `linkTag`\n\nInjects styles into the DOM using multiple `<link rel=\"stylesheet\" href=\"path/to/file.css\">` .\n\n> \u2139\ufe0f The loader will dynamically insert the `<link href=\"path/to/file.css\" rel=\"stylesheet\">` tag at runtime via JavaScript. You should use [MiniCssExtractPlugin](https://webpack.js.org/plugins/mini-css-extract-plugin/) if you want to include a static `<link href=\"path/to/file.css\" rel=\"stylesheet\">`.\n\n```js\nimport './styles.css';\nimport './other-styles.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.link\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'linkTag' } },\n          { loader: 'file-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<link rel=\"stylesheet\" href=\"path/to/style.css\" />\n<link rel=\"stylesheet\" href=\"path/to/other-styles.css\" />\n```\n\n### `attributes`\n\nType: `Object`\nDefault: `{}`\n\nIf defined, the `style-loader` will attach given attributes with their values on `<style>` / `<link>` element.\n\n**component.js**\n\n```js\nimport style from './file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { attributes: { id: 'id' } } },\n          { loader: 'css-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\n```html\n<style id=\"id\"></style>\n```\n\n### `insert`\n\nType: `String|Function`\nDefault: `head`\n\nBy default, the `style-loader` appends `<style>`/`<link>` elements to the end of the style target, which is the `<head>` tag of the page unless specified by `insert`.\nThis will cause CSS created by the loader to take priority over CSS already present in the target.\nYou can use other values if the standard behavior is not suitable for you, but we do not recommend doing this.\nIf you target an [iframe](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) make sure you have sufficient access rights, the styles will be injected into the content document head.\n\n#### `String`\n\nAllows to setup custom [query selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) where styles inject into the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: 'body',\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nA new `<style>`/`<link>` elements will be inserted into at bottom of `body` tag.\n\n#### `Function`\n\nAllows to override default behavior and insert styles at any position.\n\n> \u26a0 Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n> \u26a0 Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                // eslint-disable-next-line no-underscore-dangle\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                // eslint-disable-next-line no-underscore-dangle\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nInsert styles at top of `head` tag.\n\n### `base`\n\nThis setting is primarily used as a workaround for [css clashes](https://github.com/webpack-contrib/style-loader/issues/163) when using one or more [DllPlugin](https://robertknight.github.io/posts/webpack-dll-plugins/)'s. `base` allows you to prevent either the _app_'s css (or _DllPlugin2_'s css) from overwriting _DllPlugin1_'s css by specifying a css module id base which is greater than the range used by _DllPlugin1_ e.g.:\n\n**webpack.dll1.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n**webpack.dll2.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 1000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n**webpack.app.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 2000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `style-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Source maps\n\nThe loader automatically inject source maps when previous loader emit them.\nTherefore, to generate source maps, set the `sourceMap` option to `true` for the previous loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Nonce\n\nThere are two ways to work with `nonce`:\n\n- using the `attributes` option\n- using the `__webpack_nonce__` variable\n\n> \u26a0 the `attributes` option takes precedence over the `__webpack_nonce__` variable\n\n#### `attributes`\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              attributes: {\n                nonce: '12345678',\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### `__webpack_nonce__`\n\n**create-nonce.js**\n\n```js\n__webpack_nonce__ = '12345678';\n```\n\n**component.js**\n\n```js\nimport './create-nonce.js';\nimport './style.css';\n```\n\nAlternative example for `require`:\n\n**component.js**\n\n```js\n__webpack_nonce__ = '12345678';\n\nrequire('./style.css');\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### Insert styles at top\n\nInserts styles at top of `head` tag.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Insert styles before target element\n\nInserts styles before `#id` element.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertBeforeAt(element) {\n                const parent = document.querySelector('head');\n                const target = document.querySelector('#id');\n\n                const lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, target);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/style-loader.svg\n[npm-url]: https://npmjs.com/package/style-loader\n[node]: https://img.shields.io/node/v/style-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/style-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/style-loader\n[tests]: https://github.com/webpack-contrib/style-loader/workflows/style-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/style-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/style-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/style-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=style-loader\n[size-url]: https://packagephobia.now.sh/result?p=style-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 416402}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8364092}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 34709213}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 103510726}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 182129839}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 323331817}], "dependentsCount": 8707, "starsCount": 97}, "github": {"starsCount": 1438, "forksCount": 429, "subscribersCount": 28, "issues": {"count": 472, "openCount": 14, "distribution": {"3600": 108, "10800": 23, "32400": 22, "97200": 46, "291600": 31, "874800": 32, "2624400": 26, "7873200": 37, "23619600": 66, "70858800": 72, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 70}, {"username": "sokra", "commitsCount": 53}, {"username": "d3viant0ne", "commitsCount": 21}, {"username": "michael-ciniawsky", "commitsCount": 20}, {"username": "diurnalist", "commitsCount": 7}, {"username": "elsbree", "commitsCount": 6}, {"username": "ekulabuhov", "commitsCount": 3}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "jonathantneal", "commitsCount": 2}, {"username": "lydell", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "sontek", "commitsCount": 2}, {"username": "svenheden", "commitsCount": 2}, {"username": "tgriesser", "commitsCount": 2}, {"username": "2color", "commitsCount": 1}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Et3rnel", "commitsCount": 1}, {"username": "FlyingDR", "commitsCount": 1}, {"username": "KonstantinKai", "commitsCount": 1}, {"username": "Lin84", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Nouzbe", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TaopaiC", "commitsCount": 1}, {"username": "Vasikaran", "commitsCount": 1}, {"username": "ahstro", "commitsCount": 1}, {"username": "akki-jat", "commitsCount": 1}, {"username": "alexbaumgertner", "commitsCount": 1}, {"username": "amoshydra", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "arseniew", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "backjo", "commitsCount": 1}, {"username": "blainekasten", "commitsCount": 1}, {"username": "brafdlog", "commitsCount": 1}, {"username": "brandondurham", "commitsCount": 1}, {"username": "crucialfelix", "commitsCount": 1}, {"username": "danielberndt", "commitsCount": 1}, {"username": "dimitarivanov", "commitsCount": 1}, {"username": "dkaoster", "commitsCount": 1}, {"username": "dlwalsh", "commitsCount": 1}, {"username": "drawyan", "commitsCount": 1}, {"username": "edave64", "commitsCount": 1}, {"username": "erictheswift", "commitsCount": 1}, {"username": "felixmosh", "commitsCount": 1}, {"username": "gregaou", "commitsCount": 1}, {"username": "gryzzly", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iamdavidfrancis", "commitsCount": 1}, {"username": "iancw", "commitsCount": 1}, {"username": "ilanc", "commitsCount": 1}, {"username": "jaesung2061", "commitsCount": 1}, {"username": "jasonenglish", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kabab", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "krail", "commitsCount": 1}, {"username": "krrg", "commitsCount": 1}, {"username": "liady", "commitsCount": 1}, {"username": "marcogrcr", "commitsCount": 1}, {"username": "mistadikay", "commitsCount": 1}, {"username": "nickdima", "commitsCount": 1}, {"username": "oskarer", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "pleunv", "commitsCount": 1}, {"username": "savelichalex", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sirlancelot", "commitsCount": 1}, {"username": "tigt", "commitsCount": 1}, {"username": "tomasAlabes", "commitsCount": 1}, {"username": "undoZen", "commitsCount": 1}, {"username": "verticalpalette", "commitsCount": 1}, {"username": "winterbe", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}, {"username": "zachlysobey", "commitsCount": 1}, {"username": "zxcabs", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 27}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 70}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 17830, "testsSize": 301065, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/style-loader.svg", "shields": "https://img.shields.io/npm/v/style-loader.svg", "content": "https://img.shields.io/npm/v/style-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/style-loader.svg", "service": "https://david-dm.org/webpack-contrib/style-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/style-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/style-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2070, "downloadsCount": 34503575.333333336, "downloadsAcceleration": 99281.25412861494, "dependentsCount": 8707}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9169927309969395, "detail": {"quality": 0.9979669138212458, "popularity": 0.7646399403263102, "maintenance": 0.9999390792467349}}}}, {"sinon": {"analyzedAt": "2020-06-07T05:32:28.191Z", "collected": {"metadata": {"name": "sinon", "scope": "unscoped", "version": "9.0.2", "description": "JavaScript test spies, stubs and mocks.", "date": "2020-04-08T11:42:23.802Z", "author": {"name": "Christian Johansen"}, "publisher": {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}, "maintainers": [{"username": "cjohansen", "email": "christian@cjohansen.no"}, {"username": "fatso83", "email": "carlerik@gmail.com"}, {"username": "mantoni", "email": "mail@maxantoni.de"}, {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}], "contributors": [{"name": "Morgan Roderick", "email": "morgan@roderick.dk"}, {"name": "Christian Johansen", "email": "christian@cjohansen.no"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Phred", "email": "fearphage@gmail.com"}, {"name": "Jonny Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "lucasfcosta", "email": "fernandesdacostalucas@gmail.com"}, {"name": "dependabot-preview[bot]", "email": "27856297+dependabot-preview[bot]@users.noreply.github.com"}, {"name": "ben hockey", "email": "neonstalwart@gmail.com"}, {"name": "takasmiley", "email": "takasmiley@live.jp"}, {"name": "Tim Fischbach", "email": "mail@timfischbach.de"}, {"name": "H\u00e5vard Wormdal H\u00f8iby", "email": "havardwhoiby@gmail.com"}, {"name": "Tim Ruffles", "email": "timruffles@googlemail.com"}, {"name": "Piotr Jamroz", "email": "piotr.jamroz@ig.com"}, {"name": "Jonathan Sokolowski", "email": "jonathan.sokolowski@gmail.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Andreas Lind", "email": "andreas@one.com"}, {"name": "William Sears", "email": "MrBigDog2U@gmail.com"}, {"name": "Tim Perry", "email": "pimterry@gmail.com"}, {"name": "Mikhail Gusarov", "email": "mikhail@hola.org"}, {"name": "Marc Redemske", "email": "marc.redemske@gmail.com"}, {"name": "Dominykas Blyz\u030ce\u0307", "email": "hello@dominykas.com"}, {"name": "Felix Geisendo\u0308rfer", "email": "felix@debuggable.com"}, {"name": "kpdecker", "email": "kpdecker@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Cory", "email": "seeflanigan@gmail.com"}, {"name": "Tobias Ebno\u0308ther", "email": "ebi@gorn.ch"}, {"name": "Luis Cardoso", "email": "luis.cardoso@feedzai.com"}, {"name": "Tristan Koch", "email": "tristan.koch@1und1.de"}, {"name": "Adam Hull", "email": "adam@hmlad.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Aleck Greenham", "email": "greenhama13@gmail.com"}, {"name": "Flarna", "email": "deb2001-github@yahoo.de"}, {"name": "Doug Orleans", "email": "dougorleans@gmail.com"}, {"name": "Martin Sander", "email": "forke@uni-bonn.de"}, {"name": "Andrew Gurinovich", "email": "altmind@gmail.com"}, {"name": "Travis Kaufman", "email": "travis.kaufman@gmail.com"}, {"name": "Viktor Zozulyak", "email": "zozulyakviktor@gmail.com"}, {"name": "Mahmoud Gamal", "email": "mgamal@babbel.com"}, {"name": "Dustin Farris", "email": "dustin@farris.io"}, {"name": "Eyal Arubas", "email": "eyalarubas@gmail.com"}, {"name": "ben fleis", "email": "ben.fleis@gmail.com"}, {"name": "Benjamin Coe", "email": "ben@yesware.com"}, {"name": "dependabot[bot]", "email": "49699333+dependabot[bot]@users.noreply.github.com"}, {"name": "Marten Lienen", "email": "marten.lienen@gmail.com"}, {"name": "GCHQDeveloper500", "email": "32099399+GCHQDeveloper500@users.noreply.github.com"}, {"name": "Carolyn Stransky", "email": "carolynstransky@gmail.com"}, {"name": "zcicala", "email": "zcicala@fitbit.com"}, {"name": "Garrick Cheung", "email": "garrick@garrickcheung.com"}, {"name": "Konrad Holowinski", "email": "konrad.holowinski@gmail.com"}, {"name": "Jay Sherby", "email": "jaysherby@gmail.com"}, {"name": "Gavin Huang", "email": "gravof@gmail.com"}, {"name": "Krzysztof Kaczor", "email": "chris@kaczor.io"}, {"name": "Roman Potashow", "email": "justgook@gmail.com"}, {"name": "Soutaro Matsumoto", "email": "matsumoto@soutaro.com"}, {"name": "Rae Liu", "email": "happyaray@gmail.com"}, {"name": "Cormac Flynn", "email": "cormac.flynn@viadeoteam.com"}, {"name": "Ming Liu", "email": "vmliu1@gmail.com"}, {"name": "Garrick", "email": "gcheung@fitbit.com"}, {"name": "George Schneeloch", "email": "gschneel@mit.edu"}, {"name": "Jmeas", "email": "jellyes2@gmail.com"}, {"name": "Robin Pedersen", "email": "robinp@snap.tv"}, {"name": "Kir Chou", "email": "note351@hotmail.com"}, {"name": "Thomas Meyer", "email": "meyertee@gmail.com"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Dmitriy Kubyshkin", "email": "grassator@gmail.com"}, {"name": "Glen Mailer", "email": "glen.mailer@bskyb.com"}, {"name": "Tim Costa", "email": "tcosta@2u.com"}, {"name": "Florent Jaby", "email": "florent.jaby@gmail.com"}, {"name": "Islam Sharabash", "email": "islam.sharabash@gmail.com"}, {"name": "Scott Andrews", "email": "scothis@gmail.com"}, {"name": "geries", "email": "geries.handal@videoplaza.com"}, {"name": "M\u00e1rton Salomv\u00e1ry", "email": "salomvary@gmail.com"}, {"name": "August Lilleaas", "email": "august.lilleaas@gmail.com"}, {"name": "Tamas Szebeni", "email": "tamas_szebeni@epam.com"}, {"name": "Adhya Pranata", "email": "adhyapranata@gmail.com"}, {"name": "\u306a\u3064\u304d", "email": "i@ntk.me"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "James Garbutt", "email": "43081j@users.noreply.github.com"}, {"name": "Nathan Friedly", "email": "nathan@nfriedly.com"}, {"name": "Nathan Mahdavi", "email": "mail@nathanmahdavi.com"}, {"name": "Nathan Perry", "email": "nateperry333@gmail.com"}, {"name": "Nicholas Hinds", "email": "hindsn@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Alex Urbano", "email": "asgaroth.belem@gmail.com"}, {"name": "Jason Karns", "email": "jason.karns@gmail.com"}, {"name": "Jeffrey Falgout", "email": "jeffrey.falgout@gmail.com"}, {"name": "Jimmy Shimizu", "email": "jimmy.shimizu@springworks.se"}, {"name": "Elad Nachmias", "email": "theman@elad.im"}, {"name": "Andrzej Porebski", "email": "fkuciapa@yahoo.com"}, {"name": "Piotr Jamr\u00f3z", "email": "pm.jamroz@gmail.com"}, {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Jonathan Freeman", "email": "freethejazz@gmail.com"}, {"name": "Emma Bukacek", "email": "emma.bukacek@gmail.com"}, {"name": "Brandon Heyer", "email": "brandonheyer@gmail.com"}, {"name": "RealZogger", "email": "49367953+RealZogger@users.noreply.github.com"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Aaron", "email": "aaron.todd@gmail.com"}, {"name": "Alexander Schmidt", "email": "alexanderschmidt1@gmail.com"}, {"name": "Evan Lloyd", "email": "evan.u.lloyd@gmail.com"}, {"name": "Farid Neshat", "email": "FaridN_SOAD@yahoo.com"}, {"name": "Josh Graham", "email": "josh@canva.com"}, {"name": "Josh Greenberger", "email": "jdgreenb@usc.edu"}, {"name": "Satoshi Nakamura", "email": "snakamura@infoteria.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Simen Bekkhus", "email": "sbekkhus91@gmail.com"}, {"name": "G.Serebryanskyi", "email": "x5x3x5x@gmail.com"}, {"name": "Spencer Elliott", "email": "me@elliottsj.com"}, {"name": "Szymon Przybylski", "email": "szymon.przybylski@gmail.com"}, {"name": "Chris Breiding", "email": "chrisbreiding@gmail.com"}, {"name": "Tarjei Huse", "email": "tarjei.huse@gmail.com"}, {"name": "Louis Brunner", "email": "louis.brunner.fr@gmail.com"}, {"name": "Christoph Guttandin", "email": "chrisguttandin@media-codings.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "Zach Bloomquist", "email": "github@chary.us"}, {"name": "Marcus H\u00fcsgen", "email": "marcus.huesgen@lusini.com"}, {"name": "Henry Tung", "email": "henryptung@gmail.com"}, {"name": "Hugo Muller", "email": "hugo.muller@free.fr"}, {"name": "blacksun1", "email": "simon@blacksun.cx"}, {"name": "Mark Stacey", "email": "mark.stacey@amecfw.com"}, {"name": "Daniel Rey Lopez", "email": "daniel.rey.lopez@automattic.com"}, {"name": "gtothesquare", "email": "me@gerieshandal.com"}, {"name": "Afnizar Nur Ghifari", "email": "afnizarnur@users.noreply.github.com"}, {"name": "Martin Hansen", "email": "martin@martinhansen.no"}, {"name": "Igor Savin", "email": "kibertoad@gmail.com"}, {"name": "Matt Kern", "email": "matt@bloomcrush.com"}, {"name": "Irina Dumitrascu", "email": "me@dira.ro"}, {"name": "mohayonao", "email": "mohayonao@gmail.com"}, {"name": "Max Calabrese", "email": "max.calabrese@ymail.com"}, {"name": "nivsherf", "email": "nivsherf@gmail.com"}, {"name": "Alex Puchades", "email": "alex94puchades@gmail.com"}, {"name": "Michael Herman", "email": "hermanmu@gmail.com"}, {"name": "David Mott", "email": "dpmott@sep.com"}, {"name": "vitalets", "email": "vitalets@yandex-team.ru"}, {"name": "Jakob J\u00f3nasson", "email": "jakob.jonasson@gmail.com"}, {"name": "yoshimura-toshihide", "email": "toshihide0105yoshimura@gmail.com"}, {"name": "James Barwell", "email": "jb@jamesbarwell.co.uk"}, {"name": "Revath S Kumar", "email": "revathskumar@users.noreply.github.com"}, {"name": "Rich Hodgkins", "email": "rhodgkins@gmail.com"}, {"name": "Rodion Vynnychenko", "email": "roddiku@gmail.com"}, {"name": "Rodrigo Garc\u00eda", "email": "yo@rodrigogarcia.me"}, {"name": "Roland Warmerdam", "email": "roland@segment.com"}, {"name": "Ruwan Pradeep Geeganage", "email": "rpgeeganage@users.noreply.github.com"}, {"name": "Ryan Roemer", "email": "ryan@loose-bits.com"}, {"name": "Ryan Wholey", "email": "rjwholey@gmail.com"}, {"name": "STuFF", "email": "nchalleil@gmail.com"}, {"name": "Sam Landfried", "email": "samlandfried@gmail.com"}, {"name": "Scott Rudiger", "email": "scottrudiger@gmail.com"}, {"name": "Sergio Cinos", "email": "scinos@atlassian.com"}, {"name": "Shaine Hatch", "email": "shainehatch@overstock.com"}, {"name": "Shawn Krisman", "email": "skrisman@nodelings"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Simone Fonda", "email": "fonda@netseven.it"}, {"name": "Sinan Bolel", "email": "1915925+sbolel@users.noreply.github.com"}, {"name": "Stefan Weil", "email": "sw@weilnetz.de"}, {"name": "Stefan du Fresne", "email": "stefan@sdufresne.info"}, {"name": "StefanSchoof", "email": "Stefan.Schoof@direkt-gruppe.de"}, {"name": "Stephen Burrows", "email": "stephen.r.burrows@gmail.com"}, {"name": "Steven Lu", "email": "stevenlu443@gmail.com"}, {"name": "Sven Fuchs", "email": "svenfuchs@artweb-design.de"}, {"name": "S\u00f8ren Enem\u00e6rke", "email": "soren.enemaerke@gmail.com"}, {"name": "T1st3", "email": "contact@tiste.org"}, {"name": "TEHEK Firefox", "email": "tehek@tehek.net"}, {"name": "Tek Nynja", "email": "github@teknynja.com"}, {"name": "The Gitter Badger", "email": "badger@gitter.im"}, {"name": "Tieme van Veen", "email": "tiemevanveen@hotmail.com"}, {"name": "Tim Branyen", "email": "tim@tabdeveloper.com"}, {"name": "Tim Li", "email": "zhengang@sine.co"}, {"name": "Tim Wienk", "email": "tim@wienk.name"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tobias Mansfield-Williams", "email": "tmansfield-williams@esri.com"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Volkan Ozcelik", "email": "volkan.ozcelik@jivesoftware.com"}, {"name": "Vynce Montgomery", "email": "vynce.montgomery@gmail.com"}, {"name": "White, Ben", "email": "ben.white@jpmchase.com"}, {"name": "Whymarrh Whitby", "email": "whymarrh.whitby@gmail.com"}, {"name": "Will Butler", "email": "will@butlerhq.com"}, {"name": "William Meleyal", "email": "w.meleyal@wollzelle.com"}, {"name": "Yury Fedorov", "email": "10244414+orlangure@users.noreply.github.com"}, {"name": "Zakir", "email": "zak.saifi7@gmail.com"}, {"name": "Zhengang Li", "email": "huttli@users.noreply.github.com"}, {"name": "andrew", "email": "andrew.derozario@online-pajak.com"}, {"name": "charlierudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "clint", "email": "clint@wealthfront.com"}, {"name": "ehmicky", "email": "ehmicky@gmail.com"}, {"name": "goligo", "email": "ich@malte.de"}, {"name": "hannes", "email": "github@htmlcss.de"}, {"name": "hashchange", "email": "heim@zeilenwechsel.de"}, {"name": "ichthala", "email": "alice.mottola@gmail.com"}, {"name": "jamestalmage", "email": "james.talmage@jrtechnical.com"}, {"name": "jshayes", "email": "justin@yolk.ai"}, {"name": "kbackowski", "email": "kbackowski@gmail.com"}, {"name": "mareq", "email": "mareq@balint.eu"}, {"name": "mbehboodian", "email": "morteza6909@gmail.com"}, {"name": "ngryman", "email": "ngryman@gmail.com"}, {"name": "niftylettuce", "email": "niftylettuce@gmail.com"}, {"name": "simonzack", "email": "simonzack@gmail.com"}, {"name": "stevesouth", "email": "stephen.south@caplin.com"}, {"name": "stoically", "email": "stoically@protonmail.com"}, {"name": "thefourtheye", "email": "thefourtheye@users.noreply.github.com"}, {"name": "till", "email": "till@php.net"}, {"name": "vsa", "email": "vsa@users.noreply.github.com"}, {"name": "wwalser", "email": "waw325@gmail.com"}, {"name": "Xiao Ma", "email": "x@medium.com"}, {"name": "AJ Ortega", "email": "ajo@google.com"}, {"name": "AdilKhn", "email": "AdilKhn@users.noreply.github.com"}, {"name": "Aditya Vohra", "email": "avohra@yelp.com"}, {"name": "Adrian Phinney", "email": "adrian.phinney@bellaliant.net"}, {"name": "Adrian Schmidt", "email": "adrian.schmidt@lime.tech"}, {"name": "Akira Matsuda", "email": "ronnie@dio.jp"}, {"name": "Aleksey Bobyr", "email": "aleksey.bobyr@beetroot.se"}, {"name": "Alex Ghiculescu", "email": "alex@tanda.co"}, {"name": "Alex Kessaris", "email": "alex@artsy.ca"}, {"name": "Alex Tran", "email": "alex@Alexs-MacBook-Pro-2.local"}, {"name": "Alexander Aivars", "email": "alex@aivars.se"}, {"name": "Alexey Kucherenko", "email": "alexei.kucherenko@gmail.com"}, {"name": "Alexsey", "email": "agat00@gmail.com"}, {"name": "Alfonso Boza", "email": "alfonso@cloud.com"}, {"name": "Ali Shakiba", "email": "ali@shakiba.me"}, {"name": "Andrew Fong", "email": "afong@slack-corp.com"}, {"name": "Andrew Leschinsky", "email": "andrew@leschinsky.com"}, {"name": "Andrew Shirley", "email": "andrew@als-bi.com"}, {"name": "Antonio D'Ettole", "email": "antonio@brandwatch.com"}, {"name": "Auclair Emmanuel", "email": "auclair.emmanuel.prestataire@sfr.com"}, {"name": "Aziz Punjani", "email": "aziz.punjani@gmail.com"}, {"name": "Ben Brostoff", "email": "ben.brostoff@gmail.com"}, {"name": "Ben Lertlumprasertkul", "email": "Ben.Lertlumprasertkul@ig.com"}, {"name": "Bing Ren", "email": "bingtimren@gmail.com"}, {"name": "Blaine Bublitz", "email": "blaine@iceddev.com"}, {"name": "Blake Embrey", "email": "hello@blakeembrey.com"}, {"name": "Blake Israel", "email": "blake.israel@gatech.edu"}, {"name": "Boshen Chen", "email": "boshenc@gmail.com"}, {"name": "Brandon Au", "email": "brandon.au@drexel.edu"}, {"name": "Brett Zamir", "email": "brettz9@yahoo.com"}, {"name": "Brian Bleakley", "email": "brianbleakley@gmail.com"}, {"name": "Brian M Hunt", "email": "brianmhunt@gmail.com"}, {"name": "Burak Yi\u011fit Kaya", "email": "ben@byk.im"}, {"name": "C. T. Lin", "email": "chentsulin@gmail.com"}, {"name": "Dan Bird", "email": "danielsbird@gmail.com"}, {"name": "Dan Peddle", "email": "dazld@users.noreply.github.com"}, {"name": "Daryl Lau", "email": "daryl@goodeggs.com"}, {"name": "David Colucci", "email": "davidanthonycolucci@gmail.com"}, {"name": "David Hayes", "email": "drhayes@users.noreply.github.com"}, {"name": "David Hunt", "email": "davidhunt@Davids-MBP.local"}, {"name": "Dean Sofer", "email": "ProLoser@users.noreply.github.com"}, {"name": "Duc Tri Le", "email": "duc1@email.tiger-inc.com"}, {"name": "Eli White", "email": "github@eli-white.com"}, {"name": "Eric Stobbart", "email": "Eric_Stobbart@comcast.com"}, {"name": "Eric Wendelin", "email": "ewendelin@twitter.com"}, {"name": "Ericat", "email": "erica.salvaneschi@gmail.com"}, {"name": "Feiyang1", "email": "plane1113@gmail.com"}, {"name": "Felipe Carasso", "email": "felipe@carassonet.org"}, {"name": "Franck Romano", "email": "fra@octo.com"}, {"name": "GProst", "email": "gprostmail@gmail.com"}, {"name": "Gabe Jackson", "email": "gj@mail.co.de"}, {"name": "Gavin Boulton", "email": "gavin.boulton@digital.cabinet-office.gov.uk"}, {"name": "Gerhard St\u00f6bich", "email": "18708370+Flarna@users.noreply.github.com"}, {"name": "Gilad Peleg", "email": "giladp007@gmail.com"}, {"name": "Giorgos Giannoutsos", "email": "contact@nuc.gr"}, {"name": "Gord Tanner", "email": "gord@tinyhippos.com"}, {"name": "Gordon L. Hempton", "email": "ghempton@gmail.com"}, {"name": "Gvozd", "email": "gvozdev.viktor@gmail.com"}, {"name": "Harry Wolff", "email": "hswolff@gmail.com"}, {"name": "HugoMuller", "email": "hmu@debian-hmu-dev"}, {"name": "Ian Lewis", "email": "IanMLewis@gmail.com"}, {"name": "Ian Thomas", "email": "ian@ian-thomas.net"}, {"name": "Irving", "email": "Irvingb232@gmail.com"}, {"name": "Jack Brown", "email": "jack.brown@mi9.com.au"}, {"name": "Jacob Page", "email": "jpage@godaddy.com"}, {"name": "Jahangir Iqbal", "email": "35706211+jiqbal48@users.noreply.github.com"}, {"name": "Jake Champion", "email": "me@jakechampion.name"}, {"name": "James Beavers", "email": "jamesjbeavers@gmail.com"}, {"name": "James M. Greene", "email": "james.m.greene@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "Jan Such\u00fd", "email": "jan.sandokan@gmail.com"}, {"name": "Jani Hartikainen", "email": "jani.hartikainen@gmail.com"}, {"name": "Jason Anderson", "email": "diurnalist@gmail.com"}, {"name": "Joakim Wimmerstedt", "email": "joakim.wimmerstedt@gmail.com"}, {"name": "Jochen Preusche", "email": "iilei@users.noreply.github.com"}, {"name": "Johann Hubert Sonntagbauer", "email": "johann.sonntagbauer@gmx.at"}, {"name": "John Bernardo", "email": "jbernardo@linkedin.com"}, {"name": "Jonathan Roitgrund", "email": "jroitgrund@gmail.com"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com"}, {"name": "Jordan Hawker", "email": "hawker.jordan@gmail.com"}, {"name": "Joseph Evans", "email": "evonsdesigns@gmail.com"}, {"name": "Joseph Spens", "email": "joseph@workmarket.com"}, {"name": "Josh Goldberg", "email": "josh@fullscreenmario.com"}, {"name": "JoshuaCWebDeveloper", "email": "coosriverjoshua1@outlook.com"}, {"name": "Juntao Zeng", "email": "31234156+juntaozeng@users.noreply.github.com"}, {"name": "Kalisa Falzone", "email": "KalisaFalzone@users.noreply.github.com"}, {"name": "Katrina Theodosopoulos", "email": "katrinaelaine6@gmail.com"}, {"name": "Keith Rogers", "email": "git@keithrogers.eu"}, {"name": "Kelly Selden", "email": "kellyselden@gmail.com"}, {"name": "Kenneth Williams", "email": "scriptdaemon@gmail.com"}, {"name": "Kev", "email": "lineus@gmail.com"}, {"name": "Kevin Bosman", "email": "kevinbosman@users.noreply.github.com"}, {"name": "Kevin Ennis", "email": "kennis84@gmail.com"}, {"name": "Kevin Turner", "email": "kevin@decipherinc.com"}, {"name": "Kim Joar Bekkelund", "email": "kjbekkelund@gmail.com"}, {"name": "Kris Kowal", "email": "kris.kowal@cixar.com"}, {"name": "Kristian", "email": "krisham87@hotmail.com"}, {"name": "Kuba Orlik", "email": "kontakt@jakub-orlik.pl"}, {"name": "Kurt Ruppel", "email": "me@kurtruppel.com"}, {"name": "Lars Thorup", "email": "lars@zealake.com"}, {"name": "LboAnn", "email": "extend1994@gmail.com"}, {"name": "LostArchives", "email": "valentin.mullet@gmail.com"}, {"name": "Lucas Vieira", "email": "vieiralucas@users.noreply.github.com"}, {"name": "Luchs", "email": "Luchs@euirc.eu"}, {"name": "Maarten Tromp", "email": "maarten@nouncy.com"}, {"name": "Marco Ramirez", "email": "marco-ramirez@bankofamerica.com"}, {"name": "Marcos Vanetta", "email": "marcos_vanetta@condenast.com"}, {"name": "Mario Pareja", "email": "mpareja@360incentives.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Mark Gibson", "email": "mgibson@adaptavist.com"}, {"name": "Mark Stickley", "email": "markstickley@users.noreply.github.com"}, {"name": "Martin Brochhaus", "email": "mbrochh@gmail.com"}, {"name": "Martin K\u00f6rner", "email": "martin.koerner@objectfab.de"}, {"name": "Matthew Gabeler-Lee", "email": "mgabeler-lee@6river.com"}, {"name": "Matthew Williams", "email": "mrwillihog@users.noreply.github.com"}, {"name": "Max Klymyshyn", "email": "klymyshyn@gmail.com"}, {"name": "Michael David Kuckuk", "email": "mdk@kuckuk.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Michael Paulukonis", "email": "xraysmalevich@gmail.com"}, {"name": "Micha\u0142 Per\u0142akowski", "email": "michal@perlakowski.pl"}, {"name": "Mike Eve", "email": "ungrim97@gmail.com"}, {"name": "Mike Flanigan", "email": "mkflan@gmail.com"}, {"name": "Mikolaj Banasik", "email": "d1sover@gmail.com"}, {"name": "MouseZero", "email": "rm@mousezero.com"}, {"name": "Mustafa Sak", "email": "mustafa.sak@1und1.de"}, {"name": "Nelson Silva", "email": "nelson.silva@inevo.pt"}, {"name": "Nicholas Stephan", "email": "nicholas.stephan@gmail.com"}, {"name": "Nicu Micleu\u0219anu", "email": "micnic90@gmail.com"}, {"name": "Nikita Litvin", "email": "deltaidea@derpy.ru"}, {"name": "Niklas Andreasson", "email": "eaglus_@hotmail.com"}, {"name": "Noam Paz", "email": "noam.paz@gmail.com"}, {"name": "Olmo Maldonado", "email": "olmo.maldonado@gmail.com"}, {"name": "Paul Barry", "email": "paul@Pauls-Air.fios-router.home"}, {"name": "Pelle Wessman", "email": "pelle@kodfabrik.se"}, {"name": "Petar Dochev", "email": "dotchev@gmail.com"}, {"name": "Peter Grainger", "email": "peter@grainger.xyz"}, {"name": "Peter Zsoldos", "email": "peter.zsoldos@gmail.com"}, {"name": "Pia Mancini", "email": "piamancini@gmail.com"}, {"name": "Piper Chester", "email": "piperchester@users.noreply.github.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Rajeesh C V", "email": "cvrajeesh@gmail.com"}, {"name": "Raul Matei", "email": "raul.matei@8x8.com"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "ReadmeCritic", "email": "frankensteinbot@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/sinonjs/sinon.git"}, "links": {"npm": "https://www.npmjs.com/package/sinon", "homepage": "https://sinonjs.org/", "repository": "https://github.com/sinonjs/sinon", "bugs": "http://github.com/sinonjs/sinon/issues"}, "license": "BSD-3-Clause", "dependencies": {"@sinonjs/commons": "^1.7.2", "@sinonjs/fake-timers": "^6.0.1", "@sinonjs/formatio": "^5.0.1", "@sinonjs/samsam": "^5.0.3", "diff": "^4.0.2", "nise": "^4.0.1", "supports-color": "^7.1.0"}, "devDependencies": {"@babel/core": "^7.8.3", "@sinonjs/referee": "^4.0.0", "babel-plugin-istanbul": "^6.0.0", "babelify": "^10.0.0", "browserify": "^16.5.0", "dependency-check": "^4.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-config-sinon": "^3.0.0", "eslint-plugin-ie11": "^1.0.0", "eslint-plugin-local-rules": "^0.1.0", "eslint-plugin-mocha": "^6.1.0", "eslint-plugin-prettier": "^3.1.0", "esm": "^3.2.25", "husky": "^4.2.1", "lint-staged": "^10.0.7", "markdownlint-cli": "^0.22.0", "mocha": "^6.2.0", "mochify": "^6.6.0", "npm-run-all": "^4.1.5", "nyc": "^15.0.0", "prettier": "^1.18.2", "proxyquire": "^2.1.3", "proxyquire-universal": "^2.1.0", "proxyquireify": "^3.2.1", "puppeteer": "^2.1.0", "rimraf": "^3.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 46}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=center>\n    <a href=\"https://sinonjs.org\" title=\"Sinon.JS\">\n        <img alt=\"Sinon.JS\" src=\"https://sinonjs.org/assets/images/logo.png\">\n    </a>\n    <br>\n    Sinon.JS\n</h1>\n\n<p align=center>\n    Standalone and test framework agnostic JavaScript test spies, stubs and mocks (pronounced \"sigh-non\", named after <a href=\"https://en.wikipedia.org/wiki/Sinon\">Sinon, the warrior</a>).\n</p>\n\n<p align=center>\n<a href=\"https://www.npmjs.com/package/sinon\"><img src=\"https://img.shields.io/npm/v/sinon.svg?style=flat\" alt=\"npm version\"></a>\n<a href=\"https://gitter.im/sinonjs/sinon?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/sinonjs/sinon\"></a>\n<a href=\"http://travis-ci.org/sinonjs/sinon\"><img src=\"https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master\" alt=\"Build status\"></a>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/buildstatus/sinonjs\" alt=\"Sauce Test Status\"/></a>\n<a href=\"https://codecov.io/gh/sinonjs/sinon\"><img src=\"https://codecov.io/gh/sinonjs/sinon/branch/master/graph/badge.svg\" alt=\"Codecov status\"></a>\n<a href=\"#backers\"><img src=\"https://opencollective.com/sinon/backers/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"#sponsors\"><img src=\"https://opencollective.com/sinon/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"https://www.npmjs.com/package/sinon\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/sinon.svg\" alt=\"npm downloads per month\"></a>\n<a href=\"https://cdnjs.com/libraries/sinon.js\" target=\"_blank\"><img src=\"https://img.shields.io/cdnjs/v/sinon.js.svg\" alt=\"CDNJS version\"></a>\n<a href=\"CODE_OF_CONDUCT.md\"><img src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\" alt=\"Contributor Covenant\" /></a>\n</p>\n\n<p align=center>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/browser-matrix/sinonjs.svg\" alt=\"Sauce Test Status\"></a>\n</p>\n\n## Better docs?\n\nDo you wish that Sinon had better documentation?\n\nSo do we!\n\nWith your support, we can improve the documentation for everyone.\n\n1. [Donate to the campaign for better documentation](https://www.gofundme.com/f/sinon-docs)\n1. Spread the word of the campaign in your companies and on social media\n\nThank you!\n\n## Compatibility\n\nFor details on compatibility and browser support, please see [`COMPATIBILITY.md`](COMPATIBILITY.md)\n\n## Installation\n\nvia [npm](https://github.com/npm/npm)\n\n    $ npm install sinon\n\nor via sinon's browser builds available for download on the [homepage](https://sinonjs.org/releases/). There are also [npm based CDNs](https://sinonjs.org/releases#npm-cdns) one can use.\n\n## Usage\n\nSee the [sinon project homepage](https://sinonjs.org/) for documentation on usage.\n\nIf you have questions that are not covered by the documentation, you can [check out the `sinon` tag on Stack Overflow](https://stackoverflow.com/questions/tagged/sinon) or drop by <a href=\"irc://irc.freenode.net:6667/sinon.js\">#sinon.js on irc.freenode.net:6667</a>.\n\nYou can also search through the [Sinon.JS mailing list archives](http://groups.google.com/group/sinonjs).\n\n## Goals\n\n* No global pollution\n* Easy to use\n* Require minimal \u201cintegration\u201d\n* Easy to embed seamlessly with any testing framework\n* Easily fake any interface\n* Ship with ready-to-use fakes for XMLHttpRequest, timers and more\n\n## Contribute?\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details on how you can contribute to Sinon.JS\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/sinon#backer)]\n\n<a href=\"https://opencollective.com/sinon/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [[Become a sponsor](https://opencollective.com/sinon#sponsor)]\n\n<a href=\"https://opencollective.com/sinon/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/29/avatar.svg\"></a>\n\n## Licence\n\nSinon.js was released under [BSD-3](LICENSE)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 127648}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2662347}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11110439}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 33775029}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 61957610}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 116476267}], "dependentsCount": 1517, "starsCount": 192}, "github": {"homepage": "https://sinonjs.org/", "starsCount": 7991, "forksCount": 754, "subscribersCount": 101, "issues": {"count": 2265, "openCount": 41, "distribution": {"3600": 280, "10800": 174, "32400": 196, "97200": 282, "291600": 269, "874800": 247, "2624400": 193, "7873200": 202, "23619600": 149, "70858800": 180, "212576400": 93}, "isDisabled": false}, "contributors": [{"username": "mroderick", "commitsCount": 765}, {"username": "cjohansen", "commitsCount": 410}, {"username": "fatso83", "commitsCount": 292}, {"username": "mantoni", "commitsCount": 180}, {"username": "fearphage", "commitsCount": 102}, {"username": "jonnyreeves", "commitsCount": 65}, {"username": "lucasfcosta", "commitsCount": 48}, {"username": "neonstalwart", "commitsCount": 32}, {"username": "pimterry", "commitsCount": 14}, {"username": "tf", "commitsCount": 14}, {"username": "havardh", "commitsCount": 12}, {"username": "ig-pj", "commitsCount": 11}, {"username": "timruffles", "commitsCount": 11}, {"username": "jsok", "commitsCount": 10}, {"username": "mgred", "commitsCount": 10}, {"username": "domenic", "commitsCount": 9}, {"username": "papandreou", "commitsCount": 9}, {"username": "MrBigDog2U", "commitsCount": 8}, {"username": "dominykas", "commitsCount": 7}, {"username": "felixge", "commitsCount": 7}, {"username": "BryanDonovan", "commitsCount": 6}, {"username": "Flarna", "commitsCount": 6}, {"username": "kpdecker", "commitsCount": 6}, {"username": "altmind", "commitsCount": 5}, {"username": "dougo", "commitsCount": 5}, {"username": "ebi", "commitsCount": 5}, {"username": "greena13", "commitsCount": 5}, {"username": "hurrymaplelad", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "lfac-pt", "commitsCount": 5}, {"username": "marvinthepa", "commitsCount": 5}, {"username": "mhmoudgmal", "commitsCount": 5}, {"username": "seeflanigan", "commitsCount": 5}, {"username": "43081j", "commitsCount": 4}, {"username": "EyalAr", "commitsCount": 4}, {"username": "GCHQDeveloper500", "commitsCount": 4}, {"username": "benfleis", "commitsCount": 4}, {"username": "carolstran", "commitsCount": 4}, {"username": "cqql", "commitsCount": 4}, {"username": "dustinfarris", "commitsCount": 4}, {"username": "holowinski", "commitsCount": 4}, {"username": "krzkaczor", "commitsCount": 4}, {"username": "traviskaufman", "commitsCount": 4}, {"username": "zuzusik", "commitsCount": 4}, {"username": "Floby", "commitsCount": 3}, {"username": "GCheung55", "commitsCount": 3}, {"username": "adhyapranata", "commitsCount": 3}, {"username": "alex94cp", "commitsCount": 3}, {"username": "augustl", "commitsCount": 3}, {"username": "brandonheyer", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "grassator", "commitsCount": 3}, {"username": "ibash", "commitsCount": 3}, {"username": "jamesplease", "commitsCount": 3}, {"username": "ming-codes", "commitsCount": 3}, {"username": "nivsherf", "commitsCount": 3}, {"username": "noisecapella", "commitsCount": 3}, {"username": "note35", "commitsCount": 3}, {"username": "raejin", "commitsCount": 3}, {"username": "ropez", "commitsCount": 3}, {"username": "salomvary", "commitsCount": 3}, {"username": "scothis", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "soutaro", "commitsCount": 3}, {"username": "tszebeni", "commitsCount": 3}, {"username": "Alexsey", "commitsCount": 2}, {"username": "DanReyLop", "commitsCount": 2}, {"username": "HugoMuller", "commitsCount": 2}, {"username": "JoshuaKGoldberg", "commitsCount": 2}, {"username": "LouisBrunner", "commitsCount": 2}, {"username": "acud", "commitsCount": 2}, {"username": "afnizarnur", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "chrisbreiding", "commitsCount": 2}, {"username": "chrisguttandin", "commitsCount": 2}, {"username": "dependabot[bot]", "commitsCount": 2}, {"username": "dpmott", "commitsCount": 2}, {"username": "emmabukacek", "commitsCount": 2}, {"username": "evan-007", "commitsCount": 2}, {"username": "flotwig", "commitsCount": 2}, {"username": "genetique-techno", "commitsCount": 2}, {"username": "gyandeeps", "commitsCount": 2}, {"username": "ifrost", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jdgreenberger", "commitsCount": 2}, {"username": "johnfakerjohn", "commitsCount": 2}, {"username": "kobbikobb", "commitsCount": 2}, {"username": "mjcrouch", "commitsCount": 2}, {"username": "mjhea0", "commitsCount": 2}, {"username": "nfriedly", "commitsCount": 2}, {"username": "nhinds", "commitsCount": 2}, {"username": "nicojs", "commitsCount": 2}, {"username": "revathskumar", "commitsCount": 2}, {"username": "rgroothuijsen", "commitsCount": 2}, {"username": "scripter-co", "commitsCount": 2}, {"username": "seppevs", "commitsCount": 2}, {"username": "servel333", "commitsCount": 2}, {"username": "sprzybylski", "commitsCount": 2}, {"username": "tarjei", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 32}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 135}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 290}], "statuses": [{"context": "ci/circleci: saucelabs", "state": "success"}, {"context": "ci/circleci: integration-tests", "state": "success"}, {"context": "ci/circleci: node-10", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: node-12", "state": "success"}, {"context": "ci/circleci: node-13", "state": "success"}, {"context": "ci/circleci: install-dependencies", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 12745, "testsSize": 647315, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sinon.svg?style=flat", "shields": "https://img.shields.io/npm/v/sinon.svg", "content": "https://img.shields.io/npm/v/sinon.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master", "service": "https://api.travis-ci.org/sinonjs/sinon.svg?branch=master", "shields": "https://img.shields.io/travis/sinonjs/sinon/master.svg", "content": "https://img.shields.io/travis/sinonjs/sinon/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/sinon.svg", "shields": "https://img.shields.io/npm/dm/sinon.svg", "content": "https://img.shields.io/npm/dm/sinon.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 9137, "downloadsCount": 11258343, "downloadsAcceleration": 19082.697640791463, "dependentsCount": 1517}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.07446915345508076}}, "score": {"final": 0.7955755662375098, "detail": {"quality": 0.9991784220166111, "popularity": 0.6748403285630505, "maintenance": 0.7417940703870253}}}}, {"request": {"analyzedAt": "2020-05-11T15:30:57.526Z", "collected": {"metadata": {"name": "request", "scope": "unscoped", "version": "2.88.2", "description": "Simplified HTTP request client.", "keywords": ["http", "simple", "util", "utility"], "date": "2020-02-11T16:35:36.122Z", "author": {"name": "Mikeal Rogers", "email": "mikeal.rogers@gmail.com", "username": "mikeal"}, "publisher": {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, "maintainers": [{"username": "fredkschott", "email": "fkschott@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, {"username": "nylen", "email": "jnylen@gmail.com"}, {"username": "simov", "email": "simeonvelichkov@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/request/request.git"}, "links": {"npm": "https://www.npmjs.com/package/request", "homepage": "https://github.com/request/request#readme", "repository": "https://github.com/request/request", "bugs": "http://github.com/request/request/issues"}, "license": "Apache-2.0", "dependencies": {"aws-sign2": "~0.7.0", "aws4": "^1.8.0", "caseless": "~0.12.0", "combined-stream": "~1.0.6", "extend": "~3.0.2", "forever-agent": "~0.6.1", "form-data": "~2.3.2", "har-validator": "~5.1.3", "http-signature": "~1.2.0", "is-typedarray": "~1.0.0", "isstream": "~0.1.2", "json-stringify-safe": "~5.0.1", "mime-types": "~2.1.19", "oauth-sign": "~0.9.0", "performance-now": "^2.1.0", "qs": "~6.5.2", "safe-buffer": "^5.1.2", "tough-cookie": "~2.5.0", "tunnel-agent": "^0.6.0", "uuid": "^3.3.2"}, "devDependencies": {"bluebird": "^3.2.1", "browserify": "^13.0.1", "browserify-istanbul": "^2.0.0", "buffer-equal": "^1.0.0", "codecov": "^3.0.4", "coveralls": "^3.0.2", "function-bind": "^1.0.2", "karma": "^3.0.0", "karma-browserify": "^5.0.1", "karma-cli": "^1.0.0", "karma-coverage": "^1.0.0", "karma-phantomjs-launcher": "^1.0.0", "karma-tap": "^3.0.1", "nyc": "^14.1.1", "phantomjs-prebuilt": "^2.1.3", "rimraf": "^2.2.8", "server-destroy": "^1.0.1", "standard": "^9.0.0", "tape": "^4.6.0", "taper": "^0.5.0"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}], "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Deprecated!\n\nAs of Feb 11th 2020, request is fully deprecated. No new changes are expected land. In fact, none have landed for some time.\n\nFor more information about why request is deprecated and possible alternatives refer to\n[this issue](https://github.com/request/request/issues/3142).\n\n# Request - Simplified HTTP client\n\n[![npm package](https://nodei.co/npm/request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/request/)\n\n[![Build status](https://img.shields.io/travis/request/request/master.svg?style=flat-square)](https://travis-ci.org/request/request)\n[![Coverage](https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square)](https://codecov.io/github/request/request?branch=master)\n[![Coverage](https://img.shields.io/coveralls/request/request.svg?style=flat-square)](https://coveralls.io/r/request/request)\n[![Dependency Status](https://img.shields.io/david/request/request.svg?style=flat-square)](https://david-dm.org/request/request)\n[![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)\n[![Gitter](https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square)](https://gitter.im/request/request?utm_source=badge)\n\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```js\nconst request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});\n```\n\n\n## Table of contents\n\n- [Streaming](#streaming)\n- [Promises & Async/Await](#promises--asyncawait)\n- [Forms](#forms)\n- [HTTP Authentication](#http-authentication)\n- [Custom HTTP Headers](#custom-http-headers)\n- [OAuth Signing](#oauth-signing)\n- [Proxies](#proxies)\n- [Unix Domain Sockets](#unix-domain-sockets)\n- [TLS/SSL Protocol](#tlsssl-protocol)\n- [Support for HAR 1.2](#support-for-har-12)\n- [**All Available Options**](#requestoptions-callback)\n\nRequest also offers [convenience methods](#convenience-methods) like\n`request.defaults` and `request.post`, and there are\nlots of [usage examples](#examples) and several\n[debugging techniques](#debugging).\n\n\n---\n\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```js\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don\u2019t already provide one).\n\n```js\nfs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```js\nrequest.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))\n```\n\nRequest emits a \"response\" event when a response is received. The `response` argument will be an instance of [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n```js\nrequest\n  .get('http://google.com/img.png')\n  .on('response', function(response) {\n    console.log(response.statusCode) // 200\n    console.log(response.headers['content-type']) // 'image/png'\n  })\n  .pipe(request.put('http://mysite.com/img.png'))\n```\n\nTo easily handle errors when streaming requests, listen to the `error` event before piping:\n\n```js\nrequest\n  .get('http://mysite.com/doodle.png')\n  .on('error', function(err) {\n    console.error(err)\n  })\n  .pipe(fs.createWriteStream('doodle.png'))\n```\n\nNow let\u2019s get fancy.\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    if (req.method === 'PUT') {\n      req.pipe(request.put('http://mysite.com/doodle.png'))\n    } else if (req.method === 'GET' || req.method === 'HEAD') {\n      request.get('http://mysite.com/doodle.png').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    const x = request('http://mysite.com/doodle.png')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in \u2265 Node 0.5.x you can do one line proxying. :)\n\n```js\nreq.pipe(request('http://mysite.com/doodle.png')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```js\nconst r = request.defaults({'proxy':'http://localproxy.com'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    r.get('http://google.com/doodle.png').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Promises & Async/Await\n\n`request` supports both streaming and callback interfaces natively. If you'd like `request` to return a Promise instead, you can use an alternative interface wrapper for `request`. These wrappers can be useful if you prefer to work with Promises, or if you'd like to use `async`/`await` in ES2017.\n\nSeveral alternative interfaces are provided by the request team, including:\n- [`request-promise`](https://github.com/request/request-promise) (uses [Bluebird](https://github.com/petkaantonov/bluebird) Promises)\n- [`request-promise-native`](https://github.com/request/request-promise-native) (uses native Promises)\n- [`request-promise-any`](https://github.com/request/request-promise-any) (uses [any-promise](https://www.npmjs.com/package/any-promise) Promises)\n\nAlso, [`util.promisify`](https://nodejs.org/api/util.html#util_util_promisify_original), which is available from Node.js v8.0 can be used to convert a regular function that takes a callback to return a promise instead.\n\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\n\n#### application/x-www-form-urlencoded (URL-Encoded Forms)\n\nURL-encoded forms are simple.\n\n```js\nrequest.post('http://service.com/upload', {form:{key:'value'}})\n// or\nrequest.post('http://service.com/upload').form({key:'value'})\n// or\nrequest.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })\n```\n\n\n#### multipart/form-data (Multipart Form Uploads)\n\nFor `multipart/form-data` we use the [form-data](https://github.com/form-data/form-data) library by [@felixge](https://github.com/felixge). For the most cases, you can pass your upload form data via the `formData` option.\n\n\n```js\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});\n```\n\nFor advanced cases, you can access the form-data object itself via `r.form()`. This can be modified until the request is fired on the next cycle of the event-loop. (Note that this calling `form()` will clear the currently set form data for that request.)\n\n```js\n// NOTE: Advanced use-case, for normal use see 'formData' usage above\nconst r = request.post('http://service.com/upload', function optionalCallback(err, httpResponse, body) {...})\nconst form = r.form();\nform.append('my_field', 'my_value');\nform.append('my_buffer', Buffer.from([1, 2, 3]));\nform.append('custom_file', fs.createReadStream(__dirname + '/unicycle.jpg'), {filename: 'unicycle.jpg'});\n```\nSee the [form-data README](https://github.com/form-data/form-data) for more information & examples.\n\n\n#### multipart/related\n\nSome variations in different HTTP implementations require a newline/CRLF before, after, or both before and after the boundary of a `multipart/related` request (using the multipart option). This has been observed in the .NET WebAPI version 4.0. You can turn on a boundary preambleCRLF or postamble by passing them as `true` to your request options.\n\n```js\n  request({\n    method: 'PUT',\n    preambleCRLF: true,\n    postambleCRLF: true,\n    uri: 'http://service.com/upload',\n    multipart: [\n      {\n        'content-type': 'application/json',\n        body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n      },\n      { body: 'I am an attachment' },\n      { body: fs.createReadStream('image.png') }\n    ],\n    // alternatively pass an object containing additional options\n    multipart: {\n      chunked: false,\n      data: [\n        {\n          'content-type': 'application/json',\n          body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        },\n        { body: 'I am an attachment' }\n      ]\n    }\n  },\n  function (error, response, body) {\n    if (error) {\n      return console.error('upload failed:', error);\n    }\n    console.log('Upload successful!  Server responded with:', body);\n  })\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## HTTP Authentication\n\n```js\nrequest.get('http://some.server.com/').auth('username', 'password', false);\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n// or\nrequest.get('http://some.server.com/').auth(null, null, true, 'bearerToken');\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'bearer': 'bearerToken'\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values:\n\n- `user` || `username`\n- `pass` || `password`\n- `sendImmediately` (optional)\n- `bearer` (optional)\n\nThe method form takes parameters\n`auth(username, password, sendImmediately, bearer)`.\n\n`sendImmediately` defaults to `true`, which causes a basic or bearer\nauthentication header to be sent. If `sendImmediately` is `false`, then\n`request` will retry with a proper authentication header after receiving a\n`401` response from the server (which must contain a `WWW-Authenticate` header\nindicating the required authentication method).\n\nNote that you can also specify basic authentication using the URL itself, as\ndetailed in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). Simply pass the\n`user:password` before the host with an `@` sign:\n\n```js\nconst username = 'username',\n    password = 'password',\n    url = 'http://' + username + ':' + password + '@some.server.com';\n\nrequest({url}, function (error, response, body) {\n   // Do more stuff with 'body' here\n});\n```\n\nDigest authentication is supported, but it only works with `sendImmediately`\nset to `false`; otherwise `request` will send basic authentication on the\ninitial request, which will probably cause the request to fail.\n\nBearer authentication is supported, and is activated when the `bearer` value is\navailable. The value may be either a `String` or a `Function` returning a\n`String`. Using a function to supply the bearer token is particularly useful if\nused in conjunction with `defaults` to allow a single function to supply the\nlast known token at the time of sending a request, or to compute one on the fly.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```js\nconst request = require('request');\n\nconst options = {\n  url: 'https://api.github.com/repos/request/request',\n  headers: {\n    'User-Agent': 'request'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    console.log(info.stargazers_count + \" Stars\");\n    console.log(info.forks_count + \" Forks\");\n  }\n}\n\nrequest(options, callback);\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## OAuth Signing\n\n[OAuth version 1.0](https://tools.ietf.org/html/rfc5849) is supported. The\ndefault signing algorithm is\n[HMAC-SHA1](https://tools.ietf.org/html/rfc5849#section-3.4.2):\n\n```js\n// OAuth1.0 - 3-legged server side flow (Twitter example)\n// step 1\nconst qs = require('querystring')\n  , oauth =\n    { callback: 'http://mysite.com/callback/'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = 'https://api.twitter.com/oauth/request_token'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n\n  // step 2\n  const req_data = qs.parse(body)\n  const uri = 'https://api.twitter.com/oauth/authenticate'\n    + '?' + qs.stringify({oauth_token: req_data.oauth_token})\n  // redirect the user to the authorize uri\n\n  // step 3\n  // after the user is redirected back to your server\n  const auth_data = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: auth_data.oauth_token\n      , token_secret: req_data.oauth_token_secret\n      , verifier: auth_data.oauth_verifier\n      }\n    , url = 'https://api.twitter.com/oauth/access_token'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    // ready to make signed requests on behalf of the user\n    const perm_data = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_data.oauth_token\n        , token_secret: perm_data.oauth_token_secret\n        }\n      , url = 'https://api.twitter.com/1.1/users/show.json'\n      , qs =\n        { screen_name: perm_data.screen_name\n        , user_id: perm_data.user_id\n        }\n      ;\n    request.get({url:url, oauth:oauth, qs:qs, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\nFor [RSA-SHA1 signing](https://tools.ietf.org/html/rfc5849#section-3.4.3), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'RSA-SHA1'`\n* Instead of `consumer_secret`, specify a `private_key` string in\n  [PEM format](http://how2ssl.com/articles/working_with_pem_files/)\n\nFor [PLAINTEXT signing](http://oauth.net/core/1.0/#anchor22), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'PLAINTEXT'`\n\nTo send OAuth parameters via query params or in a post body as described in The\n[Consumer Request Parameters](http://oauth.net/core/1.0/#consumer_req_param)\nsection of the oauth1 spec:\n* Pass `transport_method : 'query'` or `transport_method : 'body'` in the OAuth\n  options object.\n* `transport_method` defaults to `'header'`\n\nTo use [Request Body Hash](https://oauth.googlecode.com/svn/spec/ext/body_hash/1.0/oauth-bodyhash.html) you can either\n* Manually generate the body hash and pass it as a string `body_hash: '...'`\n* Automatically generate the body hash by passing `body_hash: true`\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Proxies\n\nIf you specify a `proxy` option, then the request (and any subsequent\nredirects) will be sent via a connection to the proxy server.\n\nIf your endpoint is an `https` url, and you are using a proxy, then\nrequest will send a `CONNECT` request to the proxy server *first*, and\nthen use the supplied connection to connect to the endpoint.\n\nThat is, first it will make a request like:\n\n```\nHTTP/1.1 CONNECT endpoint-server.com:80\nHost: proxy-server.com\nUser-Agent: whatever user agent you specify\n```\n\nand then the proxy server make a TCP connection to `endpoint-server`\non port `80`, and return a response that looks like:\n\n```\nHTTP/1.1 200 OK\n```\n\nAt this point, the connection is left open, and the client is\ncommunicating directly with the `endpoint-server.com` machine.\n\nSee [the wikipedia page on HTTP Tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel)\nfor more information.\n\nBy default, when proxying `http` traffic, request will simply make a\nstandard proxied `http` request. This is done by making the `url`\nsection of the initial line of the request a fully qualified url to\nthe endpoint.\n\nFor example, it will make a single request that looks like:\n\n```\nHTTP/1.1 GET http://endpoint-server.com/some-url\nHost: proxy-server.com\nOther-Headers: all go here\n\nrequest body or whatever\n```\n\nBecause a pure \"http over http\" tunnel offers no additional security\nor other features, it is generally simpler to go with a\nstraightforward HTTP proxy in this case. However, if you would like\nto force a tunneling proxy, you may set the `tunnel` option to `true`.\n\nYou can also make a standard proxied `http` request by explicitly setting\n`tunnel : false`, but **note that this will allow the proxy to see the traffic\nto/from the destination server**.\n\nIf you are using a tunneling proxy, you may set the\n`proxyHeaderWhiteList` to share certain headers with the proxy.\n\nYou can also set the `proxyHeaderExclusiveList` to share certain\nheaders only with the proxy and not with destination host.\n\nBy default, this set is:\n\n```\naccept\naccept-charset\naccept-encoding\naccept-language\naccept-ranges\ncache-control\ncontent-encoding\ncontent-language\ncontent-length\ncontent-location\ncontent-md5\ncontent-range\ncontent-type\nconnection\ndate\nexpect\nmax-forwards\npragma\nproxy-authorization\nreferer\nte\ntransfer-encoding\nuser-agent\nvia\n```\n\nNote that, when using a tunneling proxy, the `proxy-authorization`\nheader and any headers from custom `proxyHeaderExclusiveList` are\n*never* sent to the endpoint server, but only to the proxy server.\n\n\n### Controlling proxy behaviour using environment variables\n\nThe following environment variables are respected by `request`:\n\n * `HTTP_PROXY` / `http_proxy`\n * `HTTPS_PROXY` / `https_proxy`\n * `NO_PROXY` / `no_proxy`\n\nWhen `HTTP_PROXY` / `http_proxy` are set, they will be used to proxy non-SSL requests that do not have an explicit `proxy` configuration option present. Similarly, `HTTPS_PROXY` / `https_proxy` will be respected for SSL requests that do not have an explicit `proxy` configuration option. It is valid to define a proxy in one of the environment variables, but then override it for a specific request, using the `proxy` configuration option. Furthermore, the `proxy` configuration option can be explicitly set to false / null to opt out of proxying altogether for that request.\n\n`request` is also aware of the `NO_PROXY`/`no_proxy` environment variables. These variables provide a granular way to opt out of proxying, on a per-host basis. It should contain a comma separated list of hosts to opt out of proxying. It is also possible to opt of proxying when a particular destination port is used. Finally, the variable may be set to `*` to opt out of the implicit proxy configuration of the other environment variables.\n\nHere's some examples of valid `no_proxy` values:\n\n * `google.com` - don't proxy HTTP/HTTPS requests to Google.\n * `google.com:443` - don't proxy HTTPS requests to Google, but *do* proxy HTTP requests to Google.\n * `google.com:443, yahoo.com:80` - don't proxy HTTPS requests to Google, and don't proxy HTTP requests to Yahoo!\n * `*` - ignore `https_proxy`/`http_proxy` environment variables altogether.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## UNIX Domain Sockets\n\n`request` supports making requests to [UNIX Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket). To make one, use the following URL scheme:\n\n```js\n/* Pattern */ 'http://unix:SOCKET:PATH'\n/* Example */ request.get('http://unix:/absolute/path/to/unix.socket:/request/path')\n```\n\nNote: The `SOCKET` path is assumed to be absolute to the root of the host file system.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## TLS/SSL Protocol\n\nTLS/SSL Protocol options, such as `cert`, `key` and `passphrase`, can be\nset directly in `options` object, in the `agentOptions` property of the `options` object, or even in `https.globalAgent.options`. Keep in mind that, although `agentOptions` allows for a slightly wider range of configurations, the recommended way is via `options` object directly, as using `agentOptions` or `https.globalAgent.options` would not be applied in the same way in proxied environments (as data travels through a TLS connection instead of an http/https agent).\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , caFile = path.resolve(__dirname, 'ssl/ca.cert.pem')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    cert: fs.readFileSync(certFile),\n    key: fs.readFileSync(keyFile),\n    passphrase: 'password',\n    ca: fs.readFileSync(caFile)\n};\n\nrequest.get(options);\n```\n\n### Using `options.agentOptions`\n\nIn the example below, we call an API that requires client side SSL certificate\n(in PEM format) with passphrase protected private key (in PEM format) and disable the SSLv3 protocol:\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        cert: fs.readFileSync(certFile),\n        key: fs.readFileSync(keyFile),\n        // Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:\n        // pfx: fs.readFileSync(pfxFilePath),\n        passphrase: 'password',\n        securityOptions: 'SSL_OP_NO_SSLv3'\n    }\n};\n\nrequest.get(options);\n```\n\nIt is able to force using SSLv3 only by specifying `secureProtocol`:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        secureProtocol: 'SSLv3_method'\n    }\n});\n```\n\nIt is possible to accept other certificates than those signed by generally allowed Certificate Authorities (CAs).\nThis can be useful, for example,  when using self-signed certificates.\nTo require a different root certificate, you can specify the signing CA by adding the contents of the CA's certificate file to the `agentOptions`.\nThe certificate the domain presents must be signed by the root certificate specified:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: fs.readFileSync('ca.cert.pem')\n    }\n});\n```\n\nThe `ca` value can be an array of certificates, in the event you have a private or internal corporate public-key infrastructure hierarchy. For example, if you want to connect to https://api.some-server.com which presents a key chain consisting of:\n1. its own public key, which is signed by:\n2. an intermediate \"Corp Issuing Server\", that is in turn signed by: \n3. a root CA \"Corp Root CA\";\n\nyou can configure your request as follows:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: [\n          fs.readFileSync('Corp Issuing Server.pem'),\n          fs.readFileSync('Corp Root CA.pem')\n        ]\n    }\n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Support for HAR 1.2\n\nThe `options.har` property will override the values: `url`, `method`, `qs`, `headers`, `form`, `formData`, `body`, `json`, as well as construct multipart data and read files from disk when `request.postData.params[].fileName` is present without a matching `value`.\n\nA validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.\n\n```js\n  const request = require('request')\n  request({\n    // will be ignored\n    method: 'GET',\n    uri: 'http://www.google.com',\n\n    // HTTP Archive Request Object\n    har: {\n      url: 'http://www.mockbin.com/har',\n      method: 'POST',\n      headers: [\n        {\n          name: 'content-type',\n          value: 'application/x-www-form-urlencoded'\n        }\n      ],\n      postData: {\n        mimeType: 'application/x-www-form-urlencoded',\n        params: [\n          {\n            name: 'foo',\n            value: 'bar'\n          },\n          {\n            name: 'hello',\n            value: 'world'\n          }\n        ]\n      }\n    }\n  })\n\n  // a POST request will be sent to http://www.mockbin.com\n  // with body an application/x-www-form-urlencoded body:\n  // foo=bar&hello=world\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n- `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n- `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain. If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.\n- `method` - http method (default: `\"GET\"`)\n- `headers` - http headers (default: `{}`)\n\n---\n\n- `qs` - object containing querystring values to be appended to the `uri`\n- `qsParseOptions` - object containing options to pass to the [qs.parse](https://github.com/hapijs/qs#parsing-objects) method. Alternatively pass options to the [querystring.parse](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_parse_str_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`\n- `qsStringifyOptions` - object containing options to pass to the [qs.stringify](https://github.com/hapijs/qs#stringifying) method. Alternatively pass options to the  [querystring.stringify](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`. For example, to change the way arrays are converted to query strings using the `qs` module pass the `arrayFormat` option with one of `indices|brackets|repeat`\n- `useQuerystring` - if true, use `querystring` to stringify and parse\n  querystrings, otherwise use `qs` (default: `false`). Set this option to\n  `true` if you need arrays to be serialized as `foo=bar&foo=baz` instead of the\n  default `foo[0]=bar&foo[1]=baz`.\n\n---\n\n- `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer`, `String` or `ReadStream`. If `json` is `true`, then `body` must be a JSON-serializable object.\n- `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded` header. When passed no options, a `FormData` instance is returned (and is piped to request). See \"Forms\" section above.\n- `formData` - data to pass for a `multipart/form-data` request. See\n  [Forms](#forms) section above.\n- `multipart` - array of objects which contain their own headers and `body`\n  attributes. Sends a `multipart/related` request. See [Forms](#forms) section\n  above.\n  - Alternatively you can pass in an object `{chunked: false, data: []}` where\n    `chunked` is used to specify whether the request is sent in\n    [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding)\n    In non-chunked requests, data items with body streams are not allowed.\n- `preambleCRLF` - append a newline/CRLF before the boundary of your `multipart/form-data` request.\n- `postambleCRLF` - append a newline/CRLF at the end of the boundary of your `multipart/form-data` request.\n- `json` - sets `body` to JSON representation of value and adds `Content-type: application/json` header. Additionally, parses the response body as JSON.\n- `jsonReviver` - a [reviver function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) that will be passed to `JSON.parse()` when parsing a JSON response body.\n- `jsonReplacer` - a [replacer function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that will be passed to `JSON.stringify()` when stringifying a JSON request body.\n\n---\n\n- `auth` - a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional). See documentation above.\n- `oauth` - options for OAuth HMAC-SHA1 signing. See documentation above.\n- `hawk` - options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n- `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`, and optionally `session` (note that this only works for services that require session as part of the canonical string). Also requires the property `bucket`, unless you\u2019re specifying your `bucket` as part of the path, or the request doesn\u2019t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter `sign_version` with value `4` otherwise the default is version 2. If you are using SigV4, you can also include a `service` property that specifies the service name. **Note:** you need to `npm install aws4` first.\n- `httpSignature` - options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n\n---\n\n- `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`). This property can also be implemented as function which gets `response` object as a single argument and should return `true` if redirects should continue or `false` otherwise.\n- `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n- `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)\n- `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n- `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.\n\n---\n\n- `encoding` - encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`. Anything else **(including the default value of `undefined`)** will be passed as the [encoding](http://nodejs.org/api/buffer.html#buffer_buffer) parameter to `toString()` (meaning this is effectively `utf8` by default). (**Note:** if you expect binary data, you should set `encoding: null`.)\n- `gzip` - if `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response. **Note:** Automatic decoding of the response content is performed on the body data returned through `request` (both through the `request` stream and passed to the callback function) but is not performed on the `response` stream (available from the `response` event) which is the unmodified `http.IncomingMessage` object which may contain compressed data. See example below.\n- `jar` - if `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n\n---\n\n- `agent` - `http(s).Agent` instance to use\n- `agentClass` - alternatively specify your agent's class name\n- `agentOptions` - and pass its options. **Note:** for HTTPS see [tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback) and the [documentation above](#using-optionsagentoptions).\n- `forever` - set to `true` to use the [forever-agent](https://github.com/request/forever-agent) **Note:** Defaults to `http(s).Agent({keepAlive:true})` in node 0.12+\n- `pool` - an object describing which agents to use for the request. If this option is omitted the request will use the global agent (as long as your options allow for it). Otherwise, request will search the pool for your custom agent. If no custom agent is found, a new agent will be created and added to the pool. **Note:** `pool` is used only when the `agent` option is not specified.\n  - A `maxSockets` property can also be provided on the `pool` object to set the max number of sockets for all agents created (ex: `pool: {maxSockets: Infinity}`).\n  - Note that if you are sending multiple requests in a loop and creating\n    multiple new `pool` objects, `maxSockets` will not work as intended. To\n    work around this, either use [`request.defaults`](#requestdefaultsoptions)\n    with your pool options or create the pool object with the `maxSockets`\n    property outside of the loop.\n- `timeout` - integer containing number of milliseconds, controls two timeouts.\n  - **Read timeout**: Time to wait for a server to send response headers (and start the response body) before aborting the request.\n  - **Connection timeout**: Sets the socket to timeout after `timeout` milliseconds of inactivity. Note that increasing the timeout beyond the OS-wide TCP connection timeout will not have any effect ([the default in Linux can be anywhere from 20-120 seconds][linux-timeout])\n\n[linux-timeout]: http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout\n\n---\n\n- `localAddress` - local interface to bind for network connections.\n- `proxy` - an HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n- `strictSSL` - if `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n- `tunnel` - controls the behavior of\n  [HTTP `CONNECT` tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_tunneling)\n  as follows:\n   - `undefined` (default) - `true` if the destination is `https`, `false` otherwise\n   - `true` - always tunnel to the destination by making a `CONNECT` request to\n     the proxy\n   - `false` - request the destination as a `GET` request.\n- `proxyHeaderWhiteList` - a whitelist of headers to send to a\n  tunneling proxy.\n- `proxyHeaderExclusiveList` - a whitelist of headers to send\n  exclusively to a tunneling proxy and not to destination.\n\n---\n\n- `time` - if `true`, the request-response cycle (including all redirects) is timed at millisecond resolution. When set, the following properties are added to the response object:\n  - `elapsedTime` Duration of the entire request/response in milliseconds (*deprecated*).\n  - `responseStartTime` Timestamp when the response began (in Unix Epoch milliseconds) (*deprecated*).\n  - `timingStart` Timestamp of the start of the request (in Unix Epoch milliseconds).\n  - `timings` Contains event timestamps in millisecond resolution relative to `timingStart`. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `socket` Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_socket) module's `socket` event fires. This happens when the socket is assigned to the request.\n    - `lookup` Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_lookup) module's `lookup` event fires. This happens when the DNS has been resolved.\n    - `connect`: Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_connect) module's `connect` event fires. This happens when the server acknowledges the TCP connection.\n    - `response`: Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_response) module's `response` event fires. This happens when the first bytes are received from the server.\n    - `end`: Relative timestamp when the last bytes of the response are received.\n  - `timingPhases` Contains the durations of each request phase. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `wait`: Duration of socket initialization (`timings.socket`)\n    - `dns`: Duration of DNS lookup (`timings.lookup` - `timings.socket`)\n    - `tcp`: Duration of TCP connection (`timings.connect` - `timings.socket`)\n    - `firstByte`: Duration of HTTP server response (`timings.response` - `timings.connect`)\n    - `download`: Duration of HTTP download (`timings.end` - `timings.response`)\n    - `total`: Duration entire HTTP round-trip (`timings.end`)\n\n- `har` - a [HAR 1.2 Request Object](http://www.softwareishard.com/blog/har-12-spec/#request), will be processed from HAR format into options overwriting matching values *(see the [HAR 1.2 section](#support-for-har-12) for details)*\n- `callback` - alternatively pass the request's callback in the options object\n\nThe callback argument gets 3 arguments:\n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) object (Response object)\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n\n### request.defaults(options)\n\nThis method **returns a wrapper** around the normal request API that defaults\nto whatever options you pass to it.\n\n**Note:** `request.defaults()` **does not** modify the global request API;\ninstead, it **returns a wrapper** that has your default settings applied to it.\n\n**Note:** You can call `.defaults()` on the wrapper that is returned from\n`request.defaults` to add/override defaults that were previously defaulted.\n\nFor example:\n```js\n//requests using baseRequest() will set the 'x-token' header\nconst baseRequest = request.defaults({\n  headers: {'x-token': 'my-token'}\n})\n\n//requests using specialRequest() will include the 'x-token' header set in\n//baseRequest and will also include the 'special' header\nconst specialRequest = baseRequest.defaults({\n  headers: {special: 'special value'}\n})\n```\n\n### request.METHOD()\n\nThese HTTP method convenience functions act just like `request()` but with a default method already set for you:\n\n- *request.get()*: Defaults to `method: \"GET\"`.\n- *request.post()*: Defaults to `method: \"POST\"`.\n- *request.put()*: Defaults to `method: \"PUT\"`.\n- *request.patch()*: Defaults to `method: \"PATCH\"`.\n- *request.del() / request.delete()*: Defaults to `method: \"DELETE\"`.\n- *request.head()*: Defaults to `method: \"HEAD\"`.\n- *request.options()*: Defaults to `method: \"OPTIONS\"`.\n\n### request.cookie()\n\nFunction that creates a new cookie.\n\n```js\nrequest.cookie('key1=value1')\n```\n### request.jar()\n\nFunction that creates a new cookie jar.\n\n```js\nrequest.jar()\n```\n\n### response.caseless.get('header-name')\n\nFunction that returns the specified response header field using a [case-insensitive match](https://tools.ietf.org/html/rfc7230#section-3.2)\n\n```js\nrequest('http://www.google.com', function (error, response, body) {\n  // print the Content-Type header even if the server returned it as 'content-type' (lowercase)\n  console.log('Content-Type is:', response.caseless.get('Content-Type')); \n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Debugging\n\nThere are at least three ways to debug the operation of `request`:\n\n1. Launch the node process like `NODE_DEBUG=request node script.js`\n   (`lib,request,otherlib` works too).\n\n2. Set `require('request').debug = true` at any time (this does the same thing\n   as #1).\n\n3. Use the [request-debug module](https://github.com/request/request-debug) to\n   view request and response headers and bodies.\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Timeouts\n\nMost requests to external servers should have a timeout attached, in case the\nserver is not responding in a timely manner. Without a timeout, your code may\nhave a socket open/consume resources for minutes or more.\n\nThere are two main types of timeouts: **connection timeouts** and **read\ntimeouts**. A connect timeout occurs if the timeout is hit while your client is\nattempting to establish a connection to a remote machine (corresponding to the\n[connect() call][connect] on the socket). A read timeout occurs any time the\nserver is too slow to send back a part of the response.\n\nThese two situations have widely different implications for what went wrong\nwith the request, so it's useful to be able to distinguish them. You can detect\ntimeout errors by checking `err.code` for an 'ETIMEDOUT' value. Further, you\ncan detect whether the timeout was a connection timeout by checking if the\n`err.connect` property is set to `true`.\n\n```js\nrequest.get('http://10.255.255.1', {timeout: 1500}, function(err) {\n    console.log(err.code === 'ETIMEDOUT');\n    // Set to `true` if the timeout was a connection timeout, `false` or\n    // `undefined` otherwise.\n    console.log(err.connect === true);\n    process.exit(0);\n});\n```\n\n[connect]: http://linux.die.net/man/2/connect\n\n## Examples:\n\n```js\n  const request = require('request')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand\n    , multipart:\n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)\n      } else {\n        console.log('error: '+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nFor backwards-compatibility, response compression is not supported by default.\nTo accept gzip-compressed responses, set the `gzip` option to `true`. Note\nthat the body data passed through `request` is automatically decompressed\nwhile the response object is unmodified and will contain compressed data if\nthe server sent a compressed response.\n\n```js\n  const request = require('request')\n  request(\n    { method: 'GET'\n    , uri: 'http://www.google.com'\n    , gzip: true\n    }\n  , function (error, response, body) {\n      // body is the decompressed response body\n      console.log('server encoded the data as: ' + (response.headers['content-encoding'] || 'identity'))\n      console.log('the decoded data is: ' + body)\n    }\n  )\n  .on('data', function(data) {\n    // decompressed data as it is received\n    console.log('decoded chunk: ' + data)\n  })\n  .on('response', function(response) {\n    // unmodified http.IncomingMessage object\n    response.on('data', function(data) {\n      // compressed data as it is received\n      console.log('received ' + data.length + ' bytes of compressed data')\n    })\n  })\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```js\nconst request = request.defaults({jar: true})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie jar (instead of `request`\u2019s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```js\nconst j = request.jar()\nconst request = request.defaults({jar:j})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nOR\n\n```js\nconst j = request.jar();\nconst cookie = request.cookie('key1=value1');\nconst url = 'http://www.google.com';\nj.setCookie(cookie, url);\nrequest({url: url, jar: j}, function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie store (such as a\n[`FileCookieStore`](https://github.com/mitsuru/tough-cookie-filestore)\nwhich supports saving to and restoring from JSON files), pass it as a parameter\nto `request.jar()`:\n\n```js\nconst FileCookieStore = require('tough-cookie-filestore');\n// NOTE - currently the 'cookies.json' file must already exist!\nconst j = request.jar(new FileCookieStore('cookies.json'));\nrequest = request.defaults({ jar : j })\nrequest('http://www.google.com', function() {\n  request('http://images.google.com')\n})\n```\n\nThe cookie store must be a\n[`tough-cookie`](https://github.com/SalesforceEng/tough-cookie)\nstore and it must support synchronous operations; see the\n[`CookieStore` API docs](https://github.com/SalesforceEng/tough-cookie#api)\nfor details.\n\nTo inspect your cookie jar after a request:\n\n```js\nconst j = request.jar()\nrequest({url: 'http://www.google.com', jar: j}, function () {\n  const cookie_string = j.getCookieString(url); // \"key1=value1; key2=value2; ...\"\n  const cookies = j.getCookies(url);\n  // [{key: 'key1', value: 'value1', domain: \"www.google.com\", ...}, ...]\n})\n```\n\n[back to top](#table-of-contents)"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1136563}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 19712234}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 80258274}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 247597769}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 438099287}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 828299964}], "dependentsCount": 38242, "starsCount": 1506}, "github": {"starsCount": 24551, "forksCount": 2914, "subscribersCount": 449, "issues": {"count": 3294, "openCount": 185, "distribution": {"3600": 327, "10800": 140, "32400": 166, "97200": 299, "291600": 259, "874800": 284, "2624400": 242, "7873200": 208, "23619600": 257, "70858800": 732, "212576400": 380}, "isDisabled": false}, "contributors": [{"username": "mikeal", "commitsCount": 367}, {"username": "simov", "commitsCount": 259}, {"username": "nylen", "commitsCount": 168}, {"username": "greenkeeperio-bot", "commitsCount": 49}, {"username": "seanstrom", "commitsCount": 35}, {"username": "isaacs", "commitsCount": 31}, {"username": "eiriksm", "commitsCount": 21}, {"username": "mscdex", "commitsCount": 15}, {"username": "ahmadnassri", "commitsCount": 13}, {"username": "Turbo87", "commitsCount": 12}, {"username": "froatsnook", "commitsCount": 12}, {"username": "papandreou", "commitsCount": 11}, {"username": "nicjansma", "commitsCount": 10}, {"username": "tikotzky", "commitsCount": 10}, {"username": "lalitkapoor", "commitsCount": 9}, {"username": "mmalecki", "commitsCount": 9}, {"username": "csainty", "commitsCount": 8}, {"username": "RReverser", "commitsCount": 7}, {"username": "reconbot", "commitsCount": 7}, {"username": "jhs", "commitsCount": 6}, {"username": "FredKSchott", "commitsCount": 5}, {"username": "aesopwolf", "commitsCount": 5}, {"username": "benatkin", "commitsCount": 5}, {"username": "charlespwd", "commitsCount": 5}, {"username": "janjongboom", "commitsCount": 5}, {"username": "joaojeronimo", "commitsCount": 5}, {"username": "kevinoid", "commitsCount": 5}, {"username": "twilson63", "commitsCount": 5}, {"username": "0x4139", "commitsCount": 4}, {"username": "aaron-em", "commitsCount": 4}, {"username": "emkay", "commitsCount": 4}, {"username": "guimon", "commitsCount": 4}, {"username": "hueniverse", "commitsCount": 4}, {"username": "mafintosh", "commitsCount": 4}, {"username": "noway", "commitsCount": 4}, {"username": "rwky", "commitsCount": 4}, {"username": "tbuchok", "commitsCount": 4}, {"username": "vpulim", "commitsCount": 4}, {"username": "wprl", "commitsCount": 4}, {"username": "DullReferenceException", "commitsCount": 3}, {"username": "Filirom1", "commitsCount": 3}, {"username": "Stanley", "commitsCount": 3}, {"username": "ZJONSSON", "commitsCount": 3}, {"username": "dai-shi", "commitsCount": 3}, {"username": "diversario", "commitsCount": 3}, {"username": "hypesystem", "commitsCount": 3}, {"username": "lexander", "commitsCount": 3}, {"username": "mitsuru", "commitsCount": 3}, {"username": "nlf", "commitsCount": 3}, {"username": "polotek", "commitsCount": 3}, {"username": "stash", "commitsCount": 3}, {"username": "thejh", "commitsCount": 3}, {"username": "watson", "commitsCount": 3}, {"username": "zertosh", "commitsCount": 3}, {"username": "Cauldrath", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 2}, {"username": "JoshWillik", "commitsCount": 2}, {"username": "LoicMahieu", "commitsCount": 2}, {"username": "Marsup", "commitsCount": 2}, {"username": "ReadmeCritic", "commitsCount": 2}, {"username": "SamPlacette", "commitsCount": 2}, {"username": "YasharF", "commitsCount": 2}, {"username": "aj0strow", "commitsCount": 2}, {"username": "akshayp", "commitsCount": 2}, {"username": "alexindigo", "commitsCount": 2}, {"username": "apoco", "commitsCount": 2}, {"username": "bcoe", "commitsCount": 2}, {"username": "calibr", "commitsCount": 2}, {"username": "cappslock", "commitsCount": 2}, {"username": "clement", "commitsCount": 2}, {"username": "crocket", "commitsCount": 2}, {"username": "daniel347x", "commitsCount": 2}, {"username": "davidlehn", "commitsCount": 2}, {"username": "dotcypress", "commitsCount": 2}, {"username": "drudge", "commitsCount": 2}, {"username": "goatslacker", "commitsCount": 2}, {"username": "itay", "commitsCount": 2}, {"username": "jhurliman", "commitsCount": 2}, {"username": "joemccann", "commitsCount": 2}, {"username": "jongyoonlee", "commitsCount": 2}, {"username": "joshux", "commitsCount": 2}, {"username": "jplock", "commitsCount": 2}, {"username": "jrgm", "commitsCount": 2}, {"username": "jvmccarthy", "commitsCount": 2}, {"username": "kevinburke", "commitsCount": 2}, {"username": "mbrevoort", "commitsCount": 2}, {"username": "mgenereu", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "paulirish", "commitsCount": 2}, {"username": "poislagarde", "commitsCount": 2}, {"username": "pvoznenko", "commitsCount": 2}, {"username": "shimaore", "commitsCount": 2}, {"username": "substack", "commitsCount": 2}, {"username": "tgohn", "commitsCount": 2}, {"username": "timshadel", "commitsCount": 2}, {"username": "vohof", "commitsCount": 2}, {"username": "zephrax", "commitsCount": 2}, {"username": "andresroberto", "commitsCount": 1}, {"username": "gr2m", "commitsCount": 1}, {"username": "odykyi", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "coverage/coveralls", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 46386, "testsSize": 283479, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/request.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/request.svg", "content": "https://img.shields.io/npm/v/request.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://img.shields.io/travis/request/request/master.svg?style=flat-square", "service": "https://api.travis-ci.org/request/request.svg?branch=master", "shields": "https://img.shields.io/travis/request/request/master.svg", "content": "https://img.shields.io/travis/request/request/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square", "service": "https://codecov.io/github/request/request/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/request/request.svg", "content": "https://img.shields.io/codecov/c/github/request/request.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/coveralls/request/request.svg?style=flat-square", "service": "https://coveralls.io/repos/request/request/badge.svg", "shields": "https://img.shields.io/coveralls/request/request.svg", "content": "https://img.shields.io/coveralls/request/request.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/request/request.svg?style=flat-square", "service": "https://david-dm.org/request/request.svg", "shields": "https://img.shields.io/david/request/request.svg", "content": "https://img.shields.io/david/request/request.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["standard"], "coverage": 0.96, "outdatedDependencies": {"uuid": {"required": "^3.3.2", "stable": "8.0.0", "latest": "8.0.0"}, "form-data": {"required": "~2.3.2", "stable": "3.0.0", "latest": "3.0.0"}, "http-signature": {"required": "~1.2.0", "stable": "1.3.4", "latest": "1.3.4"}, "tough-cookie": {"required": "~2.5.0", "stable": "4.0.0", "latest": "4.0.0"}, "qs": {"required": "~6.5.2", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.9315, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 29520, "downloadsCount": 82532589.66666667, "downloadsAcceleration": 142632.6970129375, "dependentsCount": 38242}, "maintenance": {"releasesFrequency": 0.3236301369863014, "commitsFrequency": 0.13952054794520546, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6943778488457132, "detail": {"quality": 0.579540238752148, "popularity": 0.9413331433271551, "maintenance": 0.5458547915873271}}}}, {"@types/jest": {"analyzedAt": "2018-05-18T00:17:51.042Z", "collected": {"metadata": {"name": "@types/jest", "scope": "types", "version": "22.2.3", "description": "TypeScript definitions for Jest", "date": "2018-04-11T19:13:04.094Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "Ivo Stratev", "url": "https://github.com/NoHomey"}, {"name": "jwbay", "url": "https://github.com/jwbay"}, {"name": "Alexey Svetliakov", "url": "https://github.com/asvetliakov"}, {"name": "Alex Jover Morales", "url": "https://github.com/alexjoverm"}, {"name": "Allan Lukwago", "url": "https://github.com/epicallan"}, {"name": "Ika", "url": "https://github.com/ikatyang"}, {"name": "Waseem Dahman", "url": "https://github.com/wsmd"}, {"name": "Jamie Mason", "url": "https://github.com/JamieMason"}, {"name": "Douglas Duteil", "url": "https://github.com/douglasduteil"}, {"name": "Ahn", "url": "https://github.com/AhnpGit"}, {"name": "Josh Goldberg", "url": "https://github.com/joshuakgoldberg"}, {"name": "Bradley Ayers", "url": "https://github.com/bradleyayers"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fjest"}, "license": "MIT", "releases": [{"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 6}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 16}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 33}, {"from": "2016-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 62}], "readme": "# Installation\r\n> `npm install --save @types/jest`\r\n\r\n# Summary\r\nThis package contains type definitions for Jest (http://facebook.github.io/jest/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jest\r\n\r\nAdditional Details\r\n * Last updated: Wed, 11 Apr 2018 19:11:59 GMT\r\n * Dependencies: none\r\n * Global values: afterAll, afterEach, beforeAll, beforeEach, describe, expect, fail, fdescribe, fit, it, jasmine, jest, pending, spyOn, test, xdescribe, xit, xtest\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, Ivo Stratev <https://github.com/NoHomey>, jwbay <https://github.com/jwbay>, Alexey Svetliakov <https://github.com/asvetliakov>, Alex Jover Morales <https://github.com/alexjoverm>, Allan Lukwago <https://github.com/epicallan>, Ika <https://github.com/ikatyang>, Waseem Dahman <https://github.com/wsmd>, Jamie Mason <https://github.com/JamieMason>, Douglas Duteil <https://github.com/douglasduteil>, Ahn <https://github.com/AhnpGit>, Josh Goldberg <https://github.com/joshuakgoldberg>, Bradley Ayers <https://github.com/bradleyayers>."}, "npm": {"downloads": [{"from": "2018-05-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 252371}, {"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1287714}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 3675932}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 5931806}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 8436358}], "dependentsCount": 157, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 1225310.6666666667, "downloadsAcceleration": 7412.914649923898, "dependentsCount": 157}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-jest-x1ezbw627sq/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-09T16:35:11.516Z"}, "score": {"final": 0.33615455499593494, "detail": {"quality": 0.398969320144589, "popularity": 0.28513454938826166, "maintenance": 0.3333333333333333}}}}, {"cross-env": {"analyzedAt": "2020-05-13T03:12:07.714Z", "collected": {"metadata": {"name": "cross-env", "scope": "unscoped", "version": "7.0.2", "description": "Run scripts that set and use environment variables across platforms", "keywords": ["cross-environment", "environment variable", "windows"], "date": "2020-03-05T20:32:09.373Z", "author": {"name": "Kent C. Dodds", "email": "me@kentcdodds.com", "url": "https://kentcdodds.com"}, "publisher": {"username": "kentcdodds", "email": "me@kentcdodds.com"}, "maintainers": [{"username": "kentcdodds", "email": "kent@doddsfamily.us"}], "repository": {"type": "git", "url": "git+https://github.com/kentcdodds/cross-env.git"}, "links": {"npm": "https://www.npmjs.com/package/cross-env", "homepage": "https://github.com/kentcdodds/cross-env#readme", "repository": "https://github.com/kentcdodds/cross-env", "bugs": "https://github.com/kentcdodds/cross-env/issues"}, "license": "MIT", "dependencies": {"cross-spawn": "^7.0.1"}, "devDependencies": {"kcd-scripts": "^5.2.0"}, "releases": [{"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 0}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 3}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 4}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 9}, {"from": "2018-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n<h1>cross-env \ud83d\udd00</h1>\n\nRun scripts that set and use environment variables across platforms\n\n</div>\n\n<hr />\n\n[![Travis Build Status][build-badge]][build]\n[![AppVeyor Build Status][win-build-badge]][win-build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package] [![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-20-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs] [![Code of Conduct][coc-badge]][coc]\n[![downloads][downloads-badge]][npmtrends]\n\n## The problem\n\nMost Windows command prompts will choke when you set environment variables with\n`NODE_ENV=production` like that. (The exception is [Bash on Windows][win-bash],\nwhich uses native Bash.) Similarly, there's a difference in how windows and\nPOSIX commands utilize environment variables. With POSIX, you use: `$ENV_VAR`\nand on windows you use `%ENV_VAR%`.\n\n## This solution\n\n`cross-env` makes it so you can have a single command without worrying about\nsetting or using the environment variable properly for the platform. Just set it\nlike you would if it's running on a POSIX system, and `cross-env` will take care\nof setting it properly.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [`cross-env` vs `cross-env-shell`](#cross-env-vs-cross-env-shell)\n- [Windows Issues](#windows-issues)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev cross-env\n```\n\n> WARNING! Make sure that when you're installing packages that you spell things\n> correctly to avoid [mistakenly installing malware][malware]\n\n> NOTE : Version 7 of cross-env only supports Node.js 10 and higher, to use it on\n> Node.js 8 or lower install version 6 `npm install --save-dev cross-env@6`\n\n## Usage\n\nI use this in my npm scripts:\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"cross-env NODE_ENV=production webpack --config build/webpack.config.js\"\n  }\n}\n```\n\nUltimately, the command that is executed (using [`cross-spawn`][cross-spawn])\nis:\n\n```\nwebpack --config build/webpack.config.js\n```\n\nThe `NODE_ENV` environment variable will be set by `cross-env`\n\nYou can also split a command into several ones, or separate the environment\nvariables declaration from the actual command execution. You can do it this way:\n\n```json\n{\n  \"scripts\": {\n    \"parentScript\": \"cross-env GREET=\\\"Joe\\\" npm run childScript\",\n    \"childScript\": \"cross-env-shell \\\"echo Hello $GREET\\\"\"\n  }\n}\n```\n\nWhere `childScript` holds the actual command to execute and `parentScript` sets\nthe environment variables to use. Then instead of run the childScript you run\nthe parent. This is quite useful for launching the same command with different\nenv variables or when the environment variables are too long to have everything\nin one line. It also means that you can use `$GREET` env var syntax even on\nWindows which would usually require it to be `%GREET%`.\n\nIf you precede a dollar sign with an odd number of backslashes the expression\nstatement will not be replaced. Note that this means backslashes after the JSON\nstring escaping took place. `\"FOO=\\\\$BAR\"` will not be replaced.\n`\"FOO=\\\\\\\\$BAR\"` will be replaced though.\n\nLastly, if you want to pass a JSON string (e.g., when using [ts-loader]), you\ncan do as follows:\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"cross-env TS_NODE_COMPILER_OPTIONS={\\\\\\\"module\\\\\\\":\\\\\\\"commonjs\\\\\\\"} node some_file.test.ts\"\n  }\n}\n```\n\nPay special attention to the **triple backslash** `(\\\\\\)` **before** the\n**double quotes** `(\")` and the **absence** of **single quotes** `(')`. Both of\nthese conditions have to be met in order to work both on Windows and UNIX.\n\n## `cross-env` vs `cross-env-shell`\n\nThe `cross-env` module exposes two bins: `cross-env` and `cross-env-shell`. The\nfirst one executes commands using [`cross-spawn`][cross-spawn], while the second\none uses the `shell` option from Node's `spawn`.\n\nThe main use case for `cross-env-shell` is when you need an environment variable\nto be set across an entire inline shell script, rather than just one command.\n\nFor example, if you want to have the environment variable apply to several\ncommands in series then you will need to wrap those in quotes and use\n`cross-env-shell` instead of `cross-env`.\n\n```json\n{\n  \"scripts\": {\n    \"greet\": \"cross-env-shell GREETING=Hi NAME=Joe \\\"echo $GREETING && echo $NAME\\\"\"\n  }\n}\n```\n\nThe rule of thumb is: if you want to pass to `cross-env` a command that contains\nspecial shell characters _that you want interpreted_, then use\n`cross-env-shell`. Otherwise stick to `cross-env`.\n\nOn Windows you need to use `cross-env-shell`, if you want to handle\n[signal events](https://nodejs.org/api/process.html#process_signal_events)\ninside of your program. A common case for that is when you want to capture a\n`SIGINT` event invoked by pressing `Ctrl + C` on the command-line interface.\n\n## Windows Issues\n\nPlease note that `npm` uses `cmd` by default and that doesn't support command\nsubstitution, so if you want to leverage that, then you need to update your\n`.npmrc` to set the `script-shell` to powershell.\n[Learn more here](https://github.com/kentcdodds/cross-env/issues/192#issuecomment-513341729).\n\n## Inspiration\n\nI originally created this to solve a problem I was having with my npm scripts in\n[angular-formly][angular-formly]. This made contributing to the project much\neasier for Windows users.\n\n## Other Solutions\n\n- [`env-cmd`](https://github.com/toddbluhm/env-cmd) - Reads environment\n  variables from a file instead\n- [`@naholyr/cross-env`](https://www.npmjs.com/package/@naholyr/cross-env) -\n  `cross-env` with support for setting default values\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://kentcdodds.com\"><img src=\"https://avatars.githubusercontent.com/u/1500684?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#infra-kentcdodds\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://zhuangya.me\"><img src=\"https://avatars1.githubusercontent.com/u/499038?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ya Zhuang </b></sub></a><br /><a href=\"#plugin-zhuangya\" title=\"Plugin/utility libraries\">\ud83d\udd0c</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=zhuangya\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://wopian.me\"><img src=\"https://avatars3.githubusercontent.com/u/3440094?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>James Harris</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=wopian\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/compumike08\"><img src=\"https://avatars1.githubusercontent.com/u/8941730?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>compumike08</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Acompumike08\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/danielo515\"><img src=\"https://avatars1.githubusercontent.com/u/2270425?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rodr\u00edguez Rivero</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Adanielo515\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/inyono\"><img src=\"https://avatars2.githubusercontent.com/u/1508477?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonas Keinholz</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ainyono\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/hgwood\"><img src=\"https://avatars3.githubusercontent.com/u/1656170?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hugo Wood</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ahgwood\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/thomasthiebaud\"><img src=\"https://avatars0.githubusercontent.com/u/3715715?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thiebaud Thomas</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Athomasthiebaud\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://daniel.blog\"><img src=\"https://avatars1.githubusercontent.com/u/1715800?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rey L\u00f3pez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"http://amilajack.com\"><img src=\"https://avatars2.githubusercontent.com/u/6374832?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amila Welihinda</b></sub></a><br /><a href=\"#infra-amilajack\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/paulcbetts\"><img src=\"https://avatars1.githubusercontent.com/u/1396?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Betts</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Apaulcbetts\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=paulcbetts\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/turnerhayes\"><img src=\"https://avatars1.githubusercontent.com/u/6371670?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Turner Hayes</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Aturnerhayes\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sudo-suhas\"><img src=\"https://avatars2.githubusercontent.com/u/22251956?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Suhas Karanth</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sventschui\"><img src=\"https://avatars3.githubusercontent.com/u/512692?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sven</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#example-sventschui\" title=\"Examples\">\ud83d\udca1</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/NicoZelaya\"><img src=\"https://avatars0.githubusercontent.com/u/5522668?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>D. Nicol\u00e1s Lopez Zelaya</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=NicoZelaya\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"http://bithavoc.io\"><img src=\"https://avatars3.githubusercontent.com/u/219289?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Johan Hernandez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bithavoc\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jnielson94\"><img src=\"https://avatars3.githubusercontent.com/u/13559161?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jordan Nielson</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ajnielson94\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://nz.linkedin.com/in/jsonc11\"><img src=\"https://avatars0.githubusercontent.com/u/5185660?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jason Cooke</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=Jason-Cooke\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bibo5088\"><img src=\"https://avatars0.githubusercontent.com/u/17709887?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>bibo5088</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bibo5088\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://codefund.io\"><img src=\"https://avatars2.githubusercontent.com/u/12481?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric Berry</b></sub></a><br /><a href=\"#fundingFinding-coderberry\" title=\"Funding Finding\">\ud83d\udd0d</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Micha\u00ebl De Boey</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=MichaelDeBoey\" title=\"Code\">\ud83d\udcbb</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/lauriii\"><img src=\"https://avatars0.githubusercontent.com/u/1845495?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lauri Eskola</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=lauriii\" title=\"Documentation\">\ud83d\udcd6</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n> Note: this was added late into the project. If you've contributed to this\n> project in any way, please make a pull request to add yourself to the list by\n> following the instructions in the `CONTRIBUTING.md`\n\n## LICENSE\n\nMIT\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]:\n  https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square\n[build]: https://travis-ci.org/kentcdodds/cross-env\n[win-build-badge]:\n  https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square\n[win-build]: https://ci.appveyor.com/project/kentcdodds/cross-env\n[coverage-badge]:\n  https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/cross-env\n[version-badge]: https://img.shields.io/npm/v/cross-env.svg?style=flat-square\n[package]: https://www.npmjs.com/package/cross-env\n[downloads-badge]: https://img.shields.io/npm/dm/cross-env.svg?style=flat-square\n[npmtrends]: https://www.npmtrends.com/cross-env\n[license-badge]: https://img.shields.io/npm/l/cross-env.svg?style=flat-square\n[license]: https://github.com/kentcdodds/cross-env/blob/master/other/LICENSE\n[prs-badge]:\n  https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]:\n  https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]:\n  https://github.com/kentcdodds/cross-env/blob/master/other/CODE_OF_CONDUCT.md\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[win-bash]: https://msdn.microsoft.com/en-us/commandline/wsl/about\n[angular-formly]: https://github.com/formly-js/angular-formly\n[cross-spawn]: https://www.npmjs.com/package/cross-spawn\n[ts-loader]: https://www.npmjs.com/package/ts-loader\n[malware]:\n  http://blog.npmjs.org/post/163723642530/crossenv-malware-on-the-npm-registry"}, "npm": {"downloads": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 473082}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2492981}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 10407093}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 29404163}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 51252950}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 91576299}], "dependentsCount": 2114, "starsCount": 297}, "github": {"homepage": "https://www.npmjs.com/package/cross-env", "starsCount": 4717, "forksCount": 196, "subscribersCount": 35, "issues": {"count": 231, "openCount": 6, "distribution": {"3600": 69, "10800": 23, "32400": 30, "97200": 28, "291600": 12, "874800": 11, "2624400": 21, "7873200": 10, "23619600": 20, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kentcdodds", "commitsCount": 26}, {"username": "sudo-suhas", "commitsCount": 6}, {"username": "MichaelDeBoey", "commitsCount": 5}, {"username": "NogsMPLS", "commitsCount": 5}, {"username": "hgwood", "commitsCount": 5}, {"username": "DanReyLop", "commitsCount": 4}, {"username": "EnzoMartin", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "bennyn", "commitsCount": 2}, {"username": "bibo5088", "commitsCount": 2}, {"username": "coderberry", "commitsCount": 2}, {"username": "compumike08", "commitsCount": 2}, {"username": "danielo515", "commitsCount": 2}, {"username": "inyono", "commitsCount": 2}, {"username": "wopian", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "Apidcloud", "commitsCount": 1}, {"username": "AshikNesin", "commitsCount": 1}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Jason-Cooke", "commitsCount": 1}, {"username": "NicoZelaya", "commitsCount": 1}, {"username": "achingbrain", "commitsCount": 1}, {"username": "allcontributors[bot]", "commitsCount": 1}, {"username": "alonbardavid", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "anishkny", "commitsCount": 1}, {"username": "baerrach", "commitsCount": 1}, {"username": "bithavoc", "commitsCount": 1}, {"username": "greggman", "commitsCount": 1}, {"username": "igorklopov", "commitsCount": 1}, {"username": "jiangyuan", "commitsCount": 1}, {"username": "jnielson94", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "lauriii", "commitsCount": 1}, {"username": "marcioj", "commitsCount": 1}, {"username": "markwoon", "commitsCount": 1}, {"username": "mastilver", "commitsCount": 1}, {"username": "naholyr", "commitsCount": 1}, {"username": "nkbt", "commitsCount": 1}, {"username": "nolanlawson", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "sazo", "commitsCount": 1}, {"username": "thomasthiebaud", "commitsCount": 1}, {"username": "toddbluhm", "commitsCount": 1}, {"username": "turnerhayes", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 0}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 7}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 11}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 19}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 17442, "testsSize": 12985, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square", "service": "https://api.travis-ci.org/kentcdodds/cross-env.svg", "shields": "https://img.shields.io/travis/kentcdodds/cross-env.svg", "content": "https://img.shields.io/travis/kentcdodds/cross-env.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/kentcdodds/cross-env", "shields": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg", "content": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square", "service": "https://codecov.io/github/kentcdodds/cross-env/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg", "content": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/cross-env.svg", "content": "https://img.shields.io/npm/v/cross-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/cross-env.svg", "content": "https://img.shields.io/npm/dm/cross-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/l/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/l/cross-env.svg", "content": "https://img.shields.io/npm/l/cross-env.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}], "linters": ["eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 5291, "downloadsCount": 9801387.666666666, "downloadsAcceleration": 32463.442846270933, "dependentsCount": 2114}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8846136292165883, "detail": {"quality": 0.9995207154630612, "popularity": 0.6708440044067918, "maintenance": 0.9998914658151222}}}}, {"node-sass": {"analyzedAt": "2020-05-08T01:38:27.805Z", "collected": {"metadata": {"name": "node-sass", "scope": "unscoped", "version": "4.14.1", "description": "Wrapper around libsass", "keywords": ["css", "libsass", "preprocessor", "sass", "scss", "style"], "date": "2020-05-04T23:42:29.967Z", "author": {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com", "url": "http://andrew.github.com"}, "publisher": {"username": "xzyfer", "email": "xzyfer@gmail.com"}, "maintainers": [{"username": "saperski", "email": "npm@saper.info"}, {"username": "xzyfer", "email": "xzyfer@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sass/node-sass.git"}, "links": {"npm": "https://www.npmjs.com/package/node-sass", "homepage": "https://github.com/sass/node-sass", "repository": "https://github.com/sass/node-sass", "bugs": "https://github.com/sass/node-sass/issues"}, "license": "MIT", "dependencies": {"async-foreach": "^0.1.3", "chalk": "^1.1.1", "cross-spawn": "^3.0.0", "gaze": "^1.0.0", "get-stdin": "^4.0.1", "glob": "^7.0.3", "in-publish": "^2.0.0", "lodash": "^4.17.15", "meow": "^3.7.0", "mkdirp": "^0.5.1", "nan": "^2.13.2", "node-gyp": "^3.8.0", "npmlog": "^4.0.0", "request": "^2.88.0", "sass-graph": "2.2.5", "stdout-stream": "^1.4.0", "true-case-path": "^1.0.2"}, "devDependencies": {"coveralls": "^3.0.2", "eslint": "^3.4.0", "fs-extra": "^0.30.0", "istanbul": "^0.4.2", "mocha": "^3.1.2", "mocha-lcov-reporter": "^1.2.0", "object-merge": "^2.5.1", "read-yaml": "^1.0.0", "rimraf": "^2.5.2", "sass-spec": "git+https://github.com/sass/sass-spec.git#dc2d573", "unique-temp-dir": "^1.0.0"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-sass\n\n#### Supported Node.js versions vary by release, please consult the [releases page](https://github.com/sass/node-sass/releases). Below is a quick guide for minimum support:\n\nNodeJS  | Minimum node-sass version | Node Module\n--------|--------------------------|------------\nNode 14 | 4.14+                    | 83\nNode 13 | 4.13+                    | 79\nNode 12 | 4.12+                    | 72\nNode 11 | 4.10+                    | 67\nNode 10 | 4.9+                     | 64\nNode 8  | 4.5.3+                   | 57\n\n<table>\n  <tr>\n    <td>\n      <img width=\"77px\" alt=\"Sass logo\" src=\"https://rawgit.com/sass/node-sass/master/media/logo.svg\" />\n    </td>\n    <td valign=\"bottom\" align=\"right\">\n      <a href=\"https://www.npmjs.com/package/node-sass\">\n        <img width=\"100%\" src=\"https://nodei.co/npm/node-sass.png?downloads=true&downloadRank=true&stars=true\">\n      </a>\n    </td>\n  </tr>\n</table>\n\n[![Build Status](https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat)](https://travis-ci.org/sass/node-sass)\n[![Build status](https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true)](https://ci.appveyor.com/project/sass/node-sass/branch/master)\n[![npm version](https://badge.fury.io/js/node-sass.svg)](http://badge.fury.io/js/node-sass)\n[![Dependency Status](https://david-dm.org/sass/node-sass.svg?theme=shields.io)](https://david-dm.org/sass/node-sass)\n[![devDependency Status](https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io)](https://david-dm.org/sass/node-sass#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master)](https://coveralls.io/r/sass/node-sass?branch=master)\n[![Inline docs](http://inch-ci.org/github/sass/node-sass.svg?branch=master)](http://inch-ci.org/github/sass/node-sass)\n[![Join us in Slack](https://libsass-slack.herokuapp.com/badge.svg)](https://libsass-slack.herokuapp.com/)\n\nNode-sass is a library that provides binding for Node.js to [LibSass], the C version of the popular stylesheet preprocessor, Sass.\n\nIt allows you to natively compile .scss files to css at incredible speed and automatically via a connect middleware.\n\nFind it on npm: <https://www.npmjs.com/package/node-sass>\n\nFollow @nodesass on twitter for release updates: <https://twitter.com/nodesass>\n\n## Install\n\n```shell\nnpm install node-sass\n```\n\nSome users have reported issues installing on Ubuntu due to `node` being registered to another package. [Follow the official NodeJS docs](https://github.com/nodesource/distributions/blob/master/README.md#debinstall) to install NodeJS so that `#!/usr/bin/env node` correctly resolves.\n\nCompiling on Windows machines requires the [node-gyp prerequisites](https://github.com/nodejs/node-gyp#on-windows).\n\nAre you seeing the following error? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md#installing-node-sass-4x-with-node--4).**\n\n```\nSyntaxError: Use of const in strict mode.\n```\n\n**Having installation troubles? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md).**\n\n### Install from mirror in China\n\n```shell\nnpm install -g mirror-config-china --registry=http://registry.npm.taobao.org\nnpm install node-sass\n```\n\n## Usage\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});\n```\n\n## Options\n\n### file\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nPath to a file for [LibSass] to compile.\n\n### data\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nA string to pass to [LibSass] to compile. It is recommended that you use `includePaths` in conjunction with this so that [LibSass] can find files when using the `@import` directive.\n\n### importer (>= v2.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n* Type: `Function | Function[]` signature `function(url, prev, done)`\n* Default: `undefined`\n\nFunction Parameters and Information:\n\n* `url (String)` - the path in import **as-is**, which [LibSass] encountered\n* `prev (String)` - the previously resolved path\n* `done (Function)` - a callback function to invoke on async completion, takes an object literal containing\n  * `file (String)` - an alternate path for [LibSass] to use **OR**\n  * `contents (String)` - the imported contents (for example, read from memory or the file system)\n\nHandles when [LibSass] encounters the `@import` directive. A custom importer allows extension of the [LibSass] engine in both a synchronous and asynchronous manner. In both cases, the goal is to either `return` or call `done()` with an object literal. Depending on the value of the object literal, one of two things will happen.\n\nWhen returning or calling `done()` with `{ file: \"String\" }`, the new file path will be assumed for the `@import`. It's recommended to be mindful of the value of `prev` in instances where relative path resolution may be required.\n\nWhen returning or calling `done()` with `{ contents: \"String\" }`, the string value will be used as if the file was read in through an external source.\n\nStarting from v3.0.0:\n\n* `this` refers to a contextual scope for the immediate run of `sass.render` or `sass.renderSync`\n\n* importers can return error and LibSass will emit that error in response. For instance:\n\n  ```javascript\n  done(new Error('doesn\\'t exist!'));\n  // or return synchronously\n  return new Error('nothing to do here');\n  ```\n\n* importer can be an array of functions, which will be called by LibSass in the order of their occurrence in array. This helps user specify special importer for particular kind of path (filesystem, http). If an importer does not want to handle a particular path, it should return `null`. See [functions section](#functions--v300---experimental) for more details on Sass types.\n\n### functions (>= v3.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n`functions` is an `Object` that holds a collection of custom functions that may be invoked by the sass files being compiled. They may take zero or more input parameters and must return a value either synchronously (`return ...;`) or asynchronously (`done();`). Those parameters will be instances of one of the constructors contained in the `require('node-sass').types` hash. The return value must be of one of these types as well. See the list of available types below:\n\n#### types.Number(value [, unit = \"\"])\n\n* `getValue()`/ `setValue(value)` : gets / sets the numerical portion of the number\n* `getUnit()` / `setUnit(unit)` : gets / sets the unit portion of the number\n\n#### types.String(value)\n\n* `getValue()` / `setValue(value)` : gets / sets the enclosed string\n\n#### types.Color(r, g, b [, a = 1.0]) or types.Color(argb)\n\n* `getR()` / `setR(value)` : red component (integer from `0` to `255`)\n* `getG()` / `setG(value)` : green component (integer from `0` to `255`)\n* `getB()` / `setB(value)` : blue component (integer from `0` to `255`)\n* `getA()` / `setA(value)` : alpha component (number from `0` to `1.0`)\n\nExample:\n\n```javascript\nvar Color = require('node-sass').types.Color,\n  c1 = new Color(255, 0, 0),\n  c2 = new Color(0xff0088cc);\n```\n\n#### types.Boolean(value)\n\n* `getValue()` : gets the enclosed boolean\n* `types.Boolean.TRUE` : Singleton instance of `types.Boolean` that holds \"true\"\n* `types.Boolean.FALSE` : Singleton instance of `types.Boolean` that holds \"false\"\n\n#### types.List(length [, commaSeparator = true])\n\n* `getValue(index)` / `setValue(index, value)` : `value` must itself be an instance of one of the constructors in `sass.types`.\n* `getSeparator()` / `setSeparator(isComma)` : whether to use commas as a separator\n* `getLength()`\n\n#### types.Map(length)\n\n* `getKey(index)` / `setKey(index, value)`\n* `getValue(index)` / `setValue(index, value)`\n* `getLength()`\n\n#### types.Null()\n\n* `types.Null.NULL` : Singleton instance of `types.Null`.\n\n#### Example\n\n```javascript\nsass.renderSync({\n  data: '#{headings(2,5)} { color: #08c; }',\n  functions: {\n    'headings($from: 0, $to: 6)': function(from, to) {\n      var i, f = from.getValue(), t = to.getValue(),\n          list = new sass.types.List(t - f + 1);\n\n      for (i = f; i <= t; i++) {\n        list.setValue(i - f, new sass.types.String('h' + i));\n      }\n\n      return list;\n    }\n  }\n});\n```\n\n### includePaths\n\n* Type: `Array<String>`\n* Default: `[]`\n\nAn array of paths that [LibSass] can look in to attempt to resolve your `@import` declarations. When using `data`, it is recommended that you use this.\n\n### indentedSyntax\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` values enable [Sass Indented Syntax](https://sass-lang.com/documentation/file.INDENTED_SYNTAX.html) for parsing the data string or file.\n\n__Note:__ node-sass/libsass will compile a mixed library of scss and indented syntax (.sass) files with the Default setting (false) as long as .sass and .scss extensions are used in filenames.\n\n### indentType (>= v3.0.0)\n\n* Type: `String`\n* Default: `space`\n\nUsed to determine whether to use space or tab character for indentation.\n\n### indentWidth (>= v3.0.0)\n\n* Type: `Number`\n* Default: `2`\n* Maximum: `10`\n\nUsed to determine the number of spaces or tabs to be used for indentation.\n\n### linefeed (>= v3.0.0)\n\n* Type: `String`\n* Default: `lf`\n\nUsed to determine whether to use `cr`, `crlf`, `lf` or `lfcr` sequence for line break.\n\n### omitSourceMapUrl\n\n* Type: `Boolean`\n* Default: `false`\n\n**Special:** When using this, you should also specify `outFile` to avoid unexpected behavior.\n\n`true` values disable the inclusion of source map information in the output file.\n\n### outFile\n\n* Type: `String | null`\n* Default: `null`\n\n**Special:** Required when `sourceMap` is a truthy value\n\nSpecify the intended location of the output file. Strongly recommended when outputting source maps so that they can properly refer back to their intended files.\n\n**Attention** enabling this option will **not** write the file on disk for you, it's for internal reference purpose only (to generate the map for example).\n\nExample on how to write it on the disk\n\n```javascript\nsass.render({\n    ...\n    outFile: yourPathTotheFile,\n  }, function(error, result) { // node-style callback from v3.0.0 onwards\n    if(!error){\n      // No errors during the compilation, write this result on the disk\n      fs.writeFile(yourPathTotheFile, result.css, function(err){\n        if(!err){\n          //file written on disk\n        }\n      });\n    }\n  });\n});\n```\n\n### outputStyle\n\n* Type: `String`\n* Default: `nested`\n* Values: `nested`, `expanded`, `compact`, `compressed`\n\nDetermines the output format of the final CSS style.\n\n### precision\n\n* Type: `Integer`\n* Default: `5`\n\nUsed to determine how many digits after the decimal will be allowed. For instance, if you had a decimal number of `1.23456789` and a precision of `5`, the result will be `1.23457` in the final CSS.\n\n### sourceComments\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` Enables the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins.\n\n### sourceMap\n\n* Type: `Boolean | String | undefined`\n* Default: `undefined`\n\nEnables source map generation during `render` and `renderSync`.\n\nWhen `sourceMap === true`, the value of `outFile` is used as the target output location for the source map with the suffix `.map` appended. If no `outFile` is set, `sourceMap` parameter is ignored.\n\nWhen `typeof sourceMap === \"string\"`, the value of `sourceMap` will be used as the writing location for the file.\n\n### sourceMapContents\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` includes the `contents` in the source map information\n\n### sourceMapEmbed\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` embeds the source map as a data URI\n\n### sourceMapRoot\n\n* Type: `String`\n* Default: `undefined`\n\nthe value will be emitted as `sourceRoot` in the source map information\n\n## `render` Callback (>= v3.0.0)\n\nnode-sass supports standard node style asynchronous callbacks with the signature of `function(err, result)`. In error conditions, the `error` argument is populated with the error object. In success conditions, the `result` object is populated with an object describing the result of the render call.\n\n### Error Object\n\n* `message` (String) - The error message.\n* `line` (Number) - The line number of error.\n* `column` (Number) - The column number of error.\n* `status` (Number) - The status code.\n* `file` (String) - The filename of error. In case `file` option was not set (in favour of `data`), this will reflect the value `stdin`.\n\n### Result Object\n\n* `css` (Buffer) - The compiled CSS. Write this to a file, or serve it out as needed.\n* `map` (Buffer) - The source map\n* `stats` (Object) - An object containing information about the compile. It contains the following keys:\n  * `entry` (String) - The path to the scss file, or `data` if the source was not a file\n  * `start` (Number) - Date.now() before the compilation\n  * `end` (Number) - Date.now() after the compilation\n  * `duration` (Number) - *end* - *start*\n  * `includedFiles` (Array) - Absolute paths to all related scss files in no particular order.\n\n### Examples\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: '/path/to/myFile.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash, this.callback contains the node-style callback\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  },\n  includePaths: [ 'lib/', 'mod/' ],\n  outputStyle: 'compressed'\n}, function(error, result) { // node-style callback from v3.0.0 onwards\n  if (error) {\n    console.log(error.status); // used to be \"code\" in v2x and below\n    console.log(error.column);\n    console.log(error.message);\n    console.log(error.line);\n  }\n  else {\n    console.log(result.css.toString());\n\n    console.log(result.stats);\n\n    console.log(result.map.toString());\n    // or better\n    console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\n  }\n});\n// OR\nvar result = sass.renderSync({\n  file: '/path/to/file.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  outputStyle: 'compressed',\n  outFile: '/to/my/output.css',\n  sourceMap: true, // or an absolute or relative (to outFile) path\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  }\n});\n\nconsole.log(result.css);\nconsole.log(result.map);\nconsole.log(result.stats);\n```\n\n### Special behaviours\n\n* In the case that both `file` and `data` options are set, node-sass will give precedence to `data` and use `file` to calculate paths in sourcemaps.\n\n### Version information (>= v2.0.0)\n\nBoth `node-sass` and `libsass` version info is now exposed via the `info` method:\n\n```javascript\nvar sass = require('node-sass');\n\nconsole.log(sass.info);\n\n/*\n  it will output something like:\n\n  node-sass       2.0.1   (Wrapper)       [JavaScript]\n  libsass         3.1.0   (Sass Compiler) [C/C++]\n*/\n```\n\nSince node-sass >=v3.0.0 LibSass version is determined at run time.\n\n## Integrations\n\nListing of community uses of node-sass in build tools and frameworks.\n\n### Brackets extension\n\n[@jasonsanjose](https://github.com/jasonsanjose) has created a [Brackets](http://brackets.io) extension based on node-sass: <https://github.com/jasonsanjose/brackets-sass>. When editing Sass files, the extension compiles changes on save. The extension also integrates with Live Preview to show Sass changes in the browser without saving or compiling.\n\n### Brunch plugin\n\n[Brunch](http://brunch.io)'s official sass plugin uses node-sass by default, and automatically falls back to ruby if use of Compass is detected: <https://github.com/brunch/sass-brunch>\n\n### Connect/Express middleware\n\nRecompile `.scss` files automatically for connect and express based http servers.\n\nThis functionality has been moved to [`node-sass-middleware`](https://github.com/sass/node-sass-middleware) in node-sass v1.0.0\n\n### DocPad Plugin\n\n[@10xLaCroixDrinker](https://github.com/10xLaCroixDrinker) wrote a [DocPad](http://docpad.org/) plugin that compiles `.scss` files using node-sass: <https://github.com/10xLaCroixDrinker/docpad-plugin-nodesass>\n\n### Duo.js extension\n\n[@stephenway](https://github.com/stephenway) has created an extension that transpiles Sass to CSS using node-sass with [duo.js](http://duojs.org/)\n<https://github.com/duojs/sass>\n\n### Grunt extension\n\n[@sindresorhus](https://github.com/sindresorhus/) has created a set of grunt tasks based on node-sass: <https://github.com/sindresorhus/grunt-sass>\n\n### Gulp extension\n\n[@dlmanning](https://github.com/dlmanning/) has created a gulp sass plugin based on node-sass: <https://github.com/dlmanning/gulp-sass>\n\n### Harp\n\n[@sintaxi](https://github.com/sintaxi)\u2019s Harp web server implicitly compiles `.scss` files using node-sass: <https://github.com/sintaxi/harp>\n\n### Metalsmith plugin\n\n[@stevenschobert](https://github.com/stevenschobert/) has created a metalsmith plugin based on node-sass: <https://github.com/stevenschobert/metalsmith-sass>\n\n### Meteor plugin\n\n[@fourseven](https://github.com/fourseven) has created a meteor plugin based on node-sass: <https://github.com/fourseven/meteor-scss>\n\n### Mimosa module\n\n[@dbashford](https://github.com/dbashford) has created a Mimosa module for sass which includes node-sass: <https://github.com/dbashford/mimosa-sass>\n\n## Example App\n\nThere is also an example connect app here: <https://github.com/andrew/node-sass-example>\n\n## Rebuilding binaries\n\nNode-sass includes pre-compiled binaries for popular platforms, to add a binary for your platform follow these steps:\n\nCheck out the project:\n\n```bash\ngit clone --recursive https://github.com/sass/node-sass.git\ncd node-sass\nnpm install\nnode scripts/build -f  # use -d switch for debug release\n# if succeeded, it will generate and move\n# the binary in vendor directory.\n```\n\n## Command Line Interface\n\nThe interface for command-line usage is fairly simplistic at this stage, as seen in the following usage section.\n\nOutput will be sent to stdout if the `--output` flag is omitted.\n\n### Usage\n\n `node-sass [options] <input> [output]`\n Or:\n `cat <input> | node-sass > output`\n\nExample:\n\n`node-sass src/style.scss dest/style.css`\n\n **Options:**\n\n```bash\n    -w, --watch                Watch a directory or file\n    -r, --recursive            Recursively watch directories or files\n    -o, --output               Output directory\n    -x, --omit-source-map-url  Omit source map URL comment from output\n    -i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n    -q, --quiet                Suppress log output except on error\n    -v, --version              Prints version info\n    --output-style             CSS output style (nested | expanded | compact | compressed)\n    --indent-type              Indent type for output CSS (space | tab)\n    --indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n    --linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n    --source-comments          Include debug info in output\n    --source-map               Emit source map\n    --source-map-contents      Embed include contents in map\n    --source-map-embed         Embed sourceMappingUrl as data URI\n    --source-map-root          Base path, will be emitted in source-map as is\n    --include-path             Path to look for imported files\n    --follow                   Follow symlinked directories\n    --precision                The amount of precision allowed in decimal numbers\n    --error-bell               Output a bell character on errors\n    --importer                 Path to .js file containing custom importer\n    --functions                Path to .js file containing custom functions\n    --help                     Print usage info\n```\n\nThe `input` can be either a single `.scss` or `.sass`, or a directory. If the input is a directory the `--output` flag must also be supplied.\n\nAlso, note `--importer` takes the (absolute or relative to pwd) path to a js file, which needs to have a default `module.exports` set to the importer function. See our test [fixtures](https://github.com/sass/node-sass/tree/974f93e76ddd08ea850e3e663cfe64bb6a059dd3/test/fixtures/extras) for example.\n\nThe `--source-map` option accepts a boolean value, in which case it replaces destination extension with `.css.map`. It also accepts path to `.map` file and even path to the desired directory.\nWhen compiling a directory `--source-map` can either be a boolean value or a directory.\n\n## Binary configuration parameters\n\nnode-sass supports different configuration parameters to change settings related to the sass binary such as binary name, binary path or alternative download path. Following parameters are supported by node-sass:\n\nVariable name    | .npmrc parameter | Process argument   | Value\n-----------------|------------------|--------------------|------\nSASS_BINARY_NAME | sass_binary_name | --sass-binary-name | path\nSASS_BINARY_SITE | sass_binary_site | --sass-binary-site | URL\nSASS_BINARY_PATH | sass_binary_path | --sass-binary-path | path\nSASS_BINARY_DIR  | sass_binary_dir  | --sass-binary-dir  | path\n\nThese parameters can be used as environment variable:\n\n* E.g. `export SASS_BINARY_SITE=http://example.com/`\n\nAs local or global [.npmrc](https://docs.npmjs.com/misc/config) configuration file:\n\n* E.g. `sass_binary_site=http://example.com/`\n\nAs a process argument:\n\n* E.g. `npm install node-sass --sass-binary-site=http://example.com/`\n\n## Post-install Build\n\nInstall runs only two Mocha tests to see if your machine can use the pre-built [LibSass] which will save some time during install. If any tests fail it will build from source.\n\n## Maintainers\n\nThis module is brought to you and maintained by the following people:\n\n* Michael Mifsud - Project Lead ([Github](https://github.com/xzyfer) / [Twitter](https://twitter.com/xzyfer))\n* Andrew Nesbitt ([Github](https://github.com/andrew) / [Twitter](https://twitter.com/teabass))\n* Dean Mao ([Github](https://github.com/deanmao) / [Twitter](https://twitter.com/deanmao))\n* Brett Wilkins ([Github](https://github.com/bwilkins) / [Twitter](https://twitter.com/bjmaz))\n* Keith Cirkel ([Github](https://github.com/keithamus) / [Twitter](https://twitter.com/Keithamus))\n* Laurent Goderre ([Github](https://github.com/laurentgoderre) / [Twitter](https://twitter.com/laurentgoderre))\n* Nick Schonning ([Github](https://github.com/nschonni) / [Twitter](https://twitter.com/nschonni))\n* Adeel Mujahid ([Github](https://github.com/am11) / [Twitter](https://twitter.com/adeelbm))\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here.](https://github.com/sass/node-sass/graphs/contributors)\n\n### Note on Patches/Pull Requests\n\nCheck out our [Contributing guide](/.github/CONTRIBUTING.md)\n\n## Copyright\n\nCopyright (c) 2015 Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass/blob/master/LICENSE) for details.\n\n[LibSass]: https://github.com/sass/libsass"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 965544}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4800306}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 20897731}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 61273900}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 110470218}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 208269703}], "dependentsCount": 6690, "starsCount": 260}, "github": {"homepage": "https://npmjs.org/package/node-sass", "starsCount": 7151, "forksCount": 1093, "subscribersCount": 202, "issues": {"count": 2904, "openCount": 132, "distribution": {"3600": 772, "10800": 292, "32400": 322, "97200": 317, "291600": 221, "874800": 241, "2624400": 183, "7873200": 208, "23619600": 159, "70858800": 94, "212576400": 95}, "isDisabled": false}, "contributors": [{"username": "xzyfer", "commitsCount": 283}, {"username": "am11", "commitsCount": 200}, {"username": "andrew", "commitsCount": 146}, {"username": "nschonni", "commitsCount": 94}, {"username": "saper", "commitsCount": 85}, {"username": "deanmao", "commitsCount": 42}, {"username": "kevva", "commitsCount": 35}, {"username": "bwilkins", "commitsCount": 11}, {"username": "LaurentGoderre", "commitsCount": 9}, {"username": "arian", "commitsCount": 8}, {"username": "jhnns", "commitsCount": 8}, {"username": "deepak1556", "commitsCount": 7}, {"username": "gonghao", "commitsCount": 7}, {"username": "sindresorhus", "commitsCount": 7}, {"username": "blopker", "commitsCount": 6}, {"username": "larsimmisch", "commitsCount": 6}, {"username": "Jakobo", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "mgol", "commitsCount": 5}, {"username": "msokk", "commitsCount": 5}, {"username": "stefanpenner", "commitsCount": 5}, {"username": "QuLogic", "commitsCount": 4}, {"username": "XhmikosR", "commitsCount": 4}, {"username": "kkoopa", "commitsCount": 4}, {"username": "rvagg", "commitsCount": 4}, {"username": "samccone", "commitsCount": 4}, {"username": "Igorbek", "commitsCount": 3}, {"username": "dotzero", "commitsCount": 3}, {"username": "enriclluelles", "commitsCount": 3}, {"username": "fh1ch", "commitsCount": 3}, {"username": "jasonsanjose", "commitsCount": 3}, {"username": "pluma", "commitsCount": 3}, {"username": "simonexmachina", "commitsCount": 3}, {"username": "watilde", "commitsCount": 3}, {"username": "akiran", "commitsCount": 2}, {"username": "blakmatrix", "commitsCount": 2}, {"username": "craigbarnes", "commitsCount": 2}, {"username": "delitescere", "commitsCount": 2}, {"username": "dylang", "commitsCount": 2}, {"username": "emirotin", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "gpapin", "commitsCount": 2}, {"username": "hcatlin", "commitsCount": 2}, {"username": "janpio", "commitsCount": 2}, {"username": "johnobe", "commitsCount": 2}, {"username": "kausters", "commitsCount": 2}, {"username": "kkopachev", "commitsCount": 2}, {"username": "marvinhagemeister", "commitsCount": 2}, {"username": "masterbee", "commitsCount": 2}, {"username": "mattrobenolt", "commitsCount": 2}, {"username": "mauritslamers", "commitsCount": 2}, {"username": "mgreter", "commitsCount": 2}, {"username": "mnutt", "commitsCount": 2}, {"username": "mweibel", "commitsCount": 2}, {"username": "naartjie", "commitsCount": 2}, {"username": "nc", "commitsCount": 2}, {"username": "ndhoule", "commitsCount": 2}, {"username": "nowells", "commitsCount": 2}, {"username": "parris", "commitsCount": 2}, {"username": "paulcpederson", "commitsCount": 2}, {"username": "rubennorte", "commitsCount": 2}, {"username": "stephenway", "commitsCount": 2}, {"username": "10xLaCroixDrinker", "commitsCount": 1}, {"username": "DerZyklop", "commitsCount": 1}, {"username": "Gwerlas", "commitsCount": 1}, {"username": "MLoughry", "commitsCount": 1}, {"username": "Nico385412", "commitsCount": 1}, {"username": "NicolaiSoeborg", "commitsCount": 1}, {"username": "Sirivasv", "commitsCount": 1}, {"username": "ZoranPandovski", "commitsCount": 1}, {"username": "abetomo", "commitsCount": 1}, {"username": "ajhsu", "commitsCount": 1}, {"username": "anaibol", "commitsCount": 1}, {"username": "arzafran", "commitsCount": 1}, {"username": "asottile", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "cheesestringer", "commitsCount": 1}, {"username": "daltones", "commitsCount": 1}, {"username": "deadbeef404", "commitsCount": 1}, {"username": "evanfuture", "commitsCount": 1}, {"username": "foladipo", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "howlowck", "commitsCount": 1}, {"username": "hweeks", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jhermsmeier", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "lox", "commitsCount": 1}, {"username": "mcdado", "commitsCount": 1}, {"username": "mohuk", "commitsCount": 1}, {"username": "mscdex", "commitsCount": 1}, {"username": "nottrobin", "commitsCount": 1}, {"username": "ofrobots", "commitsCount": 1}, {"username": "pselden", "commitsCount": 1}, {"username": "ruedap", "commitsCount": 1}, {"username": "rupav", "commitsCount": 1}, {"username": "screamingmunch", "commitsCount": 1}, {"username": "sobolevn", "commitsCount": 1}, {"username": "tnguyen14", "commitsCount": 1}, {"username": "ysugimoto", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 21}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 24346, "testsSize": 182813, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/node-sass.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/node-sass.svg", "content": "https://img.shields.io/npm/v/node-sass.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat", "service": "https://api.travis-ci.org/sass/node-sass.svg?branch=master", "shields": "https://img.shields.io/travis/sass/node-sass/master.svg", "content": "https://img.shields.io/travis/sass/node-sass/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master", "shields": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://david-dm.org/sass/node-sass.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass.svg", "shields": "https://img.shields.io/david/sass/node-sass.svg", "content": "https://img.shields.io/david/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass/dev-status.svg", "shields": "https://img.shields.io/david/dev/sass/node-sass.svg", "content": "https://img.shields.io/david/dev/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "service": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/sass/node-sass/master.svg", "content": "https://img.shields.io/coveralls/sass/node-sass/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.75, "outdatedDependencies": {"get-stdin": {"required": "^4.0.1", "stable": "7.0.0", "latest": "7.0.0"}, "meow": {"required": "^3.7.0", "stable": "7.0.0", "latest": "7.0.0"}, "true-case-path": {"required": "^1.0.2", "stable": "2.2.1", "latest": "2.2.1"}, "sass-graph": {"required": "2.2.5", "stable": "3.0.5", "latest": "3.0.5"}, "mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "cross-spawn": {"required": "^3.0.0", "stable": "7.0.2", "latest": "7.0.2"}, "chalk": {"required": "^1.1.1", "stable": "4.0.0", "latest": "4.0.0"}, "node-gyp": {"required": "^3.8.0", "stable": "6.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9624999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 8806, "downloadsCount": 20424633.333333332, "downloadsAcceleration": 42277.65365296803, "dependentsCount": 6690}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8135102739726028, "openIssues": 1, "issuesDistribution": 0.40483439402743865}}, "score": {"final": 0.8907396343120244, "detail": {"quality": 0.9336977090996539, "popularity": 0.776579759096533, "maintenance": 0.9680783025666908}}}}, {"husky": {"analyzedAt": "2020-06-07T06:04:20.354Z", "collected": {"metadata": {"name": "husky", "scope": "unscoped", "version": "4.2.5", "description": "Prevents bad commit or push (git hooks, pre-commit/precommit, pre-push/prepush, post-merge/postmerge and all that stuff...)", "keywords": ["git", "hook", "hooks", "pre-commit", "precommit", "post-commit", "postcommit", "pre-push", "prepush", "post-merge", "postmerge", "test", "lint"], "date": "2020-04-09T21:29:01.887Z", "author": {"name": "Typicode", "email": "typicode@gmail.com", "username": "typicode"}, "publisher": {"username": "typicode", "email": "typicode@gmail.com"}, "maintainers": [{"username": "typicode", "email": "typicode@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/typicode/husky.git"}, "links": {"npm": "https://www.npmjs.com/package/husky", "homepage": "https://github.com/typicode/husky#readme", "repository": "https://github.com/typicode/husky", "bugs": "https://github.com/typicode/husky/issues"}, "license": "MIT", "dependencies": {"chalk": "^4.0.0", "ci-info": "^2.0.0", "compare-versions": "^3.6.0", "cosmiconfig": "^6.0.0", "find-versions": "^3.2.0", "opencollective-postinstall": "^2.0.2", "pkg-dir": "^4.2.0", "please-upgrade-node": "^3.2.0", "slash": "^3.0.0", "which-pm-runs": "^1.0.0"}, "devDependencies": {"@types/ci-info": "^2.0.0", "@types/cosmiconfig": "^6.0.0", "@types/jest": "^25.2.1", "@types/mkdirp": "^1.0.0", "@types/node": "^13.11.1", "@typescript-eslint/eslint-plugin": "^2.27.0", "@typescript-eslint/parser": "^2.27.0", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-config-xo-space": "^0.24.0", "eslint-plugin-prettier": "^3.1.2", "formatree": "^1.0.2", "jest": "^25.3.0", "markdown-toc": "^1.2.0", "mkdirp": "^1.0.4", "pinst": "^2.0.0", "pkg-ok": "^2.3.1", "prettier": "^2.0.4", "tempy": "^0.5.0", "ts-jest": "^25.3.1", "type-fest": "^0.13.1", "typescript": "^3.8.3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 19}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 64}], "hasTestScript": true, "readme": "# Husky\n\n[![Financial Contributors on Open Collective](https://opencollective.com/husky/all/badge.svg?label=financial+contributors)](https://opencollective.com/husky) [![](https://img.shields.io/npm/dm/husky.svg?style=flat)](https://www.npmjs.org/package/husky) [![Mac/Linux Build Status](https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20%26%20Linux)](https://travis-ci.org/typicode/husky) [![Windows Build status](https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows)](https://ci.appveyor.com/project/typicode/husky)\n\n> Git hooks made easy\n\nHusky can prevent bad `git commit`, `git push` and more \ud83d\udc36 _woof!_\n\n## Install\n\n```sh\nnpm install husky --save-dev\n```\n\n```js\n// package.json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n```sh\ngit commit -m 'Keep calm and commit'\n```\n\n_Existing hooks are kept. Requires Node `>= 10` and Git `>= 2.13.0`._\n\n## Reinstall\n\nIf Husky is already in your `node_modules` or `pnp.js` (Yarn 2) and you want to reinstall hooks, you can run `npm rebuild` or `yarn rebuild`.\n\n## Uninstall\n\n```sh\nnpm uninstall husky\n```\n\n_Git hooks installed by husky will be removed._\n\n## Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/husky/contribute)]\n\n### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/husky/contribute)]\n\n<!-- oc -->\n#### Gold Sponsors ($500/mo)\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/0/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/1/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/2/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/3/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/4/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/5/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/6/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/7/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/8/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/9/avatar.svg\" height=\"60px\"></a>\n\n#### Silver Sponsors ($250/mo)\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/0/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/1/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/2/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/3/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/4/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/5/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/6/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/7/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/8/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/9/avatar.svg\" height=\"45px\"></a>\n\n#### Bronze Sponsors ($100/mo)\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/avatar.svg\" height=\"30px\"></a>\n<!-- oc-end -->\n\n### Individuals\n\n<a href=\"https://opencollective.com/husky\"><img src=\"https://opencollective.com/husky/individuals.svg?width=890\" height=\"100px\"></a>\n\n## Used by\n\n* [webpack](https://github.com/webpack/webpack)\n* [babel](https://github.com/babel/babel)\n* [create-react-app](https://github.com/facebookincubator/create-react-app)\n* ... and many other awesome projects\n\n## Guides\n\n<!-- toc -->\n\n  * [Upgrading from 0.14](#upgrading-from-014)\n  * [Supported hooks](#supported-hooks)\n  * [Access Git params and stdin](#access-git-params-and-stdin)\n  * [Skip all hooks (rebase)](#skip-all-hooks-rebase)\n  * [Disable auto-install](#disable-auto-install)\n  * [CI servers](#ci-servers)\n  * [Monorepos](#monorepos)\n  * [Node version managers](#node-version-managers)\n  * [Local commands (~/.huskyrc)](#local-commands-huskyrc)\n  * [Multiple commands](#multiple-commands)\n  * [Troubleshoot](#troubleshoot)\n    + [Debug messages](#debug-messages)\n    + [Hooks aren't running](#hooks-arent-running)\n    + [Commits aren't blocked](#commits-arent-blocked)\n    + [Commits are slow](#commits-are-slow)\n    + [Testing husky in a new repo](#testing-husky-in-a-new-repo)\n    + [ENOENT error 'node_modules/husky/.git/hooks'](#enoent-error-node_moduleshuskygithooks)\n\n<!-- tocstop -->\n\n### Upgrading from 0.14\n\nRun `husky-upgrade` to automatically upgrade your configuration:\n\n```\nnpx --no-install husky-upgrade\n```\n\nYou can also do it manually. Move your existing hooks to `husky.hooks` field and use raw Git hooks names. Also, if you were using `GIT_PARAMS` env variable, rename it to `HUSKY_GIT_PARAMS`.\n\n```diff\n{\n  \"scripts\": {\n-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n  },\n+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n}\n```\n\nStarting with `1.0.0`, husky can be configured using `.huskyrc`, `.huskyrc.json`, `.huskyrc.js` or `husky.config.js` file.\n\n```js\n// .huskyrc\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test\"\n  }\n}\n```\n\n### Supported hooks\n\nHusky supports all Git hooks defined [here](https://git-scm.com/docs/githooks). Server-side hooks (`pre-receive`, `update` and `post-receive`) aren't supported.\n\n### Access Git params and stdin\n\nGit hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via `HUSKY_GIT_PARAMS` and `HUSKY_GIT_STDIN` environment variables.\n\n```\n\"commit-msg\": \"echo $HUSKY_GIT_PARAMS\"\n```\n\n### Skip all hooks (rebase)\n\nDuring a rebase you may want to skip all hooks, you can use `HUSKY_SKIP_HOOKS` environment variable.\n\n```sh\nHUSKY_SKIP_HOOKS=1 git rebase ...\n```\n\n### Disable auto-install\n\nIf you don't want husky to automatically install Git hooks, simply set `HUSKY_SKIP_INSTALL` environment variable.\n\n```sh\nHUSKY_SKIP_INSTALL=1 npm install\n```\n\n### CI servers\n\nBy default, Husky won't install on CI servers.\n\n### Monorepos\n\nIf you have a multi-package repository, it's __recommended__ to use tools like [lerna](https://github.com/lerna/lerna) and have husky installed ONLY in the root `package.json` to act as the source of truth.\n\nGenerally speaking, you should AVOID defining husky in multiple `package.json`, as each package would overwrite previous husky installation.\n\n```sh\n.\n\u2514\u2500\u2500 root\n    \u251c\u2500\u2500 .git\n    \u251c\u2500\u2500 package.json \ud83d\udc36 # Add husky here\n    \u2514\u2500\u2500 packages\n        \u251c\u2500\u2500 A\n        \u2502   \u2514\u2500\u2500 package.json\n        \u251c\u2500\u2500 B\n        \u2502   \u2514\u2500\u2500 package.json\n        \u2514\u2500\u2500 C\n            \u2514\u2500\u2500 package.json\n```\n\n```js\n// root/package.json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"husky\": \"...\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lerna run test\"\n    }\n  }\n}\n```\n\n### Node version managers\n\nIf you're on Windows, husky will simply use the version installed globally on your system.\n\nFor macOS and Linux users:\n- if you're running `git` commands in the terminal, husky will use the version defined in your shell `PATH`. In other words, if you're a `nvm` user, husky will use the version that you've set with `nvm`.\n- if you're using a GUI client and `nvm`, it may have a different `PATH` and not load `nvm`, in this case the highest `node` version installed by `nvm` will usually be picked. You can also check `~/.node_path` to see which version is used by GUIs and edit if you want to use something else.\n\n### Local commands (~/.huskyrc)\n\nHusky will source `~/.huskyrc` file if it exists before running hook scripts.\nYou can use it, for example, to load a node version manager or run some `shell` commands before hooks.\n\n```sh\n# ~/.huskyrc\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n```\n\n### Multiple commands\n\nBy design and just like `scripts` defined in `package.json`, husky will run hook scripts as a single command. \n\n```json\n\"pre-commit\": \"cmd && cmd\"\n```\n\nThat said, if you prefer to use an array, the recommended approach is to define them in `.huskyrc.js` or `husky.config.js`.\n\n```js\nconst tasks = arr => arr.join(' && ')\n\nmodule.exports = {\n  'hooks': {\n    'pre-commit': tasks([\n      'cmd',\n      'cmd'\n    ])\n  }\n}\n```\n\nTools like [npm-run-all](https://github.com/mysticatea/npm-run-all) can help too.\n\n### Troubleshoot\n\n#### Debug messages\n\n`HUSKY_DEBUG=1` can provide additional information when running commands.\n\n```\nHUSKY_DEBUG=1 npm install husky --save-dev\nHUSKY_DEBUG=1 git commit ...\n```\n\n#### Hooks aren't running\n\nCheck if hooks were installed. Verify that `.git/hooks/pre-commit` exists and have husky code. It should start with:\n\n```sh\n#!/bin/sh\n# husky...\n```\n\nIf not, you may have another Git hooks manager defined in your `package.json` overwriting husky's hooks. Check also the output during install, you should see:\n\n```\nhusky > Setting up git hooks\nhusky > Done\n```\n\n#### Commits aren't blocked\n\nFor a commit to be blocked, `pre-commit` script must exit with a non-zero exit code. If you commit isn't blocked, check your script exit code.\n\n#### Commits are slow\n\nHusky is fast and only adds a few tenth of seconds to commits (`~0.3s` on a low-end PC). So it's most probably related to how many things are done during `pre-commit`. You can often improve this by using cache on your tools (babel, eslint, ...) and using [lint-staged](https://github.com/okonet/lint-staged).\n\n#### Testing husky in a new repo\n\nTo isolate your issue, you can also create a new repo:\n\n```sh\nmkdir foo && cd foo\ngit init && npm init -y\nnpm install husky --save-dev\n\n# Add a failing pre-commit hook to your package.json:\n# \"pre-commit\": \"echo \\\"this should fail\\\" && exit 1\"\n\n# Make a commit\n```\n\n#### ENOENT error 'node_modules/husky/.git/hooks'\n\nVerify that your version of Git is `>=2.13.0`.\n\n## See also\n\n* [pkg-ok](https://github.com/typicode/pkg-ok) - Prevents publishing a module with bad paths or incorrect line endings\n* [please-upgrade-node](https://github.com/typicode/please-upgrade-node) - Show a message to upgrade Node instead of a stacktrace in your CLIs\n* [pinst](https://github.com/typicode/pinst) - dev only postinstall hook\n\n## Patreon\n\nPeople and companies supporting via Patreon: [thanks](https://thanks.typicode.com)\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 152782}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3264877}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13764055}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41413709}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 71621301}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 121303813}], "dependentsCount": 905, "starsCount": 134}, "github": {"starsCount": 19175, "forksCount": 675, "subscribersCount": 135, "issues": {"count": 732, "openCount": 171, "distribution": {"3600": 73, "10800": 25, "32400": 33, "97200": 59, "291600": 58, "874800": 71, "2624400": 75, "7873200": 88, "23619600": 87, "70858800": 116, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "typicode", "commitsCount": 490}, {"username": "branneman", "commitsCount": 3}, {"username": "jetersen", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "boxfoot", "commitsCount": 2}, {"username": "AluisioASG", "commitsCount": 1}, {"username": "Calinou", "commitsCount": 1}, {"username": "DAB0mB", "commitsCount": 1}, {"username": "FJunior225", "commitsCount": 1}, {"username": "G-Rath", "commitsCount": 1}, {"username": "JHilker", "commitsCount": 1}, {"username": "Judahmeek", "commitsCount": 1}, {"username": "MrRio", "commitsCount": 1}, {"username": "afc163", "commitsCount": 1}, {"username": "ahutchings", "commitsCount": 1}, {"username": "alebelcor", "commitsCount": 1}, {"username": "alexeyten", "commitsCount": 1}, {"username": "andywer", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "azu", "commitsCount": 1}, {"username": "behnammodi", "commitsCount": 1}, {"username": "bobrippling", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "configurator", "commitsCount": 1}, {"username": "conord33", "commitsCount": 1}, {"username": "dhruvdutt", "commitsCount": 1}, {"username": "emily-curry", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "guidoscheffler", "commitsCount": 1}, {"username": "hunnble", "commitsCount": 1}, {"username": "iliyanyotov", "commitsCount": 1}, {"username": "jascodes", "commitsCount": 1}, {"username": "klmdb", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "luiscoms", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "monkindey", "commitsCount": 1}, {"username": "nick-woodward", "commitsCount": 1}, {"username": "nilswindisch", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "onbjerg", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "ozzywalsh", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "rainboxx", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "spoike", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "wsmd", "commitsCount": 1}, {"username": "xenyal", "commitsCount": 1}, {"username": "yanamura", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yurasid", "commitsCount": 1}, {"username": "zhangciwu", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 67}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 175}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 13914, "testsSize": 18324, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/husky.svg?style=flat", "shields": "https://img.shields.io/npm/dm/husky.svg", "content": "https://img.shields.io/npm/dm/husky.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20&%20Linux", "service": "https://api.travis-ci.org/typicode/husky.svg?branch=master", "shields": "https://img.shields.io/travis/typicode/husky/master.svg", "content": "https://img.shields.io/travis/typicode/husky/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows", "service": "https://ci.appveyor.com/api/projects/status/typicode/husky/branch/master", "shields": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg", "content": "https://img.shields.io/appveyor/ci/typicode/husky/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 20177, "downloadsCount": 13804569.666666666, "downloadsAcceleration": 48004.88065068491, "dependentsCount": 905}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9720342465753424, "openIssues": 0.9439890710382514, "issuesDistribution": 0}}, "score": {"final": 0.7769926215874959, "detail": {"quality": 0.9782069173799172, "popularity": 0.7148544930461611, "maintenance": 0.666661353735327}}}}, {"babel-preset-react": {"analyzedAt": "2020-06-10T03:16:52.022Z", "collected": {"metadata": {"name": "babel-preset-react", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all React plugins.", "date": "2017-04-07T15:19:26.773Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-react", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-preset-flow": "^6.23.0", "babel-plugin-syntax-jsx": "^6.3.13", "babel-plugin-transform-react-display-name": "^6.23.0", "babel-plugin-transform-react-jsx": "^6.24.1", "babel-plugin-transform-react-jsx-source": "^6.22.0", "babel-plugin-transform-react-jsx-self": "^6.22.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-react\n\n> Babel preset for all React plugins.\n\nThis preset includes the following plugins/presets:\n\n- [preset-flow](https://babeljs.io/docs/plugins/preset-flow/)\n- [syntax-jsx](https://babeljs.io/docs/plugins/syntax-jsx/)\n- [transform-react-jsx](https://babeljs.io/docs/plugins/transform-react-jsx/)\n- [transform-react-display-name](https://babeljs.io/docs/plugins/transform-react-display-name/)\n\n## Install\n\n> You can also check out the React [Getting Started page](https://facebook.github.io/react/docs/hello-world.html)\n\n> For more info, check out the setup page on the [cli](/docs/setup/) and the [usage](/docs/usage/cli/) docs.\n\nInstall the CLI and this preset\n\n```sh\nnpm install --save-dev babel-cli babel-preset-react\n```\n\nMake a .babelrc config file with the preset\n\n```sh\necho '{ \"presets\": [\"react\"] }' > .babelrc\n```\n\nCreate a file to run on\n\n```sh\necho '<h1>Hello, world!</h1>' > index.js\n```\n\nView the output\n\n```sh\n./node_modules/.bin/babel index.js\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"react\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets react \n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"react\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 162087}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 844367}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3542419}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 10847980}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21365094}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 49378793}], "dependentsCount": 3657, "starsCount": 70}, "github": {"homepage": "https://babel.dev", "starsCount": 36754, "forksCount": 4311, "subscribersCount": 868, "issues": {"count": 11621, "openCount": 786, "distribution": {"3600": 2464, "10800": 917, "32400": 1067, "97200": 1241, "291600": 1059, "874800": 1003, "2624400": 853, "7873200": 811, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 57}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 204}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 412}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324572, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42101, "downloadsCount": 3615993.3333333335, "downloadsAcceleration": -8448.282191780829, "dependentsCount": 3657}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24127593449323603}}, "score": {"final": 0.7166265771321653, "detail": {"quality": 0.9857842821600954, "popularity": 0.6325027184494788, "maintenance": 0.5700438315051976}}}}, {"ts-node": {"analyzedAt": "2020-06-03T10:12:14.851Z", "collected": {"metadata": {"name": "ts-node", "scope": "unscoped", "version": "8.10.2", "description": "TypeScript execution environment and REPL for node.js, with source map support", "keywords": ["typescript", "node", "runtime", "environment", "ts", "compiler"], "date": "2020-05-28T15:44:45.616Z", "author": {"name": "Blake Embrey", "email": "hello@blakeembrey.com", "url": "http://blakeembrey.me", "username": "blakeembrey"}, "publisher": {"username": "cspotcode", "email": "cspotcode@gmail.com"}, "maintainers": [{"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "cspotcode", "email": "cspotcode@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/TypeStrong/ts-node.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-node"}, "license": "MIT", "dependencies": {"arg": "^4.1.0", "diff": "^4.0.1", "make-error": "^1.1.1", "source-map-support": "^0.5.17", "yn": "3.1.1"}, "devDependencies": {"@types/chai": "^4.0.4", "@types/diff": "^4.0.2", "@types/mocha": "^5.2.7", "@types/node": "13.13.5", "@types/proxyquire": "^1.3.28", "@types/react": "^16.0.2", "@types/semver": "^7.1.0", "@types/source-map-support": "^0.5.0", "axios": "^0.19.0", "chai": "^4.0.1", "istanbul": "^0.4.0", "mocha": "^6.2.2", "ntypescript": "^1.201507091536.1", "proxyquire": "^2.0.0", "react": "^16.0.0", "rimraf": "^3.0.0", "semver": "^7.1.3", "tslint": "^6.1.0", "tslint-config-standard": "^9.0.0", "typescript": "3.8.3", "typescript-json-schema": "^0.42.0", "util.promisify": "^1.0.1"}, "peerDependencies": {"typescript": ">=2.7"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 13}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 21}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 33}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 865250}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4510538}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19663274}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 56557080}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 97912971}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 164721240}], "dependentsCount": 1966, "starsCount": 51}, "github": {"starsCount": 6921, "forksCount": 293, "subscribersCount": 73, "issues": {"count": 1064, "openCount": 82, "distribution": {"3600": 194, "10800": 86, "32400": 125, "97200": 138, "291600": 84, "874800": 95, "2624400": 87, "7873200": 102, "23619600": 74, "70858800": 57, "212576400": 22}, "isDisabled": false}, "contributors": [{"username": "blakeembrey", "commitsCount": 368}, {"username": "cspotcode", "commitsCount": 42}, {"username": "greenkeeperio-bot", "commitsCount": 15}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "stelcheck", "commitsCount": 4}, {"username": "G-Rath", "commitsCount": 3}, {"username": "unional", "commitsCount": 3}, {"username": "Jontem", "commitsCount": 2}, {"username": "basarat", "commitsCount": 2}, {"username": "chrisleck", "commitsCount": 2}, {"username": "srolel", "commitsCount": 2}, {"username": "sylc", "commitsCount": 2}, {"username": "3mard", "commitsCount": 1}, {"username": "BrunnerLivio", "commitsCount": 1}, {"username": "Deilan", "commitsCount": 1}, {"username": "Janpot", "commitsCount": 1}, {"username": "KasparEtter", "commitsCount": 1}, {"username": "Llorx", "commitsCount": 1}, {"username": "LoicPoullain", "commitsCount": 1}, {"username": "Maecenas", "commitsCount": 1}, {"username": "MicahZoltu", "commitsCount": 1}, {"username": "NaridaL", "commitsCount": 1}, {"username": "Psidium", "commitsCount": 1}, {"username": "Weakky", "commitsCount": 1}, {"username": "Zlatkovsky", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "abraj", "commitsCount": 1}, {"username": "astashov", "commitsCount": 1}, {"username": "bertyhell", "commitsCount": 1}, {"username": "burnnat", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "caseyWebb", "commitsCount": 1}, {"username": "cdschmitz", "commitsCount": 1}, {"username": "cevek", "commitsCount": 1}, {"username": "cookrn", "commitsCount": 1}, {"username": "cthrax", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "devoto13", "commitsCount": 1}, {"username": "gfx", "commitsCount": 1}, {"username": "hiro08gh", "commitsCount": 1}, {"username": "jacobdcastro", "commitsCount": 1}, {"username": "joeskeen", "commitsCount": 1}, {"username": "jonaskello", "commitsCount": 1}, {"username": "jschwarty", "commitsCount": 1}, {"username": "kriszyp", "commitsCount": 1}, {"username": "ksamborski", "commitsCount": 1}, {"username": "kumarashwin", "commitsCount": 1}, {"username": "ledenis", "commitsCount": 1}, {"username": "ljani", "commitsCount": 1}, {"username": "mhegazy", "commitsCount": 1}, {"username": "morlay", "commitsCount": 1}, {"username": "musahaidari", "commitsCount": 1}, {"username": "nana4gonta", "commitsCount": 1}, {"username": "nomcopter", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "rakannimer", "commitsCount": 1}, {"username": "rharriso", "commitsCount": 1}, {"username": "rpd10", "commitsCount": 1}, {"username": "rsxdalv", "commitsCount": 1}, {"username": "rundef", "commitsCount": 1}, {"username": "sgoll", "commitsCount": 1}, {"username": "sharikovvladislav", "commitsCount": 1}, {"username": "shortenda", "commitsCount": 1}, {"username": "sisisin", "commitsCount": 1}, {"username": "steadicat", "commitsCount": 1}, {"username": "tenorok", "commitsCount": 1}, {"username": "thetutlage", "commitsCount": 1}, {"username": "timocov", "commitsCount": 1}, {"username": "whitecolor", "commitsCount": 1}, {"username": "xaclincoln", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 45}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 71}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 117}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 31867}, "linters": ["editorconfig", "tslint"], "coverage": 0.74, "outdatedDependencies": {"yn": {"required": "3.1.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.961, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 7409, "downloadsCount": 18852360, "downloadsAcceleration": 74205.31992009131, "dependentsCount": 1966}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4481090497387526}}, "score": {"final": 0.8408099821145915, "detail": {"quality": 0.8144257260800161, "popularity": 0.7264214805094291, "maintenance": 0.9778135603208187}}}}, {"commander": {"analyzedAt": "2020-06-16T06:03:29.784Z", "collected": {"metadata": {"name": "commander", "scope": "unscoped", "version": "5.1.0", "description": "the complete solution for node.js command-line programs", "keywords": ["commander", "command", "option", "parser", "cli", "argument", "args", "argv"], "date": "2020-04-25T02:29:21.964Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "abetomo", "email": "abe@enzou.tokyo"}, "maintainers": [{"username": "abetomo", "email": "abe@enzou.tokyo"}, {"username": "shadowspawn", "email": "npm_j@ruru.gen.nz"}, {"username": "somekittens", "email": "rkoutnik@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "vanesyan", "email": "romain.vanesyan@gmail.com"}, {"username": "zhiyelee", "email": "zhiyelee@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/tj/commander.js.git"}, "links": {"npm": "https://www.npmjs.com/package/commander", "homepage": "https://github.com/tj/commander.js#readme", "repository": "https://github.com/tj/commander.js", "bugs": "https://github.com/tj/commander.js/issues"}, "license": "MIT", "devDependencies": {"@types/jest": "^25.2.1", "@types/node": "^12.12.36", "@typescript-eslint/eslint-plugin": "^2.29.0", "eslint": "^6.8.0", "eslint-config-standard-with-typescript": "^15.0.1", "eslint-plugin-jest": "^23.8.2", "jest": "^25.4.0", "standard": "^14.3.3", "typescript": "^3.7.5"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 9}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 20}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 26}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Commander.js\n\n[![Build Status](https://api.travis-ci.org/tj/commander.js.svg?branch=master)](http://travis-ci.org/tj/commander.js)\n[![NPM Version](http://img.shields.io/npm/v/commander.svg?style=flat)](https://www.npmjs.org/package/commander)\n[![NPM Downloads](https://img.shields.io/npm/dm/commander.svg?style=flat)](https://npmcharts.com/compare/commander?minimal=true)\n[![Install Size](https://packagephobia.now.sh/badge?p=commander)](https://packagephobia.now.sh/result?p=commander)\n\nThe complete solution for [node.js](http://nodejs.org) command-line interfaces, inspired by Ruby's [commander](https://github.com/commander-rb/commander).\n\nRead this in other languages: English | [\u7b80\u4f53\u4e2d\u6587](./Readme_zh-CN.md)\n\n- [Commander.js](#commanderjs)\n  - [Installation](#installation)\n  - [Declaring _program_ variable](#declaring-program-variable)\n  - [Options](#options)\n    - [Common option types, boolean and value](#common-option-types-boolean-and-value)\n    - [Default option value](#default-option-value)\n    - [Other option types, negatable boolean and flag|value](#other-option-types-negatable-boolean-and-flagvalue)\n    - [Custom option processing](#custom-option-processing)\n    - [Required option](#required-option)\n    - [Version option](#version-option)\n  - [Commands](#commands)\n    - [Specify the argument syntax](#specify-the-argument-syntax)\n    - [Action handler (sub)commands](#action-handler-subcommands)\n    - [Stand-alone executable (sub)commands](#stand-alone-executable-subcommands)\n  - [Automated help](#automated-help)\n    - [Custom help](#custom-help)\n    - [.usage and .name](#usage-and-name)\n    - [.help(cb)](#helpcb)\n    - [.outputHelp(cb)](#outputhelpcb)\n    - [.helpInformation()](#helpinformation)\n    - [.helpOption(flags, description)](#helpoptionflags-description)\n    - [.addHelpCommand()](#addhelpcommand)\n  - [Custom event listeners](#custom-event-listeners)\n  - [Bits and pieces](#bits-and-pieces)\n    - [.parse() and .parseAsync()](#parse-and-parseasync)\n    - [Avoiding option name clashes](#avoiding-option-name-clashes)\n    - [TypeScript](#typescript)\n    - [createCommand()](#createcommand)\n    - [Node options such as `--harmony`](#node-options-such-as---harmony)\n    - [Debugging stand-alone executable subcommands](#debugging-stand-alone-executable-subcommands)\n    - [Override exit handling](#override-exit-handling)\n  - [Examples](#examples)\n  - [License](#license)\n  - [Support](#support)\n    - [Commander for enterprise](#commander-for-enterprise)\n\n## Installation\n\n```bash\nnpm install commander\n```\n\n## Declaring _program_ variable\n\nCommander exports a global object which is convenient for quick programs.\nThis is used in the examples in this README for brevity.\n\n```js\nconst { program } = require('commander');\nprogram.version('0.0.1');\n```\n\nFor larger programs which may use commander in multiple ways, including unit testing, it is better to create a local Command object to use.\n\n ```js\n const { Command } = require('commander');\n const program = new Command();\n program.version('0.0.1');\n ```\n\n## Options\n\nOptions are defined with the `.option()` method, also serving as documentation for the options. Each option can have a short flag (single character) and a long name, separated by a comma or space or vertical bar ('|').\n\nThe options can be accessed as properties on the Command object. Multi-word options such as \"--template-engine\" are camel-cased, becoming `program.templateEngine` etc. See also optional new behaviour to [avoid name clashes](#avoiding-option-name-clashes).\n\nMultiple short flags may optionally be combined in a single argument following the dash: boolean flags, the last flag may take a value, and the value.\nFor example `-a -b -p 80` may be written as `-ab -p80` or even `-abp80`.\n\nYou can use `--` to indicate the end of the options, and any remaining arguments will be used without being interpreted.\nThis is particularly useful for passing options through to another\ncommand, like: `do -- git --version`.\n\nOptions on the command line are not positional, and can be specified before or after other command arguments.\n\n### Common option types, boolean and value\n\nThe two most used option types are a boolean flag, and an option which takes a value (declared using angle brackets). Both are `undefined` unless specified on command line.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .option('-d, --debug', 'output extra debugging')\n  .option('-s, --small', 'small pizza size')\n  .option('-p, --pizza-type <type>', 'flavour of pizza');\n\nprogram.parse(process.argv);\n\nif (program.debug) console.log(program.opts());\nconsole.log('pizza details:');\nif (program.small) console.log('- small pizza size');\nif (program.pizzaType) console.log(`- ${program.pizzaType}`);\n```\n\n```bash\n$ pizza-options -d\n{ debug: true, small: undefined, pizzaType: undefined }\npizza details:\n$ pizza-options -p\nerror: option '-p, --pizza-type <type>' argument missing\n$ pizza-options -ds -p vegetarian\n{ debug: true, small: true, pizzaType: 'vegetarian' }\npizza details:\n- small pizza size\n- vegetarian\n$ pizza-options --pizza-type=cheese\npizza details:\n- cheese\n```\n\n`program.parse(arguments)` processes the arguments, leaving any args not consumed by the program options in the `program.args` array.\n\n### Default option value\n\nYou can specify a default value for an option which takes a value.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .option('-c, --cheese <type>', 'add the specified type of cheese', 'blue');\n\nprogram.parse(process.argv);\n\nconsole.log(`cheese: ${program.cheese}`);\n```\n\n```bash\n$ pizza-options\ncheese: blue\n$ pizza-options --cheese stilton\ncheese: stilton\n```\n\n### Other option types, negatable boolean and flag|value\n\nYou can specify a boolean option long name with a leading `no-` to set the option value to false when used.\nDefined alone this also makes the option true by default.\n\nIf you define `--foo` first, adding `--no-foo` does not change the default value from what it would\notherwise be. You can specify a default boolean value for a boolean flag and it can be overridden on command line.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .option('--no-sauce', 'Remove sauce')\n  .option('--cheese <flavour>', 'cheese flavour', 'mozzarella')\n  .option('--no-cheese', 'plain with no cheese')\n  .parse(process.argv);\n\nconst sauceStr = program.sauce ? 'sauce' : 'no sauce';\nconst cheeseStr = (program.cheese === false) ? 'no cheese' : `${program.cheese} cheese`;\nconsole.log(`You ordered a pizza with ${sauceStr} and ${cheeseStr}`);\n```\n\n```bash\n$ pizza-options\nYou ordered a pizza with sauce and mozzarella cheese\n$ pizza-options --sauce\nerror: unknown option '--sauce'\n$ pizza-options --cheese=blue\nYou ordered a pizza with sauce and blue cheese\n$ pizza-options --no-sauce --no-cheese\nYou ordered a pizza with no sauce and no cheese\n```\n\nYou can specify an option which functions as a flag but may also take a value (declared using square brackets).\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .option('-c, --cheese [type]', 'Add cheese with optional type');\n\nprogram.parse(process.argv);\n\nif (program.cheese === undefined) console.log('no cheese');\nelse if (program.cheese === true) console.log('add cheese');\nelse console.log(`add cheese type ${program.cheese}`);\n```\n\n```bash\n$ pizza-options\nno cheese\n$ pizza-options --cheese\nadd cheese\n$ pizza-options --cheese mozzarella\nadd cheese type mozzarella\n```\n\n### Custom option processing\n\nYou may specify a function to do custom processing of option values. The callback function receives two parameters, the user specified value and the\nprevious value for the option. It returns the new value for the option.\n\nThis allows you to coerce the option value to the desired type, or accumulate values, or do entirely custom processing.\n\nYou can optionally specify the default/starting value for the option after the function.\n\n```js\nconst { program } = require('commander');\n\nfunction myParseInt(value, dummyPrevious) {\n  // parseInt takes a string and an optional radix\n  return parseInt(value);\n}\n\nfunction increaseVerbosity(dummyValue, previous) {\n  return previous + 1;\n}\n\nfunction collect(value, previous) {\n  return previous.concat([value]);\n}\n\nfunction commaSeparatedList(value, dummyPrevious) {\n  return value.split(',');\n}\n\nprogram\n  .option('-f, --float <number>', 'float argument', parseFloat)\n  .option('-i, --integer <number>', 'integer argument', myParseInt)\n  .option('-v, --verbose', 'verbosity that can be increased', increaseVerbosity, 0)\n  .option('-c, --collect <value>', 'repeatable value', collect, [])\n  .option('-l, --list <items>', 'comma separated list', commaSeparatedList)\n;\n\nprogram.parse(process.argv);\n\nif (program.float !== undefined) console.log(`float: ${program.float}`);\nif (program.integer !== undefined) console.log(`integer: ${program.integer}`);\nif (program.verbose > 0) console.log(`verbosity: ${program.verbose}`);\nif (program.collect.length > 0) console.log(program.collect);\nif (program.list !== undefined) console.log(program.list);\n```\n\n```bash\n$ custom -f 1e2\nfloat: 100\n$ custom --integer 2\ninteger: 2\n$ custom -v -v -v\nverbose: 3\n$ custom -c a -c b -c c\n[ 'a', 'b', 'c' ]\n$ custom --list x,y,z\n[ 'x', 'y', 'z' ]\n```\n\n### Required option\n\nYou may specify a required (mandatory) option using `.requiredOption`. The option must have a value after parsing, usually specified on the command line, or perhaps from a default value (say from environment). The method is otherwise the same as `.option` in format, taking flags and description, and optional default value or custom processing.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .requiredOption('-c, --cheese <type>', 'pizza must have cheese');\n\nprogram.parse(process.argv);\n```\n\n```bash\n$ pizza\nerror: required option '-c, --cheese <type>' not specified\n```\n\n### Version option\n\nThe optional `version` method adds handling for displaying the command version. The default option flags are `-V` and `--version`, and when present the command prints the version number and exits.\n\n```js\nprogram.version('0.0.1');\n```\n\n```bash\n$ ./examples/pizza -V\n0.0.1\n```\n\nYou may change the flags and description by passing additional parameters to the `version` method, using\nthe same syntax for flags as the `option` method. The version flags can be named anything, but a long name is required.\n\n```js\nprogram.version('0.0.1', '-v, --vers', 'output the current version');\n```\n\n## Commands\n\nYou can specify (sub)commands using `.command()` or `.addCommand()`. There are two ways these can be implemented: using an action handler attached to the command, or as a stand-alone executable file (described in more detail later). The subcommands may be nested ([example](./examples/nestedCommands.js)).\n\nIn the first parameter to `.command()` you specify the command name and any command arguments. The arguments may be `<required>` or `[optional]`, and the last argument may also be `variadic...`.\n\nYou can use `.addCommand()` to add an already configured subcommand to the program.\n\nFor example:\n\n```js\n// Command implemented using action handler (description is supplied separately to `.command`)\n// Returns new command for configuring.\nprogram\n  .command('clone <source> [destination]')\n  .description('clone a repository into a newly created directory')\n  .action((source, destination) => {\n    console.log('clone command called');\n  });\n\n// Command implemented using stand-alone executable file (description is second parameter to `.command`)\n// Returns `this` for adding more commands.\nprogram\n  .command('start <service>', 'start named service')\n  .command('stop [service]', 'stop named service, or all if no name supplied');\n\n// Command prepared separately.\n// Returns `this` for adding more commands.\nprogram\n  .addCommand(build.makeBuildCommand());\n```\n\nConfiguration options can be passed with the call to `.command()` and `.addCommand()`. Specifying `true` for `opts.hidden` will remove the command from the generated help output. Specifying `true` for `opts.isDefault` will run the subcommand if no other subcommand is specified ([example](./examples/defaultCommand.js)).\n\n### Specify the argument syntax\n\nYou use `.arguments` to specify the arguments for the top-level command, and for subcommands they are usually included in the `.command` call. Angled brackets (e.g. `<required>`) indicate required input. Square brackets (e.g. `[optional]`) indicate optional input.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .version('0.1.0')\n  .arguments('<cmd> [env]')\n  .action(function (cmd, env) {\n    cmdValue = cmd;\n    envValue = env;\n  });\n\nprogram.parse(process.argv);\n\nif (typeof cmdValue === 'undefined') {\n  console.error('no command given!');\n  process.exit(1);\n}\nconsole.log('command:', cmdValue);\nconsole.log('environment:', envValue || \"no environment given\");\n```\n\n The last argument of a command can be variadic, and only the last argument.  To make an argument variadic you\n append `...` to the argument name. For example:\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .version('0.1.0')\n  .command('rmdir <dir> [otherDirs...]')\n  .action(function (dir, otherDirs) {\n    console.log('rmdir %s', dir);\n    if (otherDirs) {\n      otherDirs.forEach(function (oDir) {\n        console.log('rmdir %s', oDir);\n      });\n    }\n  });\n\nprogram.parse(process.argv);\n```\n\nThe variadic argument is passed to the action handler as an array.\n\n### Action handler (sub)commands\n\nYou can add options to a command that uses an action handler.\nThe action handler gets passed a parameter for each argument you declared, and one additional argument which is the\ncommand object itself. This command argument has the values for the command-specific options added as properties.\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .command('rm <dir>')\n  .option('-r, --recursive', 'Remove recursively')\n  .action(function (dir, cmdObj) {\n    console.log('remove ' + dir + (cmdObj.recursive ? ' recursively' : ''))\n  })\n\nprogram.parse(process.argv)\n```\n\nYou may supply an `async` action handler, in which case you call `.parseAsync` rather than `.parse`.\n\n```js\nasync function run() { /* code goes here */ }\n\nasync function main() {\n  program\n    .command('run')\n    .action(run);\n  await program.parseAsync(process.argv);\n}\n```\n\nA command's options on the command line are validated when the command is used. Any unknown options will be reported as an error.\n\n### Stand-alone executable (sub)commands\n\nWhen `.command()` is invoked with a description argument, this tells Commander that you're going to use stand-alone executables for subcommands.\nCommander will search the executables in the directory of the entry script (like `./examples/pm`) with the name `program-subcommand`, like `pm-install`, `pm-search`.\nYou can specify a custom name with the `executableFile` configuration option.\n\nYou handle the options for an executable (sub)command in the executable, and don't declare them at the top-level.\n\n```js\n// file: ./examples/pm\nconst { program } = require('commander');\n\nprogram\n  .version('0.1.0')\n  .command('install [name]', 'install one or more packages')\n  .command('search [query]', 'search with optional query')\n  .command('update', 'update installed packages', {executableFile: 'myUpdateSubCommand'})\n  .command('list', 'list packages installed', {isDefault: true})\n  .parse(process.argv);\n```\n\nIf the program is designed to be installed globally, make sure the executables have proper modes, like `755`.\n\n## Automated help\n\nThe help information is auto-generated based on the information commander already knows about your program. The default\nhelp option is `-h,--help`. ([example](./examples/pizza))\n\n```bash\n$ node ./examples/pizza --help\nUsage: pizza [options]\n\nAn application for pizzas ordering\n\nOptions:\n  -V, --version        output the version number\n  -p, --peppers        Add peppers\n  -c, --cheese <type>  Add the specified type of cheese (default: \"marble\")\n  -C, --no-cheese      You do not want any cheese\n  -h, --help           display help for command\n```\n\nA `help` command is added by default if your command has subcommands. It can be used alone, or with a subcommand name to show\nfurther help for the subcommand. These are effectively the same if the `shell` program has implicit help:\n\n```bash\nshell help\nshell --help\n\nshell help spawn\nshell spawn --help\n```\n\n### Custom help\n\nYou can display extra information by listening for \"--help\". ([example](./examples/custom-help))\n\n```js\nprogram\n  .option('-f, --foo', 'enable some foo');\n\n// must be before .parse()\nprogram.on('--help', () => {\n  console.log('');\n  console.log('Example call:');\n  console.log('  $ custom-help --help');\n});\n```\n\nYields the following help output:\n\n```Text\nUsage: custom-help [options]\n\nOptions:\n  -f, --foo   enable some foo\n  -h, --help  display help for command\n\nExample call:\n  $ custom-help --help\n```\n\n### .usage and .name\n\nThese allow you to customise the usage description in the first line of the help. The name is otherwise\ndeduced from the (full) program arguments. Given:\n\n```js\nprogram\n  .name(\"my-command\")\n  .usage(\"[global options] command\")\n```\n\nThe help will start with:\n\n```Text\nUsage: my-command [global options] command\n```\n\n### .help(cb)\n\nOutput help information and exit immediately. Optional callback cb allows post-processing of help text before it is displayed.\n\n### .outputHelp(cb)\n\nOutput help information without exiting.\nOptional callback cb allows post-processing of help text before it is displayed.\n\n### .helpInformation()\n\nGet the command help information as a string for processing or displaying yourself. (The text does not include the custom help\nfrom `--help` listeners.)\n\n### .helpOption(flags, description)\n\nOverride the default help flags and description.\n\n```js\nprogram\n  .helpOption('-e, --HELP', 'read more information');\n```\n\n### .addHelpCommand()\n\nYou can explicitly turn on or off the implicit help command with `.addHelpCommand()` and `.addHelpCommand(false)`.\n\nYou can both turn on and customise the help command by supplying the name and description:\n\n```js\nprogram.addHelpCommand('assist [command]', 'show assistance');\n```\n\n## Custom event listeners\n\nYou can execute custom actions by listening to command and option events.\n\n```js\nprogram.on('option:verbose', function () {\n  process.env.VERBOSE = this.verbose;\n});\n\nprogram.on('command:*', function (operands) {\n  console.error(`error: unknown command '${operands[0]}'`);\n  const availableCommands = program.commands.map(cmd => cmd.name());\n  mySuggestBestMatch(operands[0], availableCommands);\n  process.exitCode = 1;\n});\n```\n\n## Bits and pieces\n\n### .parse() and .parseAsync()\n\nThe first argument to `.parse` is the array of strings to parse. You may omit the parameter to implicitly use `process.argv`.\n\nIf the arguments follow different conventions than node you can pass a `from` option in the second parameter:\n\n- 'node': default, `argv[0]` is the application and `argv[1]` is the script being run, with user parameters after that\n- 'electron': `argv[1]` varies depending on whether the electron application is packaged\n- 'user': all of the arguments from the user\n\nFor example:\n\n```js\nprogram.parse(process.argv); // Explicit, node conventions\nprogram.parse(); // Implicit, and auto-detect electron\nprogram.parse(['-f', 'filename'], { from: 'user' });\n```\n\n### Avoiding option name clashes\n\nThe original and default behaviour is that the option values are stored\nas properties on the program, and the action handler is passed a\ncommand object with the options values stored as properties.\nThis is very convenient to code, but the downside is possible clashes with\nexisting properties of Command.\n\nThere are two new routines to change the behaviour, and the default behaviour may change in the future:\n\n- `storeOptionsAsProperties`: whether to store option values as properties on command object, or store separately (specify false) and access using `.opts()`\n- `passCommandToAction`: whether to pass command to action handler,\nor just the options (specify false)\n\n([example](./examples/storeOptionsAsProperties-action.js))\n\n```js\nprogram\n  .storeOptionsAsProperties(false)\n  .passCommandToAction(false);\n\nprogram\n  .name('my-program-name')\n  .option('-n,--name <name>');\n\nprogram\n  .command('show')\n  .option('-a,--action <action>')\n  .action((options) => {\n    console.log(options.action);\n  });\n\nprogram.parse(process.argv);\n\nconst programOptions = program.opts();\nconsole.log(programOptions.name);\n```\n\n### TypeScript\n\nThe Commander package includes its TypeScript Definition file.\n\nIf you use `ts-node` and  stand-alone executable subcommands written as `.ts` files, you need to call your program through node to get the subcommands called correctly. e.g.\n\n```bash\nnode -r ts-node/register pm.ts\n```\n\n### createCommand()\n\nThis factory function creates a new command. It is exported and may be used instead of using `new`, like:\n\n```js\nconst { createCommand } = require('commander');\nconst program = createCommand();\n```\n\n`createCommand` is also a method of the Command object, and creates a new command rather than a subcommand. This gets used internally\nwhen creating subcommands using `.command()`, and you may override it to\ncustomise the new subcommand (examples using [subclass](./examples/custom-command-class.js) and [function](./examples/custom-command-function.js)).\n\n### Node options such as `--harmony`\n\nYou can enable `--harmony` option in two ways:\n\n- Use `#! /usr/bin/env node --harmony` in the subcommands scripts. (Note Windows does not support this pattern.)\n- Use the `--harmony` option when call the command, like `node --harmony examples/pm publish`. The `--harmony` option will be preserved when spawning subcommand process.\n\n### Debugging stand-alone executable subcommands\n\nAn executable subcommand is launched as a separate child process.\n\nIf you are using the node inspector for [debugging](https://nodejs.org/en/docs/guides/debugging-getting-started/) executable subcommands using `node --inspect` et al,\nthe inspector port is incremented by 1 for the spawned subcommand.\n\nIf you are using VSCode to debug executable subcommands you need to set the `\"autoAttachChildProcesses\": true` flag in your launch.json configuration.\n\n### Override exit handling\n\nBy default Commander calls `process.exit` when it detects errors, or after displaying the help or version. You can override\nthis behaviour and optionally supply a callback. The default override throws a `CommanderError`.\n\nThe override callback is passed a `CommanderError` with properties `exitCode` number, `code` string, and `message`. The default override behaviour is to throw the error, except for async handling of executable subcommand completion which carries on. The normal display of error messages or version or help\nis not affected by the override which is called after the display.\n\n``` js\nprogram.exitOverride();\n\ntry {\n  program.parse(process.argv);\n} catch (err) {\n  // custom processing...\n}\n```\n\n## Examples\n\n```js\nconst { program } = require('commander');\n\nprogram\n  .version('0.1.0')\n  .option('-C, --chdir <path>', 'change the working directory')\n  .option('-c, --config <path>', 'set config path. defaults to ./deploy.conf')\n  .option('-T, --no-tests', 'ignore test hook');\n\nprogram\n  .command('setup [env]')\n  .description('run setup commands for all envs')\n  .option(\"-s, --setup_mode [mode]\", \"Which setup mode to use\")\n  .action(function(env, options){\n    const mode = options.setup_mode || \"normal\";\n    env = env || 'all';\n    console.log('setup for %s env(s) with %s mode', env, mode);\n  });\n\nprogram\n  .command('exec <cmd>')\n  .alias('ex')\n  .description('execute the given remote cmd')\n  .option(\"-e, --exec_mode <mode>\", \"Which exec mode to use\")\n  .action(function(cmd, options){\n    console.log('exec \"%s\" using %s mode', cmd, options.exec_mode);\n  }).on('--help', function() {\n    console.log('');\n    console.log('Examples:');\n    console.log('');\n    console.log('  $ deploy exec sequential');\n    console.log('  $ deploy exec async');\n  });\n\nprogram.parse(process.argv);\n```\n\nMore Demos can be found in the [examples](https://github.com/tj/commander.js/tree/master/examples) directory.\n\n## License\n\n[MIT](https://github.com/tj/commander.js/blob/master/LICENSE)\n\n## Support\n\nCommander 5.x is fully supported on Long Term Support versions of Node, and is likely to work with Node 6 but not tested.\n(For versions of Node below Node 6, use Commander 3.x or 2.x.)\n\nThe main forum for free and community support is the project [Issues](https://github.com/tj/commander.js/issues) on GitHub.\n\n### Commander for enterprise\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of Commander and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-commander?utm_source=npm-commander&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 8019232}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 43120882}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 178209705}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 535697921}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 968078466}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1747105883}], "dependentsCount": 39174, "starsCount": 1013}, "github": {"starsCount": 18077, "forksCount": 1251, "subscribersCount": 242, "issues": {"count": 1276, "openCount": 17, "distribution": {"3600": 139, "10800": 69, "32400": 82, "97200": 128, "291600": 80, "874800": 78, "2624400": 113, "7873200": 108, "23619600": 103, "70858800": 182, "212576400": 194}, "isDisabled": false}, "contributors": [{"username": "shadowspawn", "commitsCount": 167}, {"username": "tj", "commitsCount": 142}, {"username": "zhiyelee", "commitsCount": 76}, {"username": "abetomo", "commitsCount": 48}, {"username": "tonylukasavage", "commitsCount": 9}, {"username": "mojavelinux", "commitsCount": 8}, {"username": "alan-agius4", "commitsCount": 6}, {"username": "jaredpetersen", "commitsCount": 6}, {"username": "oGsLP", "commitsCount": 6}, {"username": "itay", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "focusaurus", "commitsCount": 4}, {"username": "sebastiendb", "commitsCount": 4}, {"username": "banli17", "commitsCount": 3}, {"username": "felixge", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 3}, {"username": "kira1928", "commitsCount": 3}, {"username": "sorohan", "commitsCount": 3}, {"username": "tandrewnichols", "commitsCount": 3}, {"username": "thethomaseffect", "commitsCount": 3}, {"username": "AlphaHydrae", "commitsCount": 2}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Globegitter", "commitsCount": 2}, {"username": "JustATrick", "commitsCount": 2}, {"username": "Quentin01", "commitsCount": 2}, {"username": "SomeKittens", "commitsCount": 2}, {"username": "ajfranzoia", "commitsCount": 2}, {"username": "codyj110", "commitsCount": 2}, {"username": "jhamlet", "commitsCount": 2}, {"username": "karfau", "commitsCount": 2}, {"username": "miyajan", "commitsCount": 2}, {"username": "noway", "commitsCount": 2}, {"username": "pRizz", "commitsCount": 2}, {"username": "palanik", "commitsCount": 2}, {"username": "qfox", "commitsCount": 2}, {"username": "rrthomas", "commitsCount": 2}, {"username": "usmonster", "commitsCount": 2}, {"username": "viniciusls", "commitsCount": 2}, {"username": "vonagam", "commitsCount": 2}, {"username": "yausername", "commitsCount": 2}, {"username": "zce", "commitsCount": 2}, {"username": "AMoreaux", "commitsCount": 1}, {"username": "ForJing", "commitsCount": 1}, {"username": "HakurouKen", "commitsCount": 1}, {"username": "KillWolfVlad", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "MarshallOfSound", "commitsCount": 1}, {"username": "Nepomuceno", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "TheRoSS", "commitsCount": 1}, {"username": "TheToolbox", "commitsCount": 1}, {"username": "ThomasSimoens", "commitsCount": 1}, {"username": "UrielCh", "commitsCount": 1}, {"username": "ValentinTrinque", "commitsCount": 1}, {"username": "Willv19", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "akvamalin", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "blair", "commitsCount": 1}, {"username": "bodinsamuel", "commitsCount": 1}, {"username": "buerkle", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "c-geek", "commitsCount": 1}, {"username": "chdh", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chengkungui", "commitsCount": 1}, {"username": "chengluyu", "commitsCount": 1}, {"username": "ciceropablo", "commitsCount": 1}, {"username": "claylo", "commitsCount": 1}, {"username": "daevidpreis", "commitsCount": 1}, {"username": "deepakpathania", "commitsCount": 1}, {"username": "djulien", "commitsCount": 1}, {"username": "eduardbadillo", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "grant", "commitsCount": 1}, {"username": "hxsf", "commitsCount": 1}, {"username": "idmontie", "commitsCount": 1}, {"username": "ignacioiglesias", "commitsCount": 1}, {"username": "jamesr73", "commitsCount": 1}, {"username": "jsamr", "commitsCount": 1}, {"username": "junajan", "commitsCount": 1}, {"username": "monkeym4ster", "commitsCount": 1}, {"username": "nazieb", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "pbnj", "commitsCount": 1}, {"username": "prokopsimek", "commitsCount": 1}, {"username": "reviewher", "commitsCount": 1}, {"username": "revington", "commitsCount": 1}, {"username": "rike422", "commitsCount": 1}, {"username": "simeg", "commitsCount": 1}, {"username": "snow01", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "sunorry", "commitsCount": 1}, {"username": "tugrul", "commitsCount": 1}, {"username": "twk-b", "commitsCount": 1}, {"username": "xcatliu", "commitsCount": 1}, {"username": "yanick", "commitsCount": 1}, {"username": "ycmjason", "commitsCount": 1}, {"username": "zephraph", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 11}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 76}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 188}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 25199, "testsSize": 135340, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/tj/commander.js.svg?branch=master", "service": "https://api.travis-ci.org/tj/commander.js.svg?branch=master", "shields": "https://img.shields.io/travis/tj/commander.js/master.svg", "content": "https://img.shields.io/travis/tj/commander.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/npm/v/commander.svg?style=flat", "shields": "https://img.shields.io/npm/v/commander.svg", "content": "https://img.shields.io/npm/v/commander.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/commander.svg?style=flat", "shields": "https://img.shields.io/npm/dm/commander.svg", "content": "https://img.shields.io/npm/dm/commander.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "standard"], "coverage": 0.79}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9684999999999999, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 20683, "downloadsCount": 178565973.66666666, "downloadsAcceleration": 436338.5698630137, "dependentsCount": 39174}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9758082191780822, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.863864985699774, "detail": {"quality": 0.9941487103427481, "popularity": 0.9493917094580377, "maintenance": 0.6666664979618182}}}}, {"file-loader": {"analyzedAt": "2020-06-13T03:00:01.688Z", "collected": {"metadata": {"name": "file-loader", "scope": "unscoped", "version": "6.0.0", "description": "A file loader module for webpack", "keywords": ["webpack"], "date": "2020-03-17T12:07:35.273Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/file-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/file-loader", "homepage": "https://github.com/webpack-contrib/file-loader", "repository": "https://github.com/webpack-contrib/file-loader", "bugs": "https://github.com/webpack-contrib/file-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.8.7", "@babel/preset-env": "^7.8.7", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.1.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-plugin-import": "^2.20.1", "husky": "^4.2.3", "jest": "^25.1.0", "jest-junit": "^10.0.0", "lint-staged": "^10.0.8", "memfs": "^3.1.2", "memory-fs": "^0.5.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "standard-version": "^7.1.0", "url-loader": "^3.0.0", "webpack": "^4.42.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# file-loader\n\nThe `file-loader` resolves `import`/`require()` on a file into a url and emits the file into the output directory.\n\n## Getting Started\n\nTo begin, you'll need to install `file-loader`:\n\n```console\n$ npm install file-loader --save-dev\n```\n\nImport (or `require`) the target file(s) in one of the bundle's files:\n\n**file.js**\n\n```js\nimport img from './file.png';\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method. This will emit `file.png` as a file\nin the output directory (with the specified naming convention, if options are\nspecified to do so) and returns the public URI of the file.\n\n> \u2139\ufe0f By default the filename of the resulting file is the hash of the file's contents with the original extension of the required resource.\n\n## Options\n\n### `name`\n\nType: `String|Function`\nDefault: `'[contenthash].[ext]'`\n\nSpecifies a custom filename template for the target file(s) using the query\nparameter `name`. For example, to emit a file from your `context` directory into\nthe output directory retaining the full directory structure, you might use:\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[path][name].[ext]',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name(resourcePath, resourceQuery) {\n            // `resourcePath` - `/absolute/path/to/file.js`\n            // `resourceQuery` - `?foo=bar`\n\n            if (process.env.NODE_ENV === 'development') {\n              return '[path][name].[ext]';\n            }\n\n            return '[contenthash].[ext]';\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f By default the path and name you specify will output the file in that same directory, and will also use the same URI path to access the file.\n\n### `outputPath`\n\nType: `String|Function`\nDefault: `undefined`\n\nSpecify a filesystem path where the target file(s) will be placed.\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: 'images',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_output_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `output_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `publicPath`\n\nType: `String|Function`\nDefault: [`__webpack_public_path__`](https://webpack.js.org/api/module-variables/#__webpack_public_path__-webpack-specific-)+outputPath\n\nSpecifies a custom public path for the target file(s).\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: 'assets',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_public_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `public_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `postTransformPublicPath`\n\nType: `Function`\nDefault: `undefined`\n\nSpecifies a custom function to post-process the generated public path. This can be used to prepend or append dynamic global variables that are only available at runtime, like `__webpack_public_path__`. This would not be possible with just `publicPath`, since it stringifies the values.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: '/some/path/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `context`\n\nType: `String`\nDefault: [`context`](https://webpack.js.org/configuration/entry-context/#context)\n\nSpecifies a custom file context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              context: 'project',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `emitFile`\n\nType: `Boolean`\nDefault: `true`\n\nIf true, emits a file (writes a file to the filesystem). If false, the loader\nwill return a public URI but **will not** emit the file. It is often useful to\ndisable this option for server-side packages.\n\n**file.js**\n\n```js\n// bundle file\nimport img from './file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              emitFile: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `regExp`\n\nType: `RegExp`\nDefault: `undefined`\n\nSpecifies a Regular Expression to one or many parts of the target file path.\nThe capture groups can be reused in the `name` property using `[N]`\n[placeholder](https://github.com/webpack-contrib/file-loader#placeholders).\n\n**file.js**\n\n```js\nimport img from './customer01/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              regExp: /\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/i,\n              name: '[1]-[name].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f If `[0]` is used, it will be replaced by the entire tested string, whereas `[1]` will contain the first capturing parenthesis of your regex and so on...\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `file-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Placeholders\n\nFull information about placeholders you can find [here](https://github.com/webpack/loader-utils#interpolatename).\n\n### `[ext]`\n\nType: `String`\nDefault: `file.extname`\n\nThe file extension of the target file/resource.\n\n### `[name]`\n\nType: `String`\nDefault: `file.basename`\n\nThe basename of the file/resource.\n\n### `[path]`\n\nType: `String`\nDefault: `file.directory`\n\nThe path of the resource relative to the webpack/config `context`.\n\n### `[folder]`\n\nType: `String`\nDefault: `file.folder`\n\nThe folder of the resource is in.\n\n### `[query]`\n\nType: `String`\nDefault: `file.query`\n\nThe query of the resource, i.e. `?foo=bar`.\n\n### `[emoji]`\n\nType: `String`\nDefault: `undefined`\n\nA random emoji representation of `content`.\n\n### `[emoji:<length>]`\n\nType: `String`\nDefault: `undefined`\n\nSame as above, but with a customizable number of emojis\n\n### `[hash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[contenthash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[<hashType>:hash:<digestType>:<length>]`\n\nType: `String`\n\nThe hash of options.content (Buffer) (by default it's the hex digest of the hash).\n\n#### `digestType`\n\nType: `String`\nDefault: `'hex'`\n\nThe [digest](https://en.wikipedia.org/wiki/Cryptographic_hash_function) that the\nhash function should use. Valid values include: base26, base32, base36,\nbase49, base52, base58, base62, base64, and hex.\n\n#### `hashType`\n\nType: `String`\nDefault: `'md4'`\n\nThe type of hash that the has function should use. Valid values include: `md4`, `md5`, `sha1`, `sha256`, and `sha512`.\n\n#### `length`\n\nType: `Number`\nDefault: `undefined`\n\nUsers may also specify a length for the computed hash.\n\n### `[N]`\n\nType: `String`\nDefault: `undefined`\n\nThe n-th match obtained from matching the current file name against the `regExp`.\n\n## Examples\n\n### Names\n\nThe following examples show how one might use `file-loader` and what the result would be.\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: 'dirname/[contenthash].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ndirname/0dcbbaa701328ae351f.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[sha512:hash:base64:7].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ngdyb21L.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './path/to/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext]?[contenthash]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n### CDN\n\nThe following examples show how to use `file-loader` for CDN uses query params.\n\n**file.js**\n\n```js\nimport png from './directory/image.png?width=300&height=300';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  output: {\n    publicPath: 'https://cdn.example.com/',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext][query]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\nhttps://cdn.example.com/directory/image.png?width=300&height=300\n```\n\n### Dynamic public path depending on environment variable at run time\n\nAn application might want to configure different CDN hosts depending on an environment variable that is only available when running the application. This can be an advantage, as only one build of the application is necessary, which behaves differntly depending on environment variables of the deployment environment. Since file-loader is applied when compiling the application, and not when running it, the environment variable cannot be used in the file-loader configuration. A way around this is setting the `__webpack_public_path__` to the desired CDN host depending on the environment variable at the entrypoint of the application. The option `postTransformPublicPath` can be used to configure a custom path depending on a variable like `__webpack_public_path__`.\n\n**main.js**\n\n```js\nconst assetPrefixForNamespace = (namespace) => {\n  switch (namespace) {\n    case 'prod':\n      return 'https://cache.myserver.net/web';\n    case 'uat':\n      return 'https://cache-uat.myserver.net/web';\n    case 'st':\n      return 'https://cache-st.myserver.net/web';\n    case 'dev':\n      return 'https://cache-dev.myserver.net/web';\n    default:\n      return '';\n  }\n};\nconst namespace = process.env.NAMESPACE;\n\n__webpack_public_path__ = `${assetPrefixForNamespace(namespace)}/`;\n```\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[contenthash].[ext]',\n          outputPath: 'static/assets/',\n          publicPath: 'static/assets/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\nResult when run with `NAMESPACE=prod` env variable:\n\n```bash\n# result\nhttps://cache.myserver.net/web/static/assets/image.somehash.png\n```\n\nResult when run with `NAMESPACE=dev` env variable:\n\n```bash\n# result\nhttps://cache-dev.myserver.net/web/static/assets/image.somehash.png\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/file-loader.svg\n[npm-url]: https://npmjs.com/package/file-loader\n[node]: https://img.shields.io/node/v/file-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/file-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/file-loader\n[tests]: https://dev.azure.com/webpack-contrib/file-loader/_apis/build/status/webpack-contrib.file-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/file-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/file-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/file-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=file-loader\n[size-url]: https://packagephobia.now.sh/result?p=file-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1470087}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9316285}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 40116007}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 119015134}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 211559389}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 376211829}], "dependentsCount": 7687, "starsCount": 64}, "github": {"starsCount": 1745, "forksCount": 257, "subscribersCount": 29, "issues": {"count": 373, "openCount": 4, "distribution": {"3600": 79, "10800": 26, "32400": 15, "97200": 38, "291600": 14, "874800": 19, "2624400": 26, "7873200": 38, "23619600": 57, "70858800": 53, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 42}, {"username": "d3viant0ne", "commitsCount": 34}, {"username": "sokra", "commitsCount": 27}, {"username": "michael-ciniawsky", "commitsCount": 18}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "akx", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "smondal", "commitsCount": 2}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Gabri3l", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Nicktho", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "adriancmiranda", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alanyinjs", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "cameronhimself", "commitsCount": 1}, {"username": "cjhanrahan", "commitsCount": 1}, {"username": "cobbweb", "commitsCount": 1}, {"username": "dms1lva", "commitsCount": 1}, {"username": "economysizegeek", "commitsCount": 1}, {"username": "fabb", "commitsCount": 1}, {"username": "jordansexton", "commitsCount": 1}, {"username": "joseprio", "commitsCount": 1}, {"username": "jungomi", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "kossnocorp", "commitsCount": 1}, {"username": "mobitar", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "mrpoptart", "commitsCount": 1}, {"username": "necolas", "commitsCount": 1}, {"username": "rderandom", "commitsCount": 1}, {"username": "renestalder", "commitsCount": 1}, {"username": "revolunet", "commitsCount": 1}, {"username": "rondonjon", "commitsCount": 1}, {"username": "serut", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "shprink", "commitsCount": 1}, {"username": "syranide", "commitsCount": 1}, {"username": "tedpennings", "commitsCount": 1}, {"username": "tstirrat15", "commitsCount": 1}, {"username": "xoyimi", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 24}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 15733, "testsSize": 75603, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/file-loader.svg", "shields": "https://img.shields.io/npm/v/file-loader.svg", "content": "https://img.shields.io/npm/v/file-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/file-loader.svg", "service": "https://david-dm.org/webpack-contrib/file-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/file-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/file-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 2141, "downloadsCount": 39671711.333333336, "downloadsAcceleration": 112773.87319254183, "dependentsCount": 7687}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9174161590017742, "detail": {"quality": 0.9952085638971784, "popularity": 0.7682616479923653, "maintenance": 0.9998914658151222}}}}, {"fs-extra": {"analyzedAt": "2020-06-04T09:43:38.040Z", "collected": {"metadata": {"name": "fs-extra", "scope": "unscoped", "version": "9.0.1", "description": "fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as recursive mkdir, copy, and remove.", "keywords": ["fs", "file", "file system", "copy", "directory", "extra", "mkdirp", "mkdir", "mkdirs", "recursive", "json", "read", "write", "extra", "delete", "remove", "touch", "create", "text", "output", "move", "promise"], "date": "2020-06-04T00:17:45.120Z", "author": {"name": "JP Richardson", "email": "jprichardson@gmail.com", "username": "jprichardson"}, "publisher": {"username": "ryanzim", "email": "opensrc@ryanzim.com"}, "maintainers": [{"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "manidlou", "email": "manidlou@gmail.com"}, {"username": "ryanzim", "email": "opensrc@ryanzim.com"}], "repository": {"type": "git", "url": "git+https://github.com/jprichardson/node-fs-extra.git"}, "links": {"npm": "https://www.npmjs.com/package/fs-extra", "homepage": "https://github.com/jprichardson/node-fs-extra", "repository": "https://github.com/jprichardson/node-fs-extra", "bugs": "https://github.com/jprichardson/node-fs-extra/issues"}, "license": "MIT", "dependencies": {"at-least-node": "^1.0.0", "graceful-fs": "^4.2.0", "jsonfile": "^6.0.1", "universalify": "^1.0.0"}, "devDependencies": {"coveralls": "^3.0.0", "klaw": "^2.1.1", "klaw-sync": "^3.0.2", "minimist": "^1.1.1", "mocha": "^5.0.5", "nyc": "^15.0.0", "proxyquire": "^2.0.1", "read-dir-files": "^0.1.1", "standard": "^14.1.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Node.js: fs-extra\n=================\n\n`fs-extra` adds file system methods that aren't included in the native `fs` module and adds promise support to the `fs` methods. It also uses [`graceful-fs`](https://github.com/isaacs/node-graceful-fs) to prevent `EMFILE` errors. It should be a drop in replacement for `fs`.\n\n[![npm Package](https://img.shields.io/npm/v/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![License](https://img.shields.io/npm/l/express.svg)](https://github.com/jprichardson/node-fs-extra/blob/master/LICENSE)\n[![build status](https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg)](http://travis-ci.org/jprichardson/node-fs-extra)\n[![windows Build status](https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build)](https://ci.appveyor.com/project/jprichardson/node-fs-extra/branch/master)\n[![downloads per month](http://img.shields.io/npm/dm/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![Coverage Status](https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg)](https://coveralls.io/github/jprichardson/node-fs-extra)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\nWhy?\n----\n\nI got tired of including `mkdirp`, `rimraf`, and `ncp` in most of my projects.\n\n\n\n\nInstallation\n------------\n\n    npm install fs-extra\n\n\n\nUsage\n-----\n\n`fs-extra` is a drop in replacement for native `fs`. All methods in `fs` are attached to `fs-extra`. All `fs` methods return promises if the callback isn't passed.\n\nYou don't ever need to include the original `fs` module again:\n\n```js\nconst fs = require('fs') // this is no longer necessary\n```\n\nyou can now do this:\n\n```js\nconst fs = require('fs-extra')\n```\n\nor if you prefer to make it clear that you're using `fs-extra` and not `fs`, you may want\nto name your `fs` variable `fse` like so:\n\n```js\nconst fse = require('fs-extra')\n```\n\nyou can also keep both, but it's redundant:\n\n```js\nconst fs = require('fs')\nconst fse = require('fs-extra')\n```\n\nSync vs Async vs Async/Await\n-------------\nMost methods are async by default. All async methods will return a promise if the callback isn't passed.\n\nSync methods on the other hand will throw if an error occurs.\n\nAlso Async/Await will throw an error if one occurs.\n\nExample:\n\n```js\nconst fs = require('fs-extra')\n\n// Async with promises:\nfs.copy('/tmp/myfile', '/tmp/mynewfile')\n  .then(() => console.log('success!'))\n  .catch(err => console.error(err))\n\n// Async with callbacks:\nfs.copy('/tmp/myfile', '/tmp/mynewfile', err => {\n  if (err) return console.error(err)\n  console.log('success!')\n})\n\n// Sync:\ntry {\n  fs.copySync('/tmp/myfile', '/tmp/mynewfile')\n  console.log('success!')\n} catch (err) {\n  console.error(err)\n}\n\n// Async/Await:\nasync function copyFiles () {\n  try {\n    await fs.copy('/tmp/myfile', '/tmp/mynewfile')\n    console.log('success!')\n  } catch (err) {\n    console.error(err)\n  }\n}\n\ncopyFiles()\n```\n\n\nMethods\n-------\n\n### Async\n\n- [copy](docs/copy.md)\n- [emptyDir](docs/emptyDir.md)\n- [ensureFile](docs/ensureFile.md)\n- [ensureDir](docs/ensureDir.md)\n- [ensureLink](docs/ensureLink.md)\n- [ensureSymlink](docs/ensureSymlink.md)\n- [mkdirp](docs/ensureDir.md)\n- [mkdirs](docs/ensureDir.md)\n- [move](docs/move.md)\n- [outputFile](docs/outputFile.md)\n- [outputJson](docs/outputJson.md)\n- [pathExists](docs/pathExists.md)\n- [readJson](docs/readJson.md)\n- [remove](docs/remove.md)\n- [writeJson](docs/writeJson.md)\n\n### Sync\n\n- [copySync](docs/copy-sync.md)\n- [emptyDirSync](docs/emptyDir-sync.md)\n- [ensureFileSync](docs/ensureFile-sync.md)\n- [ensureDirSync](docs/ensureDir-sync.md)\n- [ensureLinkSync](docs/ensureLink-sync.md)\n- [ensureSymlinkSync](docs/ensureSymlink-sync.md)\n- [mkdirpSync](docs/ensureDir-sync.md)\n- [mkdirsSync](docs/ensureDir-sync.md)\n- [moveSync](docs/move-sync.md)\n- [outputFileSync](docs/outputFile-sync.md)\n- [outputJsonSync](docs/outputJson-sync.md)\n- [pathExistsSync](docs/pathExists-sync.md)\n- [readJsonSync](docs/readJson-sync.md)\n- [removeSync](docs/remove-sync.md)\n- [writeJsonSync](docs/writeJson-sync.md)\n\n\n**NOTE:** You can still use the native Node.js methods. They are promisified and copied over to `fs-extra`. See [notes on `fs.read()`, `fs.write()`, & `fs.writev()`](docs/fs-read-write-writev.md)\n\n### What happened to `walk()` and `walkSync()`?\n\nThey were removed from `fs-extra` in v2.0.0. If you need the functionality, `walk` and `walkSync` are available as separate packages, [`klaw`](https://github.com/jprichardson/node-klaw) and [`klaw-sync`](https://github.com/manidlou/node-klaw-sync).\n\n\nThird Party\n-----------\n\n\n### TypeScript\n\nIf you like TypeScript, you can use `fs-extra` with it: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/fs-extra\n\n\n### File / Directory Watching\n\nIf you want to watch for changes to files or directories, then you should use [chokidar](https://github.com/paulmillr/chokidar).\n\n### Obtain Filesystem (Devices, Partitions) Information\n\n[fs-filesystem](https://github.com/arthurintelligence/node-fs-filesystem) allows you to read the state of the filesystem of the host on which it is run. It returns information about both the devices and the partitions (volumes) of the system.\n\n### Misc.\n\n- [fs-extra-debug](https://github.com/jdxcode/fs-extra-debug) - Send your fs-extra calls to [debug](https://npmjs.org/package/debug).\n- [mfs](https://github.com/cadorn/mfs) - Monitor your fs-extra calls.\n\n\n\nHacking on fs-extra\n-------------------\n\nWanna hack on `fs-extra`? Great! Your help is needed! [fs-extra is one of the most depended upon Node.js packages](http://nodei.co/npm/fs-extra.png?downloads=true&downloadRank=true&stars=true). This project\nuses [JavaScript Standard Style](https://github.com/feross/standard) - if the name or style choices bother you,\nyou're gonna have to get over it :) If `standard` is good enough for `npm`, it's good enough for `fs-extra`.\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nWhat's needed?\n- First, take a look at existing issues. Those are probably going to be where the priority lies.\n- More tests for edge cases. Specifically on different platforms. There can never be enough tests.\n- Improve test coverage. See coveralls output for more info.\n\nNote: If you make any big changes, **you should definitely file an issue for discussion first.**\n\n### Running the Test Suite\n\nfs-extra contains hundreds of tests.\n\n- `npm run lint`: runs the linter ([standard](http://standardjs.com/))\n- `npm run unit`: runs the unit tests\n- `npm test`: runs both the linter and the tests\n\n\n### Windows\n\nIf you run the tests on the Windows and receive a lot of symbolic link `EPERM` permission errors, it's\nbecause on Windows you need elevated privilege to create symbolic links. You can add this to your Windows's\naccount by following the instructions here: http://superuser.com/questions/104845/permission-to-make-symbolic-links-in-windows-7\nHowever, I didn't have much luck doing this.\n\nSince I develop on Mac OS X, I use VMWare Fusion for Windows testing. I create a shared folder that I map to a drive on Windows.\nI open the `Node.js command prompt` and run as `Administrator`. I then map the network drive running the following command:\n\n    net use z: \"\\\\vmware-host\\Shared Folders\"\n\nI can then navigate to my `fs-extra` directory and run the tests.\n\n\nNaming\n------\n\nI put a lot of thought into the naming of these functions. Inspired by @coolaj86's request. So he deserves much of the credit for raising the issue. See discussion(s) here:\n\n* https://github.com/jprichardson/node-fs-extra/issues/2\n* https://github.com/flatiron/utile/issues/11\n* https://github.com/ryanmcgrath/wrench-js/issues/29\n* https://github.com/substack/node-mkdirp/issues/17\n\nFirst, I believe that in as many cases as possible, the [Node.js naming schemes](http://nodejs.org/api/fs.html) should be chosen. However, there are problems with the Node.js own naming schemes.\n\nFor example, `fs.readFile()` and `fs.readdir()`: the **F** is capitalized in *File* and the **d** is not capitalized in *dir*. Perhaps a bit pedantic, but they should still be consistent. Also, Node.js has chosen a lot of POSIX naming schemes, which I believe is great. See: `fs.mkdir()`, `fs.rmdir()`, `fs.chown()`, etc.\n\nWe have a dilemma though. How do you consistently name methods that perform the following POSIX commands: `cp`, `cp -r`, `mkdir -p`, and `rm -rf`?\n\nMy perspective: when in doubt, err on the side of simplicity. A directory is just a hierarchical grouping of directories and files. Consider that for a moment. So when you want to copy it or remove it, in most cases you'll want to copy or remove all of its contents. When you want to create a directory, if the directory that it's suppose to be contained in does not exist, then in most cases you'll want to create that too.\n\nSo, if you want to remove a file or a directory regardless of whether it has contents, just call `fs.remove(path)`. If you want to copy a file or a directory whether it has contents, just call `fs.copy(source, destination)`. If you want to create a directory regardless of whether its parent directories exist, just call `fs.mkdirs(path)` or `fs.mkdirp(path)`.\n\n\nCredit\n------\n\n`fs-extra` wouldn't be possible without using the modules from the following authors:\n\n- [Isaac Shlueter](https://github.com/isaacs)\n- [Charlie McConnel](https://github.com/avianflu)\n- [James Halliday](https://github.com/substack)\n- [Andrew Kelley](https://github.com/andrewrk)\n\n\n\n\nLicense\n-------\n\nLicensed under MIT\n\nCopyright (c) 2011-2017 [JP Richardson](https://github.com/jprichardson)\n\n[1]: http://nodejs.org/docs/latest/api/fs.html\n\n\n[jsonfile]: https://github.com/jprichardson/node-jsonfile"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5211136}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26945194}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 115830339}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 332010771}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 586930684}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1045809171}], "dependentsCount": 28729, "starsCount": 425}, "github": {"starsCount": 6880, "forksCount": 610, "subscribersCount": 86, "issues": {"count": 802, "openCount": 21, "distribution": {"3600": 108, "10800": 60, "32400": 76, "97200": 99, "291600": 81, "874800": 55, "2624400": 52, "7873200": 91, "23619600": 92, "70858800": 72, "212576400": 16}, "isDisabled": false}, "contributors": [{"username": "jprichardson", "commitsCount": 597}, {"username": "RyanZim", "commitsCount": 111}, {"username": "JPeer264", "commitsCount": 48}, {"username": "manidlou", "commitsCount": 48}, {"username": "agnivade", "commitsCount": 4}, {"username": "srirangan", "commitsCount": 4}, {"username": "bartland", "commitsCount": 3}, {"username": "binki", "commitsCount": 3}, {"username": "mbargiel", "commitsCount": 3}, {"username": "overlookmotel", "commitsCount": 3}, {"username": "Ackar", "commitsCount": 2}, {"username": "abetomo", "commitsCount": 2}, {"username": "hhamilto", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "nacd", "commitsCount": 2}, {"username": "newmanw", "commitsCount": 2}, {"username": "reggi", "commitsCount": 2}, {"username": "rjz", "commitsCount": 2}, {"username": "ulikoehler", "commitsCount": 2}, {"username": "yibuyisheng", "commitsCount": 2}, {"username": "AustinLeeGordon", "commitsCount": 1}, {"username": "Cellule", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "GeoffreyEmery", "commitsCount": 1}, {"username": "Lambdac0re", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "alewitt", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "bajtos", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "bitdeli-chef", "commitsCount": 1}, {"username": "charlierudolph", "commitsCount": 1}, {"username": "chinesedfan", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "daysv", "commitsCount": 1}, {"username": "distracteddev", "commitsCount": 1}, {"username": "djcsdy", "commitsCount": 1}, {"username": "dr-dimitru", "commitsCount": 1}, {"username": "federicobozzini", "commitsCount": 1}, {"username": "futagoza", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "gkalpak", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "hail2u", "commitsCount": 1}, {"username": "ioncreature", "commitsCount": 1}, {"username": "jacobq", "commitsCount": 1}, {"username": "jdalton", "commitsCount": 1}, {"username": "jdxcode", "commitsCount": 1}, {"username": "jimhigson", "commitsCount": 1}, {"username": "kolgotko", "commitsCount": 1}, {"username": "marcjansen", "commitsCount": 1}, {"username": "mtiller", "commitsCount": 1}, {"username": "nicks", "commitsCount": 1}, {"username": "nico29", "commitsCount": 1}, {"username": "opudalo", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pgonzal", "commitsCount": 1}, {"username": "philippefutureboy", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "ramhejazi", "commitsCount": 1}, {"username": "raybellis", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "robertjacobson", "commitsCount": 1}, {"username": "ryanmurakami", "commitsCount": 1}, {"username": "stephenmathieson", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tvald", "commitsCount": 1}, {"username": "weexpectedTHIS", "commitsCount": 1}, {"username": "wontem", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 31}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 9790, "testsSize": 280974, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/fs-extra.svg", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/express.svg", "shields": "https://img.shields.io/npm/l/express.svg", "content": "https://img.shields.io/npm/l/express.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "service": "https://api.travis-ci.org/jprichardson/node-fs-extra.svg?branch=master", "shields": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build", "service": "https://ci.appveyor.com/api/projects/status/jprichardson/node-fs-extra/branch/master", "shields": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/fs-extra.svg", "shields": "https://img.shields.io/npm/dm/fs-extra.svg", "content": "https://img.shields.io/npm/dm/fs-extra.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "service": "https://coveralls.io/repos/github/jprichardson/node-fs-extra/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://nodei.co/npm/fs-extra.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["standard"], "coverage": 0.83}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9744999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 8071, "downloadsCount": 110670257, "downloadsAcceleration": 347819.0278158296, "dependentsCount": 28729}, "maintenance": {"releasesFrequency": 0.39760273972602744, "commitsFrequency": 0.8779794520547946, "openIssues": 1, "issuesDistribution": 0.24669582283440705}}, "score": {"final": 0.9154790358330129, "detail": {"quality": 0.9961046269963703, "popularity": 0.900809419494359, "maintenance": 0.8610410026030749}}}}, {"nyc": {"analyzedAt": "2020-06-03T15:57:58.285Z", "collected": {"metadata": {"name": "nyc", "scope": "unscoped", "version": "15.1.0", "description": "the Istanbul command line interface", "keywords": ["coverage", "reporter", "subprocess", "testing"], "date": "2020-06-01T00:58:43.211Z", "author": {"name": "Ben Coe", "email": "ben@npmjs.com", "username": "bcoe"}, "publisher": {"username": "coreyfarrell", "email": "git@cfware.com"}, "maintainers": [{"username": "bcoe", "email": "ben@npmjs.com"}, {"username": "coreyfarrell", "email": "git@cfware.com"}, {"username": "isaacs", "email": "i@izs.me"}], "contributors": [{"name": "Isaac Schlueter"}, {"name": "Mark Wubben"}, {"name": "James Talmage"}, {"name": "Krishnan Anantheswaran"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/istanbuljs/nyc.git"}, "links": {"npm": "https://www.npmjs.com/package/nyc", "homepage": "https://istanbul.js.org/", "repository": "https://github.com/istanbuljs/nyc", "bugs": "https://github.com/istanbuljs/nyc/issues"}, "license": "ISC", "dependencies": {"@istanbuljs/load-nyc-config": "^1.0.0", "@istanbuljs/schema": "^0.1.2", "caching-transform": "^4.0.0", "convert-source-map": "^1.7.0", "decamelize": "^1.2.0", "find-cache-dir": "^3.2.0", "find-up": "^4.1.0", "foreground-child": "^2.0.0", "get-package-type": "^0.1.0", "glob": "^7.1.6", "istanbul-lib-coverage": "^3.0.0", "istanbul-lib-hook": "^3.0.0", "istanbul-lib-instrument": "^4.0.0", "istanbul-lib-processinfo": "^2.0.2", "istanbul-lib-report": "^3.0.0", "istanbul-lib-source-maps": "^4.0.0", "istanbul-reports": "^3.0.2", "make-dir": "^3.0.0", "node-preload": "^0.2.1", "p-map": "^3.0.0", "process-on-spawn": "^1.0.0", "resolve-from": "^5.0.0", "rimraf": "^3.0.0", "signal-exit": "^3.0.2", "spawn-wrap": "^2.0.0", "test-exclude": "^6.0.0", "yargs": "^15.0.2"}, "devDependencies": {"any-path": "^1.3.0", "coveralls": "^3.0.9", "is-windows": "^1.0.2", "requirejs": "^2.3.6", "source-map-support": "^0.5.16", "standard": "^14.3.1", "standard-version": "^8.0.0", "tap": "^14.10.5", "which": "^2.0.2"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# nyc\n\n[![Build Status](https://img.shields.io/travis/istanbuljs/nyc/master.svg)](https://travis-ci.org/istanbuljs/nyc)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/istanbuljs/nyc/branch/master)\n[![Coverage Status](https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg)](https://coveralls.io/r/istanbuljs/nyc?branch=master)\n[![NPM version](https://img.shields.io/npm/v/nyc.svg)](https://www.npmjs.com/package/nyc)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![community slack](https://devtoolscommunity.herokuapp.com/badge.svg)](https://devtoolscommunity.herokuapp.com)\n\n_Having problems? want to contribute? join our [community slack](https://devtoolscommunity.herokuapp.com)_.\n\nIstanbul's state of the art command line interface, with support for:\n\n* applications that spawn subprocesses.\n* source mapped coverage of Babel and TypeScript projects\n\n## Installation & Usage\n\nUse your package manager to add it as a dev dependency: `npm i -D nyc` or `yarn add -D nyc`.\nYou can use nyc to call npm scripts (assuming they don't already have nyc executed in them), like so (replace `mocha` with your test runner everywhere you see it):\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"mocha\",\n    \"coverage\": \"nyc npm run test\"\n  }\n}\n```\n\nYou can use also `npx` instead of installing nyc as a dependency, but you might get updates you are not ready for; to get around this, pin to a specific major version by specifying, e.g. `nyc@14`.\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"npx nyc@latest mocha\"\n  }\n}\n```\n\nThis is a good way of testing upcoming releases of nyc, usually on the `next` tag.\n\n**Note**: If you use [`jest`](https://npm.im/jest) or [`tap`](https://www.node-tap.org/), you do not need to install `nyc`.\nThose runners already have the IstanbulJS libraries to provide coverage for you.\nFollow their documentation to enable and configure coverage reporting.\n\n## Configuring `nyc`\n\nnyc accepts a wide variety of configuration arguments, run `npx nyc --help` for thorough documentation.\n\nConfiguration arguments on the command-line should be provided prior to the program that nyc is executing.\nAs an example, the following command executes `ava`, and indicates to nyc that it should output both an `lcov` (`lcov.info` + html report) and a `text-summary` coverage report.\n\n```shell\nnyc --reporter=lcov --reporter=text-summary ava\n```\n\n### Babel projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-babel`] preset.\nYou can add your custom configuration options as shown below.\n\n### TypeScript projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-typescript`](https://www.npmjs.com/package/@istanbuljs/nyc-config-typescript) preset.\n\n#### Adding your overrides\n\nnyc allows you to inherit other configurations using the key `extends` in the `package.json` stanza, `.nycrc`, or YAML files.\nYou can then add the specific configuration options you want that aren't in that particular shared config, e.g.\n\n```json\n{\n  \"extends\": \"@istanbuljs/nyc-config-typescript\",\n  \"all\": true,\n  \"check-coverage\": true\n}\n```\n\n### Configuration files\n\nAny configuration options that can be set via the command line can also be specified in the `nyc` stanza of your package.json, or within a separate configuration file - a variety of flavors are available:\n\n| File name       | File Association |\n|-----------------|------------------|\n| `.nycrc`        | JSON             |\n| `.nycrc.json`   | JSON             |\n| `.nycrc.yaml`   | YAML             |\n| `.nycrc.yml`    | YAML             |\n| `nyc.config.js` | CommonJS export  |\n\n### Common Configuration Options\n\nSee `nyc --help` for all options available.\nYou can set these in any of the files listed above, or from the command line.\nThis table is a quick TLDR for the rest of this readme and there are more advanced docs available.\n\n| Option name | Description | Type | Default |\n| ----------- | ----------- | ---- | ------- |\n| `all` | Whether or not to instrument all files (not just the ones touched by your test suite) | `Boolean` | `false` |\n| `check-coverage` | Check whether coverage is within thresholds, fail if not | `Boolean` | `false` |\n| `extension` | List of extensions that nyc should attempt to handle in addition to `.js` | `Array<String>` | `['.js', '.cjs', '.mjs', '.ts', '.tsx', '.jsx']` |\n| `include` | See [selecting files for coverage] for more info | `Array<String>` | `['**']`|\n| `exclude` | See [selecting files for coverage] for more info | `Array<String>` | [list](https://github.com/istanbuljs/schema/blob/master/default-exclude.js) |\n| `reporter` | [Coverage reporters to use](https://istanbul.js.org/docs/advanced/alternative-reporters/) | `Array<String>` | `['text']` |\n| `report-dir` | Where to put the coverage report files | `String` | `./coverage` |\n| `skip-full` | Don't show files with 100% statement, branch, and function coverage | `Boolean` | `false` |\n| `temp-dir` | Directory to output raw coverage information to | `String` | `./.nyc_output` |\n\nConfiguration can also be provided by `nyc.config.js` if programmed logic is required:\n\n```js\n'use strict';\n\nconst defaultExclude = require('@istanbuljs/schema/default-exclude');\nconst isWindows = require('is-windows');\n\nlet platformExclude = [\n  isWindows() ? 'lib/posix.js' : 'lib/win32.js'\n];\n\nmodule.exports = {\n  exclude: platformExclude.concat(defaultExclude)\n};\n```\n\n### Publish and reuse your nyc configuration(s)\n\nTo publish and reuse your own `nyc` configuration, simply create an npm module that exports your JSON config (via [`index.json`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-typescript/) or a CJS [`index.js`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-hook-run-in-this-context/)).\n\nA more advanced use case would be to combine multiple shared configs in a `nyc.config.js` file:\n\n```js\n'use strict';\n\nconst babelConfig = require('@istanbuljs/nyc-config-babel');\nconst hookRunInThisContextConfig = require('@istanbuljs/nyc-config-hook-run-in-this-context');\n\nmodule.exports = {\n  ...babelConfig,\n  ...hookRunInThisContextConfig,\n  all: true,\n  'check-coverage': true\n};\n```\n\n## Selecting files for coverage\n\nBy default, nyc only collects coverage for source files that are visited during a test.\nIt does this by watching for files that are `require()`'d during the test.\nWhen a file is `require()`'d, nyc creates and returns an instrumented version of the source, rather than the original.\nOnly source files that are visited during a test will appear in the coverage report and contribute to coverage statistics.\n\nnyc will instrument all files if the `--all` flag is set or if running `nyc instrument`.\nIn this case all files will appear in the coverage report and contribute to coverage statistics.\n\nnyc will only collect coverage for files that are located under `cwd`, and then only files with extensions listed in the `extension` array.\n\nYou can reduce the set of instrumented files by adding `include` and `exclude` filter arrays to your config.\nThese allow you to shape the set of instrumented files by specifying glob patterns that can filter files from the default instrumented set.\nThe `exclude` array may also use exclude negated glob patterns, these are specified with a `!` prefix, and can restore sub-paths of excluded paths.\n\nGlobs are matched using [minimatch](https://www.npmjs.com/package/minimatch).\n\nWe use the following process to remove files from consideration:\n\n1. Limit the set of instrumented files to those files in paths listed in the `include` array.\n2. Remove any files that are found in the `exclude` array.\n3. Restore any exclude negated files that have been excluded in step 2.\n\n### Using include and exclude arrays\n\nIf there are paths specified in the `include` array, then the set of instrumented files will be limited to eligible files found in those paths.\nIf the `include` array is left undefined all eligible files will be included, equivalent to setting `include: ['**']`.\nMultiple `include` globs can be specified on the command line, each must follow a `--include`, `-n` switch.\n\nIf there are paths specified in the `exclude` array, then the set of instrumented files will not feature eligible files found in those paths.\nYou can also specify negated paths in the `exclude` array, by prefixing them with a `!`.\nNegated paths can restore paths that have been already been excluded in the `exclude` array.\nMultiple `exclude` globs can be specified on the command line, each must follow a `--exclude`, `-x` switch.\n\nThe default `exclude` list is defined in the [@istanbuljs/schema module](https://github.com/istanbuljs/schema/blob/master/default-exclude.js).\nSpecifying your own exclude property completely replaces these defaults.\n\nFor example, the following `nyc` config will collect coverage for every file in the `src` directory regardless of whether it is `require()`'d in a test.\nIt will also exclude any files with the extension `.spec.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"src/**/*.js\"\n  ],\n  \"exclude\": [\n    \"**/*.spec.js\"\n  ]\n}\n```\n\n**Note:** Be wary of automatic OS glob expansion when specifying include/exclude globs with the CLI.\nTo prevent this, wrap each glob in single quotes.\n\n### Including files within `node_modules`\n\nWe always add `**/node_modules/**` to the exclude list, even if not specified in the config.\nYou can override this by setting `--exclude-node-modules=false`.\n\nFor example, `\"excludeNodeModules: false\"` in the following `nyc` config will prevent `node_modules` from being added to the exclude rules.\nThe set of include rules then restrict nyc to only consider instrumenting files found under the `lib/` and `node_modules/@my-org/` directories.\nThe exclude rules then prevent nyc instrumenting anything in a `test` folder and the file `node_modules/@my-org/something/unwanted.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"lib/**\",\n    \"node_modules/@my-org/**\"\n  ],\n  \"exclude\": [\n    \"node_modules/@my-org/something/unwanted.js\",\n    \"**/test/**\"\n  ],\n  \"excludeNodeModules\": false\n}\n```\n\n## Setting the project root directory\n\nnyc runs a lot of file system operations relative to the project root directory.\nDuring startup nyc will look for the *default* project root directory.\nThe *default* project root directory is the first directory found that contains a `package.json` file when searching from the current working directory up.\nIf nyc fails to find a directory containing a `package.json` file, it will use the current working directory as the *default* project root directory.\nYou can change the project root directory with the `--cwd` option.\n\nnyc uses the project root directory when:\n\n* looking for source files to instrument\n* creating globs for include and exclude rules during file selection\n* loading custom require hooks from the `require` array\n\nnyc may create artifact directories within the project root, with these defaults:\n\n* the report directory, `<project-root>/coverage`\n* the cache directory, `<project-root>/node_modules/.cache/nyc`\n* the temp directory, `<project-root>/.nyc_output`\n\n## Require additional modules\n\nThe `--require` flag can be provided to `nyc` to indicate that additional modules should be required in the subprocess collecting coverage:\n\n```shell\nnyc --require esm mocha\n```\n\n### Interaction with `--all` flag\n\nThe `--require` flag also operates on the main nyc process for use by `--all`.\nFor example, in situations with `nyc --all --instrument false` and [`babel-plugin-istanbul`] setup the `--all` option only works if `--require @babel/register` is passed to nyc.\nPassing it to mocha would cause the tests to be instrumented but unloaded sources would not be seen.\nThe [`@istanbuljs/nyc-config-babel`] package handles this for you!\n\n## Caching\n\n`nyc`'s default behavior is to cache instrumented files to disk to prevent instrumenting source files multiple times, and speed `nyc` execution times.\nYou can disable this behavior by running `nyc` with the `--cache false` flag.\nYou can also change the default cache directory from `./node_modules/.cache/nyc` by setting the `--cache-dir` flag.\n\n## Coverage thresholds\n\nYou can set custom coverage thresholds that will fail if `check-coverage` is set to `true` and your coverage drops below those thresholds.\nFor example, in the following `nyc` configuration, dropping below 80% branch, line, functions, or statements coverage would fail the build (you can have any combination of these):\n\n```json\n{\n  \"branches\": 80,\n  \"lines\": 80,\n  \"functions\": 80,\n  \"statements\": 80\n}\n```\n\nTo do this check on a per-file basis (as opposed to in aggregate), set the `per-file` option to `true`.\n\n### High and low watermarks\n\nSeveral of the coverage reporters supported by nyc display special information for high and low watermarks:\n\n* high-watermarks represent healthy test coverage (in many reports this is represented with green highlighting).\n* low-watermarks represent sub-optimal coverage levels (in many reports this is represented with red highlighting).\n\nYou can specify custom high and low watermarks in nyc's configuration:\n\n```json\n{\n  \"watermarks\": {\n    \"lines\": [80, 95],\n    \"functions\": [80, 95],\n    \"branches\": [80, 95],\n    \"statements\": [80, 95]\n  }\n}\n```\n\n## Parsing Hints (Ignoring Lines)\n\nThere may be some sections of your codebase that you wish to purposefully\nexclude from coverage tracking, to do so you can use the following parsing\nhints:\n\n* `/* istanbul ignore if */`: ignore the next if statement.\n* `/* istanbul ignore else */`: ignore the else portion of an if statement.\n* `/* istanbul ignore next */`: ignore the next _thing_ in the source-code (\n functions, if statements, classes, you name it).\n* `/* istanbul ignore file */`: ignore an entire source-file (this should be\n  placed at the top of the file).\n\n## Ignoring Methods\n\nYou can ignore every instance of a method simply by adding its name to the `ignore-class-method` array in your `nyc` config.\n\n```json\n{\n  \"ignore-class-method\": [\"render\"]\n}\n```\n\n## Combining reports from multiple runs\n\nIf for whatever reason you have different test runners in your project or a different series of test runs for different kinds of tests, nyc will automatically combine the coverage report for you if configured correctly with the `--no-clean` flag and the `report` command.\nOriginally inspired by @janiukjf in #1001, here's an example, where the `test:*` scripts (not shown) invoke only your test runner(s) and not nyc:\n\n```json\n{\n  \"scripts\": {\n    \"cover\": \"npm run cover:unit && npm run cover:integration && npm run cover:report\",\n    \"cover:unit\": \"nyc --silent npm run test:unit\",\n    \"cover:integration\": \"nyc --silent --no-clean npm run test:integration\",\n    \"cover:report\": \"nyc report --reporter=lcov --reporter=text\"\n  }\n}\n```\n\n### What about `nyc merge`?\n\nThe `nyc merge` command is for producing one _raw coverage output file_ that combines the results from many test runs.\nSo if you had the above setup and needed to produce a single `coverage.json` for some external tool, you could do:\n\n```json\n{\n  \"scripts\": {\n    \"cover:merge\": \"npm run cover:unit && npm run cover:integration && nyc merge .nyc_output coverage.json\"\n  }\n}\n```\n\n## Source-Map support for pre-instrumented codebases\n\nIf you opt to pre-instrument your source-code (rather than using a just-in-time transpiler like [`@babel/register`]) nyc supports both inline source-maps and `.map` files.\n\n_Important: If you are using nyc with a project that pre-instruments its code, run nyc with the configuration option `--exclude-after-remap` set to `false`.\nOtherwise nyc's reports will exclude any files that source-maps remap to folders covered under exclude rules._\n\n## [Integrating with coveralls](./docs/setup-coveralls.md)\n\n## [Integrating with codecov](./docs/setup-codecov.md)\n\n## [Producing instrumented source](./docs/instrument.md)\n\n## Integrating with TAP formatters\n\nMany testing frameworks (Mocha, Tape, Tap, etc.) can produce [TAP](https://en.wikipedia.org/wiki/Test_Anything_Protocol) output. [tap-nyc](https://github.com/MegaArman/tap-nyc) is a TAP formatter designed to look nice with nyc.\n\n## Tutorials and Advanced Documentation\n\nSee [more nyc tutorials](https://istanbul.js.org/docs/tutorials) and [advanced nyc documentation](https://istanbul.js.org/docs/advanced/).\n\nPlease feel free to [contribute documentation](https://github.com/istanbuljs/istanbuljs.github.io/tree/development/content) to help us improve.\n\n## `nyc` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `nyc` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-nyc?utm_source=npm-nyc&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n[`@babel/register`]: https://www.npmjs.com/package/@babel/register\n[`babel-plugin-istanbul`]: https://github.com/istanbuljs/babel-plugin-istanbul\n[`@istanbuljs/nyc-config-babel`]: https://www.npmjs.com/package/@istanbuljs/nyc-config-babel\n[selecting files for coverage]: #selecting-files-for-coverage"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 242285}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1284254}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5492996}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 16072709}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 29311820}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 53259263}], "dependentsCount": 603, "starsCount": 106}, "github": {"homepage": "https://istanbul.js.org/", "starsCount": 4188, "forksCount": 299, "subscribersCount": 55, "issues": {"count": 1299, "openCount": 92, "distribution": {"3600": 184, "10800": 69, "32400": 67, "97200": 143, "291600": 130, "874800": 165, "2624400": 122, "7873200": 127, "23619600": 111, "70858800": 149, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "coreyfarrell", "commitsCount": 108}, {"username": "bcoe", "commitsCount": 72}, {"username": "jamestalmage", "commitsCount": 37}, {"username": "novemberborn", "commitsCount": 33}, {"username": "greenkeeperio-bot", "commitsCount": 23}, {"username": "AndrewFinlay", "commitsCount": 22}, {"username": "JaKXz", "commitsCount": 17}, {"username": "isaacs", "commitsCount": 17}, {"username": "Lalem001", "commitsCount": 11}, {"username": "XhmikosR", "commitsCount": 7}, {"username": "addaleax", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "jasisk", "commitsCount": 3}, {"username": "lloydcotten", "commitsCount": 3}, {"username": "rmg", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "calvinf", "commitsCount": 2}, {"username": "gr2m", "commitsCount": 2}, {"username": "rundef", "commitsCount": 2}, {"username": "schutm", "commitsCount": 2}, {"username": "shackpank", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "AGrzes", "commitsCount": 1}, {"username": "AmShaegar13", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "MegaArman", "commitsCount": 1}, {"username": "RyanV", "commitsCount": 1}, {"username": "SamuraiJack", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "Sintendo", "commitsCount": 1}, {"username": "Speedy37", "commitsCount": 1}, {"username": "TonyJDavies", "commitsCount": 1}, {"username": "alexframe", "commitsCount": 1}, {"username": "bensaufley", "commitsCount": 1}, {"username": "bgalletbgallet", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "brokentone", "commitsCount": 1}, {"username": "c-bandy", "commitsCount": 1}, {"username": "cgalvarez", "commitsCount": 1}, {"username": "chadxz", "commitsCount": 1}, {"username": "clakech", "commitsCount": 1}, {"username": "d4nyll", "commitsCount": 1}, {"username": "delaguilaluis", "commitsCount": 1}, {"username": "dmwelch", "commitsCount": 1}, {"username": "doque", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "ergenekonyigit", "commitsCount": 1}, {"username": "evantorrie", "commitsCount": 1}, {"username": "genepaul", "commitsCount": 1}, {"username": "golonikum", "commitsCount": 1}, {"username": "gotwarlost", "commitsCount": 1}, {"username": "greggraf", "commitsCount": 1}, {"username": "hartraft", "commitsCount": 1}, {"username": "henriquemotaesteves", "commitsCount": 1}, {"username": "hershmire", "commitsCount": 1}, {"username": "hkdnet", "commitsCount": 1}, {"username": "igorlima", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jimbuck", "commitsCount": 1}, {"username": "jl-", "commitsCount": 1}, {"username": "karottenreibe", "commitsCount": 1}, {"username": "katerberg", "commitsCount": 1}, {"username": "ljharb", "commitsCount": 1}, {"username": "matheusrocha89", "commitsCount": 1}, {"username": "mojavelinux", "commitsCount": 1}, {"username": "motiz88", "commitsCount": 1}, {"username": "mourner", "commitsCount": 1}, {"username": "nothingismagick", "commitsCount": 1}, {"username": "pangrr", "commitsCount": 1}, {"username": "pedrocarrico", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "philnash", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "princjef", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "rapzo", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "rpominov", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "taye", "commitsCount": 1}, {"username": "tehsenaus", "commitsCount": 1}, {"username": "thegecko", "commitsCount": 1}, {"username": "thepont", "commitsCount": 1}, {"username": "tomkel", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}, {"username": "wzalazar", "commitsCount": 1}, {"username": "xdissent", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 22}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 68}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 17423, "testsSize": 126543, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "service": "https://api.travis-ci.org/istanbuljs/nyc.svg?branch=master", "shields": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/travis/istanbuljs/nyc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build", "service": "https://ci.appveyor.com/api/projects/status/istanbuljs/nyc/branch/master", "shields": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "service": "https://coveralls.io/repos/github/istanbuljs/nyc/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/nyc.svg", "shields": "https://img.shields.io/npm/v/nyc.svg", "content": "https://img.shields.io/npm/v/nyc.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "standard"], "coverage": 1, "outdatedDependencies": {"decamelize": {"required": "^1.2.0", "stable": "4.0.0", "latest": "4.0.0"}, "p-map": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 0.8518518518518519, "branding": 1}, "popularity": {"communityInterest": 4742, "downloadsCount": 5357569.666666667, "downloadsAcceleration": 13527.933257229837, "dependentsCount": 603}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8583904109589041, "openIssues": 1, "issuesDistribution": 0.11143006275223388}}, "score": {"final": 0.7725591734381688, "detail": {"quality": 0.9984799669577246, "popularity": 0.5732712168341433, "maintenance": 0.7782007355968609}}}}, {"coveralls": {"analyzedAt": "2020-06-07T19:03:15.570Z", "collected": {"metadata": {"name": "coveralls", "scope": "unscoped", "version": "3.1.0", "description": "takes json-cov output into stdin and POSTs to coveralls.io", "keywords": ["coverage", "coveralls"], "date": "2020-04-24T22:38:13.122Z", "author": {"name": "Gregg Caines"}, "publisher": {"username": "nickmerwin", "email": "n@mer.fm"}, "maintainers": [{"username": "cainus", "email": "gregg@caines.ca"}, {"username": "nickmerwin", "email": "n@mer.fm"}], "contributors": [{"name": "Gregg Caines", "email": "gregg@caines.ca", "url": "http://caines.ca"}, {"name": "Joshua Ma", "email": "github@joshma.com", "url": "http://joshma.com"}, {"name": "Alan Gutierrez", "email": "alan@prettyrobots.com", "url": "http://www.prettyrobots.com/"}, {"name": "Kir Belevich", "url": "https://github.com/svg"}, {"name": "elliotcable", "email": "github@elliottcable.name", "url": "http://elliottcable.name/"}, {"name": "Slotos", "email": "slotos@gmail.com", "url": "http://slotos.net"}, {"name": "mattjmorrison", "email": "mattjmorrison@mattjmorrison.com", "url": "http://mattjmorrison.com"}, {"name": "Arpad Borsos", "email": "arpad.borsos@googlemail.com", "url": "http://swatinem.de/"}, {"name": "Adam Moss", "url": "https://github.com/adam-moss"}], "repository": {"type": "git", "url": "git://github.com/nickmerwin/node-coveralls.git"}, "links": {"npm": "https://www.npmjs.com/package/coveralls", "homepage": "https://github.com/nickmerwin/node-coveralls#readme", "repository": "https://github.com/nickmerwin/node-coveralls", "bugs": "https://github.com/nickmerwin/node-coveralls/issues"}, "license": "BSD-2-Clause", "dependencies": {"js-yaml": "^3.13.1", "lcov-parse": "^1.0.0", "log-driver": "^1.2.7", "minimist": "^1.2.5", "request": "^2.88.2"}, "devDependencies": {"jshint": "^2.11.0", "mocha": "^6.2.3", "nyc": "^14.1.1", "should": "^9.0.2", "shx": "^0.3.2", "sinon": "^7.5.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-coveralls\n\n[![Build Status][ci-image]][ci-url] [![Coverage Status][coveralls-image]][coveralls-url]\n\n[Coveralls.io](https://coveralls.io/) support for Node.js. Get the great coverage reporting of coveralls.io and add a cool coverage button (like the one above) to your README.\n\nSupported CI services: [Travis CI](https://travis-ci.org/), [CodeShip](https://codeship.com/), [CircleCI](https://circleci.com/), [Jenkins](https://jenkins.io/), [Gitlab CI](https://gitlab.com/), [AppVeyor](https://www.appveyor.com/), [Buildkite](https://buildkite.com/), [GitHub Actions CI](https://github.com/features/actions), [CodeFresh](https://codefresh.io)\n\n## Installation:\n\nAdd the latest version of `coveralls` to your package.json:\n\n```shell\nnpm install coveralls --save-dev\n```\n\nIf you're using mocha, add `mocha-lcov-reporter` to your package.json:\n\n```shell\nnpm install mocha-lcov-reporter --save-dev\n```\n\n## Usage:\n\nThis script `bin/coveralls.js` can take standard input from any tool that emits the lcov data format (including [mocha](https://mochajs.org/)'s [LCOV reporter](https://npmjs.org/package/mocha-lcov-reporter)) and send it to coveralls.io to report your code coverage there.\n\nOnce your app is instrumented for coverage, and building, you need to pipe the lcov output to `./node_modules/coveralls/bin/coveralls.js`.\n\nThis library currently supports [Travis CI](https://travis-ci.org/) with no extra effort beyond piping the lcov output to coveralls. However, if you're using a different build system, there are a few environment variables that are necessary:\n\n- `COVERALLS_SERVICE_NAME` (the name of your build system)\n- `COVERALLS_REPO_TOKEN` (the secret repo token from coveralls.io)\n- `COVERALLS_GIT_BRANCH` (the branch name)\n\nThere are optional environment variables for other build systems as well:\n\n- `COVERALLS_SERVICE_NUMBER` (an id that uniquely identifies the build)\n- `COVERALLS_SERVICE_JOB_ID` (an id that uniquely identifies the build's job)\n- `COVERALLS_RUN_AT` (a date string for the time that the job ran. RFC 3339 dates work. This defaults to your build system's date/time if you don't set it.)\n- `COVERALLS_PARALLEL` (more info here: <https://docs.coveralls.io/parallel-build-webhook>)\n\n### GitHub Actions CI\n\nIf you are using GitHub Actions CI, you should look into [coverallsapp/github-action](https://github.com/coverallsapp/github-action).\n\nIf you prefer to use this package you can do it like this:\n\n```yml\nenv:\n  COVERALLS_REPO_TOKEN: \"${{ secrets.COVERALLS_REPO_TOKEN }}\"\n  COVERALLS_GIT_BRANCH: \"${{ github.ref }}\"\n```\n\n### [Jest](https://jestjs.io/)\n\n- Install [jest](https://jestjs.io/docs/en/getting-started)\n- Use the following to run tests and push files to coveralls on success:\n\n  ```sh\n  jest --coverage && coveralls < coverage/lcov.info\n  ```\n\nCheck out an example [here](https://github.com/Ethan-Arrowood/harperdb-connect/blob/master/.travis.yml) which makes use of Travis CI build stages\n\n### [Mocha](https://mochajs.org/) + [Blanket.js](https://github.com/alex-seville/blanket)\n\n- Install [blanket.js](https://github.com/alex-seville/blanket)\n- Configure blanket according to [docs](https://github.com/alex-seville/blanket/blob/master/docs/getting_started_node.md).\n- Run your tests with a command like this:\n\n  ```sh\n  NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha \\\n    --require blanket \\\n    --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Mocha](https://mochajs.org/) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nInstrumenting your app for coverage is probably harder than it needs to be (read [here](http://seejohncode.com/2012/03/13/setting-up-mocha-jscoverage//)), but that's also a necessary step.\n\nIn mocha, if you've got your code instrumented for coverage, the command for a Travis CI build would look something like this:\n\n```sh\nYOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha test -R mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n```\n\nCheck out an example [Makefile](https://github.com/cainus/urlgrey/blob/master/Makefile) from one of my projects for an example, especially the test-coveralls build target. Note: Travis CI runs `npm test`, so whatever target you create in your Makefile must be the target that `npm test` runs (This is set in package.json's `scripts` property).\n\n### [Istanbul](https://github.com/gotwarlost/istanbul)\n\n#### With Mocha:\n\n```sh\nistanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n#### With Jasmine:\n\n```sh\nistanbul cover jasmine-node --captureExceptions spec/ && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n### [Nodeunit](https://github.com/caolan/nodeunit) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nDepend on nodeunit, jscoverage and coveralls:\n\n```sh\nnpm install nodeunit jscoverage coveralls --save-dev\n```\n\nAdd a coveralls script to \"scripts\" in your `package.json`:\n\n```json\n\"scripts\": {\n  \"test\": \"nodeunit test\",\n  \"coveralls\": \"jscoverage lib && YOURPACKAGE_COVERAGE=1 nodeunit --reporter=lcov test | coveralls\"\n}\n```\n\nEnsure your app requires instrumented code when `process.env.YOURPACKAGE_COVERAGE` variable is defined.\n\nRun your tests with a command like this:\n\n```sh\nnpm run coveralls\n```\n\nFor detailed instructions on requiring instrumented code, running on Travis CI and submitting to coveralls [see this guide](https://github.com/alanshaw/nodeunit-lcov-coveralls-example).\n\n### [Poncho](https://github.com/deepsweet/poncho)\n\nClient-side JS code coverage using [PhantomJS](https://github.com/ariya/phantomjs), [Mocha](https://mochajs.org/) and [Blanket](https://github.com/alex-seville/blanket):\n\n- [Configure](https://mochajs.org/#running-mocha-in-the-browser) Mocha for browser\n- [Mark](https://github.com/deepsweet/poncho#usage) target script(s) with `data-cover` HTML attribute\n- Run your tests with a command like this:\n\n  ```sh\n  ./node_modules/.bin/poncho -R lcov test/test.html | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Lab](https://github.com/hapijs/lab)\n\n```sh\nlab -r lcov | ./node_modules/.bin/coveralls\n```\n\n### [nyc](https://github.com/istanbuljs/nyc)\n\nWorks with almost any testing framework. Simply execute\n`npm test` with the `nyc` bin followed by running its reporter:\n\n```shell\nnyc npm test && nyc report --reporter=text-lcov | coveralls\n```\n\n### [TAP](https://github.com/isaacs/node-tap)\n\nSimply run your tap tests with the `COVERALLS_REPO_TOKEN` environment\nvariable set and tap will automatically use `nyc` to report\ncoverage to coveralls.\n\n### Command Line Parameters\n\n```shell\nUsage: coveralls.js [-v] filepath\n```\n\n#### Optional arguments:\n\n- `-v`, `--verbose`\n- `filepath` - optionally defines the base filepath of your source files.\n\n## Running locally\n\nIf you're running locally, you must have a `.coveralls.yml` file, as documented in [their documentation](https://docs.coveralls.io/ruby-on-rails#configuration), with your `repo_token` in it; or, you must provide a `COVERALLS_REPO_TOKEN` environment variable on the command-line.\n\nIf you want to send commit data to coveralls, you can set the `COVERALLS_GIT_COMMIT` environment-variable to the commit hash you wish to reference. If you don't want to use a hash, you can set it to `HEAD` to supply coveralls with the latest commit data. This requires git to be installed and executable on the current PATH.\n\n## Contributing\n\nI generally don't accept pull requests that are untested, or break the build, because I'd like to keep the quality high (this is a coverage tool after all!).\n\nI also don't care for \"soft-versioning\" or \"optimistic versioning\" (dependencies that have ^, x, > in them, or anything other than numbers and dots). There have been too many problems with bad semantic versioning in dependencies, and I'd rather have a solid library than a bleeding edge one.\n\n\n[ci-image]: https://github.com/nickmerwin/node-coveralls/workflows/Tests/badge.svg\n[ci-url]: https://github.com/nickmerwin/node-coveralls/actions?workflow=Tests\n\n[coveralls-image]: https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github\n[coveralls-url]: https://coveralls.io/github/nickmerwin/node-coveralls?branch=master"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 24702}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 401910}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1672802}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5277030}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9459920}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17741190}], "dependentsCount": 469, "starsCount": 34}, "github": {"starsCount": 984, "forksCount": 215, "subscribersCount": 15, "issues": {"count": 300, "openCount": 61, "distribution": {"3600": 24, "10800": 12, "32400": 8, "97200": 27, "291600": 28, "874800": 31, "2624400": 23, "7873200": 35, "23619600": 48, "70858800": 33, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "cainus", "commitsCount": 83}, {"username": "nickmerwin", "commitsCount": 55}, {"username": "XhmikosR", "commitsCount": 33}, {"username": "gabehayes", "commitsCount": 16}, {"username": "tdd", "commitsCount": 12}, {"username": "addaleax", "commitsCount": 10}, {"username": "gerarde", "commitsCount": 4}, {"username": "mattjmorrison", "commitsCount": 4}, {"username": "anaisbetts", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "ELLIOTTCABLE", "commitsCount": 2}, {"username": "JonathanPorta", "commitsCount": 2}, {"username": "Swatinem", "commitsCount": 2}, {"username": "alanshaw", "commitsCount": 2}, {"username": "eagleeye", "commitsCount": 2}, {"username": "geek", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ilanbiala", "commitsCount": 2}, {"username": "washimimizuku", "commitsCount": 2}, {"username": "AndreMiras", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "Ethan-Arrowood", "commitsCount": 1}, {"username": "Hirse", "commitsCount": 1}, {"username": "Joe8Bit", "commitsCount": 1}, {"username": "SgtPooki", "commitsCount": 1}, {"username": "StevenWeathers", "commitsCount": 1}, {"username": "TerribleDev", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "a11smiles", "commitsCount": 1}, {"username": "adam-moss", "commitsCount": 1}, {"username": "ashishkujoy", "commitsCount": 1}, {"username": "benpetty", "commitsCount": 1}, {"username": "bigeasy", "commitsCount": 1}, {"username": "bionikspoon", "commitsCount": 1}, {"username": "chasdevs", "commitsCount": 1}, {"username": "daleharvey", "commitsCount": 1}, {"username": "deepak1556", "commitsCount": 1}, {"username": "dylan-smith", "commitsCount": 1}, {"username": "ejlangev", "commitsCount": 1}, {"username": "evanjbowling", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "hyperlink", "commitsCount": 1}, {"username": "jacob-meacham", "commitsCount": 1}, {"username": "jaubourg", "commitsCount": 1}, {"username": "job13er", "commitsCount": 1}, {"username": "jonathanKingston", "commitsCount": 1}, {"username": "joscha", "commitsCount": 1}, {"username": "joshma", "commitsCount": 1}, {"username": "kasperlewau", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "ly-cultureiq", "commitsCount": 1}, {"username": "mattkime", "commitsCount": 1}, {"username": "mdlavin", "commitsCount": 1}, {"username": "mgartner", "commitsCount": 1}, {"username": "midgleyc", "commitsCount": 1}, {"username": "mikaelmello", "commitsCount": 1}, {"username": "mortonfox", "commitsCount": 1}, {"username": "mrcrgl", "commitsCount": 1}, {"username": "ndaidong", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "paazmaya", "commitsCount": 1}, {"username": "paroga", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "posquit0", "commitsCount": 1}, {"username": "rogierslag", "commitsCount": 1}, {"username": "roman01la", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suda", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "waitingsong", "commitsCount": 1}, {"username": "wlabranche", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 69}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "Coveralls - windows-latest-node-6", "state": "success"}, {"context": "Coveralls - windows-latest-node-8", "state": "success"}, {"context": "Coveralls - windows-latest-node-10", "state": "success"}, {"context": "Coveralls - windows-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-6", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-8", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-10", "state": "success"}]}, "source": {"files": {"readmeSize": 8310, "testsSize": 52443}, "badges": [{"urls": {"original": "https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/nickmerwin/node-coveralls/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.svg", "content": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["jshint"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9970000000000001, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1322, "downloadsCount": 1759010, "downloadsAcceleration": 2775.794444444444, "dependentsCount": 469}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8117123287671233, "openIssues": 0.9944444444444445, "issuesDistribution": 0}}, "score": {"final": 0.6810533595683721, "detail": {"quality": 0.9748042784019577, "popularity": 0.44375308942494207, "maintenance": 0.6665671278544433}}}}, {"vue": {"analyzedAt": "2020-06-12T22:13:30.236Z", "collected": {"metadata": {"name": "vue", "scope": "unscoped", "version": "2.6.11", "description": "Reactive, component-oriented view layer for modern web interfaces.", "keywords": ["vue"], "date": "2019-12-13T19:58:51.873Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue.git"}, "links": {"npm": "https://www.npmjs.com/package/vue", "homepage": "https://github.com/vuejs/vue#readme", "repository": "https://github.com/vuejs/vue", "bugs": "https://github.com/vuejs/vue/issues"}, "license": "MIT", "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-proposal-class-properties": "^7.1.0", "@babel/plugin-syntax-dynamic-import": "^7.0.0", "@babel/plugin-syntax-jsx": "^7.0.0", "@babel/plugin-transform-flow-strip-types": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/register": "^7.0.0", "@types/node": "^12.12.0", "@types/webpack": "^4.4.22", "acorn": "^5.2.1", "babel-eslint": "^10.0.1", "babel-helper-vue-jsx-merge-props": "^2.0.3", "babel-loader": "^8.0.4", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-transform-vue-jsx": "^4.0.1", "babel-preset-flow-vue": "^1.0.0", "buble": "^0.19.3", "chalk": "^2.3.0", "chromedriver": "^2.45.0", "codecov": "^3.0.0", "commitizen": "^2.9.6", "conventional-changelog": "^1.1.3", "cross-spawn": "^6.0.5", "cz-conventional-changelog": "^2.0.0", "de-indent": "^1.0.2", "es6-promise": "^4.1.0", "escodegen": "^1.8.1", "eslint": "^5.7.0", "eslint-plugin-flowtype": "^2.34.0", "eslint-plugin-jasmine": "^2.8.4", "file-loader": "^3.0.1", "flow-bin": "^0.61.0", "hash-sum": "^1.0.2", "he": "^1.1.1", "http-server": "^0.11.1", "jasmine": "^2.99.0", "jasmine-core": "^2.99.0", "karma": "^3.1.1", "karma-chrome-launcher": "^2.1.1", "karma-coverage": "^1.1.1", "karma-firefox-launcher": "^1.0.1", "karma-jasmine": "^1.1.0", "karma-mocha-reporter": "^2.2.3", "karma-phantomjs-launcher": "^1.0.4", "karma-safari-launcher": "^1.0.0", "karma-sauce-launcher": "^2.0.2", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^4.0.0-rc.2", "lint-staged": "^8.0.0", "lodash": "^4.17.4", "lodash.template": "^4.4.0", "lodash.uniq": "^4.5.0", "lru-cache": "^5.1.1", "nightwatch": "^0.9.16", "nightwatch-helpers": "^1.2.0", "phantomjs-prebuilt": "^2.1.14", "puppeteer": "^1.11.0", "resolve": "^1.3.3", "rollup": "^1.0.0", "rollup-plugin-alias": "^1.3.1", "rollup-plugin-buble": "^0.19.6", "rollup-plugin-commonjs": "^9.2.0", "rollup-plugin-flow-no-whitespace": "^1.0.0", "rollup-plugin-node-resolve": "^4.0.0", "rollup-plugin-replace": "^2.0.0", "selenium-server": "^2.53.1", "serialize-javascript": "^2.1.2", "shelljs": "^0.8.1", "terser": "^3.10.2", "typescript": "^3.6.4", "webpack": "~4.28.4", "weex-js-runtime": "^0.23.6", "weex-styler": "^0.3.0", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 19}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 28}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 29}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 50}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 283123}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 1650360}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 7025278}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 20339599}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 37046981}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 66380185}], "dependentsCount": 25480, "starsCount": 238}, "github": {"homepage": "http://vuejs.org", "starsCount": 165868, "forksCount": 25157, "subscribersCount": 6157, "issues": {"count": 10844, "openCount": 516, "distribution": {"3600": 4251, "10800": 1271, "32400": 1441, "97200": 1114, "291600": 697, "874800": 574, "2624400": 386, "7873200": 322, "23619600": 376, "70858800": 355, "212576400": 57}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 2292}, {"username": "vue-bot", "commitsCount": 70}, {"username": "Hanks10100", "commitsCount": 47}, {"username": "defcc", "commitsCount": 37}, {"username": "kazupon", "commitsCount": 32}, {"username": "posva", "commitsCount": 29}, {"username": "HerringtonDarkholme", "commitsCount": 25}, {"username": "ktsn", "commitsCount": 25}, {"username": "javoski", "commitsCount": 23}, {"username": "Kingwl", "commitsCount": 15}, {"username": "gebilaoxiong", "commitsCount": 15}, {"username": "jkzing", "commitsCount": 15}, {"username": "Jinjiang", "commitsCount": 14}, {"username": "S-YOU", "commitsCount": 11}, {"username": "blake-newman", "commitsCount": 11}, {"username": "chrisvfritz", "commitsCount": 11}, {"username": "clarkdo", "commitsCount": 11}, {"username": "phanan", "commitsCount": 11}, {"username": "Justineo", "commitsCount": 10}, {"username": "HcySunYang", "commitsCount": 8}, {"username": "kaorun343", "commitsCount": 8}, {"username": "sodatea", "commitsCount": 8}, {"username": "KaelWD", "commitsCount": 7}, {"username": "dsonet", "commitsCount": 5}, {"username": "fnlctrl", "commitsCount": 4}, {"username": "imyzf", "commitsCount": 4}, {"username": "nickmessing", "commitsCount": 4}, {"username": "shasharoman", "commitsCount": 4}, {"username": "ulivz", "commitsCount": 4}, {"username": "znck", "commitsCount": 4}, {"username": "KingMario", "commitsCount": 3}, {"username": "bluemsn", "commitsCount": 3}, {"username": "felixbuenemann", "commitsCount": 3}, {"username": "liximomo", "commitsCount": 3}, {"username": "lzxb", "commitsCount": 3}, {"username": "mingmingwon", "commitsCount": 3}, {"username": "pkaminski", "commitsCount": 3}, {"username": "privatenumber", "commitsCount": 3}, {"username": "sqal", "commitsCount": 3}, {"username": "Alex-Sokolov", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 2}, {"username": "DaKoala", "commitsCount": 2}, {"username": "Gcaufy", "commitsCount": 2}, {"username": "HusamIbrahim", "commitsCount": 2}, {"username": "Itisfilipe", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "QingWei-Li", "commitsCount": 2}, {"username": "Shyam-Chen", "commitsCount": 2}, {"username": "asheb", "commitsCount": 2}, {"username": "bartlomieju", "commitsCount": 2}, {"username": "chriscasola", "commitsCount": 2}, {"username": "dejour", "commitsCount": 2}, {"username": "eddyerburgh", "commitsCount": 2}, {"username": "fenduru", "commitsCount": 2}, {"username": "g-plane", "commitsCount": 2}, {"username": "gzzhanghao", "commitsCount": 2}, {"username": "hikerpig", "commitsCount": 2}, {"username": "jingsam", "commitsCount": 2}, {"username": "lyhper", "commitsCount": 2}, {"username": "maciej-ka", "commitsCount": 2}, {"username": "neelance", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "superwf", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "william-pan", "commitsCount": 2}, {"username": "xdamman", "commitsCount": 2}, {"username": "yantene", "commitsCount": 2}, {"username": "zephraph", "commitsCount": 2}, {"username": "7006", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Magiccwl", "commitsCount": 1}, {"username": "Naartti", "commitsCount": 1}, {"username": "NataliaTepluhina", "commitsCount": 1}, {"username": "VitorLuizC", "commitsCount": 1}, {"username": "Xenonym", "commitsCount": 1}, {"username": "ahaoboy", "commitsCount": 1}, {"username": "ahus1", "commitsCount": 1}, {"username": "alanmatw", "commitsCount": 1}, {"username": "bakugod", "commitsCount": 1}, {"username": "decadef20", "commitsCount": 1}, {"username": "dennishzg", "commitsCount": 1}, {"username": "eltociear", "commitsCount": 1}, {"username": "evillt", "commitsCount": 1}, {"username": "flyyang", "commitsCount": 1}, {"username": "git-nkliyc", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "hyandell", "commitsCount": 1}, {"username": "lessfish", "commitsCount": 1}, {"username": "mateusvelleda", "commitsCount": 1}, {"username": "mcmillenb", "commitsCount": 1}, {"username": "msidolphin", "commitsCount": 1}, {"username": "nguyenyou", "commitsCount": 1}, {"username": "pikax", "commitsCount": 1}, {"username": "rodrigograca31", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "tlebel", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 11}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 32}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 80}], "statuses": [{"context": "ci/circleci: trigger-regression-test", "state": "success"}, {"context": "ci/circleci: test-ssr-weex", "state": "success"}, {"context": "ci/circleci: test-e2e", "state": "success"}, {"context": "ci/circleci: test-cover", "state": "success"}, {"context": "ci/circleci: lint-flow-types", "state": "success"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 970184}, "linters": ["editorconfig", "eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9954999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 197519, "downloadsCount": 6779866.333333333, "downloadsAcceleration": 19066.363337138508, "dependentsCount": 25480}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9023013698630137, "openIssues": 1, "issuesDistribution": 0.7951917151054866}}, "score": {"final": 0.8911976532127296, "detail": {"quality": 0.8281776746475025, "popularity": 0.8369180474532718, "maintenance": 0.9994943834566679}}}}, {"babel-jest": {"analyzedAt": "2020-05-08T16:57:15.535Z", "collected": {"metadata": {"name": "babel-jest", "scope": "unscoped", "version": "26.0.1", "description": "Jest plugin to use babel for transformation.", "date": "2020-05-05T10:41:06.410Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git", "directory": "packages/babel-jest"}, "links": {"npm": "https://www.npmjs.com/package/babel-jest", "homepage": "https://github.com/facebook/jest#readme", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/transform": "^26.0.1", "@jest/types": "^26.0.1", "@types/babel__core": "^7.1.7", "babel-plugin-istanbul": "^6.0.0", "babel-preset-jest": "^26.0.0", "chalk": "^4.0.0", "graceful-fs": "^4.2.4", "slash": "^3.0.0"}, "devDependencies": {"@babel/core": "^7.1.0", "@types/graceful-fs": "^4.1.3"}, "peerDependencies": {"@babel/core": "^7.0.0"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 19}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 20}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 22}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 57}], "readme": "# babel-jest\n\n[Babel](https://github.com/babel/babel) [jest](https://github.com/facebook/jest) plugin\n\n## Usage\n\nIf you are already using `jest-cli`, add `babel-jest` and it will automatically compile JavaScript code using Babel.\n\n```bash\nyarn add --dev babel-jest @babel/core\n```\n\nIf you would like to write your own preprocessor, uninstall and delete babel-jest and set the [config.transform](https://jestjs.io/docs/configuration#transform-object-string-string) option to your preprocessor.\n\n## Setup\n\n_Note: this step is only required if you are using `babel-jest` with additional code preprocessors._\n\nTo explicitly define `babel-jest` as a transformer for your JavaScript code, map _.js_ files to the `babel-jest` module. Typescript files are also supported.\n\n```json\n\"transform\": {\n  \"^.+\\\\.[t|j]sx?$\": \"babel-jest\"\n},\n```"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1608960}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8133772}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 35508976}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 99116137}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 170661941}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 306794216}], "dependentsCount": 4109, "starsCount": 5}, "github": {"homepage": "https://jestjs.io", "starsCount": 30826, "forksCount": 4363, "subscribersCount": 520, "issues": {"count": 9963, "openCount": 1016, "distribution": {"3600": 2087, "10800": 924, "32400": 929, "97200": 1295, "291600": 937, "874800": 817, "2624400": 729, "7873200": 658, "23619600": 656, "70858800": 804, "212576400": 127}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 622}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "rubennorte", "commitsCount": 55}, {"username": "jeysal", "commitsCount": 53}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "Connormiha", "commitsCount": 37}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "ai", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stephtr", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 39}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 141}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 245}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 369}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 598}], "statuses": [{"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 829, "testsSize": 3018, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0}, "popularity": {"communityInterest": 35814, "downloadsCount": 33038712.333333332, "downloadsAcceleration": 112672.55762937595, "dependentsCount": 4109}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.44311575503368134}}, "score": {"final": 0.8943245062525904, "detail": {"quality": 0.8510855585748851, "popularity": 0.8488537877645779, "maintenance": 0.9768571798929222}}}}, {"sass-loader": {"analyzedAt": "2020-05-15T08:55:27.272Z", "collected": {"metadata": {"name": "sass-loader", "scope": "unscoped", "version": "8.0.2", "description": "Sass loader for webpack", "keywords": ["sass", "libsass", "webpack", "loader"], "date": "2020-01-13T13:20:18.297Z", "author": {"name": "J. Tangelder"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "akiran", "email": "kiran@neostack.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "jtangelder", "email": "j.tangelder@gmail.com"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "peeri", "email": "developers@peerigon.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/sass-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/sass-loader", "homepage": "https://github.com/webpack-contrib/sass-loader", "repository": "https://github.com/webpack-contrib/sass-loader", "bugs": "https://github.com/webpack-contrib/sass-loader/issues"}, "license": "MIT", "dependencies": {"clone-deep": "^4.0.1", "loader-utils": "^1.2.3", "neo-async": "^2.6.1", "schema-utils": "^2.6.1", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.8.0", "@babel/core": "^7.8.0", "@babel/preset-env": "^7.8.2", "@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.9.0", "bootstrap": "^4.4.1", "bootstrap-sass": "^3.4.1", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^6.0.3", "css-loader": "^3.4.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-plugin-import": "^2.20.0", "fibers": "^4.0.2", "file-loader": "^5.0.2", "husky": "^4.0.7", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.4.1", "lint-staged": "^9.5.0", "memfs": "^3.0.3", "node-sass": "^4.13.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "sass": "^1.24.4", "standard-version": "^7.0.1", "style-loader": "^1.1.2", "webpack": "^4.41.5", "webpack-cli": "^3.3.10", "webpack-dev-server": "^3.10.1"}, "peerDependencies": {"webpack": "^4.36.0 || ^5.0.0", "node-sass": "^4.0.0", "sass": "^1.3.0", "fibers": ">= 3.1.0"}, "releases": [{"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 7}, {"from": "2018-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 10}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img height=\"100\"\n    src=\"https://worldvectorlogo.com/logos/sass-1.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# sass-loader\n\nLoads a Sass/SCSS file and compiles it to CSS.\n\n## Getting Started\n\nTo begin, you'll need to install `sass-loader`:\n\n```console\nnpm install sass-loader node-sass webpack --save-dev\n```\n\n`sass-loader` requires you to install either [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](https://github.com/sass/dart-sass) on your own (more documentation can be found below).\nThis allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.\n\nChain the `sass-loader` with the [css-loader](https://github.com/webpack-contrib/css-loader) and the [style-loader](https://github.com/webpack-contrib/style-loader) to immediately apply all styles to the DOM or the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract it into a separate file.\n\nThen add the loader to your Webpack configuration. For example:\n\n**app.js**\n\n```js\nimport './style.scss';\n```\n\n**style.scss**\n\n```scss\n$body-color: red;\n\nbody {\n  color: $body-color;\n}\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // Creates `style` nodes from JS strings\n          'style-loader',\n          // Translates CSS into CommonJS\n          'css-loader',\n          // Compiles Sass to CSS\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nFinally run `webpack` via your preferred method.\n\n### Resolving `import` at-rules\n\nWebpack provides an [advanced mechanism to resolve files](https://webpack.js.org/concepts/module-resolution/).\n\nThe `sass-loader` uses Sass's custom importer feature to pass all queries to the Webpack resolving engine. Thus you can import your Sass modules from `node_modules`. Just prepend them with a `~` to tell Webpack that this is not a relative import:\n\n```scss\n@import '~bootstrap';\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home directory.\nWebpack needs to distinguish between `bootstrap` and `~bootstrap` because CSS and Sass files have no special syntax for importing relative files.\nWriting `@import \"style.scss\"` is the same as `@import \"./style.scss\";`\n\n### Problems with `url(...)`\n\nSince Sass implementations don't provide [url rewriting](https://github.com/sass/libsass/issues/532), all linked assets must be relative to the output.\n\n- If you pass the generated CSS on to the `css-loader`, all urls must be relative to the entry-file (e.g. `main.scss`).\n- If you're just generating CSS without passing it to the `css-loader`, it must be relative to your web root.\n\nYou will be disrupted by this first issue. It is natural to expect relative references to be resolved against the `.sass`/`.scss` file in which they are specified (like in regular `.css` files).\n\nThankfully there are a two solutions to this problem:\n\n- Add the missing url rewriting using the [resolve-url-loader](https://github.com/bholloway/resolve-url-loader). Place it before `sass-loader` in the loader chain.\n- Library authors usually provide a variable to modify the asset path. [bootstrap-sass](https://github.com/twbs/bootstrap-sass) for example has an `$icon-font-path`.\n\n## Options\n\n### `implementation`\n\nThe special `implementation` option determines which implementation of Sass to use.\n\nBy default the loader resolve the implementation based on your dependencies.\nJust add required implementation to `package.json` (`node-sass` or `sass` package) and install dependencies.\n\nExample where the `sass-loader` loader uses the `sass` (`dart-sass`) implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\"\n  }\n}\n```\n\nExample where the `sass-loader` loader uses the `node-sass` implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"node-sass\": \"^4.0.0\"\n  }\n}\n```\n\nBeware the situation when `node-sass` and `sass` were installed! By default the `sass-loader` prefers `node-sass`. In order to avoid this situation you can use the `implementation` option.\n\nThe `implementation` options either accepts `node-sass` or `sass` (`Dart Sass`) as a module.\n\nFor example, to use Dart Sass, you'd pass:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              // Prefer `dart-sass`\n              implementation: require('sass'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nNote that when using `sass` (`Dart Sass`), **synchronous compilation is twice as fast as asynchronous compilation** by default, due to the overhead of asynchronous callbacks.\nTo avoid this overhead, you can use the [fibers](https://www.npmjs.com/package/fibers) package to call asynchronous importers from the synchronous code path.\n\nWe automatically inject the [`fibers`](https://github.com/laverdet/node-fibers) package (setup `sassOptions.fiber`) if is possible (i.e. you need install the [`fibers`](https://github.com/laverdet/node-fibers) package).\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\",\n    \"fibers\": \"^4.0.1\"\n  }\n}\n```\n\nYou can disable automatically injecting the [`fibers`](https://github.com/laverdet/node-fibers) package by passing a `false` value for the `sassOptions.fiber` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: false,\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nYou can also pass the `fiber` value using this code:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: require('fibers'),\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sassOptions`\n\nType: `Object|Function`\n\nOptions for [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](http://sass-lang.com/dart-sass) implementation.\n\n> \u2139\ufe0f The `indentedSyntax` option has `true` value for the `sass` extension.\n\n> \u2139\ufe0f Options such as `file` and `outFile` are unavailable.\n\n> \u2139 We recommend not to use the `sourceMapContents`, `sourceMapEmbed`, `sourceMapRoot` options because `sass-loader` automatically sets these options.\n\nThere is a slight difference between the `node-sass` and `sass` (`Dart Sass`) options.\nPlease consult documentation before using them:\n\n- [Node Sass documentation](https://github.com/sass/node-sass/#options) for all available `node-sass` options.\n- [Dart Sass documentation](https://github.com/sass/dart-sass#javascript-api) for all available `sass` options.\n\n#### `Object`\n\nUse and object for the Sass implementation setup.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: {\n                indentWidth: 4,\n                includePaths: ['absolute/path/a', 'absolute/path/b'],\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllows to setup the Sass implementation by setting different options based on the loader context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return {\n                    includePaths: ['absolute/path/c', 'absolute/path/d'],\n                  };\n                }\n\n                return {\n                  includePaths: ['absolute/path/a', 'absolute/path/b'],\n                };\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `prependData`\n\nType: `String|Function`\nDefault: `undefined`\n\nPrepends `Sass`/`SCSS` code before the actual entry file.\nIn this case, the `sass-loader` will not override the `data` option but just append the entry's content.\n\nThis is especially useful when some of your Sass variables depend on the environment:\n\n> \u2139 Since you're injecting code, this will break the source mappings in your entry file. Often there's a simpler solution than this, like multiple Sass entry files.\n\n#### `String`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: '$env: ' + process.env.NODE_ENV + ';',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return '$value: 100px;';\n                }\n\n                return '$value: 200px;';\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: depends on the `compiler.devtool` value\n\nEnables/Disables generation of source maps.\n\nBy default generation of source maps depends on the [`devtool`](https://webpack.js.org/configuration/devtool/) option. All values enable source map generation except `eval` and `false` value.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139 In some rare cases `node-sass` can output invalid source maps (it is a `node-sass` bug).\n> In order to avoid this, you can try to update `node-sass` to latest version or you can try to set within `sassOptions` the `outputStyle` option to `compressed`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            sourceMap: true,\n            sassOptions: {\n              outputStyle: 'compressed',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `webpackImporter`\n\nType: `Boolean`\nDefault: `true`\n\nEnables/Disables the default Webpack importer.\n\nThis can improve performance in some cases. Use it with caution because aliases and `@import` at-rules starting with `~` will not work. You can pass own `importer` to solve this (see [`importer docs`](https://github.com/sass/node-sass#importer--v200---experimental)).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              webpackImporter: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Extracts CSS into separate files\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\nThere are two possibilities to extract a style sheet from the bundle:\n\n- [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)\n- [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // fallback to style-loader in development\n          process.env.NODE_ENV !== 'production'\n            ? 'style-loader'\n            : MiniCssExtractPlugin.loader,\n          'css-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n};\n```\n\n### Source maps\n\nEnables/Disables generation of source maps.\n\nTo enable CSS source maps, you'll need to pass the `sourceMap` option to the `sass-loader` _and_ the css-loader.\n\n**webpack.config.js**\n\n```javascript\nmodule.exports = {\n  devtool: 'source-map', // any \"source-map\"-like devtool is possible\n  module: {\n    rules: [\n      {\n        test: /\\.scss$/,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nIf you want to edit the original Sass files inside Chrome, [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/webpack-contrib/sass-loader/tree/master/test) for a running example.\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/sass-loader.svg\n[npm-url]: https://npmjs.com/package/sass-loader\n[node]: https://img.shields.io/node/v/sass-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/sass-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/sass-loader\n[tests]: https://dev.azure.com/webpack-contrib/sass-loader/_apis/build/status/webpack-contrib.sass-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/sass-loader/_build/latest?definitionId=21&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/sass-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/sass-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 1304464}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 6848706}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 29087129}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 82590812}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 142230652}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 247000959}], "dependentsCount": 5746, "starsCount": 75}, "github": {"starsCount": 3411, "forksCount": 360, "subscribersCount": 45, "issues": {"count": 843, "openCount": 8, "distribution": {"3600": 191, "10800": 45, "32400": 48, "97200": 83, "291600": 56, "874800": 73, "2624400": 89, "7873200": 113, "23619600": 97, "70858800": 43, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "jhnns", "commitsCount": 225}, {"username": "evilebottnawi", "commitsCount": 74}, {"username": "jtangelder", "commitsCount": 21}, {"username": "d3viant0ne", "commitsCount": 11}, {"username": "jamesgeorge007", "commitsCount": 9}, {"username": "akiran", "commitsCount": 7}, {"username": "herrstucki", "commitsCount": 6}, {"username": "jorrit", "commitsCount": 4}, {"username": "oopschen", "commitsCount": 4}, {"username": "chicoxyzzy", "commitsCount": 3}, {"username": "justin808", "commitsCount": 2}, {"username": "michael-ciniawsky", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "vanesyan", "commitsCount": 2}, {"username": "BANOnotIT", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "FractalBoy", "commitsCount": 1}, {"username": "RahavLussato", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "Vishal0203", "commitsCount": 1}, {"username": "WalterWeidner", "commitsCount": 1}, {"username": "XeeD", "commitsCount": 1}, {"username": "acouch", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "avanderhoorn", "commitsCount": 1}, {"username": "benschac", "commitsCount": 1}, {"username": "bmihelac", "commitsCount": 1}, {"username": "cevou", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "chrisfitz", "commitsCount": 1}, {"username": "chukitow", "commitsCount": 1}, {"username": "clintonb", "commitsCount": 1}, {"username": "deoxxa", "commitsCount": 1}, {"username": "dimitardanailov", "commitsCount": 1}, {"username": "dirtyhenry", "commitsCount": 1}, {"username": "donnysim", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eastwood", "commitsCount": 1}, {"username": "eldyvoon", "commitsCount": 1}, {"username": "fahad19", "commitsCount": 1}, {"username": "hansott", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kaelig", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "lewie9021", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "lunelson", "commitsCount": 1}, {"username": "madflow", "commitsCount": 1}, {"username": "maspwr", "commitsCount": 1}, {"username": "mattlewis92", "commitsCount": 1}, {"username": "micahlmartin", "commitsCount": 1}, {"username": "nex3", "commitsCount": 1}, {"username": "niksy", "commitsCount": 1}, {"username": "notDash", "commitsCount": 1}, {"username": "philwareham", "commitsCount": 1}, {"username": "pmowrer", "commitsCount": 1}, {"username": "rhys-vdw", "commitsCount": 1}, {"username": "silversonicaxel", "commitsCount": 1}, {"username": "sturobson", "commitsCount": 1}, {"username": "timmfin", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "w3apps", "commitsCount": 1}], "commits": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 6}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 26}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 36}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 69}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 16310, "testsSize": 3209752, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sass-loader.svg", "shields": "https://img.shields.io/npm/v/sass-loader.svg", "content": "https://img.shields.io/npm/v/sass-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/sass-loader.svg", "service": "https://david-dm.org/webpack-contrib/sass-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/sass-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/sass-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9954999999999999, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3954, "downloadsCount": 27530270.666666668, "downloadsAcceleration": 101577.83580669711, "dependentsCount": 5746}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9186849315068494, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8991470674764929, "detail": {"quality": 0.9369671374179317, "popularity": 0.7659792086507358, "maintenance": 0.9998977234953026}}}}, {"tslib": {"analyzedAt": "2020-05-13T23:20:22.180Z", "collected": {"metadata": {"name": "tslib", "scope": "unscoped", "version": "2.0.0", "description": "Runtime library for TypeScript helper functions", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript", "tslib", "runtime"], "date": "2020-05-13T23:08:45.637Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript-bot", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "andrewbranch", "email": "andrew@wheream.io"}, {"username": "minestarks", "email": "mineyalc@microsoft.com"}, {"username": "orta", "email": "orta.therox@gmail.com"}, {"username": "rbuckton", "email": "rbuckton@chronicles.org"}, {"username": "sanders_n", "email": "ncsander@indiana.edu"}, {"username": "sheetalkamat", "email": "shkamat@microsoft.com"}, {"username": "typescript-bot", "email": "typescript@microsoft.com"}, {"username": "typescript-deploys", "email": "ortam@microsoft.com"}, {"username": "weswigham", "email": "wwigham@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/tslib.git"}, "links": {"npm": "https://www.npmjs.com/package/tslib", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/tslib", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "0BSD", "releases": [{"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 4}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 4}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 5}, {"from": "2018-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 8}], "readme": "# tslib\r\n\r\nThis is a runtime library for [TypeScript](http://www.typescriptlang.org/) that contains all of the TypeScript helper functions.\r\n\r\nThis library is primarily used by the `--importHelpers` flag in TypeScript.\r\nWhen using `--importHelpers`, a module that uses helper functions like `__extends` and `__assign` in the following emitted file:\r\n\r\n```ts\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nexports.x = {};\r\nexports.y = __assign({}, exports.x);\r\n\r\n```\r\n\r\nwill instead be emitted as something like the following:\r\n\r\n```ts\r\nvar tslib_1 = require(\"tslib\");\r\nexports.x = {};\r\nexports.y = tslib_1.__assign({}, exports.x);\r\n```\r\n\r\nBecause this can avoid duplicate declarations of things like `__extends`, `__assign`, etc., this means delivering users smaller files on average, as well as less runtime overhead.\r\nFor optimized bundles with TypeScript, you should absolutely consider using `tslib` and `--importHelpers`.\r\n\r\n# Installing\r\n\r\nFor the latest stable version, run:\r\n\r\n## npm\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nnpm install --save tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nnpm install --save tslib@1.6.1\r\n```\r\n\r\n## yarn\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nyarn add tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nyarn add tslib@1.6.1\r\n```\r\n\r\n## bower\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nbower install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nbower install tslib@1.6.1\r\n```\r\n\r\n## JSPM\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\njspm install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\njspm install tslib@1.6.1\r\n```\r\n\r\n# Usage\r\n\r\nSet the `importHelpers` compiler option on the command line:\r\n\r\n```\r\ntsc --importHelpers file.ts\r\n```\r\n\r\nor in your tsconfig.json:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"importHelpers\": true\r\n    }\r\n}\r\n```\r\n\r\n#### For bower and JSPM users\r\n\r\nYou will need to add a `paths` mapping for `tslib`, e.g. For Bower users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"amd\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"bower_components/tslib/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor JSPM users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"system\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"jspm_packages/npm/tslib@2.0.0/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Contribute\r\n\r\nThere are many ways to [contribute](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md) to TypeScript.\r\n\r\n* [Submit bugs](https://github.com/Microsoft/TypeScript/issues) and help us verify fixes as they are checked in.\r\n* Review the [source code changes](https://github.com/Microsoft/TypeScript/pulls).\r\n* Engage with other TypeScript users and developers on [StackOverflow](http://stackoverflow.com/questions/tagged/typescript).\r\n* Join the [#typescript](http://twitter.com/#!/search/realtime/%23typescript) discussion on Twitter.\r\n* [Contribute bug fixes](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\r\n\r\n# Documentation\r\n\r\n* [Quick tutorial](http://www.typescriptlang.org/Tutorial)\r\n* [Programming handbook](http://www.typescriptlang.org/Handbook)\r\n* [Homepage](http://www.typescriptlang.org/)"}, "npm": {"downloads": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 3830916}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 20033897}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 79021987}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 220583564}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 365335643}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 629644012}], "dependentsCount": 27983, "starsCount": 9}, "github": {"starsCount": 587, "forksCount": 58, "subscribersCount": 83, "issues": {"count": 112, "openCount": 31, "distribution": {"3600": 16, "10800": 6, "32400": 6, "97200": 10, "291600": 12, "874800": 7, "2624400": 7, "7873200": 10, "23619600": 15, "70858800": 13, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "rbuckton", "commitsCount": 45}, {"username": "DanielRosenwasser", "commitsCount": 32}, {"username": "mhegazy", "commitsCount": 13}, {"username": "frankwallis", "commitsCount": 6}, {"username": "weswigham", "commitsCount": 6}, {"username": "Draccoz", "commitsCount": 3}, {"username": "sandersn", "commitsCount": 3}, {"username": "alan-agius4", "commitsCount": 2}, {"username": "aluanhaddad", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "NicholasLYang", "commitsCount": 1}, {"username": "Saulzi", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "lolipop99", "commitsCount": 1}, {"username": "mgunter6", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "timbru31", "commitsCount": 1}], "commits": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 11}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 16}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 25}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 26}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 35}]}, "source": {"files": {"readmeSize": 3453, "testsSize": 0, "hasNpmIgnore": true}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 757, "downloadsCount": 73527854.66666667, "downloadsAcceleration": 303401.1297754947, "dependentsCount": 27983}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9625068493150685, "openIssues": 0.8720238095238095, "issuesDistribution": 0}}, "score": {"final": 0.7000454004838462, "detail": {"quality": 0.6206552123341408, "popularity": 0.8015420342185844, "maintenance": 0.6665974994488557}}}}, {"prop-types": {"analyzedAt": "2020-06-13T18:25:52.165Z", "collected": {"metadata": {"name": "prop-types", "scope": "unscoped", "version": "15.7.2", "description": "Runtime type checking for React props and similar objects.", "keywords": ["react"], "date": "2019-02-13T20:11:48.275Z", "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/prop-types.git"}, "links": {"npm": "https://www.npmjs.com/package/prop-types", "homepage": "https://facebook.github.io/react/", "repository": "https://github.com/facebook/prop-types", "bugs": "https://github.com/facebook/prop-types/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.4.0", "object-assign": "^4.1.1", "react-is": "^16.8.1"}, "devDependencies": {"babel-jest": "^19.0.0", "babel-preset-react": "^6.24.1", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "eslint": "^5.13.0", "jest": "^19.0.2", "react": "^15.5.1", "uglifyify": "^3.0.4", "uglifyjs": "^2.4.10"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# prop-types [![Build Status](https://travis-ci.com/facebook/prop-types.svg?branch=master)](https://travis-ci.org/facebook/prop-types)\n\nRuntime type checking for React props and similar objects.\n\nYou can use prop-types to document the intended types of properties passed to\ncomponents. React (and potentially other libraries\u2014see the checkPropTypes()\nreference below) will check props passed to your components against those\ndefinitions, and warn in development if they don\u2019t match.\n\n## Installation\n\n```shell\nnpm install --save prop-types\n```\n\n## Importing\n\n```js\nimport PropTypes from 'prop-types'; // ES6\nvar PropTypes = require('prop-types'); // ES5 with npm\n```\n\n### CDN\n\nIf you prefer to exclude `prop-types` from your application and use it\nglobally via `window.PropTypes`, the `prop-types` package provides\nsingle-file distributions, which are hosted on the following CDNs:\n\n* [**unpkg**](https://unpkg.com/prop-types/)\n```html\n<!-- development version -->\n<script src=\"https://unpkg.com/prop-types@15.6/prop-types.js\"></script>\n\n<!-- production version -->\n<script src=\"https://unpkg.com/prop-types@15.6/prop-types.min.js\"></script>\n```\n\n* [**cdnjs**](https://cdnjs.com/libraries/prop-types)\n```html\n<!-- development version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.js\"></script>\n\n<!-- production version -->\n<script src=\"https://cdnjs.cloudflare.com/ajax/libs/prop-types/15.6.0/prop-types.min.js\"></script>\n```\n\nTo load a specific version of `prop-types` replace `15.6.0` with the version number.\n\n## Usage\n\nPropTypes was originally exposed as part of the React core module, and is\ncommonly used with React components.\nHere is an example of using PropTypes with a React component, which also\ndocuments the different validators provided:\n\n```js\nimport React from 'react';\nimport PropTypes from 'prop-types';\n\nclass MyComponent extends React.Component {\n  render() {\n    // ... do things with the props\n  }\n}\n\nMyComponent.propTypes = {\n  // You can declare that a prop is a specific JS primitive. By default, these\n  // are all optional.\n  optionalArray: PropTypes.array,\n  optionalBool: PropTypes.bool,\n  optionalFunc: PropTypes.func,\n  optionalNumber: PropTypes.number,\n  optionalObject: PropTypes.object,\n  optionalString: PropTypes.string,\n  optionalSymbol: PropTypes.symbol,\n\n  // Anything that can be rendered: numbers, strings, elements or an array\n  // (or fragment) containing these types.\n  optionalNode: PropTypes.node,\n\n  // A React element (ie. <MyComponent />).\n  optionalElement: PropTypes.element,\n\n  // A React element type (ie. MyComponent).\n  optionalElementType: PropTypes.elementType,\n\n  // You can also declare that a prop is an instance of a class. This uses\n  // JS's instanceof operator.\n  optionalMessage: PropTypes.instanceOf(Message),\n\n  // You can ensure that your prop is limited to specific values by treating\n  // it as an enum.\n  optionalEnum: PropTypes.oneOf(['News', 'Photos']),\n\n  // An object that could be one of many types\n  optionalUnion: PropTypes.oneOfType([\n    PropTypes.string,\n    PropTypes.number,\n    PropTypes.instanceOf(Message)\n  ]),\n\n  // An array of a certain type\n  optionalArrayOf: PropTypes.arrayOf(PropTypes.number),\n\n  // An object with property values of a certain type\n  optionalObjectOf: PropTypes.objectOf(PropTypes.number),\n\n  // You can chain any of the above with `isRequired` to make sure a warning\n  // is shown if the prop isn't provided.\n\n  // An object taking on a particular shape\n  optionalObjectWithShape: PropTypes.shape({\n    optionalProperty: PropTypes.string,\n    requiredProperty: PropTypes.number.isRequired\n  }),\n\n  // An object with warnings on extra properties\n  optionalObjectWithStrictShape: PropTypes.exact({\n    optionalProperty: PropTypes.string,\n    requiredProperty: PropTypes.number.isRequired\n  }),\n\n  requiredFunc: PropTypes.func.isRequired,\n\n  // A value of any data type\n  requiredAny: PropTypes.any.isRequired,\n\n  // You can also specify a custom validator. It should return an Error\n  // object if the validation fails. Don't `console.warn` or throw, as this\n  // won't work inside `oneOfType`.\n  customProp: function(props, propName, componentName) {\n    if (!/matchme/.test(props[propName])) {\n      return new Error(\n        'Invalid prop `' + propName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  },\n\n  // You can also supply a custom validator to `arrayOf` and `objectOf`.\n  // It should return an Error object if the validation fails. The validator\n  // will be called for each key in the array or object. The first two\n  // arguments of the validator are the array or object itself, and the\n  // current item's key.\n  customArrayProp: PropTypes.arrayOf(function(propValue, key, componentName, location, propFullName) {\n    if (!/matchme/.test(propValue[key])) {\n      return new Error(\n        'Invalid prop `' + propFullName + '` supplied to' +\n        ' `' + componentName + '`. Validation failed.'\n      );\n    }\n  })\n};\n```\n\nRefer to the [React documentation](https://facebook.github.io/react/docs/typechecking-with-proptypes.html) for more information.\n\n## Migrating from React.PropTypes\n\nCheck out [Migrating from React.PropTypes](https://facebook.github.io/react/blog/2017/04/07/react-v15.5.0.html#migrating-from-react.proptypes) for details on how to migrate to `prop-types` from `React.PropTypes`.\n\nNote that this blog posts **mentions a codemod script that performs the conversion automatically**.\n\nThere are also important notes below.\n\n## How to Depend on This Package?\n\nFor apps, we recommend putting it in `dependencies` with a caret range.\nFor example:\n\n```js\n  \"dependencies\": {\n    \"prop-types\": \"^15.5.7\"\n  }\n```\n\nFor libraries, we *also* recommend leaving it in `dependencies`:\n\n```js\n  \"dependencies\": {\n    \"prop-types\": \"^15.5.7\"\n  },\n  \"peerDependencies\": {\n    \"react\": \"^15.5.0\"\n  }\n```\n\n**Note:** there are known issues in versions before 15.5.7 so we recommend using it as the minimal version.\n\nMake sure that the version range uses a caret (`^`) and thus is broad enough for npm to efficiently deduplicate packages.\n\nFor UMD bundles of your components, make sure you **don\u2019t** include `PropTypes` in the build. Usually this is done by marking it as an external (the specifics depend on your bundler), just like you do with React.\n\n## Compatibility\n\n### React 0.14\n\nThis package is compatible with **React 0.14.9**. Compared to 0.14.8 (which was released in March of 2016), there are no other changes in 0.14.9, so it should be a painless upgrade.\n\n```shell\n# ATTENTION: Only run this if you still use React 0.14!\nnpm install --save react@^0.14.9 react-dom@^0.14.9\n```\n\n### React 15+\n\nThis package is compatible with **React 15.3.0** and higher.\n\n```\nnpm install --save react@^15.3.0 react-dom@^15.3.0\n```\n\n### What happens on other React versions?\n\nIt outputs warnings with the message below even though the developer doesn\u2019t do anything wrong. Unfortunately there is no solution for this other than updating React to either 15.3.0 or higher, or 0.14.9 if you\u2019re using React 0.14.\n\n## Difference from `React.PropTypes`: Don\u2019t Call Validator Functions\n\nFirst of all, **which version of React are you using**? You might be seeing this message because a component library has updated to use `prop-types` package, but your version of React is incompatible with it. See the [above section](#compatibility) for more details.\n\nAre you using either React 0.14.9 or a version higher than React 15.3.0? Read on.\n\nWhen you migrate components to use the standalone `prop-types`, **all validator functions will start throwing an error if you call them directly**. This makes sure that nobody relies on them in production code, and it is safe to strip their implementations to optimize the bundle size.\n\nCode like this is still fine:\n\n```js\nMyComponent.propTypes = {\n  myProp: PropTypes.bool\n};\n```\n\nHowever, code like this will not work with the `prop-types` package:\n\n```js\n// Will not work with `prop-types` package!\nvar errorOrNull = PropTypes.bool(42, 'myProp', 'MyComponent', 'prop');\n```\n\nIt will throw an error:\n\n```\nCalling PropTypes validators directly is not supported by the `prop-types` package.\nUse PropTypes.checkPropTypes() to call them.\n```\n\n(If you see **a warning** rather than an error with this message, please check the [above section about compatibility](#compatibility).)\n\nThis is new behavior, and you will only encounter it when you migrate from `React.PropTypes` to the `prop-types` package. For the vast majority of components, this doesn\u2019t matter, and if you didn\u2019t see [this warning](https://facebook.github.io/react/warnings/dont-call-proptypes.html) in your components, your code is safe to migrate. This is not a breaking change in React because you are only opting into this change for a component by explicitly changing your imports to use `prop-types`. If you temporarily need the old behavior, you can keep using `React.PropTypes` until React 16.\n\n**If you absolutely need to trigger the validation manually**, call `PropTypes.checkPropTypes()`. Unlike the validators themselves, this function is safe to call in production, as it will be replaced by an empty function:\n\n```js\n// Works with standalone PropTypes\nPropTypes.checkPropTypes(MyComponent.propTypes, props, 'prop', 'MyComponent');\n```\nSee below for more info.\n\n**You might also see this error** if you\u2019re calling a `PropTypes` validator from your own custom `PropTypes` validator. In this case, the fix is to make sure that you are passing *all* of the arguments to the inner function. There is a more in-depth explanation of how to fix it [on this page](https://facebook.github.io/react/warnings/dont-call-proptypes.html#fixing-the-false-positive-in-third-party-proptypes). Alternatively, you can temporarily keep using `React.PropTypes` until React 16, as it would still only warn in this case.\n\nIf you use a bundler like Browserify or Webpack, don\u2019t forget to [follow these instructions](https://reactjs.org/docs/optimizing-performance.html#use-the-production-build) to correctly bundle your application in development or production mode. Otherwise you\u2019ll ship unnecessary code to your users.\n\n## PropTypes.checkPropTypes\n\nReact will automatically check the propTypes you set on the component, but if\nyou are using PropTypes without React then you may want to manually call\n`PropTypes.checkPropTypes`, like so:\n\n```js\nconst myPropTypes = {\n  name: PropTypes.string,\n  age: PropTypes.number,\n  // ... define your prop validations\n};\n\nconst props = {\n  name: 'hello', // is valid\n  age: 'world', // not valid\n};\n\n// Let's say your component is called 'MyComponent'\n\n// Works with standalone PropTypes\nPropTypes.checkPropTypes(myPropTypes, props, 'age', 'MyComponent');\n// This will warn as follows:\n// Warning: Failed prop type: Invalid prop `age` of type `string` supplied to\n// `MyComponent`, expected `number`.\n```\n\n## PropTypes.resetWarningCache()\n\n`PropTypes.checkPropTypes(...)` only `console.error.log(...)`s a given message once.  To reset the cache while testing call `PropTypes.resetWarningCache()`\n\n### License\n\nprop-types is [MIT licensed](./LICENSE)."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1294807}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8248243}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 35565465}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 106906817}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 192883691}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 370464302}], "dependentsCount": 26537, "starsCount": 152}, "github": {"starsCount": 3530, "forksCount": 319, "subscribersCount": 51, "issues": {"count": 311, "openCount": 51, "distribution": {"3600": 33, "10800": 13, "32400": 22, "97200": 31, "291600": 13, "874800": 13, "2624400": 13, "7873200": 21, "23619600": 49, "70858800": 73, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 33}, {"username": "ljharb", "commitsCount": 18}, {"username": "acdlite", "commitsCount": 6}, {"username": "aweary", "commitsCount": 5}, {"username": "flarnie", "commitsCount": 5}, {"username": "getkey", "commitsCount": 4}, {"username": "jaller94", "commitsCount": 4}, {"username": "sophiebits", "commitsCount": 4}, {"username": "noscripter", "commitsCount": 3}, {"username": "bvaughn", "commitsCount": 2}, {"username": "mridgway", "commitsCount": 2}, {"username": "JasonEtco", "commitsCount": 1}, {"username": "adambowles", "commitsCount": 1}, {"username": "autra", "commitsCount": 1}, {"username": "benwiley4000", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "conartist6", "commitsCount": 1}, {"username": "dferber90", "commitsCount": 1}, {"username": "eXon", "commitsCount": 1}, {"username": "gingur", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jimf", "commitsCount": 1}, {"username": "johann-sonntagbauer", "commitsCount": 1}, {"username": "joshalling", "commitsCount": 1}, {"username": "ksmolniy", "commitsCount": 1}, {"username": "lauriejones", "commitsCount": 1}, {"username": "marcelometal", "commitsCount": 1}, {"username": "mcampagonzalez", "commitsCount": 1}, {"username": "oyeanuj", "commitsCount": 1}, {"username": "qstearns", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "rgraffbrd", "commitsCount": 1}, {"username": "stof", "commitsCount": 1}, {"username": "virgofx", "commitsCount": 1}, {"username": "weiluntong", "commitsCount": 1}, {"username": "wojtekmaj", "commitsCount": 1}, {"username": "zamarrowski", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5}]}, "source": {"files": {"readmeSize": 11447, "testsSize": 134658, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 4089, "downloadsCount": 35635605.666666664, "downloadsAcceleration": 56787.54507229832, "dependentsCount": 26537}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0.057534246575342465, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.660990628279746, "detail": {"quality": 0.9420519192515758, "popularity": 0.8146009116733202, "maintenance": 0.26647066691031757}}}}, {"html-webpack-plugin": {"analyzedAt": "2020-05-07T20:46:15.515Z", "collected": {"metadata": {"name": "html-webpack-plugin", "scope": "unscoped", "version": "4.3.0", "description": "Simplifies creation of HTML files to serve your webpack bundles", "keywords": ["webpack", "plugin", "html", "html-webpack-plugin"], "date": "2020-04-30T17:39:05.226Z", "author": {"name": "Jan Nicklas", "email": "j.nicklas@me.com", "url": "https://github.com/jantimon", "username": "jantimon"}, "publisher": {"username": "jantimon", "email": "j.nicklas@me.com"}, "maintainers": [{"username": "ampedandwired", "email": "charles.blaxland@gmail.com"}, {"username": "jantimon", "email": "j.nicklas@me.com"}, {"username": "mastilver", "email": "th.sileghem@gmail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/jantimon/html-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/html-webpack-plugin", "homepage": "https://github.com/jantimon/html-webpack-plugin", "repository": "https://github.com/jantimon/html-webpack-plugin", "bugs": "https://github.com/jantimon/html-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"@types/html-minifier-terser": "^5.0.0", "@types/tapable": "^1.0.5", "@types/webpack": "^4.41.8", "html-minifier-terser": "^5.0.1", "loader-utils": "^1.2.3", "lodash": "^4.17.15", "pretty-error": "^2.1.1", "tapable": "^1.1.3", "util.promisify": "1.0.0"}, "devDependencies": {"@types/loader-utils": "1.1.3", "@types/node": "11.13.9", "appcache-webpack-plugin": "1.4.0", "commitizen": "4.0.3", "css-loader": "2.1.1", "cz-conventional-changelog": "2.1.0", "dir-compare": "1.7.2", "file-loader": "3.0.1", "html-loader": "0.5.5", "jest": "24.7.1", "mini-css-extract-plugin": "0.6.0", "pug": "2.0.3", "pug-loader": "2.4.0", "rimraf": "2.6.3", "semistandard": "^13.0.1", "standard-version": "5.0.2", "style-loader": "0.23.1", "typescript": "3.8.3", "webpack": "4.35.2", "webpack-recompilation-simulator": "3.2.0"}, "peerDependencies": {"webpack": ">=4.0.0 < 6.0.0"}, "releases": [{"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 6}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 14}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 17}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 20}, {"from": "2018-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 28}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n![npm](https://img.shields.io/npm/dw/html-webpack-plugin.svg)\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![Backers on Open Collective](https://opencollective.com/html-webpack-plugin/backers/badge.svg)](#backers)\n [![Sponsors on Open Collective](https://opencollective.com/html-webpack-plugin/sponsors/badge.svg)](#sponsors) \n\n<div align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://worldvectorlogo.com/logos/html5.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <div>\n    <img width=\"100\" height=\"100\" title=\"Webpack Plugin\" src=\"http://michael-ciniawsky.github.io/postcss-load-plugins/logo.svg\">\n  </div>\n  <h1>HTML Webpack Plugin</h1>\n  <p>Plugin that simplifies creation of HTML files to serve your bundles</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\n  npm i --save-dev html-webpack-plugin\n```\n\n```bash\n  yarn add --dev html-webpack-plugin\n```\n\n\nThis is a [webpack](http://webpack.js.org/) plugin that simplifies creation of HTML files to serve your `webpack` bundles. This is especially useful for `webpack` bundles that include a hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply\nyour own template using `lodash` templates or use your own loader.\n\n<h2 align=\"center\">Sponsors</h2>\n\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/9/avatar.svg\"></a>\n\nThanks for supporting the ongoing improvements to the html-webpack-plugin!  \n\n<h2 align=\"center\">Zero Config</h2>\n\nThe `html-webpack-plugin` works without configuration.  \nIt's a great addition to the [\u2699\ufe0f webpack-config-plugins](https://github.com/namics/webpack-config-plugins/blob/master/README.md#zero-config-webpack-dev-server-example).\n\n<h2 align=\"center\">Plugins</h2>\n\nThe `html-webpack-plugin` provides [hooks](https://github.com/jantimon/html-webpack-plugin#events) to extend it to your needs. There are already some really powerful plugins which can be integrated with zero configuration\n\n * [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity) for enhanced asset security\n * [appcache-webpack-plugin](https://github.com/lettertwo/appcache-webpack-plugin) for iOS and Android offline usage\n * [favicons-webpack-plugin](https://github.com/jantimon/favicons-webpack-plugin) which generates favicons and icons for iOS, Android and desktop browsers\n * [html-webpack-harddisk-plugin](https://github.com/jantimon/html-webpack-harddisk-plugin) can be used to always write to disk the html file, useful when webpack-dev-server / HMR are being used\n * [html-webpack-inline-source-plugin](https://github.com/DustinJackson/html-webpack-inline-source-plugin) to inline your assets in the resulting HTML file\n * [html-webpack-inline-svg-plugin](https://github.com/thegc/html-webpack-inline-svg-plugin) to inline SVGs in the resulting HTML file.\n * [html-webpack-exclude-assets-plugin](https://github.com/jamesjieye/html-webpack-exclude-assets-plugin) for excluding assets using regular expressions\n * [html-webpack-include-assets-plugin](https://github.com/jharris4/html-webpack-include-assets-plugin) for including lists of js or css file paths (such as those copied by the copy-webpack-plugin).\n * [script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin) to add `async`, `defer` or `module` attributes to your `<script>` elements, or even inline them\n * [style-ext-html-webpack-plugin](https://github.com/numical/style-ext-html-webpack-plugin) to convert your `<link>`s to external stylesheets into `<style>` elements containing internal CSS\n * [html-webpack-injector](https://github.com/thearchitgarg/html-webpack-injector) to inject chunks in `head` or `body` (different locations ) of same html document.\n * [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin) to add resource hints for faster initial page loads using `<link rel='preload'>` and `<link rel='prefetch'>`\n * [preload-webpack-plugin](https://github.com/GoogleChrome/preload-webpack-plugin) for automatically wiring up asynchronous (and other types) of JavaScript chunks using `<link rel='preload'>` helping with lazy-loading\n * [link-media-html-webpack-plugin](https://github.com/yaycmyk/link-media-html-webpack-plugin) allows for injected stylesheet `<link />` tags to have their media attribute set automatically; useful for providing specific desktop/mobile/print etc. stylesheets that the browser will conditionally download\n * [inline-chunk-manifest-html-webpack-plugin](https://github.com/jouni-kantola/inline-chunk-manifest-html-webpack-plugin) for inlining webpack's chunk manifest. Default extracts manifest and inlines in `<head>`\n * [html-webpack-inline-style-plugin](https://github.com/djaax/html-webpack-inline-style-plugin) for inlining styles to HTML elements using [juice](https://github.com/Automattic/juice). Useful for email generation automatisation.\n * [html-webpack-exclude-empty-assets-plugin](https://github.com/KnisterPeter/html-webpack-exclude-empty-assets-plugin) removes empty assets from being added to the html. This fixes some problems with extract-text-plugin with webpack 4.\n * [webpack-concat-plugin](https://github.com/hxlniada/webpack-concat-plugin) for concat and uglify files that needn't to be webpack bundles(for legacy files) and inject to html-webpack-plugin.\n * [html-webpack-link-type-plugin](https://github.com/steadyapp/html-webpack-link-type-plugin) adds a configurable mimetype to resources injected as links (such as adding type=\"text/css\" to external stylesheets) for compatibility with \"strict mode\". \n * [csp-html-webpack-plugin](https://github.com/slackhq/csp-html-webpack-plugin) to add [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) meta tags to the HTML output\n * [webpack-nomodule-plugin](https://github.com/swimmadude66/webpack-nomodule-plugin) allows you to add a `nomodule` attribute to specific injected scripts, which prevents the scripts from being loaded by newer browsers. Good for limiting loads of polyfills.\n\n\n<h2 align=\"center\">Usage</h2>\n\nThe plugin will generate an HTML5 file for you that includes all your `webpack`\nbundles in the body using `script` tags. Just add the plugin to your `webpack`\nconfig as follows:\n\n**webpack.config.js**\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin()\n  ]\n}\n```\n\nThis will generate a file `dist/index.html` containing the following\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple `webpack` entry points, they will all be included with `script` tags in the generated HTML.\n\nIf you have any CSS assets in webpack's output (for example, CSS extracted with the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin))\nthen these will be included with `<link>` tags in the HTML head.\n\nIf you have plugins that make use of it, `html-webpack-plugin` should be ordered first before any of the integrated plugins.\n\n<h2 align=\"center\">Options</h2>\n\nYou can pass a hash of configuration options to `html-webpack-plugin`.\nAllowed values are as follows\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`title`**|`{String}`|`Webpack App`|The title to use for the generated HTML document|\n|**`filename`**|`{String}`|`'index.html'`|The file to write the HTML to. Defaults to `index.html`. You can specify a subdirectory here too (eg: `assets/admin.html`)|\n|**`template`**|`{String}`|``|`webpack` relative or absolute path to the template. By default it will use `src/index.ejs` if it exists. Please see the [docs](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md) for details|\n|**`templateContent`**|`{string\\|Function\\|false}`|false| Can be used instead of `template` to provide an inline template - please read the [Writing Your Own Templates](https://github.com/jantimon/html-webpack-plugin#writing-your-own-templates) section |\n|**`templateParameters`**|`{Boolean\\|Object\\|Function}`| `false`| Allows to overwrite the parameters used in the template - see [example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/template-parameters) |\n|**`inject`**|`{Boolean\\|String}`|`true`|`true \\|\\| 'head' \\|\\| 'body' \\|\\| false` Inject all assets into the given `template` or `templateContent`. When passing `true` or `'body'` all javascript resources will be placed at the bottom of the body element. `'head'` will place the scripts in the head element - see the [inject:false example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/custom-insertion-position)|\n|**`scriptLoading`**|`{'blocking'\\|'defer'}`|`'blocking'`| Modern browsers support non blocking javascript loading (`'defer'`) to improve the page startup performance. |\n|**`favicon`**|`{String}`|``|Adds the given favicon path to the output HTML|\n|**`meta`**|`{Object}`|`{}`|Allows to inject `meta`-tags. E.g. `meta: {viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'}`|\n|**`base`**|`{Object\\|String\\|false}`|`false`|Inject a [`base`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base) tag. E.g. `base: \"https://example.com/path/page.html`|\n|**`minify`**|`{Boolean\\|Object}`|`true` if `mode` is `'production'`, otherwise `false`|Controls if and in what ways the output should be minified. See [minification](#minification) below for more details.|\n|**`hash`**|`{Boolean}`|`false`|If `true` then append a unique `webpack` compilation hash to all included scripts and CSS files. This is useful for cache busting|\n|**`cache`**|`{Boolean}`|`true`|Emit the file only if it was changed|\n|**`showErrors`**|`{Boolean}`|`true`|Errors details will be written into the HTML page|\n|**`chunks`**|`{?}`|`?`|Allows you to add only some chunks (e.g only the unit-test chunk)|\n|**[`chunksSortMode`](#plugins)**|`{String\\|Function}`|`auto`|Allows to control how chunks should be sorted before they are included to the HTML. Allowed values are `'none' \\| 'auto' \\| 'manual' \\| {Function}`|\n|**`excludeChunks`**|`{Array.<string>}`|``|Allows you to skip some chunks (e.g don't add the unit-test chunk)|\n|**`xhtml`**|`{Boolean}`|`false`|If `true` render the `link` tags as self-closing (XHTML compliant)|\n\nHere's an example webpack config illustrating how to use these options\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename: 'assets/admin.html'\n    })\n  ]\n}\n```\n\n### Generating Multiple HTML Files\n\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\n### Writing Your Own Templates\n\nIf the default generated HTML doesn't meet your needs you can supply\nyour own template. The easiest way is to use the `template` option and pass a custom HTML file.\nThe html-webpack-plugin will automatically inject all necessary CSS, JS, manifest\nand favicon files into the markup.\n\nDetails of other template loaders are [documented here](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md).\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template',\n    // Load a custom template (lodash by default)\n    template: 'index.html'\n  })\n]\n```\n\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\nIf you already have a template loader, you can use it to parse the template.\nPlease note that this will also happen if you specify the html-loader and use `.html` file as template.\n\n**webpack.config.js**\n```js\nmodule: {\n  loaders: [\n    { test: /\\.hbs$/, loader: \"handlebars-loader\" }\n  ]\n},\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template using Handlebars',\n    template: 'index.hbs'\n  })\n]\n```\n\nYou can use the `lodash` syntax out of the box. If the `inject` feature doesn't fit your needs and you want full control over the asset placement use the [default template](https://github.com/jaketrent/html-webpack-template/blob/86f285d5c790a6c15263f5cc50fd666d51f974fd/index.html) of the [html-webpack-template project](https://github.com/jaketrent/html-webpack-template) as a starting point for writing your own.\n\nThe following variables are available in the template by default (you can extend them using the `templateParameters` option):\n\n- `htmlWebpackPlugin`: data specific to this plugin\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n  - `htmlWebpackPlugin.tags`: the prepared `headTags` and `bodyTags` Array to render the `<base>`, `<meta>`, `<script>` and `<link>` tags.\n     Can be used directly in templates and literals. For example: \n     ```html\n     <html>\n       <head>\n         <%= htmlWebpackPlugin.tags.headTags %>\n       </head>\n       <body>\n         <%= htmlWebpackPlugin.tags.bodyTags %>\n       </body>\n     </html>\n     ```\n  \n  - `htmlWebpackPlugin.files`: direct access to the files used during the compilation.\n\n    ```typescript\n    publicPath: string;\n    js: string[];\n    css: string[];\n    manifest?: string;\n    favicon?: string;\n    ```\n\n\n- `webpackConfig`: the webpack configuration that was used for this compilation. This\n  can be used, for example, to get the `publicPath` (`webpackConfig.output.publicPath`).\n\n- `compilation`: the webpack [compilation object](https://webpack.js.org/api/compilation-object/).\n  This can be used, for example, to get the contents of processed assets and inline them\n  directly in the page, through `compilation.assets[...].source()`\n  (see [the inline template example](examples/inline/template.pug)).\n\n\nThe template can also be directly inlined directly into the options object.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  templateContent: `\n    <html>\n      <body>\n        <h1>Hello World</h1>\n      </body>\n    </html>\n  `\n})\n```\n\nThe `templateContent` can also access all `templateParameters` values.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  inject: false,\n  templateContent: ({htmlWebpackPlugin}) => `\n    <html>\n      <head>\n        ${htmlWebpackPlugin.tags.headTags}\n      </head>\n      <body>\n        <h1>Hello World</h1>\n        ${htmlWebpackPlugin.tags.bodyTags}\n      </body>\n    </html>\n  `\n})\n```\n\n### Filtering Chunks\n\nTo include only certain chunks you can limit the chunks being used\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    chunks: ['app']\n  })\n]\n```\n\nIt is also possible to exclude certain chunks by setting the `excludeChunks` option\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    excludeChunks: [ 'dev-helper' ]\n  })\n]\n```\n\n### Minification\n\nIf the `minify` option is set to `true` (the default when webpack's `mode` is `'production'`),\nthe generated HTML will be minified using [html-minifier-terser](https://github.com/DanielRuf/html-minifier-terser)\nand the following options:\n\n```js\n{\n  collapseWhitespace: true,\n  removeComments: true,\n  removeRedundantAttributes: true,\n  removeScriptTypeAttributes: true,\n  removeStyleLinkTypeAttributes: true,\n  useShortDoctype: true\n}\n```\n\nTo use custom [html-minifier options](https://github.com/DanielRuf/html-minifier-terser#options-quick-reference)\npass an object to `minify` instead. This object will not be merged with the defaults above.\n\nTo disable minification during production mode set the `minify` option to `false`.\n\n### Meta Tags\n\nIf the `meta` option is set the html-webpack-plugin will inject meta tags.  \nFor the default template the html-webpack-plugin will already provide a default for the `viewport` meta tag.\n\nPlease take a look at this well maintained list of almost all [possible meta tags](https://github.com/joshbuchea/HEAD#meta).\n\n#### name/content meta tags \n\nMost meta tags are configured by setting a `name` and a `content` attribute.  \nTo add those use a key/value pair:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n      'meta': {\n        'viewport': 'width=device-width, initial-scale=1, shrink-to-fit=no',\n        // Will generate: <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        'theme-color': '#4285f4'\n        // Will generate: <meta name=\"theme-color\" content=\"#4285f4\">\n      }\n  })\n]\n```\n\n#### Simulate http response headers\n\nThe **http-equiv** attribute is essentially used to simulate a HTTP response header.  \nThis format is supported using an object notation which allows you to add any attribute:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    'meta': {\n      'Content-Security-Policy': { 'http-equiv': 'Content-Security-Policy', 'content': 'default-src https:' },\n      // Will generate: <meta http-equiv=\"Content-Security-Policy\" content=\"default-src https:\">\n      // Which equals to the following http header: `Content-Security-Policy: default-src https:`\n      'set-cookie': { 'http-equiv': 'set-cookie', content: 'name=value; expires=date; path=url' },\n      // Will generate: <meta http-equiv=\"set-cookie\" content=\"value; expires=date; path=url\">\n      // Which equals to the following http header: `set-cookie: value; expires=date; path=url`\n    }\n  })\n]\n```\n\n### Base Tag\n\nWhen the `base` option is used,\nhtml-webpack-plugin will inject a [base tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base).\nBy default, a base tag will not be injected.\n\nThe following two are identical and will both insert `<base href=\"http://example.com/some/page.html\">`:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': 'http://example.com/some/page.html'\n})\n```\n\n```js\nnew HtmlWebpackPlugin({\n  'base': { 'href': 'http://example.com/some/page.html' }\n})\n```\n\nThe `target` can be specified with the corresponding key:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': {\n    'href': 'http://example.com/some/page.html',\n    'target': '_blank'\n  }\n})\n```\n\nwhich will inject the element `<base href=\"http://example.com/some/page.html\" target=\"_blank\">`.\n\n### Long Term Caching\n\nFor long term caching add `contenthash/templatehash` to the filename.\n\n**Example:**\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    filename: 'index.[contenthash].html'\n  })\n]\n```\n\n`contenthash/templatehash` is the hash of the content of the output file.\n\nOptionally, You can configure like `[<hashType>:contenthash:<digestType>:<length>]`\n\n* `hashType` - one of `sha1`, `md5`, `sha256`, `sha512`  or any other node.js supported hash type\n* `digestType` - one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n* `maxlength` - maximum length of the generated hash in chars\n\n**Defaults:** `[md5:contenthash:hex:9999]`\n\n### Events\n\nTo allow other [plugins](https://github.com/webpack/docs/wiki/plugins) to alter the HTML this plugin executes\n[tapable](https://github.com/webpack/tapable/tree/master) hooks.\n\nThe [lib/hooks.js](https://github.com/jantimon/html-webpack-plugin/blob/master/lib/hooks.js) contains all information\nabout which values are passed.\n\n[![Concept flow uml](https://raw.githubusercontent.com/jantimon/html-webpack-plugin/master/flow.png)](https://github.com/jantimon/html-webpack-plugin/blob/master/flow.puml)\n\n#### `beforeAssetTagGeneration` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<{string}>,\n        css: Array<{string}>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTags` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTagGroups` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `afterTemplateExecution` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `beforeEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `afterEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\nExample implementation: [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity)\n\n**plugin.js**\n```js\n// If your plugin is direct dependent to the html webpack plugin:\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n// If your plugin is using html-webpack-plugin as an optional dependency\n// you can use https://github.com/tallesl/node-safe-require instead:\nconst HtmlWebpackPlugin = require('safe-require')('html-webpack-plugin');\n\nclass MyPlugin {\n  apply (compiler) {\n    compiler.hooks.compilation.tap('MyPlugin', (compilation) => {\n      console.log('The compiler is starting a new compilation...')\n\n      // Static Plugin interface |compilation |HOOK NAME | register listener \n      HtmlWebpackPlugin.getHooks(compilation).beforeEmit.tapAsync(\n        'MyPlugin', // <-- Set a meaningful name here for stacktraces\n        (data, cb) => {\n          // Manipulate the content\n          data.html += 'The Magic Footer'\n          // Tell webpack to move on\n          cb(null, data)\n        }\n      )\n    })\n  }\n}\n\nmodule.exports = MyPlugin\n```\n\n**webpack.config.js**\n```js\nplugins: [\n  new MyPlugin({ options: '' })\n]\n```\n\nNote that the callback must be passed the HtmlWebpackPluginData in order to pass this onto any other plugins listening on the same `beforeEmit` event\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/4113649?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/jantimon\">Jan Nicklas</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/4112409?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/mastilver\">Thomas Sileghem</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n## Backers\n\nThank you to all our backers!  \nIf you want to support the project as well [become a sponsor](https://opencollective.com/html-webpack-plugin#sponsor) or a [a backer](https://opencollective.com/html-webpack-plugin#backer).\n\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/0/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/1/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/2/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/3/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/5/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/6/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/7/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/9/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/9/avatar.svg?requireActive=false\"></a>\n\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\nYou're free to contribute to this project by submitting [issues](https://github.com/jantimon/html-webpack-plugin/issues) and/or [pull requests](https://github.com/jantimon/html-webpack-plugin/pulls). This project is test-driven, so keep in mind that every change and new feature should be covered by tests.\n\nThis project uses the [semistandard code style](https://github.com/Flet/semistandard).\n\n<a href=\"https://github.com/jantimon/html-webpack-plugin/graphs/contributors\"><img src=\"https://opencollective.com/html-webpack-plugin/contributors.svg?width=890&button=false\" /></a>\n\n\n[npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/html-webpack-plugin\n\n[node]: https://img.shields.io/node/v/html-webpack-plugin.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/jantimon/html-webpack-plugin.svg\n[deps-url]: https://david-dm.org/jantimon/html-webpack-plugin\n\n[tests]: http://img.shields.io/travis/jantimon/html-webpack-plugin.svg\n[tests-url]: https://travis-ci.org/jantimon/html-webpack-plugin"}, "npm": {"downloads": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 1125469}, {"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 5655625}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 25169287}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 70915118}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 122800728}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 223472297}], "dependentsCount": 6708, "starsCount": 195}, "github": {"starsCount": 8732, "forksCount": 1069, "subscribersCount": 112, "issues": {"count": 1430, "openCount": 29, "distribution": {"3600": 159, "10800": 91, "32400": 90, "97200": 161, "291600": 184, "874800": 217, "2624400": 166, "7873200": 138, "23619600": 161, "70858800": 61, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "jantimon", "commitsCount": 328}, {"username": "ampedandwired", "commitsCount": 34}, {"username": "SpaceK33z", "commitsCount": 15}, {"username": "SimenB", "commitsCount": 12}, {"username": "sibiraj-s", "commitsCount": 10}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "numical", "commitsCount": 4}, {"username": "swimmadude66", "commitsCount": 4}, {"username": "cgreening", "commitsCount": 3}, {"username": "edmorley", "commitsCount": 3}, {"username": "kennyt", "commitsCount": 3}, {"username": "mastilver", "commitsCount": 3}, {"username": "okhomenko", "commitsCount": 3}, {"username": "Austaras", "commitsCount": 2}, {"username": "AviVahl", "commitsCount": 2}, {"username": "EmmanuelDemey", "commitsCount": 2}, {"username": "Graham42", "commitsCount": 2}, {"username": "JSteunou", "commitsCount": 2}, {"username": "NekR", "commitsCount": 2}, {"username": "TroyTae", "commitsCount": 2}, {"username": "anjianshi", "commitsCount": 2}, {"username": "ascariandrea", "commitsCount": 2}, {"username": "chiplay", "commitsCount": 2}, {"username": "foglerek", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "mateatslc", "commitsCount": 2}, {"username": "mc-zone", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "mistadikay", "commitsCount": 2}, {"username": "rodneyrehm", "commitsCount": 2}, {"username": "sandeep45", "commitsCount": 2}, {"username": "sokra", "commitsCount": 2}, {"username": "spuf", "commitsCount": 2}, {"username": "vincent-ng", "commitsCount": 2}, {"username": "zzuieliyaoli", "commitsCount": 2}, {"username": "AaronFriel", "commitsCount": 1}, {"username": "Aftabnack", "commitsCount": 1}, {"username": "AhmedElaguab", "commitsCount": 1}, {"username": "HairyRabbit", "commitsCount": 1}, {"username": "KnisterPeter", "commitsCount": 1}, {"username": "MrStLouis", "commitsCount": 1}, {"username": "Vladi4-gh", "commitsCount": 1}, {"username": "Wind4", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adamsanderson", "commitsCount": 1}, {"username": "adelura", "commitsCount": 1}, {"username": "akrifari", "commitsCount": 1}, {"username": "alexdevero", "commitsCount": 1}, {"username": "artemirq", "commitsCount": 1}, {"username": "atilkan", "commitsCount": 1}, {"username": "atstp", "commitsCount": 1}, {"username": "brianzelip", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "cronin4392", "commitsCount": 1}, {"username": "djaax", "commitsCount": 1}, {"username": "dudekaa", "commitsCount": 1}, {"username": "felixrabe", "commitsCount": 1}, {"username": "genderquery", "commitsCount": 1}, {"username": "habina", "commitsCount": 1}, {"username": "hg-pyun", "commitsCount": 1}, {"username": "hrs-o", "commitsCount": 1}, {"username": "ianberinger", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "jacobroufa", "commitsCount": 1}, {"username": "jinasonlin", "commitsCount": 1}, {"username": "joshunger", "commitsCount": 1}, {"username": "kontrollanten", "commitsCount": 1}, {"username": "latipun7", "commitsCount": 1}, {"username": "lazarljubenovic", "commitsCount": 1}, {"username": "lfbayer", "commitsCount": 1}, {"username": "lightpohl", "commitsCount": 1}, {"username": "monkeywithacupcake", "commitsCount": 1}, {"username": "mzbac", "commitsCount": 1}, {"username": "nelsonjchen", "commitsCount": 1}, {"username": "nphoff", "commitsCount": 1}, {"username": "panstav", "commitsCount": 1}, {"username": "pducks32", "commitsCount": 1}, {"username": "poacher2k", "commitsCount": 1}, {"username": "riophae", "commitsCount": 1}, {"username": "samloibl", "commitsCount": 1}, {"username": "scinos", "commitsCount": 1}, {"username": "shobhitsharma", "commitsCount": 1}, {"username": "siakaramalegos", "commitsCount": 1}, {"username": "skiny2015", "commitsCount": 1}, {"username": "st-sloth", "commitsCount": 1}, {"username": "t-kelly", "commitsCount": 1}, {"username": "theGC", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "tkrotoff", "commitsCount": 1}, {"username": "tommytroylin", "commitsCount": 1}, {"username": "tomquirk", "commitsCount": 1}, {"username": "troglotit", "commitsCount": 1}, {"username": "ttous", "commitsCount": 1}, {"username": "webmaster128", "commitsCount": 1}, {"username": "wingrunr21", "commitsCount": 1}, {"username": "yogeswarant", "commitsCount": 1}, {"username": "zbigg", "commitsCount": 1}, {"username": "zgreen", "commitsCount": 1}], "commits": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 13}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 40}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 55}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 70}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 28872, "testsSize": 92386, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/dw/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "service": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/david/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/david/jantimon/html-webpack-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "service": "https://api.travis-ci.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/travis/jantimon/html-webpack-plugin.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig"], "outdatedDependencies": {"util.promisify": {"required": "1.0.0", "stable": "1.0.1", "latest": "1.0.1"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5555555555555556, "branding": 0.6}, "popularity": {"communityInterest": 10207, "downloadsCount": 23638372.666666668, "downloadsAcceleration": 74174.19075342466, "dependentsCount": 6708}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.996513698630137, "openIssues": 1, "issuesDistribution": 0.6962882097582026}}, "score": {"final": 0.9091563250897828, "detail": {"quality": 0.932555304047775, "popularity": 0.8002160942043263, "maintenance": 0.9980402882969603}}}}, {"@babel/cli": {"analyzedAt": "2020-06-04T10:40:42.997Z", "collected": {"metadata": {"name": "@babel/cli", "scope": "babel", "version": "7.10.1", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2020-05-27T22:06:51.833Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-cli"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcli", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"commander": "^4.0.1", "convert-source-map": "^1.1.0", "fs-readdir-recursive": "^1.1.0", "glob": "^7.0.0", "lodash": "^4.17.13", "make-dir": "^2.1.0", "slash": "^2.0.0", "source-map": "^0.5.0", "chokidar": "^2.1.8"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-fixtures": "^7.10.1", "rimraf": "^3.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "optionalDependencies": {"chokidar": "^2.1.8"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 37}], "readme": "# @babel/cli\n\n> Babel command line.\n\nSee our website [@babel/cli](https://babeljs.io/docs/en/next/babel-cli.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20cli%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/cli\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/cli --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 307129}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1632381}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7113290}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 20682558}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 36149496}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 61962116}], "dependentsCount": 1676, "starsCount": 2}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36704, "forksCount": 4307, "subscribersCount": 866, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1061, "97200": 1239, "291600": 1053, "874800": 1007, "2624400": 848, "7873200": 806, "23619600": 844, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 407, "testsSize": 25207, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"make-dir": {"required": "^2.1.0", "stable": "3.1.0", "latest": "3.1.0"}, "slash": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "commander": {"required": "^4.0.1", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 41978, "downloadsCount": 6894186, "downloadsAcceleration": 24605.43904109588, "dependentsCount": 1676}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23974114442539213}}, "score": {"final": 0.8328516415781937, "detail": {"quality": 0.896385849469938, "popularity": 0.7214946153848523, "maintenance": 0.889750775292897}}}}, {"karma": {"analyzedAt": "2020-06-11T23:22:38.842Z", "collected": {"metadata": {"name": "karma", "scope": "unscoped", "version": "5.1.0", "description": "Spectacular Test Runner for JavaScript.", "keywords": ["karma", "spectacular", "runner", "karma", "js", "javascript", "testing", "test", "remote", "execution"], "date": "2020-06-11T23:14:24.440Z", "author": {"name": "Vojta J\u00edna", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "dignifiedquire", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "greenkeeperio-bot", "email": "support@greenkeeper.io"}, {"name": "Karma Bot", "email": "karmarunnerbot@gmail.com"}, {"name": "Maksim Ryzhikov", "email": "rv.maksim@gmail.com"}, {"name": "ukasz Usarz", "email": "lukasz.usarz@gmail.com"}, {"name": "Yaroslav Admin", "email": "devoto13@gmail.com"}, {"name": "Christian Budde Christensen", "email": "budde377@gmail.com"}, {"name": "taichi", "email": "ryushi@gmail.com"}, {"name": "Wesley Cho", "email": "wesley.cho@gmail.com"}, {"name": "Liam Newman", "email": "bitwiseman@gmail.com"}, {"name": "lukasz", "email": "lukasz.usarz@gmail.com"}, {"name": "Todd Wolfson", "email": "todd@twolfson.com"}, {"name": "Micha\u0142 Go\u0142\u0119biowski-Owczarek", "email": "m.goleb@gmail.com"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Ciro Nunes", "email": "ciroanunes@gmail.com"}, {"name": "Shyam Seshadri", "email": "shyamseshadri@gmail.com"}, {"name": "Tim Cuthbertson", "email": "tim@gfxmonk.net"}, {"name": "Robo", "email": "hop2deep@gmail.com"}, {"name": "Christian Budde Christensen", "email": "christi@n-bud.de"}, {"name": "Pawel Kozlowski", "email": "pkozlowski.opensource@gmail.com"}, {"name": "Mourad", "email": "mourad@elmaouchi.com"}, {"name": "Daniel Compton", "email": "desk@danielcompton.net"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "vivganes", "email": "vivek@vivekganesan.com"}, {"name": "Georgii Dolzhykov", "email": "thorn.mailbox@gmail.com"}, {"name": "Anton", "email": "anton.redfox@gmail.com"}, {"name": "Brian Di Palma", "email": "offler@gmail.com"}, {"name": "Nick Malaguti", "email": "nmalaguti@palantir.com"}, {"name": "Kim Joar Bekkelund", "email": "kjbekkelund@gmail.com"}, {"name": "joshjb84", "email": "joshjb84@hotmail.com"}, {"name": "David Souther", "email": "davidsouther@gmail.com"}, {"name": "Daniel Aleksandersen", "email": "code@daniel.priv.no"}, {"name": "Jake Champion", "email": "jakechampion.jake2@googlemail.com"}, {"name": "Marcello Nuccio", "email": "marcello.nuccio@gmail.com"}, {"name": "Pieter Mees", "email": "pietermees@users.noreply.github.com"}, {"name": "Brian Ford", "email": "btford@umich.edu"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "Chris Casola", "email": "chriscasola@gmail.com"}, {"name": "Jeff Jewiss", "email": "jeffjewiss@gmail.com"}, {"name": "J\u00e9r\u00e9my Jud\u00e9aux", "email": "jeremy.judeaux@volune.net"}, {"name": "Andrew Martin", "email": "sublimino@gmail.com"}, {"name": "pavelgj", "email": "pavelgj@gmail.com"}, {"name": "sylvain-hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "Ilya Volodin", "email": "ivolodin@vistaprint.com"}, {"name": "ywong", "email": "wongyok@gmail.com"}, {"name": "Iristyle", "email": "Iristyle@github"}, {"name": "Chris Hunt", "email": "chrahunt@gmail.com"}, {"name": "Robert Stein", "email": "SteinRobert@users.noreply.github.com"}, {"name": "ngiebel", "email": "ngiebel@starkinvestments.com"}, {"name": "Robin Liang", "email": "robin.gnail@gmail.com"}, {"name": "rdodev", "email": "rubenoz@gmail.com"}, {"name": "Matt Lewis", "email": "matthew.lewis@socialsignin.co.uk"}, {"name": "Ruben Bridgewater", "email": "ruben.bridgewater@fintura.de"}, {"name": "Ezra Brooks", "email": "ezra.m.brooks@gmail.com"}, {"name": "David Herges", "email": "dherges@users.noreply.github.com"}, {"name": "R\u00e9da Housni Alaoui", "email": "reda.housnialaoui@gmail.com"}, {"name": "Filipe Guerra", "email": "alias.mac@gmail.com"}, {"name": "Aseem Bansal", "email": "aseembansal@live.com"}, {"name": "Bryan Smith", "email": "bryanrsmith@gmail.com"}, {"name": "Sammy Jelin", "email": "sjelin@gmail.com"}, {"name": "David P\u00e4rsson", "email": "david@parsson.se"}, {"name": "Sergei Startsev", "email": "ai@programist.ru"}, {"name": "Jonas Pommerening", "email": "jonas.pommerening@aixigo.de"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@gmail.com"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@jetbrains.com"}, {"name": "Shane Russell", "email": "shane1337@gmail.com"}, {"name": "Jonathan Freeman", "email": "freethejazz@gmail.com"}, {"name": "Josh", "email": "joshhunt180@gmail.com"}, {"name": "Bulat Shakirzyanov", "email": "mallluhuct@gmail.com"}, {"name": "Greenkeeper", "email": "support@greenkeeper.io"}, {"name": "Stefan Dragnev", "email": "dragnev@telerik.com"}, {"name": "Steve Mao", "email": "maochenyan@gmail.com"}, {"name": "Steve Mao", "email": "steve.mao@healthinteract.com.au"}, {"name": "Steve Van Opstal", "email": "stevevanopstal@gmail.com"}, {"name": "Sylvain Hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "KJ Tsanaktsidis", "email": "kjtsanaktsidis@gmail.com"}, {"name": "Terry", "email": "zhangwenlp@vip.qq.com"}, {"name": "Andrew Morris", "email": "voltrevo@gmail.com"}, {"name": "Cyrus Chan", "email": "chan1cyrus2@gmail.com"}, {"name": "Thomas Parisot", "email": "thomas@oncle-tom.net"}, {"name": "Hugues Malphettes", "email": "hmalphettes@gmail.com"}, {"name": "Tom Erik St\u00f8wer", "email": "tomerik@getkahoot.com"}, {"name": "Igor Minar", "email": "igor@angularjs.org"}, {"name": "Keen Yee Liau", "email": "kyliau@google.com"}, {"name": "Igor Minar", "email": "iiminar@gmail.com"}, {"name": "Kelly Jensen", "email": "kellyrayj@gmail.com"}, {"name": "Ilya Goncharov", "email": "ilgonmic@gmail.com"}, {"name": "Kevin Huang", "email": "kevinziwenhuang@gmail.com"}, {"name": "Parashuram", "email": "code@r.nparashuram.com"}, {"name": "Vivek Ganesan", "email": "caliberoviv@gmail.com"}, {"name": "Vladimir Starkov", "email": "iamstarkov@users.noreply.github.com"}, {"name": "Pat Tullmann", "email": "pt@bebop.co"}, {"name": "Kevin WENNER", "email": "kevin.wenner@massmotionmedia.com"}, {"name": "PatrickJS", "email": "github@gdi2290.com"}, {"name": "Levi Thomason", "email": "me@levithomason.com"}, {"name": "ChangZhuo Chen", "email": "czchen@gmail.com", "url": "\u9673\u660c\u502c"}, {"name": "comdiv", "email": "fagim.sadykov@gmail.com"}, {"name": "Luke Page", "email": "luke.a.page@gmail.com"}, {"name": "James Ford", "email": "jford@psyked.co.uk"}, {"name": "James Talmage", "email": "james@talmage.io"}, {"name": "Richard Harrington", "email": "rwharrington87@gmail.com"}, {"name": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"name": "DarthCharles", "email": "carlos.darth@gmail.com"}, {"name": "Roarke Gaskill", "email": "roarke.gaskill@gmail.com"}, {"name": "Ethan J. Brown", "email": "ethan_j_brown@hotmail.com"}, {"name": "Karol Fabja\u0144czuk", "email": "karol.fabjanczuk@lemondemon.pl"}, {"name": "Karolis Narkevicius", "email": "karolis.n@gmail.com"}, {"name": "Keats", "email": "balthek@gmail.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Kent C. Dodds", "email": "kent@doddsfamily.us"}, {"name": "Kevin Ortman", "email": "kevin_ortman@msn.com"}, {"name": "Kostiantyn Kahanskyi", "email": "kostiantyn.kahanskyi@googlemail.com"}, {"name": "Lenny Urbanowski", "email": "lenny@itslennysfault.com"}, {"name": "LoveIsGrief", "email": "just.another.michaelv@gmail.com"}, {"name": "Lucas Theisen", "email": "lucastheisen@pastdev.com"}, {"name": "Lukasz Zatorski", "email": "lzatorski@gmail.com"}, {"name": "M1xA", "email": "AnyCPU@users.noreply.github.com"}, {"name": "Magnus Markling", "email": "github@markling.com"}, {"name": "Manfred Stock", "email": "m@nfred.ch"}, {"name": "Marko Anastasov", "email": "marko@renderedtext.com"}, {"name": "Martin Geisler", "email": "martin@geisler.net"}, {"name": "Martin Jul", "email": "martin@mjul.com"}, {"name": "Martin Lemanski", "email": "martin.lemanski@gmx.at"}, {"name": "Martin Probst", "email": "martin@probst.io"}, {"name": "Matias Niemela\u0308", "email": "matias@yearofmoo.com"}, {"name": "Matthew Amato", "email": "matt.amato@gmail.com"}, {"name": "Matthew Cale", "email": "mattc41190@gmail.com"}, {"name": "Matthew Machuga", "email": "machuga@gmail.com"}, {"name": "Matthias O\u00dfwald", "email": "matz3@users.noreply.github.com"}, {"name": "Matti Paksula", "email": "matti.paksula@iki.fi"}, {"name": "Mattijs Kneppers", "email": "mattijs@arttech.nl"}, {"name": "Merott Movahedi", "email": "merott@merott.com"}, {"name": "Merrick Christensen", "email": "merrick.christensen@gmail.com"}, {"name": "Michael Krotscheck", "email": "krotscheck@gmail.com"}, {"name": "Micha\u0142 Siwek", "email": "mike21@aol.pl"}, {"name": "Milan Aleksic", "email": "milanaleksic@gmail.com"}, {"name": "Milana Stojadinov", "email": "mstojadinov@renderedtext.com"}, {"name": "Mohamed Eltuhamy", "email": "tuhamy@gmail.com"}, {"name": "Nathan Cornelius", "email": "ndcornelius@users.noreply.github.com"}, {"name": "Nathan Hunzaker", "email": "nate.hunzaker@gmail.com"}, {"name": "NeverwinterMoon", "email": "manni.calavera@gmail.com"}, {"name": "Nick Carter", "email": "thynctank@thynctank.com"}, {"name": "Nick McCurdy", "email": "nick@nickmccurdy.com"}, {"name": "Nick Payne", "email": "nick@kurai.co.uk"}, {"name": "Nick Williams", "email": "mr.nicksta@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Nicolas Artman", "email": "nicolasartman@users.noreply.github.com"}, {"name": "Nicolas Ferrero", "email": "ferrero.nicolas@gmail.com"}, {"name": "Nir Moav", "email": "nirmoav@users.noreply.github.com"}, {"name": "Nish", "email": "nishantpatel611@gmail.com"}, {"name": "Nuno Job", "email": "nunojobpinto@gmail.com"}, {"name": "Oleg Gomozov", "email": "blackswanny@gmail.com"}, {"name": "Olivier Yiptong", "email": "olivier@olivieryiptong.com"}, {"name": "OniOni", "email": "mathieu.c.sabourin@gmail.com"}, {"name": "OpenShift guest", "email": "mrpatan@gmail.com"}, {"name": "Outsider", "email": "outsideris@gmail.com"}, {"name": "Parashuram", "email": "code@nparashuram.com"}, {"name": "Pascal Hartig", "email": "phartig@rdrei.net"}, {"name": "Patrick Lussan", "email": "patrick.lussan@componize.com"}, {"name": "Patrick Neschkudla", "email": "neschkudla@gmail.com"}, {"name": "Patrik Henningsson", "email": "patrik.henningsson@gmail.com"}, {"name": "Paul Gschwendtner", "email": "paulgschwendtner@gmail.com"}, {"name": "Pawe\u0142 Kapalla", "email": "pkapalla@xesenix.pl"}, {"name": "Pedro Araujo", "email": "pedrotcaraujo@gmail.com"}, {"name": "Pete Bacon Darwin", "email": "pete@bacondarwin.com"}, {"name": "Pete Swan", "email": "pete@indabamusic.com"}, {"name": "Peter Burns", "email": "rictic@gmail.com"}, {"name": "Peter Halliday", "email": "pghalliday@gmail.com"}, {"name": "Peter McAlpine", "email": "peter.mcalpine@arcticwolf.com"}, {"name": "Peter Newman", "email": "peternewman@users.noreply.github.com"}, {"name": "Peter Yates", "email": "pd.yates@gmail.com"}, {"name": "Philip Harrison", "email": "philip@mailharrison.com"}, {"name": "Pierre Vanduynslager", "email": "pierre.denis.vanduynslager@gmail.com"}, {"name": "Piper Chester", "email": "piperchester@users.noreply.github.com"}, {"name": "Rafal Lindemann", "email": "rl@stamina.pl"}, {"name": "Remy Sharp", "email": "remy@remysharp.com"}, {"name": "Rich Kuzsma", "email": "rkuzsma@gmail.com"}, {"name": "Richard Herrera", "email": "richard.herrera@nfl.com"}, {"name": "Roarke Gaskill", "email": "rgaskill@nexvex.com"}, {"name": "Rob Cherry", "email": "rcherry@reverbnation.com"}, {"name": "Rob Dodson", "email": "lets.email.rob@gmail.com"}, {"name": "Rog\u00e9rio Vicente", "email": "rogeriopvl@gmail.com"}, {"name": "Ruben Bridgewater", "email": "ruben@bridgewater.de"}, {"name": "R\u00e9mi", "email": "r3mi@users.sourceforge.net"}, {"name": "Sahat Yalkabov", "email": "sakhat@gmail.com"}, {"name": "Sam Rawlins", "email": "sam.rawlins@gmail.com"}, {"name": "Sam Rawlins", "email": "srawlins@google.com"}, {"name": "Samuel Marks", "email": "samuelmarks@gmail.com"}, {"name": "Saugat Acharya", "email": "mesaugat@gmail.com"}, {"name": "Schmulik Raskin", "email": "schmuli@gmail.com"}, {"name": "Sergey Kruk", "email": "sergey.kruk@gmail.com"}, {"name": "Seth Rhodes", "email": "seth@thinkpixbit.com"}, {"name": "Shahar Mor", "email": "shaharmor1@gmail.com"}, {"name": "Shane Osbourne", "email": "shane.osbourne8@gmail.com"}, {"name": "Sho Ikeda", "email": "suicaicoca@gmail.com"}, {"name": "Sibiraj", "email": "20282546+Sibiraj-S@users.noreply.github.com"}, {"name": "Simen Bekkhus", "email": "sbekkhus91@gmail.com"}, {"name": "Simon Warta", "email": "2603011+webmaster128@users.noreply.github.com"}, {"name": "Simone Gentili", "email": "sensorario@gmail.com"}, {"name": "Slava Kotiya", "email": "sk@nexttuesday.de"}, {"name": "Sophie Cooper", "email": "scooper91@users.noreply.github.com"}, {"name": "Stephen Hazleton", "email": "shazleto@gmail.com"}, {"name": "Stuart Memo", "email": "stuartmemo@gmail.com"}, {"name": "Taylor Buley", "email": "buley@outlook.com"}, {"name": "Taylor Hakes", "email": "taylor.hakes@gmail.com"}, {"name": "Terin Stock", "email": "terinjokes@gmail.com"}, {"name": "Thai Pangsakulyanont @ Taskworld", "email": "thai.p@taskworld.com"}, {"name": "Thijs Triemstra", "email": "info@collab.nl"}, {"name": "Thomas Parisot", "email": "thomas.parisot@bbc.co.uk"}, {"name": "Tim Olshansky", "email": "tim.olshansky@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tom MacWright", "email": "tom@macwright.org"}, {"name": "TrevDev", "email": "trevor@kareo.com"}, {"name": "Tyler Akins", "email": "fidian@rumkin.com"}, {"name": "Vasily Ostanin", "email": "bazilio91@gmail.com"}, {"name": "Veronica Lynn", "email": "veronica.lynn@redjack.com"}, {"name": "Vincent Taverna", "email": "vinnymac@gmail.com"}, {"name": "Vitor Buzinaro", "email": "funny.hc@gmail.com"}, {"name": "Volune", "email": "jeremy.judeaux@volune.net"}, {"name": "Vova Bilonenko", "email": "bilonenko.v@gmail.com"}, {"name": "Wizek", "email": "123.wizek@gmail.com"}, {"name": "Yaniv Efraim", "email": "yaniv.efraim@gmail.com"}, {"name": "Yi Wang", "email": "e@yi-wang.me"}, {"name": "Yvonne Yip", "email": "ykyyip@google.com"}, {"name": "Zhang zhengzheng", "email": "code@tychio.net"}, {"name": "adamnation", "email": "arowe@illumina.com"}, {"name": "ahaurw01", "email": "ahaurwitz@gmail.com"}, {"name": "ashaffer", "email": "darawk@gmail.com"}, {"name": "cexbrayat", "email": "cedric@ninja-squad.com"}, {"name": "coderaiser", "email": "mnemonic.enemy@gmail.com"}, {"name": "compact", "email": "compact@users.noreply.github.com"}, {"name": "coridrew", "email": "coridrew@gmail.com"}, {"name": "cy6erskunk", "email": "cyberskunk@gmail.com"}, {"name": "david-garcia-nete", "email": "david.garcia.nete@gmail.com"}, {"name": "deepak1556", "email": "hop2deep@gmail.com"}, {"name": "dorey", "email": "dorey415@gmail.com"}, {"name": "grifball", "email": "scottgriffy@gmail.com"}, {"name": "hrgdavor", "email": "hrgdavor@gmail.com"}, {"name": "ianjobling", "email": "ijobling@codio.com"}, {"name": "inf3rno", "email": "laszlo.janszky@gmail.com"}, {"name": "is-already-taken", "email": "1771602+is-already-taken@users.noreply.github.com"}, {"name": "jjoos", "email": "jan@deelstra.org"}, {"name": "jvalkeejarvi", "email": "jvalkeejarvi@gmail.com"}, {"name": "kyo_ago", "email": "kyo.ago@gmail.com"}, {"name": "lanshunfang", "email": "lanshunfang@gmail.com"}, {"name": "lusarz", "email": "lukasz.usarz@gmail.com"}, {"name": "maik", "email": "mauk@gulli.com"}, {"name": "mdemo", "email": "mengdesen09@qq.com"}, {"name": "nathanfaucett", "email": "nathanfaucett@gmail.com"}, {"name": "pardoman", "email": "pardo.medina@gmail.com"}, {"name": "thetrevdev", "email": "thetrevdev@gmail.com"}, {"name": "thorn0", "email": "thorn.mailbox@gmail.com"}, {"name": "toran billups", "email": "toranb@gmail.com"}, {"name": "chalkerx@gmail.com>"}, {"name": "u812", "email": "0u812@github.com"}, {"name": "weiran.zsd@outlook.com>"}, {"name": "Aaron Powell", "email": "me@aaron-powell.com"}, {"name": "Adrien Crivelli", "email": "adrien.crivelli@gmail.com"}, {"name": "Alan Agius", "email": "alan.agius4@gmail.com"}, {"name": "Alejandro Mantecon Guillen", "email": "alemangui@gmail.com"}, {"name": "Ales Rosina", "email": "alesrosina@users.noreply.github.com"}, {"name": "Alexander Pepper", "email": "alexander.pepper@infopark.de"}, {"name": "Alexander Shtuchkin", "email": "ashtuchkin@gmail.com"}, {"name": "Alexei", "email": "solo@solo.md"}, {"name": "Anders Ekdahl", "email": "anders.ekdahl@gmail.com"}, {"name": "Anders Janmyr", "email": "anders.janmyr@sonymobile.com"}, {"name": "Andreas Krummsdorf", "email": "a.krummsdorf@litixsoft.de"}, {"name": "Andreas P\u00e5lsson", "email": "a.palsson@gmail.com"}, {"name": "Andrew Fischer", "email": "afischer@shutterfly.com"}, {"name": "Andrew Marcinkevi\u010dius", "email": "andrew.web@ifdattic.com"}, {"name": "Andrey Chalkin", "email": "L2jLiga@gmail.com"}, {"name": "Andy Joslin", "email": "andytjoslin@gmail.com"}, {"name": "Anton Usmansky", "email": "cody0@yandex-team.ru"}, {"name": "Atul Bhosale", "email": "atul1bhosale@gmail.com"}, {"name": "AugustinLF", "email": "augustin.public@gmail.com"}, {"name": "AvnerCohen", "email": "israbirding@gmail.com"}, {"name": "Awad Mackie", "email": "firesock.serwalek@gmail.com"}, {"name": "Basemm", "email": "BAsM.Egy@gmail.com"}, {"name": "Benoit Charbonnier", "email": "benoit.charbonnier@gmail.com"}, {"name": "Bhavesh Kakadiya", "email": "bhavesh@superhuman.com"}, {"name": "Brady Wied", "email": "brady@bswtechconsulting.com"}, {"name": "Bram Borggreve", "email": "borggreve@gmail.com"}, {"name": "Breno Calazans", "email": "breno@vtex.com.br"}, {"name": "Brian Donovan", "email": "donovan@squareup.com"}, {"name": "Brian Donovan", "email": "me@brian-donovan.com"}, {"name": "Brian M Hunt", "email": "brianmhunt@gmail.com"}, {"name": "Cagdas Bayram", "email": "cbayram@cloudera.com"}, {"name": "Carl Goldberg", "email": "carlgoldberg1236@gmail.com"}, {"name": "Chad Smith", "email": "chad@configit.com"}, {"name": "Chang Wang", "email": "cheapsteak@gmail.com"}, {"name": "Chelsea Urquhart", "email": "curquhart@users.noreply.github.com"}, {"name": "Chris", "email": "camargo.cac@gmail.com"}, {"name": "Chris Chua", "email": "chris.sirhc@gmail.com"}, {"name": "Chris Dawson", "email": "xrdawson@gmail.com"}, {"name": "Christian Weiss", "email": "cweiss@stripe.com"}, {"name": "Christopher Hiller", "email": "chiller@badwing.com"}, {"name": "Ciro S. Costa", "email": "ciro.costa@usp.br"}, {"name": "Daan Stolp", "email": "mail@daanstolp.nl"}, {"name": "Damien Choizit", "email": "damien.choizit@gmail.com"}, {"name": "Dan Siwiec", "email": "daniel.siwiec@gmail.com"}, {"name": "Dan Thareja", "email": "danthareja@gmail.com"}, {"name": "Danny Croft", "email": "danny.croft@yahoo.co.uk"}, {"name": "Danny Tuppeny", "email": "danny@tuppeny.com"}, {"name": "David Jensen", "email": "david@frode.(none)", "url": "none"}, {"name": "David M. Karr", "email": "dk068x@att.com"}, {"name": "Derek Gould", "email": "dgould@birst.com"}, {"name": "Derek Schaller", "email": "dschaller@lyft.com"}, {"name": "Dieter Oberkofler", "email": "doberkofler@users.noreply.github.com"}, {"name": "Dillon", "email": "mdillon@reachmail.com"}, {"name": "Dmitrii Abramov", "email": "dabramov@yahoo-inc.com"}, {"name": "Dmitriy Ryajov", "email": "dryajov@gmail.com"}, {"name": "Douglas Blumeyer", "email": "DougBlumeyer@users.noreply.github.com"}, {"name": "Douglas Blumeyer", "email": "pair+dblumeyer@vmware.com"}, {"name": "Dunja Radulov", "email": "dradulov@renderedtext.com"}, {"name": "ERt", "email": "ert.wroc@gmail.com"}, {"name": "Ed Rooth", "email": "ed.rooth@rackspace.com"}, {"name": "Eddie Monge", "email": "eddie@eddiemonge.com"}, {"name": "Eden", "email": "mazzolaeden@gmail.com"}, {"name": "Edward Hutchins", "email": "eahutchins@gmail.com"}, {"name": "Eldar Jafarov", "email": "djkojb@gmail.com"}, {"name": "Eric Baer", "email": "me@ericbaer.com"}, {"name": "Esteban Marin", "email": "estebanmarin@gmx.ch"}, {"name": "Fabian Beuke", "email": "mail@beuke.org"}, {"name": "Filipe Silva", "email": "filipematossilva@gmail.com"}, {"name": "Franck Garcia", "email": "garcia.franck@gmail.com"}, {"name": "Fred Sauer", "email": "fredsa@google.com"}, {"name": "Frederic Hemberger", "email": "mail@frederic-hemberger.de"}, {"name": "Fredrik Bonander", "email": "carl.fredrik.bonander@gmail.com"}, {"name": "Gavin Aiken", "email": "gavin@aiken.org.uk"}, {"name": "Geert Van Laethem", "email": "geert.van.laethem@pandora.be"}, {"name": "Glenn Anderson", "email": "ondoher@gmail.com"}, {"name": "Greg Thornton", "email": "xdissent@me.com"}, {"name": "Gregory Cowan", "email": "g.cowan@amnzero.nl"}, {"name": "Hendrik Purmann", "email": "h.purmann@googlemail.com"}, {"name": "Homa Wong", "email": "homawong@gmail.com"}, {"name": "Igor Lima", "email": "lima.igorribeiro@gmail.com"}, {"name": "Islam Sharabash", "email": "islam.sharabash@gmail.com"}, {"name": "Jack Tarantino", "email": "jacopo.tarantino@gmail.com"}, {"name": "Jacob Trimble", "email": "modmaker@google.com"}, {"name": "Jakub Z", "email": "jakzale@gmail.com"}, {"name": "James Shore", "email": "jshore@jamesshore.com"}, {"name": "Jan Molak", "email": "jan.molak@smartcodeltd.co.uk"}, {"name": "Janderson Constantino", "email": "jandersonconstantino@gmail.com"}, {"name": "Jeff Froom", "email": "jeff@jfroom.com"}, {"name": "Jeff Lage", "email": "jefflage@me.com"}, {"name": "Jeff Yates", "email": "jeff.yates@alumni.manchester.ac.uk"}, {"name": "Jeremy Axelrod", "email": "axelrod.jeremy@gmail.com"}, {"name": "Jerry Reptak", "email": "jreptak@gmail.com"}, {"name": "Jesse M. Holmes", "email": "wolfhoundjesse@gmail.com"}, {"name": "Joe Lencioni", "email": "joe.lencioni@brigade.com"}, {"name": "Johannes Gorset", "email": "jgorset@gmail.com"}, {"name": "John Wehr", "email": "johnwehr@gmail.com"}, {"name": "Jon Bretman", "email": "jon.bretman@gmail.com"}, {"name": "Jonathan ES Lin", "email": "ernsheong@gmail.com"}, {"name": "Jonathan Felchlin", "email": "jonathan@xgecko.com"}, {"name": "Jonathan Niles", "email": "jniles@users.noreply.github.com"}, {"name": "Josh Lory", "email": "josh.lory@code.org"}, {"name": "Jo\u00e3o Marcos Duarte", "email": "joumd86@gmail.com"}, {"name": "Julian Connor", "email": "julian.connor@venmo.com"}, {"name": "Jurko Gospodneti\u0107", "email": "jurko.gospodnetic@pke.hr"}, {"name": "Justin Ridgewell", "email": "jridgewell@users.noreply.github.com"}, {"name": "KahWee Teng", "email": "t@kw.sg"}, {"name": "Karl Lindmark", "email": "karl.lindmark@ninetwozero.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma.git"}, "links": {"npm": "https://www.npmjs.com/package/karma", "homepage": "http://karma-runner.github.io/", "repository": "https://github.com/karma-runner/karma", "bugs": "https://github.com/karma-runner/karma/issues"}, "license": "MIT", "dependencies": {"body-parser": "^1.19.0", "braces": "^3.0.2", "chokidar": "^3.0.0", "colors": "^1.4.0", "connect": "^3.7.0", "di": "^0.0.1", "dom-serialize": "^2.2.1", "flatted": "^2.0.2", "glob": "^7.1.6", "graceful-fs": "^4.2.4", "http-proxy": "^1.18.1", "isbinaryfile": "^4.0.6", "lodash": "^4.17.15", "log4js": "^6.2.1", "mime": "^2.4.5", "minimatch": "^3.0.4", "qjobs": "^1.2.0", "range-parser": "^1.2.1", "rimraf": "^3.0.2", "socket.io": "^2.3.0", "source-map": "^0.6.1", "tmp": "0.2.1", "ua-parser-js": "0.7.21", "yargs": "^15.3.1"}, "devDependencies": {"@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "@commitlint/travis-cli": "^8.3.5", "@semantic-release/changelog": "^3.0.6", "@semantic-release/git": "^7.0.18", "browserify": "^16.2.3", "chai": "^4.2.0", "chai-as-promised": "^7.1.1", "chai-subset": "^1.2.2", "cucumber": "^6.0.5", "eslint": "^7.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-import": "^2.20.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "grunt": "^1.1.0", "grunt-auto-release": "^0.0.7", "grunt-browserify": "^5.0.0", "grunt-bump": "^0.8.0", "grunt-check-clean": "^0.1.2", "grunt-cli": "^1.1.0", "grunt-contrib-watch": "^1.1.0", "grunt-conventional-changelog": "^6.0.1", "grunt-conventional-github-releaser": "^1.0.0", "grunt-mocha-test": "^0.13.2", "grunt-npm": "0.0.2", "http2": "^3.3.6", "husky": "^4.0.3", "jasmine-core": "^3.4.0", "karma-browserify": "^7.0.0", "karma-browserstack-launcher": "^1.5.0", "karma-chai": "^0.1.0", "karma-chrome-launcher": "^2.2.0", "karma-firefox-launcher": "*", "karma-jasmine": "^2.0.1", "karma-junit-reporter": "*", "karma-mocha": "^1.0.1", "karma-mocha-reporter": "^2.0.0", "karma-script-launcher": "^1.0.0", "load-grunt-tasks": "^4.0.0", "mkdirp": "^0.5.0", "mocha": "^4.1.0", "mocks": "^0.0.15", "proxyquire": "^2.1.0", "puppeteer": "^1.9.0", "semantic-release": "^15.14.0", "sinon": "^7.3.2", "sinon-chai": "^3.0.0", "supertest": "^4.0.2", "timer-shim": "^0.3.0", "which": "^1.3.1"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 4}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 10}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 10}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 14}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 26}], "hasTestScript": true, "readme": "# Karma\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma) [![npm version](https://img.shields.io/npm/v/karma.svg?style=flat-square)](https://www.npmjs.com/package/karma) [![npm downloads](https://img.shields.io/npm/dm/karma.svg?style=flat-square)](https://npmcharts.com/compare/karma?minimal=true)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma) [![Build Status](https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg?style=flat-square)](https://ci.appveyor.com/project/dignifiedquire/karma) [![Code Climate](https://img.shields.io/codeclimate/github/karma-runner/karma.svg?style=flat-square)](https://codeclimate.com/github/karma-runner/karma) [![PRs Welcome](https://img.shields.io/badge/prs-welcome-brightgreen.svg?style=flat-square)](http://makeapullrequest.com) [![Dependency Status](https://img.shields.io/david/karma-runner/karma.svg?style=flat-square)](https://david-dm.org/karma-runner/karma) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma.svg?style=flat-square)](https://david-dm.org/karma-runner/karma#info=devDependencies) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\nA simple tool that allows you to execute JavaScript code in multiple\n_real_ browsers.\n\n> The main purpose of Karma is to make your test-driven development easy,\n>  fast, and fun.\n\n\n## Help and Support\n\n> For questions and support please use the mailing list or Gitter.\n> The issue tracker is for bug reports and feature discussions only.\n\n* Obligatory [documentation]\n* Quick questions:\n[![Gitter Chat](https://img.shields.io/badge/GITTER-join%20chat-green.svg?style=flat-square)](https://gitter.im/karma-runner/karma)\n* Longer questions: [Mailing List]\n* Bug reports [Issue Tracker]\n* Everything less than 140 characters: [@JsKarma] on Twitter\n\n\n\n## When should I use Karma?\n\n* You want to test code in *real* browsers.\n* You want to test code in multiple browsers (desktop, mobile,\n  tablets, etc.).\n* You want to execute your tests locally during development.\n* You want to execute your tests on a continuous integration server.\n* You want to execute your tests on every save.\n* You love your terminal.\n* You don't want your (testing) life to suck.\n* You want to use [Istanbul] to automagically generate coverage\n  reports.\n* You want to use [RequireJS] for your source files.\n\n\n## But I still want to use \\_insert testing library\\_\n\nKarma is not a testing framework, nor an assertion library.\nKarma just launches an HTTP server, and generates the test runner HTML file you probably already know from your favourite testing framework.\nSo for testing purposes you can use pretty much anything you like. There are already plugins for most of the common testing frameworks:\n\n* [Jasmine]\n* [Mocha]\n* [QUnit]\n* and [many others](https://www.npmjs.org/browse/keyword/karma-adapter)\n\nIf you can't find an adapter for your favourite framework, don't worry and write your own.\nIt's not that hard and we are here to help.\n\n\n## Which Browsers can I use?\n\nAll the major browsers are supported, if you want to know more see the\n[browsers] page.\n\n\n## Troubleshooting\nSee [FAQ](https://karma-runner.github.io/latest/intro/faq.html).\n\n\n## I want to use it. Where do I sign?\n\nYou don't need to sign anything but here are some resources to help\nyou to get started...\n\n\n### Obligatory Screencast.\n\nEvery serious project has a screencast, so here is ours.  Just click\n[here] and let the show begin.\n\n\n### Installation.\n\nSee [installation](https://karma-runner.github.io/latest/intro/installation.html).\n\n\n### Using it.\n\nSee [configuration](https://karma-runner.github.io/latest/intro/configuration.html).\n\n\n## This is so great. I want to help.\n\nPlease, see\n[contributing](https://karma-runner.github.io/latest/dev/contributing.html).\n\n\n## Why did you create this?\n\nThroughout the development of [AngularJS], we've been using [JSTD] for\ntesting. I really think that JSTD is a great idea. Unfortunately, we\nhad many problems with JSTD, so we decided to write our own test\nrunner based on the same idea. We wanted a simple tool just for\nexecuting JavaScript tests that is both stable and fast. That's why we\nuse the awesome [Socket.io] library and [Node.js].\n\n\n## My boss wants a license. So where is it?\n[MIT License](./LICENSE)\n\n\n[AngularJS]: https://angularjs.org/\n[JSTD]: https://code.google.com/p/js-test-driver/\n[Socket.io]: http://socket.io/\n[Node.js]: http://nodejs.org/\n[Jasmine]: https://github.com/karma-runner/karma-jasmine\n[Mocha]: https://github.com/karma-runner/karma-mocha\n[QUnit]: https://github.com/karma-runner/karma-qunit\n[here]: https://www.youtube.com/watch?v=MVw8N3hTfCI\n[Mailing List]: https://groups.google.com/forum/#!forum/karma-users\n[Issue Tracker]: https://github.com/karma-runner/karma/issues\n[@JsKarma]: https://twitter.com/JsKarma\n[RequireJS]: http://requirejs.org/\n[Istanbul]: https://github.com/gotwarlost/istanbul\n\n[browsers]: https://karma-runner.github.io/latest/config/browsers.html\n[documentation]: https://karma-runner.github.io"}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 344362}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1846795}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7926826}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 23009586}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 42512223}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 81627685}], "dependentsCount": 830, "starsCount": 427}, "github": {"homepage": "http://karma-runner.github.io", "starsCount": 11191, "forksCount": 1640, "subscribersCount": 332, "issues": {"count": 3526, "openCount": 331, "distribution": {"3600": 271, "10800": 161, "32400": 227, "97200": 344, "291600": 408, "874800": 473, "2624400": 462, "7873200": 303, "23619600": 232, "70858800": 296, "212576400": 349}, "isDisabled": false}, "contributors": [{"username": "vojtajina", "commitsCount": 934}, {"username": "dignifiedquire", "commitsCount": 296}, {"username": "johnjbarton", "commitsCount": 134}, {"username": "greenkeeperio-bot", "commitsCount": 67}, {"username": "devoto13", "commitsCount": 60}, {"username": "lusarz", "commitsCount": 52}, {"username": "karmarunnerbot", "commitsCount": 35}, {"username": "budde377", "commitsCount": 26}, {"username": "taichi", "commitsCount": 14}, {"username": "wesleycho", "commitsCount": 14}, {"username": "maksimr", "commitsCount": 12}, {"username": "anthony-redFox", "commitsCount": 11}, {"username": "mgol", "commitsCount": 11}, {"username": "semantic-release-bot", "commitsCount": 11}, {"username": "twolfson", "commitsCount": 11}, {"username": "bitwiseman", "commitsCount": 9}, {"username": "cironunes", "commitsCount": 7}, {"username": "pkozlowski-opensource", "commitsCount": 6}, {"username": "shyamseshadri", "commitsCount": 6}, {"username": "timbertson", "commitsCount": 6}, {"username": "vivganes", "commitsCount": 6}, {"username": "zzo", "commitsCount": 6}, {"username": "Iristyle", "commitsCount": 5}, {"username": "Moumi", "commitsCount": 5}, {"username": "danielcompton", "commitsCount": 5}, {"username": "thorn0", "commitsCount": 5}, {"username": "IgorMinar", "commitsCount": 4}, {"username": "Volune", "commitsCount": 4}, {"username": "briandipalma", "commitsCount": 4}, {"username": "kimjoar", "commitsCount": 4}, {"username": "nmalaguti", "commitsCount": 4}, {"username": "segrey", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "DavidSouther", "commitsCount": 3}, {"username": "chrahunt", "commitsCount": 3}, {"username": "chriscasola", "commitsCount": 3}, {"username": "da2x", "commitsCount": 3}, {"username": "ilyavolodin", "commitsCount": 3}, {"username": "jeffjewiss", "commitsCount": 3}, {"username": "josh-bradley", "commitsCount": 3}, {"username": "marcenuc", "commitsCount": 3}, {"username": "pavelgj", "commitsCount": 3}, {"username": "pietermees", "commitsCount": 3}, {"username": "sublimino", "commitsCount": 3}, {"username": "sylvain-hamel", "commitsCount": 3}, {"username": "ywongau", "commitsCount": 3}, {"username": "DarthCharles", "commitsCount": 2}, {"username": "FuzzySockets", "commitsCount": 2}, {"username": "KJTsanaktsidis", "commitsCount": 2}, {"username": "PatrickJS", "commitsCount": 2}, {"username": "SteinRobert", "commitsCount": 2}, {"username": "SteveVanOpstal", "commitsCount": 2}, {"username": "Teamop", "commitsCount": 2}, {"username": "alias-mac", "commitsCount": 2}, {"username": "anshbansal", "commitsCount": 2}, {"username": "avalanche123", "commitsCount": 2}, {"username": "bryanrsmith", "commitsCount": 2}, {"username": "btford", "commitsCount": 2}, {"username": "chan1cyrus2", "commitsCount": 2}, {"username": "comdiv", "commitsCount": 2}, {"username": "czchen", "commitsCount": 2}, {"username": "davidparsson", "commitsCount": 2}, {"username": "dherges", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 2}, {"username": "freethejazz", "commitsCount": 2}, {"username": "hmalphettes", "commitsCount": 2}, {"username": "iamstarkov", "commitsCount": 2}, {"username": "ilgonmic", "commitsCount": 2}, {"username": "jamestalmage", "commitsCount": 2}, {"username": "josh18", "commitsCount": 2}, {"username": "jpommerening", "commitsCount": 2}, {"username": "kellyjensen", "commitsCount": 2}, {"username": "kevinzwhuang", "commitsCount": 2}, {"username": "kyliau", "commitsCount": 2}, {"username": "levithomason", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "matz3", "commitsCount": 2}, {"username": "nicojs", "commitsCount": 2}, {"username": "psyked", "commitsCount": 2}, {"username": "rdodev", "commitsCount": 2}, {"username": "reda-alaoui", "commitsCount": 2}, {"username": "rgaskill", "commitsCount": 2}, {"username": "sergei-startsev", "commitsCount": 2}, {"username": "shanear", "commitsCount": 2}, {"username": "sjelin", "commitsCount": 2}, {"username": "srawlins", "commitsCount": 2}, {"username": "tailsu", "commitsCount": 2}, {"username": "thetrevdev", "commitsCount": 2}, {"username": "tullmann", "commitsCount": 2}, {"username": "voltrevo", "commitsCount": 2}, {"username": "Borewit", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "ameerthehacker", "commitsCount": 1}, {"username": "is-already-taken", "commitsCount": 1}, {"username": "krotscheck", "commitsCount": 1}, {"username": "nickbullock", "commitsCount": 1}, {"username": "peterblazejewicz", "commitsCount": 1}, {"username": "rictic", "commitsCount": 1}, {"username": "tbhartman", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 12}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 67}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 77}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 121}]}, "source": {"files": {"readmeSize": 5284, "testsSize": 370920, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma.svg", "content": "https://img.shields.io/npm/v/karma.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma.svg", "content": "https://img.shields.io/npm/dm/karma.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg?style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/dignifiedquire/karma/branch/master", "shields": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.svg", "content": "https://img.shields.io/appveyor/ci/dignifiedquire/karma/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma.svg", "shields": "https://img.shields.io/david/karma-runner/karma.svg", "content": "https://img.shields.io/david/karma-runner/karma.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"], "outdatedDependencies": {"flatted": {"required": "^2.0.2", "stable": "3.0.2", "latest": "3.0.2"}, "source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8333333333333334, "branding": 1}, "popularity": {"communityInterest": 13690, "downloadsCount": 7669862, "downloadsAcceleration": 13282.890924657535, "dependentsCount": 830}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7414739732306944, "detail": {"quality": 0.9421225002084498, "popularity": 0.6442968280995034, "maintenance": 0.6666666666666666}}}}, {"istanbul": {"analyzedAt": "2020-05-10T13:18:36.581Z", "collected": {"metadata": {"name": "istanbul", "scope": "unscoped", "version": "0.4.5", "description": "Yet another JS code coverage tool that computes statement, line, function and branch coverage with module loader hooks to transparently add coverage when running tests. Supports all JS coverage use cases including unit tests, server side functional tests", "keywords": ["coverage", "code coverage", "JS code coverage", "JS coverage"], "date": "2016-08-21T20:02:09.468Z", "author": {"name": "Krishnan Anantheswaran", "email": "kananthmail-github@yahoo.com", "username": "gotwarlost"}, "publisher": {"username": "gotwarlost", "email": "kananthmail-github@yahoo.com"}, "maintainers": [{"username": "bcoe", "email": "ben@npmjs.com"}, {"username": "davglass", "email": "davglass@gmail.com"}, {"username": "gotwarlost", "email": "kananthmail-github@yahoo.com"}], "contributors": [{"name": "Reid Burke", "email": "me@reidburke.com"}, {"name": "Martin Cooper", "email": "mfncooper@gmail.com"}, {"name": "Dav Glass", "email": "davglass@gmail.com"}, {"name": "nowamasa", "email": "nowamasa@gmail.com"}, {"name": "Miller Medeiros @millermedeiros", "email": "contact@millermedeiros.com"}, {"name": "Daniel Perez Alvarez @unindented", "email": "unindented@gmail.com"}, {"name": "Mathias Bynens @mathiasbynens", "email": "mathias@qiwi.be"}, {"name": "Nathan Brown @nbrownus", "email": "nate@betable.com"}, {"name": "Brian Ng @existentialism", "email": "bng412@gmail.com"}, {"name": "John Morrison @jrgm"}, {"name": "Tomaz Muraus @kami", "email": "tomaz+github@tomaz.me"}, {"name": "Joe @jhansche", "email": "jhansche@meetme.com"}, {"name": "Vojta Jina @vojtajina", "email": "vojta.jina@gmail.com"}, {"name": "Dmitry Shirokov @runk", "email": "deadrunk@gmail.com"}, {"name": "Chris Gladd @chrisgladd"}, {"name": "Sergey Belov", "email": "peimei@ya.ru"}, {"name": "porneL @pornel", "email": "pornel@pornel.net"}, {"name": "@asifrc"}, {"name": "Gergely Nemeth @gergelyke"}, {"name": "@bixdeng"}, {"name": "@mpderbec"}, {"name": "@jxiaodev"}, {"name": "Arpad Borsos @Swatinem", "email": "arpad.borsos@googlemail.com"}, {"name": "Ariya Hidayat @ariya"}, {"name": "@markyen"}, {"name": "Sam Saccone @samccone", "email": "sam@samx.it"}, {"name": "Jason Cheatham @jason0x43"}, {"name": "@smikes"}, {"name": "Yasyf Mohamedali @yasyf", "email": "yasyfm@gmail.com"}, {"name": "Fabio Crisci @piuccio", "email": "piuccio@gmail.com"}, {"name": "Ryan Roemer @ryan-roemer", "email": "ryan@loose-bits.com"}, {"name": "Douglas Christopher Wilson @dougwilson"}, {"name": "Gustav Nikolaj @gustavnikolaj", "email": "gustavnikolaj@gmail.com"}, {"name": "Denis Sokolov @denis-sokolov", "email": "denis@sokolov.cc"}, {"name": "Yann Mainier @ymainier"}, {"name": "Yiyu He @dead-horse", "email": "heyiyu.deadhorse@gmail.com"}, {"name": "Andrew Kelley @andrewrk", "email": "superjoe30@gmail.com"}, {"name": "Will LaBranche @wlabranche", "email": "will@labranche.io"}, {"name": "Mathieu Naouache @math-nao", "email": "math.nao@outlook.com"}, {"name": "Ron Korving @ronkorving"}, {"name": "Rob McGuire-Dale @robatron", "email": "rob.mcguiredale@gmail.com"}, {"name": "Justin Johnson @booleangate"}, {"name": "Juan Gabriel Jim\u00e9nez @juangabreil", "email": "juangabreil@gmail.com"}, {"name": "Daniel Sabelnikov @dragn", "email": "dsabelnikov@gmail.com"}, {"name": "Tony Lukasavage @tonylukasavage", "email": "anthony.lukasavage@gmail.com"}, {"name": "Simon Ramsay @nexus-uw"}, {"name": "Dominykas Bly\u017e\u0117 @dominykas"}, {"name": "Seth Pollack @sethpollack"}, {"name": "Benjamin E. Coe @bcoe", "email": "ben@npmjs.com"}, {"name": "Yuren Ju", "email": "yurenju@gmail.com"}, {"name": "Aleksey Verkholantsev", "email": "alex-vee@yandex-team.ru"}, {"name": "Ed S", "email": "ejsanders@gmail.com"}, {"name": "Mordy Tikotzky", "email": "mordytk@gmail.com"}, {"name": "Haoliang Gao @popomore", "email": "sakura9515@gmail.com"}, {"name": "Roderick Hsiao @roderickhsiao"}, {"name": "Nikita Gusakov @nkt"}, {"name": "Alex Dunphy @alexdunphy", "email": "alexanderdunphy@gmail.com"}, {"name": "Artemy Tregubenko @arty-name", "email": "me@arty.name"}, {"name": "Arye Lukashevski @aryelu"}, {"name": "@sterlinghw"}, {"name": "Gord Tanner", "email": "gord@bithound.io"}, {"name": "Tom MacWright @tmcw", "email": "tom@macwright.org"}, {"name": "Kitson Kelly @kitsonk"}, {"name": "@asa-git"}, {"name": "@RoCat"}, {"name": "Ian Page Hands @iphands", "email": "iphands@gmail.com"}, {"name": "Eddie Gurnee @pegurnee"}, {"name": "Kevin Decker @kpdecker", "email": "kpdecker@gmail.com"}, {"name": "isaacs @isaacs", "email": "i@izs.me"}, {"name": "Steve Gray @steve-gray"}, {"name": "Prayag Verma @pra85", "email": "prayag.verma@gmail.com"}, {"name": "Abe Fehr @abejfehr", "email": "abe.fehr@gmail.com"}, {"name": "Brian Woodward @doowb", "email": "brian.woodward@gmail.com"}, {"name": "@Victorystick"}, {"name": "@inversion"}, {"name": "@JamesMGreene"}, {"name": "@ChALkeR"}, {"name": "@graingert"}], "repository": {"type": "git", "url": "git://github.com/gotwarlost/istanbul.git"}, "links": {"npm": "https://www.npmjs.com/package/istanbul", "homepage": "https://github.com/gotwarlost/istanbul#readme", "repository": "https://github.com/gotwarlost/istanbul", "bugs": "https://github.com/gotwarlost/istanbul/issues"}, "license": "BSD-3-Clause", "dependencies": {"abbrev": "1.0.x", "async": "1.x", "escodegen": "1.8.x", "esprima": "2.7.x", "glob": "^5.0.15", "handlebars": "^4.0.1", "js-yaml": "3.x", "mkdirp": "0.5.x", "nopt": "3.x", "once": "1.x", "resolve": "1.1.x", "supports-color": "^3.1.0", "which": "^1.1.1", "wordwrap": "^1.0.0"}, "devDependencies": {"coveralls": "2.x", "jshint": "^2.8.0", "nodeunit": "0.9.x", "requirejs": "2.x", "rimraf": "^2.4.3"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1}], "deprecated": "This module is no longer maintained, try this instead:\n  npm i nyc\nVisit https://istanbul.js.org/integrations for other alternatives.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "## Istanbul - a JS code coverage tool written in JS\n\n[![Build Status](https://secure.travis-ci.org/gotwarlost/istanbul.svg?branch=master)](http://travis-ci.org/gotwarlost/istanbul)\n[![Dependency Status](https://gemnasium.com/gotwarlost/istanbul.svg)](https://gemnasium.com/gotwarlost/istanbul)\n[![Coverage Status](https://img.shields.io/coveralls/gotwarlost/istanbul.svg)](https://coveralls.io/r/gotwarlost/istanbul?branch=master)\n[![bitHound Score](https://www.bithound.io/github/gotwarlost/istanbul/badges/score.svg)](https://www.bithound.io/github/gotwarlost/istanbul)\n\n[![NPM](https://nodei.co/npm/istanbul.png?downloads=true)](https://nodei.co/npm/istanbul/)\n\n**New** `v0.4.0` now has beautiful HTML reports. Props to Tom MacWright @tmcw for a fantastic job!\n\n* [Features and use cases](#features)\n* [Getting started and configuration](#getting-started)\n* [Usage on Windows](#usage-on-windows)\n* [The command line](#the-command-line)\n* [Ignoring code for coverage](#ignoring-code-for-coverage)\n* [API](#api)\n* [Changelog](https://github.com/gotwarlost/istanbul/blob/master/CHANGELOG.md)\n* [License and credits](#license)\n\n### Features\n\n* All-javascript instrumentation library that tracks **statement, branch,\nand function coverage**.\n* **Module loader hooks** to instrument code on the fly\n* **Command line tools** to run node unit tests \"with coverage turned on\" and no cooperation\nwhatsoever from the test runner\n* Multiple report formats: **HTML**, **LCOV**, **Cobertura** and more.\n* Ability to use as [middleware](https://github.com/gotwarlost/istanbul-middleware) when serving JS files that need to be tested on the browser.\n* Can be used on the **command line** as well as a **library**\n* Based on the awesome `esprima` parser and the equally awesome `escodegen` code generator\n* Well-tested on node (prev, current and next versions) and the browser (instrumentation library only)\n\n### Use cases\n\nSupports the following use cases and more\n\n* transparent coverage of nodejs unit tests\n* instrumentation/ reporting of files in batch mode for browser tests\n* Server side code coverage for nodejs by embedding it as [custom middleware](https://github.com/gotwarlost/istanbul-middleware)\n\n### Getting started\n\n    $ npm install -g istanbul\n\nThe best way to see it in action is to run node unit tests. Say you have a test\nscript `test.js` that runs all tests for your node project without coverage.\n\nSimply:\n\n    $ cd /path/to/your/source/root\n    $ istanbul cover test.js\n\nand this should produce a `coverage.json`, `lcov.info` and `lcov-report/*html` under `./coverage`\n\nSample of code coverage reports produced by this tool (for this tool!):\n\n[HTML reports](http://gotwarlost.github.com/istanbul/public/coverage/lcov-report/index.html)\n\n### Usage on Windows\n\nIstanbul assumes that the `command` passed to it is a JS file (e.g. Jasmine, vows etc.),\nthis is however not true on Windows where npm wrap bin files in a `.cmd` file.\nSince Istanbul can not parse `.cmd` files you need to reference the bin file manually.\n\nHere is an example using Jasmine 2:\n\n    istanbul cover node_modules\\jasmine\\bin\\jasmine.js\n\nIn order to use this cross platform (e.i. Linux, Mac and Windows), you can insert\nthe above line into the script object in your package.json file but with normal\nslash.\n\n    \"scripts\": {\n        \"test\": \"istanbul cover node_modules/jasmine/bin/jasmine.js\"\n    }\n\n### Configuring\n\nDrop a `.istanbul.yml` file at the top of the source tree to configure istanbul.\n`istanbul help config` tells you more about the config file format.\n\n### The command line\n\n    $ istanbul help\n\ngives you detailed help on all commands.\n\n```\nUsage: istanbul help config | <command>\n\n`config` provides help with istanbul configuration\n\nAvailable commands are:\n\n      check-coverage\n              checks overall/per-file coverage against thresholds from coverage\n              JSON files. Exits 1 if thresholds are not met, 0 otherwise\n\n\n      cover   transparently adds coverage information to a node command. Saves\n              coverage.json and reports at the end of execution\n\n\n      help    shows help\n\n\n      instrument\n              instruments a file or a directory tree and writes the\n              instrumented code to the desired output location\n\n\n      report  writes reports for coverage JSON objects produced in a previous\n              run\n\n\n      test    cover a node command only when npm_config_coverage is set. Use in\n              an `npm test` script for conditional coverage\n\n\nCommand names can be abbreviated as long as the abbreviation is unambiguous\n```\n\nTo get detailed help for a command and what command-line options it supports, run:\n\n    istanbul help <command>\n\n(Most of the command line options are not covered in this document.)\n\n#### The `cover` command\n\n    $ istanbul cover my-test-script.js -- my test args\n    # note the -- between the command name and the arguments to be passed\n\nThe `cover` command can be used to get a coverage object and reports for any arbitrary\nnode script. By default, coverage information is written under `./coverage` - this\ncan be changed using command-line options.\n\nThe `cover` command can also be passed an optional `--handle-sigint` flag to\nenable writing reports when a user triggers a manual SIGINT of the process that is\nbeing covered. This can be useful when you are generating coverage for a long lived process.\n\n#### The `test` command\n\nThe `test` command has almost the same behavior as the `cover` command, except that\nit skips coverage unless the `npm_config_coverage` environment variable is set.\n\n**This command is deprecated** since the latest versions of npm do not seem to\nset the `npm_config_coverage` variable.\n\n#### The `instrument` command\n\nInstruments a single JS file or an entire directory tree and produces an output\ndirectory tree with instrumented code. This should not be required for running node\nunit tests but is useful for tests to be run on the browser.\n\n#### The `report` command\n\nWrites reports using `coverage*.json` files as the source of coverage information.\nReports are available in multiple formats and can be individually configured\nusing the istanbul config file. See `istanbul help report` for more details.\n\n#### The `check-coverage` command\n\nChecks the coverage of statements, functions, branches, and lines against the\nprovided thresholds. Positive thresholds are taken to be the minimum percentage\nrequired and negative numbers are taken to be the number of uncovered entities\nallowed.\n\n### Ignoring code for coverage\n\n* Skip an `if` or `else` path with `/* istanbul ignore if */` or `/* istanbul ignore else */` respectively.\n* For all other cases, skip the next 'thing' in the source with: `/* istanbul ignore next */`\n\nSee [ignoring-code-for-coverage.md](ignoring-code-for-coverage.md) for the spec.\n\n\n### API\n\nAll the features of istanbul can be accessed as a library.\n\n#### Instrument code\n\n```javascript\n    var istanbul = require('istanbul');\n    var instrumenter = new istanbul.Instrumenter();\n\n    var generatedCode = instrumenter.instrumentSync('function meaningOfLife() { return 42; }',\n        'filename.js');\n```\n\n#### Generate reports given a bunch of coverage JSON objects\n\n```javascript\n    var istanbul = require('istanbul'),\n        collector = new istanbul.Collector(),\n        reporter = new istanbul.Reporter(),\n        sync = false;\n\n    collector.add(obj1);\n    collector.add(obj2); //etc.\n\n    reporter.add('text');\n    reporter.addAll([ 'lcov', 'clover' ]);\n    reporter.write(collector, sync, function () {\n        console.log('All reports generated');\n    });\n```\n\nFor the gory details consult the [public API](http://gotwarlost.github.com/istanbul/public/apidocs/index.html)\n\n\n### Multiple Process Usage\n\nIstanbul can be used in a multiple process environment by running each process\nwith Istanbul, writing a unique coverage file for each process, and combining\nthe results when generating reports. The method used to perform this will\ndepend on the process forking API used. For example when using the\n[cluster module](http://nodejs.org/api/cluster.html) you must setup the master\nto start child processes with Istanbul coverage, disable reporting, and output\ncoverage files that include the PID in the filename.  Before each run you may\nneed to clear out the coverage data directory.\n\n```javascript\n    if(cluster.isMaster) {\n        // setup cluster if running with istanbul coverage\n        if(process.env.running_under_istanbul) {\n            // use coverage for forked process\n            // disabled reporting and output for child process\n            // enable pid in child process coverage filename\n            cluster.setupMaster({\n                exec: './node_modules/.bin/istanbul',\n                args: [\n                    'cover', '--report', 'none', '--print', 'none', '--include-pid',\n                    process.argv[1], '--'].concat(process.argv.slice(2))\n            });\n        }\n        // ...\n        // ... cluster.fork();\n        // ...\n    } else {\n        // ... worker code\n    }\n```\n\n### Coverage.json\n\nFor details on the format of the coverage.json object, [see here](./coverage.json.md).\n\n### License\n\nistanbul is licensed under the [BSD License](http://github.com/gotwarlost/istanbul/raw/master/LICENSE).\n\n### Third-party libraries\n\nThe following third-party libraries are used by this module:\n\n* abbrev: https://github.com/isaacs/abbrev-js -  to handle command abbreviations\n* async: https://github.com/caolan/async - for parallel instrumentation of files\n* escodegen: https://github.com/Constellation/escodegen - for JS code generation\n* esprima: https://github.com/ariya/esprima - for JS parsing\n* glob: https://github.com/isaacs/node-glob - for loading and matching path expressions\n* handlebars: https://github.com/wycats/handlebars.js/ - for report template expansion\n* js-yaml: https://github.com/nodeca/js-yaml - for YAML config file load\n* mkdirp: https://github.com/substack/node-mkdirp - to create output directories\n* nodeunit: https://github.com/caolan/nodeunit - dev dependency for unit tests\n* nopt: https://github.com/isaacs/nopt - for option parsing\n* once: https://github.com/isaacs/once - to ensure callbacks are called once\n* resolve: https://github.com/substack/node-resolve - for resolving a post-require hook module name into its main file.\n* rimraf - https://github.com/isaacs/rimraf - dev dependency for unit tests\n* which: https://github.com/isaacs/node-which - to resolve a node command to a file for the `cover` command\n* wordwrap: https://github.com/substack/node-wordwrap - for prettier help\n* prettify: http://code.google.com/p/google-code-prettify/ - for syntax colored HTML reports. Files checked in under `lib/vendor/`\n\n### Inspired by\n\n* YUI test coverage - https://github.com/yui/yuitest - the grand-daddy of JS coverage tools. Istanbul has been specifically designed to offer an alternative to this library with an easy migration path.\n* cover: https://github.com/itay/node-cover - the inspiration for the `cover` command, modeled after the `run` command in that tool. The coverage methodology used by istanbul is quite different, however\n\n### Shout out to\n\n   * [mfncooper](https://github.com/mfncooper) - for great brainstorming discussions\n   * [reid](https://github.com/reid), [davglass](https://github.com/davglass), the YUI dudes, for interesting conversations, encouragement, support and gentle pressure to get it done :)\n\n### Why the funky name?\n\nSince all the good ones are taken. Comes from the loose association of ideas across\ncoverage, carpet-area coverage, the country that makes good carpets and so on..."}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 52032}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 994650}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 4152824}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 13065548}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 25020253}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 53160995}], "dependentsCount": 841, "starsCount": 222}, "github": {"starsCount": 8233, "forksCount": 792, "subscribersCount": 137, "issues": {"count": 930, "openCount": 390, "distribution": {"3600": 61, "10800": 29, "32400": 35, "97200": 59, "291600": 38, "874800": 62, "2624400": 73, "7873200": 73, "23619600": 64, "70858800": 77, "212576400": 359}, "isDisabled": false}, "contributors": [{"username": "gotwarlost", "commitsCount": 254}, {"username": "davglass", "commitsCount": 14}, {"username": "Kami", "commitsCount": 10}, {"username": "gustavnikolaj", "commitsCount": 6}, {"username": "ariya", "commitsCount": 5}, {"username": "jason0x43", "commitsCount": 5}, {"username": "asifrc", "commitsCount": 4}, {"username": "sterling", "commitsCount": 4}, {"username": "chrisgladd", "commitsCount": 3}, {"username": "denis-sokolov", "commitsCount": 3}, {"username": "runk", "commitsCount": 3}, {"username": "adamjmcgrath", "commitsCount": 2}, {"username": "dotnetCarpenter", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "eddiemonge", "commitsCount": 2}, {"username": "juangabreil", "commitsCount": 2}, {"username": "markyen", "commitsCount": 2}, {"username": "mathiasbynens", "commitsCount": 2}, {"username": "millermedeiros", "commitsCount": 2}, {"username": "ngrieble", "commitsCount": 2}, {"username": "pegurnee", "commitsCount": 2}, {"username": "sethpollack", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "unindented", "commitsCount": 2}, {"username": "winniehell", "commitsCount": 2}, {"username": "yasyf", "commitsCount": 2}, {"username": "ymainier", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "JamesMGreene", "commitsCount": 1}, {"username": "RoCat", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "abejfehr", "commitsCount": 1}, {"username": "alexdunphy", "commitsCount": 1}, {"username": "andrewrk", "commitsCount": 1}, {"username": "arty-name", "commitsCount": 1}, {"username": "aryelu", "commitsCount": 1}, {"username": "asa-git", "commitsCount": 1}, {"username": "booleangate", "commitsCount": 1}, {"username": "davidlehn", "commitsCount": 1}, {"username": "dead-horse", "commitsCount": 1}, {"username": "dominykas", "commitsCount": 1}, {"username": "doowb", "commitsCount": 1}, {"username": "dragn", "commitsCount": 1}, {"username": "edg2s", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "gregpabian", "commitsCount": 1}, {"username": "gtanner", "commitsCount": 1}, {"username": "inversion", "commitsCount": 1}, {"username": "iphands", "commitsCount": 1}, {"username": "isaacs", "commitsCount": 1}, {"username": "johnny-mh", "commitsCount": 1}, {"username": "jrgm", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "jxiaodev", "commitsCount": 1}, {"username": "kitsonk", "commitsCount": 1}, {"username": "kornelski", "commitsCount": 1}, {"username": "kpdecker", "commitsCount": 1}, {"username": "nkt", "commitsCount": 1}, {"username": "nmalaguti", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "robatron", "commitsCount": 1}, {"username": "roderickhsiao", "commitsCount": 1}, {"username": "ryan-roemer", "commitsCount": 1}, {"username": "samccone", "commitsCount": 1}, {"username": "smikes", "commitsCount": 1}, {"username": "tikotzky", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "tschieggm", "commitsCount": 1}, {"username": "vojtajina", "commitsCount": 1}, {"username": "wlabranche", "commitsCount": 1}, {"username": "yodeyer", "commitsCount": 1}, {"username": "yurenju", "commitsCount": 1}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 11627, "testsSize": 391393, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/gotwarlost/istanbul.svg?branch=master", "service": "https://api.travis-ci.org/gotwarlost/istanbul.svg?branch=master", "shields": "https://img.shields.io/travis/gotwarlost/istanbul/master.svg", "content": "https://img.shields.io/travis/gotwarlost/istanbul/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/gotwarlost/istanbul.svg", "service": "https://coveralls.io/repos/gotwarlost/istanbul/badge.svg", "shields": "https://img.shields.io/coveralls/gotwarlost/istanbul.svg", "content": "https://img.shields.io/coveralls/gotwarlost/istanbul.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://nodei.co/npm/istanbul.png?downloads=true", "shields": "https://img.shields.io/npm/v/istanbul.svg", "content": "https://img.shields.io/npm/v/istanbul.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["jshint"], "coverage": 0.98, "outdatedDependencies": {"nopt": {"required": "3.x", "stable": "4.0.3", "latest": "4.0.3"}, "abbrev": {"required": "1.0.x", "stable": "1.1.1", "latest": "1.1.1"}, "mkdirp": {"required": "0.5.x", "stable": "1.0.4", "latest": "0.5.5"}, "supports-color": {"required": "^3.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "escodegen": {"required": "1.8.x", "stable": "1.14.1", "latest": "1.14.1"}, "which": {"required": "^1.1.1", "stable": "2.0.2", "latest": "2.0.2"}, "esprima": {"required": "2.7.x", "stable": "4.0.1", "latest": "4.0.1"}, "resolve": {"required": "1.1.x", "stable": "1.17.0", "latest": "2.0.0-next.1"}, "glob": {"required": "^5.0.15", "stable": "7.1.6", "latest": "7.1.6"}, "async": {"required": "1.x", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.997, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 9459, "downloadsCount": 4355182.666666667, "downloadsAcceleration": -3466.062766362251, "dependentsCount": 841}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 0.6344086021505376, "issuesDistribution": 0}}, "score": {"final": 0.4210277013994731, "detail": {"quality": 0.587168068123524, "popularity": 0.5231336855817179, "maintenance": 0.1765156885966133}}}}, {"grunt": {"analyzedAt": "2020-04-29T08:14:26.527Z", "collected": {"metadata": {"name": "grunt", "scope": "unscoped", "version": "1.1.0", "description": "The JavaScript Task Runner", "keywords": ["task", "async", "cli", "minify", "uglify", "build", "lodash", "unit", "test", "qunit", "nodeunit", "server", "init", "scaffold", "make", "jake", "tool"], "date": "2020-03-17T02:37:19.588Z", "author": {"name": "Grunt Development Team", "url": "https://gruntjs.com/development-team"}, "publisher": {"username": "vladikoff", "email": "vlad@vladikoff.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com/"}, {"name": "Kyle Robinson Young", "url": "http://dontkry.com/"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com"}, {"name": "Sindre Sorhus", "url": "http://sindresorhus.com"}, {"name": "Vlad Filippov", "url": "http://vladfilippov.com/"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt", "homepage": "https://gruntjs.com/", "repository": "https://github.com/gruntjs/grunt", "bugs": "https://github.com/gruntjs/grunt/issues"}, "license": "MIT", "dependencies": {"coffeescript": "~1.10.0", "dateformat": "~1.0.12", "eventemitter2": "~0.4.13", "exit": "~0.1.1", "findup-sync": "~0.3.0", "glob": "~7.0.0", "grunt-cli": "~1.2.0", "grunt-known-options": "~1.1.0", "grunt-legacy-log": "~2.0.0", "grunt-legacy-util": "~1.1.1", "iconv-lite": "~0.4.13", "js-yaml": "~3.13.1", "minimatch": "~3.0.2", "mkdirp": "~1.0.3", "nopt": "~3.0.6", "path-is-absolute": "~1.0.0", "rimraf": "~2.6.2"}, "devDependencies": {"difflet": "~1.0.1", "eslint-config-grunt": "~1.0.1", "grunt-contrib-nodeunit": "~2.0.0", "grunt-contrib-watch": "~1.1.0", "grunt-eslint": "~18.1.0", "temporary": "~0.0.4", "through2": "~2.0.0"}, "releases": [{"from": "2020-03-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 1}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 2}, {"from": "2019-11-01T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 2}, {"from": "2019-04-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 2}, {"from": "2018-04-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Grunt: The JavaScript Task Runner\n\n[![Build Status: Linux](https://travis-ci.org/gruntjs/grunt.svg?branch=master)](https://travis-ci.org/gruntjs/grunt)\n[![Build Status: Windows](https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt/branch/master)\n[![Built with Grunt](https://cdn.gruntjs.com/builtwith.svg)](http://gruntjs.com/)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgruntjs%2Fgrunt.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fgruntjs%2Fgrunt?ref=badge_shield)\n\n<img align=\"right\" height=\"260\" src=\"http://gruntjs.com/img/grunt-logo-no-wordmark.svg\">\n\n\n### Documentation\n\nVisit the [gruntjs.com](https://gruntjs.com/) website for all the things.\n\n### Support / Contributing\nBefore you make an issue, please read our [Contributing](https://gruntjs.com/contributing) guide.\n\nYou can find the grunt team in [#grunt on irc.freenode.net](https://webchat.freenode.net/?channels=grunt).\n\n### Release History\nSee the [CHANGELOG](CHANGELOG).\n\n### License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-04-28T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 129692}, {"from": "2020-04-22T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 710857}, {"from": "2020-03-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 2969835}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 8440786}, {"from": "2019-11-01T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 15497488}, {"from": "2019-04-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 31311233}], "dependentsCount": 2051, "starsCount": 697}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 12004, "forksCount": 1537, "subscribersCount": 530, "issues": {"count": 1692, "openCount": 164, "distribution": {"3600": 340, "10800": 126, "32400": 155, "97200": 153, "291600": 104, "874800": 132, "2624400": 160, "7873200": 156, "23619600": 154, "70858800": 73, "212576400": 139}, "isDisabled": false}, "contributors": [{"username": "cowboy", "commitsCount": 1126}, {"username": "shama", "commitsCount": 74}, {"username": "vladikoff", "commitsCount": 32}, {"username": "tkellen", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 10}, {"username": "XhmikosR", "commitsCount": 9}, {"username": "scottgonzalez", "commitsCount": 8}, {"username": "jzaefferer", "commitsCount": 7}, {"username": "mklabs", "commitsCount": 7}, {"username": "paladox", "commitsCount": 6}, {"username": "coliff", "commitsCount": 3}, {"username": "danheberden", "commitsCount": 3}, {"username": "pifantastic", "commitsCount": 3}, {"username": "rwaldron", "commitsCount": 3}, {"username": "tbranyen", "commitsCount": 3}, {"username": "FredyC", "commitsCount": 2}, {"username": "arithmetric", "commitsCount": 2}, {"username": "ctalkington", "commitsCount": 2}, {"username": "dmethvin", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "mikesherov", "commitsCount": 2}, {"username": "rdworth", "commitsCount": 2}, {"username": "sokra", "commitsCount": 2}, {"username": "sorccu", "commitsCount": 2}, {"username": "FeodorFitsner", "commitsCount": 1}, {"username": "JamesMGreene", "commitsCount": 1}, {"username": "JasonCust", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "adrianheine", "commitsCount": 1}, {"username": "anti-matthew", "commitsCount": 1}, {"username": "auscaster", "commitsCount": 1}, {"username": "carldanley", "commitsCount": 1}, {"username": "divdavem", "commitsCount": 1}, {"username": "dprothero", "commitsCount": 1}, {"username": "dylang", "commitsCount": 1}, {"username": "eddiemonge", "commitsCount": 1}, {"username": "evansolomon", "commitsCount": 1}, {"username": "garyb", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "jimisaacs", "commitsCount": 1}, {"username": "jimmyhchan", "commitsCount": 1}, {"username": "jonykrause", "commitsCount": 1}, {"username": "jugglinmike", "commitsCount": 1}, {"username": "kmiyashiro", "commitsCount": 1}, {"username": "lamby", "commitsCount": 1}, {"username": "lpww", "commitsCount": 1}, {"username": "markelog", "commitsCount": 1}, {"username": "mrjoelkemp", "commitsCount": 1}, {"username": "notclive", "commitsCount": 1}, {"username": "omytryniuk", "commitsCount": 1}, {"username": "paulirish", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "puzrin", "commitsCount": 1}, {"username": "radford", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "rgaskill", "commitsCount": 1}, {"username": "ryysud", "commitsCount": 1}, {"username": "sbisbee", "commitsCount": 1}, {"username": "stuartf", "commitsCount": 1}, {"username": "tchollingsworth", "commitsCount": 1}, {"username": "theasta", "commitsCount": 1}, {"username": "trevorah", "commitsCount": 1}, {"username": "vlajos", "commitsCount": 1}, {"username": "webOS101", "commitsCount": 1}, {"username": "xizhao", "commitsCount": 1}], "commits": [{"from": "2020-04-22T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 0}, {"from": "2020-03-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 0}, {"from": "2020-01-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 4}, {"from": "2019-11-01T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 4}, {"from": "2019-04-30T00:00:00.000Z", "to": "2020-04-29T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1114, "testsSize": 104371, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/32r7s2skrgm9ubva/branch/master", "shields": "https://img.shields.io/appveyor/ci/32r7s2skrgm9ubva/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/32r7s2skrgm9ubva/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["eslint"], "outdatedDependencies": {"path-is-absolute": {"required": "~1.0.0", "stable": "2.0.0", "latest": "2.0.0"}, "dateformat": {"required": "~1.0.12", "stable": "3.0.3", "latest": "3.0.3"}, "findup-sync": {"required": "~0.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "nopt": {"required": "~3.0.6", "stable": "4.0.3", "latest": "4.0.3"}, "grunt-cli": {"required": "~1.2.0", "stable": "1.3.2", "latest": "1.3.2"}, "rimraf": {"required": "~2.6.2", "stable": "3.0.2", "latest": "3.0.2"}, "iconv-lite": {"required": "~0.4.13", "stable": "0.5.1", "latest": "0.5.1"}, "coffeescript": {"required": "~1.10.0", "stable": "2.5.1", "latest": "99.999.99999"}, "eventemitter2": {"required": "~0.4.13", "stable": "6.3.1", "latest": "6.3.1"}, "glob": {"required": "~7.0.0", "stable": "7.1.6", "latest": "7.1.6"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 14834, "downloadsCount": 2813595.3333333335, "downloadsAcceleration": 3380.81388888889, "dependentsCount": 2051}, "maintenance": {"releasesFrequency": 0.8369863013698631, "commitsFrequency": 0.27904109589041093, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.718745909026329, "detail": {"quality": 0.9188654149895633, "popularity": 0.6183859595521284, "maintenance": 0.6475748533891861}}}}, {"vue-template-compiler": {"analyzedAt": "2020-05-07T01:15:49.920Z", "collected": {"metadata": {"name": "vue-template-compiler", "scope": "unscoped", "version": "2.6.11", "description": "template compiler for Vue 2.0", "keywords": ["vue", "compiler"], "date": "2019-12-13T19:58:29.159Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue.git"}, "links": {"npm": "https://www.npmjs.com/package/vue-template-compiler", "homepage": "https://github.com/vuejs/vue/tree/dev/packages/vue-template-compiler#readme", "repository": "https://github.com/vuejs/vue", "bugs": "https://github.com/vuejs/vue/issues"}, "license": "MIT", "dependencies": {"he": "^1.1.0", "de-indent": "^1.0.2"}, "devDependencies": {"vue": "file:../.."}, "releases": [{"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2018-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 23}], "readme": "# vue-template-compiler\n\n> This package is auto-generated. For pull requests please see [src/platforms/web/entry-compiler.js](https://github.com/vuejs/vue/tree/dev/src/platforms/web/entry-compiler.js).\n\nThis package can be used to pre-compile Vue 2.0 templates into render functions to avoid runtime-compilation overhead and CSP restrictions. In most cases you should be using it with [`vue-loader`](https://github.com/vuejs/vue-loader), you will only need it separately if you are writing build tools with very specific needs.\n\n## Installation\n\n``` bash\nnpm install vue-template-compiler\n```\n\n``` js\nconst compiler = require('vue-template-compiler')\n```\n\n## API\n\n### compiler.compile(template, [options])\n\nCompiles a template string and returns compiled JavaScript code. The returned result is an object of the following format:\n\n``` js\n{\n  ast: ?ASTElement, // parsed template elements to AST\n  render: string, // main render function code\n  staticRenderFns: Array<string>, // render code for static sub trees, if any\n  errors: Array<string> // template syntax errors, if any\n}\n```\n\nNote the returned function code uses `with` and thus cannot be used in strict mode code.\n\n#### Options\n\n- `outputSourceRange` *new in 2.6*\n  - Type: `boolean`\n  - Default: `false`\n\n  Set this to true will cause the `errors` returned in the compiled result become objects in the form of `{ msg, start, end }`. The `start` and `end` properties are numbers that mark the code range of the error source in the template. This can be passed on to the `compiler.generateCodeFrame` API to generate a code frame for the error.\n\n- `whitespace`\n  - Type: `string`\n  - Valid values: `'preserve' | 'condense'`\n  - Default: `'preserve'`\n\n  The default value `'preserve'` handles whitespaces as follows:\n\n  - A whitespace-only text node between element tags is condensed into a single space.\n  - All other whitespaces are preserved as-is.\n\n  If set to `'condense'`:\n\n  - A whitespace-only text node between element tags is removed if it contains new lines. Otherwise, it is condensed into a single space.\n  - Consecutive whitespaces inside a non-whitespace-only text node are condensed into a single space.\n\n  Using condense mode will result in smaller compiled code size and slightly improved performance. However, it will produce minor visual layout differences compared to plain HTML in certain cases.\n\n  **This option does not affect the `<pre>` tag.**\n\n  Example:\n\n  ``` html\n  <!-- source -->\n  <div>\n    <span>\n      foo\n    </span>   <span>bar</span>\n  </div>\n\n  <!-- whitespace: 'preserve' -->\n  <div> <span>\n    foo\n    </span> <span>bar</span> </div>\n\n  <!-- whitespace: 'condense' -->\n  <div><span> foo </span> <span>bar</span></div>\n  ```\n\n- `modules`\n\n  It's possible to hook into the compilation process to support custom template features. **However, beware that by injecting custom compile-time modules, your templates will not work with other build tools built on standard built-in modules, e.g `vue-loader` and `vueify`.**\n\n  An array of compiler modules. For details on compiler modules, refer to the `ModuleOptions` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js#L47-L59) and the [built-in modules](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/modules).\n\n- `directives`\n\n  An object where the key is the directive name and the value is a function that transforms an template AST node. For example:\n\n  ``` js\n  compiler.compile('<div v-test></div>', {\n    directives: {\n      test (node, directiveMeta) {\n        // transform node based on directiveMeta\n      }\n    }\n  })\n  ```\n\n  By default, a compile-time directive will extract the directive and the directive will not be present at runtime. If you want the directive to also be handled by a runtime definition, return `true` in the transform function.\n\n  Refer to the implementation of some [built-in compile-time directives](https://github.com/vuejs/vue/tree/dev/src/platforms/web/compiler/directives).\n\n- `preserveWhitespace` **Deprecated since 2.6**\n  - Type: `boolean`\n  - Default: `true`\n\n  By default, the compiled render function preserves all whitespace characters between HTML tags. If set to `false`, whitespace between tags will be ignored. This can result in slightly better performance but may affect layout for inline elements.\n\n---\n\n### compiler.compileToFunctions(template)\n\nSimilar to `compiler.compile`, but directly returns instantiated functions:\n\n``` js\n{\n  render: Function,\n  staticRenderFns: Array<Function>\n}\n```\n\nThis is only useful at runtime with pre-configured builds, so it doesn't accept any compile-time options. In addition, this method uses `new Function()` so it is not CSP-compliant.\n\n---\n\n### compiler.ssrCompile(template, [options])\n\n> 2.4.0+\n\nSame as `compiler.compile` but generates SSR-specific render function code by optimizing parts of the template into string concatenation in order to improve SSR performance.\n\nThis is used by default in `vue-loader@>=12` and can be disabled using the [`optimizeSSR`](https://vue-loader.vuejs.org/en/options.html#optimizessr) option.\n\n---\n\n### compiler.ssrCompileToFunctions(template)\n\n> 2.4.0+\n\nSame as `compiler.compileToFunction` but generates SSR-specific render function code by optimizing parts of the template into string concatenation in order to improve SSR performance.\n\n---\n\n### compiler.parseComponent(file, [options])\n\nParse a SFC (single-file component, or `*.vue` file) into a descriptor (refer to the `SFCDescriptor` type in [flow declarations](https://github.com/vuejs/vue/blob/dev/flow/compiler.js)). This is used in SFC build tools like `vue-loader` and `vueify`.\n\n---\n\n### compiler.generateCodeFrame(template, start, end)\n\nGenerate a code frame that highlights the part in `template` defined by `start` and `end`. Useful for error reporting in higher-level tooling.\n\n#### Options\n\n#### `pad`\n\n`pad` is useful when you are piping the extracted content into other pre-processors, as you will get correct line numbers or character indices if there are any syntax errors.\n\n- with `{ pad: \"line\" }`, the extracted content for each block will be prefixed with one newline for each line in the leading content from the original file to ensure that the line numbers align with the original file.\n- with `{ pad: \"space\" }`, the extracted content for each block will be prefixed with one space for each character in the leading content from the original file to ensure that the character count remains the same as the original file."}, "npm": {"downloads": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 407859}, {"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 1996565}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 9085713}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 25583541}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 41033492}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 67012342}], "dependentsCount": 1755, "starsCount": 21}, "github": {"homepage": "http://vuejs.org", "starsCount": 163388, "forksCount": 24709, "subscribersCount": 6146, "issues": {"count": 10773, "openCount": 498, "distribution": {"3600": 4218, "10800": 1263, "32400": 1435, "97200": 1110, "291600": 696, "874800": 572, "2624400": 393, "7873200": 327, "23619600": 371, "70858800": 338, "212576400": 50}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 2292}, {"username": "vue-bot", "commitsCount": 67}, {"username": "Hanks10100", "commitsCount": 47}, {"username": "defcc", "commitsCount": 37}, {"username": "kazupon", "commitsCount": 32}, {"username": "posva", "commitsCount": 29}, {"username": "HerringtonDarkholme", "commitsCount": 25}, {"username": "ktsn", "commitsCount": 25}, {"username": "javoski", "commitsCount": 23}, {"username": "Kingwl", "commitsCount": 15}, {"username": "gebilaoxiong", "commitsCount": 15}, {"username": "jkzing", "commitsCount": 15}, {"username": "Jinjiang", "commitsCount": 14}, {"username": "S-YOU", "commitsCount": 11}, {"username": "blake-newman", "commitsCount": 11}, {"username": "chrisvfritz", "commitsCount": 11}, {"username": "clarkdo", "commitsCount": 11}, {"username": "phanan", "commitsCount": 11}, {"username": "Justineo", "commitsCount": 10}, {"username": "HcySunYang", "commitsCount": 8}, {"username": "kaorun343", "commitsCount": 8}, {"username": "sodatea", "commitsCount": 8}, {"username": "KaelWD", "commitsCount": 7}, {"username": "dsonet", "commitsCount": 5}, {"username": "fnlctrl", "commitsCount": 4}, {"username": "imyzf", "commitsCount": 4}, {"username": "nickmessing", "commitsCount": 4}, {"username": "shasharoman", "commitsCount": 4}, {"username": "ulivz", "commitsCount": 4}, {"username": "znck", "commitsCount": 4}, {"username": "KingMario", "commitsCount": 3}, {"username": "bluemsn", "commitsCount": 3}, {"username": "felixbuenemann", "commitsCount": 3}, {"username": "liximomo", "commitsCount": 3}, {"username": "lzxb", "commitsCount": 3}, {"username": "mingmingwon", "commitsCount": 3}, {"username": "pkaminski", "commitsCount": 3}, {"username": "privatenumber", "commitsCount": 3}, {"username": "sqal", "commitsCount": 3}, {"username": "Alex-Sokolov", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 2}, {"username": "DaKoala", "commitsCount": 2}, {"username": "Gcaufy", "commitsCount": 2}, {"username": "HusamIbrahim", "commitsCount": 2}, {"username": "Itisfilipe", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "QingWei-Li", "commitsCount": 2}, {"username": "Shyam-Chen", "commitsCount": 2}, {"username": "asheb", "commitsCount": 2}, {"username": "bartlomieju", "commitsCount": 2}, {"username": "chriscasola", "commitsCount": 2}, {"username": "dejour", "commitsCount": 2}, {"username": "eddyerburgh", "commitsCount": 2}, {"username": "fenduru", "commitsCount": 2}, {"username": "g-plane", "commitsCount": 2}, {"username": "gzzhanghao", "commitsCount": 2}, {"username": "hikerpig", "commitsCount": 2}, {"username": "jingsam", "commitsCount": 2}, {"username": "lyhper", "commitsCount": 2}, {"username": "maciej-ka", "commitsCount": 2}, {"username": "neelance", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "superwf", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "william-pan", "commitsCount": 2}, {"username": "xdamman", "commitsCount": 2}, {"username": "yantene", "commitsCount": 2}, {"username": "zephraph", "commitsCount": 2}, {"username": "7006", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Magiccwl", "commitsCount": 1}, {"username": "Naartti", "commitsCount": 1}, {"username": "NataliaTepluhina", "commitsCount": 1}, {"username": "VitorLuizC", "commitsCount": 1}, {"username": "Xenonym", "commitsCount": 1}, {"username": "ahaoboy", "commitsCount": 1}, {"username": "ahus1", "commitsCount": 1}, {"username": "alanmatw", "commitsCount": 1}, {"username": "bakugod", "commitsCount": 1}, {"username": "decadef20", "commitsCount": 1}, {"username": "dennishzg", "commitsCount": 1}, {"username": "eltociear", "commitsCount": 1}, {"username": "evillt", "commitsCount": 1}, {"username": "flyyang", "commitsCount": 1}, {"username": "git-nkliyc", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "hyandell", "commitsCount": 1}, {"username": "jagannathBhat", "commitsCount": 1}, {"username": "lessfish", "commitsCount": 1}, {"username": "mateusvelleda", "commitsCount": 1}, {"username": "mcmillenb", "commitsCount": 1}, {"username": "msidolphin", "commitsCount": 1}, {"username": "pikax", "commitsCount": 1}, {"username": "rodrigograca31", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "tlebel", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 0}, {"from": "2020-04-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 2}, {"from": "2020-02-07T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 18}, {"from": "2019-11-09T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 39}, {"from": "2019-05-08T00:00:00.000Z", "to": "2020-05-07T00:00:00.000Z", "count": 86}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "ci/circleci: test-cover", "state": "success"}, {"context": "ci/circleci: test-e2e", "state": "success"}, {"context": "ci/circleci: test-ssr-weex", "state": "success"}, {"context": "ci/circleci: lint-flow-types", "state": "success"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 6524, "testsSize": 2046}, "badges": [{"urls": {"original": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg?sanitize=true", "service": "https://circleci.com/gh/vuejs/vue/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg?sanitize=true", "service": "https://codecov.io/github/vuejs/vue/branch/dev/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.svg", "content": "https://img.shields.io/codecov/c/github/vuejs/vue/dev.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/dm/vue.svg", "content": "https://img.shields.io/npm/dm/vue.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/v/vue.svg", "content": "https://img.shields.io/npm/v/vue.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/vue.svg?sanitize=true", "shields": "https://img.shields.io/npm/l/vue.svg", "content": "https://img.shields.io/npm/l/vue.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-router.svg", "shields": "https://img.shields.io/npm/v/vue-router.svg", "content": "https://img.shields.io/npm/v/vue-router.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vuex.svg", "shields": "https://img.shields.io/npm/v/vuex.svg", "content": "https://img.shields.io/npm/v/vuex.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/@vue/cli.svg", "shields": "https://img.shields.io/npm/v/@vue/cli.svg", "content": "https://img.shields.io/npm/v/@vue/cli.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-loader.svg", "shields": "https://img.shields.io/npm/v/vue-loader.svg", "content": "https://img.shields.io/npm/v/vue-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-server-renderer.svg", "shields": "https://img.shields.io/npm/v/vue-server-renderer.svg", "content": "https://img.shields.io/npm/v/vue-server-renderer.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-class-component.svg", "shields": "https://img.shields.io/npm/v/vue-class-component.svg", "content": "https://img.shields.io/npm/v/vue-class-component.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-rx.svg", "shields": "https://img.shields.io/npm/v/vue-rx.svg", "content": "https://img.shields.io/npm/v/vue-rx.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.6954999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 194363, "downloadsCount": 8527847, "downloadsAcceleration": 40907.50734398781, "dependentsCount": 1755}, "maintenance": {"releasesFrequency": 0.666095890410959, "commitsFrequency": 0.9007739726027397, "openIssues": 1, "issuesDistribution": 0.8096681281463941}}, "score": {"final": 0.8978210090477428, "detail": {"quality": 0.9376748473180523, "popularity": 0.7646505529020224, "maintenance": 0.996831032390341}}}}, {"eslint-plugin-jsx-a11y": {"analyzedAt": "2020-06-15T19:12:29.658Z", "collected": {"metadata": {"name": "eslint-plugin-jsx-a11y", "scope": "unscoped", "version": "6.2.3", "description": "Static AST checker for accessibility rules on JSX elements.", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "a11y", "accessibility", "jsx"], "date": "2019-07-01T04:24:58.516Z", "author": {"name": "Ethan Cohen"}, "publisher": {"username": "jessebeach", "email": "splendidnoise@gmail.com"}, "maintainers": [{"username": "evcohen", "email": "ethanvcohen@gmail.com"}, {"username": "jessebeach", "email": "splendidnoise@gmail.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/evcohen/eslint-plugin-jsx-a11y.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-jsx-a11y", "homepage": "https://github.com/evcohen/eslint-plugin-jsx-a11y#readme", "repository": "https://github.com/evcohen/eslint-plugin-jsx-a11y", "bugs": "https://github.com/evcohen/eslint-plugin-jsx-a11y/issues"}, "license": "MIT", "dependencies": {"@babel/runtime": "^7.4.5", "aria-query": "^3.0.0", "array-includes": "^3.0.3", "ast-types-flow": "^0.0.7", "axobject-query": "^2.0.2", "damerau-levenshtein": "^1.0.4", "emoji-regex": "^7.0.2", "has": "^1.0.3", "jsx-ast-utils": "^2.2.1"}, "devDependencies": {"@babel/cli": "^7.4.4", "@babel/core": "^7.0.0", "@babel/plugin-transform-flow-strip-types": "^7.2.3", "babel-eslint": "^10.0.1", "babel-jest": "^24.0.0", "babel-preset-airbnb": "^4.0.0", "coveralls": "^3.0.1", "eslint": "^3 || ^4 || ^5 || ^6", "eslint-config-airbnb-base": "^13.0.0", "eslint-plugin-flowtype": "^3.5.0", "eslint-plugin-import": "^2.18.0", "estraverse": "^4.2.0", "expect": "^24.3.1", "flow-bin": "^0.102.0", "in-publish": "^2.0.0", "jest": "^24.0.0", "jscodeshift": "^0.6.0", "minimist": "^1.2.0", "object.assign": "^4.1.0", "rimraf": "^2.6.3", "safe-publish-latest": "^1.1.1", "to-ast": "^1.0.0"}, "peerDependencies": {"eslint": "^3 || ^4 || ^5 || ^6"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 3}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "<p align=\"center\">\n  <a href=\"https://travis-ci.org/evcohen/eslint-plugin-jsx-a11y\">\n    <img src=\"https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master\"\n         alt=\"build status\">\n  </a>\n  <a href=\"https://npmjs.org/package/eslint-plugin-jsx-a11y\">\n    <img src=\"https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg\"\n         alt=\"npm version\">\n  </a>\n  <a href=\"https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg\"\n         alt=\"license\">\n  </a>\n  <a href='https://coveralls.io/github/evcohen/eslint-plugin-jsx-a11y?branch=master'>\n    <img src='https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master' alt='Coverage Status' />\n  </a>\n  <a href='https://npmjs.org/package/eslint-plugin-jsx-a11y'>\n    <img src='https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg'\n    alt='Total npm downloads' />\n  </a>\n</p>\n\n# eslint-plugin-jsx-a11y\n\nStatic AST checker for accessibility rules on JSX elements.\n\n## Why?\nRyan Florence built out this awesome runtime-analysis tool called [react-a11y](https://github.com/reactjs/react-a11y). It is super useful. However, since you're probably already using linting in your project, this plugin comes for free and closer to the actual development process. Pairing this plugin with an editor lint plugin, you can bake accessibility standards into your application in real-time.\n\n**Note**: This project does not *replace* react-a11y, but can and should be used in conjunction with it. Static analysis tools cannot determine values of variables that are being placed in props before runtime, so linting will not fail if that value is undefined and/or does not pass the lint rule.\n\n## Installation\n\n**If you are installing this plugin via `eslint-config-airbnb`, please follow [these instructions](https://github.com/airbnb/javascript/tree/master/packages/eslint-config-airbnb#eslint-config-airbnb-1).**\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```sh\n# npm\nnpm install eslint --save-dev\n\n# yarn\nyarn add eslint --dev\n```\n\nNext, install `eslint-plugin-jsx-a11y`:\n\n```sh\n# npm\nnpm install eslint-plugin-jsx-a11y --save-dev\n\n# yarn\nyarn add eslint-plugin-jsx-a11y --dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag in npm, or the `global` prefix in yarn) then you must also install `eslint-plugin-jsx-a11y` globally.\n\n## Usage\n\nAdd `jsx-a11y` to the plugins section of your `.eslintrc` configuration file. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\n    \"jsx-a11y\"\n  ]\n}\n```\n\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jsx-a11y/rule-name\": 2\n  }\n}\n```\n\n\nYou can also enable all the recommended or strict rules at once.\nAdd `plugin:jsx-a11y/recommended` or `plugin:jsx-a11y/strict` in `extends`:\n\n```json\n{\n  \"extends\": [\n    \"plugin:jsx-a11y/recommended\"\n  ]\n}\n```\n\n## Supported Rules\n\n- [accessible-emoji](docs/rules/accessible-emoji.md): Enforce emojis are wrapped in <span> and provide screenreader access.\n- [alt-text](docs/rules/alt-text.md): Enforce all elements that require alternative text have meaningful information to relay back to end user.\n- [anchor-has-content](docs/rules/anchor-has-content.md): Enforce all anchors to contain accessible content.\n- [anchor-is-valid](docs/rules/anchor-is-valid.md): Enforce all anchors are valid, navigable elements.\n- [aria-activedescendant-has-tabindex](docs/rules/aria-activedescendant-has-tabindex.md): Enforce elements with aria-activedescendant are tabbable.\n- [aria-props](docs/rules/aria-props.md): Enforce all `aria-*` props are valid.\n- [aria-proptypes](docs/rules/aria-proptypes.md): Enforce ARIA state and property values are valid.\n- [aria-role](docs/rules/aria-role.md): Enforce that elements with ARIA roles must use a valid, non-abstract ARIA role.\n- [aria-unsupported-elements](docs/rules/aria-unsupported-elements.md): Enforce that elements that do not support ARIA roles, states, and properties do not have those attributes.\n- [click-events-have-key-events](docs/rules/click-events-have-key-events.md): Enforce a clickable non-interactive element has at least one keyboard event listener.\n- [heading-has-content](docs/rules/heading-has-content.md): Enforce heading (`h1`, `h2`, etc) elements contain accessible content.\n- [html-has-lang](docs/rules/html-has-lang.md): Enforce `<html>` element has `lang` prop.\n- [iframe-has-title](docs/rules/iframe-has-title.md): Enforce iframe elements have a title attribute.\n- [img-redundant-alt](docs/rules/img-redundant-alt.md): Enforce `<img>` alt prop does not contain the word \"image\", \"picture\", or \"photo\".\n- [interactive-supports-focus](docs/rules/interactive-supports-focus.md): Enforce that elements with interactive handlers like `onClick` must be focusable.\n- [label-has-associated-control](docs/rules/label-has-associated-control.md): Enforce that a `label` tag has a text label and an associated control.\n- [lang](docs/rules/lang.md): Enforce lang attribute has a valid value.\n- [media-has-caption](docs/rules/media-has-caption.md): Enforces that `<audio>` and `<video>` elements must have a `<track>` for captions.\n- [mouse-events-have-key-events](docs/rules/mouse-events-have-key-events.md): Enforce that `onMouseOver`/`onMouseOut` are accompanied by `onFocus`/`onBlur` for keyboard-only users.\n- [no-access-key](docs/rules/no-access-key.md): Enforce that the `accessKey` prop is not used on any element to avoid complications with keyboard commands used by a screenreader.\n- [no-autofocus](docs/rules/no-autofocus.md): Enforce autoFocus prop is not used.\n- [no-distracting-elements](docs/rules/no-distracting-elements.md): Enforce distracting elements are not used.\n- [no-interactive-element-to-noninteractive-role](docs/rules/no-interactive-element-to-noninteractive-role.md): Interactive elements should not be assigned non-interactive roles.\n- [no-noninteractive-element-interactions](docs/rules/no-noninteractive-element-interactions.md): Non-interactive elements should not be assigned mouse or keyboard event listeners.\n- [no-noninteractive-element-to-interactive-role](docs/rules/no-noninteractive-element-to-interactive-role.md): Non-interactive elements should not be assigned interactive roles.\n- [no-noninteractive-tabindex](docs/rules/no-noninteractive-tabindex.md): `tabIndex` should only be declared on interactive elements.\n- [no-onchange](docs/rules/no-onchange.md): Enforce usage of `onBlur` over `onChange` on select menus for accessibility.\n- [no-redundant-roles](docs/rules/no-redundant-roles.md): Enforce explicit role property is not the same as implicit/default role property on element.\n- [no-static-element-interactions](docs/rules/no-static-element-interactions.md): Enforce that non-interactive, visible elements (such as `<div>`) that have click handlers use the role attribute.\n- [role-has-required-aria-props](docs/rules/role-has-required-aria-props.md): Enforce that elements with ARIA roles must have all required attributes for that role.\n- [role-supports-aria-props](docs/rules/role-supports-aria-props.md): Enforce that elements with explicit or implicit roles defined contain only `aria-*` properties supported by that `role`.\n- [scope](docs/rules/scope.md): Enforce `scope` prop is only used on `<th>` elements.\n- [tabindex-no-positive](docs/rules/tabindex-no-positive.md): Enforce `tabIndex` value is not greater than zero.\n\n### Difference between 'recommended' and 'strict' mode\n\nRule | Recommended | Strict\n------------ | ------------- | -------------\n[accessible-emoji](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/accessible-emoji.md) | error | error\n[alt-text](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/alt-text.md) | error | error\n[anchor-has-content](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-has-content.md) | error | error\n[anchor-is-valid](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/anchor-is-valid.md) | error | error\n[aria-activedescendant-has-tabindex](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-activedescendant-has-tabindex.md) | error | error\n[aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-props.md) | error | error\n[aria-proptypes](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-proptypes.md) | error | error\n[aria-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-role.md) | error | error\n[aria-unsupported-elements](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/aria-unsupported-elements.md) | error | error\n[click-events-have-key-events](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/click-events-have-key-events.md) | error | error\n[heading-has-content](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/heading-has-content.md) | error | error\n[html-has-lang](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/html-has-lang.md) | error | error\n[iframe-has-title](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/iframe-has-title.md) | error | error\n[img-redundant-alt](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/img-redundant-alt.md) | error | error\n[interactive-supports-focus](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/interactive-supports-focus.md) | error | error\n[label-has-associated-control](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/label-has-associated-control.md) | error | error\n[media-has-caption](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/media-has-caption.md) | error | error\n[mouse-events-have-key-events](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/mouse-events-have-key-events.md) | error | error\n[no-access-key](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-access-key.md) | error | error\n[no-autofocus](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-autofocus.md) | error | error\n[no-distracting-elements](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-distracting-elements.md) | error | error\n[no-interactive-element-to-noninteractive-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-interactive-element-to-noninteractive-role.md) | error, with options | error\n[no-noninteractive-element-interactions](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-interactions.md) | error, with options | error\n[no-noninteractive-element-to-interactive-role](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-element-to-interactive-role.md) | error, with options | error\n[no-noninteractive-tabindex](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-noninteractive-tabindex.md) | error, with options | error\n[no-onchange](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-onchange.md) | error | error\n[no-redundant-roles](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-redundant-roles.md) | error | error\n[no-static-element-interactions](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/no-static-element-interactions.md) | error, with options | error\n[role-has-required-aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-has-required-aria-props.md) | error | error\n[role-supports-aria-props](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/role-supports-aria-props.md) | error | error\n[scope](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/scope.md) | error, with options | error\n[tabindex-no-positive](https://github.com/evcohen/eslint-plugin-jsx-a11y/blob/master/docs/rules/tabindex-no-positive.md) | error | error\n\n\nThe following rules have extra options when in *recommended* mode:\n\n#### no-interactive-element-to-noninteractive-role\n```\n'jsx-a11y/no-interactive-element-to-noninteractive-role': [\n  'error',\n  {\n    tr: ['none', 'presentation'],\n  },\n]\n```\n\n#### no-noninteractive-element-interactions\n```\n'jsx-a11y/no-noninteractive-element-interactions': [\n  'error',\n  {\n    handlers: [\n      'onClick',\n      'onMouseDown',\n      'onMouseUp',\n      'onKeyPress',\n      'onKeyDown',\n      'onKeyUp',\n    ],\n  },\n]\n```\n\n#### no-noninteractive-element-to-interactive-role\n```\n'jsx-a11y/no-noninteractive-element-to-interactive-role': [\n  'error',\n  {\n    ul: [\n      'listbox',\n      'menu',\n      'menubar',\n      'radiogroup',\n      'tablist',\n      'tree',\n      'treegrid',\n    ],\n    ol: [\n      'listbox',\n      'menu',\n      'menubar',\n      'radiogroup',\n      'tablist',\n      'tree',\n      'treegrid',\n    ],\n    li: ['menuitem', 'option', 'row', 'tab', 'treeitem'],\n    table: ['grid'],\n    td: ['gridcell'],\n  },\n]\n```\n\n#### no-noninteractive-tabindex\n```\n'jsx-a11y/no-noninteractive-tabindex': [\n  'error',\n  {\n    tags: [],\n    roles: ['tabpanel'],\n  },\n]\n```\n\n#### no-static-element-interactions\n```\n'jsx-a11y/no-noninteractive-element-interactions': [\n  'error',\n  {\n    handlers: [\n      'onClick',\n      'onMouseDown',\n      'onMouseUp',\n      'onKeyPress',\n      'onKeyDown',\n      'onKeyUp',\n    ],\n  },\n]\n```\n\n## Creating a new rule\n\nIf you are developing new rules for this project, you can use the `create-rule`\nscript to scaffold the new files.\n\n```\n$ ./scripts/create-rule.js my-new-rule\n```\n\n## Some background on WAI-ARIA, the AX Tree and Browsers\n\n### Accessibility API\nAn operating system will provide an accessibility API that maps application state and content onto input/output controllers such as a screen reader, braille device, keyboard, etc.\n\nThese APIs were developed as computer interfaces shifted from buffers (which are text-based and inherently quite accessible) to graphical user interfaces (GUIs). The first attempts to make GUIs accessible involved raster image parsing to recognize characters, words, etc. This information was stored in a parallel buffer and made accessible to assistive technology (AT) devices.\n\nAs GUIs became more complex, the raster parsing approach became untenable. Accessibility APIs were developed to replace them. Check out [NSAccessibility (AXAPI)](https://developer.apple.com/library/mac/documentation/Cocoa/Reference/ApplicationKit/Protocols/NSAccessibility_Protocol/index.html) for an example. See [Core Accessibility API Mappings 1.1](https://www.w3.org/TR/core-aam-1.1/) for more details.\n\n### Browsers\nBrowsers support an Accessibility API on a per operating system basis. For instance, Firefox implements the MSAA accessibility API on Windows, but does not implement the AXAPI on OSX.\n\n### The Accessibility (AX) Tree & DOM\nFrom the [W3 Core Accessibility API Mappings 1.1](https://www.w3.org/TR/core-aam-1.1/#intro_treetypes)\n\n> The accessibility tree and the DOM tree are parallel structures. Roughly speaking the accessibility tree is a subset of the DOM tree. It includes the user interface objects of the user agent and the objects of the document. Accessible objects are created in the accessibility tree for every DOM element that should be exposed to assistive technology, either because it may fire an accessibility event or because it has a property, relationship or feature which needs to be exposed. Generally, if something can be trimmed out it will be, for reasons of performance and simplicity. For example, a <span> with just a style change and no semantics may not get its own accessible object, but the style change will be exposed by other means.\n\nBrowser vendors are beginning to expose the AX Tree through inspection tools. Chrome has an experiment available to enable their inspection tool.\n\nYou can also see a text-based version of the AX Tree in Chrome in the stable release version.\n\n#### Viewing the AX Tree in Chrome\n  1. Navigate to `chrome://accessibility/` in Chrome.\n  1. Toggle the `accessibility off` link for any tab that you want to inspect.\n  1. A link labeled `show accessibility tree` will appear; click this link.\n  1. Balk at the wall of text that gets displayed, but then regain your conviction.\n  1. Use the browser's find command to locate strings and values in the wall of text.\n\n### Pulling it all together\nA browser constructs an AX Tree as a subset of the DOM. ARIA heavily informs the properties of this AX Tree. This AX Tree is exposed to the system level Accessibility API which mediates assistive technology agents.\n\nWe model ARIA in the [aria-query](https://github.com/a11yance/aria-query) project. We model AXObjects (that comprise the AX Tree) in the [axobject-query](https://github.com/A11yance/axobject-query) project. The goal of the WAI-ARIA specification is to be a complete declarative interface to the AXObject model. The [in-draft 1.2 version](https://github.com/w3c/aria/issues?q=is%3Aissue+is%3Aopen+label%3A%22ARIA+1.2%22) is moving towards this goal. But until then, we must consider the semantics constructs afforded by ARIA as well as those afforded by the AXObject model (AXAPI) in order to determine how HTML can be used to express user interface affordances to assistive technology users.\n\n## License\n\neslint-plugin-jsx-a11y is licensed under the [MIT License](LICENSE.md)."}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 168403}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 3930224}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 16187159}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 51106306}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 90099347}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 165716648}], "dependentsCount": 5330, "starsCount": 21}, "github": {"starsCount": 2016, "forksCount": 390, "subscribersCount": 43, "issues": {"count": 699, "openCount": 77, "distribution": {"3600": 107, "10800": 45, "32400": 50, "97200": 77, "291600": 67, "874800": 90, "2624400": 78, "7873200": 67, "23619600": 53, "70858800": 39, "212576400": 26}, "isDisabled": false}, "contributors": [{"username": "evcohen", "commitsCount": 226}, {"username": "jessebeach", "commitsCount": 160}, {"username": "ljharb", "commitsCount": 33}, {"username": "greenkeeper[bot]", "commitsCount": 20}, {"username": "WilcoFiers", "commitsCount": 8}, {"username": "markreay", "commitsCount": 7}, {"username": "TrevorBurnham", "commitsCount": 6}, {"username": "greenkeeperio-bot", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "AlmeroSteyn", "commitsCount": 4}, {"username": "hozefaj", "commitsCount": 4}, {"username": "qw-in", "commitsCount": 3}, {"username": "MichaelDeBoey", "commitsCount": 2}, {"username": "andrelmlins", "commitsCount": 2}, {"username": "anthony0030", "commitsCount": 2}, {"username": "badtant", "commitsCount": 2}, {"username": "leos", "commitsCount": 2}, {"username": "othree", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "tanmoyopenroot", "commitsCount": 2}, {"username": "vdh", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "Donaldini", "commitsCount": 1}, {"username": "EvHaus", "commitsCount": 1}, {"username": "FarooqAR", "commitsCount": 1}, {"username": "FranklinYu", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "Moeriki", "commitsCount": 1}, {"username": "YellowKirby", "commitsCount": 1}, {"username": "adamrneary", "commitsCount": 1}, {"username": "astorije", "commitsCount": 1}, {"username": "blackflame007", "commitsCount": 1}, {"username": "captDaylight", "commitsCount": 1}, {"username": "christianvuerings", "commitsCount": 1}, {"username": "csi-lk", "commitsCount": 1}, {"username": "darobin", "commitsCount": 1}, {"username": "dawsbot", "commitsCount": 1}, {"username": "dschaller", "commitsCount": 1}, {"username": "dustin-ruetz", "commitsCount": 1}, {"username": "eitanmk", "commitsCount": 1}, {"username": "eps1lon", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "greypants", "commitsCount": 1}, {"username": "hjylewis", "commitsCount": 1}, {"username": "ignatiusreza", "commitsCount": 1}, {"username": "imtsuki", "commitsCount": 1}, {"username": "ismail-syed", "commitsCount": 1}, {"username": "katharinafluch", "commitsCount": 1}, {"username": "liubko", "commitsCount": 1}, {"username": "mahendrakulkarni177", "commitsCount": 1}, {"username": "matijs", "commitsCount": 1}, {"username": "merlinpatt", "commitsCount": 1}, {"username": "michaeljaltamirano", "commitsCount": 1}, {"username": "mikecaulley", "commitsCount": 1}, {"username": "n-chardon", "commitsCount": 1}, {"username": "octatone", "commitsCount": 1}, {"username": "olitreadwell", "commitsCount": 1}, {"username": "pdhoopr", "commitsCount": 1}, {"username": "rastersysteme", "commitsCount": 1}, {"username": "rdela", "commitsCount": 1}, {"username": "ryanvanoss", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "simPod", "commitsCount": 1}, {"username": "sohkai", "commitsCount": 1}, {"username": "straker", "commitsCount": 1}, {"username": "svinkle", "commitsCount": 1}, {"username": "tanipani", "commitsCount": 1}, {"username": "timtyrrell", "commitsCount": 1}, {"username": "tricoder42", "commitsCount": 1}, {"username": "walokra", "commitsCount": 1}, {"username": "wascloud", "commitsCount": 1}, {"username": "wyattdanger", "commitsCount": 1}, {"username": "xamfoo", "commitsCount": 1}, {"username": "yangli1990", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yepninja", "commitsCount": 1}, {"username": "zargold", "commitsCount": 1}, {"username": "zburke", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 6}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 13}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 51}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 17575, "testsSize": 307532, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master", "service": "https://api.travis-ci.org/evcohen/eslint-plugin-jsx-a11y.svg?branch=master", "shields": "https://img.shields.io/travis/evcohen/eslint-plugin-jsx-a11y/master.svg", "content": "https://img.shields.io/travis/evcohen/eslint-plugin-jsx-a11y/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg", "shields": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/l/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master%27", "service": "https://coveralls.io/repos/github/evcohen/eslint-plugin-jsx-a11y/badge.svg?branch=master'", "shields": "https://img.shields.io/coveralls/evcohen/eslint-plugin-jsx-a11y/master'.svg", "content": "https://img.shields.io/coveralls/evcohen/eslint-plugin-jsx-a11y/master'.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master'"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg%27", "shields": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.svg", "content": "https://img.shields.io/npm/dt/eslint-plugin-jsx-a11y.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["eslint"], "coverage": 0.99, "outdatedDependencies": {"aria-query": {"required": "^3.0.0", "stable": "4.0.2", "latest": "4.0.2"}, "emoji-regex": {"required": "^7.0.2", "stable": "9.0.0", "latest": "9.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 0.5555555555555556, "branding": 0.6}, "popularity": {"communityInterest": 2551, "downloadsCount": 17035435.333333332, "downloadsAcceleration": 33021.86676179603, "dependentsCount": 5330}, "maintenance": {"releasesFrequency": 0.24657534246575347, "commitsFrequency": 0.868167808219178, "openIssues": 1, "issuesDistribution": 0.2143823884634975}}, "score": {"final": 0.7999542057879643, "detail": {"quality": 0.9525162305164312, "popularity": 0.7037036006848197, "maintenance": 0.7654373611238514}}}}, {"moment": {"analyzedAt": "2020-05-20T06:48:12.614Z", "collected": {"metadata": {"name": "moment", "scope": "unscoped", "version": "2.26.0", "description": "Parse, validate, manipulate, and display dates", "keywords": ["moment", "date", "time", "parse", "format", "validate", "i18n", "l10n", "ender"], "date": "2020-05-20T06:46:22.568Z", "author": {"name": "Iskren Ivov Chernev", "email": "iskren.chernev@gmail.com", "url": "https://github.com/ichernev", "username": "ichernev"}, "publisher": {"username": "marwahaha", "email": "marwahaha@berkeley.edu"}, "maintainers": [{"username": "ichernev", "email": "iskren.chernev@gmail.com"}, {"username": "maggiepint", "email": "maggiepint@gmail.com"}, {"username": "marwahaha", "email": "marwahaha@berkeley.edu"}, {"username": "mj1856", "email": "mj1856@hotmail.com"}, {"username": "timrwood", "email": "washwithcare@gmail.com"}], "contributors": [{"name": "Tim Wood", "email": "washwithcare@gmail.com", "url": "http://timwoodcreates.com/"}, {"name": "Rocky Meza", "url": "http://rockymeza.com"}, {"name": "Matt Johnson", "email": "mj1856@hotmail.com", "url": "http://codeofmatt.com"}, {"name": "Isaac Cambron", "email": "isaac@isaaccambron.com", "url": "http://isaaccambron.com"}, {"name": "Andre Polykanine", "email": "andre@oire.org", "url": "https://github.com/oire"}], "repository": {"type": "git", "url": "git+https://github.com/moment/moment.git"}, "links": {"npm": "https://www.npmjs.com/package/moment", "homepage": "https://momentjs.com", "repository": "https://github.com/moment/moment", "bugs": "https://github.com/moment/moment/issues"}, "license": "MIT", "devDependencies": {"benchmark": "latest", "coveralls": "latest", "cross-env": "^6.0.3", "es6-promise": "latest", "eslint": "~6", "grunt": "latest", "grunt-benchmark": "latest", "grunt-cli": "latest", "grunt-contrib-clean": "latest", "grunt-contrib-concat": "latest", "grunt-contrib-copy": "latest", "grunt-contrib-uglify": "latest", "grunt-contrib-watch": "latest", "grunt-env": "latest", "grunt-exec": "latest", "grunt-karma": "latest", "grunt-nuget": "latest", "grunt-string-replace": "latest", "karma": "latest", "karma-chrome-launcher": "latest", "karma-firefox-launcher": "latest", "karma-qunit": "latest", "karma-sauce-launcher": "latest", "load-grunt-tasks": "latest", "node-qunit": "latest", "nyc": "latest", "prettier": "latest", "rollup": "latest", "typescript": "^1.8.10", "typescript3": "npm:typescript@^3.1.6", "uglify-js": "latest"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "[![Join the chat at https://gitter.im/moment/moment](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/moment/moment?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![NPM version][npm-version-image]][npm-url] [![NPM downloads][npm-downloads-image]][downloads-url] [![MIT License][license-image]][license-url] [![Build Status][travis-image]][travis-url]\n[![Coverage Status](https://coveralls.io/repos/moment/moment/badge.svg?branch=develop)](https://coveralls.io/r/moment/moment?branch=develop)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_shield)\n[![SemVer compatibility](https://api.dependabot.com/badges/compatibility_score?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)](https://dependabot.com/compatibility-score.html?dependency-name=moment&package-manager=npm_and_yarn&version-scheme=semver)\n\nA lightweight JavaScript date library for parsing, validating, manipulating, and formatting dates.\n\n**[Documentation](http://momentjs.com/docs/)**\n\n## Port to ECMAScript 6 (version 2.10.0)\n\nMoment 2.10.0 does not bring any new features, but the code is now written in\nECMAScript 6 modules and placed inside `src/`. Previously `moment.js`, `locale/*.js` and\n`test/moment/*.js`, `test/locale/*.js` contained the source of the project. Now\nthe source is in `src/`, temporary build (ECMAScript 5) files are placed under\n`build/umd/` (for running tests during development), and the `moment.js` and\n`locale/*.js` files are updated only on release.\n\nIf you want to use a particular revision of the code, make sure to run\n`grunt transpile update-index`, so `moment.js` and `locales/*.js` are synced\nwith `src/*`. We might place that in a commit hook in the future.\n\n## Upgrading to 2.0.0\n\nThere are a number of small backwards incompatible changes with version 2.0.0. [See the full descriptions here](https://gist.github.com/timrwood/e72f2eef320ed9e37c51#backwards-incompatible-changes)\n\n * Changed language ordinal method to return the number + ordinal instead of just the ordinal.\n\n * Changed two digit year parsing cutoff to match strptime.\n\n * Removed `moment#sod` and `moment#eod` in favor of `moment#startOf` and `moment#endOf`.\n\n * Removed `moment.humanizeDuration()` in favor of `moment.duration().humanize()`.\n\n * Removed the lang data objects from the top level namespace.\n\n * Duplicate `Date` passed to `moment()` instead of referencing it.\n\n## [Changelog](https://github.com/moment/moment/blob/develop/CHANGELOG.md)\n\n## [Contributing](https://github.com/moment/moment/blob/develop/CONTRIBUTING.md) [![Open Source Helpers](https://www.codetriage.com/moment/moment/badges/users.svg)](https://www.codetriage.com/moment/moment)\n\nWe're looking for co-maintainers! If you want to become a master of time please\nwrite to [ichernev](https://github.com/ichernev).\n\nIn addition to contributing code, you can help to triage issues. This can include reproducing bug reports, or asking for vital information such as version numbers or reproduction instructions. If you would like to start triaging issues, one easy way to get started is to [subscribe to moment/moment on CodeTriage](https://www.codetriage.com/moment/moment).\n\n### Frequently asked questions\n\nSee [FAQ.md](FAQ.md).\n\n## License\n\nMoment.js is freely distributable under the terms of the [MIT license](https://github.com/moment/moment/blob/develop/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmoment%2Fmoment?ref=badge_large)\n\n[license-image]: http://img.shields.io/badge/license-MIT-blue.svg?style=flat\n[license-url]: LICENSE\n\n[npm-url]: https://npmjs.org/package/moment\n[npm-version-image]: http://img.shields.io/npm/v/moment.svg?style=flat\n[npm-downloads-image]: http://img.shields.io/npm/dm/moment.svg?style=flat\n[downloads-url]: https://npmcharts.com/compare/moment?minimal=true\n\n[travis-url]: http://travis-ci.org/moment/moment\n[travis-image]: http://img.shields.io/travis/moment/moment/develop.svg?style=flat"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2327291}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 12221746}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 52440818}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 148099966}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 270394000}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 516204450}], "dependentsCount": 26535, "starsCount": 1032}, "github": {"homepage": "momentjs.com", "starsCount": 44025, "forksCount": 6606, "subscribersCount": 937, "issues": {"count": 5537, "openCount": 201, "distribution": {"3600": 519, "10800": 225, "32400": 313, "97200": 526, "291600": 601, "874800": 690, "2624400": 714, "7873200": 763, "23619600": 594, "70858800": 395, "212576400": 197}, "isDisabled": false}, "contributors": [{"username": "ichernev", "commitsCount": 710}, {"username": "timrwood", "commitsCount": 583}, {"username": "icambron", "commitsCount": 110}, {"username": "marwahaha", "commitsCount": 80}, {"username": "TracyGJG", "commitsCount": 35}, {"username": "ashsearle", "commitsCount": 31}, {"username": "caillou", "commitsCount": 21}, {"username": "igorlima", "commitsCount": 20}, {"username": "mbad0la", "commitsCount": 20}, {"username": "Xotic750", "commitsCount": 17}, {"username": "mj1856", "commitsCount": 17}, {"username": "nrbgt", "commitsCount": 16}, {"username": "maggiepint", "commitsCount": 15}, {"username": "jbleduigou", "commitsCount": 13}, {"username": "mrtnjrrtt", "commitsCount": 12}, {"username": "timfish", "commitsCount": 12}, {"username": "weldan", "commitsCount": 12}, {"username": "kkopanidis", "commitsCount": 11}, {"username": "vnathalye", "commitsCount": 11}, {"username": "kruyvanna", "commitsCount": 10}, {"username": "mdxs", "commitsCount": 9}, {"username": "wi-ski", "commitsCount": 9}, {"username": "eternicode", "commitsCount": 8}, {"username": "DamianFekete", "commitsCount": 7}, {"username": "alexstrat", "commitsCount": 7}, {"username": "fbonzon", "commitsCount": 7}, {"username": "raphamorim", "commitsCount": 7}, {"username": "szelga", "commitsCount": 7}, {"username": "vajradog", "commitsCount": 7}, {"username": "dandv", "commitsCount": 6}, {"username": "flugger", "commitsCount": 6}, {"username": "guybedford", "commitsCount": 6}, {"username": "ianwremmel", "commitsCount": 6}, {"username": "jeeeyul", "commitsCount": 6}, {"username": "jisaacks", "commitsCount": 6}, {"username": "joelmheim", "commitsCount": 6}, {"username": "mar-chi-pan", "commitsCount": 6}, {"username": "nusretparlak", "commitsCount": 6}, {"username": "sigurdga", "commitsCount": 6}, {"username": "tcarlsen", "commitsCount": 6}, {"username": "wyantb", "commitsCount": 6}, {"username": "ypomortsev", "commitsCount": 6}, {"username": "Alanscut", "commitsCount": 5}, {"username": "FourwingsY", "commitsCount": 5}, {"username": "Gobie", "commitsCount": 5}, {"username": "WikiDiscoverer", "commitsCount": 5}, {"username": "armendarabyan", "commitsCount": 5}, {"username": "brianwyantora", "commitsCount": 5}, {"username": "cwohlman", "commitsCount": 5}, {"username": "fduch2k", "commitsCount": 5}, {"username": "ibnesayeed", "commitsCount": 5}, {"username": "johnnyreilly", "commitsCount": 5}, {"username": "kikoanis", "commitsCount": 5}, {"username": "robgallen", "commitsCount": 5}, {"username": "skakz", "commitsCount": 5}, {"username": "vroy", "commitsCount": 5}, {"username": "JLHwung", "commitsCount": 4}, {"username": "SwamWithTurtles", "commitsCount": 4}, {"username": "XueWei", "commitsCount": 4}, {"username": "akarelas", "commitsCount": 4}, {"username": "andrei-cocorean", "commitsCount": 4}, {"username": "antonellopasella", "commitsCount": 4}, {"username": "calebcauthon", "commitsCount": 4}, {"username": "cmyers", "commitsCount": 4}, {"username": "evoL", "commitsCount": 4}, {"username": "floydpink", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "jawish", "commitsCount": 4}, {"username": "jgwhite", "commitsCount": 4}, {"username": "jonbca", "commitsCount": 4}, {"username": "josephjaniga", "commitsCount": 4}, {"username": "kshitijb", "commitsCount": 4}, {"username": "mirontoli", "commitsCount": 4}, {"username": "mmozuras", "commitsCount": 4}, {"username": "pimterry", "commitsCount": 4}, {"username": "sbstp", "commitsCount": 4}, {"username": "skfd", "commitsCount": 4}, {"username": "sschueller", "commitsCount": 4}, {"username": "zemlanin", "commitsCount": 4}, {"username": "B0k0", "commitsCount": 3}, {"username": "Chyngyz", "commitsCount": 3}, {"username": "RIanDeLaCruz", "commitsCount": 3}, {"username": "afc163", "commitsCount": 3}, {"username": "alburthoffman", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "colindean", "commitsCount": 3}, {"username": "doedje", "commitsCount": 3}, {"username": "elad", "commitsCount": 3}, {"username": "eternalharvest", "commitsCount": 3}, {"username": "kevinzwhuang", "commitsCount": 3}, {"username": "massic80", "commitsCount": 3}, {"username": "mikeparas", "commitsCount": 3}, {"username": "nanomosfet", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "ozon1234", "commitsCount": 3}, {"username": "philjohnson789", "commitsCount": 3}, {"username": "sgorsh", "commitsCount": 3}, {"username": "socketpair", "commitsCount": 3}, {"username": "theawesomenayak", "commitsCount": 3}, {"username": "wernerm", "commitsCount": 3}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 17}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 67}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 117}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 122}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 131}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 4244, "testsSize": 7863540, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://coveralls.io/repos/moment/moment/badge.svg?branch=develop", "service": "https://coveralls.io/repos/moment/moment/badge.svg?branch=develop", "shields": "https://img.shields.io/coveralls/moment/moment/develop.svg", "content": "https://img.shields.io/coveralls/moment/moment/develop.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "develop"}}}, {"urls": {"original": "http://img.shields.io/npm/v/moment.svg?style=flat", "shields": "https://img.shields.io/npm/v/moment.svg", "content": "https://img.shields.io/npm/v/moment.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/moment.svg?style=flat", "shields": "https://img.shields.io/npm/dm/moment.svg", "content": "https://img.shields.io/npm/dm/moment.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "http://img.shields.io/travis/moment/moment/develop.svg?style=flat", "service": "https://api.travis-ci.org/moment/moment.svg?branch=develop", "shields": "https://img.shields.io/travis/moment/moment/develop.svg", "content": "https://img.shields.io/travis/moment/moment/develop.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "develop"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.88}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.8945, "health": 1, "branding": 1}, "popularity": {"communityInterest": 52700, "downloadsCount": 49366655.333333336, "downloadsAcceleration": 105424.65532724501, "dependentsCount": 26535}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.12462921673303629}}, "score": {"final": 0.899905791413874, "detail": {"quality": 0.9858454735578556, "popularity": 0.9351676709223784, "maintenance": 0.7909813272105278}}}}, {"axios": {"analyzedAt": "2020-06-07T08:11:53.481Z", "collected": {"metadata": {"name": "axios", "scope": "unscoped", "version": "0.19.2", "description": "Promise based HTTP client for the browser and node.js", "keywords": ["xhr", "http", "ajax", "promise", "node"], "date": "2020-01-22T04:25:53.354Z", "author": {"name": "Matt Zabriskie"}, "publisher": {"username": "emilyemorehouse", "email": "emilyemorehouse@gmail.com"}, "maintainers": [{"username": "mzabriskie", "email": "mzabriskie@gmail.com"}, {"username": "nickuraltsev", "email": "nick.uraltsev@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/axios/axios.git"}, "links": {"npm": "https://www.npmjs.com/package/axios", "homepage": "https://github.com/axios/axios", "repository": "https://github.com/axios/axios", "bugs": "https://github.com/axios/axios/issues"}, "license": "MIT", "dependencies": {"follow-redirects": "1.5.10"}, "devDependencies": {"bundlesize": "^0.17.0", "coveralls": "^3.0.0", "es6-promise": "^4.2.4", "grunt": "^1.0.2", "grunt-banner": "^0.6.0", "grunt-cli": "^1.2.0", "grunt-contrib-clean": "^1.1.0", "grunt-contrib-watch": "^1.0.0", "grunt-eslint": "^20.1.0", "grunt-karma": "^2.0.0", "grunt-mocha-test": "^0.13.3", "grunt-ts": "^6.0.0-beta.19", "grunt-webpack": "^1.0.18", "istanbul-instrumenter-loader": "^1.0.0", "jasmine-core": "^2.4.1", "karma": "^1.3.0", "karma-chrome-launcher": "^2.2.0", "karma-coverage": "^1.1.1", "karma-firefox-launcher": "^1.1.0", "karma-jasmine": "^1.1.1", "karma-jasmine-ajax": "^0.1.13", "karma-opera-launcher": "^1.0.0", "karma-safari-launcher": "^1.0.0", "karma-sauce-launcher": "^1.2.0", "karma-sinon": "^1.0.5", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^1.7.0", "load-grunt-tasks": "^3.5.2", "minimist": "^1.2.0", "mocha": "^5.2.0", "sinon": "^4.5.0", "typescript": "^2.8.1", "url-search-params": "^0.10.0", "webpack": "^1.13.1", "webpack-dev-server": "^1.14.1"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# axios\n\n[![npm version](https://img.shields.io/npm/v/axios.svg?style=flat-square)](https://www.npmjs.org/package/axios)\n[![build status](https://img.shields.io/travis/axios/axios/master.svg?style=flat-square)](https://travis-ci.org/axios/axios)\n[![code coverage](https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square)](https://coveralls.io/r/mzabriskie/axios)\n[![install size](https://packagephobia.now.sh/badge?p=axios)](https://packagephobia.now.sh/result?p=axios)\n[![npm downloads](https://img.shields.io/npm/dm/axios.svg?style=flat-square)](http://npm-stat.com/charts.html?package=axios)\n[![gitter chat](https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square)](https://gitter.im/mzabriskie/axios)\n[![code helpers](https://www.codetriage.com/axios/axios/badges/users.svg)](https://www.codetriage.com/axios/axios)\n\nPromise based HTTP client for the browser and node.js\n\n## Features\n\n- Make [XMLHttpRequests](https://developer.mozilla.org/en-US/docs/Web/API/XMLHttpRequest) from the browser\n- Make [http](http://nodejs.org/api/http.html) requests from node.js\n- Supports the [Promise](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise) API\n- Intercept request and response\n- Transform request and response data\n- Cancel requests\n- Automatic transforms for JSON data\n- Client side support for protecting against [XSRF](http://en.wikipedia.org/wiki/Cross-site_request_forgery)\n\n## Browser Support\n\n![Chrome](https://raw.github.com/alrra/browser-logos/master/src/chrome/chrome_48x48.png) | ![Firefox](https://raw.github.com/alrra/browser-logos/master/src/firefox/firefox_48x48.png) | ![Safari](https://raw.github.com/alrra/browser-logos/master/src/safari/safari_48x48.png) | ![Opera](https://raw.github.com/alrra/browser-logos/master/src/opera/opera_48x48.png) | ![Edge](https://raw.github.com/alrra/browser-logos/master/src/edge/edge_48x48.png) | ![IE](https://raw.github.com/alrra/browser-logos/master/src/archive/internet-explorer_9-11/internet-explorer_9-11_48x48.png) |\n--- | --- | --- | --- | --- | --- |\nLatest \u2714 | Latest \u2714 | Latest \u2714 | Latest \u2714 | Latest \u2714 | 11 \u2714 |\n\n[![Browser Matrix](https://saucelabs.com/open_sauce/build_matrix/axios.svg)](https://saucelabs.com/u/axios)\n\n## Installing\n\nUsing npm:\n\n```bash\n$ npm install axios\n```\n\nUsing bower:\n\n```bash\n$ bower install axios\n```\n\nUsing yarn:\n\n```bash\n$ yarn add axios\n```\n\nUsing cdn:\n\n```html\n<script src=\"https://unpkg.com/axios/dist/axios.min.js\"></script>\n```\n\n## Example\n\n### note: CommonJS usage\nIn order to gain the TypeScript typings (for intellisense / autocomplete) while using CommonJS imports with `require()` use the following approach:\n\n```js\nconst axios = require('axios').default;\n\n// axios.<method> will now provide autocomplete and parameter typings\n```\n\nPerforming a `GET` request\n\n```js\nconst axios = require('axios');\n\n// Make a request for a user with a given ID\naxios.get('/user?ID=12345')\n  .then(function (response) {\n    // handle success\n    console.log(response);\n  })\n  .catch(function (error) {\n    // handle error\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });\n\n// Optionally the request above could also be done as\naxios.get('/user', {\n    params: {\n      ID: 12345\n    }\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  })\n  .finally(function () {\n    // always executed\n  });  \n\n// Want to use async/await? Add the `async` keyword to your outer function/method.\nasync function getUser() {\n  try {\n    const response = await axios.get('/user?ID=12345');\n    console.log(response);\n  } catch (error) {\n    console.error(error);\n  }\n}\n```\n\n> **NOTE:** `async/await` is part of ECMAScript 2017 and is not supported in Internet\n> Explorer and older browsers, so use with caution.\n\nPerforming a `POST` request\n\n```js\naxios.post('/user', {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  })\n  .then(function (response) {\n    console.log(response);\n  })\n  .catch(function (error) {\n    console.log(error);\n  });\n```\n\nPerforming multiple concurrent requests\n\n```js\nfunction getUserAccount() {\n  return axios.get('/user/12345');\n}\n\nfunction getUserPermissions() {\n  return axios.get('/user/12345/permissions');\n}\n\naxios.all([getUserAccount(), getUserPermissions()])\n  .then(axios.spread(function (acct, perms) {\n    // Both requests are now complete\n  }));\n```\n\n## axios API\n\nRequests can be made by passing the relevant config to `axios`.\n\n##### axios(config)\n\n```js\n// Send a POST request\naxios({\n  method: 'post',\n  url: '/user/12345',\n  data: {\n    firstName: 'Fred',\n    lastName: 'Flintstone'\n  }\n});\n```\n\n```js\n// GET request for remote image\naxios({\n  method: 'get',\n  url: 'http://bit.ly/2mTM3nY',\n  responseType: 'stream'\n})\n  .then(function (response) {\n    response.data.pipe(fs.createWriteStream('ada_lovelace.jpg'))\n  });\n```\n\n##### axios(url[, config])\n\n```js\n// Send a GET request (default method)\naxios('/user/12345');\n```\n\n### Request method aliases\n\nFor convenience aliases have been provided for all supported request methods.\n\n##### axios.request(config)\n##### axios.get(url[, config])\n##### axios.delete(url[, config])\n##### axios.head(url[, config])\n##### axios.options(url[, config])\n##### axios.post(url[, data[, config]])\n##### axios.put(url[, data[, config]])\n##### axios.patch(url[, data[, config]])\n\n###### NOTE\nWhen using the alias methods `url`, `method`, and `data` properties don't need to be specified in config.\n\n### Concurrency\n\nHelper functions for dealing with concurrent requests.\n\n##### axios.all(iterable)\n##### axios.spread(callback)\n\n### Creating an instance\n\nYou can create a new instance of axios with a custom config.\n\n##### axios.create([config])\n\n```js\nconst instance = axios.create({\n  baseURL: 'https://some-domain.com/api/',\n  timeout: 1000,\n  headers: {'X-Custom-Header': 'foobar'}\n});\n```\n\n### Instance methods\n\nThe available instance methods are listed below. The specified config will be merged with the instance config.\n\n##### axios#request(config)\n##### axios#get(url[, config])\n##### axios#delete(url[, config])\n##### axios#head(url[, config])\n##### axios#options(url[, config])\n##### axios#post(url[, data[, config]])\n##### axios#put(url[, data[, config]])\n##### axios#patch(url[, data[, config]])\n##### axios#getUri([config])\n\n## Request Config\n\nThese are the available config options for making requests. Only the `url` is required. Requests will default to `GET` if `method` is not specified.\n\n```js\n{\n  // `url` is the server URL that will be used for the request\n  url: '/user',\n\n  // `method` is the request method to be used when making the request\n  method: 'get', // default\n\n  // `baseURL` will be prepended to `url` unless `url` is absolute.\n  // It can be convenient to set `baseURL` for an instance of axios to pass relative URLs\n  // to methods of that instance.\n  baseURL: 'https://some-domain.com/api/',\n\n  // `transformRequest` allows changes to the request data before it is sent to the server\n  // This is only applicable for request methods 'PUT', 'POST', 'PATCH' and 'DELETE'\n  // The last function in the array must return a string or an instance of Buffer, ArrayBuffer,\n  // FormData or Stream\n  // You may modify the headers object.\n  transformRequest: [function (data, headers) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `transformResponse` allows changes to the response data to be made before\n  // it is passed to then/catch\n  transformResponse: [function (data) {\n    // Do whatever you want to transform the data\n\n    return data;\n  }],\n\n  // `headers` are custom headers to be sent\n  headers: {'X-Requested-With': 'XMLHttpRequest'},\n\n  // `params` are the URL parameters to be sent with the request\n  // Must be a plain object or a URLSearchParams object\n  params: {\n    ID: 12345\n  },\n\n  // `paramsSerializer` is an optional function in charge of serializing `params`\n  // (e.g. https://www.npmjs.com/package/qs, http://api.jquery.com/jquery.param/)\n  paramsSerializer: function (params) {\n    return Qs.stringify(params, {arrayFormat: 'brackets'})\n  },\n\n  // `data` is the data to be sent as the request body\n  // Only applicable for request methods 'PUT', 'POST', and 'PATCH'\n  // When no `transformRequest` is set, must be of one of the following types:\n  // - string, plain object, ArrayBuffer, ArrayBufferView, URLSearchParams\n  // - Browser only: FormData, File, Blob\n  // - Node only: Stream, Buffer\n  data: {\n    firstName: 'Fred'\n  },\n  \n  // syntax alternative to send data into the body\n  // method post\n  // only the value is sent, not the key\n  data: 'Country=Brasil&City=Belo Horizonte',\n\n  // `timeout` specifies the number of milliseconds before the request times out.\n  // If the request takes longer than `timeout`, the request will be aborted.\n  timeout: 1000, // default is `0` (no timeout)\n\n  // `withCredentials` indicates whether or not cross-site Access-Control requests\n  // should be made using credentials\n  withCredentials: false, // default\n\n  // `adapter` allows custom handling of requests which makes testing easier.\n  // Return a promise and supply a valid response (see lib/adapters/README.md).\n  adapter: function (config) {\n    /* ... */\n  },\n\n  // `auth` indicates that HTTP Basic auth should be used, and supplies credentials.\n  // This will set an `Authorization` header, overwriting any existing\n  // `Authorization` custom headers you have set using `headers`.\n  // Please note that only HTTP Basic auth is configurable through this parameter.\n  // For Bearer tokens and such, use `Authorization` custom headers instead.\n  auth: {\n    username: 'janedoe',\n    password: 's00pers3cret'\n  },\n\n  // `responseType` indicates the type of data that the server will respond with\n  // options are: 'arraybuffer', 'document', 'json', 'text', 'stream'\n  //   browser only: 'blob'\n  responseType: 'json', // default\n\n  // `responseEncoding` indicates encoding to use for decoding responses\n  // Note: Ignored for `responseType` of 'stream' or client-side requests\n  responseEncoding: 'utf8', // default\n\n  // `xsrfCookieName` is the name of the cookie to use as a value for xsrf token\n  xsrfCookieName: 'XSRF-TOKEN', // default\n\n  // `xsrfHeaderName` is the name of the http header that carries the xsrf token value\n  xsrfHeaderName: 'X-XSRF-TOKEN', // default\n\n  // `onUploadProgress` allows handling of progress events for uploads\n  onUploadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `onDownloadProgress` allows handling of progress events for downloads\n  onDownloadProgress: function (progressEvent) {\n    // Do whatever you want with the native progress event\n  },\n\n  // `maxContentLength` defines the max size of the http response content in bytes allowed\n  maxContentLength: 2000,\n\n  // `validateStatus` defines whether to resolve or reject the promise for a given\n  // HTTP response status code. If `validateStatus` returns `true` (or is set to `null`\n  // or `undefined`), the promise will be resolved; otherwise, the promise will be\n  // rejected.\n  validateStatus: function (status) {\n    return status >= 200 && status < 300; // default\n  },\n\n  // `maxRedirects` defines the maximum number of redirects to follow in node.js.\n  // If set to 0, no redirects will be followed.\n  maxRedirects: 5, // default\n\n  // `socketPath` defines a UNIX Socket to be used in node.js.\n  // e.g. '/var/run/docker.sock' to send requests to the docker daemon.\n  // Only either `socketPath` or `proxy` can be specified.\n  // If both are specified, `socketPath` is used.\n  socketPath: null, // default\n\n  // `httpAgent` and `httpsAgent` define a custom agent to be used when performing http\n  // and https requests, respectively, in node.js. This allows options to be added like\n  // `keepAlive` that are not enabled by default.\n  httpAgent: new http.Agent({ keepAlive: true }),\n  httpsAgent: new https.Agent({ keepAlive: true }),\n\n  // 'proxy' defines the hostname and port of the proxy server.\n  // You can also define your proxy using the conventional `http_proxy` and\n  // `https_proxy` environment variables. If you are using environment variables\n  // for your proxy configuration, you can also define a `no_proxy` environment\n  // variable as a comma-separated list of domains that should not be proxied.\n  // Use `false` to disable proxies, ignoring environment variables.\n  // `auth` indicates that HTTP Basic auth should be used to connect to the proxy, and\n  // supplies credentials.\n  // This will set an `Proxy-Authorization` header, overwriting any existing\n  // `Proxy-Authorization` custom headers you have set using `headers`.\n  proxy: {\n    host: '127.0.0.1',\n    port: 9000,\n    auth: {\n      username: 'mikeymike',\n      password: 'rapunz3l'\n    }\n  },\n\n  // `cancelToken` specifies a cancel token that can be used to cancel the request\n  // (see Cancellation section below for details)\n  cancelToken: new CancelToken(function (cancel) {\n  })\n}\n```\n\n## Response Schema\n\nThe response for a request contains the following information.\n\n```js\n{\n  // `data` is the response that was provided by the server\n  data: {},\n\n  // `status` is the HTTP status code from the server response\n  status: 200,\n\n  // `statusText` is the HTTP status message from the server response\n  statusText: 'OK',\n\n  // `headers` the headers that the server responded with\n  // All header names are lower cased\n  headers: {},\n\n  // `config` is the config that was provided to `axios` for the request\n  config: {},\n\n  // `request` is the request that generated this response\n  // It is the last ClientRequest instance in node.js (in redirects)\n  // and an XMLHttpRequest instance in the browser\n  request: {}\n}\n```\n\nWhen using `then`, you will receive the response as follows:\n\n```js\naxios.get('/user/12345')\n  .then(function (response) {\n    console.log(response.data);\n    console.log(response.status);\n    console.log(response.statusText);\n    console.log(response.headers);\n    console.log(response.config);\n  });\n```\n\nWhen using `catch`, or passing a [rejection callback](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise/then) as second parameter of `then`, the response will be available through the `error` object as explained in the [Handling Errors](#handling-errors) section.\n\n## Config Defaults\n\nYou can specify config defaults that will be applied to every request.\n\n### Global axios defaults\n\n```js\naxios.defaults.baseURL = 'https://api.example.com';\naxios.defaults.headers.common['Authorization'] = AUTH_TOKEN;\naxios.defaults.headers.post['Content-Type'] = 'application/x-www-form-urlencoded';\n```\n\n### Custom instance defaults\n\n```js\n// Set config defaults when creating the instance\nconst instance = axios.create({\n  baseURL: 'https://api.example.com'\n});\n\n// Alter defaults after instance has been created\ninstance.defaults.headers.common['Authorization'] = AUTH_TOKEN;\n```\n\n### Config order of precedence\n\nConfig will be merged with an order of precedence. The order is library defaults found in [lib/defaults.js](https://github.com/axios/axios/blob/master/lib/defaults.js#L28), then `defaults` property of the instance, and finally `config` argument for the request. The latter will take precedence over the former. Here's an example.\n\n```js\n// Create an instance using the config defaults provided by the library\n// At this point the timeout config value is `0` as is the default for the library\nconst instance = axios.create();\n\n// Override timeout default for the library\n// Now all requests using this instance will wait 2.5 seconds before timing out\ninstance.defaults.timeout = 2500;\n\n// Override timeout for this request as it's known to take a long time\ninstance.get('/longRequest', {\n  timeout: 5000\n});\n```\n\n## Interceptors\n\nYou can intercept requests or responses before they are handled by `then` or `catch`.\n\n```js\n// Add a request interceptor\naxios.interceptors.request.use(function (config) {\n    // Do something before request is sent\n    return config;\n  }, function (error) {\n    // Do something with request error\n    return Promise.reject(error);\n  });\n\n// Add a response interceptor\naxios.interceptors.response.use(function (response) {\n    // Any status code that lie within the range of 2xx cause this function to trigger\n    // Do something with response data\n    return response;\n  }, function (error) {\n    // Any status codes that falls outside the range of 2xx cause this function to trigger\n    // Do something with response error\n    return Promise.reject(error);\n  });\n```\n\nIf you need to remove an interceptor later you can.\n\n```js\nconst myInterceptor = axios.interceptors.request.use(function () {/*...*/});\naxios.interceptors.request.eject(myInterceptor);\n```\n\nYou can add interceptors to a custom instance of axios.\n\n```js\nconst instance = axios.create();\ninstance.interceptors.request.use(function () {/*...*/});\n```\n\n## Handling Errors\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    if (error.response) {\n      // The request was made and the server responded with a status code\n      // that falls out of the range of 2xx\n      console.log(error.response.data);\n      console.log(error.response.status);\n      console.log(error.response.headers);\n    } else if (error.request) {\n      // The request was made but no response was received\n      // `error.request` is an instance of XMLHttpRequest in the browser and an instance of\n      // http.ClientRequest in node.js\n      console.log(error.request);\n    } else {\n      // Something happened in setting up the request that triggered an Error\n      console.log('Error', error.message);\n    }\n    console.log(error.config);\n  });\n```\n\nUsing the `validateStatus` config option, you can define HTTP code(s) that should throw an error.\n\n```js\naxios.get('/user/12345', {\n  validateStatus: function (status) {\n    return status < 500; // Reject only if the status code is greater than or equal to 500\n  }\n})\n```\n\nUsing `toJSON` you get an object with more information about the HTTP error.\n\n```js\naxios.get('/user/12345')\n  .catch(function (error) {\n    console.log(error.toJSON());\n  });\n```\n\n## Cancellation\n\nYou can cancel a request using a *cancel token*.\n\n> The axios cancel token API is based on the withdrawn [cancelable promises proposal](https://github.com/tc39/proposal-cancelable-promises).\n\nYou can create a cancel token using the `CancelToken.source` factory as shown below:\n\n```js\nconst CancelToken = axios.CancelToken;\nconst source = CancelToken.source();\n\naxios.get('/user/12345', {\n  cancelToken: source.token\n}).catch(function (thrown) {\n  if (axios.isCancel(thrown)) {\n    console.log('Request canceled', thrown.message);\n  } else {\n    // handle error\n  }\n});\n\naxios.post('/user/12345', {\n  name: 'new name'\n}, {\n  cancelToken: source.token\n})\n\n// cancel the request (the message parameter is optional)\nsource.cancel('Operation canceled by the user.');\n```\n\nYou can also create a cancel token by passing an executor function to the `CancelToken` constructor:\n\n```js\nconst CancelToken = axios.CancelToken;\nlet cancel;\n\naxios.get('/user/12345', {\n  cancelToken: new CancelToken(function executor(c) {\n    // An executor function receives a cancel function as a parameter\n    cancel = c;\n  })\n});\n\n// cancel the request\ncancel();\n```\n\n> Note: you can cancel several requests with the same cancel token.\n\n## Using application/x-www-form-urlencoded format\n\nBy default, axios serializes JavaScript objects to `JSON`. To send data in the `application/x-www-form-urlencoded` format instead, you can use one of the following options.\n\n### Browser\n\nIn a browser, you can use the [`URLSearchParams`](https://developer.mozilla.org/en-US/docs/Web/API/URLSearchParams) API as follows:\n\n```js\nconst params = new URLSearchParams();\nparams.append('param1', 'value1');\nparams.append('param2', 'value2');\naxios.post('/foo', params);\n```\n\n> Note that `URLSearchParams` is not supported by all browsers (see [caniuse.com](http://www.caniuse.com/#feat=urlsearchparams)), but there is a [polyfill](https://github.com/WebReflection/url-search-params) available (make sure to polyfill the global environment).\n\nAlternatively, you can encode data using the [`qs`](https://github.com/ljharb/qs) library:\n\n```js\nconst qs = require('qs');\naxios.post('/foo', qs.stringify({ 'bar': 123 }));\n```\n\nOr in another way (ES6),\n\n```js\nimport qs from 'qs';\nconst data = { 'bar': 123 };\nconst options = {\n  method: 'POST',\n  headers: { 'content-type': 'application/x-www-form-urlencoded' },\n  data: qs.stringify(data),\n  url,\n};\naxios(options);\n```\n\n### Node.js\n\nIn node.js, you can use the [`querystring`](https://nodejs.org/api/querystring.html) module as follows:\n\n```js\nconst querystring = require('querystring');\naxios.post('http://something.com/', querystring.stringify({ foo: 'bar' }));\n```\n\nYou can also use the [`qs`](https://github.com/ljharb/qs) library.\n\n###### NOTE\nThe `qs` library is preferable if you need to stringify nested objects, as the `querystring` method has known issues with that use case (https://github.com/nodejs/node-v0.x-archive/issues/1665).\n\n## Semver\n\nUntil axios reaches a `1.0` release, breaking changes will be released with a new minor version. For example `0.5.1`, and `0.5.4` will have the same API, but `0.6.0` will have breaking changes.\n\n## Promises\n\naxios depends on a native ES6 Promise implementation to be [supported](http://caniuse.com/promises).\nIf your environment doesn't support ES6 Promises, you can [polyfill](https://github.com/jakearchibald/es6-promise).\n\n## TypeScript\naxios includes [TypeScript](http://typescriptlang.org) definitions.\n```typescript\nimport axios from 'axios';\naxios.get('/user?ID=12345');\n```\n\n## Resources\n\n* [Changelog](https://github.com/axios/axios/blob/master/CHANGELOG.md)\n* [Upgrade Guide](https://github.com/axios/axios/blob/master/UPGRADE_GUIDE.md)\n* [Ecosystem](https://github.com/axios/axios/blob/master/ECOSYSTEM.md)\n* [Contributing Guide](https://github.com/axios/axios/blob/master/CONTRIBUTING.md)\n* [Code of Conduct](https://github.com/axios/axios/blob/master/CODE_OF_CONDUCT.md)\n\n## Credits\n\naxios is heavily inspired by the [$http service](https://docs.angularjs.org/api/ng/service/$http) provided in [Angular](https://angularjs.org/). Ultimately axios is an effort to provide a standalone `$http`-like service for use outside of Angular.\n\n## License\n\n[MIT](LICENSE)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 541670}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9812681}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 40728333}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 121153656}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 207121840}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 351658275}], "dependentsCount": 25667, "starsCount": 558}, "github": {"starsCount": 73975, "forksCount": 6704, "subscribersCount": 1199, "issues": {"count": 2991, "openCount": 278, "distribution": {"3600": 229, "10800": 98, "32400": 132, "97200": 231, "291600": 269, "874800": 304, "2624400": 303, "7873200": 353, "23619600": 400, "70858800": 551, "212576400": 121}, "isDisabled": false}, "contributors": [{"username": "mzabriskie", "commitsCount": 262}, {"username": "nickuraltsev", "commitsCount": 105}, {"username": "rubennorte", "commitsCount": 16}, {"username": "JustinBeckwith", "commitsCount": 14}, {"username": "emilyemorehouse", "commitsCount": 14}, {"username": "codeclown", "commitsCount": 12}, {"username": "RikkiGibson", "commitsCount": 10}, {"username": "yasuf", "commitsCount": 7}, {"username": "chinesedfan", "commitsCount": 6}, {"username": "idan", "commitsCount": 6}, {"username": "Alanscut", "commitsCount": 4}, {"username": "felipewmartins", "commitsCount": 4}, {"username": "jtangelder", "commitsCount": 4}, {"username": "38elements", "commitsCount": 3}, {"username": "Gerhut", "commitsCount": 3}, {"username": "bomsy", "commitsCount": 3}, {"username": "ctimmerm", "commitsCount": 3}, {"username": "jasonsaayman", "commitsCount": 3}, {"username": "maxhoffmann", "commitsCount": 3}, {"username": "staticinstance", "commitsCount": 3}, {"username": "Deamon87", "commitsCount": 2}, {"username": "Jarlotee", "commitsCount": 2}, {"username": "Khaledgarbaya", "commitsCount": 2}, {"username": "Punit-wingify", "commitsCount": 2}, {"username": "ajcrites", "commitsCount": 2}, {"username": "anthwinter", "commitsCount": 2}, {"username": "arpit2438735", "commitsCount": 2}, {"username": "ascott18", "commitsCount": 2}, {"username": "avindra", "commitsCount": 2}, {"username": "bttmly", "commitsCount": 2}, {"username": "davidfou", "commitsCount": 2}, {"username": "delirius325", "commitsCount": 2}, {"username": "dericgw", "commitsCount": 2}, {"username": "fgnass", "commitsCount": 2}, {"username": "grumblerchester", "commitsCount": 2}, {"username": "jcready", "commitsCount": 2}, {"username": "josh-egan", "commitsCount": 2}, {"username": "lachenmayer", "commitsCount": 2}, {"username": "nnarhinen", "commitsCount": 2}, {"username": "penance316", "commitsCount": 2}, {"username": "reggi", "commitsCount": 2}, {"username": "rogeriochaves", "commitsCount": 2}, {"username": "ruchigoyal2005", "commitsCount": 2}, {"username": "tomaash", "commitsCount": 2}, {"username": "torarnek", "commitsCount": 2}, {"username": "1pm", "commitsCount": 1}, {"username": "A-Tokyo", "commitsCount": 1}, {"username": "Chalarangelo", "commitsCount": 1}, {"username": "Fonger", "commitsCount": 1}, {"username": "IVLIU", "commitsCount": 1}, {"username": "JitixPhotobox", "commitsCount": 1}, {"username": "JounQin", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "M-shin", "commitsCount": 1}, {"username": "Maskedman99", "commitsCount": 1}, {"username": "SAGARACH65", "commitsCount": 1}, {"username": "anubhavsrivastava", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "cprayer", "commitsCount": 1}, {"username": "crhistianramirez", "commitsCount": 1}, {"username": "cygnusss", "commitsCount": 1}, {"username": "delventhalz", "commitsCount": 1}, {"username": "ehrhart", "commitsCount": 1}, {"username": "fureweb-com", "commitsCount": 1}, {"username": "galkin", "commitsCount": 1}, {"username": "gualopezb", "commitsCount": 1}, {"username": "hayawata3626", "commitsCount": 1}, {"username": "helios1101", "commitsCount": 1}, {"username": "heloflier", "commitsCount": 1}, {"username": "hexaez", "commitsCount": 1}, {"username": "huangzuizui", "commitsCount": 1}, {"username": "ianwijma", "commitsCount": 1}, {"username": "iwata", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jennynju", "commitsCount": 1}, {"username": "jimmy-liao-gogoro", "commitsCount": 1}, {"username": "leeniu", "commitsCount": 1}, {"username": "lukepolo", "commitsCount": 1}, {"username": "marcinx", "commitsCount": 1}, {"username": "marlonbarcarol", "commitsCount": 1}, {"username": "masterots", "commitsCount": 1}, {"username": "michalzaq12", "commitsCount": 1}, {"username": "notbucai", "commitsCount": 1}, {"username": "nycdavid", "commitsCount": 1}, {"username": "ohtaeg", "commitsCount": 1}, {"username": "portolucas", "commitsCount": 1}, {"username": "precto1285", "commitsCount": 1}, {"username": "rbown", "commitsCount": 1}, {"username": "remcohaszing", "commitsCount": 1}, {"username": "ryouaki", "commitsCount": 1}, {"username": "sazzy4o", "commitsCount": 1}, {"username": "simoneb", "commitsCount": 1}, {"username": "sufuf3", "commitsCount": 1}, {"username": "svenefftinge", "commitsCount": 1}, {"username": "textbook", "commitsCount": 1}, {"username": "the-vampiire", "commitsCount": 1}, {"username": "trodrigues", "commitsCount": 1}, {"username": "unguul", "commitsCount": 1}, {"username": "xchunzhao", "commitsCount": 1}, {"username": "zgayjjf", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 20}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 52}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 94}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 22482, "testsSize": 120330, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/axios.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/axios.svg", "content": "https://img.shields.io/npm/v/axios.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/axios/axios/master.svg?style=flat-square", "service": "https://api.travis-ci.org/axios/axios.svg?branch=master", "shields": "https://img.shields.io/travis/axios/axios/master.svg", "content": "https://img.shields.io/travis/axios/axios/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/mzabriskie/axios.svg?style=flat-square", "service": "https://coveralls.io/repos/mzabriskie/axios/badge.svg", "shields": "https://img.shields.io/coveralls/mzabriskie/axios.svg", "content": "https://img.shields.io/coveralls/mzabriskie/axios.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/dm/axios.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/axios.svg", "content": "https://img.shields.io/npm/dm/axios.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/mzabriskie/axios.svg?style=flat-square", "service": "https://badges.gitter.im/mzabriskie/axios.svg", "shields": "https://img.shields.io/gitter/room/mzabriskie/axios.svg", "content": "https://img.shields.io/gitter/room/mzabriskie/axios.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["eslint"], "coverage": 0.94, "outdatedDependencies": {"follow-redirects": {"required": "1.5.10", "stable": "1.11.0", "latest": "1.11.0"}}}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.991, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 82536, "downloadsCount": 40384552, "downloadsAcceleration": 145348.33283866063, "dependentsCount": 25667}, "maintenance": {"releasesFrequency": 0.6984589041095891, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8347665110336941, "detail": {"quality": 0.9070753860130631, "popularity": 0.9427896563541132, "maintenance": 0.6647643300166731}}}}, {"ts-jest": {"analyzedAt": "2020-06-03T14:56:24.618Z", "collected": {"metadata": {"name": "ts-jest", "scope": "unscoped", "version": "26.1.0", "description": "A preprocessor with source maps support to help use TypeScript with Jest", "keywords": ["jest", "typescript", "sourcemap", "react", "testing"], "date": "2020-05-30T19:13:39.066Z", "author": {"name": "Kulshekhar Kabra", "email": "kulshekhar@users.noreply.github.com", "url": "https://github.com/kulshekhar"}, "publisher": {"username": "tsjest", "email": "kulshekhar+tsjest@gmail.com"}, "maintainers": [{"username": "anhpnnd", "email": "anhpnnd@gmail.com"}, {"username": "kul", "email": "kulshekhar+npm@gmail.com"}, {"username": "tsjest", "email": "kulshekhar+tsjest@gmail.com"}], "contributors": [{"name": "Huafu Gandon", "email": "huafu.gandon@gmail.com", "url": "https://github.com/huafu"}, {"name": "Anh Pham", "email": "anhpnnd@gmail.com", "url": "https://github.com/ahnpnl"}, {"name": "Gustav Wengel", "email": "gustavwengel@gmail.com", "url": "https://github.com/GeeWee"}], "repository": {"type": "git", "url": "git+https://github.com/kulshekhar/ts-jest.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-jest", "homepage": "https://kulshekhar.github.io/ts-jest", "repository": "https://github.com/kulshekhar/ts-jest", "bugs": "https://github.com/kulshekhar/ts-jest/issues"}, "license": "MIT", "dependencies": {"bs-logger": "0.x", "buffer-from": "1.x", "fast-json-stable-stringify": "2.x", "json5": "2.x", "lodash.memoize": "4.x", "make-error": "1.x", "micromatch": "4.x", "mkdirp": "1.x", "semver": "7.x", "yargs-parser": "18.x"}, "devDependencies": {"@commitlint/cli": "8.x", "@commitlint/config-conventional": "8.x", "@jest/transform": "26.x", "@jest/types": "26.x", "@types/babel__core": "7.x", "@types/buffer-from": "latest", "@types/cross-spawn": "latest", "@types/fs-extra": "latest", "@types/jest": "25.x", "@types/js-yaml": "latest", "@types/json5": "latest", "@types/lodash.memoize": "4.x", "@types/lodash.merge": "4.x", "@types/lodash.set": "4.x", "@types/micromatch": "4.x", "@types/mkdirp": "latest", "@types/node": "10.x", "@types/react": "16.x", "@types/semver": "latest", "@types/yargs": "latest", "@types/yargs-parser": "15.x", "@typescript-eslint/eslint-plugin": "latest", "@typescript-eslint/parser": "latest", "conventional-changelog-cli": "2.x", "cross-spawn": "latest", "eslint": "7.x", "eslint-config-prettier": "latest", "eslint-plugin-jest": "latest", "eslint-plugin-jsdoc": "latest", "eslint-plugin-prettier": "latest", "fs-extra": "9.x", "glob-gitignore": "latest", "husky": "4.x", "jest": "26.x", "js-yaml": "latest", "lint-staged": "latest", "lodash.merge": "4.x", "lodash.set": "4.x", "npm-run-all": "latest", "prettier": "2.x", "source-map": "latest", "typescript": "3.x"}, "peerDependencies": {"jest": ">=26 <27", "typescript": ">=3.8 <4.0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 13}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 18}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 20}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 42}], "hasTestScript": true, "readme": "# ts-jest\n\n[![npm version](https://badge.fury.io/js/ts-jest.svg)](https://badge.fury.io/js/ts-jest)\n[![NPM downloads](https://img.shields.io/npm/dm/ts-jest.svg?style=flat)](https://npmjs.org/package/ts-jest)\n[![Known Vulnerabilities](https://snyk.io/test/github/kulshekhar/ts-jest/badge.svg)](https://snyk.io/test/github/kulshekhar/ts-jest)\n[![Coverage Status](https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master)](https://coveralls.io/github/kulshekhar/ts-jest?branch=master)\n[![Dependabot Status](https://api.dependabot.com/badges/status?host=github&repo=kulshekhar/ts-jest)](https://dependabot.com)\n[![Build Status](https://travis-ci.com/kulshekhar/ts-jest.svg?branch=master)](https://travis-ci.com/kulshekhar/ts-jest)\n[![doc-generator](https://github.com/kulshekhar/ts-jest/workflows/doc-generator/badge.svg)](https://github.com/kulshekhar/ts-jest/actions)\n[![release-and-publish](https://github.com/kulshekhar/ts-jest/workflows/release-and-publish/badge.svg)](https://github.com/kulshekhar/ts-jest/actions)\n\n<img src=\"./icon.png\" align=\"right\" title=\"ts-jest Logo\" width=\"128\" height=\"128\">\n\n**`ts-jest`** is a TypeScript preprocessor with source map support for Jest that lets you use Jest to test projects written in TypeScript.\n\nIt supports all features of TypeScript including type-checking. [Read more about Babel7 + `preset-typescript` **vs** TypeScript (and `ts-jest`)](https://kulshekhar.github.io/ts-jest/user/babel7-or-ts).\n\n---\n\n| We are not doing semantic versioning and `23.10` is a re-write, run `npm i -D ts-jest@\"<23.10.0\"` to go back to the previous version |\n|---|\n\n[<img src=\"./docs/assets/img/documentation.png\" align=\"left\" height=\"24\"> View the online documentation (usage & technical)](https://kulshekhar.github.io/ts-jest)\n\n[<img src=\"./docs/assets/img/slack.png\" align=\"left\" height=\"24\"> Ask for some help in the `ts-jest` community of Slack](https://bit.ly/3bRHFPQ)\n\n[<img src=\"./docs/assets/img/troubleshooting.png\" align=\"left\" height=\"24\"> Before reporting any issue, be sure to check the troubleshooting page](TROUBLESHOOTING.md)\n\n[<img src=\"./docs/assets/img/pull-request.png\" align=\"left\" height=\"24\"> We're looking for collaborators! Want to help improve `ts-jest`?](https://github.com/kulshekhar/ts-jest/issues/223)\n\n---\n\n## Getting Started\n\nThese instructions will get you setup to use `ts-jest` in your project. For more detailed documentation, please check [online documentation](https://kulshekhar.github.io/ts-jest).\n\n| | using npm | using yarn |\n|---:|---|---|\n| **Prerequisites** | `npm i -D jest typescript` | `yarn add --dev jest typescript` |\n| **Installing** | `npm i -D ts-jest @types/jest` | `yarn add --dev ts-jest @types/jest` |\n| **Creating config** | `npx ts-jest config:init` | `yarn ts-jest config:init` |\n| **Running tests** | `npm t` or `npx jest` | `yarn test` or `yarn jest` |\n\n## Built With\n\n* [TypeScript](https://www.typescriptlang.org/) - JavaScript that scales\n* [Jest](https://jestjs.io/) - Delightful JavaScript Testing\n* [`ts-jest`](https://kulshekhar.github.io/ts-jest) - Jest processor for TypeScript _(yes, `ts-jest` uses itself for its tests)_\n\n## Contributing\n\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md) for details on our code of conduct, and the process for submitting pull requests to us.\n\n## Versioning\n\nWe **DO NOT** use [SemVer](http://semver.org/) for versioning. Though you can think about SemVer when reading our version, except our major number follows the one of Jest. For the versions available, see the [tags on this repository](https://github.com/kulshekhar/ts-jest/tags).\n\n## Authors/maintainers\n\n* **Kulshekhar Kabra** - [kulshekhar](https://github.com/kulshekhar)\n* **Gustav Wengel** - [GeeWee](https://github.com/GeeWee)\n* **Ahn** - [ahnpnl](https://github.com/ahnpnl)\n* **Huafu Gandon** - [huafu](https://github.com/huafu)\n\nSee also the list of [contributors](https://github.com/kulshekhar/ts-jest/contributors) who participated in this project.\n\n## Supporters\n\n- [JetBrains](https://www.jetbrains.com/?from=ts-jest) has been kind enough to support ts-jest with an [open source license](https://www.jetbrains.com/community/opensource/?from=ts-jest).\n\n## License\n\nThis project is licensed under the MIT License - see the [LICENSE.md](LICENSE.md) file for details"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 572305}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2931940}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 12588107}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 34837773}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 58909040}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 95639624}], "dependentsCount": 838, "starsCount": 6}, "github": {"homepage": "https://kulshekhar.github.io/ts-jest", "starsCount": 3547, "forksCount": 270, "subscribersCount": 32, "issues": {"count": 1703, "openCount": 14, "distribution": {"3600": 335, "10800": 155, "32400": 211, "97200": 280, "291600": 195, "874800": 161, "2624400": 125, "7873200": 94, "23619600": 91, "70858800": 55, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "kulshekhar", "commitsCount": 338}, {"username": "huafu", "commitsCount": 308}, {"username": "ahnpnl", "commitsCount": 102}, {"username": "GeeWee", "commitsCount": 84}, {"username": "greenkeeper[bot]", "commitsCount": 66}, {"username": "Igmat", "commitsCount": 54}, {"username": "dependabot[bot]", "commitsCount": 52}, {"username": "morajabi", "commitsCount": 20}, {"username": "cspotcode", "commitsCount": 17}, {"username": "thymikee", "commitsCount": 13}, {"username": "kwonoj", "commitsCount": 12}, {"username": "japhar81", "commitsCount": 9}, {"username": "ds300", "commitsCount": 7}, {"username": "beckend", "commitsCount": 6}, {"username": "joscha", "commitsCount": 6}, {"username": "tvald", "commitsCount": 6}, {"username": "dependabot-preview[bot]", "commitsCount": 5}, {"username": "alan-agius4", "commitsCount": 4}, {"username": "greenkeeperio-bot", "commitsCount": 4}, {"username": "gstamac", "commitsCount": 4}, {"username": "lijunle", "commitsCount": 4}, {"username": "Bnaya", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 3}, {"username": "G-Rath", "commitsCount": 3}, {"username": "alexjoverm", "commitsCount": 3}, {"username": "sodatea", "commitsCount": 3}, {"username": "tkrotoff", "commitsCount": 3}, {"username": "trivikr", "commitsCount": 3}, {"username": "whitetrefoil", "commitsCount": 3}, {"username": "4kochi", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "GoodForOneFare", "commitsCount": 2}, {"username": "JoonsungUm", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "anshulguleria", "commitsCount": 2}, {"username": "bcruddy", "commitsCount": 2}, {"username": "chyzwar", "commitsCount": 2}, {"username": "hgenru", "commitsCount": 2}, {"username": "jdhuntington", "commitsCount": 2}, {"username": "jens-duttke", "commitsCount": 2}, {"username": "masters3d", "commitsCount": 2}, {"username": "maxdeviant", "commitsCount": 2}, {"username": "mgambati", "commitsCount": 2}, {"username": "orta", "commitsCount": 2}, {"username": "pelotom", "commitsCount": 2}, {"username": "richsilv", "commitsCount": 2}, {"username": "screendriver", "commitsCount": 2}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "Blasz", "commitsCount": 1}, {"username": "DorianGrey", "commitsCount": 1}, {"username": "IOuser", "commitsCount": 1}, {"username": "Kethku", "commitsCount": 1}, {"username": "Mackignacio", "commitsCount": 1}, {"username": "MicahChalmer", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "OrkhanAlikhanov", "commitsCount": 1}, {"username": "Xapphire13", "commitsCount": 1}, {"username": "airato", "commitsCount": 1}, {"username": "andreialecu", "commitsCount": 1}, {"username": "artursvonda", "commitsCount": 1}, {"username": "chandlerprall", "commitsCount": 1}, {"username": "chris-mcdermut-vacasa", "commitsCount": 1}, {"username": "danilobuerger", "commitsCount": 1}, {"username": "dawsbot", "commitsCount": 1}, {"username": "derindutz", "commitsCount": 1}, {"username": "eelcowen", "commitsCount": 1}, {"username": "eteeselink", "commitsCount": 1}, {"username": "evpozdniakov", "commitsCount": 1}, {"username": "haines", "commitsCount": 1}, {"username": "helmutschneider", "commitsCount": 1}, {"username": "iRoachie", "commitsCount": 1}, {"username": "iclanton", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "jbpionnier", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jeznag", "commitsCount": 1}, {"username": "jimthedev", "commitsCount": 1}, {"username": "jmheik", "commitsCount": 1}, {"username": "joaovieira", "commitsCount": 1}, {"username": "jure", "commitsCount": 1}, {"username": "jussikinnula", "commitsCount": 1}, {"username": "jwbay", "commitsCount": 1}, {"username": "kamijin-fanta", "commitsCount": 1}, {"username": "kareemkibue", "commitsCount": 1}, {"username": "lemonmade", "commitsCount": 1}, {"username": "lyy011lyy", "commitsCount": 1}, {"username": "maniator", "commitsCount": 1}, {"username": "misantronic", "commitsCount": 1}, {"username": "patrickhousley", "commitsCount": 1}, {"username": "posgarou", "commitsCount": 1}, {"username": "reod", "commitsCount": 1}, {"username": "rikkit", "commitsCount": 1}, {"username": "smcenlly", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "tanettrimas", "commitsCount": 1}, {"username": "tonyhallett", "commitsCount": 1}, {"username": "toolness", "commitsCount": 1}, {"username": "topaxi", "commitsCount": 1}, {"username": "totopsy", "commitsCount": 1}, {"username": "xogeny", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 65}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 215}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 306}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 429}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 4286, "testsSize": 276971, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/ts-jest.svg?style=flat", "shields": "https://img.shields.io/npm/dm/ts-jest.svg", "content": "https://img.shields.io/npm/dm/ts-jest.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/kulshekhar/ts-jest/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/kulshekhar/ts-jest/master.svg", "content": "https://img.shields.io/coveralls/kulshekhar/ts-jest/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 1, "branding": 0.7}, "popularity": {"communityInterest": 3955, "downloadsCount": 11612591, "downloadsAcceleration": 55705.81921613394, "dependentsCount": 838}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8735237750379696, "detail": {"quality": 0.9984195899194593, "popularity": 0.6400417591622242, "maintenance": 0.9999522353010099}}}}, {"babel-preset-stage-0": {"analyzedAt": "2020-05-01T15:38:25.186Z", "collected": {"metadata": {"name": "babel-preset-stage-0", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for stage 0 plugins", "date": "2017-04-07T15:19:47.614Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-stage-0", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-transform-do-expressions": "^6.22.0", "babel-plugin-transform-function-bind": "^6.22.0", "babel-preset-stage-1": "^6.24.1"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.8.3", "@babel/plugin-proposal-dynamic-import": "^7.8.3", "@babel/plugin-proposal-export-namespace-from": "^7.8.3", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/plugin-transform-flow-strip-types": "^7.9.0", "@babel/plugin-transform-for-of": "^7.9.0", "@babel/plugin-transform-modules-commonjs": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/preset-flow": "^7.9.0", "@babel/register": "^7.9.0", "@babel/runtime": "^7.9.6", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^1.19.1", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "^1.32.1", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2018-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-stage-0\n\n> Babel preset for stage 0 plugins.\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-stage-0\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"stage-0\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets stage-0\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"stage-0\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 66180}, {"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 347218}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1597373}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 4794516}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 9031419}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 20484478}], "dependentsCount": 2142, "starsCount": 26}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36432, "forksCount": 4257, "subscribersCount": 870, "issues": {"count": 11447, "openCount": 752, "distribution": {"3600": 2444, "10800": 903, "32400": 1057, "97200": 1217, "291600": 1036, "874800": 994, "2624400": 843, "7873200": 767, "23619600": 846, "70858800": 1088, "212576400": 252}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1260}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 462}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 176}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 150}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 12}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 53}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 205}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 466}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 761}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11778783, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 41684, "downloadsCount": 1598172, "downloadsAcceleration": -2205.8496004566205, "dependentsCount": 2142}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2504746617701431}}, "score": {"final": 0.7003123098189504, "detail": {"quality": 0.9859852242301949, "popularity": 0.5792539075273245, "maintenance": 0.5765082140437954}}}}, {"autoprefixer": {"analyzedAt": "2020-05-17T05:04:42.364Z", "collected": {"metadata": {"name": "autoprefixer", "scope": "unscoped", "version": "9.8.0", "description": "Parse CSS and add vendor prefixes to CSS rules using values from the Can I Use website", "keywords": ["autoprefixer", "css", "prefix", "postcss", "postcss-plugin"], "date": "2020-05-17T05:04:12.043Z", "author": {"name": "Andrey Sitnik", "email": "andrey@sitnik.ru", "username": "ai"}, "publisher": {"username": "ai", "email": "andrey@sitnik.ru"}, "maintainers": [{"username": "11bit", "email": "buryak.ivan@yandex.ru"}, {"username": "ai", "email": "andrey@sitnik.ru"}, {"username": "beneb", "email": "beneb.info@gmail.com"}, {"username": "kossnocorp", "email": "kossnocorp@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/postcss/autoprefixer.git"}, "links": {"npm": "https://www.npmjs.com/package/autoprefixer", "homepage": "https://github.com/postcss/autoprefixer#readme", "repository": "https://github.com/postcss/autoprefixer", "bugs": "https://github.com/postcss/autoprefixer/issues"}, "license": "MIT", "dependencies": {"browserslist": "^4.12.0", "caniuse-lite": "^1.0.30001061", "chalk": "^2.4.2", "normalize-range": "^0.1.2", "num2fraction": "^1.2.2", "postcss": "^7.0.30", "postcss-value-parser": "^4.1.0"}, "devDependencies": {"@babel/core": "^7.9.6", "@babel/plugin-proposal-class-properties": "^7.8.3", "@babel/plugin-transform-proto-to-assign": "^7.8.3", "@babel/preset-env": "^7.9.6", "@logux/eslint-config": "^35.0.3", "@size-limit/preset-small-lib": "4.4.5", "babel-core": "^7.0.0-0", "babel-eslint": "^10.1.0", "babel-jest": "^25.2.6", "babelify": "^10.0.0", "browserify": "^16.5.1", "eslint": "^6.8.0", "eslint-ci": "^1.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-es5": "^1.5.0", "eslint-plugin-import": "^2.20.2", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-prefer-let": "^1.0.1", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-security": "^1.4.0", "eslint-plugin-standard": "^4.0.1", "eslint-plugin-unicorn": "^16.0.1", "fs-extra": "^8.1.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-json-editor": "^2.5.4", "gulp-postcss": "^8.0.0", "gulp-rename": "^2.0.0", "gulp-replace": "^1.0.0", "husky": "^4.2.5", "jest": "^24.9.0", "jest-ci": "^0.1.1", "lint-staged": "^9.5.0", "size-limit": "^4.4.5"}, "releases": [{"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 2}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 4}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 13}, {"from": "2018-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 47}], "hasTestScript": true, "readme": "# Autoprefixer [![Cult Of Martians][cult-img]][cult]\n\n<img align=\"right\" width=\"94\" height=\"71\"\n     src=\"http://postcss.github.io/autoprefixer/logo.svg\"\n     title=\"Autoprefixer logo by Anton Lovchikov\">\n\n[PostCSS] plugin to parse CSS and add vendor prefixes to CSS rules using\u00a0values\nfrom\u00a0[Can I Use]. It\u00a0is\u00a0[recommended] by Google and used in Twitter and Alibaba.\n\nWrite your CSS rules without vendor prefixes (in\u00a0fact, forget about them\nentirely):\n\n```css\n::placeholder {\n  color: gray;\n}\n\n.image {\n  background-image: url(image@1x.png);\n}\n@media (min-resolution: 2dppx) {\n  .image {\n    background-image: url(image@2x.png);\n  }\n}\n```\n\nAutoprefixer will use the data based on current browser popularity and property\nsupport to\u00a0apply prefixes for\u00a0you. You\u00a0can\u00a0try\u00a0the [interactive demo]\nof Autoprefixer.\n\n```css\n::-webkit-input-placeholder {\n  color: gray;\n}\n::-moz-placeholder {\n  color: gray;\n}\n:-ms-input-placeholder {\n  color: gray;\n}\n::-ms-input-placeholder {\n  color: gray;\n}\n::placeholder {\n  color: gray;\n}\n\n.image {\n  background-image: url(image@1x.png);\n}\n@media (-webkit-min-device-pixel-ratio: 2),\n       (-o-min-device-pixel-ratio: 2/1),\n       (min-resolution: 2dppx) {\n  .image {\n    background-image: url(image@2x.png);\n  }\n}\n```\n\nTwitter account for news and releases: [@autoprefixer].\n\n<a href=\"https://evilmartians.com/?utm_source=autoprefixer\">\n<img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\" alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n[interactive demo]: https://autoprefixer.github.io/\n[@autoprefixer]:    https://twitter.com/autoprefixer\n[recommended]:      https://developers.google.com/web/tools/setup/setup-buildtools#dont_trip_up_with_vendor_prefixes\n[Can I Use]:        https://caniuse.com/\n[cult-img]:         http://cultofmartians.com/assets/badges/badge.svg\n[PostCSS]:          https://github.com/postcss/postcss\n[cult]:             http://cultofmartians.com/tasks/autoprefixer-grid.html\n\n\n## Contents\n\n* [Contents](#contents)\n* [Browsers](#browsers)\n* [FAQ](#faq)\n  * [Does Autoprefixer polyfill Grid Layout for IE?](#does-autoprefixer-polyfill-grid-layout-for-ie)\n  * [Does it add polyfills?](#does-it-add-polyfills)\n  * [Why doesn\u2019t Autoprefixer add prefixes to `border-radius`?](#why-doesnt-autoprefixer-add-prefixes-to-border-radius)\n  * [Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?](#why-does-autoprefixer-use-unprefixed-properties-in--webkit-keyframes)\n  * [How to work with legacy `-webkit-` only code?](#how-to-work-with-legacy--webkit--only-code)\n  * [Does Autoprefixer add `-epub-` prefix?](#does-autoprefixer-add--epub--prefix)\n  * [Why doesn\u2019t Autoprefixer transform generic font-family `system-ui`?](#why-doesnt-autoprefixer-transform-generic-font-family-system-ui)\n* [Usage](#usage)\n  * [Gulp](#gulp)\n  * [Webpack](#webpack)\n  * [CSS-in-JS](#css-in-js)\n  * [CLI](#cli)\n  * [Other Build Tools](#other-build-tools)\n    * [Preprocessors](#preprocessors)\n    * [GUI Tools](#gui-tools)\n  * [JavaScript](#javascript)\n  * [Text Editors and IDE](#text-editors-and-ide)\n* [Warnings](#warnings)\n* [Disabling](#disabling)\n  * [Prefixes](#prefixes)\n  * [Features](#features)\n  * [Control Comments](#control-comments)\n* [Options](#options)\n* [Environment Variables](#environment-variables)\n  * [Using environment variables to support CSS Grid prefixes in Create React App](#using-environment-variables-to-support-css-grid-prefixes-in-create-react-app)\n* [Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie)\n  * [Beware of enabling autoplacement in old projects](#beware-of-enabling-autoplacement-in-old-projects)\n  * [Autoplacement limitations](#autoplacement-limitations)\n    * [Both columns and rows must be defined](#both-columns-and-rows-must-be-defined)\n    * [Repeat auto-fit and auto-fill are not supported](#repeat-auto-fit-and-auto-fill-are-not-supported)\n    * [No manual cell placement or column/row spans allowed inside an autoplacement grid](#no-manual-cell-placement-or-columnrow-spans-allowed-inside-an-autoplacement-grid)\n    * [Do not create `::before` and `::after` pseudo elements](#do-not-create-before-and-after-pseudo-elements)\n    * [When changing the `grid gap` value, columns and rows must be re-declared](#when-changing-the-grid-gap-value-columns-and-rows-must-be-re-declared)\n* [Debug](#debug)\n* [Security Contact](#security-contact)\n* [For Enterprise](#for-enterprise)\n\n## Browsers\n\nAutoprefixer uses [Browserslist], so you can specify the browsers\nyou want to target in your project with queries like `> 5%`\n(see [Best Practices]).\n\nThe best way to provide browsers is a `.browserslistrc` file in your project\nroot, or by adding a `browserslist` key to your `package.json`.\n\nWe recommend the use of these options over passing options to Autoprefixer so\nthat the config can be shared with other tools such as [babel-preset-env] and\n[Stylelint].\n\nSee [Browserslist docs] for queries, browser names, config format, and defaults.\n\n[Browserslist docs]: https://github.com/browserslist/browserslist#queries\n[babel-preset-env]:  https://github.com/babel/babel/tree/master/packages/babel-preset-env\n[Best Practices]:    https://github.com/browserslist/browserslist#best-practices\n[Browserslist]:      https://github.com/browserslist/browserslist\n[Stylelint]:         https://stylelint.io/\n\n\n## FAQ\n\n### Does Autoprefixer polyfill Grid Layout for IE?\n\nAutoprefixer can be used to translate modern CSS Grid syntax into IE 10\nand IE 11 syntax, but this polyfill will not work in 100% of cases.\nThis\u00a0is\u00a0why\u00a0it\u00a0is\u00a0disabled\u00a0by\u00a0default.\n\nFirst, you need to enable Grid prefixes by using either the `grid: \"autoplace\"`\noption or the `/* autoprefixer grid: autoplace */` control comment.\nAlso you can use environment variable to enable Grid:\n`AUTOPREFIXER_GRID=autoplace npm build`.\n\nSecond, you need to test every fix with Grid in IE. It is not an enable and\nforget feature, but it is still very useful.\nFinancial\u00a0Times\u00a0and\u00a0Yandex\u00a0use it in production.\n\nThird, there is only very limited auto placement support. Read the\n[Grid Autoplacement support in IE](#grid-autoplacement-support-in-ie) section\nfor more details.\n\nFourth, if you are not using the autoplacement feature, the best way\nto use Autoprefixer is by using  `grid-template` or `grid-template-areas`.\n\n```css\n.page {\n  display: grid;\n  grid-gap: 33px;\n  grid-template:\n    \"head head  head\" 1fr\n    \"nav  main  main\" minmax(100px, 1fr)\n    \"nav  foot  foot\" 2fr /\n    1fr   100px 1fr;\n}\n.page__head {\n  grid-area: head;\n}\n.page__nav {\n  grid-area: nav;\n}\n.page__main {\n  grid-area: main;\n}\n.page__footer {\n  grid-area: foot;\n}\n```\n\nSee also:\n\n* [The guide about Grids in IE and Autoprefixer].\n* [`postcss-gap-properties`] to use new `gap` property\n  instead of old `grid-gap`.\n* [`postcss-grid-kiss`] has alternate \u201ceverything in one property\u201d syntax,\n  which makes using Autoprefixer\u2019s Grid translations safer.\n\n[The guide about Grids in IE and Autoprefixer]: https://css-tricks.com/css-grid-in-ie-css-grid-and-the-new-autoprefixer/\n[`postcss-gap-properties`]:                     https://github.com/jonathantneal/postcss-gap-properties\n[`postcss-grid-kiss`]:                          https://github.com/sylvainpolletvillard/postcss-grid-kiss\n\n\n### Does it add polyfills?\n\nNo. Autoprefixer only adds prefixes.\n\nMost new CSS features will require client side JavaScript to handle a new\nbehavior correctly.\n\nDepending on what you consider to be a \u201cpolyfill\u201d, you can take a look at some\nother tools and libraries. If you are just looking for syntax sugar,\nyou might take a look at:\n\n- [postcss-preset-env] is a plugins preset with polyfills and Autoprefixer\n  to write future CSS today.\n- [Oldie], a PostCSS plugin that handles some IE hacks (opacity, rgba, etc).\n- [postcss-flexbugs-fixes], a PostCSS plugin to fix flexbox issues.\n\n[postcss-flexbugs-fixes]: https://github.com/luisrudge/postcss-flexbugs-fixes\n[postcss-preset-env]:     https://github.com/jonathantneal/postcss-preset-env\n[Oldie]:                  https://github.com/jonathantneal/oldie\n\n\n### Why doesn\u2019t Autoprefixer add prefixes to `border-radius`?\n\nDevelopers are often surprised by how few prefixes are required today.\nIf Autoprefixer doesn\u2019t add prefixes to\u00a0your CSS, check if they\u2019re still\nrequired on [Can I Use].\n\n[Can I Use]: https://caniuse.com/\n\n\n### Why does Autoprefixer use unprefixed properties in `@-webkit-keyframes`?\n\nBrowser teams can remove some prefixes before others, so we try to use all\ncombinations of prefixed/unprefixed values.\n\n\n### How to work with legacy `-webkit-` only code?\n\nAutoprefixer needs unprefixed property to add prefixes. So if you only\nwrote `-webkit-gradient` without W3C\u2019s `gradient`,\nAutoprefixer will not add other prefixes.\n\nBut [PostCSS] has plugins to convert CSS to unprefixed state.\nUse [postcss-unprefix] before Autoprefixer.\n\n[postcss-unprefix]: https://github.com/gucong3000/postcss-unprefix\n\n\n### Does Autoprefixer add `-epub-` prefix?\n\nNo, Autoprefixer works only with browsers prefixes from Can I Use.\nBut you can use [postcss-epub] for\u00a0prefixing ePub3 properties.\n\n[postcss-epub]: https://github.com/Rycochet/postcss-epub\n\n\n### Why doesn\u2019t Autoprefixer transform generic font-family `system-ui`?\n\n`system-ui` is technically not a prefix and the transformation is not\nfuture-proof. You can use [postcss-font-family-system-ui] to transform\n`system-ui` to a practical font-family list.\n\n[postcss-font-family-system-ui]: https://github.com/JLHwung/postcss-font-family-system-ui\n\n\n## Usage\n\n### Gulp\n\nIn Gulp you can use [gulp-postcss] with `autoprefixer` npm package.\n\n```js\ngulp.task('autoprefixer', () => {\n  const autoprefixer = require('autoprefixer')\n  const sourcemaps = require('gulp-sourcemaps')\n  const postcss = require('gulp-postcss')\n\n  return gulp.src('./src/*.css')\n    .pipe(sourcemaps.init())\n    .pipe(postcss([ autoprefixer() ]))\n    .pipe(sourcemaps.write('.'))\n    .pipe(gulp.dest('./dest'))\n})\n```\n\nWith `gulp-postcss` you also can combine Autoprefixer\nwith [other PostCSS plugins].\n\n[gulp-postcss]:          https://github.com/postcss/gulp-postcss\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n\n\n### Webpack\n\nIn [webpack] you can use [postcss-loader] with `autoprefixer`\nand [other PostCSS plugins].\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\"style-loader\", \"css-loader\", \"postcss-loader\"]\n      }\n    ]\n  }\n}\n```\n\nAnd create a `postcss.config.js` with:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n\n[other PostCSS plugins]: https://github.com/postcss/postcss#plugins\n[postcss-loader]:        https://github.com/postcss/postcss-loader\n[webpack]:               https://webpack.js.org/\n\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'postcss-loader'],\n      },\n      {\n        test: /\\.jsx?$/,\n        use: ['babel-loader', 'astroturf/loader'],\n      }\n    ]\n  }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer')\n  ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n\n### CLI\n\nYou can use the [postcss-cli] to run Autoprefixer from CLI:\n\n```sh\nnpm install postcss-cli autoprefixer\nnpx postcss *.css --use autoprefixer -d build/\n```\n\nSee `postcss -h` for help.\n\n[postcss-cli]: https://github.com/postcss/postcss-cli\n\n\n### Other Build Tools\n\n* **Grunt:** [grunt-postcss]\n* **Ruby on Rails**: [autoprefixer-rails]\n* **Neutrino**: [neutrino-middleware-postcss]\n* **Jekyll**: add `autoprefixer-rails` and `jekyll-assets` to `Gemfile`\n* **Brunch**: [postcss-brunch]\n* **Broccoli**: [broccoli-postcss]\n* **Middleman**: [middleman-autoprefixer]\n* **Mincer**: add `autoprefixer` npm package and enable it:\n  `environment.enable('autoprefixer')`\n\n[neutrino-middleware-postcss]: https://www.npmjs.com/package/neutrino-middleware-postcss\n[middleman-autoprefixer]:      https://github.com/middleman/middleman-autoprefixer\n[autoprefixer-rails]:          https://github.com/ai/autoprefixer-rails\n[broccoli-postcss]:            https://github.com/jeffjewiss/broccoli-postcss\n[postcss-brunch]:              https://github.com/iamvdo/postcss-brunch\n[grunt-postcss]:               https://github.com/nDmitry/grunt-postcss\n\n\n#### Preprocessors\n\n* **Less**: [less-plugin-autoprefix]\n* **Stylus**: [autoprefixer-stylus]\n* **Compass**: [autoprefixer-rails#compass]\n\n[less-plugin-autoprefix]: https://github.com/less/less-plugin-autoprefix\n[autoprefixer-stylus]:    https://github.com/jenius/autoprefixer-stylus\n[autoprefixer-rails#compass]:     https://github.com/ai/autoprefixer-rails#compass\n\n\n#### GUI Tools\n\n* [CodeKit](https://codekitapp.com/help/autoprefixer/)\n* [Prepros](https://prepros.io)\n\n\n### JavaScript\n\nYou can use Autoprefixer with [PostCSS] in your Node.js application\nor if you want to develop an Autoprefixer plugin for a new environment.\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\n\npostcss([ autoprefixer ]).process(css).then(result => {\n  result.warnings().forEach(warn => {\n    console.warn(warn.toString())\n  })\n  console.log(result.css)\n})\n```\n\nThere is also a [standalone build] for the browser or for a non-Node.js runtime.\n\nYou can use [html-autoprefixer] to process HTML with inlined CSS.\n\n[html-autoprefixer]: https://github.com/RebelMail/html-autoprefixer\n[standalone build]:  https://raw.github.com/ai/autoprefixer-rails/master/vendor/autoprefixer.js\n[PostCSS]:           https://github.com/postcss/postcss\n\n\n### Text Editors and IDE\n\nAutoprefixer should be used in assets build tools. Text editor plugins are not\na good solution, because prefixes decrease code readability and you will need\nto change values in all prefixed properties.\n\nI recommend you to learn how to use build tools like [Parcel].\nThey work much better and will open you a whole new world of useful plugins\nand automation.\n\nIf you can\u2019t move to a build tool, you can use text editor plugins:\n\n* [Visual Studio Code](https://github.com/mrmlnc/vscode-autoprefixer)\n* [Atom Editor](https://github.com/sindresorhus/atom-autoprefixer)\n* [Sublime Text](https://github.com/sindresorhus/sublime-autoprefixer)\n* [Brackets](https://github.com/mikaeljorhult/brackets-autoprefixer)\n\n[Parcel]: https://parceljs.org/\n\n\n## Warnings\n\nAutoprefixer uses the [PostCSS warning API] to warn about really important\nproblems in your CSS:\n\n* Old direction syntax in gradients.\n* Old unprefixed `display: box` instead of `display: flex`\n  by latest specification version.\n\nYou can get warnings from `result.warnings()`:\n\n```js\nresult.warnings().forEach(warn => {\n  console.warn(warn.toString())\n})\n```\n\nEvery Autoprefixer runner should display these warnings.\n\n[PostCSS warning API]: http://api.postcss.org/Warning.html\n\n\n## Disabling\n\n### Prefixes\n\nAutoprefixer was designed to have no interface \u2013 it just works.\nIf you need some browser specific hack just write a prefixed property\nafter the unprefixed one.\n\n```css\na {\n  transform: scale(0.5);\n  -moz-transform: scale(0.6);\n}\n```\n\nIf some prefixes were generated incorrectly, please create an [issue on GitHub].\n\n[issue on GitHub]: https://github.com/postcss/autoprefixer/issues\n\n\n### Features\n\nYou can use these plugin options to control some of Autoprefixer\u2019s features.\n\n* `grid: \"autoplace\"` will enable `-ms-` prefixes for Grid Layout including some\n  [limited autoplacement support](#grid-autoplacement-support-in-ie).\n* `supports: false` will disable `@supports` parameters prefixing.\n* `flexbox: false` will disable flexbox properties prefixing.\n  Or `flexbox: \"no-2009\"` will add prefixes only for final and IE\n  versions of specification.\n* `remove: false` will disable cleaning outdated prefixes.\n\nYou should set them inside the plugin like so:\n\n```js\nautoprefixer({ grid: 'autoplace' })\n```\n\n\n### Control Comments\n\nIf you do not need Autoprefixer in some part of your CSS,\nyou can use control comments to\u00a0disable\u00a0Autoprefixer.\n\n```css\n.a {\n  transition: 1s; /* will be prefixed */\n}\n\n.b {\n  /* autoprefixer: off */\n  transition: 1s; /* will not be prefixed */\n}\n\n.c {\n  /* autoprefixer: ignore next */\n  transition: 1s; /* will not be prefixed */\n  mask: url(image.png); /* will be prefixed */\n}\n```\n\nThere are three types of control comments:\n\n* `/* autoprefixer: (on|off) */`: enable/disable all Autoprefixer translations for the\n  whole block both *before* and *after* the comment.\n* `/* autoprefixer: ignore next */`: disable Autoprefixer only for the next property\n  or next rule selector or at-rule parameters (but\u00a0not\u00a0rule/at\u2011rule body).\n* `/* autoprefixer grid: (autoplace|no-autoplace|off) */`: control how Autoprefixer handles\n  grid translations for the whole block:\n  * `autoplace`: enable grid translations with autoplacement support.\n  * `no-autoplace`: enable grid translations with autoplacement\n    support *disabled* (alias for deprecated value `on`).\n  * `off`: disable all grid translations.\n\nYou can also use comments recursively:\n\n```css\n/* autoprefixer: off */\n@supports (transition: all) {\n  /* autoprefixer: on */\n  a {\n    /* autoprefixer: off */\n  }\n}\n```\n\nNote that comments that disable the whole block should not be featured in the same\nblock twice:\n\n```css\n/* How not to use block level control comments */\n\n.do-not-do-this {\n  /* autoprefixer: off */\n  transition: 1s;\n  /* autoprefixer: on */\n  transform: rotate(20deg);\n}\n```\n\n\n## Options\n\nFunction `autoprefixer(options)` returns a new PostCSS plugin.\nSee [PostCSS API] for plugin usage documentation.\n\n```js\nautoprefixer({ cascade: false })\n```\n\nAvailable options are:\n\n* `env` (string): environment for Browserslist.\n* `cascade` (boolean): should Autoprefixer use Visual Cascade,\n  if CSS is uncompressed. Default: `true`\n* `add` (boolean): should Autoprefixer add prefixes. Default is `true`.\n* `remove` (boolean): should Autoprefixer [remove outdated] prefixes.\n  Default is `true`.\n* `supports` (boolean): should Autoprefixer add prefixes for `@supports`\n  parameters. Default is `true`.\n* `flexbox` (boolean|string): should Autoprefixer add prefixes for flexbox\n  properties. With `\"no-2009\"` value Autoprefixer will add prefixes only\n  for final and IE 10 versions of specification. Default is `true`.\n* `grid` (false|`\"autoplace\"`|`\"no-autoplace\"`): should Autoprefixer\n  add IE 10-11 prefixes for Grid Layout properties?\n    * `false` (default): prevent Autoprefixer from outputting\n       CSS Grid translations.\n    * `\"autoplace\"`: enable Autoprefixer grid translations\n      and *include* autoplacement support. You can also use\n      `/* autoprefixer grid: autoplace */` in your CSS.\n    * `\"no-autoplace\"`: enable Autoprefixer grid translations\n      but *exclude* autoplacement support. You can also use\n      `/* autoprefixer grid: no-autoplace */` in your CSS.\n      (alias for the deprecated `true` value)\n* `stats` (object): custom [usage statistics] for `> 10% in my stats`\n  browsers query.\n* `overrideBrowserslist` (array): list of queries for target browsers.\n  Try to not use it. The best practice is to use `.browserslistrc` config\n  or `browserslist` key in `package.json` to share target browsers\n  with Babel, ESLint and Stylelint. See\u00a0[Browserslist docs]\n  for available queries and default value.\n* `ignoreUnknownVersions` (boolean): do not raise error on unknown browser\n  version in Browserslist config. Default is `false`.\n\nPlugin object has `info()` method for debugging purpose.\n\nYou can use PostCSS processor to process several CSS files\nto increase performance.\n\n[usage statistics]: https://github.com/browserslist/browserslist#custom-usage-data\n[PostCSS API]:      http://api.postcss.org\n\n## Environment Variables\n\n* `AUTOPREFIXER_GRID`: (`autoplace`|`no-autoplace`) should Autoprefixer\n  add IE 10-11 prefixes for Grid Layout properties?\n    * `autoplace`: enable Autoprefixer grid translations\n      and *include* autoplacement support.\n    * `no-autoplace`: enable Autoprefixer grid translations\n      but *exclude* autoplacement support.\n\nEnvironment variables are useful, when you want to change Autoprefixer options but don't have access to config files.\n[Create React App] is a good example of this.\n\n[Create React App]: (https://reactjs.org/docs/create-a-new-react-app.html#create-react-app)\n\n### Using environment variables to support CSS Grid prefixes in Create React App\n\n1. Install the latest version of Autoprefixer and [cross-env](https://www.npmjs.com/package/cross-env):\n\n```\nnpm install autoprefixer@latest cross-env --save-dev\n```\n\n2. Under `\"browserslist\"` > `\"development\"` in the package.json file, add `\"last 1 ie version\"`\n\n```\n\"browserslist\": {\n  \"production\": [\n    \">0.2%\",\n    \"not dead\",\n    \"not op_mini all\"\n  ],\n  \"development\": [\n    \"last 1 chrome version\",\n    \"last 1 firefox version\",\n    \"last 1 safari version\",\n    \"last 1 ie version\"\n  ]\n}\n```\n\n3. Update `\"scripts\"` in the package.json file to the following:\n\n```\n\"scripts\": {\n  \"start\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts start\",\n  \"build\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts build\",\n  \"test\": \"cross-env AUTOPREFIXER_GRID=autoplace react-scripts test\",\n  \"eject\": \"react-scripts eject\"\n},\n```\n\nReplace `autoplace` with `no-autoplace` in the above example if you prefer to disable Autoprefixer Grid autoplacement support.\n\nNow when you run `npm start` you will see CSS Grid prefixes automatically being applied to your output CSS.\n\nSee also [Browserslist environment variables] for more examples on how to use environment variables in your project.\n\n[Browserslist environment variables]: https://github.com/browserslist/browserslist#environment-variables\n\n## Grid Autoplacement support in IE\n\nIf the `grid` option is set to `\"autoplace\"`, limited autoplacement support is added to Autoprefixers grid translations. You can also use\nthe `/* autoprefixer grid: autoplace */` control comment or\n`AUTOPREFIXER_GRID=autoplace npm build` environment variable.\n\nAutoprefixer will only autoplace grid cells if both `grid-template-rows`\nand `grid-template-columns` has been set. If `grid-template`\nor `grid-template-areas` has been set, Autoprefixer will use area based\ncell placement instead.\n\nAutoprefixer supports autoplacement by using `nth-child` CSS selectors.\nIt creates [number of columns] x [number of rows] `nth-child` selectors.\nFor this reason Autoplacement is only supported within the explicit grid.\n\n```css\n/* Input CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto auto;\n  grid-gap: 20px;\n}\n```\n\n```css\n/* Output CSS */\n\n/* autoprefixer grid: autoplace */\n\n.autoplacement-example {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 1fr 20px 1fr;\n  grid-template-columns: 1fr 1fr;\n  -ms-grid-rows: auto 20px auto;\n  grid-template-rows: auto auto;\n  grid-gap: 20px;\n}\n\n.autoplacement-example > *:nth-child(1) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(2) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 3;\n}\n\n.autoplacement-example > *:nth-child(3) {\n  -ms-grid-row: 3;\n  -ms-grid-column: 1;\n}\n\n.autoplacement-example > *:nth-child(4) {\n  -ms-grid-row: 3;\n  -ms-grid-column: 3;\n}\n```\n\n### Beware of enabling autoplacement in old projects\n\nBe careful about enabling autoplacement in any already established projects that have\npreviously not used Autoprefixer's grid autoplacement feature before.\n\nIf this was your html:\n\n```html\n<div class=\"grid\">\n  <div class=\"grid-cell\"></div>\n</div>\n```\n\nThe following CSS will not work as expected with the autoplacement feature enabled:\n\n```css\n/* Unsafe CSS when Autoplacement is enabled */\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n```\n\nSwapping the rules around will not fix the issue either:\n\n```css\n/* Also unsafe to use this CSS */\n\n.grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n```\n\nOne way to deal with this issue is to disable autoplacement in the\ngrid-declaration rule:\n\n```css\n/* Disable autoplacement to fix the issue */\n\n.grid {\n  /* autoprefixer grid: no-autoplace */\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n\n.grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n```\n\nThe absolute best way to integrate autoplacement into already existing projects\nthough is to leave autoplacement turned off by default and then use a control\ncomment to enable it when needed. This method is far less likely to cause\nsomething on the site to break.\n\n```css\n/* Disable autoplacement by default in old projects */\n/* autoprefixer grid: no-autoplace */\n\n/* Old code will function the same way it always has */\n.old-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, 1fr);\n}\n.old-grid-cell {\n  grid-column: 2;\n  grid-row: 2;\n}\n\n/* Enable autoplacement when you want to use it in new code */\n.new-autoplace-friendly-grid {\n  /* autoprefixer grid: autoplace */\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, auto);\n}\n```\n\nNote that the `grid: \"no-autoplace\"` setting and the\n`/* autoprefixer grid: no-autoplace */` control comment share identical\nfunctionality to the `grid: true` setting and the `/* autoprefixer grid: on */`\ncontrol comment. There is no need to refactor old code to use `no-autoplace`\nin place of the old `true` and `on` statements.\n\n### Autoplacement limitations\n\n#### Both columns and rows must be defined\n\nAutoplacement only works inside the explicit grid. The columns and rows need to be defined\nso that Autoprefixer knows how many `nth-child` selectors to generate.\n\n```css\n.not-allowed {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n}\n\n.is-allowed {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(10, auto);\n}\n```\n\n#### Repeat auto-fit and auto-fill are not supported\n\nThe `repeat(auto-fit, ...)` and `repeat(auto-fill, ...)` grid functionality relies on\nknowledge from the browser about screen dimensions and the number of available grid\nitems for it to work properly. Autoprefixer does not have access to this information\nso unfortunately this little snippet will _never_ be IE friendly.\n\n```css\n.grid {\n  /* This will never be IE friendly */\n  grid-template-columns: repeat(auto-fit, min-max(200px, 1fr))\n}\n```\n\n#### No manual cell placement or column/row spans allowed inside an autoplacement grid\n\nElements must not be manually placed or given column/row spans inside\nan autoplacement grid. Only the most basic of autoplacement grids are supported.\nGrid cells can still be placed manually outside the the explicit grid though.\nSupport for manually placing individual grid cells inside an explicit\nautoplacement grid is planned for a future release.\n\n```css\n.autoplacement-grid {\n  display: grid;\n  grid-template-columns: repeat(3, 1fr);\n  grid-template-rows: repeat(3, auto);\n}\n\n/* Grid cells placed inside the explicit grid\n   will break the layout in IE */\n.not-permitted-grid-cell {\n  grid-column: 1;\n  grid-row: 1;\n}\n\n/* Grid cells placed outside the\n   explicit grid will work in IE */\n.permitted-grid-cell {\n  grid-column: 1 / span 2;\n  grid-row: 4;\n}\n```\n\nIf manual cell placement is required, we recommend using `grid-template` or\n`grid-template-areas` instead:\n\n```css\n.page {\n  display: grid;\n  grid-gap: 30px;\n  grid-template:\n      \"head head\"\n      \"nav  main\" minmax(100px, 1fr)\n      \"foot foot\" /\n      200px 1fr;\n}\n.page__head {\n  grid-area: head;\n}\n.page__nav {\n  grid-area: nav;\n}\n.page__main {\n  grid-area: main;\n}\n.page__footer {\n  grid-area: foot;\n}\n```\n\n#### Do not create `::before` and `::after` pseudo elements\n\nLet's say you have this HTML:\n\n```html\n<div class=\"grid\">\n  <div class=\"grid-cell\"></div>\n</div>\n```\n\nAnd you write this CSS:\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n}\n\n.grid::before {\n  content: 'before';\n}\n\n.grid::after {\n  content: 'after';\n}\n```\n\nThis will be the output:\n\n```css\n.grid {\n  display: -ms-grid;\n  display: grid;\n  -ms-grid-columns: 1fr 1fr;\n  grid-template-columns: 1fr 1fr;\n  -ms-grid-rows: auto;\n  grid-template-rows: auto;\n}\n\n.grid > *:nth-child(1) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 1;\n}\n\n\n.grid > *:nth-child(2) {\n  -ms-grid-row: 1;\n  -ms-grid-column: 2;\n}\n\n.grid::before {\n  content: 'before';\n}\n\n.grid::after {\n  content: 'after';\n}\n```\n\nIE will place `.grid-cell`, `::before` and `::after` in row 1 column 1.\nModern browsers on the other hand will place `::before` in row 1 column 1,\n`.grid-cell` in row 1 column 2, and `::after` in row 2 column 1.\n\nSee this [Code Pen](https://codepen.io/daniel-tonon/pen/gBymVw) to see a visualization\nof the issue. View the Code Pen in both a modern browser and IE to see the difference.\n\nNote that you can still create `::before` and `::after` elements as long as you manually\nplace them outside the explicit grid.\n\n#### When changing the `grid gap` value, columns and rows must be re-declared\n\nIf you wish to change the size of a `grid-gap`, you will need to redeclare the grid columns and rows.\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 50px;\n}\n\n/* This will *NOT* work in IE */\n@media (max-width: 600px) {\n  .grid {\n    grid-gap: 20px;\n  }\n}\n\n/* This will *NOT* work in IE */\n.grid.small-gap {\n  grid-gap: 20px;\n}\n```\n\n```css\n.grid {\n  display: grid;\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 50px;\n}\n\n/* This *WILL* work in IE */\n@media (max-width: 600px) {\n  .grid {\n    grid-template-columns: 1fr 1fr;\n    grid-template-rows: auto;\n    grid-gap: 20px;\n  }\n}\n\n/* This *WILL* work in IE */\n.grid.small-gap {\n  grid-template-columns: 1fr 1fr;\n  grid-template-rows: auto;\n  grid-gap: 20px;\n}\n```\n\n## Debug\n\nRun `npx autoprefixer --info` in your project directory to check\nwhich browsers are selected and\u00a0which properties will be prefixed:\n\n```\n$ npx autoprefixer --info\nBrowsers:\n  Edge: 16\n\nThese browsers account for 0.26% of all users globally\n\nAt-Rules:\n  @viewport: ms\n\nSelectors:\n  ::placeholder: ms\n\nProperties:\n  appearance: webkit\n  flow-from: ms\n  flow-into: ms\n  hyphens: ms\n  overscroll-behavior: ms\n  region-fragment: ms\n  scroll-snap-coordinate: ms\n  scroll-snap-destination: ms\n  scroll-snap-points-x: ms\n  scroll-snap-points-y: ms\n  scroll-snap-type: ms\n  text-size-adjust: ms\n  text-spacing: ms\n  user-select: ms\n```\n\nJS API is also available:\n\n```js\nconsole.log(autoprefixer().info())\n```\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n\n## For Enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `autoprefixer` and thousands of other packages are working\nwith Tidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk,\nand improve code health, while paying the maintainers of the exact dependencies\nyou use. [Learn more.](https://tidelift.com/subscription/pkg/npm-autoprefixer?utm_source=npm-autoprefixer&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)"}, "npm": {"downloads": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 478713}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 10593307}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 43614249}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 130789946}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 231232509}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 429748018}], "dependentsCount": 5543, "starsCount": 211}, "github": {"homepage": "https://twitter.com/autoprefixer", "starsCount": 18417, "forksCount": 1114, "subscribersCount": 401, "issues": {"count": 1306, "openCount": 22, "distribution": {"3600": 419, "10800": 160, "32400": 179, "97200": 134, "291600": 92, "874800": 98, "2624400": 104, "7873200": 62, "23619600": 35, "70858800": 22, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "ai", "commitsCount": 1888}, {"username": "bogdan0083", "commitsCount": 14}, {"username": "yisibl", "commitsCount": 14}, {"username": "iamvdo", "commitsCount": 11}, {"username": "yepninja", "commitsCount": 11}, {"username": "porada", "commitsCount": 9}, {"username": "regularlabs", "commitsCount": 9}, {"username": "Dan503", "commitsCount": 7}, {"username": "kossnocorp", "commitsCount": 7}, {"username": "Aaron3", "commitsCount": 6}, {"username": "Taritsyn", "commitsCount": 6}, {"username": "cornbreadcompanion", "commitsCount": 6}, {"username": "cvn", "commitsCount": 6}, {"username": "lydell", "commitsCount": 5}, {"username": "Semigradsky", "commitsCount": 4}, {"username": "cvle", "commitsCount": 4}, {"username": "fanich37", "commitsCount": 4}, {"username": "kieranju", "commitsCount": 4}, {"username": "nschonni", "commitsCount": 4}, {"username": "MoOx", "commitsCount": 3}, {"username": "demiazz", "commitsCount": 3}, {"username": "gucong3000", "commitsCount": 3}, {"username": "heady", "commitsCount": 3}, {"username": "janczer", "commitsCount": 3}, {"username": "ocean90", "commitsCount": 3}, {"username": "papandreou", "commitsCount": 3}, {"username": "shvaikalesh", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "trevorah", "commitsCount": 3}, {"username": "AleshaOleg", "commitsCount": 2}, {"username": "Grawl", "commitsCount": 2}, {"username": "JLHwung", "commitsCount": 2}, {"username": "Justineo", "commitsCount": 2}, {"username": "Leonya", "commitsCount": 2}, {"username": "Raylehnhoff", "commitsCount": 2}, {"username": "RyanZim", "commitsCount": 2}, {"username": "arikon", "commitsCount": 2}, {"username": "battaglr", "commitsCount": 2}, {"username": "brainopia", "commitsCount": 2}, {"username": "dotch", "commitsCount": 2}, {"username": "esundahl", "commitsCount": 2}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "hudochenkov", "commitsCount": 2}, {"username": "iainbeeston", "commitsCount": 2}, {"username": "imathis", "commitsCount": 2}, {"username": "isolovev", "commitsCount": 2}, {"username": "kirs", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "mikaeljorhult", "commitsCount": 2}, {"username": "moimikey", "commitsCount": 2}, {"username": "mvasilkov", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "phanikandula", "commitsCount": 2}, {"username": "princed", "commitsCount": 2}, {"username": "rzhw", "commitsCount": 2}, {"username": "sethjgore", "commitsCount": 2}, {"username": "simevidas", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "subzey", "commitsCount": 2}, {"username": "tonyganch", "commitsCount": 2}, {"username": "varemenos", "commitsCount": 2}, {"username": "vegardlarsen", "commitsCount": 2}, {"username": "whitequark", "commitsCount": 2}, {"username": "Aljullu", "commitsCount": 1}, {"username": "CyberAP", "commitsCount": 1}, {"username": "Diablohu", "commitsCount": 1}, {"username": "Drarok", "commitsCount": 1}, {"username": "Gibr", "commitsCount": 1}, {"username": "JoshuaHall", "commitsCount": 1}, {"username": "Sire", "commitsCount": 1}, {"username": "Splaktar", "commitsCount": 1}, {"username": "TheRusskiy", "commitsCount": 1}, {"username": "YozhikM", "commitsCount": 1}, {"username": "aduh95", "commitsCount": 1}, {"username": "alex7kom", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "evanzlj", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "filipewl", "commitsCount": 1}, {"username": "halfzebra", "commitsCount": 1}, {"username": "idoo", "commitsCount": 1}, {"username": "ivandata", "commitsCount": 1}, {"username": "jmmarco", "commitsCount": 1}, {"username": "kanlukasz", "commitsCount": 1}, {"username": "kotfire", "commitsCount": 1}, {"username": "mattburesh", "commitsCount": 1}, {"username": "nicnilov", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "samiheikki", "commitsCount": 1}, {"username": "semeleven", "commitsCount": 1}, {"username": "soul-wish", "commitsCount": 1}, {"username": "svewag", "commitsCount": 1}, {"username": "tkrotoff", "commitsCount": 1}, {"username": "vostrik", "commitsCount": 1}, {"username": "webschik", "commitsCount": 1}, {"username": "y-gagar1n", "commitsCount": 1}, {"username": "yuriyalekseyev", "commitsCount": 1}, {"username": "zzzzBov", "commitsCount": 1}], "commits": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 11}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 25}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 89}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 31623, "testsSize": 211260, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"chalk": {"required": "^2.4.2", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6749999999999999, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 20243, "downloadsCount": 43596648.666666664, "downloadsAcceleration": 95912.42243150692, "dependentsCount": 5543}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8169006849315068, "openIssues": 1, "issuesDistribution": 0.9309005549747916}}, "score": {"final": 0.9004989118202956, "detail": {"quality": 0.8464017003646478, "popularity": 0.8474726780742122, "maintenance": 0.9998941839569344}}}}, {"url-loader": {"analyzedAt": "2020-06-13T03:01:59.396Z", "collected": {"metadata": {"name": "url-loader", "scope": "unscoped", "version": "4.1.0", "description": "A loader for webpack which transforms files into base64 URIs", "keywords": ["webpack"], "date": "2020-04-08T16:02:29.343Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/url-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/url-loader", "homepage": "https://github.com/webpack-contrib/url-loader", "repository": "https://github.com/webpack-contrib/url-loader", "bugs": "https://github.com/webpack-contrib/url-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "mime-types": "^2.1.26", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.3.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-plugin-import": "^2.20.2", "file-loader": "^6.0.0", "husky": "^4.2.3", "jest": "^25.3.0", "jest-junit": "^10.0.0", "lint-staged": "^10.1.2", "memfs": "^3.1.2", "mini-svg-data-uri": "^1.1.3", "npm-run-all": "^4.1.5", "prettier": "^2.0.4", "standard-version": "^7.1.0", "webpack": "^4.42.1"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0", "file-loader": "*"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# url-loader\n\nA loader for webpack which transforms files into base64 URIs.\n\n## Getting Started\n\nTo begin, you'll need to install `url-loader`:\n\n```console\n$ npm install url-loader --save-dev\n```\n\n`url-loader` works like\n[`file-loader`](https://github.com/webpack-contrib/file-loader), but can return\na DataURL if the file is smaller than a byte limit.\n\n**index.js**\n\n```js\nimport img from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|             Name              |            Type             |                            Default                            | Description                                                                         |\n| :---------------------------: | :-------------------------: | :-----------------------------------------------------------: | :---------------------------------------------------------------------------------- |\n|     **[`limit`](#limit)**     | `{Boolean\\|Number\\|String}` |                            `true`                             | Specifying the maximum size of a file in bytes.                                     |\n|  **[`mimetype`](#mimetype)**  |     `{Boolean\\|String}`     | based from [mime-types](https://github.com/jshttp/mime-types) | Sets the MIME type for the file to be transformed.                                  |\n|  **[`encoding`](#encoding)**  |     `{Boolean\\|String}`     |                           `base64`                            | Specify the encoding which the file will be inlined with.                           |\n| **[`generator`](#generator)** |        `{Function}`         |           `() => type/subtype;encoding,base64_data`           | You can create you own custom implementation for encoding data.                     |\n|  **[`fallback`](#fallback)**  |         `{String}`          |                         `file-loader`                         | Specifies an alternative loader to use when a target file's size exceeds the limit. |\n|  **[`esModule`](#esmodule)**  |         `{Boolean}`         |                            `true`                             | Use ES modules syntax.                                                              |\n\n### `limit`\n\nType: `Boolean|Number|String`\nDefault: `undefined`\n\nThe limit can be specified via loader options and defaults to no limit.\n\n#### `Boolean`\n\nEnable or disable transform files into base64.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Number|String`\n\nA `Number` or `String` specifying the maximum size of a file in bytes.\nIf the file size is **equal** or **greater** than the limit [`file-loader`](https://github.com/webpack-contrib/file-loader) will be used (by default) and all query parameters are passed to it.\n\nUsing an alternative to `file-loader` is enabled via the `fallback` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              limit: 8192,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `mimetype`\n\nType: `Boolean|String`\nDefault: based from [mime-types](https://github.com/jshttp/mime-types)\n\nSpecify the `mimetype` which the file will be inlined with.\nIf unspecified the `mimetype` value will be used from [mime-types](https://github.com/jshttp/mime-types).\n\n#### `Boolean`\n\nThe `true` value allows to generation the `mimetype` part from [mime-types](https://github.com/jshttp/mime-types).\nThe `false` value removes the `mediatype` part from a Data URL (if omitted, defaults to `text/plain;charset=US-ASCII`).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              mimetype: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nSets the MIME type for the file to be transformed.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              mimetype: 'image/png',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `encoding`\n\nType: `Boolean|String`\nDefault: `base64`\n\nSpecify the `encoding` which the file will be inlined with.\nIf unspecified the `encoding` will be `base64`.\n\n#### `Boolean`\n\nIf you don't want to use any encoding you can set `encoding` to `false` however if you set it to `true` it will use the default encoding `base64`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              encoding: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nIt supports [Node.js Buffers and Character Encodings](https://nodejs.org/api/buffer.html#buffer_buffers_and_character_encodings) which are `[\"utf8\",\"utf16le\",\"latin1\",\"base64\",\"hex\",\"ascii\",\"binary\",\"ucs2\"]`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              encoding: 'utf8',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `generator`\n\nType: `Function`\nDefault: `(mimetype, encoding, content, resourcePath) => mimetype;encoding,base64_content`\n\nYou can create you own custom implementation for encoding data.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|html)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              // The `mimetype` and `encoding` arguments will be obtained from your options\n              // The `resourcePath` argument is path to file.\n              generator: (content, mimetype, encoding, resourcePath) => {\n                if (/\\.html$/i.test(resourcePath)) {\n                  return `data:${mimetype},${content.toString()}`;\n                }\n\n                return `data:${mimetype}${\n                  encoding ? `;${encoding}` : ''\n                },${content.toString(encoding)}`;\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `fallback`\n\nType: `String`\nDefault: `'file-loader'`\n\nSpecifies an alternative loader to use when a target file's size exceeds the limit set in the `limit` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe fallback loader will receive the same configuration options as url-loader.\n\nFor example, to set the quality option of a responsive-loader above use:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              fallback: require.resolve('responsive-loader'),\n              quality: 85,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `file-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### SVG\n\nSVG can be compressed into a more compact output, avoiding `base64`.\nYou can read about it more [here](https://css-tricks.com/probably-dont-base64-svg/).\nYou can do it using [mini-svg-data-uri](https://github.com/tigt/mini-svg-data-uri) package.\n\n**webpack.config.js**\n\n```js\nconst svgToMiniDataURI = require('mini-svg-data-uri');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.svg$/i,\n        use: [\n          {\n            loader: 'url-loader',\n            options: {\n              generator: (content) => svgToMiniDataURI(content.toString()),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/url-loader.svg\n[npm-url]: https://npmjs.com/package/url-loader\n[node]: https://img.shields.io/node/v/url-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/url-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/url-loader\n[tests]: https://dev.azure.com/webpack-contrib/url-loader/_apis/build/status/webpack-contrib.url-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/url-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/url-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/url-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=url-loader\n[size-url]: https://packagephobia.now.sh/result?p=url-loader\n\n```\n\n```"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 980050}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6240930}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26564313}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 77463521}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 136952185}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 243450943}], "dependentsCount": 6855, "starsCount": 64}, "github": {"starsCount": 1316, "forksCount": 138, "subscribersCount": 16, "issues": {"count": 210, "openCount": 1, "distribution": {"3600": 47, "10800": 15, "32400": 22, "97200": 24, "291600": 11, "874800": 15, "2624400": 11, "7873200": 25, "23619600": 22, "70858800": 16, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 37}, {"username": "d3viant0ne", "commitsCount": 18}, {"username": "sokra", "commitsCount": 18}, {"username": "michael-ciniawsky", "commitsCount": 10}, {"username": "simon04", "commitsCount": 3}, {"username": "Pimm", "commitsCount": 2}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "shama", "commitsCount": 2}, {"username": "AndrewRayCode", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "EECOLOR", "commitsCount": 1}, {"username": "EslamHiko", "commitsCount": 1}, {"username": "Jeff-Tian", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TimHolzherr", "commitsCount": 1}, {"username": "aladdin-add", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "dayyeung", "commitsCount": 1}, {"username": "insin", "commitsCount": 1}, {"username": "jajaperson", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lukebatchelor", "commitsCount": 1}, {"username": "romanyanke", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "simonkberg", "commitsCount": 1}, {"username": "smondal", "commitsCount": 1}, {"username": "threequartersjohn", "commitsCount": 1}, {"username": "tomcraven", "commitsCount": 1}, {"username": "wibron", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 23}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 10758, "testsSize": 477587, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/url-loader.svg", "shields": "https://img.shields.io/npm/v/url-loader.svg", "content": "https://img.shields.io/npm/v/url-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/url-loader.svg", "service": "https://david-dm.org/webpack-contrib/url-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/url-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/url-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 1566, "downloadsCount": 25821173.666666668, "downloadsAcceleration": 78086.20058980215, "dependentsCount": 6855}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9038621188914231, "detail": {"quality": 0.9948067041804647, "popularity": 0.7298802702914029, "maintenance": 0.9998914658151222}}}}, {"rollup-plugin-node-resolve": {"analyzedAt": "2020-05-10T06:59:38.866Z", "collected": {"metadata": {"name": "rollup-plugin-node-resolve", "scope": "unscoped", "version": "5.2.0", "description": "Bundle third-party dependencies in node_modules", "keywords": ["rollup", "rollup-plugin", "es2015", "npm", "modules"], "date": "2019-06-29T07:19:01.573Z", "author": {"name": "Rich Harris", "email": "richard.a.harris@gmail.com", "username": "rich_harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "keithamus", "email": "npm@keithcirkel.co.uk"}, {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "shellscape", "email": "andrew@shellscape.org"}, {"username": "trysound", "email": "trysound@yandex.ru"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-node-resolve.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-node-resolve", "homepage": "https://github.com/rollup/rollup-plugin-node-resolve#readme", "repository": "https://github.com/rollup/rollup-plugin-node-resolve", "bugs": "https://github.com/rollup/rollup-plugin-node-resolve/issues"}, "license": "MIT", "dependencies": {"@types/resolve": "0.0.8", "builtin-modules": "^3.1.0", "is-module": "^1.0.0", "resolve": "^1.11.1", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.4.5", "@babel/preset-env": "^7.4.5", "@babel/register": "^7.4.4", "es5-ext": "^0.10.50", "eslint": "^5.16.0", "mocha": "^6.1.4", "rollup": "^1.16.1", "rollup-plugin-babel": "^4.3.2", "rollup-plugin-commonjs": "^10.0.0", "rollup-plugin-json": "^4.0.0", "string-capitalize": "^1.0.1", "typescript": "^3.5.2"}, "peerDependencies": {"rollup": ">=1.11.0"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 10}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 18}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-node-resolve.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-node-resolve\n\n*This plugin used to be called rollup-plugin-npm*\n\nLocate modules using the [Node resolution algorithm](https://nodejs.org/api/modules.html#modules_all_together), for using third party modules in `node_modules`\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-node-resolve\n```\n\n## Usage\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife',\n    name: 'MyModule'\n  },\n  plugins: [\n    resolve({\n\n      // the fields to scan in a package.json to determine the entry point\n      // if this list contains \"browser\", overrides specified in \"pkg.browser\"\n      // will be used\n      mainFields: ['module', 'main'], // Default: ['module', 'main']\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"module\" field for ES6 module if possible\n      module: true, // Default: true\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"jsnext:main\" if possible\n      // legacy field pointing to ES6 module in third-party libraries,\n      // deprecated in favor of \"pkg.module\":\n      // - see: https://github.com/rollup/rollup/wiki/pkg.module\n      jsnext: true,  // Default: false\n\n      // DEPRECATED: use \"mainFields\" instead\n      // use \"main\" field or index.js, even if it's not an ES6 module\n      // (needs to be converted from CommonJS to ES6)\n      // \u2013 see https://github.com/rollup/rollup-plugin-commonjs\n      main: true,  // Default: true\n\n      // some package.json files have a \"browser\" field which specifies\n      // alternative files to load for people bundling for the browser. If\n      // that's you, either use this option or add \"browser\" to the\n      // \"mainfields\" option, otherwise pkg.browser will be ignored\n      browser: true,  // Default: false\n\n      // not all files you want to resolve are .js files\n      extensions: [ '.mjs', '.js', '.jsx', '.json' ],  // Default: [ '.mjs', '.js', '.json', '.node' ]\n\n      // whether to prefer built-in modules (e.g. `fs`, `path`) or\n      // local ones with the same names\n      preferBuiltins: false,  // Default: true\n\n      // Lock the module search in this path (like a chroot). Module defined\n      // outside this path will be marked as external\n      jail: '/my/jail/path', // Default: '/'\n\n      // Set to an array of strings and/or regexps to lock the module search\n      // to modules that match at least one entry. Modules not matching any\n      // entry will be marked as external\n      only: [ 'some_module', /^@some_scope\\/.*$/ ], // Default: null\n\n      // If true, inspect resolved files to check that they are\n      // ES2015 modules\n      modulesOnly: true, // Default: false\n\n      // Force resolving for these modules to root's node_modules that helps\n      // to prevent bundling the same package multiple times if package is\n      // imported from dependencies.\n      dedupe: [ 'react', 'react-dom' ], // Default: []\n\n      // Any additional options that should be passed through\n      // to node-resolve\n      customResolveOptions: {\n        moduleDirectory: 'js_modules'\n      }\n    })\n  ]\n};\n```\n\n## Using with rollup-plugin-commonjs\n\nSince most packages in your node_modules folder are probably legacy CommonJS rather than JavaScript modules, you may need to use [rollup-plugin-commonjs](https://github.com/rollup/rollup-plugin-commonjs):\n\n```js\n// rollup.config.js\nimport resolve from 'rollup-plugin-node-resolve';\nimport commonjs from 'rollup-plugin-commonjs';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  name: 'MyModule',\n  plugins: [\n    resolve(),\n    commonjs()\n  ]\n};\n```\n\n## Resolving Built-Ins (like `fs`)\n\nThis plugin won't resolve any builtins (e.g. `fs`). If you need to resolve builtins you can install local modules and set `preferBuiltins` to `false`, or install a plugin like [rollup-plugin-node-builtins](https://github.com/calvinmetcalf/rollup-plugin-node-builtins) which provides stubbed versions of these methods.\n\nIf you want to silence warnings about builtins, you can add the list of builtins to the `externals` option; like so:\n\n```js\nimport resolve from 'rollup-plugin-node-resolve';\nimport builtins from 'builtin-modules'\nexport default ({\n  input: ...,\n  plugins: [resolve()],\n  externals: builtins,\n  output: ...\n})\n```\n\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 22413}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 506053}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 2143771}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 7345105}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 13739170}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 26455253}], "dependentsCount": 970, "starsCount": 3}, "github": {"starsCount": 457, "forksCount": 98, "subscribersCount": 12, "issues": {"count": 240, "openCount": 0, "distribution": {"3600": 22, "10800": 7, "32400": 15, "97200": 15, "291600": 21, "874800": 19, "2624400": 25, "7873200": 22, "23619600": 29, "70858800": 54, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "Rich-Harris", "commitsCount": 56}, {"username": "lukastaegert", "commitsCount": 48}, {"username": "keithamus", "commitsCount": 18}, {"username": "TrySound", "commitsCount": 13}, {"username": "mislav", "commitsCount": 8}, {"username": "kellyselden", "commitsCount": 4}, {"username": "ma2ciek", "commitsCount": 4}, {"username": "bterlson", "commitsCount": 3}, {"username": "eventualbuddha", "commitsCount": 3}, {"username": "GGAlanSmithee", "commitsCount": 2}, {"username": "lammas", "commitsCount": 2}, {"username": "manucorporat", "commitsCount": 2}, {"username": "mecurc", "commitsCount": 2}, {"username": "shellscape", "commitsCount": 2}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "Kocal", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "NotWoods", "commitsCount": 1}, {"username": "Spy-Seth", "commitsCount": 1}, {"username": "allex", "commitsCount": 1}, {"username": "arantes555", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "guillaumevincent", "commitsCount": 1}, {"username": "halfzebra", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "jonhartnett", "commitsCount": 1}, {"username": "kaksmet", "commitsCount": 1}, {"username": "kenjiO", "commitsCount": 1}, {"username": "leebyron", "commitsCount": 1}, {"username": "maranomynet", "commitsCount": 1}, {"username": "mcshaman", "commitsCount": 1}, {"username": "mikeharder", "commitsCount": 1}, {"username": "myshov", "commitsCount": 1}, {"username": "nick-woodward", "commitsCount": 1}, {"username": "nicolashenry", "commitsCount": 1}, {"username": "nolanlawson", "commitsCount": 1}, {"username": "sormy", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 3}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 32}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 4386, "testsSize": 34985, "hasChangelog": true}, "linters": ["eslint"], "outdatedDependencies": {"@types/resolve": {"required": "0.0.8", "stable": "1.17.0", "latest": "1.17.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 608, "downloadsCount": 2448368.3333333335, "downloadsAcceleration": 706.8662861491648, "dependentsCount": 970}, "maintenance": {"releasesFrequency": 0.7200342465753424, "commitsFrequency": 0.5257191780821918, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5418011353974097, "detail": {"quality": 0.5207086120593274, "popularity": 0.43912683113408846, "maintenance": 0.6625547453790875}}}}, {"eslint-plugin-promise": {"analyzedAt": "2020-05-06T18:17:25.093Z", "collected": {"metadata": {"name": "eslint-plugin-promise", "scope": "unscoped", "version": "4.2.1", "description": "Enforce best practices for JavaScript promises", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "promise", "promises"], "date": "2019-06-25T17:28:20.040Z", "author": {"name": "jden", "email": "jason@denizac.org"}, "publisher": {"username": "xjamundx", "email": "jamund@gmail.com"}, "maintainers": [{"username": "macklinu", "email": "macklinu@gmail.com"}, {"username": "xjamundx", "email": "jamund@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/xjamundx/eslint-plugin-promise.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-promise", "homepage": "https://github.com/xjamundx/eslint-plugin-promise#readme", "repository": "https://github.com/xjamundx/eslint-plugin-promise", "bugs": "https://github.com/xjamundx/eslint-plugin-promise/issues"}, "license": "ISC", "devDependencies": {"doctoc": "^1.3.0", "eslint": "^5.16.0", "eslint-config-prettier": "^3.0.1", "eslint-plugin-eslint-plugin": "^1.4.0", "eslint-plugin-jest": "^21.21.0", "eslint-plugin-node": "^7.0.1", "eslint-plugin-prettier": "^2.6.2", "husky": "^0.14.3", "jest": "^24.5.0", "jest-runner-eslint": "^0.7.3", "lint-staged": "^7.2.2", "prettier": "^1.14.2"}, "releases": [{"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 2}, {"from": "2018-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "# eslint-plugin-promise\n\nEnforce best practices for JavaScript promises.\n\n[![travis-ci](https://travis-ci.org/xjamundx/eslint-plugin-promise.svg)](https://travis-ci.org/xjamundx/eslint-plugin-promise)\n[![npm version](https://badge.fury.io/js/eslint-plugin-promise.svg)](https://www.npmjs.com/package/eslint-plugin-promise)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [Rules](#rules)\n- [Maintainers](#maintainers)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nYou'll first need to install [ESLint](http://eslint.org):\n\n```\n$ npm install eslint --save-dev\n```\n\nNext, install `eslint-plugin-promise`:\n\n```\n$ npm install eslint-plugin-promise --save-dev\n```\n\n**Note:** If you installed ESLint globally (using the `-g` flag) then you must\nalso install `eslint-plugin-promise` globally.\n\n## Usage\n\nAdd `promise` to the plugins section of your `.eslintrc.json` configuration\nfile. You can omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"promise\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"promise/always-return\": \"error\",\n    \"promise/no-return-wrap\": \"error\",\n    \"promise/param-names\": \"error\",\n    \"promise/catch-or-return\": \"error\",\n    \"promise/no-native\": \"off\",\n    \"promise/no-nesting\": \"warn\",\n    \"promise/no-promise-in-callback\": \"warn\",\n    \"promise/no-callback-in-promise\": \"warn\",\n    \"promise/avoid-new\": \"warn\",\n    \"promise/no-new-statics\": \"error\",\n    \"promise/no-return-in-finally\": \"warn\",\n    \"promise/valid-params\": \"warn\"\n  }\n}\n```\n\nor start with the recommended rule set:\n\n```json\n{\n  \"extends\": [\"plugin:promise/recommended\"]\n}\n```\n\n## Rules\n\n| rule                                                     | description                                                                      | recommended | fixable  |\n| -------------------------------------------------------- | -------------------------------------------------------------------------------- | ----------- | -------- |\n| [`catch-or-return`][catch-or-return]                     | Enforces the use of `catch()` on un-returned promises.                           | :bangbang:  |          |\n| [`no-return-wrap`][no-return-wrap]                       | Avoid wrapping values in `Promise.resolve` or `Promise.reject` when not needed.  | :bangbang:  |          |\n| [`param-names`][param-names]                             | Enforce consistent param names and ordering when creating new promises.          | :bangbang:  |          |\n| [`always-return`][always-return]                         | Return inside each `then()` to create readable and reusable Promise chains.      | :bangbang:  |          |\n| [`no-native`][no-native]                                 | In an ES5 environment, make sure to create a `Promise` constructor before using. |             |          |\n| [`no-nesting`][no-nesting]                               | Avoid nested `then()` or `catch()` statements                                    | :warning:   |          |\n| [`no-promise-in-callback`][no-promise-in-callback]       | Avoid using promises inside of callbacks                                         | :warning:   |          |\n| [`no-callback-in-promise`][no-callback-in-promise]       | Avoid calling `cb()` inside of a `then()` (use [nodeify][] instead)              | :warning:   |          |\n| [`avoid-new`][avoid-new]                                 | Avoid creating `new` promises outside of utility libs (use [pify][] instead)     |             |          |\n| [`no-new-statics`][no-new-statics]                       | Avoid calling `new` on a Promise static method                                   | :bangbang:  | :wrench: |\n| [`no-return-in-finally`][no-return-in-finally]           | Disallow return statements in `finally()`                                        | :warning:   |          |\n| [`valid-params`][valid-params]                           | Ensures the proper number of arguments are passed to Promise functions           | :warning:   |          |\n| [`prefer-await-to-then`][prefer-await-to-then]           | Prefer `await` to `then()` for reading Promise values                            | :seven:     |          |\n| [`prefer-await-to-callbacks`][prefer-await-to-callbacks] | Prefer async/await to the callback pattern                                       | :seven:     |          |\n\n**Key**\n\n| icon       | description                                     |\n| ---------- | ----------------------------------------------- |\n| :bangbang: | Reports as error in recommended configuration   |\n| :warning:  | Reports as warning in recommended configuration |\n| :seven:    | ES2017 Async Await rules                        |\n| :wrench:   | Rule is fixable with `eslint --fix`             |\n\n## Maintainers\n\n- Jamund Ferguson - [@xjamundx][]\n- Macklin Underdown - [@macklinu][]\n\n## License\n\n- (c) MMXV jden <mailto:jason@denizac.org> - ISC license.\n- (c) 2016 Jamund Ferguson <mailto:jamund@gmail.com> - ISC license.\n\n[catch-or-return]: docs/rules/catch-or-return.md\n[no-return-wrap]: docs/rules/no-return-wrap.md\n[param-names]: docs/rules/param-names.md\n[always-return]: docs/rules/always-return.md\n[no-native]: docs/rules/no-native.md\n[no-nesting]: docs/rules/no-nesting.md\n[no-promise-in-callback]: docs/rules/no-promise-in-callback.md\n[no-callback-in-promise]: docs/rules/no-callback-in-promise.md\n[avoid-new]: docs/rules/avoid-new.md\n[no-new-statics]: docs/rules/no-new-statics.md\n[no-return-in-finally]: docs/rules/no-return-in-finally.md\n[valid-params]: docs/rules/valid-params.md\n[prefer-await-to-then]: docs/rules/prefer-await-to-then.md\n[prefer-await-to-callbacks]: docs/rules/prefer-await-to-callbacks.md\n[nodeify]: https://www.npmjs.com/package/nodeify\n[pify]: https://www.npmjs.com/package/pify\n[@macklinu]: https://github.com/macklinu\n[@xjamundx]: https://github.com/xjamundx"}, "npm": {"downloads": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 304041}, {"from": "2020-04-29T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 1644219}, {"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 7356129}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 20983084}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 37455171}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 69620977}], "dependentsCount": 1422, "starsCount": 24}, "github": {"starsCount": 528, "forksCount": 67, "subscribersCount": 7, "issues": {"count": 186, "openCount": 44, "distribution": {"3600": 32, "10800": 3, "32400": 2, "97200": 11, "291600": 25, "874800": 10, "2624400": 19, "7873200": 21, "23619600": 29, "70858800": 25, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "macklinu", "commitsCount": 50}, {"username": "xjamundx", "commitsCount": 41}, {"username": "ChristianMurphy", "commitsCount": 4}, {"username": "ahuff44", "commitsCount": 3}, {"username": "ddsol", "commitsCount": 3}, {"username": "ota-meshi", "commitsCount": 3}, {"username": "thisgeek", "commitsCount": 3}, {"username": "102", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "feross", "commitsCount": 2}, {"username": "geoffdutton", "commitsCount": 2}, {"username": "lparry", "commitsCount": 2}, {"username": "mikegreiling", "commitsCount": 2}, {"username": "zloirock", "commitsCount": 2}, {"username": "adrianmcli", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "darrachequesne", "commitsCount": 1}, {"username": "dbrockman", "commitsCount": 1}, {"username": "humphd", "commitsCount": 1}, {"username": "jfmengels", "commitsCount": 1}, {"username": "jokeyrhyme", "commitsCount": 1}, {"username": "jshemas", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "markfields", "commitsCount": 1}, {"username": "paleite", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "sudo-suhas", "commitsCount": 1}, {"username": "thiagocaiubi", "commitsCount": 1}, {"username": "tianjianchn", "commitsCount": 1}], "commits": [{"from": "2020-04-29T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 1}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 1}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6195, "testsSize": 35766, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/xjamundx/eslint-plugin-promise.svg", "service": "https://api.travis-ci.org/xjamundx/eslint-plugin-promise.svg", "shields": "https://img.shields.io/travis/xjamundx/eslint-plugin-promise.svg", "content": "https://img.shields.io/travis/xjamundx/eslint-plugin-promise.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 655, "downloadsCount": 6994361.333333333, "downloadsAcceleration": 17950.94446347031, "dependentsCount": 1422}, "maintenance": {"releasesFrequency": 0.18493150684931509, "commitsFrequency": 0.09852739726027399, "openIssues": 0.9390681003584229, "issuesDistribution": 0}}, "score": {"final": 0.6320591926254259, "detail": {"quality": 0.9650973074985816, "popularity": 0.5509082856199928, "maintenance": 0.4277488583110114}}}}, {"debug": {"analyzedAt": "2020-05-19T09:56:31.247Z", "collected": {"metadata": {"name": "debug", "scope": "unscoped", "version": "4.1.1", "description": "small debugging utility", "keywords": ["debug", "log", "debugger"], "date": "2018-12-22T16:40:22.538Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "qix", "email": "i.am.qix@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "thebigredgeek", "email": "rhyneandrew@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "tootallnate", "email": "nathan@tootallnate.net"}], "contributors": [{"name": "Nathan Rajlich", "email": "nathan@tootallnate.net", "url": "http://n8.io"}, {"name": "Andrew Rhyne", "email": "rhyneandrew@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/visionmedia/debug.git"}, "links": {"npm": "https://www.npmjs.com/package/debug", "homepage": "https://github.com/visionmedia/debug#readme", "repository": "https://github.com/visionmedia/debug", "bugs": "https://github.com/visionmedia/debug/issues"}, "license": "MIT", "dependencies": {"ms": "^2.1.1"}, "devDependencies": {"@babel/cli": "^7.0.0", "@babel/core": "^7.0.0", "@babel/preset-env": "^7.0.0", "browserify": "14.4.0", "chai": "^3.5.0", "concurrently": "^3.1.0", "coveralls": "^3.0.2", "istanbul": "^0.4.5", "karma": "^3.0.0", "karma-chai": "^0.1.0", "karma-mocha": "^1.3.0", "karma-phantomjs-launcher": "^1.0.2", "mocha": "^5.2.0", "mocha-lcov-reporter": "^1.2.0", "rimraf": "^2.5.4", "xo": "^0.23.0"}, "releases": [{"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2018-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 11527244}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 66918005}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 276043725}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 807023105}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1467750748}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 2705930716}], "dependentsCount": 26569, "starsCount": 701}, "github": {"starsCount": 8727, "forksCount": 741, "subscribersCount": 137, "issues": {"count": 755, "openCount": 43, "distribution": {"3600": 118, "10800": 45, "32400": 39, "97200": 50, "291600": 47, "874800": 57, "2624400": 59, "7873200": 74, "23619600": 109, "70858800": 145, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "TooTallNate", "commitsCount": 139}, {"username": "tj", "commitsCount": 67}, {"username": "thebigredgeek", "commitsCount": 38}, {"username": "Qix-", "commitsCount": 37}, {"username": "yamikuronue", "commitsCount": 16}, {"username": "anaisbetts", "commitsCount": 6}, {"username": "slaskis", "commitsCount": 5}, {"username": "dmarcelino", "commitsCount": 4}, {"username": "dougwilson", "commitsCount": 4}, {"username": "ossdev07", "commitsCount": 4}, {"username": "marmolejo", "commitsCount": 3}, {"username": "stephenmathieson", "commitsCount": 3}, {"username": "timoxley", "commitsCount": 3}, {"username": "vpulim", "commitsCount": 3}, {"username": "escwald", "commitsCount": 2}, {"username": "gscottolson", "commitsCount": 2}, {"username": "mooyoul", "commitsCount": 2}, {"username": "nopnop", "commitsCount": 2}, {"username": "sdaitzman", "commitsCount": 2}, {"username": "vkarpov15", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "AccaliaDeElementia", "commitsCount": 1}, {"username": "DanielOchoa", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "DevSide", "commitsCount": 1}, {"username": "DiegoRBaquero", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "EirikBirkeland", "commitsCount": 1}, {"username": "FantasticFiasco", "commitsCount": 1}, {"username": "ForsakenHarmony", "commitsCount": 1}, {"username": "HaykoKoryun", "commitsCount": 1}, {"username": "KlausTrainer", "commitsCount": 1}, {"username": "KyleStay", "commitsCount": 1}, {"username": "LucianBuzzo", "commitsCount": 1}, {"username": "MylesBorins", "commitsCount": 1}, {"username": "abenhamdine", "commitsCount": 1}, {"username": "alexey-pelykh", "commitsCount": 1}, {"username": "amir-s", "commitsCount": 1}, {"username": "andrzejdus", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "bnoordhuis", "commitsCount": 1}, {"username": "botverse", "commitsCount": 1}, {"username": "denouche", "commitsCount": 1}, {"username": "diedsmiling", "commitsCount": 1}, {"username": "es128", "commitsCount": 1}, {"username": "exoticknight", "commitsCount": 1}, {"username": "febbraro", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "freewil", "commitsCount": 1}, {"username": "gimre", "commitsCount": 1}, {"username": "gorangajic", "commitsCount": 1}, {"username": "gtjoseph", "commitsCount": 1}, {"username": "hsiliev", "commitsCount": 1}, {"username": "hubdotcom", "commitsCount": 1}, {"username": "ibc", "commitsCount": 1}, {"username": "inca", "commitsCount": 1}, {"username": "jalleyne", "commitsCount": 1}, {"username": "jaredly", "commitsCount": 1}, {"username": "joaovieira", "commitsCount": 1}, {"username": "jochenberger", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "justmatt", "commitsCount": 1}, {"username": "kkirsche", "commitsCount": 1}, {"username": "kribblo", "commitsCount": 1}, {"username": "kwolfy", "commitsCount": 1}, {"username": "lchenay", "commitsCount": 1}, {"username": "leedm777", "commitsCount": 1}, {"username": "letharion", "commitsCount": 1}, {"username": "levithomason", "commitsCount": 1}, {"username": "lurch", "commitsCount": 1}, {"username": "lwolf", "commitsCount": 1}, {"username": "marbemac", "commitsCount": 1}, {"username": "matthewmueller", "commitsCount": 1}, {"username": "mattlyons0", "commitsCount": 1}, {"username": "mblarsen", "commitsCount": 1}, {"username": "medikoo", "commitsCount": 1}, {"username": "miaulightouch", "commitsCount": 1}, {"username": "miensol", "commitsCount": 1}, {"username": "mlucool", "commitsCount": 1}, {"username": "msasad", "commitsCount": 1}, {"username": "musikov", "commitsCount": 1}, {"username": "mykwillis", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "panuhorsmalahti", "commitsCount": 1}, {"username": "pi0", "commitsCount": 1}, {"username": "piamancini", "commitsCount": 1}, {"username": "profiprog", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "slavaGanzin", "commitsCount": 1}, {"username": "sorccu", "commitsCount": 1}, {"username": "timaschew", "commitsCount": 1}, {"username": "timruffles", "commitsCount": 1}, {"username": "tomtomau", "commitsCount": 1}, {"username": "vgoma", "commitsCount": 1}, {"username": "vitalikpi", "commitsCount": 1}, {"username": "wryk", "commitsCount": 1}, {"username": "yields", "commitsCount": 1}, {"username": "zacronos", "commitsCount": 1}], "commits": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 3}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 6}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 8}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3301, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "xo"], "coverage": 0.88}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.982, "health": 1, "branding": 0}, "popularity": {"communityInterest": 10406, "downloadsCount": 269007701.6666667, "downloadsAcceleration": 632152.6750761035, "dependentsCount": 26569}, "maintenance": {"releasesFrequency": 0.1356164383561644, "commitsFrequency": 0.6520547945205479, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7378108357206073, "detail": {"quality": 0.8438358707573559, "popularity": 0.9171959224540163, "maintenance": 0.46754714752712834}}}}, {"lint-staged": {"analyzedAt": "2020-06-17T10:32:05.929Z", "collected": {"metadata": {"name": "lint-staged", "scope": "unscoped", "version": "10.2.11", "description": "Lint files staged by git", "keywords": ["lint", "git", "staged", "eslint", "prettier", "stylelint", "code", "quality", "check", "format", "validate"], "date": "2020-06-17T10:10:05.134Z", "author": {"name": "Andrey Okonetchnikov", "email": "andrey@okonet.ru", "username": "okonet"}, "publisher": {"username": "okonet", "email": "andrey@okonet.ru"}, "maintainers": [{"username": "okonet", "email": "andrey@okonet.ru"}], "repository": {"type": "git", "url": "git+https://github.com/okonet/lint-staged.git"}, "links": {"npm": "https://www.npmjs.com/package/lint-staged", "homepage": "https://github.com/okonet/lint-staged#readme", "repository": "https://github.com/okonet/lint-staged", "bugs": "https://github.com/okonet/lint-staged/issues"}, "license": "MIT", "dependencies": {"chalk": "^4.0.0", "cli-truncate": "2.1.0", "commander": "^5.1.0", "cosmiconfig": "^6.0.0", "debug": "^4.1.1", "dedent": "^0.7.0", "enquirer": "^2.3.5", "execa": "^4.0.1", "listr2": "^2.1.0", "log-symbols": "^4.0.0", "micromatch": "^4.0.2", "normalize-path": "^3.0.0", "please-upgrade-node": "^3.2.0", "string-argv": "0.3.1", "stringify-object": "^3.3.0"}, "devDependencies": {"@babel/core": "^7.9.6", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/preset-env": "^7.9.6", "babel-eslint": "10.1.0", "babel-jest": "^26.0.1", "consolemock": "^1.1.0", "eslint": "^7.0.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "eslint-plugin-node": "^11.1.0", "eslint-plugin-prettier": "^3.1.3", "fs-extra": "^9.0.0", "husky": "^4.2.5", "jest": "^26.0.1", "jest-snapshot-serializer-ansi": "^1.0.0", "prettier": "^2.0.5"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 21}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 33}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 65}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 90}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# \ud83d\udeab\ud83d\udca9 lint-staged ![GitHub Actions](https://github.com/okonet/lint-staged/workflows/CI/badge.svg) [![Build Status for Windows](https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged?branch=master&svg=true)](https://ci.appveyor.com/project/okonet/lint-staged) [![npm version](https://badge.fury.io/js/lint-staged.svg)](https://badge.fury.io/js/lint-staged) [![Codecov](https://codecov.io/gh/okonet/lint-staged/branch/master/graph/badge.svg)](https://codecov.io/gh/okonet/lint-staged)\n\nRun linters against staged git files and don't let :poop: slip into your code base!\n\n[![asciicast](https://asciinema.org/a/199934.svg)](https://asciinema.org/a/199934)\n\n## Why\n\nLinting makes more sense when run before committing your code. By doing so you can ensure no errors go into the repository and enforce code style. But running a lint process on a whole project is slow and linting results can be irrelevant. Ultimately you only want to lint files that will be committed.\n\nThis project contains a script that will run arbitrary shell tasks with a list of staged files as an argument, filtered by a specified glob pattern.\n\n## Related blogs posts and talks\n\n- [Make Linting Great Again](https://medium.com/@okonetchnikov/make-linting-great-again-f3890e1ad6b8#.8qepn2b5l)\n- [Running Jest Tests Before Each Git Commit](https://benmccormick.org/2017/02/26/running-jest-tests-before-each-git-commit/)\n- [AgentConf: Make Linting Great Again](https://www.youtube.com/watch?v=-mhY7e-EsC4)\n- [SurviveJS Interview](https://survivejs.com/blog/lint-staged-interview/)\n\n> If you've written one, please submit a PR with the link to it!\n\n## Installation and setup\n\nThe fastest way to start using lint-staged is to run following command in your terminal:\n\n```bash\nnpx mrm lint-staged\n```\n\nIt will install and configure [husky](https://github.com/typicode/husky) and lint-staged depending on code quality tools from `package.json` dependencies so please make sure you install (`npm install --save-dev`) and configure all code quality tools like [Prettier](https://prettier.io), [ESlint](https://eslint.org) prior that.\n\nDon't forget to commit changes to `package.json` to share this setup with your team!\n\nNow change a few files, `git add` or `git add --patch` some of them to your commit and try to `git commit` them.\n\nSee [examples](#examples) and [configuration](#configuration) for more information.\n\n## Changelog\n\nSee [Releases](https://github.com/okonet/lint-staged/releases)\n\n### Migration\n\n#### v10\n\n- From `v10.0.0` onwards any new modifications to originally staged files will be automatically added to the commit.\n  If your task previously contained a `git add` step, please remove this.\n  The automatic behaviour ensures there are less race-conditions,\n  since trying to run multiple git operations at the same time usually results in an error.\n- From `v10.0.0` onwards _lint-staged_ uses git stashes to improve speed and provide backups while running.\n  Since git stashes require at least an initial commit, you shouldn't run _lint-staged_ in an empty repo.\n- From `v10.0.0` onwards _lint-staged_ requires Node.js version 10.13.0 or later.\n- From `v10.0.0` onwards _lint-staged_ will abort the commit if linter tasks undo all staged changes. To allow creating empty commit, please use the `--allow-empty` option.\n\n## Command line flags\n\n```bash\n\u276f npx lint-staged --help\nUsage: lint-staged [options]\n\nOptions:\n  -V, --version                      output the version number\n  --allow-empty                      allow empty commits when tasks revert all staged changes\n                                     (default: false)\n  -c, --config [path]                path to configuration file\n  -d, --debug                        print additional debug information (default: false)\n  --no-stash                         disable the backup stash, and do not revert in case of\n                                     errors\n  -p, --concurrent <parallel tasks>  the number of tasks to run concurrently, or false to run\n                                     tasks serially (default: true)\n  -q, --quiet                        disable lint-staged\u2019s own console output (default: false)\n  -r, --relative                     pass relative filepaths to tasks (default: false)\n  -x, --shell                        skip parsing of tasks for better shell support (default:\n                                     false)\n  -v, --verbose                      show task output even when tasks succeed; by default only\n                                     failed output is shown (default: false)\n  -h, --help                         display help for command\n```\n\n- **`--allow-empty`**: By default, when linter tasks undo all staged changes, lint-staged will exit with an error and abort the commit. Use this flag to allow creating empty git commits.\n- **`--config [path]`**: Manually specify a path to a config file or npm package name. Note: when used, lint-staged won't perform the config file search and print an error if the specified file cannot be found.\n- **`--debug`**: Run in debug mode. When set, it does the following:\n  - uses [debug](https://github.com/visionmedia/debug) internally to log additional information about staged files, commands being executed, location of binaries, etc. Debug logs, which are automatically enabled by passing the flag, can also be enabled by setting the environment variable `$DEBUG` to `lint-staged*`.\n  - uses [`verbose` renderer](https://github.com/SamVerschueren/listr-verbose-renderer) for `listr`; this causes serial, uncoloured output to the terminal, instead of the default (beautified, dynamic) output.\n- **`--concurrent [number | (true/false)]`**: Controls the concurrency of tasks being run by lint-staged. **NOTE**: This does NOT affect the concurrency of subtasks (they will always be run sequentially). Possible values are:\n  - `false`: Run all tasks serially\n  - `true` (default) : _Infinite_ concurrency. Runs as many tasks in parallel as possible.\n  - `{number}`: Run the specified number of tasks in parallel, where `1` is equivalent to `false`.\n- **`--no-stash`**: By default a backup stash will be created before running the tasks, and all task modifications will be reverted in case of an error. This option will disable creating the stash, and instead leave all modifications in the index when aborting the commit.\n- **`--quiet`**: Supress all CLI output, except from tasks.\n- **`--relative`**: Pass filepaths relative to `process.cwd()` (where `lint-staged` runs) to tasks. Default is `false`.\n- **`--shell`**: By default linter commands will be parsed for speed and security. This has the side-effect that regular shell scripts might not work as expected. You can skip parsing of commands with this option.\n- **`--verbose`**: Show task output even when tasks succeed. By default only failed output is shown.\n\n## Configuration\n\nStarting with v3.1 you can now use different ways of configuring it:\n\n- `lint-staged` object in your `package.json`\n- `.lintstagedrc` file in JSON or YML format\n- `lint-staged.config.js` file in JS format\n- Pass a configuration file using the `--config` or `-c` flag\n\nSee [cosmiconfig](https://github.com/davidtheclark/cosmiconfig) for more details on what formats are supported.\n\nConfiguration should be an object where each value is a command to run and its key is a glob pattern to use for this command. This package uses [micromatch](https://github.com/micromatch/micromatch) for glob patterns.\n\n#### `package.json` example:\n\n```json\n{\n  \"lint-staged\": {\n    \"*\": \"your-cmd\"\n  }\n}\n```\n\n#### `.lintstagedrc` example\n\n```json\n{\n  \"*\": \"your-cmd\"\n}\n```\n\nThis config will execute `your-cmd` with the list of currently staged files passed as arguments.\n\nSo, considering you did `git add file1.ext file2.ext`, lint-staged will run the following command:\n\n`your-cmd file1.ext file2.ext`\n\n## Filtering files\n\nLinter commands work on a subset of all staged files, defined by a _glob pattern_. `lint-staged\u00b4 uses [micromatch](https://github.com/micromatch/micromatch) for matching files with the following rules:\n\n- If the glob pattern contains no slashes (`/`), micromatch's `matchBase` option will enabled, so globs match a file's basename regardless of directory:\n  - **`\"*.js\"`** will match all JS files, like `/test.js` and `/foo/bar/test.js`\n  - **`\"!(*test).js\"`**. will match all JS files, except those ending in `test.js`, so `foo.js` but not `foo.test.js`\n- If the glob pattern does contain a slash (`/`), it will match for paths as well:\n  - **`\"./*.js\"`** will match all JS files in the git repo root, so `/test.js` but not `/foo/bar/test.js`\n  - **`\"foo/**/\\*.js\"`** will match all JS files inside the`/foo`directory, so`/foo/bar/test.js`but not`/test.js`\n\nWhen matching, `lint-staged` will do the following\n\n- Resolve the git root automatically, no configuration needed.\n- Pick the staged files which are present inside the project directory.\n- Filter them using the specified glob patterns.\n- Pass absolute paths to the linters as arguments.\n\n**NOTE:** `lint-staged` will pass _absolute_ paths to the linters to avoid any confusion in case they're executed in a different working directory (i.e. when your `.git` directory isn't the same as your `package.json` directory).\n\nAlso see [How to use `lint-staged` in a multi package monorepo?](#how-to-use-lint-staged-in-a-multi-package-monorepo)\n\n### Ignoring files\n\nThe concept of `lint-staged` is to run configured linter (or other) tasks on files that are staged in git. `lint-staged` will always pass a list of all staged files to the task, and ignoring any files should be configured in the task itself.\n\nConsider a project that uses [`prettier`](https://prettier.io/) to keep code format consistent across all files. The project also stores minified 3rd-party vendor libraries in the `vendor/` directory. To keep `prettier` from throwing errors on these files, the vendor directory should be added to prettier's ignore configuration, the `.prettierignore` file. Running `npx prettier .` will ignore the entire vendor directory, throwing no errors. When `lint-staged` is added to the project and configured to run prettier, all modified and staged files in the vendor directory will be ignored by prettier, even though it receives them as input.\n\nIn advanced scenarios, where it is impossible to configure the linter task itself to ignore files, but some staged files should still be ignored by `lint-staged`, it is possible to filter filepaths before passing them to tasks by using the function syntax. See [Example: Ignore files from match](#example-ignore-files-from-match).\n\n## What commands are supported?\n\nSupported are any executables installed locally or globally via `npm` as well as any executable from your \\$PATH.\n\n> Using globally installed scripts is discouraged, since lint-staged may not work for someone who doesn\u2019t have it installed.\n\n`lint-staged` uses [execa](https://github.com/sindresorhus/execa#preferlocal) to locate locally installed scripts. So in your `.lintstagedrc` you can write:\n\n```json\n{\n  \"*.js\": \"eslint --fix\"\n}\n```\n\nPass arguments to your commands separated by space as you would do in the shell. See [examples](#examples) below.\n\n## Running multiple commands in a sequence\n\nYou can run multiple commands in a sequence on every glob. To do so, pass an array of commands instead of a single one. This is useful for running autoformatting tools like `eslint --fix` or `stylefmt` but can be used for any arbitrary sequences.\n\nFor example:\n\n```json\n{\n  \"*.js\": [\"eslint\", \"prettier --write\"]\n}\n```\n\ngoing to execute `eslint` and if it exits with `0` code, it will execute `prettier --write` on all staged `*.js` files.\n\n## Using JS functions to customize tasks\n\nWhen supplying configuration in JS format it is possible to define the task as a function, which will receive an array of staged filenames/paths and should return the complete command as a string. It is also possible to return an array of complete command strings, for example when the task supports only a single file input. The function can be either sync or async.\n\n```ts\ntype TaskFn = (filenames: string[]) => string | string[] | Promise<string | string[]>\n```\n\n### Example: Wrap filenames in single quotes and run once per file\n\n```js\n// .lintstagedrc.js\nmodule.exports = {\n  '**/*.js?(x)': (filenames) => filenames.map((filename) => `prettier --write '${filename}'`)\n}\n```\n\n### Example: Run `tsc` on changes to TypeScript files, but do not pass any filename arguments\n\n```js\n// lint-staged.config.js\nmodule.exports = {\n  '**/*.ts?(x)': () => 'tsc -p tsconfig.json --noEmit'\n}\n```\n\n### Example: Run eslint on entire repo if more than 10 staged files\n\n```js\n// .lintstagedrc.js\nmodule.exports = {\n  '**/*.js?(x)': (filenames) =>\n    filenames.length > 10 ? 'eslint .' : `eslint ${filenames.join(' ')}`\n}\n```\n\n### Example: Use your own globs\n\n```js\n// lint-staged.config.js\nconst micromatch = require('micromatch')\n\nmodule.exports = {\n  '*': (allFiles) => {\n    const match = micromatch(allFiles, ['*.js', '*.ts'])\n    return `eslint ${match.join(' ')}`\n  }\n}\n```\n\n### Example: Ignore files from match\n\nIf for some reason you want to ignore files from the glob match, you can use `micromatch.not()`:\n\n```js\n// lint-staged.config.js\nconst micromatch = require('micromatch')\n\nmodule.exports = {\n  '*.js': (files) => {\n    // from `files` filter those _NOT_ matching `*test.js`\n    const match = micromatch.not(files, '*test.js')\n    return `eslint ${match.join(' ')}`\n  }\n}\n```\n\nPlease note that for most cases, globs can achieve the same effect. For the above example, a matching glob would be `!(*test).js`.\n\n### Example: Use relative paths for commands\n\n```js\nconst path = require('path')\n\nmodule.exports = {\n  '*.ts': (absolutePaths) => {\n    const cwd = process.cwd()\n    const relativePaths = absolutePaths.map((file) => path.relative(cwd, file))\n    return `ng lint myProjectName --files ${relativePaths.join(' ')}`\n  }\n}\n```\n\n## Reformatting the code\n\nTools like [Prettier](https://prettier.io), ESLint/TSLint, or stylelint can reformat your code according to an appropriate config by running `prettier --write`/`eslint --fix`/`tslint --fix`/`stylelint --fix`. Lint-staged will automatically add any modifications to the commit as long as there are no errors.\n\n```json\n{\n  \"*.js\": \"prettier --write\"\n}\n```\n\nPrior to version 10, tasks had to manually include `git add` as the final step. This behavior has been integrated into lint-staged itself in order to prevent race conditions with multiple tasks editing the same files. If lint-staged detects `git add` in task configurations, it will show a warning in the console. Please remove `git add` from your configuration after upgrading.\n\n## Examples\n\nAll examples assuming you\u2019ve already set up lint-staged and husky in the `package.json`.\n\n```json\n{\n  \"name\": \"My project\",\n  \"version\": \"0.1.0\",\n  \"scripts\": {\n    \"my-custom-script\": \"linter --arg1 --arg2\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\"\n    }\n  },\n  \"lint-staged\": {}\n}\n```\n\n_Note we don\u2019t pass a path as an argument for the runners. This is important since lint-staged will do this for you._\n\n### ESLint with default parameters for `*.js` and `*.jsx` running as a pre-commit hook\n\n```json\n{\n  \"*.{js,jsx}\": \"eslint\"\n}\n```\n\n### Automatically fix code style with `--fix` and add to commit\n\n```json\n{\n  \"*.js\": \"eslint --fix\"\n}\n```\n\nThis will run `eslint --fix` and automatically add changes to the commit.\n\n### Reuse npm script\n\nIf you wish to reuse a npm script defined in your package.json:\n\n```json\n{\n  \"*.js\": \"npm run my-custom-script --\"\n}\n```\n\nThe following is equivalent:\n\n```json\n{\n  \"*.js\": \"linter --arg1 --arg2\"\n}\n```\n\n### Use environment variables with linting commands\n\nLinting commands _do not_ support the shell convention of expanding environment variables. To enable the convention yourself, use a tool like [`cross-env`](https://github.com/kentcdodds/cross-env).\n\nFor example, here is `jest` running on all `.js` files with the `NODE_ENV` variable being set to `\"test\"`:\n\n```json\n{\n  \"*.js\": [\"cross-env NODE_ENV=test jest --bail --findRelatedTests\"]\n}\n```\n\n### Automatically fix code style with `prettier` for javascript, typescript, markdown, HTML, or CSS\n\n```json\n{\n  \"*.{js,jsx,ts,tsx,md,html,css}\": \"prettier --write\"\n}\n```\n\n### Stylelint for CSS with defaults and for SCSS with SCSS syntax\n\n```json\n{\n  \"*.css\": \"stylelint\",\n  \"*.scss\": \"stylelint --syntax=scss\"\n}\n```\n\n### Run PostCSS sorting and Stylelint to check\n\n```json\n{\n  \"*.scss\": [\"postcss --config path/to/your/config --replace\", \"stylelint\"]\n}\n```\n\n### Minify the images\n\n```json\n{\n  \"*.{png,jpeg,jpg,gif,svg}\": \"imagemin-lint-staged\"\n}\n```\n\n<details>\n  <summary>More about <code>imagemin-lint-staged</code></summary>\n\n[imagemin-lint-staged](https://github.com/tomchentw/imagemin-lint-staged) is a CLI tool designed for lint-staged usage with sensible defaults.\n\nSee more on [this blog post](https://medium.com/@tomchentw/imagemin-lint-staged-in-place-minify-the-images-before-adding-to-the-git-repo-5acda0b4c57e) for benefits of this approach.\n\n</details>\n\n### Typecheck your staged files with flow\n\n```json\n{\n  \"*.{js,jsx}\": \"flow focus-check\"\n}\n```\n\n## Frequently Asked Questions\n\n### Can I use `lint-staged` via node?\n\nYes!\n\n```js\nconst lintStaged = require('lint-staged')\n\ntry {\n  const success = await lintStaged()\n  console.log(success ? 'Linting was successful!' : 'Linting failed!')\n} catch (e) {\n  // Failed to load configuration\n  console.error(e)\n}\n```\n\nParameters to `lintStaged` are equivalent to their CLI counterparts:\n\n```js\nconst success = await lintStaged({\n  allowEmpty: false,\n  concurrent: true,\n  configPath: './path/to/configuration/file',\n  cwd: process.cwd(),\n  debug: false,\n  maxArgLength: null,\n  quiet: false,\n  relative: false,\n  shell: false\n  stash: true,\n  verbose: false\n})\n```\n\nYou can also pass config directly with `config` option:\n\n```js\nconst success = await lintStaged({\n  allowEmpty: false,\n  concurrent: true,\n  config: { '*.js': 'eslint --fix' },\n  cwd: process.cwd(),\n  debug: false,\n  maxArgLength: null,\n  quiet: false,\n  relative: false,\n  shell: false,\n  stash: true,\n  verbose: false\n})\n```\n\nThe `maxArgLength` option configures chunking of tasks into multiple parts that are run one after the other. This is to avoid issues on Windows platforms where the maximum length of the command line argument string is limited to 8192 characters. Lint-staged might generate a very long argument string when there are many staged files. This option is set automatically from the cli, but not via the Node.js API by default.\n\n### Using with JetBrains IDEs _(WebStorm, PyCharm, IntelliJ IDEA, RubyMine, etc.)_\n\n_**Update**_: The latest version of JetBrains IDEs now support running hooks as you would expect.\n\nWhen using the IDE's GUI to commit changes with the `precommit` hook, you might see inconsistencies in the IDE and command line. This is [known issue](https://youtrack.jetbrains.com/issue/IDEA-135454) at JetBrains so if you want this fixed, please vote for it on YouTrack.\n\nUntil the issue is resolved in the IDE, you can use the following config to work around it:\n\nhusky v1.x\n\n```json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lint-staged\",\n      \"post-commit\": \"git update-index --again\"\n    }\n  }\n}\n```\n\nhusky v0.x\n\n```json\n{\n  \"scripts\": {\n    \"precommit\": \"lint-staged\",\n    \"postcommit\": \"git update-index --again\"\n  }\n}\n```\n\n_Thanks to [this comment](https://youtrack.jetbrains.com/issue/IDEA-135454#comment=27-2710654) for the fix!_\n\n### How to use `lint-staged` in a multi package monorepo?\n\nStarting with v5.0, `lint-staged` automatically resolves the git root **without any** additional configuration. You configure `lint-staged` as you normally would if your project root and git root were the same directory.\n\nIf you wish to use `lint-staged` in a multi package monorepo, it is recommended to install [`husky`](https://github.com/typicode/husky) in the root package.json.\n[`lerna`](https://github.com/lerna/lerna) can be used to execute the `precommit` script in all sub-packages.\n\nExample repo: [sudo-suhas/lint-staged-multi-pkg](https://github.com/sudo-suhas/lint-staged-multi-pkg).\n\n### Can I lint files outside of the current project folder?\n\ntl;dr: Yes, but the pattern should start with `../`.\n\nBy default, `lint-staged` executes linters only on the files present inside the project folder(where `lint-staged` is installed and run from).\nSo this question is relevant _only_ when the project folder is a child folder inside the git repo.\nIn certain project setups, it might be desirable to bypass this restriction. See [#425](https://github.com/okonet/lint-staged/issues/425), [#487](https://github.com/okonet/lint-staged/issues/487) for more context.\n\n`lint-staged` provides an escape hatch for the same(`>= v7.3.0`). For patterns that start with `../`, all the staged files are allowed to match against the pattern.\nNote that patterns like `*.js`, `**/*.js` will still only match the project files and not any of the files in parent or sibling directories.\n\nExample repo: [sudo-suhas/lint-staged-django-react-demo](https://github.com/sudo-suhas/lint-staged-django-react-demo).\n\n### How can i ignore files from `.eslintignore` ?\n\nESLint throws out `warning File ignored because of a matching ignore pattern. Use \"--no-ignore\" to override` warnings that breaks the linting process ( if you used `--max-warnings=0` which is recommended ).\n\nBased on the discussion from https://github.com/eslint/eslint/issues/9977 , it was decided that using [the outlined script ](https://github.com/eslint/eslint/issues/9977#issuecomment-406420893)is the best route to fix this.\n\nSo you can setup a `.lintstagedrc.js` config file to do this:\n\n```js\nconst { CLIEngine } = require('eslint')\n\nconst cli = new CLIEngine({})\n\nmodule.exports = {\n  '*.js': (files) =>\n    'eslint --max-warnings=0 ' + files.filter((file) => !cli.isPathIgnored(file)).join(' ')\n}\n```"}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 482039}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 2440417}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 10591374}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 30538694}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 53144353}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 92656777}], "dependentsCount": 678, "starsCount": 23}, "github": {"starsCount": 7099, "forksCount": 271, "subscribersCount": 37, "issues": {"count": 883, "openCount": 63, "distribution": {"3600": 125, "10800": 66, "32400": 67, "97200": 101, "291600": 111, "874800": 115, "2624400": 88, "7873200": 74, "23619600": 50, "70858800": 71, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "okonet", "commitsCount": 255}, {"username": "iiroj", "commitsCount": 204}, {"username": "sudo-suhas", "commitsCount": 42}, {"username": "greenkeeper[bot]", "commitsCount": 22}, {"username": "luftywiranda13", "commitsCount": 19}, {"username": "greenkeeperio-bot", "commitsCount": 15}, {"username": "cameronhunter", "commitsCount": 13}, {"username": "sapegin", "commitsCount": 7}, {"username": "ybiquitous", "commitsCount": 5}, {"username": "Arhane", "commitsCount": 4}, {"username": "TheWolfNL", "commitsCount": 4}, {"username": "albertjan", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 3}, {"username": "rvetere", "commitsCount": 3}, {"username": "FezVrasta", "commitsCount": 2}, {"username": "MrRefactoring", "commitsCount": 2}, {"username": "ai", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "johnnywalker", "commitsCount": 2}, {"username": "plroebuck", "commitsCount": 2}, {"username": "rodneyrehm", "commitsCount": 2}, {"username": "0xflotus", "commitsCount": 1}, {"username": "1ven", "commitsCount": 1}, {"username": "Anber", "commitsCount": 1}, {"username": "ChristianMurphy", "commitsCount": 1}, {"username": "DeFuex", "commitsCount": 1}, {"username": "ELLIOTTCABLE", "commitsCount": 1}, {"username": "Hotell", "commitsCount": 1}, {"username": "IlyaSemenov", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "Justkant", "commitsCount": 1}, {"username": "MichaelBelousov", "commitsCount": 1}, {"username": "Noirbot", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "Tom910", "commitsCount": 1}, {"username": "albanx", "commitsCount": 1}, {"username": "alexilyaev", "commitsCount": 1}, {"username": "alexrinass", "commitsCount": 1}, {"username": "aried3r", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "bebraw", "commitsCount": 1}, {"username": "benblank", "commitsCount": 1}, {"username": "bgoscinski", "commitsCount": 1}, {"username": "binki", "commitsCount": 1}, {"username": "bnjjj", "commitsCount": 1}, {"username": "camacho", "commitsCount": 1}, {"username": "carnun", "commitsCount": 1}, {"username": "cenk1cenk2", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "efedorenko", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "fubhy", "commitsCount": 1}, {"username": "georeith", "commitsCount": 1}, {"username": "jasonxia23", "commitsCount": 1}, {"username": "jeffreyffs", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "josiahwiebe", "commitsCount": 1}, {"username": "julien-f", "commitsCount": 1}, {"username": "kachkaev", "commitsCount": 1}, {"username": "kentcdodds", "commitsCount": 1}, {"username": "kevinpagtakhan", "commitsCount": 1}, {"username": "kwonoj", "commitsCount": 1}, {"username": "levy9527", "commitsCount": 1}, {"username": "loklaan", "commitsCount": 1}, {"username": "malsf21", "commitsCount": 1}, {"username": "mbulfair", "commitsCount": 1}, {"username": "mojodna", "commitsCount": 1}, {"username": "mxstbr", "commitsCount": 1}, {"username": "nadavkaner", "commitsCount": 1}, {"username": "nataly87s", "commitsCount": 1}, {"username": "nikgraf", "commitsCount": 1}, {"username": "onigoetz", "commitsCount": 1}, {"username": "oprogramador", "commitsCount": 1}, {"username": "philihp", "commitsCount": 1}, {"username": "rodrigobdz", "commitsCount": 1}, {"username": "sa1dai", "commitsCount": 1}, {"username": "shadyvb", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "silbinarywolf", "commitsCount": 1}, {"username": "taylorham", "commitsCount": 1}, {"username": "timkindberg", "commitsCount": 1}, {"username": "tnrich", "commitsCount": 1}, {"username": "tomchentw", "commitsCount": 1}, {"username": "typicode", "commitsCount": 1}, {"username": "zploskey", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 6}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 58}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 85}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 231}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 21988, "testsSize": 103680}, "badges": [{"urls": {"original": "https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged?branch=master&svg=true", "service": "https://ci.appveyor.com/api/projects/status/github/okonet/lint-staged", "shields": "https://img.shields.io/appveyor/ci/github/okonet/lint-staged.svg", "content": "https://img.shields.io/appveyor/ci/github/okonet/lint-staged.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 7515, "downloadsCount": 10179564.666666666, "downloadsAcceleration": 35145.95960806696, "dependentsCount": 678}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.39504665765097163}}, "score": {"final": 0.8558106312167506, "detail": {"quality": 0.9752061381186714, "popularity": 0.6437599809965566, "maintenance": 0.9655222755210129}}}}, {"core-js": {"analyzedAt": "2020-06-07T07:48:28.266Z", "collected": {"metadata": {"name": "core-js", "scope": "unscoped", "version": "3.6.5", "description": "Standard library", "keywords": ["ES3", "ES5", "ES6", "ES7", "ES2015", "ES2016", "ES2017", "ES2018", "ES2019", "ES2020", "ECMAScript 3", "ECMAScript 5", "ECMAScript 6", "ECMAScript 7", "ECMAScript 2015", "ECMAScript 2016", "ECMAScript 2017", "ECMAScript 2018", "ECMAScript 2019", "ECMAScript 2020", "Harmony", "Strawman", "Map", "Set", "WeakMap", "WeakSet", "Promise", "Observable", "Symbol", "TypedArray", "URL", "URLSearchParams", "queueMicrotask", "setImmediate", "polyfill", "ponyfill", "shim"], "date": "2020-04-09T16:37:31.166Z", "publisher": {"username": "slowcheetah", "email": "slow_cheetah@inbox.ru"}, "maintainers": [{"username": "zloirock", "email": "zloirock@zloirock.ru"}], "repository": {"type": "git", "url": "git+https://github.com/zloirock/core-js.git"}, "links": {"npm": "https://www.npmjs.com/package/core-js", "homepage": "https://github.com/zloirock/core-js#readme", "repository": "https://github.com/zloirock/core-js", "bugs": "https://github.com/zloirock/core-js/issues"}, "license": "MIT", "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 29}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 62}], "readme": "# core-js\n\n[![Sponsors on Open Collective](https://opencollective.com/core-js/sponsors/badge.svg)](#sponsors) [![Backers on Open Collective](https://opencollective.com/core-js/backers/badge.svg)](#backers) [![Gitter](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/zloirock/core-js?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![version](https://img.shields.io/npm/v/core-js.svg)](https://www.npmjs.com/package/core-js) [![npm downloads](https://img.shields.io/npm/dm/core-js.svg)](http://npm-stat.com/charts.html?package=core-js&author=&from=2014-11-18) [![Build Status](https://travis-ci.org/zloirock/core-js.svg)](https://travis-ci.org/zloirock/core-js) [![devDependency status](https://david-dm.org/zloirock/core-js/dev-status.svg)](https://david-dm.org/zloirock/core-js?type=dev)\n\n> Modular standard library for JavaScript. Includes polyfills for [ECMAScript up to 2019](https://github.com/zloirock/core-js#ecmascript): [promises](https://github.com/zloirock/core-js#ecmascript-promise), [symbols](https://github.com/zloirock/core-js#ecmascript-symbol), [collections](https://github.com/zloirock/core-js#ecmascript-collections), iterators, [typed arrays](https://github.com/zloirock/core-js#ecmascript-typed-arrays), many other features, [ECMAScript proposals](https://github.com/zloirock/core-js#ecmascript-proposals), [some cross-platform WHATWG / W3C features and proposals](#web-standards) like [`URL`](https://github.com/zloirock/core-js#url-and-urlsearchparams). You can load only required features or use it without global namespace pollution.\n\n## As advertising: the author is looking for a good job -)\n\n## [core-js@3, babel and a look into the future](https://github.com/zloirock/core-js/tree/master/docs/2019-03-19-core-js-3-babel-and-a-look-into-the-future.md)\n\n## Raising funds\n\n`core-js` isn't backed by a company, so the future of this project depends on you. Become a sponsor or a backer [**on Open Collective**](https://opencollective.com/core-js) or [**on Patreon**](https://www.patreon.com/zloirock) if you are interested in `core-js`.\n\n---\n\n<a href=\"https://opencollective.com/core-js/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/0/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/1/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/2/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/3/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/4/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/5/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/6/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/7/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/8/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/9/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/10/avatar.svg\"></a><a href=\"https://opencollective.com/core-js/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/sponsor/11/avatar.svg\"></a>\n\n---\n\n<a href=\"https://opencollective.com/core-js#backers\" target=\"_blank\"><img src=\"https://opencollective.com/core-js/backers.svg?width=890\"></a>\n\n---\n\n[*Example*](http://goo.gl/a2xexl):\n```js\nimport 'core-js'; // <- at the top of your entry point\n\nArray.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]\n[1, [2, 3], [4, [5]]].flat(2);                 // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n*You can load only required features*:\n```js\nimport 'core-js/features/array/from'; // <- at the top of your entry point\nimport 'core-js/features/array/flat'; // <- at the top of your entry point\nimport 'core-js/features/set';        // <- at the top of your entry point\nimport 'core-js/features/promise';    // <- at the top of your entry point\n\nArray.from(new Set([1, 2, 3, 2, 1]));          // => [1, 2, 3]\n[1, [2, 3], [4, [5]]].flat(2);                 // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n*Or use it without global namespace pollution*:\n```js\nimport from from 'core-js-pure/features/array/from';\nimport flat from 'core-js-pure/features/array/flat';\nimport Set from 'core-js-pure/features/set';\nimport Promise from 'core-js-pure/features/promise';\n\nfrom(new Set([1, 2, 3, 2, 1]));                // => [1, 2, 3]\nflat([1, [2, 3], [4, [5]]], 2);                // => [1, 2, 3, 4, 5]\nPromise.resolve(32).then(x => console.log(x)); // => 32\n```\n\n**It's a global version (first 2 examples), for more info see [`core-js` documentation](https://github.com/zloirock/core-js/blob/master/README.md).**"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1329394}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 26334339}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 109807389}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 336095669}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 619553108}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1141978572}], "dependentsCount": 17304, "starsCount": 70}, "github": {"starsCount": 12898, "forksCount": 911, "subscribersCount": 233, "issues": {"count": 815, "openCount": 67, "distribution": {"3600": 182, "10800": 81, "32400": 88, "97200": 85, "291600": 70, "874800": 70, "2624400": 71, "7873200": 70, "23619600": 42, "70858800": 41, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "zloirock", "commitsCount": 2458}, {"username": "nicolo-ribaudo", "commitsCount": 18}, {"username": "romeovs", "commitsCount": 16}, {"username": "cscott", "commitsCount": 10}, {"username": "slowcheetah", "commitsCount": 9}, {"username": "iamolivinius", "commitsCount": 6}, {"username": "cvle", "commitsCount": 5}, {"username": "nicketson", "commitsCount": 5}, {"username": "scottarc", "commitsCount": 4}, {"username": "funklos", "commitsCount": 3}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "JakeChampion", "commitsCount": 2}, {"username": "dtinth", "commitsCount": 2}, {"username": "henryqdineen", "commitsCount": 2}, {"username": "obnoxiousnerd", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "vp2177", "commitsCount": 2}, {"username": "yaodingyd", "commitsCount": 2}, {"username": "Alexendoo", "commitsCount": 1}, {"username": "AndreasCag", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Macil", "commitsCount": 1}, {"username": "Mamboleoo", "commitsCount": 1}, {"username": "MarcelGerber", "commitsCount": 1}, {"username": "Naddiseo", "commitsCount": 1}, {"username": "PKief", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "aMollusk", "commitsCount": 1}, {"username": "abucur", "commitsCount": 1}, {"username": "aesopwolf", "commitsCount": 1}, {"username": "aheckmann", "commitsCount": 1}, {"username": "aleen42", "commitsCount": 1}, {"username": "benelsen", "commitsCount": 1}, {"username": "benjamingr", "commitsCount": 1}, {"username": "bernard-leech", "commitsCount": 1}, {"username": "bettiolo", "commitsCount": 1}, {"username": "bugknightyyp", "commitsCount": 1}, {"username": "bugtype", "commitsCount": 1}, {"username": "bz2", "commitsCount": 1}, {"username": "chicoxyzzy", "commitsCount": 1}, {"username": "clavecoder", "commitsCount": 1}, {"username": "cmfcmf", "commitsCount": 1}, {"username": "compulim", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "dantman", "commitsCount": 1}, {"username": "eteeselink", "commitsCount": 1}, {"username": "fatcerberus", "commitsCount": 1}, {"username": "felixbuenemann", "commitsCount": 1}, {"username": "flut1", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "galadriel2143", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "haydnhkim", "commitsCount": 1}, {"username": "huww98", "commitsCount": 1}, {"username": "jacobangel", "commitsCount": 1}, {"username": "janderudder", "commitsCount": 1}, {"username": "jdreesen", "commitsCount": 1}, {"username": "jpierson", "commitsCount": 1}, {"username": "kevinsawicki", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "malectro", "commitsCount": 1}, {"username": "mattclough1", "commitsCount": 1}, {"username": "mbeaudru", "commitsCount": 1}, {"username": "nicolasleger", "commitsCount": 1}, {"username": "nju33", "commitsCount": 1}, {"username": "notslang", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "pataar", "commitsCount": 1}, {"username": "repinel", "commitsCount": 1}, {"username": "rqrqrqrq", "commitsCount": 1}, {"username": "sbrl", "commitsCount": 1}, {"username": "suchipi", "commitsCount": 1}, {"username": "thekiba", "commitsCount": 1}, {"username": "yukulele", "commitsCount": 1}, {"username": "zn", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 94}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 414}]}, "source": {"files": {"readmeSize": 5499, "testsSize": 1183, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/core-js.svg", "shields": "https://img.shields.io/npm/v/core-js.svg", "content": "https://img.shields.io/npm/v/core-js.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/core-js.svg", "shields": "https://img.shields.io/npm/dm/core-js.svg", "content": "https://img.shields.io/npm/dm/core-js.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://travis-ci.org/zloirock/core-js.svg", "service": "https://api.travis-ci.org/zloirock/core-js.svg", "shields": "https://img.shields.io/travis/zloirock/core-js.svg", "content": "https://img.shields.io/travis/zloirock/core-js.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://david-dm.org/zloirock/core-js/dev-status.svg", "service": "https://david-dm.org/zloirock/core-js/dev-status.svg", "shields": "https://img.shields.io/david/dev/zloirock/core-js.svg", "content": "https://img.shields.io/david/dev/zloirock/core-js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.3, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 14189, "downloadsCount": 112031889.66666667, "downloadsAcceleration": 211197.7945585997, "dependentsCount": 17304}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.5139130746208249}}, "score": {"final": 0.927939327372286, "detail": {"quality": 0.881388618669322, "popularity": 0.9083007444739146, "maintenance": 0.9874785177303409}}}}, {"babel-plugin-transform-runtime": {"analyzedAt": "2020-05-20T10:34:28.800Z", "collected": {"metadata": {"name": "babel-plugin-transform-runtime", "scope": "unscoped", "version": "6.23.0", "description": "Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals", "keywords": ["babel-plugin"], "date": "2017-02-13T23:04:28.038Z", "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-runtime", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-runtime": "^6.22.0"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.22.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-plugin-transform-runtime\n\nExternalise references to helpers and builtins, automatically polyfilling your code without polluting globals\n\n## Installation\n\n```sh\n$ npm install babel-plugin-transform-runtime\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-runtime\"]\n}\n```\n\n### Via CLI\n\n```sh\n$ babel --plugins transform-runtime script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-runtime\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 167409}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 900966}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4025144}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 12528344}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 23338768}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 50765732}], "dependentsCount": 2321, "starsCount": 32}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36557, "forksCount": 4277, "subscribersCount": 868, "issues": {"count": 11523, "openCount": 788, "distribution": {"3600": 2450, "10800": 906, "32400": 1061, "97200": 1226, "291600": 1049, "874800": 1006, "2624400": 839, "7873200": 792, "23619600": 839, "70858800": 1093, "212576400": 262}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1262}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 466}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 179}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 152}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 27}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 189}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 396}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 743}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11798557, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7364999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 41833, "downloadsCount": 4176114.6666666665, "downloadsAcceleration": -3584.27640791476, "dependentsCount": 2321}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24285635487506546}}, "score": {"final": 0.6727626502026602, "detail": {"quality": 0.8542035355701787, "popularity": 0.6188320531484419, "maintenance": 0.5711724883704343}}}}, {"async": {"analyzedAt": "2020-05-12T21:53:53.118Z", "collected": {"metadata": {"name": "async", "scope": "unscoped", "version": "3.2.0", "description": "Higher-order functions and common patterns for asynchronous code", "keywords": ["async", "callback", "module", "utility"], "date": "2020-02-24T02:58:20.125Z", "author": {"name": "Caolan McMahon"}, "publisher": {"username": "aearly", "email": "alexander.early@gmail.com"}, "maintainers": [{"username": "aearly", "email": "alexander.early@gmail.com"}, {"username": "beaugunderson", "email": "beau@beaugunderson.com"}, {"username": "caolan", "email": "caolan.mcmahon@gmail.com"}, {"username": "hargasinski", "email": "argasinski.hubert@gmail.com"}, {"username": "megawac", "email": "megawac@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/caolan/async.git"}, "links": {"npm": "https://www.npmjs.com/package/async", "homepage": "https://caolan.github.io/async/", "repository": "https://github.com/caolan/async", "bugs": "https://github.com/caolan/async/issues"}, "license": "MIT", "devDependencies": {"babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-minify": "^0.5.0", "babel-plugin-add-module-exports": "^0.2.1", "babel-plugin-istanbul": "^5.1.4", "babel-plugin-syntax-async-generators": "^6.13.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.26.2", "babel-preset-es2015": "^6.3.13", "babel-preset-es2017": "^6.22.0", "babel-register": "^6.26.0", "babelify": "^8.0.0", "benchmark": "^2.1.1", "bluebird": "^3.4.6", "browserify": "^16.2.3", "chai": "^4.2.0", "cheerio": "^0.22.0", "coveralls": "^3.0.4", "es6-promise": "^2.3.0", "eslint": "^6.0.1", "eslint-plugin-prefer-arrow": "^1.1.5", "fs-extra": "^0.26.7", "jsdoc": "^3.6.2", "karma": "^4.1.0", "karma-browserify": "^5.3.0", "karma-edge-launcher": "^0.4.2", "karma-firefox-launcher": "^1.1.0", "karma-junit-reporter": "^1.2.0", "karma-mocha": "^1.2.0", "karma-mocha-reporter": "^2.2.0", "karma-safari-launcher": "^1.0.0", "mocha": "^6.1.4", "mocha-junit-reporter": "^1.18.0", "native-promise-only": "^0.8.0-a", "nyc": "^14.1.1", "rimraf": "^2.5.0", "rollup": "^0.63.4", "rollup-plugin-node-resolve": "^2.0.0", "rollup-plugin-npm": "^2.0.0", "rsvp": "^3.0.18", "semver": "^5.5.0", "yargs": "^11.0.0"}, "releases": [{"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 2}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 3}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 7}, {"from": "2018-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 10}], "hasTestScript": true, "readme": "![Async Logo](https://raw.githubusercontent.com/caolan/async/master/logo/async-logo_readme.jpg)\n\n[![Build Status via Travis CI](https://travis-ci.org/caolan/async.svg?branch=master)](https://travis-ci.org/caolan/async)\n[![Build Status via Azure Pipelines](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master)\n[![NPM version](https://img.shields.io/npm/v/async.svg)](https://www.npmjs.com/package/async)\n[![Coverage Status](https://coveralls.io/repos/caolan/async/badge.svg?branch=master)](https://coveralls.io/r/caolan/async?branch=master)\n[![Join the chat at https://gitter.im/caolan/async](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/caolan/async?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n[![jsDelivr Hits](https://data.jsdelivr.com/v1/package/npm/async/badge?style=rounded)](https://www.jsdelivr.com/package/npm/async)\n\n<!--\n|Linux|Windows|MacOS|\n|-|-|-|\n|[![Linux Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Linux&configuration=Linux%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![Windows Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=Windows&configuration=Windows%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master) | [![MacOS Build Status](https://dev.azure.com/caolanmcmahon/async/_apis/build/status/caolan.async?branchName=master&jobName=OSX&configuration=OSX%20node_10_x)](https://dev.azure.com/caolanmcmahon/async/_build/latest?definitionId=1&branchName=master)| -->\n\nAsync is a utility module which provides straight-forward, powerful functions for working with [asynchronous JavaScript](http://caolan.github.io/async/v3/global.html). Although originally designed for use with [Node.js](https://nodejs.org/) and installable via `npm i async`, it can also be used directly in the browser.  A ESM/MJS version is included in the main `async` package that should automatically be used with compatible bundlers such as Webpack and Rollup.\n\nA pure ESM version of Async is available as [`async-es`](https://www.npmjs.com/package/async-es).\n\nFor Documentation, visit <https://caolan.github.io/async/>\n\n*For Async v1.5.x documentation, go [HERE](https://github.com/caolan/async/blob/v1.5.2/README.md)*\n\n\n```javascript\n// for use with Node-style callbacks...\nvar async = require(\"async\");\n\nvar obj = {dev: \"/dev.json\", test: \"/test.json\", prod: \"/prod.json\"};\nvar configs = {};\n\nasync.forEachOf(obj, (value, key, callback) => {\n    fs.readFile(__dirname + value, \"utf8\", (err, data) => {\n        if (err) return callback(err);\n        try {\n            configs[key] = JSON.parse(data);\n        } catch (e) {\n            return callback(e);\n        }\n        callback();\n    });\n}, err => {\n    if (err) console.error(err.message);\n    // configs is now a map of JSON data\n    doSomethingWith(configs);\n});\n```\n\n```javascript\nvar async = require(\"async\");\n\n// ...or ES2017 async functions\nasync.mapLimit(urls, 5, async function(url) {\n    const response = await fetch(url)\n    return response.body\n}, (err, results) => {\n    if (err) throw err\n    // results is now an array of the response bodies\n    console.log(results)\n})\n```"}, "npm": {"downloads": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 4973449}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 28210047}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 118210292}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 355217148}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 649671531}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 1276926798}], "dependentsCount": 23115, "starsCount": 1212}, "github": {"homepage": "http://caolan.github.io/async/", "starsCount": 26521, "forksCount": 2381, "subscribersCount": 721, "issues": {"count": 1709, "openCount": 6, "distribution": {"3600": 181, "10800": 77, "32400": 146, "97200": 206, "291600": 196, "874800": 163, "2624400": 127, "7873200": 120, "23619600": 248, "70858800": 210, "212576400": 35}, "isDisabled": false}, "contributors": [{"username": "aearly", "commitsCount": 396}, {"username": "megawac", "commitsCount": 168}, {"username": "hargasinski", "commitsCount": 62}, {"username": "ivanseidel", "commitsCount": 28}, {"username": "beaugunderson", "commitsCount": 25}, {"username": "ezubarev", "commitsCount": 20}, {"username": "fregante", "commitsCount": 19}, {"username": "zartdinov", "commitsCount": 11}, {"username": "brianmaissy", "commitsCount": 10}, {"username": "suguru03", "commitsCount": 8}, {"username": "ex1st", "commitsCount": 7}, {"username": "fritx", "commitsCount": 7}, {"username": "jessehouchins", "commitsCount": 7}, {"username": "justincy", "commitsCount": 7}, {"username": "Kikobeats", "commitsCount": 6}, {"username": "andalm", "commitsCount": 6}, {"username": "raydog", "commitsCount": 6}, {"username": "rmg", "commitsCount": 6}, {"username": "seriousManual", "commitsCount": 6}, {"username": "allanca", "commitsCount": 5}, {"username": "mikermcneil", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "andsnpl", "commitsCount": 4}, {"username": "bojand", "commitsCount": 4}, {"username": "edeustace", "commitsCount": 4}, {"username": "jnordberg", "commitsCount": 4}, {"username": "kimptoc", "commitsCount": 4}, {"username": "leahciMic", "commitsCount": 4}, {"username": "tekwiz", "commitsCount": 4}, {"username": "vsivsi", "commitsCount": 4}, {"username": "adam-26", "commitsCount": 3}, {"username": "aianus", "commitsCount": 3}, {"username": "ajfranzoia", "commitsCount": 3}, {"username": "asyncanup", "commitsCount": 3}, {"username": "boutell", "commitsCount": 3}, {"username": "calvinfo", "commitsCount": 3}, {"username": "dacoozheng", "commitsCount": 3}, {"username": "erik-krogh", "commitsCount": 3}, {"username": "marcolino", "commitsCount": 3}, {"username": "parshap", "commitsCount": 3}, {"username": "rhyzx", "commitsCount": 3}, {"username": "silentroach", "commitsCount": 3}, {"username": "th3james", "commitsCount": 3}, {"username": "uzyn", "commitsCount": 3}, {"username": "CodeMan99", "commitsCount": 2}, {"username": "MaZderMind", "commitsCount": 2}, {"username": "ORESoftware", "commitsCount": 2}, {"username": "Qix-", "commitsCount": 2}, {"username": "alFReD-NSH", "commitsCount": 2}, {"username": "andrewrk", "commitsCount": 2}, {"username": "asilvas", "commitsCount": 2}, {"username": "bao987654321", "commitsCount": 2}, {"username": "benfleis", "commitsCount": 2}, {"username": "ceedubs", "commitsCount": 2}, {"username": "chrisdukakis", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "ericz", "commitsCount": 2}, {"username": "gr2m", "commitsCount": 2}, {"username": "indexzero", "commitsCount": 2}, {"username": "jahraphael", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jiabei", "commitsCount": 2}, {"username": "jkroso", "commitsCount": 2}, {"username": "jsdevel", "commitsCount": 2}, {"username": "jstewmon", "commitsCount": 2}, {"username": "juanarbol", "commitsCount": 2}, {"username": "jub3i", "commitsCount": 2}, {"username": "mmalecki", "commitsCount": 2}, {"username": "nazomikan", "commitsCount": 2}, {"username": "pablonete", "commitsCount": 2}, {"username": "raszi", "commitsCount": 2}, {"username": "scop", "commitsCount": 2}, {"username": "smbape", "commitsCount": 2}, {"username": "spacegangster", "commitsCount": 2}, {"username": "tiankongldp", "commitsCount": 2}, {"username": "vvo", "commitsCount": 2}, {"username": "JoeCortopassi", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "alexandercerutti", "commitsCount": 1}, {"username": "andrebsguedes", "commitsCount": 1}, {"username": "avnersorek", "commitsCount": 1}, {"username": "baboquivari", "commitsCount": 1}, {"username": "baopham", "commitsCount": 1}, {"username": "binarykitchen", "commitsCount": 1}, {"username": "iamakulov", "commitsCount": 1}, {"username": "jakemingolla", "commitsCount": 1}, {"username": "justinmchase", "commitsCount": 1}, {"username": "karataev", "commitsCount": 1}, {"username": "matteofigus", "commitsCount": 1}, {"username": "omginbd", "commitsCount": 1}, {"username": "qw-in", "commitsCount": 1}, {"username": "reedfeng", "commitsCount": 1}, {"username": "sam09", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "surajwy", "commitsCount": 1}, {"username": "yemreinci", "commitsCount": 1}], "commits": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 18}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 23}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 72}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 3463, "testsSize": 322399, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/caolan/async.svg?branch=master", "service": "https://api.travis-ci.org/caolan/async.svg?branch=master", "shields": "https://img.shields.io/travis/caolan/async/master.svg", "content": "https://img.shields.io/travis/caolan/async/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/async.svg", "shields": "https://img.shields.io/npm/v/async.svg", "content": "https://img.shields.io/npm/v/async.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://coveralls.io/repos/caolan/async/badge.svg?branch=master", "service": "https://coveralls.io/repos/caolan/async/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/caolan/async/master.svg", "content": "https://img.shields.io/coveralls/caolan/async/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.99}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 30933, "downloadsCount": 118405716, "downloadsAcceleration": 138192.54571917804, "dependentsCount": 23115}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.978896369737996, "detail": {"quality": 0.9997812144763285, "popularity": 0.9399999781708708, "maintenance": 0.9998914658151222}}}}, {"eslint-config-airbnb": {"analyzedAt": "2020-05-20T19:39:10.179Z", "collected": {"metadata": {"name": "eslint-config-airbnb", "scope": "unscoped", "version": "18.1.0", "description": "Airbnb's ESLint config, following our styleguide", "keywords": ["eslint", "eslintconfig", "config", "airbnb", "javascript", "styleguide", "es2015", "es2016", "es2017", "es2018"], "date": "2020-03-13T06:06:43.117Z", "author": {"name": "Jake Teton-Landis", "url": "https://twitter.com/@jitl"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "airbnbeng", "email": "opensource@airbnb.com"}, {"username": "etienne_tripier", "email": "etienne.tripier@airbnb.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "milesj", "email": "mileswjohnson@gmail.com"}, {"username": "noratarano", "email": "noratarano@gmail.com"}, {"username": "schleyfox", "email": "ben@pixelmachine.org"}, {"username": "sharmilajesupaul", "email": "tosharmila@gmail.com"}], "contributors": [{"name": "Jake Teton-Landis", "url": "https://twitter.com/jitl"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com", "url": "http://ljharb.codes"}, {"name": "Harrison Shoff", "url": "https://twitter.com/hshoff"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/javascript.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-airbnb", "homepage": "https://github.com/airbnb/javascript", "repository": "https://github.com/airbnb/javascript", "bugs": "https://github.com/airbnb/javascript/issues"}, "license": "MIT", "dependencies": {"eslint-config-airbnb-base": "^14.1.0", "object.assign": "^4.1.0", "object.entries": "^1.1.1"}, "devDependencies": {"@babel/runtime": "^7.8.7", "babel-preset-airbnb": "^4.4.0", "babel-tape-runner": "^3.0.0", "eclint": "^2.8.1", "eslint": "^5.16.0 || ^6.8.0", "eslint-find-rules": "^3.4.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jsx-a11y": "^6.2.3", "eslint-plugin-react": "^7.19.0", "eslint-plugin-react-hooks": "^2.5.0 || ^1.7.0", "in-publish": "^2.0.0", "react": ">= 0.13.0", "safe-publish-latest": "^1.1.4", "tape": "^5.0.0-next.4"}, "peerDependencies": {"eslint": "^5.16.0 || ^6.8.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jsx-a11y": "^6.2.3", "eslint-plugin-react": "^7.19.0", "eslint-plugin-react-hooks": "^2.5.0 || ^1.7.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 5}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "# eslint-config-airbnb\n\n[![npm version](https://badge.fury.io/js/eslint-config-airbnb.svg)](http://badge.fury.io/js/eslint-config-airbnb)\n\nThis package provides Airbnb's .eslintrc as an extensible shared config.\n\n## Usage\n\nWe export three ESLint configurations for your usage.\n\n### eslint-config-airbnb\n\nOur default export contains all of our ESLint rules, including ECMAScript 6+ and React. It requires `eslint`, `eslint-plugin-import`, `eslint-plugin-react`, `eslint-plugin-react-hooks`, and `eslint-plugin-jsx-a11y`. If you don't need React, see [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb@latest\" peerDependencies\n  ```\n\n  If using **npm 5+**, use this shortcut\n\n  ```sh\n  npx install-peerdeps --dev eslint-config-airbnb\n  ```\n\n  If using **yarn**, you can also use the shortcut described above if you have npm 5+ installed on your machine, as the command will detect that you are using yarn and will act accordingly.\n  Otherwise, run `npm info \"eslint-config-airbnb@latest\" peerDependencies` to list the peer dependencies and versions, then run `yarn add --dev <dependency>@<version>` for each listed peer dependency.\n\n  If using **npm < 5**, Linux/OSX users can run\n\n  ```sh\n  (\n    export PKG=eslint-config-airbnb;\n    npm info \"$PKG@latest\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG@latest\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb eslint@^#.#.# eslint-plugin-jsx-a11y@^#.#.# eslint-plugin-import@^#.#.# eslint-plugin-react@^#.#.# eslint-plugin-react-hooks@^#.#.#\n  ```\n\n  If using **npm < 5**, Windows users can either install all the peer dependencies manually, or use the [install-peerdeps](https://github.com/nathanhleung/install-peerdeps) cli tool.\n\n  ```sh\n  npm install -g install-peerdeps\n  install-peerdeps --dev eslint-config-airbnb\n  ```\n  The cli will produce and run a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb eslint@^#.#.# eslint-plugin-jsx-a11y@^#.#.# eslint-plugin-import@^#.#.# eslint-plugin-react@^#.#.# eslint-plugin-react-hooks@^#.#.#\n  ```\n\n2. Add `\"extends\": \"airbnb\"` to your `.eslintrc`\n\n### eslint-config/airbnb/hooks\n\nThis entry point enables the linting rules for React hooks (requires v16.8+). To use, add `\"extends\": [\"airbnb\", \"airbnb/hooks\"]` to your `.eslintrc`\n\n### eslint-config-airbnb/whitespace\n\nThis entry point only errors on whitespace rules and sets all other rules to warnings. View the list of whitespace rules [here](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb/whitespace.js).\n\n### eslint-config-airbnb/base\n\nThis entry point is deprecated. See [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\n### eslint-config-airbnb/legacy\n\nThis entry point is deprecated. See [eslint-config-airbnb-base](https://npmjs.com/eslint-config-airbnb-base).\n\nSee [Airbnb's JavaScript styleguide](https://github.com/airbnb/javascript) and\nthe [ESlint config docs](https://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information.\n\n## Improving this config\n\nConsider adding test cases if you're making complicated rules changes, like anything involving regexes. Perhaps in a distant future, we could use literate programming to structure our README as test cases for our .eslintrc?\n\nYou can run tests with `npm test`.\n\nYou can make sure this module lints with itself using `npm run lint`."}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 416933}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2137700}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 9111755}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 25792528}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 43730897}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 79483015}], "dependentsCount": 2104, "starsCount": 192}, "github": {"starsCount": 95562, "forksCount": 18622, "subscribersCount": 3579, "issues": {"count": 2194, "openCount": 118, "distribution": {"3600": 612, "10800": 246, "32400": 337, "97200": 216, "291600": 183, "874800": 112, "2624400": 118, "7873200": 105, "23619600": 85, "70858800": 87, "212576400": 93}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 496}, {"username": "hshoff", "commitsCount": 166}, {"username": "lencioni", "commitsCount": 50}, {"username": "architectcodes", "commitsCount": 19}, {"username": "sharmilajesupaul", "commitsCount": 16}, {"username": "vsemozhetbyt", "commitsCount": 15}, {"username": "1pete", "commitsCount": 14}, {"username": "ssorallen", "commitsCount": 13}, {"username": "goatslacker", "commitsCount": 12}, {"username": "chrisngobanh", "commitsCount": 10}, {"username": "thisconnect", "commitsCount": 9}, {"username": "SimenB", "commitsCount": 8}, {"username": "Ryan-McBride", "commitsCount": 7}, {"username": "taion", "commitsCount": 7}, {"username": "bl00mber", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "felipethome", "commitsCount": 5}, {"username": "graingert", "commitsCount": 5}, {"username": "joaomilho", "commitsCount": 5}, {"username": "kevinweber", "commitsCount": 5}, {"username": "mitsuruog", "commitsCount": 5}, {"username": "spikebrehm", "commitsCount": 5}, {"username": "simono", "commitsCount": 4}, {"username": "AlicanC", "commitsCount": 3}, {"username": "RobLoach", "commitsCount": 3}, {"username": "adrienverge", "commitsCount": 3}, {"username": "amsardesai", "commitsCount": 3}, {"username": "asherdale", "commitsCount": 3}, {"username": "camazorro", "commitsCount": 3}, {"username": "chentsulin", "commitsCount": 3}, {"username": "jabacchetta", "commitsCount": 3}, {"username": "karanjthakkar", "commitsCount": 3}, {"username": "leonidlebedev", "commitsCount": 3}, {"username": "lvarayut", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "pigoz", "commitsCount": 3}, {"username": "raunofreiberg", "commitsCount": 3}, {"username": "remcohaszing", "commitsCount": 3}, {"username": "trshafer", "commitsCount": 3}, {"username": "unkillbob", "commitsCount": 3}, {"username": "0xCMP", "commitsCount": 2}, {"username": "A-Tokyo", "commitsCount": 2}, {"username": "ClimbsRocks", "commitsCount": 2}, {"username": "Doweig", "commitsCount": 2}, {"username": "Ensive", "commitsCount": 2}, {"username": "HerringtonDarkholme", "commitsCount": 2}, {"username": "JBallin", "commitsCount": 2}, {"username": "KevinGrandon", "commitsCount": 2}, {"username": "NLDev", "commitsCount": 2}, {"username": "ParkSB", "commitsCount": 2}, {"username": "TheSavior", "commitsCount": 2}, {"username": "akai", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "atkinchris", "commitsCount": 2}, {"username": "bertho-zero", "commitsCount": 2}, {"username": "billyjanitsch", "commitsCount": 2}, {"username": "carterchung", "commitsCount": 2}, {"username": "cmalard", "commitsCount": 2}, {"username": "coliff", "commitsCount": 2}, {"username": "cooperka", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "daxelrod", "commitsCount": 2}, {"username": "evenfrost", "commitsCount": 2}, {"username": "fbergr", "commitsCount": 2}, {"username": "felixsanz", "commitsCount": 2}, {"username": "frenzzy", "commitsCount": 2}, {"username": "fvgs", "commitsCount": 2}, {"username": "gmccue", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "honzi", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "iamnirav", "commitsCount": 2}, {"username": "johnmanong", "commitsCount": 2}, {"username": "jondubin", "commitsCount": 2}, {"username": "kamronbatman", "commitsCount": 2}, {"username": "kaplanmaxe", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "kripod", "commitsCount": 2}, {"username": "lasota-piotr", "commitsCount": 2}, {"username": "liuchong", "commitsCount": 2}, {"username": "mifi", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "nicoder", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "olistic", "commitsCount": 2}, {"username": "pra85", "commitsCount": 2}, {"username": "rodocite", "commitsCount": 2}, {"username": "ronal2do", "commitsCount": 2}, {"username": "sangaman", "commitsCount": 2}, {"username": "sidoshi", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "sindrenm", "commitsCount": 2}, {"username": "spen", "commitsCount": 2}, {"username": "thepeoplesbourgeois", "commitsCount": 2}, {"username": "tikotzky", "commitsCount": 2}, {"username": "uzumaxy", "commitsCount": 2}, {"username": "vahan-hartooni", "commitsCount": 2}, {"username": "vladshcherbin", "commitsCount": 2}, {"username": "wyattdanger", "commitsCount": 2}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 15}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 24}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 82}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/travis-ci/pr", "state": "success"}]}, "source": {"files": {"readmeSize": 3621, "testsSize": 3949, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 118054, "downloadsCount": 8597509.333333334, "downloadsAcceleration": 27787.806145357696, "dependentsCount": 2104}, "maintenance": {"releasesFrequency": 0.6414383561643836, "commitsFrequency": 0.8073972602739726, "openIssues": 1, "issuesDistribution": 0.2696774177652781}}, "score": {"final": 0.8735870878350404, "detail": {"quality": 0.9649936822011835, "popularity": 0.7625820978913809, "maintenance": 0.9062435683220059}}}}, {"extract-text-webpack-plugin": {"analyzedAt": "2020-05-20T05:12:22.275Z", "collected": {"metadata": {"name": "extract-text-webpack-plugin", "scope": "unscoped", "version": "3.0.2", "description": "Extract text from bundle into a file.", "date": "2017-10-25T17:10:40.610Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}, {"username": "spacek33z", "email": "kees@webduck.nl"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/webpack-contrib/extract-text-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/extract-text-webpack-plugin", "homepage": "http://github.com/webpack-contrib/extract-text-webpack-plugin", "repository": "https://github.com/webpack-contrib/extract-text-webpack-plugin", "bugs": "https://github.com/webpack-contrib/extract-text-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"async": "^2.4.1", "loader-utils": "^1.1.0", "schema-utils": "^0.3.0", "webpack-sources": "^1.0.1"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-jest": "^21.2.0", "babel-plugin-transform-object-rest-spread": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-preset-env": "^1.6.1", "cross-env": "^5.1.0", "css-loader": "^0.28.7", "del-cli": "^1.1.0", "eslint": "^4.9.0", "eslint-config-webpack": "^1.2.5", "eslint-plugin-import": "^2.8.0", "file-loader": "^1.1.5", "jest": "^21.2.1", "lint-staged": "^4.3.0", "nsp": "^2.8.1", "pre-commit": "^1.2.2", "raw-loader": "^0.5.1", "standard-version": "^4.2.0", "style-loader": "^0.19.0", "webpack": "^3.8.1", "webpack-defaults": "^1.6.0"}, "peerDependencies": {"webpack": "^3.1.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "deprecated": "Deprecated. Please use https://github.com/webpack-contrib/mini-css-extract-plugin", "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 205084}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1090953}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 4839192}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 14803523}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 28047740}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 62026356}], "dependentsCount": 3857, "starsCount": 103}, "github": {"starsCount": 4081, "forksCount": 552, "subscribersCount": 100, "issues": {"count": 819, "openCount": 0, "distribution": {"3600": 102, "10800": 39, "32400": 46, "97200": 57, "291600": 69, "874800": 66, "2624400": 83, "7873200": 91, "23619600": 120, "70858800": 121, "212576400": 25}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 84}, {"username": "texastoland", "commitsCount": 17}, {"username": "bebraw", "commitsCount": 15}, {"username": "d3viant0ne", "commitsCount": 14}, {"username": "scottdj92", "commitsCount": 11}, {"username": "lcxfs1991", "commitsCount": 10}, {"username": "evilebottnawi", "commitsCount": 6}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "andreypopp", "commitsCount": 4}, {"username": "insin", "commitsCount": 3}, {"username": "CtrlZvi", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "Daniel15", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "MicheleBertoli", "commitsCount": 1}, {"username": "MirrorBytes", "commitsCount": 1}, {"username": "RabidFX", "commitsCount": 1}, {"username": "SherylHohman", "commitsCount": 1}, {"username": "ShinyChang", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "SpaceK33z", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "akihikodaki", "commitsCount": 1}, {"username": "bcbcb", "commitsCount": 1}, {"username": "billgo", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "candu", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "daltones", "commitsCount": 1}, {"username": "diurnalist", "commitsCount": 1}, {"username": "fortruce", "commitsCount": 1}, {"username": "frederikprijck", "commitsCount": 1}, {"username": "helloyou2012", "commitsCount": 1}, {"username": "huan086", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jameslnewell", "commitsCount": 1}, {"username": "kostasmanionis", "commitsCount": 1}, {"username": "lvming6816077", "commitsCount": 1}, {"username": "mateatslc", "commitsCount": 1}, {"username": "numical", "commitsCount": 1}, {"username": "patrickhpan", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "ratson", "commitsCount": 1}, {"username": "renarsvilnis", "commitsCount": 1}, {"username": "robertsheacole", "commitsCount": 1}, {"username": "samertm", "commitsCount": 1}, {"username": "simon04", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "spicydonuts", "commitsCount": 1}, {"username": "sresant", "commitsCount": 1}, {"username": "timse", "commitsCount": 1}, {"username": "x-yuri", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 19608, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^0.3.0", "stable": "2.6.6", "latest": "2.6.6"}, "async": {"required": "^2.4.1", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 4892, "downloadsCount": 4934507.666666667, "downloadsAcceleration": -5685.816514459671, "dependentsCount": 3857}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.42145031236365255, "detail": {"quality": 0.46903929814423573, "popularity": 0.5628696261542787, "maintenance": 0.23924043933252664}}}}, {"eslint-plugin-prettier": {"analyzedAt": "2020-06-14T23:24:17.989Z", "collected": {"metadata": {"name": "eslint-plugin-prettier", "scope": "unscoped", "version": "3.1.4", "description": "Runs prettier as an eslint rule", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "prettier"], "date": "2020-06-14T23:23:38.075Z", "author": {"name": "Teddy Katz"}, "publisher": {"username": "bpscott", "email": "ben@reload.me.uk"}, "maintainers": [{"username": "bpscott", "email": "ben@reload.me.uk"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/eslint-plugin-prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-prettier", "homepage": "https://github.com/prettier/eslint-plugin-prettier#readme", "repository": "https://github.com/prettier/eslint-plugin-prettier", "bugs": "https://github.com/prettier/eslint-plugin-prettier/issues"}, "license": "MIT", "dependencies": {"prettier-linter-helpers": "^1.0.0"}, "devDependencies": {"@not-an-aardvark/node-release-script": "^0.1.0", "eslint": "^7.0.0", "eslint-config-not-an-aardvark": "^2.1.0", "eslint-config-prettier": "^6.0.0", "eslint-plugin-eslint-plugin": "^2.0.0", "eslint-plugin-node": "^8.0.0", "eslint-plugin-self": "^1.1.0", "mocha": "^6.0.0", "prettier": "^1.15.3", "vue-eslint-parser": "^6.0.0"}, "peerDependencies": {"eslint": ">=5.0.0", "prettier": ">=1.13.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-prettier [![Build Status](https://travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master)](https://travis-ci.org/prettier/eslint-plugin-prettier)\n\nRuns [Prettier](https://github.com/prettier/prettier) as an [ESLint](http://eslint.org) rule and reports differences as individual ESLint issues.\n\n## Sample\n\n```js\nerror: Insert `,` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:22:25:\n  20 | import {\n  21 |   observeActiveEditorsDebounced,\n> 22 |   editorChangesDebounced\n     |                         ^\n  23 | } from './debounced';;\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n\n\nerror: Delete `;` (prettier/prettier) at pkg/commons-atom/ActiveEditorRegistry.js:23:21:\n  21 |   observeActiveEditorsDebounced,\n  22 |   editorChangesDebounced\n> 23 | } from './debounced';;\n     |                     ^\n  24 |\n  25 | import {observableFromSubscribeFunction} from '../commons-node/event';\n  26 | import {cacheWhileSubscribed} from '../commons-node/observable';\n\n\n2 errors found.\n```\n\n> `./node_modules/.bin/eslint --format codeframe pkg/commons-atom/ActiveEditorRegistry.js` (code from [nuclide](https://github.com/facebook/nuclide)).\n\n## Installation\n\n```sh\nnpm install --save-dev eslint-plugin-prettier\nnpm install --save-dev --save-exact prettier\n```\n\n**_`eslint-plugin-prettier` does not install Prettier or ESLint for you._** _You must install these yourself._\n\nThen, in your `.eslintrc.json`:\n\n```json\n{\n  \"plugins\": [\"prettier\"],\n  \"rules\": {\n    \"prettier/prettier\": \"error\"\n  }\n}\n```\n\n## Recommended Configuration\n\nThis plugin works best if you disable all other ESLint rules relating to code formatting, and only enable rules that detect patterns in the AST. (If another active ESLint rule disagrees with `prettier` about how code should be formatted, it will be impossible to avoid lint errors.) You can use [eslint-config-prettier](https://github.com/prettier/eslint-config-prettier) to disable all formatting-related ESLint rules.\n\nIf your desired formatting does not match the `prettier` output, you should use a different tool such as [prettier-eslint](https://github.com/prettier/prettier-eslint) instead.\n\nTo integrate this plugin with `eslint-config-prettier`, you can use the `\"recommended\"` configuration:\n\n1. In addition to the above installation instructions, install `eslint-config-prettier`:\n\n   ```sh\n   npm install --save-dev eslint-config-prettier\n   ```\n\n2. Then you need to add `plugin:prettier/recommended` as the last extension in your `.eslintrc.json`:\n\n   ```json\n   {\n     \"extends\": [\"plugin:prettier/recommended\"]\n   }\n   ```\n\nThis does three things:\n\n- Enables `eslint-plugin-prettier`.\n- Sets the `prettier/prettier` rule to `\"error\"`.\n- Extends the `eslint-config-prettier` configuration.\n\nYou can then set Prettier's own options inside a `.prettierrc` file.\n\n3. In order to support special ESLint plugins (e.g. [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react)), add extra exclusions for the plugins you use like so:\n\n```json\n{\n  \"extends\": [\n    \"plugin:prettier/recommended\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\"\n  ]\n}\n```\n\nFor the list of every available exclusion rule set, please see the [readme of eslint-config-prettier](https://github.com/prettier/eslint-config-prettier/blob/master/README.md).\n\n## Options\n\n> Note: While it is possible to pass options to Prettier via your ESLint configuration file, it is not recommended because editor extensions such as `prettier-atom` and `prettier-vscode` **will** read [`.prettierrc`](https://prettier.io/docs/en/configuration.html), but **won't** read settings from ESLint, which can lead to an inconsistent experience.\n\n- The first option:\n\n  - An object representing [options](https://prettier.io/docs/en/options.html) that will be passed into prettier. Example:\n\n    ```json\n    \"prettier/prettier\": [\"error\", {\"singleQuote\": true, \"parser\": \"flow\"}]\n    ```\n\n    NB: This option will merge and override any config set with `.prettierrc` files\n\n- The second option:\n\n  - An object with the following options\n\n    - `usePrettierrc`: Enables loading of the Prettier configuration file, (default: `true`). May be useful if you are using multiple tools that conflict with each other, or do not wish to mix your ESLint settings with your Prettier configuration.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"usePrettierrc\": false\n      }]\n      ```\n\n    - `fileInfoOptions`: Options that are passed to [prettier.getFileInfo](https://prettier.io/docs/en/api.html#prettiergetfileinfofilepath-options) to decide whether a file needs to be formatted. Can be used for example to opt-out from ignoring files located in `node_modules` directories.\n\n      ```json\n      \"prettier/prettier\": [\"error\", {}, {\n        \"fileInfoOptions\": {\n          \"withNodeModules\": true\n        }\n      }]\n      ```\n\n- The rule is autofixable -- if you run `eslint` with the `--fix` flag, your code will be formatted according to `prettier` style.\n\n---\n\n## Contributing\n\nSee [CONTRIBUTING.md](https://github.com/prettier/eslint-plugin-prettier/blob/master/CONTRIBUTING.md)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 151009}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3672413}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15156085}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44687487}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 76323253}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 126299254}], "dependentsCount": 1978, "starsCount": 6}, "github": {"starsCount": 1536, "forksCount": 104, "subscribersCount": 19, "issues": {"count": 304, "openCount": 16, "distribution": {"3600": 121, "10800": 13, "32400": 20, "97200": 30, "291600": 20, "874800": 29, "2624400": 23, "7873200": 25, "23619600": 14, "70858800": 7, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "not-an-aardvark", "commitsCount": 35}, {"username": "BPScott", "commitsCount": 25}, {"username": "zertosh", "commitsCount": 6}, {"username": "azz", "commitsCount": 3}, {"username": "dependabot-preview[bot]", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "SimenB", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "eliperelman", "commitsCount": 1}, {"username": "ikatyang", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "kripod", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "louim", "commitsCount": 1}, {"username": "lydell", "commitsCount": 1}, {"username": "oieduardorabelo", "commitsCount": 1}, {"username": "rootulp", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "sebjambor", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 16}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 5191, "testsSize": 8859, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master", "service": "https://api.travis-ci.org/prettier/eslint-plugin-prettier.svg?branch=master", "shields": "https://img.shields.io/travis/prettier/eslint-plugin-prettier/master.svg", "content": "https://img.shields.io/travis/prettier/eslint-plugin-prettier/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1688, "downloadsCount": 14895829, "downloadsAcceleration": 59292.54967656011, "dependentsCount": 1978}, "maintenance": {"releasesFrequency": 0.4839041095890411, "commitsFrequency": 0.8161643835616438, "openIssues": 1, "issuesDistribution": 0.7967484687393199}}, "score": {"final": 0.8549479890818913, "detail": {"quality": 0.9407903958039021, "popularity": 0.6531402190522919, "maintenance": 0.9831765533497672}}}}, {"karma-chrome-launcher": {"analyzedAt": "2020-06-09T04:59:59.597Z", "collected": {"metadata": {"name": "karma-chrome-launcher", "scope": "unscoped", "version": "3.1.0", "description": "A Karma plugin. Launcher for Chrome and Chrome Canary.", "keywords": ["karma-plugin", "karma-launcher", "chrome"], "date": "2019-08-13T19:33:03.137Z", "author": {"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Rog\u00e9rio Vicente", "email": "rogeriopvl@gmail.com"}, {"name": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"name": "rogeriopvl", "email": "rogeriopvl@gmail.com"}, {"name": "Friedel Ziegelmayer", "email": "dignifiedquire@gmail.com"}, {"name": "greenkeeperio-bot", "email": "support@greenkeeper.io"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Micha\u0142 Go\u0142\u0119biowski-Owczarek", "email": "m.goleb@gmail.com"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "Filipe Guerra", "email": "alias.mac@gmail.com"}, {"name": "Andrey Taranov", "email": "andrey.taranov@nordea.com"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "J. Abbott", "email": "abbotto@users.noreply.github.com"}, {"name": "Joe Doyle", "email": "valdain@gmail.com"}, {"name": "Julien Sanchez", "email": "julien.sanchez@lim.eu"}, {"name": "Florian Richter", "email": "florian@lkr24.de"}, {"name": "Alexander Fedyashov", "email": "af@e42.guru"}, {"name": "Marko Vuksanovic", "email": "markovuksanovic@gmail.com"}, {"name": "Fran\u00e7ois SIMOND", "email": "frsimond@users.noreply.github.com"}, {"name": "Nicholas Mitchell", "email": "mitchellnicholasl@gmail.com"}, {"name": "Parashuram N", "email": "code@r.nparashuram.com"}, {"name": "Hai Feng Kao", "email": "haifeng@cocoaspice.in"}, {"name": "Tatsuyuki Ishi", "email": "ishitatsuyuki@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Vincent Voyer", "email": "vincent.voyer@algolia.com"}, {"name": "David", "email": "davidsu@wix.com"}, {"name": "brutalcrozt", "email": "goendoell49@gmail.com"}, {"name": "cexbrayat", "email": "cedric@ninja-squad.com"}, {"name": "daniel rodriguez", "email": "maieutiquer@users.noreply.github.com"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "gkostov", "email": "p_e_a@gbg.bg"}, {"name": "Florian-R", "email": "florian.r.dev@gmail.com"}, {"name": "J Rob Gant", "email": "rgant@alum.wpi.edu"}, {"name": "Jeff Cross", "email": "middlefloor@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-chrome-launcher.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-chrome-launcher", "homepage": "https://github.com/karma-runner/karma-chrome-launcher#readme", "repository": "https://github.com/karma-runner/karma-chrome-launcher", "bugs": "https://github.com/karma-runner/karma-chrome-launcher/issues"}, "license": "MIT", "dependencies": {"which": "^1.2.1"}, "devDependencies": {"chai": "^4.2.0", "grunt": "^1.0.1", "grunt-auto-release": "^0.0.7", "grunt-bump": "^0.8.0", "grunt-conventional-changelog": "^6.1.0", "grunt-conventional-github-releaser": "^1.0.0", "grunt-karma": "^3.0.0", "grunt-npm": "^0.0.2", "grunt-simple-mocha": "^0.4.0", "jasmine-node": "^3.0.0", "karma": "^4.1.0", "karma-mocha": "1.x || ^0.2.0", "load-grunt-tasks": "^4.0.0", "mocha": "^5.2.0", "sinon": "^7.1.1", "standard": "^12.0.0"}, "releases": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 3}, {"from": "2018-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# karma-chrome-launcher\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-chrome-launcher)\n [![npm version](https://img.shields.io/npm/v/karma-chrome-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-chrome-launcher) [![npm downloads](https://img.shields.io/npm/dm/karma-chrome-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-chrome-launcher)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-chrome-launcher) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-chrome-launcher) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-chrome-launcher#info=devDependencies)\n\n> Launcher for Google Chrome, Google Chrome Canary and Google Chromium.\n\n## Installation\n\nThe easiest way is to keep `karma-chrome-launcher` as a devDependency in your `package.json`,\nby running\n\n```bash\n$ npm i -D karma-chrome-launcher\n```\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['Chrome', 'Chrome_without_security'], // You may use 'ChromeCanary', 'Chromium' or any other supported browser\n\n    // you can define custom flags\n    customLaunchers: {\n      Chrome_without_security: {\n        base: 'Chrome',\n        flags: ['--disable-web-security', '--disable-site-isolation-trials']\n      }\n    }\n  })\n}\n```\n\nThe `--user-data-dir` is set to a temporary directory but can be overridden on a custom launcher as shown below.\nOne reason to do this is to have a permanent Chrome user data directory inside the project directory to be able to\ninstall plugins there (e.g. JetBrains IDE Support plugin).\n\n```js\ncustomLaunchers: {\n  Chrome_with_debugging: {\n    base: 'Chrome',\n    chromeDataDir: path.resolve(__dirname, '.chrome')\n  }\n}\n```\n\nYou can pass list of browsers as a CLI argument too:\n\n```bash\n$ karma start --browsers Chrome,Chrome_without_security\n```\n\n## Headless Chromium with Puppeteer\n\nThe Chrome DevTools team created [Puppeteer](https://github.com/GoogleChrome/puppeteer) - it will automatically install Chromium for all\nplatforms and contains everything you need to run it from within your CI.\n\n### Available Browsers\n*Note: Headless mode requires a browser version >= 59*\n\n- Chrome (CHROME_BIN)\n- ChromeHeadless (CHROME_BIN)\n- Chromium (CHROMIUM_BIN)\n- ChromiumHeadless (CHROMIUM_BIN)\n- ChromeCanary (CHROME_CANARY_BIN)\n- ChromeCanaryHeadless (CHROME_CANARY_BIN)\n- Dartium (DARTIUM_BIN)\n\n#### Usage\n```bash\n$ npm i -D puppeteer karma-chrome-launcher\n```\n\n```js\n// karma.conf.js\nprocess.env.CHROME_BIN = require('puppeteer').executablePath()\n\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['ChromeHeadless']\n  })\n}\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n[homepage]: http://karma-runner.github.com"}, "npm": {"downloads": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 278851}, {"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 1595815}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 6555457}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 19948210}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 37057677}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 70486109}], "dependentsCount": 521, "starsCount": 23}, "github": {"starsCount": 415, "forksCount": 114, "subscribersCount": 15, "issues": {"count": 223, "openCount": 44, "distribution": {"3600": 15, "10800": 7, "32400": 12, "97200": 16, "291600": 6, "874800": 14, "2624400": 25, "7873200": 35, "23619600": 38, "70858800": 25, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "zzo", "commitsCount": 30}, {"username": "vojtajina", "commitsCount": 28}, {"username": "dignifiedquire", "commitsCount": 24}, {"username": "rogeriopvl", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "johnjbarton", "commitsCount": 4}, {"username": "mgol", "commitsCount": 4}, {"username": "alias-mac", "commitsCount": 2}, {"username": "Fidge123", "commitsCount": 1}, {"username": "Florian-R", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "abbotto", "commitsCount": 1}, {"username": "aymericbeaumet", "commitsCount": 1}, {"username": "brutalcrozt", "commitsCount": 1}, {"username": "cexbrayat", "commitsCount": 1}, {"username": "dpogue", "commitsCount": 1}, {"username": "frsimond", "commitsCount": 1}, {"username": "gkostov", "commitsCount": 1}, {"username": "haifengkao", "commitsCount": 1}, {"username": "ishitatsuyuki", "commitsCount": 1}, {"username": "jeffbcross", "commitsCount": 1}, {"username": "maieutiquer", "commitsCount": 1}, {"username": "markovuksanovic", "commitsCount": 1}, {"username": "nimi", "commitsCount": 1}, {"username": "rgant", "commitsCount": 1}], "commits": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2020-03-11T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-12-12T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 0}, {"from": "2019-06-10T00:00:00.000Z", "to": "2020-06-09T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3136, "testsSize": 3243, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-chrome-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-chrome-launcher.svg", "content": "https://img.shields.io/npm/v/karma-chrome-launcher.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-chrome-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-chrome-launcher.svg", "content": "https://img.shields.io/npm/dm/karma-chrome-launcher.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-chrome-launcher.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-chrome-launcher/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-chrome-launcher.svg", "shields": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.svg", "content": "https://img.shields.io/david/karma-runner/karma-chrome-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-chrome-launcher/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-chrome-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["standard"], "outdatedDependencies": {"which": {"required": "^1.2.1", "stable": "2.0.2", "latest": "2.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 592, "downloadsCount": 6649403.333333333, "downloadsAcceleration": 9541.490468036529, "dependentsCount": 521}, "maintenance": {"releasesFrequency": 0.1849315068493151, "commitsFrequency": 0.08054794520547946, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6093683357561475, "detail": {"quality": 0.9702293275223886, "popularity": 0.49480621177465156, "maintenance": 0.4146210382237224}}}}, {"eslint-plugin-node": {"analyzedAt": "2020-05-10T11:04:15.457Z", "collected": {"metadata": {"name": "eslint-plugin-node", "scope": "unscoped", "version": "11.1.0", "description": "Additional ESLint's rules for Node.js", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "node", "nodejs", "ecmascript", "shebang", "file", "path", "import", "require"], "date": "2020-03-28T11:46:46.795Z", "author": {"name": "Toru Nagashima"}, "publisher": {"username": "mysticatea", "email": "public@mysticatea.dev"}, "maintainers": [{"username": "mysticatea", "email": "star.ctor@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mysticatea/eslint-plugin-node.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-node", "homepage": "https://github.com/mysticatea/eslint-plugin-node#readme", "repository": "https://github.com/mysticatea/eslint-plugin-node", "bugs": "https://github.com/mysticatea/eslint-plugin-node/issues"}, "license": "MIT", "dependencies": {"eslint-plugin-es": "^3.0.0", "eslint-utils": "^2.0.0", "ignore": "^5.1.1", "minimatch": "^3.0.4", "resolve": "^1.10.1", "semver": "^6.1.0"}, "devDependencies": {"@mysticatea/eslint-plugin": "^10.0.3", "codecov": "^3.3.0", "eslint": "^6.3.0", "eslint-plugin-node": "file:.", "fast-glob": "^2.2.6", "globals": "^11.12.0", "mocha": "^6.1.4", "nyc": "^14.0.0", "opener": "^1.5.1", "punycode": "^2.1.1", "rimraf": "^2.6.3"}, "peerDependencies": {"eslint": ">=5.16.0"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 2}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 3}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 6}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-node\n\n[![npm version](https://img.shields.io/npm/v/eslint-plugin-node.svg)](https://www.npmjs.com/package/eslint-plugin-node)\n[![Downloads/month](https://img.shields.io/npm/dm/eslint-plugin-node.svg)](http://www.npmtrends.com/eslint-plugin-node)\n[![Build Status](https://github.com/mysticatea/eslint-plugin-node/workflows/CI/badge.svg)](https://github.com/mysticatea/eslint-plugin-node/actions)\n[![Coverage Status](https://codecov.io/gh/mysticatea/eslint-plugin-node/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/eslint-plugin-node)\n[![Dependency Status](https://david-dm.org/mysticatea/eslint-plugin-node.svg)](https://david-dm.org/mysticatea/eslint-plugin-node)\n\nAdditional ESLint's rules for Node.js\n\n## \ud83d\udcbf Install & Usage\n\n```\n$ npm install --save-dev eslint eslint-plugin-node\n```\n\n- Requires Node.js `>=8.10.0`\n- Requires ESLint `>=5.16.0`\n\n**Note:** It recommends a use of [the \"engines\" field of package.json](https://docs.npmjs.com/files/package.json#engines). The \"engines\" field is used by `node/no-unsupported-features/*` rules.\n\n**.eslintrc.json** (An example)\n\n```jsonc\n{\n    \"extends\": [\n        \"eslint:recommended\",\n        \"plugin:node/recommended\"\n    ],\n    \"parserOptions\": {\n        // Only ESLint 6.2.0 and later support ES2020.\n        \"ecmaVersion\": 2020\n    },\n    \"rules\": {\n        \"node/exports-style\": [\"error\", \"module.exports\"],\n        \"node/file-extension-in-import\": [\"error\", \"always\"],\n        \"node/prefer-global/buffer\": [\"error\", \"always\"],\n        \"node/prefer-global/console\": [\"error\", \"always\"],\n        \"node/prefer-global/process\": [\"error\", \"always\"],\n        \"node/prefer-global/url-search-params\": [\"error\", \"always\"],\n        \"node/prefer-global/url\": [\"error\", \"always\"],\n        \"node/prefer-promises/dns\": \"error\",\n        \"node/prefer-promises/fs\": \"error\"\n    }\n}\n```\n\n**package.json** (An example)\n\n```json\n{\n    \"name\": \"your-module\",\n    \"version\": \"1.0.0\",\n    \"type\": \"commonjs\",\n    \"engines\": {\n        \"node\": \">=8.10.0\"\n    }\n}\n```\n\n## \ud83d\udcd6 Rules\n\n- \u2b50\ufe0f - the mark of recommended rules.\n- \u2712\ufe0f - the mark of fixable rules.\n\n<!--RULES_TABLE_START-->\n### Possible Errors\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-callback-literal](./docs/rules/no-callback-literal.md) | ensure Node.js-style error-first callback pattern is followed |  |\n| [node/no-exports-assign](./docs/rules/no-exports-assign.md) | disallow the assignment to `exports` | \u2b50\ufe0f |\n| [node/no-extraneous-import](./docs/rules/no-extraneous-import.md) | disallow `import` declarations which import extraneous modules | \u2b50\ufe0f |\n| [node/no-extraneous-require](./docs/rules/no-extraneous-require.md) | disallow `require()` expressions which import extraneous modules | \u2b50\ufe0f |\n| [node/no-missing-import](./docs/rules/no-missing-import.md) | disallow `import` declarations which import non-existence modules | \u2b50\ufe0f |\n| [node/no-missing-require](./docs/rules/no-missing-require.md) | disallow `require()` expressions which import non-existence modules | \u2b50\ufe0f |\n| [node/no-unpublished-bin](./docs/rules/no-unpublished-bin.md) | disallow `bin` files that npm ignores | \u2b50\ufe0f |\n| [node/no-unpublished-import](./docs/rules/no-unpublished-import.md) | disallow `import` declarations which import private modules | \u2b50\ufe0f |\n| [node/no-unpublished-require](./docs/rules/no-unpublished-require.md) | disallow `require()` expressions which import private modules | \u2b50\ufe0f |\n| [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) | disallow unsupported ECMAScript built-ins on the specified version | \u2b50\ufe0f |\n| [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) | disallow unsupported ECMAScript syntax on the specified version | \u2b50\ufe0f |\n| [node/no-unsupported-features/node-builtins](./docs/rules/no-unsupported-features/node-builtins.md) | disallow unsupported Node.js built-in APIs on the specified version | \u2b50\ufe0f |\n| [node/process-exit-as-throw](./docs/rules/process-exit-as-throw.md) | make `process.exit()` expressions the same code path as `throw` | \u2b50\ufe0f |\n| [node/shebang](./docs/rules/shebang.md) | suggest correct usage of shebang | \u2b50\ufe0f\u2712\ufe0f |\n\n### Best Practices\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/no-deprecated-api](./docs/rules/no-deprecated-api.md) | disallow deprecated APIs | \u2b50\ufe0f |\n\n### Stylistic Issues\n\n| Rule ID | Description |    |\n|:--------|:------------|:--:|\n| [node/exports-style](./docs/rules/exports-style.md) | enforce either `module.exports` or `exports` |  |\n| [node/file-extension-in-import](./docs/rules/file-extension-in-import.md) | enforce the style of file extensions in `import` declarations | \u2712\ufe0f |\n| [node/prefer-global/buffer](./docs/rules/prefer-global/buffer.md) | enforce either `Buffer` or `require(\"buffer\").Buffer` |  |\n| [node/prefer-global/console](./docs/rules/prefer-global/console.md) | enforce either `console` or `require(\"console\")` |  |\n| [node/prefer-global/process](./docs/rules/prefer-global/process.md) | enforce either `process` or `require(\"process\")` |  |\n| [node/prefer-global/text-decoder](./docs/rules/prefer-global/text-decoder.md) | enforce either `TextDecoder` or `require(\"util\").TextDecoder` |  |\n| [node/prefer-global/text-encoder](./docs/rules/prefer-global/text-encoder.md) | enforce either `TextEncoder` or `require(\"util\").TextEncoder` |  |\n| [node/prefer-global/url-search-params](./docs/rules/prefer-global/url-search-params.md) | enforce either `URLSearchParams` or `require(\"url\").URLSearchParams` |  |\n| [node/prefer-global/url](./docs/rules/prefer-global/url.md) | enforce either `URL` or `require(\"url\").URL` |  |\n| [node/prefer-promises/dns](./docs/rules/prefer-promises/dns.md) | enforce `require(\"dns\").promises` |  |\n| [node/prefer-promises/fs](./docs/rules/prefer-promises/fs.md) | enforce `require(\"fs\").promises` |  |\n\n### Deprecated rules\n\nThese rules have been deprecated in accordance with the [deprecation policy](https://eslint.org/docs/user-guide/rule-deprecation), and replaced by newer rules:\n\n| Rule ID | Replaced by |\n|:--------|:------------|\n| [node/no-hide-core-modules](./docs/rules/no-hide-core-modules.md) | (nothing) |\n| [node/no-unsupported-features](./docs/rules/no-unsupported-features.md) | [node/no-unsupported-features/es-syntax](./docs/rules/no-unsupported-features/es-syntax.md) and [node/no-unsupported-features/es-builtins](./docs/rules/no-unsupported-features/es-builtins.md) |\n\n<!--RULES_TABLE_END-->\n\n## \ud83d\udd27 Configs\n\nThis plugin provides three configs:\n\n- `plugin:node/recommended` condiders both CommonJS and ES Modules. If [`\"type\":\"module\"` field](https://medium.com/@nodejs/announcing-a-new-experimental-modules-1be8d2d6c2ff#b023) existed in package.json then it considers files as ES Modules. Otherwise it considers files as CommonJS. In addition, it considers `*.mjs` files as ES Modules and `*.cjs` files as CommonJS.\n- `plugin:node/recommended-module` considers all files as ES Modules.\n- `plugin:node/recommended-script` considers all files as CommonJS.\n\nThose preset config:\n\n- enable [no-process-exit](http://eslint.org/docs/rules/no-process-exit) rule because [the official document](https://nodejs.org/api/process.html#process_process_exit_code) does not recommend a use of `process.exit()`.\n- enable plugin rules which are given :star: in the above table.\n- add `{ecmaVersion: 2019}` and etc into `parserOptions`.\n- add proper globals into `globals`.\n- add this plugin into `plugins`.\n\n## \ud83d\udc6b FAQ\n\n- Q: The `no-missing-import` / `no-missing-require` rules don't work with nested folders in SublimeLinter-eslint\n- A: See [context.getFilename() in rule returns relative path](https://github.com/roadhump/SublimeLinter-eslint#contextgetfilename-in-rule-returns-relative-path) in the SublimeLinter-eslint FAQ.\n\n## \ud83d\udea5 Semantic Versioning Policy\n\n`eslint-plugin-node` follows [semantic versioning](http://semver.org/) and [ESLint's Semantic Versioning Policy](https://github.com/eslint/eslint#semantic-versioning-policy).\n\n- Patch release (intended to not break your lint build)\n    - A bug fix in a rule that results in it reporting fewer errors.\n    - Improvements to documentation.\n    - Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    - Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n- Minor release (might break your lint build)\n    - A bug fix in a rule that results in it reporting more errors.\n    - A new rule is created.\n    - A new option to an existing rule is created.\n    - An existing rule is deprecated.\n- Major release (likely to break your lint build)\n    - A support for old Node version is dropped.\n    - A support for old ESLint version is dropped.\n    - An existing rule is changed in it reporting more errors.\n    - An existing rule is removed.\n    - An existing option of a rule is removed.\n    - An existing config is updated.\n\n## \ud83d\udcf0 Changelog\n\n- [GitHub Releases](https://github.com/mysticatea/eslint-plugin-node/releases)\n\n## \u2764\ufe0f Contributing\n\nWelcome contributing!\n\nPlease use GitHub's Issues/PRs.\n\n### Development Tools\n\n- `npm test` runs tests and measures coverage.\n- `npm run coverage` shows the coverage result of `npm test` command.\n- `npm run clean` removes the coverage result of `npm test` command."}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 108895}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1706346}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 7109199}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 20881481}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 36666448}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 65228520}], "dependentsCount": 1239, "starsCount": 17}, "github": {"starsCount": 635, "forksCount": 81, "subscribersCount": 9, "issues": {"count": 224, "openCount": 45, "distribution": {"3600": 15, "10800": 10, "32400": 22, "97200": 24, "291600": 33, "874800": 24, "2624400": 32, "7873200": 22, "23619600": 24, "70858800": 12, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 335}, {"username": "aladdin-add", "commitsCount": 4}, {"username": "AprilArcus", "commitsCount": 2}, {"username": "feross", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "Fjandin", "commitsCount": 1}, {"username": "Lalem001", "commitsCount": 1}, {"username": "LitoMore", "commitsCount": 1}, {"username": "ZauberNerd", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "davej", "commitsCount": 1}, {"username": "fabiopaiva", "commitsCount": 1}, {"username": "fisker", "commitsCount": 1}, {"username": "fukuchi", "commitsCount": 1}, {"username": "jackharrhy", "commitsCount": 1}, {"username": "jokeyrhyme", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "platinumazure", "commitsCount": 1}, {"username": "remidenele", "commitsCount": 1}, {"username": "rkaneko", "commitsCount": 1}, {"username": "ronkorving", "commitsCount": 1}, {"username": "sudo-suhas", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "zzzgit", "commitsCount": 1}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 11}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 22}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 55}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 9423, "testsSize": 610463}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-node.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-node.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-node.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-plugin-node.svg", "shields": "https://img.shields.io/npm/dm/eslint-plugin-node.svg", "content": "https://img.shields.io/npm/dm/eslint-plugin-node.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/mysticatea/eslint-plugin-node.svg", "service": "https://david-dm.org/mysticatea/eslint-plugin-node.svg", "shields": "https://img.shields.io/david/mysticatea/eslint-plugin-node.svg", "content": "https://img.shields.io/david/mysticatea/eslint-plugin-node.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "coverage": 0.97, "outdatedDependencies": {"semver": {"required": "^6.1.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9954999999999999, "health": 0.75, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 770, "downloadsCount": 6960493.666666667, "downloadsAcceleration": 20814.81023592085, "dependentsCount": 1239}, "maintenance": {"releasesFrequency": 0.782791095890411, "commitsFrequency": 0.7777054794520548, "openIssues": 0.9985119047619048, "issuesDistribution": 0.3229984291153727}}, "score": {"final": 0.8156117245813626, "detail": {"quality": 0.9785834257950708, "popularity": 0.5532308753239398, "maintenance": 0.9383025442270356}}}}, {"eslint-config-prettier": {"analyzedAt": "2020-06-15T05:50:28.513Z", "collected": {"metadata": {"name": "eslint-config-prettier", "scope": "unscoped", "version": "6.11.0", "description": "Turns off all rules that are unnecessary or might conflict with Prettier.", "keywords": ["eslint", "eslintconfig", "prettier"], "date": "2020-04-21T19:13:14.331Z", "author": {"name": "Simon Lydell"}, "publisher": {"username": "lydell", "email": "simon.lydell@gmail.com"}, "maintainers": [{"username": "lydell", "email": "simon.lydell@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/eslint-config-prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-prettier", "homepage": "https://github.com/prettier/eslint-config-prettier#readme", "repository": "https://github.com/prettier/eslint-config-prettier", "bugs": "https://github.com/prettier/eslint-config-prettier/issues"}, "license": "MIT", "dependencies": {"get-stdin": "^6.0.0"}, "devDependencies": {"@typescript-eslint/eslint-plugin": "2.29.0", "@typescript-eslint/parser": "2.29.0", "babel-eslint": "10.1.0", "cross-spawn": "7.0.2", "doctoc": "1.4.0", "eslint": "6.8.0", "eslint-config-google": "0.14.0", "eslint-find-rules": "3.4.0", "eslint-plugin-babel": "5.3.0", "eslint-plugin-flowtype": "4.7.0", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-react": "7.19.0", "eslint-plugin-standard": "4.0.1", "eslint-plugin-unicorn": "18.0.1", "eslint-plugin-vue": "6.2.2", "jest": "25.4.0", "prettier": "2.0.5", "replace": "1.1.5", "rimraf": "3.0.2", "typescript": "3.7.5"}, "peerDependencies": {"eslint": ">=3.14.1"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 3}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 6}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 15}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 29}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-config-prettier\n\nTurns off all rules that are unnecessary or might conflict with [Prettier].\n\nThis lets you use your favorite shareable config without letting its stylistic choices get in the way when using Prettier.\n\nNote that this config _only_ turns rules _off,_ so it only makes sense using it together with some other config.\n\n## Contents\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n  - [Excluding deprecated rules](#excluding-deprecated-rules)\n- [CLI helper tool](#cli-helper-tool)\n- [Example configuration](#example-configuration)\n- [Special rules](#special-rules)\n  - [arrow-body-style and prefer-arrow-callback](#arrow-body-style-and-prefer-arrow-callback)\n  - [curly](#curly)\n  - [lines-around-comment](#lines-around-comment)\n  - [max-len](#max-len)\n  - [no-confusing-arrow](#no-confusing-arrow)\n  - [no-mixed-operators](#no-mixed-operators)\n  - [no-tabs](#no-tabs)\n  - [no-unexpected-multiline](#no-unexpected-multiline)\n  - [quotes](#quotes)\n    - [Enforce backticks](#enforce-backticks)\n    - [Forbid unnecessary backticks](#forbid-unnecessary-backticks)\n      - [Example _double_ quote configuration](#example-_double_-quote-configuration)\n      - [Example _single_ quote configuration](#example-_single_-quote-configuration)\n  - [vue/html-self-closing](#vuehtml-self-closing)\n- [Other rules worth mentioning](#other-rules-worth-mentioning)\n  - [no-sequences](#no-sequences)\n- [Contributing](#contributing)\n- [License](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nInstall eslint-config-prettier:\n\n```\nnpm install --save-dev eslint-config-prettier\n```\n\nThen, add eslint-config-prettier to the \"extends\" array in your `.eslintrc.*` file. Make sure to put it **last,** so it gets the chance to override other configs.\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"some-other-config-you-use\",\n    \"prettier\"\n  ]\n}\n```\n\nA few ESLint plugins are supported as well:\n\n- [@typescript-eslint/eslint-plugin]\n- [eslint-plugin-babel]\n- [eslint-plugin-flowtype]\n- [eslint-plugin-react]\n- [eslint-plugin-standard]\n- [eslint-plugin-unicorn]\n- [eslint-plugin-vue]\n\nAdd extra exclusions for the plugins you use like so:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"some-other-config-you-use\",\n    \"prettier\",\n    \"prettier/@typescript-eslint\",\n    \"prettier/babel\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\",\n    \"prettier/unicorn\",\n    \"prettier/vue\"\n  ]\n}\n```\n\nIf you extend a config which uses a plugin, it is recommended to add `\"prettier/that-plugin\"` (if available). For example, [eslint-config-airbnb] enables [eslint-plugin-react] rules, so `\"prettier/react\"` is needed:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"airbnb\",\n    \"prettier\",\n    \"prettier/react\"\n  ]\n}\n```\n\nIf you\u2019re unsure which plugins are used, you can usually find them in your `package.json`.\n\n### Excluding deprecated rules\n\nSome of the rules that eslint-config-prettier turns off may be deprecated. **This is perfectly fine,** but if you really need to omit the deprecated rules, you can do so by setting the `ESLINT_CONFIG_PRETTIER_NO_DEPRECATED` environment variable to a non-empty value. For example:\n\n```\nenv ESLINT_CONFIG_PRETTIER_NO_DEPRECATED=true npx eslint-find-rules --deprecated index.js\n```\n\n## CLI helper tool\n\neslint-config-prettier also ships with a little CLI tool to help you check if your configuration contains any rules that are unnecessary or conflict with Prettier.\n\nYou can run it using `npx`:\n\n```\nnpx eslint --print-config path/to/main.js | npx eslint-config-prettier-check\n```\n\n(Change `path/to/main.js` to a file that exists in your project.)\n\nIn theory you need to run `npx eslint --print-config file.js | npx eslint-config-prettier-check` for every single file in your project to be 100% sure that there are no conflicting rules, because ESLint supports having different rules for different files. But usually you\u2019ll have about the same rules for all files, so it is enough to run the command on one file (pick one that you won\u2019t be moving). If you use [multiple configuration files] or [overrides], you can (but you probably don\u2019t need to!) run the above script several times with different `--print-config` arguments, such as:\n\n```\nnpx eslint --print-config index.js | npx eslint-config-prettier-check\nnpx eslint --print-config test/index.js | npx eslint-config-prettier-check\nnpx eslint --print-config legacy/main.js | npx eslint-config-prettier-check\n```\n\nExit codes:\n\n- 0: No problems found.\n- 1: Unexpected error.\n- 2: Conflicting rules found.\n\n## Example configuration\n\n<!-- prettier-ignore -->\n```json\n{\n  \"extends\": [\n    \"standard\",\n    \"plugin:@typescript-eslint/recommended\",\n    \"plugin:flowtype/recommended\",\n    \"plugin:react/recommended\",\n    \"plugin:unicorn/recommended\",\n    \"plugin:vue/recommended\",\n    \"prettier\",\n    \"prettier/@typescript-eslint\",\n    \"prettier/babel\",\n    \"prettier/flowtype\",\n    \"prettier/react\",\n    \"prettier/standard\",\n    \"prettier/unicorn\",\n    \"prettier/vue\"\n  ],\n  \"plugins\": [\n    \"@typescript-eslint\",\n    \"babel\",\n    \"flowtype\",\n    \"react\",\n    \"standard\",\n    \"unicorn\",\n    \"vue\"\n  ],\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  },\n  \"env\": {\n    \"es6\": true,\n    \"node\": true\n  }\n}\n```\n\n## Special rules\n\nThere a few rules that eslint-config-prettier disables that actually can be enabled in some cases.\n\n- Some require certain options. The CLI helper tool validates this.\n- Some require special attention when writing code. The CLI helper tool warns you if any of those rules are enabled, but can\u2019t tell if anything is problematic.\n- Some can cause problems if using [eslint-plugin-prettier] and `--fix`.\n\nFor maximum ease of use, the special rules are disabled by default. If you want them, you need to explicitly specify them in your ESLint config.\n\n### [arrow-body-style] and [prefer-arrow-callback]\n\n**These rules might cause problems if using [eslint-plugin-prettier] and `--fix`.**\n\nIf you use any of these rules together with the `prettier/prettier` rule from [eslint-plugin-prettier], you can in some cases end up with invalid code due to a bug in ESLint\u2019s autofix.\n\nThese rules are safe to use if:\n\n- You don\u2019t use [eslint-plugin-prettier]. In other words, you run `eslint --fix` and `prettier --write` as separate steps.\n- You _do_ use [eslint-plugin-prettier], but don\u2019t use `--fix`. (But then, what\u2019s the point?)\n\nYou _can_ still use these rules together with [eslint-plugin-prettier] if you want, because the bug does not occur _all the time._ But if you do, you need to keep in mind that you might end up with invalid code, where you manually have to insert a missing closing parenthesis to get going again.\n\nIf you\u2019re fixing large of amounts of previously unformatted code, consider temporarily disabling the `prettier/prettier` rule and running `eslint --fix` and `prettier --write` separately.\n\nSee these issues for more information:\n\n- [eslint-config-prettier#31]\n- [eslint-config-prettier#71]\n- [eslint-plugin-prettier#65]\n\nWhen the autofix bug in ESLint has been fixed, the special case for these rules can be removed.\n\n### [curly]\n\n**This rule requires certain options.**\n\nIf a block (for example after `if`, `else`, `for` or `while`) contains only one statement, JavaScript allows omitting the curly braces around that statement. This rule enforces if or when those optional curly braces should be omitted.\n\nIf you use the `\"multi-line\"` or `\"multi-or-nest\"` option, the rule can conflict with Prettier.\n\nFor example, the `\"multi-line\"` option allows this line:\n\n<!-- prettier-ignore -->\n```js\nif (cart.items && cart.items[0] && cart.items[0].quantity === 0) updateCart(cart);\n```\n\nHowever, Prettier might consider the line too long and turn it into the following, which the `\"multi-line\"` option does _not_ allow:\n\n<!-- prettier-ignore -->\n```js\nif (cart.items && cart.items[0] && cart.items[0].quantity === 0)\n  updateCart(cart);\n```\n\nIf you like this rule, it can be used just fine with Prettier as long as you don\u2019t use the `\"multi-line\"` or `\"multi-or-nest\"` option.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"curly\": [\"error\", \"all\"]\n  }\n}\n```\n\n### [lines-around-comment]\n\n**This rule can be used with certain options.**\n\nThis rule requires empty lines before and/or after comments. Prettier preserves blank lines, with two exceptions:\n\n- Several blank lines in a row are collapsed into a single blank line. This is fine.\n- Blank lines at the beginning and end of blocks, objects and arrays are always removed. This may lead to conflicts.\n\nBy default, ESLint requires a blank line above the comment is this case:\n\n<!-- prettier-ignore -->\n```js\nif (result) {\n\n  /* comment */\n  return result;\n}\n```\n\nHowever, Prettier removes the blank line:\n\n<!-- prettier-ignore -->\n```js\nif (result) {\n  /* comment */\n  return result;\n}\n```\n\nIf you like this rule, it can be used just fine with Prettier as long as you add some extra configuration to allow comments at the start and end of blocks, objects and arrays.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"lines-around-comment\": [\n      \"error\",\n      {\n        \"beforeBlockComment\": true,\n        \"afterBlockComment\": true,\n        \"beforeLineComment\": true,\n        \"afterLineComment\": true,\n        \"allowBlockStart\": true,\n        \"allowBlockEnd\": true,\n        \"allowObjectStart\": true,\n        \"allowObjectEnd\": true,\n        \"allowArrayStart\": true,\n        \"allowArrayEnd\": true\n      }\n    ]\n  }\n}\n```\n\n### [max-len]\n\n(The following applies to [vue/max-len] as well.)\n\n**This rule requires special attention when writing code.**\n\nUsually, Prettier takes care of following a maximum line length automatically. However, there are cases where Prettier can\u2019t do anything, such as for long strings, regular expressions and comments. Those need to be split up by a human.\n\nIf you\u2019d like to enforce an even stricter maximum line length policy than Prettier can provide automatically, you can enable this rule. Just remember to keep `max-len`\u2019s options and Prettier\u2019s `printWidth` option in sync.\n\nKeep in mind that you might have to refactor code slightly if Prettier formats lines in a way that the `max-len` rule does not approve of.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"max-len\": [\"error\", {\"code\": 80, \"ignoreUrls\": true}]\n  }\n}\n```\n\n### [no-confusing-arrow]\n\n**This rule requires certain options.**\n\nFor example, the rule could warn about this line:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => 1 ? 2 : 3;\n```\n\nWith `{allowParens: true}` (the default since ESLint 6.0.0), adding parentheses is considered a valid way to avoid the arrow confusion:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => (1 ? 2 : 3);\n```\n\nWhile Prettier keeps those parentheses, it removes them if the line is long enough to introduce a line break:\n\n<!-- prettier-ignore -->\n```js\nEnterpriseCalculator.prototype.calculateImportantNumbers = inputNumber =>\n  1 ? 2 : 3;\n```\n\nWith `{allowParens: false}`, ESLint instead suggests switching to an explicit return:\n\n<!-- prettier-ignore -->\n```js\nvar x = a => { return 1 ? 2 : 3; };\n```\n\nThat causes no problems with Prettier.\n\nIf you like this rule, it can be used just fine with Prettier as long as the `allowParens` option is off.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-confusing-arrow\": [\"error\", { \"allowParens\": false }]\n  }\n}\n```\n\n(Note: The CLI helper tool considers `{allowParens: true}` to be the default, which is the case since ESLint 6.0.0. The tool will produce a warning if you use the default even if you use an older version of ESLint. It doesn\u2019t hurt to explicitly set `{allowParens: false}` even though it is technically redundant. This way you are prepared for a future ESLint upgrade and the CLI tool can be kept simple.)\n\n### [no-mixed-operators]\n\n**This rule requires special attention when writing code.**\n\nThis rule forbids mixing certain operators, such as `&&` and `||`.\n\nFor example, the rule could warn about this line:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + b * c;\n```\n\nThe rule suggests adding parentheses, like this:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + (b * c);\n```\n\nHowever, Prettier removes many \u201cunnecessary\u201d parentheses, turning it back to:\n\n<!-- prettier-ignore -->\n```js\nvar foo = a + b * c;\n```\n\nIf you want to use this rule with Prettier, you need to split the expression into another variable:\n\n<!-- prettier-ignore -->\n```js\nvar bar = b * c;\nvar foo = a + bar;\n```\n\nKeep in mind that Prettier prints _some_ \u201cunnecessary\u201d parentheses, though:\n\n<!-- prettier-ignore -->\n```js\nvar foo = (a && b) || c;\n```\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-mixed-operators\": \"error\"\n  }\n}\n```\n\n### [no-tabs]\n\n**This rule requires certain Prettier options.**\n\nThis rule disallows the use of tab characters at all. It can be used just fine with Prettier as long as you don\u2019t configure Prettier to indent using tabs.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-tabs\": \"error\"\n  }\n}\n```\n\nExample Prettier configuration (this is the default, so adding this is not required):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"useTabs\": false\n}\n```\n\n**Note:** Since [ESlint 5.7.0] this rule can be configured to work regardless of your Prettier configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-tabs\": [\"error\", {\"allowIndentationTabs\": true}]\n  }\n}\n```\n\nA future version of eslint-config-prettier might check for that automatically.\n\n### [no-unexpected-multiline]\n\n**This rule requires special attention when writing code.**\n\nThis rule disallows confusing multiline expressions where a newline looks like it is ending a statement, but is not.\n\nFor example, the rule could warn about this:\n\n<!-- prettier-ignore -->\n```js\nvar hello = \"world\"\n[1, 2, 3].forEach(addNumber)\n```\n\nPrettier usually formats this in a way that makes it obvious that a semicolon was missing:\n\n<!-- prettier-ignore -->\n```js\nvar hello = \"world\"[(1, 2, 3)].forEach(addNumber);\n```\n\nHowever, there are cases where Prettier breaks things into several lines such that the `no-unexpected-multiline` conflicts.\n\n<!-- prettier-ignore -->\n```js\nconst value = text.trim().split(\"\\n\")[position].toLowerCase();\n```\n\nPrettier breaks it up into several lines, though, causing a conflict:\n\n<!-- prettier-ignore -->\n```js\nconst value = text\n  .trim()\n  .split(\"\\n\")\n  [position].toLowerCase();\n```\n\nIf you like this rule, it can usually be used with Prettier without problems, but occasionally you might need to either temporarily disable the rule or refactor your code.\n\n<!-- prettier-ignore -->\n```js\nconst value = text\n  .trim()\n  .split(\"\\n\")\n  // eslint-disable-next-line no-unexpected-multiline\n  [position].toLowerCase();\n\n// Or:\n\nconst lines = text.trim().split(\"\\n\");\nconst value = lines[position].toLowerCase();\n```\n\n**Note:** If you _do_ enable this rule, you have to run ESLint and Prettier as two separate steps (and ESLint first) in order to get any value out of it. Otherwise Prettier might reformat your code in such a way that ESLint never gets a chance to report anything (as seen in the first example).\n\nExample configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-unexpected-multiline\": \"error\"\n  }\n}\n```\n\n### [quotes]\n\n(The following applies to [babel/quotes] and [@typescript-eslint/quotes] as well.)\n\n**This rule requires certain options and certain Prettier options.**\n\nUsually, you don\u2019t need this rule at all. But there are two cases where it could be useful:\n\n- To enforce the use of backticks rather than single or double quotes for strings.\n- To forbid backticks where regular strings could have been used.\n\n#### Enforce backticks\n\nIf you\u2019d like all strings to use backticks (never quotes), enable the `\"backtick\"` option.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\"error\", \"backtick\"]\n  }\n}\n```\n\n#### Forbid unnecessary backticks\n\nIn the following example, the first array item could have been written with quotes instead of backticks.\n\n<!-- prettier-ignore -->\n```js\nconst strings = [\n  `could have been a regular string`,\n  `\n    multiple\n    lines\n  `,\n  `uses ${interpolation}`,\n  String.raw`\\tagged/`,\n];\n```\n\nIf you\u2019d like ESLint to enforce `` `could have been a regular string` `` being written as either `\"could have been a regular string\"` or `'could have been a regular string'`, you need to use some specific configuration. The `quotes` rule has two options, a string option and an object option.\n\n- The first (string) option needs to be set to `\"single\"` or `\"double\"` and be kept in sync with Prettier\u2019s [singleQuote] option.\n- The second (object) option needs the following properties:\n  - `\"avoidEscape\": true` to follow Prettier\u2019s [string formatting rules].\n  - `\"allowTemplateLiterals\": false` to disallow unnecessary backticks.\n\n##### Example _double_ quote configuration\n\nESLint:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\n      \"error\",\n      \"double\",\n      { \"avoidEscape\": true, \"allowTemplateLiterals\": false }\n    ]\n  }\n}\n```\n\nPrettier (this is the default, so adding this is not required):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"singleQuote\": false\n}\n```\n\n##### Example _single_ quote configuration\n\nESLint:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"quotes\": [\n      \"error\",\n      \"single\",\n      { \"avoidEscape\": true, \"allowTemplateLiterals\": false }\n    ]\n  }\n}\n```\n\nPrettier:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"singleQuote\": true\n}\n```\n\n### [vue/html-self-closing]\n\n**This rule requires certain options.**\n\nThis rule enforces whether elements should be self-closing or not.\n\nPrettier generally preserves the way you wrote your elements:\n\n<!-- prettier-ignore -->\n```vue\n<div />\n<div></div>\n<MyComponent />\n<MyComponent></MyComponent>\n<svg><path d=\"\" /></svg>\n<svg><path d=\"\"></path></svg>\n```\n\nBut for known _void_ HTML elements, Prettier always uses the self-closing style. For example, `<img>` is turned into `<img />`.\n\nIf you like this rule, it can be used just fine with Prettier as long as you set `html.void` to `\"any\"`.\n\nExample ESLint configuration:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"vue/html-self-closing\": [\n      \"error\",\n      {\n        \"html\": {\n          \"void\": \"any\"\n        }\n      }\n    ]\n  }\n}\n```\n\n## Other rules worth mentioning\n\nThese rules don\u2019t conflict with Prettier, but have some gotchas when used with Prettier.\n\n### [no-sequences]\n\nThis rule forbids using JavaScript\u2019s confusing comma operator (sequence expressions). This piece of code is not doing what it looks like:\n\n<!-- prettier-ignore -->\n```js\nmatrix[4, 7];\n```\n\nPrettier adds parentheses to the above to make it clear that a sequence expression is used:\n\n<!-- prettier-ignore -->\n```js\nmatrix[(4, 7)];\n```\n\nHowever, the `no-sequences` rule allows comma operators if the expression sequence is explicitly wrapped in parentheses. Since Prettier automatically wraps them in parentheses, you might never see any warnings from ESLint about comma operators.\n\nEnding up with an accidental sequence expression can easily happen while refactoring. If you want ESLint to catch such mistakes, it is recommended to forbid sequence expressions entirely using [no-restricted-syntax] \\([as mentioned in the `no-sequences` documentation][no-sequences-full]):\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-restricted-syntax\": [\"error\", \"SequenceExpression\"]\n  }\n}\n```\n\nIf you still need to use the comma operator for some edge case, you can place an `// eslint-disable-next-line no-restricted-syntax` comment on the line above the expression. `no-sequences` can safely be disabled if you use the `no-restricted-syntax` approach.\n\nYou can also supply a custom message if you want:\n\n<!-- prettier-ignore -->\n```json\n{\n  \"rules\": {\n    \"no-restricted-syntax\": [\n      \"error\",\n      {\n        \"selector\": \"SequenceExpression\",\n        \"message\": \"The comma operator is confusing and a common mistake. Don\u2019t use it!\"\n      }\n    ]\n  }\n}\n```\n\n## Contributing\n\neslint-config-prettier has been tested with:\n\n- ESLint 6.8.0\n  - eslint-config-prettier 5.1.0 and older were tested with ESLint 5.x\n  - eslint-config-prettier 2.10.0 and older were tested with ESLint 4.x\n  - eslint-config-prettier 2.1.1 and older were tested with ESLint 3.x\n- prettier 2.0.5\n- @typescript-eslint/eslint-plugin 2.29.0\n- eslint-plugin-babel 5.3.0\n- eslint-plugin-flowtype 4.7.0\n- eslint-plugin-react 7.19.0\n- eslint-plugin-standard 4.0.1\n- eslint-plugin-unicorn 18.0.1\n- eslint-plugin-vue 6.2.2\n\nHave new rules been added since those versions? Have we missed any rules? Is there a plugin you would like to see exclusions for? Open an issue or a pull request!\n\nIf you\u2019d like to add support for eslint-plugin-foobar, this is how you\u2019d go about it:\n\nFirst, create `foobar.js`:\n\n<!-- prettier-ignore -->\n```js\n\"use strict\";\n\nmodule.exports = {\n  rules: {\n    \"foobar/some-rule\": \"off\"\n  }\n};\n```\n\nThen, create `test-lint/foobar.js`:\n\n<!-- prettier-ignore -->\n```js\n/* eslint-disable quotes */\n\"use strict\";\n\n// Prettier does not want spaces before the parentheses, but\n// `plugin:foobar/recommended` wants one.\nconsole.log();\n```\n\n`test-lint/foobar.js` must fail when used with eslint-plugin-foobar and eslint-plugin-prettier at the same time \u2013 until `\"prettier/foobar\"` is added to the \"extends\" property of an ESLint config. The file should be formatted according to Prettier, and that formatting should disagree with the plugin.\n\nFinally, you need to mention the plugin in several places:\n\n- Add `\"foobar.js\"` to the \"files\" field in `package.json`.\n- Add eslint-plugin-foobar to the \"devDependencies\" field in `package.json`.\n- Make sure that at least one rule from eslint-plugin-foobar gets used in `.eslintrc.base.js`.\n- Add it to the list of supported plugins, to the example config and to Contributing section in `README.md`.\n\nWhen you\u2019re done, run `npm test` to verify that you got it all right. It runs several other npm scripts:\n\n- `\"test:lint\"` makes sure that the files in `test-lint/` pass ESLint when the exclusions from eslint-config-prettier are used. It also lints the code of eslint-config-prettier itself, and checks that Prettier has been run on all files.\n- `\"test:lint-verify-fail\"` is run by a test in `test/lint-verify-fail.test.js`.\n- `\"test:lint-rules\"` is run by a test in `test/rules.test.js`.\n- `\"test:jest\"` runs unit tests that check a number of things:\n  - That eslint-plugin-foobar is mentioned in all the places shown above.\n  - That no unknown rules are turned off. This helps catching typos, for example.\n  - That the CLI works.\n- `\"test:cli-sanity\"` and `\"test:cli-sanity-warning\"` are sanity checks for the CLI.\n\n## License\n\n[MIT](LICENSE).\n\n[@typescript-eslint/eslint-plugin]: https://github.com/typescript-eslint/typescript-eslint\n[@typescript-eslint/quotes]: https://github.com/typescript-eslint/typescript-eslint/blob/master/packages/eslint-plugin/docs/rules/quotes.md\n[eslint 5.7.0]: https://eslint.org/blog/2018/10/eslint-v5.7.0-released\n[prettier]: https://github.com/prettier/prettier\n[arrow-body-style]: https://eslint.org/docs/rules/arrow-body-style\n[babel/quotes]: https://github.com/babel/eslint-plugin-babel#rules\n[curly]: https://eslint.org/docs/rules/curly\n[eslint-config-airbnb]: https://www.npmjs.com/package/eslint-config-airbnb\n[eslint-config-prettier#31]: https://github.com/prettier/eslint-config-prettier/issues/31\n[eslint-config-prettier#71]: https://github.com/prettier/eslint-config-prettier/issues/71\n[eslint-plugin-babel]: https://github.com/babel/eslint-plugin-babel\n[eslint-plugin-flowtype]: https://github.com/gajus/eslint-plugin-flowtype\n[eslint-plugin-prettier#65]: https://github.com/prettier/eslint-plugin-prettier/issues/65\n[eslint-plugin-prettier]: https://github.com/prettier/eslint-plugin-prettier\n[eslint-plugin-react]: https://github.com/yannickcr/eslint-plugin-react\n[eslint-plugin-standard]: https://github.com/xjamundx/eslint-plugin-standard\n[eslint-plugin-unicorn]: https://github.com/sindresorhus/eslint-plugin-unicorn\n[eslint-plugin-vue]: https://github.com/vuejs/eslint-plugin-vue\n[lines-around-comment]: https://eslint.org/docs/rules/lines-around-comment\n[max-len]: https://eslint.org/docs/rules/max-len\n[multiple configuration files]: https://eslint.org/docs/user-guide/configuring#configuration-cascading-and-hierarchy\n[no-confusing-arrow]: https://eslint.org/docs/rules/no-confusing-arrow\n[no-mixed-operators]: https://eslint.org/docs/rules/no-mixed-operators\n[no-restricted-syntax]: https://eslint.org/docs/rules/no-restricted-syntax\n[no-sequences-full]: https://eslint.org/docs/rules/no-sequences#when-not-to-use-it\n[no-sequences]: https://eslint.org/docs/rules/no-sequences\n[no-tabs]: https://eslint.org/docs/rules/no-tabs\n[no-unexpected-multiline]: https://eslint.org/docs/rules/no-unexpected-multiline\n[overrides]: https://eslint.org/docs/user-guide/configuring#configuration-based-on-glob-patterns\n[prefer-arrow-callback]: https://eslint.org/docs/rules/prefer-arrow-callback\n[quotes]: https://eslint.org/docs/rules/quotes\n[singlequote]: https://prettier.io/docs/en/options.html#quotes\n[string formatting rules]: https://prettier.io/docs/en/rationale.html#strings\n[vue/html-self-closing]: https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/html-self-closing.md\n[vue/max-len]: https://github.com/vuejs/eslint-plugin-vue/blob/master/docs/rules/max-len.md"}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 167588}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 4042760}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 16565125}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 50925646}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 86113234}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 139865319}], "dependentsCount": 2448, "starsCount": 7}, "github": {"starsCount": 2227, "forksCount": 112, "subscribersCount": 15, "issues": {"count": 150, "openCount": 4, "distribution": {"3600": 46, "10800": 18, "32400": 17, "97200": 21, "291600": 18, "874800": 16, "2624400": 8, "7873200": 3, "23619600": 2, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "lydell", "commitsCount": 216}, {"username": "ybiquitous", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 5}, {"username": "Hoishin", "commitsCount": 2}, {"username": "sudo-suhas", "commitsCount": 2}, {"username": "xcatliu", "commitsCount": 2}, {"username": "0xR", "commitsCount": 1}, {"username": "alexilyaev", "commitsCount": 1}, {"username": "bakkot", "commitsCount": 1}, {"username": "bartocc", "commitsCount": 1}, {"username": "formatlos", "commitsCount": 1}, {"username": "gaurav5430", "commitsCount": 1}, {"username": "j-f1", "commitsCount": 1}, {"username": "joecritch", "commitsCount": 1}, {"username": "mauricedb", "commitsCount": 1}, {"username": "miangraham", "commitsCount": 1}, {"username": "michalsnik", "commitsCount": 1}, {"username": "nfriedly", "commitsCount": 1}, {"username": "pleunv", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "silvenon", "commitsCount": 1}, {"username": "tibdex", "commitsCount": 1}], "commits": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 28}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 69}]}, "source": {"files": {"readmeSize": 25830, "testsSize": 13111, "hasChangelog": true}, "linters": ["eslint", "prettier"], "outdatedDependencies": {"get-stdin": {"required": "^6.0.0", "stable": "8.0.0", "latest": "8.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 2383, "downloadsCount": 16975215.333333332, "downloadsAcceleration": 66048.09482496197, "dependentsCount": 2448}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8394986346516036, "detail": {"quality": 0.8352766714807761, "popularity": 0.6826292509324772, "maintenance": 0.9999868439457249}}}}, {"eslint-plugin-standard": {"analyzedAt": "2020-06-13T09:52:55.261Z", "collected": {"metadata": {"name": "eslint-plugin-standard", "scope": "unscoped", "version": "4.0.1", "description": "ESlint Plugin for the Standard Linter", "keywords": ["eslint", "eslintplugin"], "date": "2019-08-19T20:25:09.852Z", "author": {"name": "Jamund Ferguson", "email": "jamund@gmail.com", "username": "xjamundx"}, "publisher": {"username": "feross", "email": "feross@feross.org"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}, {"username": "xjamundx", "email": "jamund@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/standard/eslint-plugin-standard.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-standard", "homepage": "https://github.com/standard/eslint-plugin-standard#readme", "repository": "https://github.com/standard/eslint-plugin-standard", "bugs": "https://github.com/standard/eslint-plugin-standard/issues"}, "license": "MIT", "devDependencies": {"eslint": "^6.1.0", "mocha": "^6.2.0", "standard": "*"}, "peerDependencies": {"eslint": ">=5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# eslint-plugin-standard [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg\n[travis-url]: https://travis-ci.org/standard/eslint-plugin-standard\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-standard.svg\n[npm-url]: https://npmjs.org/package/eslint-plugin-standard\n[downloads-image]: https://img.shields.io/npm/dm/eslint-plugin-standard.svg\n[downloads-url]: https://npmjs.org/package/eslint-plugin-standard\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\nESlint Rules for the Standard Linter\n\n### Usage\n\n`npm install --save-dev eslint-plugin-standard`\n\n### Configuration\n\n```js\n{\n  rules: {\n    'standard/object-curly-even-spacing': [2, \"either\"],\n    'standard/array-bracket-even-spacing': [2, \"either\"],\n    'standard/computed-property-even-spacing': [2, \"even\"],\n    'standard/no-callback-literal': [2, [\"cb\", \"callback\"]]\n  }\n}\n```\n\n### Rules Explanations\n\nThere are several rules that were created specifically for the `standard` linter.\n\n- `object-curly-even-spacing` - Like `object-curly-spacing` from ESLint except it has an `either` option which lets you have 1 or 0 spaces padding.\n- `array-bracket-even-spacing` - Like `array-bracket-even-spacing` from ESLint except it has an `either` option which lets you have 1 or 0 spacing padding.\n- `computed-property-even-spacing` - Like `computed-property-spacing` around ESLint except is has an `even` option which lets you have 1 or 0 spacing padding.\n- `no-callback-literal` - Ensures that we strictly follow the callback pattern with `undefined`, `null` or an error object in the first position of a callback."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 197310}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1262546}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5470237}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 15943739}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 28517838}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 51832068}], "dependentsCount": 1093, "starsCount": 10}, "github": {"starsCount": 108, "forksCount": 20, "subscribersCount": 7, "issues": {"count": 35, "openCount": 2, "distribution": {"3600": 7, "10800": 1, "32400": 3, "97200": 5, "291600": 2, "874800": 1, "2624400": 4, "7873200": 3, "23619600": 5, "70858800": 3, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 54}, {"username": "xjamundx", "commitsCount": 3}, {"username": "delaguilaluis", "commitsCount": 2}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "Flet", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "limpid-kzonix", "commitsCount": 1}, {"username": "sorear", "commitsCount": 1}, {"username": "voxpelli", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1862, "testsSize": 49754, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg", "service": "https://api.travis-ci.org/standard/eslint-plugin-standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.svg", "content": "https://img.shields.io/travis/standard/eslint-plugin-standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-standard.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-standard.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-plugin-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-plugin-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-plugin-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "standard"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 155, "downloadsCount": 5314579.666666667, "downloadsAcceleration": 14190.583789954333, "dependentsCount": 1093}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8108320019268928, "detail": {"quality": 0.9681538918419647, "popularity": 0.48692520382574456, "maintenance": 0.9998914658151222}}}}, {"tape": {"analyzedAt": "2020-06-02T23:23:18.671Z", "collected": {"metadata": {"name": "tape", "scope": "unscoped", "version": "5.0.1", "description": "tap-producing test harness for node and browsers", "keywords": ["tap", "test", "harness", "assert", "browser"], "date": "2020-05-25T04:05:25.924Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "domenic", "email": "d@domenic.me"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "raynos", "email": "raynos2@gmail.com"}, {"username": "substack", "email": "substack@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/substack/tape.git"}, "links": {"npm": "https://www.npmjs.com/package/tape", "homepage": "https://github.com/substack/tape", "repository": "https://github.com/substack/tape", "bugs": "https://github.com/substack/tape/issues"}, "license": "MIT", "dependencies": {"deep-equal": "^2.0.3", "defined": "^1.0.0", "dotignore": "^0.1.2", "for-each": "^0.3.3", "function-bind": "^1.1.1", "glob": "^7.1.6", "has": "^1.0.3", "inherits": "^2.0.4", "is-regex": "^1.0.5", "minimist": "^1.2.5", "object-inspect": "^1.7.0", "object-is": "^1.1.2", "object.assign": "^4.1.0", "resolve": "^1.17.0", "resumer": "^0.0.0", "string.prototype.trim": "^1.2.1", "through": "^2.3.8"}, "devDependencies": {"concat-stream": "^1.6.2", "eclint": "^2.8.1", "ecstatic": "^4.1.4", "eslint": "^7.0.0", "falafel": "^2.2.4", "js-yaml": "^3.13.1", "tap": "^8.0.1", "tap-parser": "^3.0.5"}, "releases": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 3}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 4}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 14}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 15}, {"from": "2018-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 20}], "hasTestScript": true, "readme": "# tape\n\ntap-producing test harness for node and browsers\n\n[![build status](https://secure.travis-ci.org/substack/tape.svg?branch=master)](http://travis-ci.org/substack/tape)\n\n![tape](https://web.archive.org/web/20170612184731if_/http://substack.net/images/tape_drive.png)\n\n# example\n\n``` js\nvar test = require('tape');\n\ntest('timing test', function (t) {\n    t.plan(2);\n\n    t.equal(typeof Date.now, 'function');\n    var start = Date.now();\n\n    setTimeout(function () {\n        t.equal(Date.now() - start, 100);\n    }, 100);\n});\n```\n\n```\n$ node example/timing.js\nTAP version 13\n# timing test\nok 1 should be strictly equal\nnot ok 2 should be strictly equal\n  ---\n    operator: equal\n    expected: 100\n    actual:   107\n  ...\n\n1..2\n# tests 2\n# pass  1\n# fail  1\n```\n\n# usage\n\nYou always need to `require('tape')` in test files. You can run the tests by\nusual node means (`require('test-file.js')` or `node test-file.js`). You can\nalso run tests using the `tape` binary to utilize globbing, on Windows for\nexample:\n\n```sh\n$ tape tests/**/*.js\n```\n\n`tape`'s arguments are passed to the\n[`glob`](https://www.npmjs.com/package/glob) module. If you want `glob` to\nperform the expansion on a system where the shell performs such expansion, quote\nthe arguments as necessary:\n\n```sh\n$ tape 'tests/**/*.js'\n$ tape \"tests/**/*.js\"\n```\n\n## Preloading modules\n\nAdditionally, it is possible to make `tape` load one or more modules before running any tests, by using the `-r` or `--require` flag. Here's an example that loads [babel-register](http://babeljs.io/docs/usage/require/) before running any tests, to allow for JIT compilation:\n\n```sh\n$ tape -r babel-register tests/**/*.js\n```\n\nDepending on the module you're loading, you may be able to parameterize it using environment variables or auxiliary files. Babel, for instance, will load options from [`.babelrc`](http://babeljs.io/docs/usage/babelrc/) at runtime.\n\nThe `-r` flag behaves exactly like node's `require`, and uses the same module resolution algorithm. This means that if you need to load local modules, you have to prepend their path with `./` or `../` accordingly.\n\nFor example:\n\n```sh\n$ tape -r ./my/local/module tests/**/*.js\n```\n\nPlease note that all modules loaded using the `-r` flag will run *before* any tests, regardless of when they are specified. For example, `tape -r a b -r c` will actually load `a` and `c` *before* loading `b`, since they are flagged as required modules.\n\n# things that go well with tape\n\n`tape` maintains a fairly minimal core. Additional features are usually added by using another module alongside `tape`.\n\n## pretty reporters\n\nThe default TAP output is good for machines and humans that are robots.\n\nIf you want a more colorful / pretty output there are lots of modules on npm\nthat will output something pretty if you pipe TAP into them:\n\n- [tap-spec](https://github.com/scottcorgan/tap-spec)\n- [tap-dot](https://github.com/scottcorgan/tap-dot)\n- [faucet](https://github.com/substack/faucet)\n- [tap-bail](https://github.com/juliangruber/tap-bail)\n- [tap-browser-color](https://github.com/kirbysayshi/tap-browser-color)\n- [tap-json](https://github.com/gummesson/tap-json)\n- [tap-min](https://github.com/derhuerst/tap-min)\n- [tap-nyan](https://github.com/calvinmetcalf/tap-nyan)\n- [tap-pessimist](https://www.npmjs.org/package/tap-pessimist)\n- [tap-prettify](https://github.com/toolness/tap-prettify)\n- [colortape](https://github.com/shuhei/colortape)\n- [tap-xunit](https://github.com/aghassemi/tap-xunit)\n- [tap-difflet](https://github.com/namuol/tap-difflet)\n- [tape-dom](https://github.com/gritzko/tape-dom)\n- [tap-diff](https://github.com/axross/tap-diff)\n- [tap-notify](https://github.com/axross/tap-notify)\n- [tap-summary](https://github.com/zoubin/tap-summary)\n- [tap-markdown](https://github.com/Hypercubed/tap-markdown)\n- [tap-html](https://github.com/gabrielcsapo/tap-html)\n- [tap-react-browser](https://github.com/mcnuttandrew/tap-react-browser)\n- [tap-junit](https://github.com/dhershman1/tap-junit)\n- [tap-nyc](https://github.com/MegaArman/tap-nyc)\n- [tap-spec (emoji patch)](https://github.com/Sceat/tap-spec-emoji)\n- [tape-repeater](https://github.com/rgruesbeck/tape-repeater)\n\nTo use them, try `node test/index.js | tap-spec` or pipe it into one\nof the modules of your choice!\n\n## uncaught exceptions\n\nBy default, uncaught exceptions in your tests will not be intercepted, and will cause `tape` to crash. If you find this behavior undesirable, use [`tape-catch`](https://github.com/michaelrhodes/tape-catch) to report any exceptions as TAP errors.\n\n## other\n\n- CoffeeScript support with https://www.npmjs.com/package/coffeetape\n- Promise support with https://www.npmjs.com/package/blue-tape or https://www.npmjs.com/package/tape-promise\n- ES6 support with https://www.npmjs.com/package/babel-tape-runner or https://www.npmjs.com/package/buble-tape-runner\n- Different test syntax with https://github.com/pguth/flip-tape (warning: mutates String.prototype)\n- Electron test runner with https://github.com/tundrax/electron-tap\n- Concurrency support with https://github.com/imsnif/mixed-tape\n- In-process reporting with https://github.com/DavidAnson/tape-player\n\n# methods\n\nThe assertion methods in `tape` are heavily influenced or copied from the methods\nin [node-tap](https://github.com/isaacs/node-tap).\n\n```js\nvar test = require('tape')\n```\n\n## test([name], [opts], cb)\n\nCreate a new test with an optional `name` string and optional `opts` object.\n`cb(t)` fires with the new test object `t` once all preceding tests have\nfinished. Tests execute serially.\n\nAvailable `opts` options are:\n- opts.skip = true/false. See test.skip.\n- opts.timeout = 500. Set a timeout for the test, after which it will fail. See test.timeoutAfter.\n- opts.objectPrintDepth = 5. Configure max depth of expected / actual object printing. Environmental variable `NODE_TAPE_OBJECT_PRINT_DEPTH` can set the desired default depth for all tests; locally-set values will take precedence.\n- opts.todo = true/false. Test will be allowed to fail.\n\nIf you forget to `t.plan()` out how many assertions you are going to run and you\ndon't call `t.end()` explicitly, your test will hang.\n\n## test.skip([name], [opts], cb)\n\nGenerate a new test that will be skipped over.\n\n## test.onFinish(fn)\n\nThe onFinish hook will get invoked when ALL `tape` tests have finished\nright before `tape` is about to print the test summary.\n\n## test.onFailure(fn)\n\nThe onFailure hook will get invoked whenever any `tape` tests has failed.\n\n## t.plan(n)\n\nDeclare that `n` assertions should be run. `t.end()` will be called\nautomatically after the `n`th assertion. If there are any more assertions after\nthe `n`th, or after `t.end()` is called, they will generate errors.\n\n## t.end(err)\n\nDeclare the end of a test explicitly. If `err` is passed in `t.end` will assert\nthat it is falsey.\n\n## t.fail(msg)\n\nGenerate a failing assertion with a message `msg`.\n\n## t.pass(msg)\n\nGenerate a passing assertion with a message `msg`.\n\n## t.timeoutAfter(ms)\n\nAutomatically timeout the test after X ms.\n\n## t.skip(msg)\n\nGenerate an assertion that will be skipped over.\n\n## t.ok(value, msg)\n\nAssert that `value` is truthy with an optional description of the assertion `msg`.\n\nAliases: `t.true()`, `t.assert()`\n\n## t.notOk(value, msg)\n\nAssert that `value` is falsy with an optional description of the assertion `msg`.\n\nAliases: `t.false()`, `t.notok()`\n\n## t.error(err, msg)\n\nAssert that `err` is falsy. If `err` is non-falsy, use its `err.message` as the\ndescription message.\n\nAliases: `t.ifError()`, `t.ifErr()`, `t.iferror()`\n\n## t.equal(actual, expected, msg)\n\nAssert that `Object.is(actual, expected)` with an optional description of the assertion `msg`.\n\nAliases: `t.equals()`, `t.isEqual()`, `t.strictEqual()`, `t.strictEquals()`, `t.is()`\n\n## t.notEqual(actual, expected, msg)\n\nAssert that `!Object.is(actual, expected)` with an optional description of the assertion `msg`.\n\nAliases: `t.notEquals()`, `t.isNotEqual()`, `t.doesNotEqual()`, `t.isInequal()`, `t.notStrictEqual()`, `t.notStrictEquals()`, `t.isNot()`, `t.not()`\n\n## t.looseEqual(actual, expected, msg)\n\nAssert that `actual == expected` with an optional description of the assertion `msg`.\n\nAliases: `t.looseEquals()`\n\n## t.notLooseEqual(actual, expected, msg)\n\nAssert that `actual != expected` with an optional description of the assertion `msg`.\n\nAliases: `t.notLooseEquals()`\n\n## t.deepEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith strict comparisons (`===`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.deepEquals()`, `t.isEquivalent()`, `t.same()`\n\n## t.notDeepEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` do not have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith strict comparisons (`===`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.notDeepEquals`, `t.notEquivalent()`, `t.notDeeply()`, `t.notSame()`,\n`t.isNotDeepEqual()`, `t.isNotDeeply()`, `t.isNotEquivalent()`,\n`t.isInequivalent()`\n\n## t.deepLooseEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith loose comparisons (`==`) on leaf nodes and an optional description of the assertion `msg`.\n\n## t.notDeepLooseEqual(actual, expected, msg)\n\nAssert that `actual` and `expected` do not have the same structure and nested values using\n[node's deepEqual() algorithm](https://github.com/substack/node-deep-equal)\nwith loose comparisons (`==`) on leaf nodes and an optional description of the assertion `msg`.\n\nAliases: `t.notLooseEqual()`, `t.notLooseEquals()`\n\n## t.throws(fn, expected, msg)\n\nAssert that the function call `fn()` throws an exception. `expected`, if present, must be a `RegExp` or `Function`. The `RegExp` matches the string representation of the exception, as generated by `err.toString()`. The `Function` is the exception thrown (e.g. `Error`). `msg` is an optional description of the assertion.\n\n## t.doesNotThrow(fn, expected, msg)\n\nAssert that the function call `fn()` does not throw an exception. `expected`, if present, limits what should not be thrown. For example, set `expected` to `/user/` to fail the test only if the string representation of the exception contains the word `user`. Any other exception would pass the test. If `expected` is omitted, any exception will fail the test. `msg` is an optional description of the assertion.\n\n## t.test(name, [opts], cb)\n\nCreate a subtest with a new test handle `st` from `cb(st)` inside the current\ntest `t`. `cb(st)` will only fire when `t` finishes. Additional tests queued up\nafter `t` will not be run until all subtests finish.\n\nYou may pass the same options that [`test()`](#testname-opts-cb) accepts.\n\n## t.comment(message)\n\nPrint a message without breaking the tap output. (Useful when using e.g. `tap-colorize` where output is buffered & `console.log` will print in incorrect order vis-a-vis tap output.)\n\n## t.match(string, regexp, message)\n\nAssert that `string` matches the RegExp `regexp`. Will throw (not just fail) when the first two arguments are the wrong type.\n\n## t.doesNotMatch(string, regexp, message)\n\nAssert that `string` does not match the RegExp `regexp`. Will throw (not just fail) when the first two arguments are the wrong type.\n\n## var htest = test.createHarness()\n\nCreate a new test harness instance, which is a function like `test()`, but with\na new pending stack and test state.\n\nBy default the TAP output goes to `console.log()`. You can pipe the output to\nsomeplace else if you `htest.createStream().pipe()` to a destination stream on\nthe first tick.\n\n## test.only([name], [opts], cb)\n\nLike `test([name], [opts], cb)` except if you use `.only` this is the only test case\nthat will run for the entire process, all other test cases using `tape` will\nbe ignored.\n\n## var stream = test.createStream(opts)\n\nCreate a stream of output, bypassing the default output stream that writes\nmessages to `console.log()`. By default `stream` will be a text stream of TAP\noutput, but you can get an object stream instead by setting `opts.objectMode` to\n`true`.\n\n### tap stream reporter\n\nYou can create your own custom test reporter using this `createStream()` api:\n\n``` js\nvar test = require('tape');\nvar path = require('path');\n\ntest.createStream().pipe(process.stdout);\n\nprocess.argv.slice(2).forEach(function (file) {\n    require(path.resolve(file));\n});\n```\n\nYou could substitute `process.stdout` for whatever other output stream you want,\nlike a network connection or a file.\n\nPass in test files to run as arguments:\n\n```sh\n$ node tap.js test/x.js test/y.js\nTAP version 13\n# (anonymous)\nnot ok 1 should be strictly equal\n  ---\n    operator: equal\n    expected: \"boop\"\n    actual:   \"beep\"\n  ...\n# (anonymous)\nok 2 should be strictly equal\nok 3 (unnamed assert)\n# wheee\nok 4 (unnamed assert)\n\n1..4\n# tests 4\n# pass  3\n# fail  1\n```\n\n### object stream reporter\n\nHere's how you can render an object stream instead of TAP:\n\n``` js\nvar test = require('tape');\nvar path = require('path');\n\ntest.createStream({ objectMode: true }).on('data', function (row) {\n    console.log(JSON.stringify(row))\n});\n\nprocess.argv.slice(2).forEach(function (file) {\n    require(path.resolve(file));\n});\n```\n\nThe output for this runner is:\n\n```sh\n$ node object.js test/x.js test/y.js\n{\"type\":\"test\",\"name\":\"(anonymous)\",\"id\":0}\n{\"id\":0,\"ok\":false,\"name\":\"should be strictly equal\",\"operator\":\"equal\",\"actual\":\"beep\",\"expected\":\"boop\",\"error\":{},\"test\":0,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":0}\n{\"type\":\"test\",\"name\":\"(anonymous)\",\"id\":1}\n{\"id\":0,\"ok\":true,\"name\":\"should be strictly equal\",\"operator\":\"equal\",\"actual\":2,\"expected\":2,\"test\":1,\"type\":\"assert\"}\n{\"id\":1,\"ok\":true,\"name\":\"(unnamed assert)\",\"operator\":\"ok\",\"actual\":true,\"expected\":true,\"test\":1,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":1}\n{\"type\":\"test\",\"name\":\"wheee\",\"id\":2}\n{\"id\":0,\"ok\":true,\"name\":\"(unnamed assert)\",\"operator\":\"ok\",\"actual\":true,\"expected\":true,\"test\":2,\"type\":\"assert\"}\n{\"type\":\"end\",\"test\":2}\n```\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```sh\nnpm install tape --save-dev\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 88623}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 559536}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2391945}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 7616630}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 14953677}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 28322975}], "dependentsCount": 815, "starsCount": 154}, "github": {"starsCount": 5318, "forksCount": 300, "subscribersCount": 73, "issues": {"count": 520, "openCount": 39, "distribution": {"3600": 54, "10800": 51, "32400": 44, "97200": 55, "291600": 37, "874800": 45, "2624400": 35, "7873200": 27, "23619600": 32, "70858800": 61, "212576400": 79}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 199}, {"username": "ljharb", "commitsCount": 177}, {"username": "Raynos", "commitsCount": 48}, {"username": "nelsonic", "commitsCount": 17}, {"username": "grncdr", "commitsCount": 14}, {"username": "marcusberner", "commitsCount": 14}, {"username": "fongandrew", "commitsCount": 10}, {"username": "mstade", "commitsCount": 10}, {"username": "isaacs", "commitsCount": 6}, {"username": "r0mflip", "commitsCount": 6}, {"username": "DavidAnson", "commitsCount": 5}, {"username": "FredrikNoren", "commitsCount": 5}, {"username": "domenic", "commitsCount": 5}, {"username": "nhamer", "commitsCount": 5}, {"username": "nicolagi", "commitsCount": 5}, {"username": "TehShrike", "commitsCount": 3}, {"username": "braddunbar", "commitsCount": 3}, {"username": "jtlapp", "commitsCount": 3}, {"username": "mkls", "commitsCount": 3}, {"username": "Sceat", "commitsCount": 2}, {"username": "abelmokadem", "commitsCount": 2}, {"username": "aredridel", "commitsCount": 2}, {"username": "michaelrhodes", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "rgruesbeck", "commitsCount": 2}, {"username": "ronkorving", "commitsCount": 2}, {"username": "timgates42", "commitsCount": 2}, {"username": "tmcw", "commitsCount": 2}, {"username": "AWinterman", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "Hypercubed", "commitsCount": 1}, {"username": "JoshuaGrams", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "KayleePop", "commitsCount": 1}, {"username": "Matt-Esch", "commitsCount": 1}, {"username": "MegaArman", "commitsCount": 1}, {"username": "Sequoia", "commitsCount": 1}, {"username": "Wilfred", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "aghassemi", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "andrewdeandrade", "commitsCount": 1}, {"username": "axelpale", "commitsCount": 1}, {"username": "aychtang", "commitsCount": 1}, {"username": "bambusekd", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "blakeembrey", "commitsCount": 1}, {"username": "blowery", "commitsCount": 1}, {"username": "brendanlong", "commitsCount": 1}, {"username": "chrisnicola", "commitsCount": 1}, {"username": "davidtheclark", "commitsCount": 1}, {"username": "defunctzombie", "commitsCount": 1}, {"username": "derhuerst", "commitsCount": 1}, {"username": "dhershman1", "commitsCount": 1}, {"username": "dmitriz", "commitsCount": 1}, {"username": "dscape", "commitsCount": 1}, {"username": "evcohen", "commitsCount": 1}, {"username": "feross", "commitsCount": 1}, {"username": "freeall", "commitsCount": 1}, {"username": "gabrielcsapo", "commitsCount": 1}, {"username": "gritzko", "commitsCount": 1}, {"username": "hayes", "commitsCount": 1}, {"username": "ifraixedes", "commitsCount": 1}, {"username": "imsnif", "commitsCount": 1}, {"username": "inadarei", "commitsCount": 1}, {"username": "jarofghosts", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "johnhenry", "commitsCount": 1}, {"username": "joshgillies", "commitsCount": 1}, {"username": "jprichardson", "commitsCount": 1}, {"username": "kirbysayshi", "commitsCount": 1}, {"username": "kuraga", "commitsCount": 1}, {"username": "marques-work", "commitsCount": 1}, {"username": "mathiasrw", "commitsCount": 1}, {"username": "mcnuttandrew", "commitsCount": 1}, {"username": "nikcorg", "commitsCount": 1}, {"username": "nowells", "commitsCount": 1}, {"username": "paulcpederson", "commitsCount": 1}, {"username": "perguth", "commitsCount": 1}, {"username": "rafcioki", "commitsCount": 1}, {"username": "rhendric", "commitsCount": 1}, {"username": "scottbessler", "commitsCount": 1}, {"username": "snuggs", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "trescube", "commitsCount": 1}, {"username": "tundrax", "commitsCount": 1}, {"username": "wbinnssmith", "commitsCount": 1}], "commits": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 0}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 11}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 23}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 86}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 100}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 14361, "testsSize": 171970}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/substack/tape.svg?branch=master", "service": "https://api.travis-ci.org/substack/tape.svg?branch=master", "shields": "https://img.shields.io/travis/substack/tape/master.svg", "content": "https://img.shields.io/travis/substack/tape/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 5932, "downloadsCount": 2538876.6666666665, "downloadsAcceleration": 1903.2749429223768, "dependentsCount": 815}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7023472270224338, "detail": {"quality": 0.9447804410495326, "popularity": 0.5302278896406878, "maintenance": 0.6666666666666666}}}}, {"postcss-loader": {"analyzedAt": "2020-06-14T19:10:19.952Z", "collected": {"metadata": {"name": "postcss-loader", "scope": "unscoped", "version": "3.0.0", "description": "PostCSS loader for webpack", "keywords": ["css", "postcss", "postcss-runner", "webpack", "webpack-loader"], "date": "2018-08-08T17:43:31.231Z", "author": {"name": "Andrey Sitnik", "email": "andrey@sitnik.ru", "username": "ai"}, "publisher": {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, "maintainers": [{"username": "ai", "email": "andrey@sitnik.ru"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/postcss/postcss-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/postcss-loader", "homepage": "https://github.com/postcss/postcss-loader#readme", "repository": "https://github.com/postcss/postcss-loader", "bugs": "https://github.com/postcss/postcss-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^1.1.0", "postcss": "^7.0.0", "postcss-load-config": "^2.0.0", "schema-utils": "^1.0.0"}, "devDependencies": {"@webpack-utilities/test": "^1.0.0-alpha.0", "jest": "^23.0.0", "jsdoc-to-markdown": "^4.0.0", "postcss-import": "^11.0.0", "postcss-js": "^2.0.0", "standard": "^11.0.0", "standard-version": "^4.0.0", "sugarss": "^1.0.0", "webpack": "^4.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\n<div align=\"center\">\n  <img width=\"180\" height=\"180\" hspace=\"10\"\n    alt=\"PostCSS Logo\"\n    src=\"https://api.postcss.org/logo.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" hspace=\"10\"\n      src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\n  </a>\n  <div align=\"center\">\n    <a href=\"https://evilmartians.com/?utm_source=postcss\">\n      <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n        alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\" vspace=\"10\">\n    </a>\n  </div>\n  <h1>PostCSS Loader</h1>\n  <p>Loader for <a href=\"https://webpack.js.org/\">webpack</a> to process CSS with <a href=\"https://postcss.org/\">PostCSS</a></p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm i -D postcss-loader\n```\n\n<h2 align=\"center\">Usage</h2>\n\n### `Configuration`\n\n**`postcss.config.js`**\n```js\nmodule.exports = {\n  parser: 'sugarss',\n  plugins: {\n    'postcss-import': {},\n    'postcss-preset-env': {},\n    'cssnano': {}\n  }\n}\n```\n\nYou can read more about common PostCSS Config [here](https://github.com/michael-ciniawsky/postcss-load-config).\n\n### `Config Cascade`\n\nYou can use different `postcss.config.js` files in different directories.\nConfig lookup starts from `path.dirname(file)` and walks the file tree upwards until a config file is found.\n\n```\n|\u2013 components\n| |\u2013 component\n| | |\u2013 index.js\n| | |\u2013 index.png\n| | |\u2013 style.css (1)\n| | |\u2013 postcss.config.js (1)\n| |\u2013 component\n| | |\u2013 index.js\n| | |\u2013 image.png\n| | |\u2013 style.css (2)\n|\n|\u2013 postcss.config.js (1 && 2 (recommended))\n|\u2013 webpack.config.js\n|\n|\u2013 package.json\n```\n\nAfter setting up your `postcss.config.js`, add `postcss-loader` to your `webpack.config.js`. You can use it standalone or in conjunction with `css-loader` (recommended). Use it **after** `css-loader` and `style-loader`, but **before** other preprocessor loaders like e.g `sass|less|stylus-loader`, if you use any.\n\n**`webpack.config.js`**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [ 'style-loader', 'postcss-loader' ]\n      }\n    ]\n  }\n}\n```\n\n> \u26a0\ufe0f  When `postcss-loader` is used standalone (without `css-loader`) don't use `@import` in your CSS, since this can lead to quite bloated bundles\n\n**`webpack.config.js` (recommended)**\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { importLoaders: 1 } },\n          'postcss-loader'\n        ]\n      }\n    ]\n  }\n}\n```\n\n<h2 align=\"center\">Options</h2>\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`exec`](#exec)|`{Boolean}`|`undefined`|Enable PostCSS Parser support in `CSS-in-JS`|\n|[`parser`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Parser|\n|[`syntax`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Syntax|\n|[`stringifier`](#syntaxes)|`{String\\|Object}`|`undefined`|Set PostCSS Stringifier|\n|[`config`](#config)|`{Object}`|`undefined`|Set `postcss.config.js` config path && `ctx`|\n|[`plugins`](#plugins)|`{Array\\|Function}`|`[]`|Set PostCSS Plugins|\n|[`sourceMap`](#sourcemap)|`{String\\|Boolean}`|`false`|Enable Source Maps|\n\n### `Exec`\n\nIf you use JS styles without the [`postcss-js`][postcss-js] parser, add the `exec` option.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.style.js$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { importLoaders: 1 } },\n    { loader: 'postcss-loader', options: { parser: 'sugarss', exec: true } }\n  ]\n}\n```\n\n### `Config`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`path`](#path)|`{String}`|`undefined`|PostCSS Config Directory|\n|[`context`](#context)|`{Object}`|`undefined`|PostCSS Config Context|\n\n#### `Path`\n\nYou can manually specify the path to search for your config (`postcss.config.js`) with the `config.path` option. This is needed if you store your config  in a separate e.g `./config || ./.config` folder.\n\n> \u26a0\ufe0f  Otherwise it is **unnecessary** to set this option and is **not** recommended\n\n> \u26a0\ufe0f  Note that you **can't** use a **filename** other than the [supported config formats] (e.g `.postcssrc.js`, `postcss.config.js`), this option only allows you to manually specify the **directory** where config lookup should **start** from\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    config: {\n      path: 'path/to/.config/' \u2705\n      path: 'path/to/.config/css.config.js' \u274c\n    }\n  }\n}\n```\n\n[supported config formats]: https://github.com/michael-ciniawsky/postcss-load-config#usage\n\n#### `Context (ctx)`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|`env`|`{String}`|`'development'`|`process.env.NODE_ENV`|\n|`file`|`{Object}`|`loader.resourcePath`|`extname`, `dirname`, `basename`|\n|`options`|`{Object}`|`{}`|Options|\n\n`postcss-loader` exposes context `ctx` to the config file, making your `postcss.config.js` dynamic, so can use it to do some real magic \u2728\n\n**`postcss.config.js`**\n```js\nmodule.exports = ({ file, options, env }) => ({\n  parser: file.extname === '.sss' ? 'sugarss' : false,\n  plugins: {\n    'postcss-import': { root: file.dirname },\n    'postcss-preset-env': options['postcss-preset-env'] ? options['postcss-preset-env'] : false,\n    'cssnano': env === 'production' ? options.cssnano : false\n  }\n})\n```\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    config: {\n      ctx: {\n        'postcss-preset-env': {...options},\n        cssnano: {...options},\n      }\n    }\n  }\n}\n```\n\n### `Plugins`\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    ident: 'postcss',\n    plugins: (loader) => [\n      require('postcss-import')({ root: loader.resourcePath }),\n      require('postcss-preset-env')(),\n      require('cssnano')()\n    ]\n  }\n}\n```\n\n> \u26a0\ufe0f  webpack requires an identifier (`ident`) in `options` when `{Function}/require` is used (Complex Options). The `ident` can be freely named as long as it is unique. It's recommended to name it (`ident: 'postcss'`)\n\n### `Syntaxes`\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|[`parser`](#parser)|`{String\\|Function}`|`undefined`|Custom PostCSS Parser|\n|[`syntax`](#syntax)|`{String\\|Function}`|`undefined`|Custom PostCSS Syntax|\n|[`stringifier`](#stringifier)|`{String\\|Function}`|`undefined`|Custom PostCSS Stringifier|\n\n#### `Parser`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.sss$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { parser: 'sugarss' } }\n  ]\n}\n```\n\n#### `Syntax`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { syntax: 'sugarss' } }\n  ]\n}\n```\n\n#### `Stringifier`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    ...,\n    { loader: 'postcss-loader', options: { stringifier: 'midas' } }\n  ]\n}\n```\n\n### `SourceMap`\n\nEnables source map support, `postcss-loader` will use the previous source map given by other loaders and update it accordingly, if no previous loader is applied before `postcss-loader`, the loader will generate a source map for you.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css/,\n  use: [\n    { loader: 'style-loader', options: { sourceMap: true } },\n    { loader: 'css-loader', options: { sourceMap: true } },\n    { loader: 'postcss-loader', options: { sourceMap: true } },\n    { loader: 'sass-loader', options: { sourceMap: true } }\n  ]\n}\n```\n\n#### `'inline'`\n\nYou can set the `sourceMap: 'inline'` option to inline the source map\nwithin the CSS directly as an annotation comment.\n\n**`webpack.config.js`**\n```js\n{\n  loader: 'postcss-loader',\n  options: {\n    sourceMap: 'inline'\n  }\n}\n```\n\n```css\n.class { color: red; }\n\n/*# sourceMappingURL=data:application/json;base64, ... */\n```\n\n<h2 align=\"center\">Examples</h2>\n\n### `Stylelint`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    'css-loader',\n    {\n      loader: 'postcss-loader',\n      options: {\n        ident: 'postcss',\n        plugins: [\n          require('postcss-import')(),\n          require('stylelint')(),\n          ...,\n        ]\n      }\n    }\n  ]\n}\n```\n\n### `Autoprefixing`\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    'css-loader',\n    {\n      loader: 'postcss-loader',\n      options: {\n        ident: 'postcss',\n        plugins: [\n          require('autoprefixer')({...options}),\n          ...,\n        ]\n      }\n    }\n  ]\n}\n```\n\n> :warning: [`postcss-preset-env`](https://github.com/csstools/postcss-preset-env) includes [`autoprefixer`](https://github.com/postcss/autoprefixer), so adding it separately is not necessary if you already use the preset.\n\n### `CSS Modules`\n\nThis loader [cannot be used] with [CSS Modules] out of the box due\nto the way `css-loader` processes file imports. To make them work properly,\neither add the css-loader\u2019s [`importLoaders`] option.\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.css$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { modules: true, importLoaders: 1 } },\n    'postcss-loader'\n  ]\n}\n```\n\nor use [postcss-modules] instead of `css-loader`.\n\n[`importLoaders`]: https://github.com/webpack-contrib/css-loader#importloaders\n[cannot be used]: https://github.com/webpack/css-loader/issues/137\n[CSS Modules]: https://github.com/webpack/css-loader#css-modules\n[postcss-modules]: https://github.com/css-modules/postcss-modules\n\n### `CSS-in-JS`\n\nIf you want to process styles written in JavaScript, use the [postcss-js] parser.\n\n[postcss-js]: https://github.com/postcss/postcss-js\n\n**`webpack.config.js`**\n```js\n{\n  test: /\\.style.js$/,\n  use: [\n    'style-loader',\n    { loader: 'css-loader', options: { importLoaders: 2 } },\n    { loader: 'postcss-loader', options: { parser: 'postcss-js' } },\n    'babel-loader'\n  ]\n}\n```\n\nAs result you will be able to write styles in the following way\n\n```js\nimport colors from './styles/colors'\n\nexport default {\n    '.menu': {\n      color: colors.main,\n      height: 25,\n      '&_link': {\n      color: 'white'\n    }\n  }\n}\n```\n\n> :warning: If you are using Babel you need to do the following in order for the setup to work\n\n> 1. Add [babel-plugin-add-module-exports] to your configuration\n> 2. You need to have only one **default** export per style module\n\n[babel-plugin-add-module-exports]: https://github.com/59naga/babel-plugin-add-module-exports\n\n### [Extract CSS][ExtractPlugin]\n\n[ExtractPlugin]: https://github.com/webpack-contrib/mini-css-extract-plugin\n\n**`webpack.config.js`**\n```js\nconst devMode = process.env.NODE_ENV !== 'production'\n\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin')\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          devMode ? 'style-loader' : MiniCssExtractPlugin.loader,\n          'css-loader',\n          'postcss-loader'\n        ]\n      }\n    ]\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: devMode ? '[name].css' : '[name].[hash].css'\n    })\n  ]\n}\n```\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <a href=\"https://github.com/michael-ciniawsky\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/michael-ciniawsky.png?v=3&s=150\">\n          </br>\n          Michael Ciniawsky\n        </a>\n      </td>\n      <td align=\"center\">\n        <a href=\"https://github.com/evilebottnawi\">\n          <img width=\"150\" height=\"150\" src=\"https://github.com/evilebottnawi.png?v=3&s=150\">\n          </br>\n          Alexander Krasnoyarov\n        </a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/postcss-loader.svg\n[npm-url]: https://npmjs.com/package/postcss-loader\n\n[node]: https://img.shields.io/node/v/postcss-loader.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/postcss/postcss-loader.svg\n[deps-url]: https://david-dm.org/postcss/postcss-loader\n\n[tests]: https://img.shields.io/travis/postcss/postcss-loader.svg\n[tests-url]: https://travis-ci.org/postcss/postcss-loader\n\n[cover]: https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg\n[cover-url]: https://coveralls.io/github/postcss/postcss-loader\n\n[chat]: https://badges.gitter.im/postcss/postcss.svg\n[chat-url]: https://gitter.im/postcss/postcss"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 282031}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 6780956}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 28292499}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 87640924}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 156879533}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 284650829}], "dependentsCount": 6517, "starsCount": 62}, "github": {"starsCount": 2592, "forksCount": 189, "subscribersCount": 37, "issues": {"count": 431, "openCount": 15, "distribution": {"3600": 126, "10800": 45, "32400": 55, "97200": 52, "291600": 39, "874800": 27, "2624400": 31, "7873200": 30, "23619600": 17, "70858800": 9, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "ai", "commitsCount": 172}, {"username": "michael-ciniawsky", "commitsCount": 76}, {"username": "cybercase", "commitsCount": 4}, {"username": "evilebottnawi", "commitsCount": 4}, {"username": "ertrzyiks", "commitsCount": 3}, {"username": "jantimon", "commitsCount": 3}, {"username": "EsrefDurna", "commitsCount": 2}, {"username": "MoOx", "commitsCount": 2}, {"username": "Munter", "commitsCount": 2}, {"username": "badsyntax", "commitsCount": 2}, {"username": "halfzebra", "commitsCount": 2}, {"username": "izaakschroeder", "commitsCount": 2}, {"username": "jescalan", "commitsCount": 2}, {"username": "komlev", "commitsCount": 2}, {"username": "mcjfunk", "commitsCount": 2}, {"username": "CKGrafico", "commitsCount": 1}, {"username": "Fnatte", "commitsCount": 1}, {"username": "JayAndCatchFire", "commitsCount": 1}, {"username": "Simek", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "SimonDegraeve", "commitsCount": 1}, {"username": "alibosworth", "commitsCount": 1}, {"username": "amankkg", "commitsCount": 1}, {"username": "andreypopp", "commitsCount": 1}, {"username": "archr", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "bcbcb", "commitsCount": 1}, {"username": "bjacobel", "commitsCount": 1}, {"username": "brandonaaskov", "commitsCount": 1}, {"username": "brnrdog", "commitsCount": 1}, {"username": "camshaft", "commitsCount": 1}, {"username": "clydin", "commitsCount": 1}, {"username": "cspotcode", "commitsCount": 1}, {"username": "egoist", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "iMaximal", "commitsCount": 1}, {"username": "iamakulov", "commitsCount": 1}, {"username": "josephfinlayson", "commitsCount": 1}, {"username": "kisenka", "commitsCount": 1}, {"username": "kud", "commitsCount": 1}, {"username": "leyyinad", "commitsCount": 1}, {"username": "liitfr", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "olegakbarov", "commitsCount": 1}, {"username": "paleite", "commitsCount": 1}, {"username": "partyka1", "commitsCount": 1}, {"username": "patrickabkarian", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "robmoorman", "commitsCount": 1}, {"username": "romanslonov", "commitsCount": 1}, {"username": "sainthkh", "commitsCount": 1}, {"username": "solcik", "commitsCount": 1}, {"username": "stsdc", "commitsCount": 1}, {"username": "swa1ps", "commitsCount": 1}, {"username": "taion", "commitsCount": 1}, {"username": "troutowicz", "commitsCount": 1}, {"username": "xakep139", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}, {"username": "y-gagar1n", "commitsCount": 1}, {"username": "yargalot", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}, {"username": "zenbrent", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12456, "testsSize": 17177, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/postcss-loader.svg", "shields": "https://img.shields.io/npm/v/postcss-loader.svg", "content": "https://img.shields.io/npm/v/postcss-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/postcss/postcss-loader.svg", "service": "https://david-dm.org/postcss/postcss-loader.svg", "shields": "https://img.shields.io/david/postcss/postcss-loader.svg", "content": "https://img.shields.io/david/postcss/postcss-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/travis/postcss/postcss-loader.svg", "service": "https://api.travis-ci.org/postcss/postcss-loader.svg", "shields": "https://img.shields.io/travis/postcss/postcss-loader.svg", "content": "https://img.shields.io/travis/postcss/postcss-loader.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg", "service": "https://coveralls.io/repos/github/postcss/postcss-loader/badge.svg", "shields": "https://img.shields.io/coveralls/postcss/postcss-loader.svg", "content": "https://img.shields.io/coveralls/postcss/postcss-loader.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://badges.gitter.im/postcss/postcss.svg", "service": "https://badges.gitter.im/postcss/postcss.svg", "shields": "https://img.shields.io/gitter/room/postcss/postcss.svg", "content": "https://img.shields.io/gitter/room/postcss/postcss.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "standard"], "coverage": 0.87, "outdatedDependencies": {"loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9804999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 2942, "downloadsCount": 29213641.333333332, "downloadsAcceleration": 63726.422812024364, "dependentsCount": 6517}, "maintenance": {"releasesFrequency": 0.3113013698630137, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0.904859064731672}}, "score": {"final": 0.8161796475755567, "detail": {"quality": 0.9361096582113935, "popularity": 0.7524256120154493, "maintenance": 0.7771365311620897}}}}, {"rollup-plugin-babel": {"analyzedAt": "2020-06-07T20:15:39.853Z", "collected": {"metadata": {"name": "rollup-plugin-babel", "scope": "unscoped", "version": "4.4.0", "description": "Seamless integration between Rollup and Babel.", "keywords": ["rollup-plugin", "babel", "es2015", "es6"], "date": "2020-03-07T09:51:08.304Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "andarist", "email": "mateuszburzynski@gmail.com"}, "maintainers": [{"username": "andarist", "email": "mateuszburzynski@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "developit", "email": "jason@developit.ca"}, {"username": "eventualbuddha", "email": "brian@donovans.cc"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "shellscape", "email": "andrew@shellscape.org"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "contributors": [{"name": "Bogdan Chadkin", "email": "trysound@yandex.ru"}, {"name": "Mateusz Burzy\u0144ski", "email": "mateuszburzynski@gmail.com", "url": "https://github.com/Andarist"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-babel.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-babel", "homepage": "https://github.com/rollup/rollup-plugin-babel", "repository": "https://github.com/rollup/rollup-plugin-babel", "bugs": "https://github.com/rollup/rollup-plugin-babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-module-imports": "^7.0.0", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.3.4", "@babel/plugin-external-helpers": "^7.0.0", "@babel/plugin-proposal-decorators": "^7.0.0", "@babel/plugin-transform-runtime": "^7.0.0", "@babel/preset-env": "^7.3.4", "buble": "^0.19.3", "eslint": "^5.15.1", "eslint-config-prettier": "^3.3.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^1.0.1", "lint-staged": "^7.2.2", "mocha": "^5.2.0", "prettier": "^1.15.3", "rollup": "^2.0.1", "rollup-plugin-buble": "^0.19.2", "rollup-plugin-json": "^3.0.0", "source-map": "^0.6.1", "source-map-support": "^0.5.6"}, "peerDependencies": {"@babel/core": "7 || ^7.0.0-rc.2", "rollup": ">=0.60.0 <3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-babel.", "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 23584}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 493317}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2051774}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5871462}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9306983}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15295955}], "dependentsCount": 843, "starsCount": 10}, "github": {"starsCount": 695, "forksCount": 87, "subscribersCount": 25, "issues": {"count": 359, "openCount": 0, "distribution": {"3600": 48, "10800": 28, "32400": 34, "97200": 27, "291600": 25, "874800": 35, "2624400": 27, "7873200": 43, "23619600": 42, "70858800": 49, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "Andarist", "commitsCount": 77}, {"username": "Rich-Harris", "commitsCount": 72}, {"username": "hzoo", "commitsCount": 14}, {"username": "eventualbuddha", "commitsCount": 5}, {"username": "TrySound", "commitsCount": 4}, {"username": "Victorystick", "commitsCount": 3}, {"username": "danez", "commitsCount": 3}, {"username": "shellscape", "commitsCount": 3}, {"username": "ericf", "commitsCount": 2}, {"username": "esphen", "commitsCount": 2}, {"username": "nicolo-ribaudo", "commitsCount": 2}, {"username": "sorgloomer", "commitsCount": 2}, {"username": "zeitiger", "commitsCount": 2}, {"username": "ArtMcBain", "commitsCount": 1}, {"username": "DenisCarriere", "commitsCount": 1}, {"username": "DrewML", "commitsCount": 1}, {"username": "FezVrasta", "commitsCount": 1}, {"username": "Kinrany", "commitsCount": 1}, {"username": "NMinhNguyen", "commitsCount": 1}, {"username": "adam-golab", "commitsCount": 1}, {"username": "cangoektas", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "denkristoffer", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "gingur", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kopax", "commitsCount": 1}, {"username": "lukastaegert", "commitsCount": 1}, {"username": "mikeheddes", "commitsCount": 1}, {"username": "miketrexler", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "ryanwalters", "commitsCount": 1}, {"username": "shad-k", "commitsCount": 1}, {"username": "snuggs", "commitsCount": 1}, {"username": "swernerx", "commitsCount": 1}, {"username": "tswaters", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}, {"username": "wmhilton", "commitsCount": 1}, {"username": "ylemkimon", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 12915, "hasChangelog": true}, "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 860, "downloadsCount": 1957154, "downloadsAcceleration": 9071.118930745813, "dependentsCount": 843}, "maintenance": {"releasesFrequency": 0.8636986301369863, "commitsFrequency": 0.5285958904109589, "openIssues": 1, "issuesDistribution": 0.2633568141371937}}, "score": {"final": 0.6306967824977753, "detail": {"quality": 0.4944062032634065, "popularity": 0.47499669734537797, "maintenance": 0.9032173641367743}}}}, {"eslint-config-standard": {"analyzedAt": "2020-06-14T22:02:43.751Z", "collected": {"metadata": {"name": "eslint-config-standard", "scope": "unscoped", "version": "14.1.1", "description": "JavaScript Standard Style - ESLint Shareable Config", "keywords": ["JavaScript Standard Style", "check", "checker", "code", "code checker", "code linter", "code standards", "code style", "enforce", "eslint", "eslintconfig", "hint", "jscs", "jshint", "lint", "policy", "quality", "simple", "standard", "standard style", "style", "style checker", "style linter", "verify"], "date": "2020-03-20T18:03:49.444Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org", "username": "feross"}, "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "feross", "email": "feross@feross.org"}, {"username": "flet", "email": "flettre@gmail.com"}, {"username": "linusu", "email": "linus@folkdatorn.se"}], "repository": {"type": "git", "url": "git://github.com/standard/eslint-config-standard.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-standard", "homepage": "https://github.com/standard/eslint-config-standard", "repository": "https://github.com/standard/eslint-config-standard", "bugs": "https://github.com/standard/eslint-config-standard/issues"}, "license": "MIT", "devDependencies": {"eslint": "^6.2.2", "eslint-plugin-import": "^2.18.0", "eslint-plugin-node": "^10.0.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.0", "tape": "^4.8.0"}, "peerDependencies": {"eslint": ">=6.2.2", "eslint-plugin-import": ">=2.18.0", "eslint-plugin-node": ">=9.1.0", "eslint-plugin-promise": ">=4.2.1", "eslint-plugin-standard": ">=4.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 10}], "hasTestScript": true, "readme": "# eslint-config-standard [![travis][travis-image]][travis-url] [![npm][npm-image]][npm-url] [![downloads][downloads-image]][downloads-url] [![javascript style guide][standard-image]][standard-url]\n\n[travis-image]: https://img.shields.io/travis/standard/eslint-config-standard/master.svg\n[travis-url]: https://travis-ci.org/standard/eslint-config-standard\n[npm-image]: https://img.shields.io/npm/v/eslint-config-standard.svg\n[npm-url]: https://npmjs.org/package/eslint-config-standard\n[downloads-image]: https://img.shields.io/npm/dm/eslint-config-standard.svg\n[downloads-url]: https://npmjs.org/package/eslint-config-standard\n[standard-image]: https://img.shields.io/badge/code_style-standard-brightgreen.svg\n[standard-url]: https://standardjs.com\n\n#### An ESLint [Shareable Config](http://eslint.org/docs/developer-guide/shareable-configs) for [JavaScript Standard Style](http://standardjs.com)\n\n[![JavaScript Style Guide - Standard Style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n\n## Install\n\nThis module is for advanced users. You probably want to use [`standard`](http://standardjs.com) instead :)\n\n```bash\nnpm install eslint-config-standard\n```\n\n## Usage\n\nShareable configs are designed to work with the `extends` feature of `.eslintrc` files.\nYou can learn more about\n[Shareable Configs](http://eslint.org/docs/developer-guide/shareable-configs) on the\nofficial ESLint website.\n\n**If you want to set up the config automatically**, follow these steps in your project directory:\n\n1. `npx eslint --init`\n2. Select \"Use a popular style guide.\"\n3. Select \"Standard.\"\n4. Select a config file format.\n5. If prompted, confirm the installation of the necessary dependencies.\n\nThe above steps will automatically set up an ESLint configuration and install the necessary dependencies for you.\n\n**If you want to set up the config manually**, run the following command:\n\n```bash\nnpm install --save-dev eslint-config-standard eslint-plugin-standard eslint-plugin-promise eslint-plugin-import eslint-plugin-node\n```\n\nThen, add this to your `.eslintrc` file:\n\n```\n{\n  \"extends\": \"standard\"\n}\n```\n\n*Note: We omitted the `eslint-config-` prefix since it is automatically assumed by ESLint.*\n\nYou can override settings from the shareable config by adding them directly into your\n`.eslintrc` file.\n\n### Looking for something easier than this?\n\nThe easiest way to use JavaScript Standard Style to check your code is to use the\n[`standard`](http://standardjs.com) package. This comes with a global\nNode command line program (`standard`) that you can run or add to your `npm test` script\nto quickly check your style.\n\n## Badge\n\nUse this in one of your projects? Include one of these badges in your readme to\nlet people know that your code is using the standard style.\n\n[![js-standard-style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n\n```markdown\n[![js-standard-style](https://cdn.rawgit.com/standard/standard/master/badge.svg)](http://standardjs.com)\n```\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n\n```markdown\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg)](http://standardjs.com)\n```\n\n## Learn more\n\nFor the full listing of rules, editor plugins, FAQs, and more, visit the main\n[JavaScript Standard Style repo](http://standardjs.com).\n\n## License\n\nMIT. Copyright (c) [Feross Aboukhadijeh](http://feross.org)."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 60414}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1252566}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5271016}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15861354}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 28493074}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 51312970}], "dependentsCount": 1077, "starsCount": 31}, "github": {"homepage": "https://standardjs.com", "starsCount": 1900, "forksCount": 476, "subscribersCount": 44, "issues": {"count": 167, "openCount": 17, "distribution": {"3600": 23, "10800": 7, "32400": 17, "97200": 20, "291600": 15, "874800": 11, "2624400": 15, "7873200": 18, "23619600": 26, "70858800": 13, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 279}, {"username": "Flet", "commitsCount": 4}, {"username": "LinusU", "commitsCount": 4}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "mightyiam", "commitsCount": 3}, {"username": "xjamundx", "commitsCount": 3}, {"username": "AdamVig", "commitsCount": 2}, {"username": "MrSwitch", "commitsCount": 2}, {"username": "dcousens", "commitsCount": 2}, {"username": "jokeyrhyme", "commitsCount": 2}, {"username": "acarballo-cs", "commitsCount": 1}, {"username": "blgm", "commitsCount": 1}, {"username": "danyshaanan", "commitsCount": 1}, {"username": "davegregg", "commitsCount": 1}, {"username": "davidjb", "commitsCount": 1}, {"username": "ddelnano", "commitsCount": 1}, {"username": "jleft", "commitsCount": 1}, {"username": "justinkalland", "commitsCount": 1}, {"username": "laurentdesmet", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "lukekarrys", "commitsCount": 1}, {"username": "mmazzarolo", "commitsCount": 1}, {"username": "mvanduijker", "commitsCount": 1}, {"username": "nickmccurdy", "commitsCount": 1}, {"username": "robinpokorny", "commitsCount": 1}, {"username": "simonkberg", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3491, "testsSize": 731, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/eslint-config-standard/master.svg", "service": "https://api.travis-ci.org/standard/eslint-config-standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/eslint-config-standard/master.svg", "content": "https://img.shields.io/travis/standard/eslint-config-standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/v/eslint-config-standard.svg", "content": "https://img.shields.io/npm/v/eslint-config-standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-config-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2477, "downloadsCount": 5287118, "downloadsAcceleration": 13207.107496194818, "dependentsCount": 1077}, "maintenance": {"releasesFrequency": 0.7542808219178082, "commitsFrequency": 0.6113013698630138, "openIssues": 1, "issuesDistribution": 0.3563965310383021}}, "score": {"final": 0.8250640274277732, "detail": {"quality": 0.9782069173799172, "popularity": 0.5680244131448768, "maintenance": 0.950838307465975}}}}, {"@babel/preset-react": {"analyzedAt": "2020-06-04T02:49:29.566Z", "collected": {"metadata": {"name": "@babel/preset-react", "scope": "babel", "version": "7.10.1", "description": "Babel preset for all React plugins.", "date": "2020-05-27T22:08:18.506Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-react"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-react", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-plugin-utils": "^7.10.1", "@babel/plugin-transform-react-display-name": "^7.10.1", "@babel/plugin-transform-react-jsx": "^7.10.1", "@babel/plugin-transform-react-jsx-development": "^7.10.1", "@babel/plugin-transform-react-jsx-self": "^7.10.1", "@babel/plugin-transform-react-jsx-source": "^7.10.1", "@babel/plugin-transform-react-pure-annotations": "^7.10.1"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1", "@babel/helper-transform-fixture-test-runner": "^7.10.1"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 11}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 24}], "readme": "# @babel/preset-react\n\n> Babel preset for all React plugins.\n\nSee our website [@babel/preset-react](https://babeljs.io/docs/en/next/babel-preset-react.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22area%3A%20react%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-react\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-react --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1316798}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6891466}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 29556302}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 81855605}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 136181104}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 215815668}], "dependentsCount": 2848, "starsCount": 4}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36698, "forksCount": 4307, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1239, "291600": 1052, "874800": 1008, "2624400": 848, "7873200": 806, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 471, "testsSize": 3287, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 1, "branding": 1}, "popularity": {"communityInterest": 41975, "downloadsCount": 27285201.666666668, "downloadsAcceleration": 139805.03751902588, "dependentsCount": 2848}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23983827984614398}}, "score": {"final": 0.8907685899665788, "detail": {"quality": 0.95718469516766, "popularity": 0.8347882915783611, "maintenance": 0.8898207981824414}}}}, {"@types/react": {"analyzedAt": "2019-08-05T08:55:54.883Z", "collected": {"metadata": {"name": "@types/react", "scope": "types", "version": "16.8.24", "description": "TypeScript definitions for React", "date": "2019-07-31T17:06:47.611Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "AssureSign", "url": "http://www.assuresign.com"}, {"name": "Microsoft", "url": "https://microsoft.com"}, {"name": "John Reilly", "url": "https://github.com/johnnyreilly"}, {"name": "Benoit Benezech", "url": "https://github.com/bbenezech"}, {"name": "Patricio Zavolinsky", "url": "https://github.com/pzavolinsky"}, {"name": "Digiguru", "url": "https://github.com/digiguru"}, {"name": "Eric Anderson", "url": "https://github.com/ericanderson"}, {"name": "Dovydas Navickas", "url": "https://github.com/DovydasNavickas"}, {"name": "St\u00e9phane Goetz", "url": "https://github.com/onigoetz"}, {"name": "Josh Rutherford", "url": "https://github.com/theruther4d"}, {"name": "Guilherme H\u00fcbner", "url": "https://github.com/guilhermehubner"}, {"name": "Ferdy Budhidharma", "url": "https://github.com/ferdaber"}, {"name": "Johann Rakotoharisoa", "url": "https://github.com/jrakotoharisoa"}, {"name": "Olivier Pascal", "url": "https://github.com/pascaloliv"}, {"name": "Martin Hochel", "url": "https://github.com/hotell"}, {"name": "Frank Li", "url": "https://github.com/franklixuefei"}, {"name": "Jessica Franco", "url": "https://github.com/Jessidhia"}, {"name": "Saransh Kataria", "url": "https://github.com/saranshkataria"}, {"name": "Kanitkorn Sujautra", "url": "https://github.com/lukyth"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/react"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Freact", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "dependencies": {"@types/prop-types": "*", "csstype": "^2.2.0"}, "releases": [{"from": "2019-07-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 3}, {"from": "2019-05-07T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 12}, {"from": "2019-02-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 30}, {"from": "2018-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 69}, {"from": "2017-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 155}], "readme": "# Installation\r\n> `npm install --save @types/react`\r\n\r\n# Summary\r\nThis package contains type definitions for React (http://facebook.github.io/react/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react/v15\r\n\r\nAdditional Details\r\n * Last updated: Wed, 31 Jul 2019 17:06:41 GMT\r\n * Dependencies: none\r\n * Global values: React\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, AssureSign <http://www.assuresign.com>, Microsoft <https://microsoft.com>, John Reilly <https://github.com/johnnyreilly/>, Benoit Benezech <https://github.com/bbenezech>, Patricio Zavolinsky <https://github.com/pzavolinsky>, Digiguru <https://github.com/digiguru>, Eric Anderson <https://github.com/ericanderson>, Dovydas Navickas <https://github.com/DovydasNavickas>, and St\u00e9phane Goetz <https://github.com/onigoetz>."}, "npm": {"downloads": [{"from": "2019-08-04T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 149379}, {"from": "2019-07-29T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 3381902}, {"from": "2019-07-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 13547426}, {"from": "2019-05-07T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 39983042}, {"from": "2019-02-06T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 68573782}, {"from": "2018-08-05T00:00:00.000Z", "to": "2019-08-05T00:00:00.000Z", "count": 104908891}], "dependentsCount": 2419, "starsCount": 8}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 8, "downloadsCount": 13327680.666666666, "downloadsAcceleration": 64425.770966514436, "dependentsCount": 2419}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-react-78ocwcnpfho/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-17T15:00:44.098Z"}, "score": {"final": 0.36732080072537754, "detail": {"quality": 0.198969320144589, "popularity": 0.5456095371866692, "maintenance": 0.3333333333333333}}}}, {"rxjs": {"analyzedAt": "2020-05-16T04:33:51.156Z", "collected": {"metadata": {"name": "rxjs", "scope": "unscoped", "version": "6.5.5", "description": "Reactive Extensions for modern JavaScript", "keywords": ["Rx", "RxJS", "ReactiveX", "ReactiveExtensions", "Streams", "Observables", "Observable", "Stream", "ES6", "ES2015"], "date": "2020-04-03T01:34:30.900Z", "author": {"name": "Ben Lesh", "email": "ben@benlesh.com", "username": "blesh"}, "publisher": {"username": "blesh", "email": "ben@benlesh.com"}, "maintainers": [{"username": "blesh", "email": "ben@benlesh.com"}], "contributors": [{"name": "Ben Lesh", "email": "ben@benlesh.com"}, {"name": "Paul Taylor", "email": "paul.e.taylor@me.com"}, {"name": "Jeff Cross", "email": "crossj@google.com"}, {"name": "Matthew Podwysocki", "email": "matthewp@microsoft.com"}, {"name": "OJ Kwon", "email": "kwon.ohjoong@gmail.com"}, {"name": "Andre Staltz", "email": "andre@staltz.com"}], "repository": {"type": "git", "url": "git+https://github.com/reactivex/rxjs.git"}, "links": {"npm": "https://www.npmjs.com/package/rxjs", "homepage": "https://github.com/ReactiveX/RxJS", "repository": "https://github.com/reactivex/rxjs", "bugs": "https://github.com/ReactiveX/RxJS/issues"}, "license": "Apache-2.0", "dependencies": {"tslib": "^1.9.0"}, "devDependencies": {"@angular-devkit/build-optimizer": "0.4.6", "@angular-devkit/schematics": "^0.5.4", "@types/chai": "4.1.2", "@types/lodash": "4.14.102", "@types/mocha": "2.2.48", "@types/node": "9.4.5", "@types/sinon": "4.1.3", "@types/sinon-chai": "2.7.29", "@types/source-map": "^0.5.2", "babel-polyfill": "6.26.0", "benchmark": "2.1.0", "benchpress": "2.0.0-beta.1", "chai": "4.1.2", "check-side-effects": "0.0.20", "color": "3.0.0", "colors": "1.1.2", "commitizen": "2.9.6", "coveralls": "3.0.0", "cross-env": "5.1.3", "cz-conventional-changelog": "1.2.0", "danger": "1.1.0", "dependency-cruiser": "2.13.0", "doctoc": "1.3.0", "dtslint": "0.6.1", "escape-string-regexp": "1.0.5", "esdoc": "0.4.7", "eslint": "4.17.0", "eslint-plugin-jasmine": "^2.10.1", "fs-extra": "5.0.0", "get-folder-size": "1.0.1", "glob": "7.1.2", "gm": "1.23.1", "google-closure-compiler-js": "20170218.0.0", "gzip-size": "4.1.0", "http-server": "0.11.1", "husky": "0.14.3", "klaw-sync": "3.0.2", "lint-staged": "7.1.1", "lodash": "4.17.5", "markdown-doctest": "0.9.1", "minimist": "1.2.0", "mkdirp": "0.5.1", "mocha": "5.0.0", "mocha-in-sauce": "0.0.1", "npm-run-all": "4.1.2", "nyc": "11.4.1", "opn-cli": "3.1.0", "platform": "1.3.5", "promise": "8.0.1", "protractor": "3.1.1", "rollup": "0.66.6", "rollup-plugin-alias": "1.4.0", "rollup-plugin-inject": "2.0.0", "rollup-plugin-node-resolve": "2.0.0", "rx": "latest", "rxjs": "^5.5.7", "shx": "0.2.2", "sinon": "4.3.0", "sinon-chai": "2.14.0", "source-map-support": "0.5.3", "symbol-observable": "1.0.1", "systemjs": "^0.21.0", "ts-node": "6.1.0", "tsconfig-paths": "3.2.0", "tslint": "5.9.1", "tslint-etc": "1.2.6", "tslint-no-toplevel-property-access": "0.0.2", "tslint-no-unused-expression-chai": "0.0.3", "typescript": "^3.0.1", "validate-commit-msg": "2.14.0", "webpack": "1.13.1", "xmlhttprequest": "1.8.0"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 3}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 5}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 7}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# <img src=\"docs_app/assets/Rx_Logo_S.png\" alt=\"RxJS Logo\" width=\"86\" height=\"86\"> RxJS: Reactive Extensions For JavaScript\n\n[![CircleCI](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg)](https://circleci.com/gh/ReactiveX/rxjs/tree/6.x)\n[![npm version](https://badge.fury.io/js/%40reactivex%2Frxjs.svg)](http://badge.fury.io/js/%40reactivex%2Frxjs)\n[![Join the chat at https://gitter.im/Reactive-Extensions/RxJS](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/Reactive-Extensions/RxJS?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n# RxJS 6 Stable\n\n### MIGRATION AND RELEASE INFORMATION:\n\nFind out how to update to v6, **automatically update your TypeScript code**, and more!\n\n- [Current home is MIGRATION.md](./docs_app/content/guide/v6/migration.md)\n\n### FOR V 5.X PLEASE GO TO [THE 5.0 BRANCH](https://github.com/ReactiveX/rxjs/tree/5.x)\n\nReactive Extensions Library for JavaScript. This is a rewrite of [Reactive-Extensions/RxJS](https://github.com/Reactive-Extensions/RxJS) and is the latest production-ready version of RxJS. This rewrite is meant to have better performance, better modularity, better debuggable call stacks, while staying mostly backwards compatible, with some breaking changes that reduce the API surface.\n\n[Apache 2.0 License](LICENSE.txt)\n\n- [Code of Conduct](CODE_OF_CONDUCT.md)\n- [Contribution Guidelines](CONTRIBUTING.md)\n- [Maintainer Guidelines](doc_app/content/maintainer-guidelines.md)\n- [API Documentation](https://rxjs.dev/)\n\n## Versions In This Repository\n\n- [master](https://github.com/ReactiveX/rxjs/commits/master) - This is all of the current, unreleased work, which is against v6 of RxJS right now\n- [stable](https://github.com/ReactiveX/rxjs/commits/stable) - This is the branch for the latest version you'd get if you do `npm install rxjs`\n\n## Important\n\nBy contributing or commenting on issues in this repository, whether you've read them or not, you're agreeing to the [Contributor Code of Conduct](CODE_OF_CONDUCT.md). Much like traffic laws, ignorance doesn't grant you immunity.\n\n## Installation and Usage\n\n### ES6 via npm\n\n```sh\nnpm install rxjs\n```\n\nIt's recommended to pull in the Observable creation methods you need directly from `'rxjs'` as shown below with `range`. And you can pull in any operator you need from one spot, under `'rxjs/operators'`.\n\n```ts\nimport { range } from \"rxjs\";\nimport { map, filter } from \"rxjs/operators\";\n\nrange(1, 200)\n  .pipe(\n    filter(x => x % 2 === 1),\n    map(x => x + x)\n  )\n  .subscribe(x => console.log(x));\n```\n\nHere, we're using the built-in `pipe` method on Observables to combine operators. See [pipeable operators](https://github.com/ReactiveX/rxjs/blob/master/doc/pipeable-operators.md) for more information.\n\n### CommonJS via npm\n\nTo install this library for CommonJS (CJS) usage, use the following command:\n\n```sh\nnpm install rxjs\n```\n\n(Note: destructuring available in Node 8+)\n\n```js\nconst { range } = require('rxjs');\nconst { map, filter } = require('rxjs/operators');\n\nrange(1, 200).pipe(\n  filter(x => x % 2 === 1),\n  map(x => x + x)\n).subscribe(x => console.log(x));\n```\n\n### CDN\n\nFor CDN, you can use [unpkg](https://unpkg.com/):\n\nhttps://unpkg.com/rxjs/bundles/rxjs.umd.min.js\n\nThe global namespace for rxjs is `rxjs`:\n\n```js\nconst { range } = rxjs;\nconst { map, filter } = rxjs.operators;\n\nrange(1, 200)\n  .pipe(\n    filter(x => x % 2 === 1),\n    map(x => x + x)\n  )\n  .subscribe(x => console.log(x));\n```\n\n## Goals\n\n- Smaller overall bundles sizes\n- Provide better performance than preceding versions of RxJS\n- To model/follow the [Observable Spec Proposal](https://github.com/zenparsing/es-observable) to the observable\n- Provide more modular file structure in a variety of formats\n- Provide more debuggable call stacks than preceding versions of RxJS\n\n## Building/Testing\n\n- `npm run build_all` - builds everything\n- `npm test` - runs tests\n- `npm run test_no_cache` - run test with `ts-node` set to false\n\n## Performance Tests\n\nRun `npm run build_perf` or `npm run perf` to run the performance tests with `protractor`.\n\nRun `npm run perf_micro [operator]` to run micro performance test benchmarking operator.\n\n## Adding documentation\n\nWe appreciate all contributions to the documentation of any type. All of the information needed to get the docs app up and running locally as well as how to contribute can be found in the [documentation directory](./docs_app).\n\n## Generating PNG marble diagrams\n\nThe script `npm run tests2png` requires some native packages installed locally: `imagemagick`, `graphicsmagick`, and `ghostscript`.\n\nFor Mac OS X with [Homebrew](http://brew.sh/):\n\n- `brew install imagemagick`\n- `brew install graphicsmagick`\n- `brew install ghostscript`\n- You may need to install the Ghostscript fonts manually:\n  - Download the tarball from the [gs-fonts project](https://sourceforge.net/projects/gs-fonts)\n  - `mkdir -p /usr/local/share/ghostscript && tar zxvf /path/to/ghostscript-fonts.tar.gz -C /usr/local/share/ghostscript`\n\nFor Debian Linux:\n\n- `sudo add-apt-repository ppa:dhor/myway`\n- `apt-get install imagemagick`\n- `apt-get install graphicsmagick`\n- `apt-get install ghostscript`\n\nFor Windows and other Operating Systems, check the download instructions here:\n\n- http://imagemagick.org\n- http://www.graphicsmagick.org\n- http://www.ghostscript.com/"}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 3294188}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 19832453}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 84016110}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 236427704}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 413339660}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 712145976}], "dependentsCount": 13849, "starsCount": 102}, "github": {"homepage": "https://rxjs.dev", "starsCount": 21890, "forksCount": 2279, "subscribersCount": 476, "issues": {"count": 5424, "openCount": 385, "distribution": {"3600": 678, "10800": 322, "32400": 369, "97200": 610, "291600": 591, "874800": 789, "2624400": 619, "7873200": 504, "23619600": 437, "70858800": 429, "212576400": 76}, "isDisabled": false}, "contributors": [{"username": "benlesh", "commitsCount": 1114}, {"username": "kwonoj", "commitsCount": 446}, {"username": "staltz", "commitsCount": 311}, {"username": "cartant", "commitsCount": 130}, {"username": "jasonaden", "commitsCount": 119}, {"username": "trxcllnt", "commitsCount": 78}, {"username": "timdeschryver", "commitsCount": 71}, {"username": "luisgabriel", "commitsCount": 65}, {"username": "tetsuharuohzeki", "commitsCount": 58}, {"username": "mpodlasin", "commitsCount": 44}, {"username": "david-driscoll", "commitsCount": 41}, {"username": "dkosasih", "commitsCount": 39}, {"username": "jeffbcross", "commitsCount": 34}, {"username": "jayphelps", "commitsCount": 33}, {"username": "natmegs", "commitsCount": 28}, {"username": "pertrai1", "commitsCount": 27}, {"username": "justinwoo", "commitsCount": 23}, {"username": "martinsik", "commitsCount": 20}, {"username": "dzhavat", "commitsCount": 19}, {"username": "tanem", "commitsCount": 16}, {"username": "robwormald", "commitsCount": 15}, {"username": "IgorMinar", "commitsCount": 13}, {"username": "adrianomelo", "commitsCount": 13}, {"username": "jinroh", "commitsCount": 13}, {"username": "SangKa", "commitsCount": 12}, {"username": "rall", "commitsCount": 9}, {"username": "BioPhoton", "commitsCount": 8}, {"username": "darthtrevino", "commitsCount": 8}, {"username": "figueredo", "commitsCount": 8}, {"username": "gkalpak", "commitsCount": 8}, {"username": "Widdershin", "commitsCount": 7}, {"username": "feloy", "commitsCount": 7}, {"username": "imcotton", "commitsCount": 7}, {"username": "moniuch", "commitsCount": 7}, {"username": "Brooooooklyn", "commitsCount": 6}, {"username": "kolodny", "commitsCount": 6}, {"username": "niklas-wortmann", "commitsCount": 6}, {"username": "peaBerberian", "commitsCount": 6}, {"username": "robstoll", "commitsCount": 6}, {"username": "ajcrites", "commitsCount": 5}, {"username": "alexeagle", "commitsCount": 5}, {"username": "bmeurer", "commitsCount": 5}, {"username": "jakovljevic-mladen", "commitsCount": 5}, {"username": "mtaran-google", "commitsCount": 5}, {"username": "rob3c", "commitsCount": 5}, {"username": "waseemahmad31", "commitsCount": 5}, {"username": "alan-agius4", "commitsCount": 4}, {"username": "bafolts", "commitsCount": 4}, {"username": "bbonnet", "commitsCount": 4}, {"username": "edbzn", "commitsCount": 4}, {"username": "felixfbecker", "commitsCount": 4}, {"username": "luillyfe", "commitsCount": 4}, {"username": "masaeedu", "commitsCount": 4}, {"username": "ngfelixl", "commitsCount": 4}, {"username": "oscarlorentzon", "commitsCount": 4}, {"username": "rgbkrk", "commitsCount": 4}, {"username": "vsavkin", "commitsCount": 4}, {"username": "xp44mm", "commitsCount": 4}, {"username": "OliverJAsh", "commitsCount": 3}, {"username": "PDavid", "commitsCount": 3}, {"username": "PatrickJS", "commitsCount": 3}, {"username": "Xapuu", "commitsCount": 3}, {"username": "ZackDeRose", "commitsCount": 3}, {"username": "alex-wilmer", "commitsCount": 3}, {"username": "bowenni", "commitsCount": 3}, {"username": "chrisprice", "commitsCount": 3}, {"username": "christianalfoni", "commitsCount": 3}, {"username": "claudiordgz", "commitsCount": 3}, {"username": "gluck", "commitsCount": 3}, {"username": "hmil", "commitsCount": 3}, {"username": "ladyleet", "commitsCount": 3}, {"username": "leggechr", "commitsCount": 3}, {"username": "mattpodwysocki", "commitsCount": 3}, {"username": "mattyao1984", "commitsCount": 3}, {"username": "mprobst", "commitsCount": 3}, {"username": "nathan-lapinski", "commitsCount": 3}, {"username": "nikagar4", "commitsCount": 3}, {"username": "oboukli", "commitsCount": 3}, {"username": "rarmatei", "commitsCount": 3}, {"username": "sarbbottam", "commitsCount": 3}, {"username": "Daschyppoo", "commitsCount": 2}, {"username": "Eddie-CooRo", "commitsCount": 2}, {"username": "Spetastian", "commitsCount": 2}, {"username": "abraham", "commitsCount": 2}, {"username": "arpadvas", "commitsCount": 2}, {"username": "artem-galas", "commitsCount": 2}, {"username": "claasahl", "commitsCount": 2}, {"username": "evertbouw", "commitsCount": 2}, {"username": "filipesilva", "commitsCount": 2}, {"username": "gregmagolan", "commitsCount": 2}, {"username": "kirjahylly", "commitsCount": 2}, {"username": "manekinekko", "commitsCount": 2}, {"username": "mazulatas", "commitsCount": 2}, {"username": "reod", "commitsCount": 2}, {"username": "shairez", "commitsCount": 2}, {"username": "thorn0", "commitsCount": 2}, {"username": "tomwhite007", "commitsCount": 2}, {"username": "willheslam", "commitsCount": 2}, {"username": "ravinsinghd", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 6}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 51}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 130}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 257}], "statuses": [{"context": "ci/circleci: typescriptLatestSupported", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: dtslint", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: build", "state": "success"}]}, "source": {"files": {"readmeSize": 3664, "testsSize": 2302068, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg?style=svg", "service": "https://circleci.com/gh/ReactiveX/rxjs/tree/6.x.svg", "shields": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.svg", "content": "https://img.shields.io/circleci/project/github/ReactiveX/rxjs/6.x.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "6.x"}}}], "linters": ["eslint", "tslint"], "outdatedDependencies": {"tslib": {"required": "^1.9.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 24846, "downloadsCount": 78809234.66666667, "downloadsAcceleration": 298674.67823439883, "dependentsCount": 13849}, "maintenance": {"releasesFrequency": 0.932277397260274, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4103505752002883}}, "score": {"final": 0.9485314831005663, "detail": {"quality": 0.9559677757159513, "popularity": 0.9211166577098093, "maintenance": 0.9695723433924219}}}}, {"babel-runtime": {"analyzedAt": "2020-06-06T23:47:40.408Z", "collected": {"metadata": {"name": "babel-runtime", "scope": "unscoped", "version": "6.26.0", "description": "babel selfContained runtime", "date": "2017-08-16T15:54:10.021Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-runtime", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"core-js": "^2.4.0", "regenerator-runtime": "^0.11.0"}, "devDependencies": {"babel-helpers": "^6.22.0", "babel-plugin-transform-runtime": "^6.23.0"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-runtime"}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1612918}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 9511604}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 41400954}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 124645267}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 235357227}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 463796916}], "dependentsCount": 10900, "starsCount": 23}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36730, "forksCount": 4310, "subscribersCount": 866, "issues": {"count": 11608, "openCount": 778, "distribution": {"3600": 2462, "10800": 917, "32400": 1067, "97200": 1239, "291600": 1055, "874800": 1002, "2624400": 851, "7873200": 809, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 13}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 59}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 218}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 410}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324664, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"regenerator-runtime": {"required": "^0.11.0", "stable": "0.13.5", "latest": "0.13.5"}, "core-js": {"required": "^2.4.0", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 42028, "downloadsCount": 41548422.333333336, "downloadsAcceleration": 36554.74640410958, "dependentsCount": 10900}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24040725297032078}}, "score": {"final": 0.7546884322368791, "detail": {"quality": 0.8273397204742041, "popularity": 0.8776840192238593, "maintenance": 0.5694203124750489}}}}, {"glob": {"analyzedAt": "2020-06-07T17:12:37.480Z", "collected": {"metadata": {"name": "glob", "scope": "unscoped", "version": "7.1.6", "description": "a little globber", "date": "2019-11-06T22:07:44.189Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/node-glob.git"}, "links": {"npm": "https://www.npmjs.com/package/glob", "homepage": "https://github.com/isaacs/node-glob#readme", "repository": "https://github.com/isaacs/node-glob", "bugs": "https://github.com/isaacs/node-glob/issues"}, "license": "ISC", "dependencies": {"fs.realpath": "^1.0.0", "inflight": "^1.0.4", "inherits": "2", "minimatch": "^3.0.4", "once": "^1.3.0", "path-is-absolute": "^1.0.0"}, "devDependencies": {"mkdirp": "0", "rimraf": "^2.2.8", "tap": "^12.0.1", "tick": "0.0.6"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Glob\n\nMatch files using the patterns the shell uses, like stars and stuff.\n\n[![Build Status](https://travis-ci.org/isaacs/node-glob.svg?branch=master)](https://travis-ci.org/isaacs/node-glob/) [![Build Status](https://ci.appveyor.com/api/projects/status/kd7f3yftf7unxlsx?svg=true)](https://ci.appveyor.com/project/isaacs/node-glob) [![Coverage Status](https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github)](https://coveralls.io/github/isaacs/node-glob?branch=master)\n\nThis is a glob implementation in JavaScript.  It uses the `minimatch`\nlibrary to do its matching.\n\n![](logo/glob.png)\n\n## Usage\n\nInstall with npm\n\n```\nnpm i glob\n```\n\n```javascript\nvar glob = require(\"glob\")\n\n// options is optional\nglob(\"**/*.js\", options, function (er, files) {\n  // files is an array of filenames.\n  // If the `nonull` option is set, and nothing\n  // was found, then files is [\"**/*.js\"]\n  // er is an error object or null.\n})\n```\n\n## Glob Primer\n\n\"Globs\" are the patterns you type when you do stuff like `ls *.js` on\nthe command line, or put `build/*` in a `.gitignore` file.\n\nBefore parsing the path part patterns, braced sections are expanded\ninto a set.  Braced sections start with `{` and end with `}`, with any\nnumber of comma-delimited sections within.  Braced sections may contain\nslash characters, so `a{/b/c,bcd}` would expand into `a/b/c` and `abcd`.\n\nThe following characters have special magic meaning when used in a\npath portion:\n\n* `*` Matches 0 or more characters in a single path portion\n* `?` Matches 1 character\n* `[...]` Matches a range of characters, similar to a RegExp range.\n  If the first character of the range is `!` or `^` then it matches\n  any character not in the range.\n* `!(pattern|pattern|pattern)` Matches anything that does not match\n  any of the patterns provided.\n* `?(pattern|pattern|pattern)` Matches zero or one occurrence of the\n  patterns provided.\n* `+(pattern|pattern|pattern)` Matches one or more occurrences of the\n  patterns provided.\n* `*(a|b|c)` Matches zero or more occurrences of the patterns provided\n* `@(pattern|pat*|pat?erN)` Matches exactly one of the patterns\n  provided\n* `**` If a \"globstar\" is alone in a path portion, then it matches\n  zero or more directories and subdirectories searching for matches.\n  It does not crawl symlinked directories.\n\n### Dots\n\nIf a file or directory path portion has a `.` as the first character,\nthen it will not match any glob pattern unless that pattern's\ncorresponding path part also has a `.` as its first character.\n\nFor example, the pattern `a/.*/c` would match the file at `a/.b/c`.\nHowever the pattern `a/*/c` would not, because `*` does not start with\na dot character.\n\nYou can make glob treat dots as normal characters by setting\n`dot:true` in the options.\n\n### Basename Matching\n\nIf you set `matchBase:true` in the options, and the pattern has no\nslashes in it, then it will seek for any file anywhere in the tree\nwith a matching basename.  For example, `*.js` would match\n`test/simple/basic.js`.\n\n### Empty Sets\n\nIf no matching files are found, then an empty array is returned.  This\ndiffers from the shell, where the pattern itself is returned.  For\nexample:\n\n    $ echo a*s*d*f\n    a*s*d*f\n\nTo get the bash-style behavior, set the `nonull:true` in the options.\n\n### See Also:\n\n* `man sh`\n* `man bash` (Search for \"Pattern Matching\")\n* `man 3 fnmatch`\n* `man 5 gitignore`\n* [minimatch documentation](https://github.com/isaacs/minimatch)\n\n## glob.hasMagic(pattern, [options])\n\nReturns `true` if there are any special characters in the pattern, and\n`false` otherwise.\n\nNote that the options affect the results.  If `noext:true` is set in\nthe options object, then `+(a|b)` will not be considered a magic\npattern.  If the pattern has a brace expansion, like `a/{b/c,x/y}`\nthen that is considered magical, unless `nobrace:true` is set in the\noptions.\n\n## glob(pattern, [options], cb)\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* `cb` `{Function}`\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nPerform an asynchronous glob search.\n\n## glob.sync(pattern, [options])\n\n* `pattern` `{String}` Pattern to be matched\n* `options` `{Object}`\n* return: `{Array<String>}` filenames found matching the pattern\n\nPerform a synchronous glob search.\n\n## Class: glob.Glob\n\nCreate a Glob object by instantiating the `glob.Glob` class.\n\n```javascript\nvar Glob = require(\"glob\").Glob\nvar mg = new Glob(pattern, options, cb)\n```\n\nIt's an EventEmitter, and starts walking the filesystem to find matches\nimmediately.\n\n### new glob.Glob(pattern, [options], [cb])\n\n* `pattern` `{String}` pattern to search for\n* `options` `{Object}`\n* `cb` `{Function}` Called when an error occurs, or matches are found\n  * `err` `{Error | null}`\n  * `matches` `{Array<String>}` filenames found matching the pattern\n\nNote that if the `sync` flag is set in the options, then matches will\nbe immediately available on the `g.found` member.\n\n### Properties\n\n* `minimatch` The minimatch object that the glob uses.\n* `options` The options object passed in.\n* `aborted` Boolean which is set to true when calling `abort()`.  There\n  is no way at this time to continue a glob search after aborting, but\n  you can re-use the statCache to avoid having to duplicate syscalls.\n* `cache` Convenience object.  Each field has the following possible\n  values:\n  * `false` - Path does not exist\n  * `true` - Path exists\n  * `'FILE'` - Path exists, and is not a directory\n  * `'DIR'` - Path exists, and is a directory\n  * `[file, entries, ...]` - Path exists, is a directory, and the\n    array value is the results of `fs.readdir`\n* `statCache` Cache of `fs.stat` results, to prevent statting the same\n  path multiple times.\n* `symlinks` A record of which paths are symbolic links, which is\n  relevant in resolving `**` patterns.\n* `realpathCache` An optional object which is passed to `fs.realpath`\n  to minimize unnecessary syscalls.  It is stored on the instantiated\n  Glob object, and may be re-used.\n\n### Events\n\n* `end` When the matching is finished, this is emitted with all the\n  matches found.  If the `nonull` option is set, and no match was found,\n  then the `matches` list contains the original pattern.  The matches\n  are sorted, unless the `nosort` flag is set.\n* `match` Every time a match is found, this is emitted with the specific\n  thing that matched. It is not deduplicated or resolved to a realpath.\n* `error` Emitted when an unexpected error is encountered, or whenever\n  any fs error occurs if `options.strict` is set.\n* `abort` When `abort()` is called, this event is raised.\n\n### Methods\n\n* `pause` Temporarily stop the search\n* `resume` Resume the search\n* `abort` Stop the search forever\n\n### Options\n\nAll the options that can be passed to Minimatch can also be passed to\nGlob to change pattern matching behavior.  Also, some have been added,\nor have glob-specific ramifications.\n\nAll options are false by default, unless otherwise noted.\n\nAll options are added to the Glob object, as well.\n\nIf you are running many `glob` operations, you can pass a Glob object\nas the `options` argument to a subsequent operation to shortcut some\n`stat` and `readdir` calls.  At the very least, you may pass in shared\n`symlinks`, `statCache`, `realpathCache`, and `cache` options, so that\nparallel glob operations will be sped up by sharing information about\nthe filesystem.\n\n* `cwd` The current working directory in which to search.  Defaults\n  to `process.cwd()`.\n* `root` The place where patterns starting with `/` will be mounted\n  onto.  Defaults to `path.resolve(options.cwd, \"/\")` (`/` on Unix\n  systems, and `C:\\` or some such on Windows.)\n* `dot` Include `.dot` files in normal matches and `globstar` matches.\n  Note that an explicit dot in a portion of the pattern will always\n  match dot files.\n* `nomount` By default, a pattern starting with a forward-slash will be\n  \"mounted\" onto the root setting, so that a valid filesystem path is\n  returned.  Set this flag to disable that behavior.\n* `mark` Add a `/` character to directory matches.  Note that this\n  requires additional stat calls.\n* `nosort` Don't sort the results.\n* `stat` Set to true to stat *all* results.  This reduces performance\n  somewhat, and is completely unnecessary, unless `readdir` is presumed\n  to be an untrustworthy indicator of file existence.\n* `silent` When an unusual error is encountered when attempting to\n  read a directory, a warning will be printed to stderr.  Set the\n  `silent` option to true to suppress these warnings.\n* `strict` When an unusual error is encountered when attempting to\n  read a directory, the process will just continue on in search of\n  other matches.  Set the `strict` option to raise an error in these\n  cases.\n* `cache` See `cache` property above.  Pass in a previously generated\n  cache object to save some fs calls.\n* `statCache` A cache of results of filesystem information, to prevent\n  unnecessary stat calls.  While it should not normally be necessary\n  to set this, you may pass the statCache from one glob() call to the\n  options object of another, if you know that the filesystem will not\n  change between calls.  (See \"Race Conditions\" below.)\n* `symlinks` A cache of known symbolic links.  You may pass in a\n  previously generated `symlinks` object to save `lstat` calls when\n  resolving `**` matches.\n* `sync` DEPRECATED: use `glob.sync(pattern, opts)` instead.\n* `nounique` In some cases, brace-expanded patterns can result in the\n  same file showing up multiple times in the result set.  By default,\n  this implementation prevents duplicates in the result set.  Set this\n  flag to disable that behavior.\n* `nonull` Set to never return an empty set, instead returning a set\n  containing the pattern itself.  This is the default in glob(3).\n* `debug` Set to enable debug logging in minimatch and glob.\n* `nobrace` Do not expand `{a,b}` and `{1..3}` brace sets.\n* `noglobstar` Do not match `**` against multiple filenames.  (Ie,\n  treat it as a normal `*` instead.)\n* `noext` Do not match `+(a|b)` \"extglob\" patterns.\n* `nocase` Perform a case-insensitive match.  Note: on\n  case-insensitive filesystems, non-magic patterns will match by\n  default, since `stat` and `readdir` will not raise errors.\n* `matchBase` Perform a basename-only match if the pattern does not\n  contain any slash characters.  That is, `*.js` would be treated as\n  equivalent to `**/*.js`, matching all js files in all directories.\n* `nodir` Do not match directories, only files.  (Note: to match\n  *only* directories, simply put a `/` at the end of the pattern.)\n* `ignore` Add a pattern or an array of glob patterns to exclude matches.\n  Note: `ignore` patterns are *always* in `dot:true` mode, regardless\n  of any other settings.\n* `follow` Follow symlinked directories when expanding `**` patterns.\n  Note that this can result in a lot of duplicate references in the\n  presence of cyclic links.\n* `realpath` Set to true to call `fs.realpath` on all of the results.\n  In the case of a symlink that cannot be resolved, the full absolute\n  path to the matched entry is returned (though it will usually be a\n  broken symlink)\n* `absolute` Set to true to always receive absolute paths for matched\n  files.  Unlike `realpath`, this also affects the values returned in\n  the `match` event.\n\n## Comparisons to other fnmatch/glob implementations\n\nWhile strict compliance with the existing standards is a worthwhile\ngoal, some discrepancies exist between node-glob and other\nimplementations, and are intentional.\n\nThe double-star character `**` is supported by default, unless the\n`noglobstar` flag is set.  This is supported in the manner of bsdglob\nand bash 4.3, where `**` only has special significance if it is the only\nthing in a path part.  That is, `a/**/b` will match `a/x/y/b`, but\n`a/**b` will not.\n\nNote that symlinked directories are not crawled as part of a `**`,\nthough their contents may match against subsequent portions of the\npattern.  This prevents infinite loops and duplicates and the like.\n\nIf an escaped pattern has no matches, and the `nonull` flag is set,\nthen glob returns the pattern as-provided, rather than\ninterpreting the character escapes.  For example,\n`glob.match([], \"\\\\*a\\\\?\")` will return `\"\\\\*a\\\\?\"` rather than\n`\"*a?\"`.  This is akin to setting the `nullglob` option in bash, except\nthat it does not resolve escaped pattern characters.\n\nIf brace expansion is not disabled, then it is performed before any\nother interpretation of the glob pattern.  Thus, a pattern like\n`+(a|{b),c)}`, which would not be valid in bash or zsh, is expanded\n**first** into the set of `+(a|b)` and `+(a|c)`, and those patterns are\nchecked for validity.  Since those two are valid, matching proceeds.\n\n### Comments and Negation\n\nPreviously, this module let you mark a pattern as a \"comment\" if it\nstarted with a `#` character, or a \"negated\" pattern if it started\nwith a `!` character.\n\nThese options were deprecated in version 5, and removed in version 6.\n\nTo specify things that should not match, use the `ignore` option.\n\n## Windows\n\n**Please only use forward-slashes in glob expressions.**\n\nThough windows uses either `/` or `\\` as its path separator, only `/`\ncharacters are used by this glob implementation.  You must use\nforward-slashes **only** in glob expressions.  Back-slashes will always\nbe interpreted as escape characters, not path separators.\n\nResults from absolute patterns such as `/foo/*` are mounted onto the\nroot setting using `path.join`.  On windows, this will by default result\nin `/foo/*` matching `C:\\foo\\bar.txt`.\n\n## Race Conditions\n\nGlob searching, by its very nature, is susceptible to race conditions,\nsince it relies on directory walking and such.\n\nAs a result, it is possible that a file that exists when glob looks for\nit may have been deleted or modified by the time it returns the result.\n\nAs part of its internal implementation, this program caches all stat\nand readdir calls that it makes, in order to cut down on system\noverhead.  However, this also makes it even more susceptible to races,\nespecially if the cache or statCache objects are reused between glob\ncalls.\n\nUsers are thus advised not to use a glob result as a guarantee of\nfilesystem state in the face of rapid changes.  For the vast majority\nof operations, this is never a problem.\n\n## Glob Logo\nGlob's logo was created by [Tanya Brassie](http://tanyabrassie.com/). Logo files can be found [here](https://github.com/isaacs/node-glob/tree/master/logo).\n\nThe logo is licensed under a [Creative Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).\n\n## Contributing\n\nAny change to behavior (including bugfixes) must come with a test.\n\nPatches that fail tests or reduce performance will be rejected.\n\n```\n# to run tests\nnpm test\n\n# to re-generate test fixtures\nnpm run test-regen\n\n# to benchmark against bash/zsh\nnpm run bench\n\n# to profile javascript\nnpm run prof\n```\n\n![](oh-my-glob.gif)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1860587}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 34265308}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 143561429}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 445916366}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 824173826}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1540269573}], "dependentsCount": 15328, "starsCount": 352}, "github": {"starsCount": 6406, "forksCount": 418, "subscribersCount": 102, "issues": {"count": 413, "openCount": 106, "distribution": {"3600": 32, "10800": 25, "32400": 36, "97200": 28, "291600": 24, "874800": 30, "2624400": 29, "7873200": 45, "23619600": 44, "70858800": 42, "212576400": 78}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 403}, {"username": "tanyabrassie", "commitsCount": 3}, {"username": "bcardarella", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "phated", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "wdavidw", "commitsCount": 2}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "amelon-bflo", "commitsCount": 1}, {"username": "basarat", "commitsCount": 1}, {"username": "benhutchins", "commitsCount": 1}, {"username": "contra", "commitsCount": 1}, {"username": "denis-sokolov", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "jakobmattsson", "commitsCount": 1}, {"username": "jimt", "commitsCount": 1}, {"username": "jldec", "commitsCount": 1}, {"username": "marclipovsky", "commitsCount": 1}, {"username": "maxg", "commitsCount": 1}, {"username": "mikeobrien", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "peterbraden", "commitsCount": 1}, {"username": "vegetableman", "commitsCount": 1}, {"username": "vkichline", "commitsCount": 1}, {"username": "zakhenry", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 15002, "testsSize": 52183, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/node-glob.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/node-glob.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/node-glob/master.svg", "content": "https://img.shields.io/travis/isaacs/node-glob/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/isaacs/node-glob/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/isaacs/node-glob/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/isaacs/node-glob/master.svg", "content": "https://img.shields.io/coveralls/isaacs/node-glob/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "coverage": 0.94, "outdatedDependencies": {"path-is-absolute": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.866, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 7307, "downloadsCount": 148638788.66666666, "downloadsAcceleration": 231072.7919330292, "dependentsCount": 15328}, "maintenance": {"releasesFrequency": 0.43458904109589047, "commitsFrequency": 0.06904109589041096, "openIssues": 0.9055690072639225, "issuesDistribution": 0}}, "score": {"final": 0.7808625012923567, "detail": {"quality": 0.9516565840582301, "popularity": 0.8809562064572041, "maintenance": 0.5343738680424748}}}}, {"browserify": {"analyzedAt": "2020-05-12T02:40:54.505Z", "collected": {"metadata": {"name": "browserify", "scope": "unscoped", "version": "16.5.1", "description": "browser-side require() the node way", "keywords": ["browser", "require", "commonjs", "commonj-esque", "bundle", "npm", "javascript"], "date": "2020-03-30T10:23:13.908Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "goto-bus-stop", "email": "renee@kooi.me"}, "maintainers": [{"username": "ahdinosaur", "email": "michael.williams@enspiral.com"}, {"username": "anandthakker", "email": "vestibule@anandthakker.net"}, {"username": "ashaffer88", "email": "darawk@gmail.com"}, {"username": "balupton", "email": "b@lupton.cc"}, {"username": "bpostlethwaite", "email": "post.ben.here@gmail.com"}, {"username": "bret", "email": "bcomnes@gmail.com"}, {"username": "cwmma", "email": "calvin.metcalf@gmail.com"}, {"username": "defunctzombie", "email": "shtylman@gmail.com"}, {"username": "domenic", "email": "d@domenic.me"}, {"username": "dominictarr", "email": "dominic.tarr@gmail.com"}, {"username": "elnounch", "email": "contact@elnounch.net"}, {"username": "emilbayes", "email": "github@tixz.dk"}, {"username": "feross", "email": "feross@feross.org"}, {"username": "forbeslindesay", "email": "forbes@lindesay.co.uk"}, {"username": "fpereira1", "email": "pereira.filype@gmail.com"}, {"username": "garann", "email": "garann@gmail.com"}, {"username": "gkatsev", "email": "me@gkatsev.com"}, {"username": "goto-bus-stop", "email": "renee@kooi.me"}, {"username": "hughsk", "email": "hughskennedy@gmail.com"}, {"username": "indutny", "email": "fedor@indutny.com"}, {"username": "jmm", "email": "npm-public@jessemccarthy.net"}, {"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "jryans", "email": "jryans@gmail.com"}, {"username": "leichtgewicht", "email": "martin.heidegger@gmail.com"}, {"username": "lukechilds", "email": "lukechilds123@gmail.com"}, {"username": "mafintosh", "email": "mathiasbuus@gmail.com"}, {"username": "mattdesl", "email": "dave.des@gmail.com"}, {"username": "maxogden", "email": "max@maxogden.com"}, {"username": "mellowmelon", "email": "palmermebane@gmail.com"}, {"username": "parshap", "email": "parshap+npm@gmail.com"}, {"username": "pkrumins", "email": "peteris.krumins@gmail.com"}, {"username": "sethvincent", "email": "sethvincent@gmail.com"}, {"username": "stevemao", "email": "maochenyan@gmail.com"}, {"username": "substack", "email": "substack@gmail.com"}, {"username": "tehshrike", "email": "me@JoshDuff.com"}, {"username": "terinjokes", "email": "terinjokes@gmail.com"}, {"username": "thlorenz", "email": "thlorenz@gmx.de"}, {"username": "ungoldman", "email": "ungoldman@gmail.com"}, {"username": "yerkopalma", "email": "yerko.palma@usach.cl"}, {"username": "yoshuawuyts", "email": "yoshuawuyts@gmail.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/browserify/browserify.git"}, "links": {"npm": "https://www.npmjs.com/package/browserify", "homepage": "https://github.com/browserify/browserify#readme", "repository": "https://github.com/browserify/browserify", "bugs": "https://github.com/browserify/browserify/issues"}, "license": "MIT", "dependencies": {"JSONStream": "^1.0.3", "assert": "^1.4.0", "browser-pack": "^6.0.1", "browser-resolve": "^1.11.0", "browserify-zlib": "~0.2.0", "buffer": "~5.2.1", "cached-path-relative": "^1.0.0", "concat-stream": "^1.6.0", "console-browserify": "^1.1.0", "constants-browserify": "~1.0.0", "crypto-browserify": "^3.0.0", "defined": "^1.0.0", "deps-sort": "^2.0.0", "domain-browser": "^1.2.0", "duplexer2": "~0.1.2", "events": "^2.0.0", "glob": "^7.1.0", "has": "^1.0.0", "htmlescape": "^1.1.0", "https-browserify": "^1.0.0", "inherits": "~2.0.1", "insert-module-globals": "^7.0.0", "labeled-stream-splicer": "^2.0.0", "mkdirp-classic": "^0.5.2", "module-deps": "^6.0.0", "os-browserify": "~0.3.0", "parents": "^1.0.1", "path-browserify": "~0.0.0", "process": "~0.11.0", "punycode": "^1.3.2", "querystring-es3": "~0.2.0", "read-only-stream": "^2.0.0", "readable-stream": "^2.0.2", "resolve": "^1.1.4", "shasum": "^1.0.0", "shell-quote": "^1.6.1", "stream-browserify": "^2.0.0", "stream-http": "^3.0.0", "string_decoder": "^1.1.1", "subarg": "^1.0.0", "syntax-error": "^1.1.1", "through2": "^2.0.0", "timers-browserify": "^1.0.1", "tty-browserify": "0.0.1", "url": "~0.11.0", "util": "~0.10.1", "vm-browserify": "^1.0.0", "xtend": "^4.0.0"}, "devDependencies": {"backbone": "~0.9.2", "browser-unpack": "^1.1.1", "coffee-script": "~1.10.0", "coffeeify": "~1.1.0", "has-object-spread": "^1.0.0", "has-template-literals": "^1.0.0", "isstream": "^0.1.2", "make-generator-function": "^1.1.0", "semver": "^5.5.0", "seq": "0.3.5", "tap": "^10.7.2", "temp": "=0.8.3", "through": "^2.3.4"}, "releases": [{"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 2}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 2}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 5}, {"from": "2018-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# browserify\n\n`require('modules')` in the browser\n\nUse a [node](http://nodejs.org)-style `require()` to organize your browser code\nand load modules installed by [npm](https://www.npmjs.com).\n\nbrowserify will recursively analyze all the `require()` calls in your app in\norder to build a bundle you can serve up to the browser in a single `<script>`\ntag.\n\n[![build status](https://img.shields.io/travis/browserify/browserify/master.svg)](https://travis-ci.org/browserify/browserify)\n\n![browserify!](./assets/logo.png)\n\n# getting started\n\nIf you're new to browserify, check out the\n[browserify handbook](https://github.com/browserify/browserify-handbook)\nand the resources on [browserify.org](http://browserify.org/).\n\n# example\n\nWhip up a file, `main.js` with some `require()`s in it. You can use relative\npaths like `'./foo.js'` and `'../lib/bar.js'` or module paths like `'gamma'`\nthat will search `node_modules/` using\n[node's module lookup algorithm](https://github.com/browserify/resolve).\n\n``` js\nvar foo = require('./foo.js');\nvar bar = require('../lib/bar.js');\nvar gamma = require('gamma');\n\nvar elem = document.getElementById('result');\nvar x = foo(100) + bar('baz');\nelem.textContent = gamma(x);\n```\n\nExport functionality by assigning onto `module.exports` or `exports`:\n\n``` js\nmodule.exports = function (n) { return n * 111 }\n```\n\nNow just use the `browserify` command to build a bundle starting at `main.js`:\n\n```\n$ browserify main.js > bundle.js\n```\n\nAll of the modules that `main.js` needs are included in the `bundle.js` from a\nrecursive walk of the `require()` graph using\n[required](https://github.com/defunctzombie/node-required).\n\nTo use this bundle, just toss a `<script src=\"bundle.js\"></script>` into your\nhtml!\n\n# install\n\nWith [npm](https://www.npmjs.com/) do:\n\n```\nnpm install -g browserify\n```\n\n# usage\n\n```\nUsage: browserify [entry files] {OPTIONS}\n\nStandard Options:\n\n    --outfile, -o  Write the browserify bundle to this file.\n                   If unspecified, browserify prints to stdout.\n\n    --require, -r  A module name or file to bundle.require()\n                   Optionally use a colon separator to set the target.\n\n      --entry, -e  An entry point of your app\n\n     --ignore, -i  Replace a file with an empty stub. Files can be globs.\n\n    --exclude, -u  Omit a file from the output bundle. Files can be globs.\n\n   --external, -x  Reference a file from another bundle. Files can be globs.\n\n  --transform, -t  Use a transform module on top-level files.\n\n    --command, -c  Use a transform command on top-level files.\n\n  --standalone -s  Generate a UMD bundle for the supplied export name.\n                   This bundle works with other module systems and sets the name\n                   given as a window global if no module system is found.\n\n       --debug -d  Enable source maps that allow you to debug your files\n                   separately.\n\n       --help, -h  Show this message\n\nFor advanced options, type `browserify --help advanced`.\n\nSpecify a parameter.\n```\n\n```\nAdvanced Options:\n\n  --insert-globals, --ig, --fast    [default: false]\n\n    Skip detection and always insert definitions for process, global,\n    __filename, and __dirname.\n\n    benefit: faster builds\n    cost: extra bytes\n\n  --insert-global-vars, --igv\n\n    Comma-separated list of global variables to detect and define.\n    Default: __filename,__dirname,process,Buffer,global\n\n  --detect-globals, --dg            [default: true]\n\n    Detect the presence of process, global, __filename, and __dirname and define\n    these values when present.\n\n    benefit: npm modules more likely to work\n    cost: slower builds\n\n  --ignore-missing, --im            [default: false]\n\n    Ignore `require()` statements that don't resolve to anything.\n\n  --noparse=FILE\n\n    Don't parse FILE at all. This will make bundling much, much faster for giant\n    libs like jquery or threejs.\n\n  --no-builtins\n\n    Turn off builtins. This is handy when you want to run a bundle in node which\n    provides the core builtins.\n\n  --no-commondir\n\n    Turn off setting a commondir. This is useful if you want to preserve the\n    original paths that a bundle was generated with.\n\n  --no-bundle-external\n\n    Turn off bundling of all external modules. This is useful if you only want\n    to bundle your local files.\n\n  --bare\n\n    Alias for both --no-builtins, --no-commondir, and sets --insert-global-vars\n    to just \"__filename,__dirname\". This is handy if you want to run bundles in\n    node.\n\n  --no-browser-field, --no-bf\n\n    Turn off package.json browser field resolution. This is also handy if you\n    need to run a bundle in node.\n\n  --transform-key\n\n    Instead of the default package.json#browserify#transform field to list\n    all transforms to apply when running browserify, a custom field, like, e.g.\n    package.json#browserify#production or package.json#browserify#staging\n    can be used, by for example running:\n    * `browserify index.js --transform-key=production > bundle.js`\n    * `browserify index.js --transform-key=staging > bundle.js`\n\n  --node\n\n    Alias for --bare and --no-browser-field.\n\n  --full-paths\n\n    Turn off converting module ids into numerical indexes. This is useful for\n    preserving the original paths that a bundle was generated with.\n\n  --deps\n\n    Instead of standard bundle output, print the dependency array generated by\n    module-deps.\n\n  --no-dedupe\n\n    Turn off deduping.\n\n  --list\n\n    Print each file in the dependency graph. Useful for makefiles.\n\n  --extension=EXTENSION\n\n    Consider files with specified EXTENSION as modules, this option can used\n    multiple times.\n\n  --global-transform=MODULE, -g MODULE\n\n    Use a transform module on all files after any ordinary transforms have run.\n\n  --ignore-transform=MODULE, -it MODULE\n\n    Do not run certain transformations, even if specified elsewhere.\n\n  --plugin=MODULE, -p MODULE\n\n    Register MODULE as a plugin.\n\nPassing arguments to transforms and plugins:\n\n  For -t, -g, and -p, you may use subarg syntax to pass options to the\n  transforms or plugin function as the second parameter. For example:\n\n    -t [ foo -x 3 --beep ]\n\n  will call the `foo` transform for each applicable file by calling:\n\n    foo(file, { x: 3, beep: true })\n\n```\n\n# compatibility\n\nMany [npm](https://www.npmjs.com/) modules that don't do IO will just work after being\nbrowserified. Others take more work.\n\nMany node built-in modules have been wrapped to work in the browser, but only\nwhen you explicitly `require()` or use their functionality.\n\nWhen you `require()` any of these modules, you will get a browser-specific shim:\n\n* [assert](https://www.npmjs.com/package/assert)\n* [buffer](https://www.npmjs.com/package/buffer)\n* [console](https://www.npmjs.com/package/console-browserify)\n* [constants](https://www.npmjs.com/package/constants-browserify)\n* [crypto](https://www.npmjs.com/package/crypto-browserify)\n* [domain](https://www.npmjs.com/package/domain-browser)\n* [events](https://www.npmjs.com/package/events)\n* [http](https://www.npmjs.com/package/stream-http)\n* [https](https://www.npmjs.com/package/https-browserify)\n* [os](https://www.npmjs.com/package/os-browserify)\n* [path](https://www.npmjs.com/package/path-browserify)\n* [punycode](https://www.npmjs.com/package/punycode)\n* [querystring](https://www.npmjs.com/package/querystring-es3)\n* [stream](https://www.npmjs.com/package/stream-browserify)\n* [string_decoder](https://www.npmjs.com/package/string_decoder)\n* [timers](https://www.npmjs.com/package/timers-browserify)\n* [tty](https://www.npmjs.com/package/tty-browserify)\n* [url](https://www.npmjs.com/package/url)\n* [util](https://www.npmjs.com/package/util)\n* [vm](https://www.npmjs.com/package/vm-browserify)\n* [zlib](https://www.npmjs.com/package/browserify-zlib)\n\nAdditionally, if you use any of these variables, they\n[will be defined](https://github.com/browserify/insert-module-globals)\nin the bundled output in a browser-appropriate way:\n\n* [process](https://www.npmjs.com/package/process)\n* [Buffer](https://www.npmjs.com/package/buffer)\n* global - top-level scope object (window)\n* __filename - file path of the currently executing file\n* __dirname - directory path of the currently executing file\n\n# more examples\n\n## external requires\n\nYou can just as easily create a bundle that will export a `require()` function so\nyou can `require()` modules from another script tag. Here we'll create a\n`bundle.js` with the [through](https://www.npmjs.com/package/through)\nand [duplexer](https://www.npmjs.com/package/duplexer) modules.\n\n```\n$ browserify -r through -r duplexer -r ./my-file.js:my-module > bundle.js\n```\n\nThen in your page you can do:\n\n``` html\n<script src=\"bundle.js\"></script>\n<script>\n  var through = require('through');\n  var duplexer = require('duplexer');\n  var myModule = require('my-module');\n  /* ... */\n</script>\n```\n\n## external source maps\n\nIf you prefer the source maps be saved to a separate `.js.map` source map file, you may use\n[exorcist](https://github.com/thlorenz/exorcist) in order to achieve that. It's as simple as:\n\n```\n$ browserify main.js --debug | exorcist bundle.js.map > bundle.js\n```\n\nLearn about additional options [here](https://github.com/thlorenz/exorcist#usage).\n\n## multiple bundles\n\nIf browserify finds a `require`d function already defined in the page scope, it\nwill fall back to that function if it didn't find any matches in its own set of\nbundled modules.\n\nIn this way, you can use browserify to split up bundles among multiple pages to\nget the benefit of caching for shared, infrequently-changing modules, while\nstill being able to use `require()`. Just use a combination of `--external` and\n`--require` to factor out common dependencies.\n\nFor example, if a website with 2 pages, `beep.js`:\n\n``` js\nvar robot = require('./robot.js');\nconsole.log(robot('beep'));\n```\n\nand `boop.js`:\n\n``` js\nvar robot = require('./robot.js');\nconsole.log(robot('boop'));\n```\n\nboth depend on `robot.js`:\n\n``` js\nmodule.exports = function (s) { return s.toUpperCase() + '!' };\n```\n\n```\n$ browserify -r ./robot.js > static/common.js\n$ browserify -x ./robot.js beep.js > static/beep.js\n$ browserify -x ./robot.js boop.js > static/boop.js\n```\n\nThen on the beep page you can have:\n\n``` html\n<script src=\"common.js\"></script>\n<script src=\"beep.js\"></script>\n```\n\nwhile the boop page can have:\n\n``` html\n<script src=\"common.js\"></script>\n<script src=\"boop.js\"></script>\n```\n\nThis approach using `-r` and `-x` works fine for a small number of split assets,\nbut there are plugins for automatically factoring out components which are\ndescribed in the\n[partitioning section of the browserify handbook](https://github.com/browserify/browserify-handbook#partitioning).\n\n## api example\n\nYou can use the API directly too:\n\n``` js\nvar browserify = require('browserify');\nvar b = browserify();\nb.add('./browser/main.js');\nb.bundle().pipe(process.stdout);\n```\n\n# methods\n\n``` js\nvar browserify = require('browserify')\n```\n\n## `browserify([files] [, opts])`\n\nReturns a new browserify instance.\n\n<dl>\n<dt>\nfiles\n</dt>\n\n<dd>\nString, file object, or array of those types (they may be mixed) specifying entry file(s).\n</dd>\n\n<dt>\nopts\n</dt>\n\n<dd>\nObject.\n</dd>\n</dl>\n\n`files` and `opts` are both optional, but must be in the order shown if both are\npassed.\n\nEntry files may be passed in `files` and / or `opts.entries`.\n\nExternal requires may be specified in `opts.require`, accepting the same formats\nthat the `files` argument does.\n\nIf an entry file is a stream, its contents will be used. You should pass\n`opts.basedir` when using streaming files so that relative requires can be\nresolved.\n\n`opts.entries` has the same definition as `files`.\n\n`opts.noParse` is an array which will skip all require() and global parsing for\neach file in the array. Use this for giant libs like jquery or threejs that\ndon't have any requires or node-style globals but take forever to parse.\n\n`opts.transform` is an array of transform functions or modules names which will\ntransform the source code before the parsing.\n\n`opts.ignoreTransform` is an array of transformations that will not be run,\neven if specified elsewhere.\n\n`opts.plugin` is an array of plugin functions or module names to use. See the\nplugins section below for details.\n\n`opts.extensions` is an array of optional extra extensions for the module lookup\nmachinery to use when the extension has not been specified.\nBy default browserify considers only `.js` and `.json` files in such cases.\n\n`opts.basedir` is the directory that browserify starts bundling from for\nfilenames that start with `.`.\n\n`opts.paths` is an array of directories that browserify searches when looking\nfor modules which are not referenced using relative path. Can be absolute or\nrelative to `basedir`. Equivalent of setting `NODE_PATH` environmental variable\nwhen calling `browserify` command.\n\n`opts.commondir` sets the algorithm used to parse out the common paths. Use\n`false` to turn this off, otherwise it uses the\n[commondir](https://www.npmjs.com/package/commondir) module.\n\n`opts.fullPaths` disables converting module ids into numerical indexes. This is\nuseful for preserving the original paths that a bundle was generated with.\n\n`opts.builtins` sets the list of built-ins to use, which by default is set in\n`lib/builtins.js` in this distribution.\n\n`opts.bundleExternal` boolean option to set if external modules should be\nbundled. Defaults to true.\n\nWhen `opts.browserField` is false, the package.json browser field will be\nignored. When `opts.browserField` is set to a `string`, then a custom field name\ncan be used instead of the default `\"browser\"` field.\n\nWhen `opts.insertGlobals` is true, always insert `process`, `global`,\n`__filename`, and `__dirname` without analyzing the AST for faster builds but\nlarger output bundles. Default false.\n\nWhen `opts.detectGlobals` is true, scan all files for `process`, `global`,\n`__filename`, and `__dirname`, defining as necessary. With this option npm\nmodules are more likely to work but bundling takes longer. Default true.\n\nWhen `opts.ignoreMissing` is true, ignore `require()` statements that don't\nresolve to anything.\n\nWhen `opts.debug` is true, add a source map inline to the end of the bundle.\nThis makes debugging easier because you can see all the original files if\nyou are in a modern enough browser.\n\nWhen `opts.standalone` is a non-empty string, a standalone module is created\nwith that name and a [umd](https://github.com/forbeslindesay/umd) wrapper.\nYou can use namespaces in the standalone global export using a `.` in the string\nname as a separator, for example `'A.B.C'`. The global export will be [sanitized\nand camel cased](https://github.com/ForbesLindesay/umd#name-casing-and-characters).\n\nNote that in standalone mode the `require()` calls from the original source will\nstill be around, which may trip up AMD loaders scanning for `require()` calls.\nYou can remove these calls with\n[derequire](https://www.npmjs.com/package/derequire):\n\n```\n$ npm install -g derequire\n$ browserify main.js --standalone Foo | derequire > bundle.js\n```\n\n`opts.insertGlobalVars` will be passed to\n[insert-module-globals](https://www.npmjs.com/package/insert-module-globals)\nas the `opts.vars` parameter.\n\n`opts.externalRequireName` defaults to `'require'` in `expose` mode but you can\nuse another name.\n\n`opts.bare` creates a bundle that does not include Node builtins, and does not\nreplace global Node variables except for `__dirname` and `__filename`.\n\n`opts.node` creates a bundle that runs in Node and does not use the browser\nversions of dependencies. Same as passing `{ bare: true, browserField: false }`.\n\nNote that if files do not contain javascript source code then you also need to\nspecify a corresponding transform for them.\n\nAll other options are forwarded along to\n[module-deps](https://www.npmjs.com/package/module-deps)\nand [browser-pack](https://www.npmjs.com/package/browser-pack) directly.\n\n## b.add(file, opts)\n\nAdd an entry file from `file` that will be executed when the bundle loads.\n\nIf `file` is an array, each item in `file` will be added as an entry file.\n\n## b.require(file, opts)\n\nMake `file` available from outside the bundle with `require(file)`.\n\nThe `file` param is anything that can be resolved by `require.resolve()`,\nincluding files from `node_modules`. Like with `require.resolve()`, you must\nprefix `file` with `./` to require a local file (not in `node_modules`).\n\n`file` can also be a stream, but you should also use `opts.basedir` so that\nrelative requires will be resolvable.\n\nIf `file` is an array, each item in `file` will be required.\nIn `file` array form, you can use a string or object for each item. Object items\nshould have a `file` property and the rest of the parameters will be used for\nthe `opts`.\n\nUse the `expose` property of opts to specify a custom dependency name.\n`require('./vendor/angular/angular.js', {expose: 'angular'})` enables `require('angular')`\n\n## b.bundle(cb)\n\nBundle the files and their dependencies into a single javascript file.\n\nReturn a readable stream with the javascript file contents or\noptionally specify a `cb(err, buf)` to get the buffered results.\n\n## b.external(file)\n\nPrevent `file` from being loaded into the current bundle, instead referencing\nfrom another bundle.\n\nIf `file` is an array, each item in `file` will be externalized.\n\nIf `file` is another bundle, that bundle's contents will be read and excluded\nfrom the current bundle as the bundle in `file` gets bundled.\n\n## b.ignore(file)\n\nPrevent the module name or file at `file` from showing up in the output bundle.\n\nIf `file` is an array, each item in `file` will be ignored.\n\nInstead you will get a file with `module.exports = {}`.\n\n## b.exclude(file)\n\nPrevent the module name or file at `file` from showing up in the output bundle.\n\nIf `file` is an array, each item in `file` will be excluded.\n\nIf your code tries to `require()` that file it will throw unless you've provided\nanother mechanism for loading it.\n\n## b.transform(tr, opts={})\n\nTransform source code before parsing it for `require()` calls with the transform\nfunction or module name `tr`.\n\nIf `tr` is a function, it will be called with `tr(file)` and it should return a\n[through-stream](https://github.com/substack/stream-handbook#through)\nthat takes the raw file contents and produces the transformed source.\n\nIf `tr` is a string, it should be a module name or file path of a\n[transform module](https://github.com/browserify/module-deps#transforms)\nwith a signature of:\n\n``` js\nvar through = require('through');\nmodule.exports = function (file) { return through() };\n```\n\nYou don't need to necessarily use the\n[through](https://www.npmjs.com/package/through) module.\nBrowserify is compatible with the newer, more verbose\n[Transform streams](http://nodejs.org/api/stream.html#stream_class_stream_transform_1)\nbuilt into Node v0.10.\n\nHere's how you might compile coffee script on the fly using `.transform()`:\n\n``` js\nvar coffee = require('coffee-script');\nvar through = require('through');\n\nb.transform(function (file) {\n    var data = '';\n    return through(write, end);\n\n    function write (buf) { data += buf }\n    function end () {\n        this.queue(coffee.compile(data));\n        this.queue(null);\n    }\n});\n```\n\nNote that on the command-line with the `-c` flag you can just do:\n\n```\n$ browserify -c 'coffee -sc' main.coffee > bundle.js\n```\n\nOr better still, use the [coffeeify](https://github.com/jnordberg/coffeeify)\nmodule:\n\n```\n$ npm install coffeeify\n$ browserify -t coffeeify main.coffee > bundle.js\n```\n\nIf `opts.global` is `true`, the transform will operate on ALL files, despite\nwhether they exist up a level in a `node_modules/` directory. Use global\ntransforms cautiously and sparingly, since most of the time an ordinary\ntransform will suffice. You can also not configure global transforms in a\n`package.json` like you can with ordinary transforms.\n\nGlobal transforms always run after any ordinary transforms have run.\n\nTransforms may obtain options from the command-line with\n[subarg](https://www.npmjs.com/package/subarg) syntax:\n\n```\n$ browserify -t [ foo --bar=555 ] main.js\n```\n\nor from the api:\n\n```\nb.transform('foo', { bar: 555 })\n```\n\nIn both cases, these options are provided as the second argument to the\ntransform function:\n\n```\nmodule.exports = function (file, opts) { /* opts.bar === 555 */ }\n```\n\nOptions sent to the browserify constructor are also provided under\n`opts._flags`. These browserify options are sometimes required if your transform\nneeds to do something different when browserify is run in debug mode, for\nexample.\n\n## b.plugin(plugin, opts)\n\nRegister a `plugin` with `opts`. Plugins can be a string module name or a\nfunction the same as transforms.\n\n`plugin(b, opts)` is called with the browserify instance `b`.\n\nFor more information, consult the plugins section below.\n\n## b.pipeline\n\nThere is an internal\n[labeled-stream-splicer](https://www.npmjs.com/package/labeled-stream-splicer)\npipeline with these labels:\n\n* `'record'` - save inputs to play back later on subsequent `bundle()` calls\n* `'deps'` - [module-deps](https://www.npmjs.com/package/module-deps)\n* `'json'` - adds `module.exports=` to the beginning of json files\n* `'unbom'` - remove byte-order markers\n* `'unshebang'` - remove #! labels on the first line\n* `'syntax'` - check for syntax errors\n* `'sort'` - sort the dependencies for deterministic bundles\n* `'dedupe'` - remove duplicate source contents\n* `'label'` - apply integer labels to files\n* `'emit-deps'` - emit `'dep'` event\n* `'debug'` - apply source maps\n* `'pack'` - [browser-pack](https://www.npmjs.com/package/browser-pack)\n* `'wrap'` - apply final wrapping, `require=` and a newline and semicolon\n\nYou can call `b.pipeline.get()` with a label name to get a handle on a stream pipeline\nthat you can `push()`, `unshift()`, or `splice()` to insert your own transform\nstreams.\n\n## b.reset(opts)\n\nReset the pipeline back to a normal state. This function is called automatically\nwhen `bundle()` is called multiple times.\n\nThis function triggers a 'reset' event.\n\n# package.json\n\nbrowserify uses the `package.json` in its module resolution algorithm, just like\nnode. If there is a `\"main\"` field, browserify will start resolving the package\nat that point. If there is no `\"main\"` field, browserify will look for an\n`\"index.js\"` file in the module root directory. Here are some more\nsophisticated things you can do in the package.json:\n\n## browser field\n\nThere is a special \"[browser](https://github.com/defunctzombie/package-browser-field-spec)\" field you can\nset in your package.json on a per-module basis to override file resolution for\nbrowser-specific versions of files.\n\nFor example, if you want to have a browser-specific module entry point for your\n`\"main\"` field you can just set the `\"browser\"` field to a string:\n\n``` json\n\"browser\": \"./browser.js\"\n```\n\nor you can have overrides on a per-file basis:\n\n``` json\n\"browser\": {\n  \"fs\": \"level-fs\",\n  \"./lib/ops.js\": \"./browser/opts.js\"\n}\n```\n\nNote that the browser field only applies to files in the local module, and like\ntransforms, it doesn't apply into `node_modules` directories.\n\n## browserify.transform\n\nYou can specify source transforms in the package.json in the\n`browserify.transform` field. There is more information about how source\ntransforms work in package.json on the\n[module-deps readme](https://github.com/browserify/module-deps#transforms).\n\nFor example, if your module requires [brfs](https://www.npmjs.com/package/brfs), you\ncan add\n\n``` json\n\"browserify\": { \"transform\": [ \"brfs\" ] }\n```\n\nto your package.json. Now when somebody `require()`s your module, brfs will\nautomatically be applied to the files in your module without explicit\nintervention by the person using your module. Make sure to add transforms to\nyour package.json dependencies field.\n\n# events\n\n## b.on('file', function (file, id, parent) {})\n## b.pipeline.on('file', function (file, id, parent) {})\n\nWhen a file is resolved for the bundle, the bundle emits a `'file'` event with\nthe full `file` path, the `id` string passed to `require()`, and the `parent`\nobject used by\n[browser-resolve](https://github.com/defunctzombie/node-browser-resolve).\n\nYou could use the `file` event to implement a file watcher to regenerate bundles\nwhen files change.\n\n## b.on('package', function (pkg) {})\n## b.pipeline.on('package', function (pkg) {})\n\nWhen a package file is read, this event fires with the contents. The package\ndirectory is available at `pkg.__dirname`.\n\n## b.on('bundle', function (bundle) {})\n\nWhen `.bundle()` is called, this event fires with the `bundle` output stream.\n\n## b.on('reset', function () {})\n\nWhen the `.reset()` method is called or implicitly called by another call to\n`.bundle()`, this event fires.\n\n## b.on('transform', function (tr, file) {})\n## b.pipeline.on('transform', function (tr, file) {})\n\nWhen a transform is applied to a file, the `'transform'` event fires on the\nbundle stream with the transform stream `tr` and the `file` that the transform\nis being applied to.\n\n# plugins\n\nFor some more advanced use-cases, a transform is not sufficiently extensible.\nPlugins are modules that take the bundle instance as their first parameter and\nan option hash as their second.\n\nPlugins can be used to do perform some fancy features that transforms can't do.\nFor example, [factor-bundle](https://www.npmjs.com/package/factor-bundle) is a\nplugin that can factor out common dependencies from multiple entry-points into a\ncommon bundle. Use plugins with `-p` and pass options to plugins with\n[subarg](https://www.npmjs.com/package/subarg) syntax:\n\n```\nbrowserify x.js y.js -p [ factor-bundle -o bundle/x.js -o bundle/y.js ] \\\n  > bundle/common.js\n```\n\nFor a list of plugins, consult the\n[browserify-plugin tag](https://www.npmjs.com/browse/keyword/browserify-plugin)\non npm.\n\n# list of source transforms\n\nThere is a [wiki page that lists the known browserify\ntransforms](https://github.com/browserify/browserify/wiki/list-of-transforms).\n\nIf you write a transform, make sure to add your transform to that wiki page and\nadd a package.json keyword of `browserify-transform` so that\n[people can browse for all the browserify\ntransforms](https://www.npmjs.com/browse/keyword/browserify-transform) on npmjs.org.\n\n# third-party tools\n\nThere is a [wiki page that lists the known browserify\ntools](https://github.com/browserify/browserify/wiki/browserify-tools).\n\nIf you write a tool, make sure to add it to that wiki page and\nadd a package.json keyword of `browserify-tool` so that\n[people can browse for all the browserify\ntools](https://www.npmjs.com/browse/keyword/browserify-tool) on npmjs.org.\n\n# changelog\n\nReleases are documented in\n[changelog.markdown](changelog.markdown) and on the\n[browserify twitter feed](https://twitter.com/browserify).\n\n# license\n\n[MIT](./LICENSE)\n\n![browserify!](./assets/browserify.png)"}, "npm": {"downloads": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 153300}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 823435}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 3414646}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 10050330}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 18118477}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 35772296}], "dependentsCount": 2514, "starsCount": 929}, "github": {"homepage": "http://browserify.org/", "starsCount": 13188, "forksCount": 1153, "subscribersCount": 311, "issues": {"count": 1947, "openCount": 349, "distribution": {"3600": 188, "10800": 108, "32400": 113, "97200": 131, "291600": 123, "874800": 160, "2624400": 170, "7873200": 167, "23619600": 213, "70858800": 209, "212576400": 365}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 1573}, {"username": "goto-bus-stop", "commitsCount": 43}, {"username": "zertosh", "commitsCount": 42}, {"username": "feross", "commitsCount": 28}, {"username": "domenic", "commitsCount": 15}, {"username": "ForbesLindesay", "commitsCount": 13}, {"username": "jmm", "commitsCount": 12}, {"username": "andreypopp", "commitsCount": 11}, {"username": "thlorenz", "commitsCount": 10}, {"username": "kumavis", "commitsCount": 8}, {"username": "defunctzombie", "commitsCount": 7}, {"username": "terinjokes", "commitsCount": 6}, {"username": "TehShrike", "commitsCount": 5}, {"username": "guybrush", "commitsCount": 5}, {"username": "hughsk", "commitsCount": 5}, {"username": "ljharb", "commitsCount": 5}, {"username": "AvianFlu", "commitsCount": 4}, {"username": "calvinmetcalf", "commitsCount": 4}, {"username": "erithmetic", "commitsCount": 4}, {"username": "jacwright", "commitsCount": 4}, {"username": "jhnns", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "1602", "commitsCount": 3}, {"username": "ElNounch", "commitsCount": 3}, {"username": "Gozala", "commitsCount": 3}, {"username": "Raynos", "commitsCount": 3}, {"username": "alexstrat", "commitsCount": 3}, {"username": "apaleslimghost", "commitsCount": 3}, {"username": "chapel", "commitsCount": 3}, {"username": "christophemacabiau", "commitsCount": 3}, {"username": "devongovett", "commitsCount": 3}, {"username": "jaredhanson", "commitsCount": 3}, {"username": "parroit", "commitsCount": 3}, {"username": "pyrotechnick", "commitsCount": 3}, {"username": "ryysud", "commitsCount": 3}, {"username": "Abhinay077", "commitsCount": 2}, {"username": "KylePDavis", "commitsCount": 2}, {"username": "MellowMelon", "commitsCount": 2}, {"username": "TooTallNate", "commitsCount": 2}, {"username": "Volune", "commitsCount": 2}, {"username": "agilgur5", "commitsCount": 2}, {"username": "al-k21", "commitsCount": 2}, {"username": "bakape", "commitsCount": 2}, {"username": "bcomnes", "commitsCount": 2}, {"username": "codelahoma", "commitsCount": 2}, {"username": "connrs", "commitsCount": 2}, {"username": "cymen", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "garrows", "commitsCount": 2}, {"username": "indutny", "commitsCount": 2}, {"username": "jazzzz", "commitsCount": 2}, {"username": "jcppman", "commitsCount": 2}, {"username": "jessetane", "commitsCount": 2}, {"username": "jgoz", "commitsCount": 2}, {"username": "johnkpaul", "commitsCount": 2}, {"username": "jryans", "commitsCount": 2}, {"username": "linoleum-js", "commitsCount": 2}, {"username": "mantoni", "commitsCount": 2}, {"username": "mattdesl", "commitsCount": 2}, {"username": "maxtaco", "commitsCount": 2}, {"username": "mwiencek", "commitsCount": 2}, {"username": "noahmedling", "commitsCount": 2}, {"username": "spmason", "commitsCount": 2}, {"username": "tilgovi", "commitsCount": 2}, {"username": "toots", "commitsCount": 2}, {"username": "wvanbergen", "commitsCount": 2}, {"username": "yoshuawuyts", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 1}, {"username": "ReadmeCritic", "commitsCount": 1}, {"username": "Shingyx", "commitsCount": 1}, {"username": "amiller-gh", "commitsCount": 1}, {"username": "bendrucker", "commitsCount": 1}, {"username": "blahah", "commitsCount": 1}, {"username": "chadhietala", "commitsCount": 1}, {"username": "chrisirhc", "commitsCount": 1}, {"username": "dignifiedquire", "commitsCount": 1}, {"username": "dominykas", "commitsCount": 1}, {"username": "emilbayes", "commitsCount": 1}, {"username": "faiq", "commitsCount": 1}, {"username": "farzonl", "commitsCount": 1}, {"username": "ganemone", "commitsCount": 1}, {"username": "idlewinn", "commitsCount": 1}, {"username": "jhiesey", "commitsCount": 1}, {"username": "jscissr", "commitsCount": 1}, {"username": "julian-maughan", "commitsCount": 1}, {"username": "kintel", "commitsCount": 1}, {"username": "kt3k", "commitsCount": 1}, {"username": "laurynasl-wix", "commitsCount": 1}, {"username": "mcollina", "commitsCount": 1}, {"username": "mjhm", "commitsCount": 1}, {"username": "mnichols", "commitsCount": 1}, {"username": "mohd-akram", "commitsCount": 1}, {"username": "natevw", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "oncletom", "commitsCount": 1}, {"username": "serapath", "commitsCount": 1}, {"username": "steve-taylor", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "wogsland", "commitsCount": 1}], "commits": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 4}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 14}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 26}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 26838, "testsSize": 144617, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/browserify/browserify/master.svg", "service": "https://api.travis-ci.org/browserify/browserify.svg?branch=master", "shields": "https://img.shields.io/travis/browserify/browserify/master.svg", "content": "https://img.shields.io/travis/browserify/browserify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "outdatedDependencies": {"path-browserify": {"required": "~0.0.0", "stable": "1.0.1", "latest": "1.0.1"}, "assert": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "events": {"required": "^2.0.0", "stable": "3.1.0", "latest": "3.1.0"}, "stream-browserify": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "util": {"required": "~0.10.1", "stable": "0.12.3", "latest": "0.12.3"}, "punycode": {"required": "^1.3.2", "stable": "2.1.1", "latest": "2.1.1"}, "through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "timers-browserify": {"required": "^1.0.1", "stable": "2.0.11", "latest": "2.0.11"}, "concat-stream": {"required": "^1.6.0", "stable": "2.0.0", "latest": "2.0.0"}, "readable-stream": {"required": "^2.0.2", "stable": "3.6.0", "latest": "3.6.0"}, "domain-browser": {"required": "^1.2.0", "stable": "4.2.0", "latest": "4.2.0"}, "buffer": {"required": "~5.2.1", "stable": "5.6.0", "latest": "5.6.0"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.725, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 15681, "downloadsCount": 3350110, "downloadsAcceleration": 4616.789516742774, "dependentsCount": 2514}, "maintenance": {"releasesFrequency": 0.6352739726027398, "commitsFrequency": 0.7238698630136986, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7142821456727036, "detail": {"quality": 0.8601147927794641, "popularity": 0.6411305077166596, "maintenance": 0.6624343718229532}}}}, {"babel-polyfill": {"analyzedAt": "2020-03-22T08:50:12.310Z", "collected": {"metadata": {"name": "babel-polyfill", "scope": "unscoped", "version": "6.26.0", "description": "Provides polyfills necessary for a full ES2015+ environment", "date": "2017-08-16T15:54:12.145Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-polyfill", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-runtime": "^6.26.0", "core-js": "^2.5.0", "regenerator-runtime": "^0.10.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.8.7", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.8.3", "@babel/plugin-proposal-dynamic-import": "^7.8.3", "@babel/plugin-proposal-export-namespace-from": "^7.8.3", "@babel/plugin-proposal-nullish-coalescing-operator": "^7.8.3", "@babel/plugin-proposal-numeric-separator": "^7.8.3", "@babel/plugin-proposal-object-rest-spread": "^7.8.3", "@babel/plugin-proposal-optional-chaining": "^7.8.3", "@babel/plugin-transform-flow-strip-types": "^7.8.3", "@babel/plugin-transform-for-of": "^7.8.6", "@babel/plugin-transform-modules-commonjs": "^7.8.3", "@babel/plugin-transform-runtime": "^7.8.3", "@babel/preset-env": "^7.8.7", "@babel/preset-flow": "^7.8.3", "@babel/register": "^7.8.6", "@babel/runtime": "^7.8.7", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.108.0", "graceful-fs": "^4.1.15", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^1.19.1", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "^1.32.1", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-02-21T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 0}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 0}, {"from": "2019-09-24T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 0}, {"from": "2019-03-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 0}, {"from": "2018-03-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-polyfill"}, "npm": {"downloads": [{"from": "2020-03-21T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 1698958}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 10681454}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 31386325}, {"from": "2019-09-24T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 65700520}, {"from": "2019-03-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 133824788}], "dependentsCount": 5352, "starsCount": 57}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36069, "forksCount": 4158, "subscribersCount": 882, "issues": {"count": 11257, "openCount": 741, "distribution": {"3600": 2426, "10800": 889, "32400": 1037, "97200": 1185, "291600": 1020, "874800": 966, "2624400": 813, "7873200": 757, "23619600": 845, "70858800": 1087, "212576400": 232}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 444}, {"username": "nicolo-ribaudo", "commitsCount": 440}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "JLHwung", "commitsCount": 154}, {"username": "jridgewell", "commitsCount": 145}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 66}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "babel-bot", "commitsCount": 36}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-03-15T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 53}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 94}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 229}, {"from": "2019-09-24T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 464}, {"from": "2019-03-23T00:00:00.000Z", "to": "2020-03-22T00:00:00.000Z", "count": 737}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 18695474, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92, "outdatedDependencies": {"regenerator-runtime": {"required": "^0.10.5", "stable": "0.13.5", "latest": "0.13.5"}, "core-js": {"required": "^2.5.0", "stable": "3.6.4", "latest": "3.6.4"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 41265, "downloadsCount": 10462108.333333334, "downloadsAcceleration": -3058.788508371392, "dependentsCount": 5352}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2609214557077221}}, "error": {"name": "ParseError", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/babel/babel/issues?state=all&per_page=100&page=22", "protocol": "https:", "url": "https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=22", "gotOptions": {"path": "/repos/babel/babel/issues?state=all&per_page=100&page=22", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=22", "pathname": "/repos/babel/babel/issues", "href": "https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=22", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token a159b4163b5bd12dcd8dcb2b5415721b5bc4e6c2", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET"}, "statusCode": 200, "statusMessage": "OK", "message": "Unexpected end of JSON input in \"https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=22\": \n[{\"url\":\"https://api.github.com/repos/babel/babel/issues/9542\",\"repository_ur...", "stack": "ParseError: Unexpected end of JSON input in \"https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=22\": \n[{\"url\":\"https://api.github.com/repos/babel/babel/issues/9542\",\"repository_ur...\n    at EventEmitter.emitter.on (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:65:26)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\n    at Promise.resolve.then.then.val (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:51:6)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:47:5)\n    at Promise (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:61:3)\nFrom previous event:\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:2:46)\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:38)\n    at doRequest.then (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:134:16)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at ghIssueStats (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:124:6)\n    at fetchIssuesStats (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:125:12)\n    at Object.github (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:199:22)\n    at checkRepositoryOwnership.then (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:95:53)\nFrom previous event:\n    at collect (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:89:6)\n    at download.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:163:13)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:162:10)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\n    at Object.onceWrapper (events.js:281:20)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-06T20:20:50.219Z"}, "score": {"final": 0.7239038338294639, "detail": {"quality": 0.9251863785324729, "popularity": 0.6917423695807974, "maintenance": 0.5835374026184085}}}}, {"bluebird": {"analyzedAt": "2020-06-13T18:28:19.374Z", "collected": {"metadata": {"name": "bluebird", "scope": "unscoped", "version": "3.7.2", "description": "Full featured Promises/A+ implementation with exceptionally good performance", "keywords": ["promise", "performance", "promises", "promises-a", "promises-aplus", "async", "await", "deferred", "deferreds", "future", "flow control", "dsl", "fluent interface"], "date": "2019-11-28T22:55:40.312Z", "author": {"name": "Petka Antonov", "email": "petka_antonov@hotmail.com", "url": "http://github.com/petkaantonov/", "username": "esailija"}, "publisher": {"username": "esailija", "email": "petka_antonov@hotmail.com"}, "maintainers": [{"username": "esailija", "email": "petka_antonov@hotmail.com"}], "repository": {"type": "git", "url": "git://github.com/petkaantonov/bluebird.git"}, "links": {"npm": "https://www.npmjs.com/package/bluebird", "homepage": "https://github.com/petkaantonov/bluebird", "repository": "https://github.com/petkaantonov/bluebird", "bugs": "http://github.com/petkaantonov/bluebird/issues"}, "license": "MIT", "devDependencies": {"acorn": "^6.0.2", "acorn-walk": "^6.1.0", "baconjs": "^0.7.43", "bluebird": "^2.9.2", "body-parser": "^1.10.2", "browserify": "^8.1.1", "cli-table": "~0.3.1", "co": "^4.2.0", "cross-spawn": "^0.2.3", "glob": "^4.3.2", "grunt-saucelabs": "~8.4.1", "highland": "^2.3.0", "istanbul": "^0.3.5", "jshint": "^2.6.0", "jshint-stylish": "~0.2.0", "kefir": "^2.4.1", "mkdirp": "~0.5.0", "mocha": "~2.1", "open": "~0.0.5", "optimist": "~0.6.1", "rimraf": "~2.2.6", "rx": "^2.3.25", "serve-static": "^1.7.1", "sinon": "~1.7.3", "uglify-js": "~2.4.16"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"http://promisesaplus.com/\">\n    <img src=\"http://promisesaplus.com/assets/logo-small.png\" alt=\"Promises/A+ logo\"\n         title=\"Promises/A+ 1.1 compliant\" align=\"right\" />\n</a>\n\n\n[![Build Status](https://travis-ci.org/petkaantonov/bluebird.svg?branch=master)](https://travis-ci.org/petkaantonov/bluebird)\n[![coverage-98%](https://img.shields.io/badge/coverage-98%25-brightgreen.svg?style=flat)](http://petkaantonov.github.io/bluebird/coverage/debug/index.html)\n\n**Got a question?** Join us on [stackoverflow](http://stackoverflow.com/questions/tagged/bluebird), the [mailing list](https://groups.google.com/forum/#!forum/bluebird-js) or chat on [IRC](https://webchat.freenode.net/?channels=#promises)\n\n# Introduction\n\nBluebird is a fully featured promise library with focus on innovative features and performance\n\nSee the [**bluebird website**](http://bluebirdjs.com/docs/getting-started.html) for further documentation, references and instructions. See the [**API reference**](http://bluebirdjs.com/docs/api-reference.html) here.\n\nFor bluebird 2.x documentation and files, see the [2.x tree](https://github.com/petkaantonov/bluebird/tree/2.x).\n\n### Note \n\nPromises in Node.js 10 are significantly faster than before. Bluebird still includes a lot of features like cancellation, iteration methods and warnings that native promises don't. If you are using Bluebird for performance rather than for those - please consider giving native promises a shot and running the benchmarks yourself.\n\n# Questions and issues\n\nThe [github issue tracker](https://github.com/petkaantonov/bluebird/issues) is **_only_** for bug reports and feature requests. Anything else, such as questions for help in using the library, should be posted in [StackOverflow](http://stackoverflow.com/questions/tagged/bluebird) under tags `promise` and `bluebird`.\n\n\n\n## Thanks\n\nThanks to BrowserStack for providing us with a free account which lets us support old browsers like IE8. \n\n# License\n\nThe MIT License (MIT)\n\nCopyright (c) 2013-2019 Petka Antonov\n\nPermission is hereby granted, free of charge, to any person obtaining a copy\nof this software and associated documentation files (the \"Software\"), to deal\nin the Software without restriction, including without limitation the rights\nto use, copy, modify, merge, publish, distribute, sublicense, and/or sell\ncopies of the Software, and to permit persons to whom the Software is\nfurnished to do so, subject to the following conditions:\n\nThe above copyright notice and this permission notice shall be included in\nall copies or substantial portions of the Software.\n\nTHE SOFTWARE IS PROVIDED \"AS IS\", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR\nIMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,\nFITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL THE\nAUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER\nLIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,\nOUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN\nTHE SOFTWARE."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2906016}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 18385157}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 79225871}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 238949742}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 448849536}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 826677726}], "dependentsCount": 19055, "starsCount": 599}, "github": {"homepage": "http://bluebirdjs.com", "starsCount": 19142, "forksCount": 2346, "subscribersCount": 370, "issues": {"count": 1640, "openCount": 100, "distribution": {"3600": 327, "10800": 162, "32400": 166, "97200": 196, "291600": 128, "874800": 134, "2624400": 152, "7873200": 142, "23619600": 105, "70858800": 56, "212576400": 72}, "isDisabled": false}, "contributors": [{"username": "petkaantonov", "commitsCount": 1463}, {"username": "benjamingr", "commitsCount": 70}, {"username": "spion", "commitsCount": 24}, {"username": "calvinmetcalf", "commitsCount": 10}, {"username": "overlookmotel", "commitsCount": 6}, {"username": "sukima", "commitsCount": 6}, {"username": "alubbe", "commitsCount": 4}, {"username": "hvrauhal", "commitsCount": 4}, {"username": "lextiz", "commitsCount": 4}, {"username": "Page-", "commitsCount": 3}, {"username": "PatrickJS", "commitsCount": 3}, {"username": "bjouhier", "commitsCount": 3}, {"username": "lddubeau", "commitsCount": 3}, {"username": "lvivski", "commitsCount": 3}, {"username": "markstos", "commitsCount": 3}, {"username": "nornagon", "commitsCount": 3}, {"username": "oliversalzburg", "commitsCount": 3}, {"username": "strawbrary", "commitsCount": 3}, {"username": "tgriesser", "commitsCount": 3}, {"username": "xaka", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "JonAbrams", "commitsCount": 2}, {"username": "LudwikJaniuk", "commitsCount": 2}, {"username": "Retsam", "commitsCount": 2}, {"username": "cos", "commitsCount": 2}, {"username": "cscott", "commitsCount": 2}, {"username": "fasterthanlime", "commitsCount": 2}, {"username": "finnigantime", "commitsCount": 2}, {"username": "floatdrop", "commitsCount": 2}, {"username": "frosas", "commitsCount": 2}, {"username": "grncdr", "commitsCount": 2}, {"username": "iarna", "commitsCount": 2}, {"username": "jasonmerino", "commitsCount": 2}, {"username": "jghaines", "commitsCount": 2}, {"username": "jmm", "commitsCount": 2}, {"username": "jonasi", "commitsCount": 2}, {"username": "kevinoid", "commitsCount": 2}, {"username": "marchant", "commitsCount": 2}, {"username": "mgenware", "commitsCount": 2}, {"username": "mhamann", "commitsCount": 2}, {"username": "mk-pmb", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "stites", "commitsCount": 2}, {"username": "vitaly-t", "commitsCount": 2}, {"username": "vladimirkosmala", "commitsCount": 2}, {"username": "wavded", "commitsCount": 2}, {"username": "wgottschalk", "commitsCount": 2}, {"username": "yonjah", "commitsCount": 2}, {"username": "Ajido", "commitsCount": 1}, {"username": "AngryPidgeon", "commitsCount": 1}, {"username": "BlueHatbRit", "commitsCount": 1}, {"username": "DavidTPate", "commitsCount": 1}, {"username": "Ginden", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "LosBunkos", "commitsCount": 1}, {"username": "MylesBorins", "commitsCount": 1}, {"username": "NGPixel", "commitsCount": 1}, {"username": "Piccirello", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "SMUsamaShah", "commitsCount": 1}, {"username": "Sebmaster", "commitsCount": 1}, {"username": "Shingyx", "commitsCount": 1}, {"username": "a8568730", "commitsCount": 1}, {"username": "acinader", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "bernard-lin", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "charlie-s", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "elyobo", "commitsCount": 1}, {"username": "felipefcm", "commitsCount": 1}, {"username": "gabegorelick", "commitsCount": 1}, {"username": "gef756", "commitsCount": 1}, {"username": "gricey432", "commitsCount": 1}, {"username": "kjnsn", "commitsCount": 1}, {"username": "kp96", "commitsCount": 1}, {"username": "marktinsley", "commitsCount": 1}, {"username": "miteshvmehta", "commitsCount": 1}, {"username": "mlostekk", "commitsCount": 1}, {"username": "mrbar42", "commitsCount": 1}, {"username": "myshov", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "ramiloif", "commitsCount": 1}, {"username": "renewooller", "commitsCount": 1}, {"username": "rgeraldporter", "commitsCount": 1}, {"username": "ricksbrown", "commitsCount": 1}, {"username": "rmariuzzo", "commitsCount": 1}, {"username": "ry8806", "commitsCount": 1}, {"username": "sdbedi", "commitsCount": 1}, {"username": "skyline-123", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "thechutrain", "commitsCount": 1}, {"username": "themez", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "timlesallen", "commitsCount": 1}, {"username": "watson", "commitsCount": 1}, {"username": "worldsense-tms", "commitsCount": 1}, {"username": "yakovmeister", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3058, "testsSize": 959013, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/petkaantonov/bluebird.svg?branch=master", "service": "https://api.travis-ci.org/petkaantonov/bluebird.svg?branch=master", "shields": "https://img.shields.io/travis/petkaantonov/bluebird/master.svg", "content": "https://img.shields.io/travis/petkaantonov/bluebird/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 22556, "downloadsCount": 79649914, "downloadsAcceleration": 151182.48390410945, "dependentsCount": 19055}, "maintenance": {"releasesFrequency": 0.3575342465753425, "commitsFrequency": 0.4240753424657534, "openIssues": 1, "issuesDistribution": 0.23712026142234083}}, "score": {"final": 0.903445509175733, "detail": {"quality": 0.9650973074985816, "popularity": 0.9186851839522561, "maintenance": 0.8353614358367684}}}}, {"babel-register": {"analyzedAt": "2020-06-14T11:45:27.629Z", "collected": {"metadata": {"name": "babel-register", "scope": "unscoped", "version": "6.26.0", "description": "babel require hook", "date": "2017-08-16T15:54:23.130Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-register", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-core": "^6.26.0", "babel-runtime": "^6.26.0", "core-js": "^2.5.0", "home-or-tmp": "^2.0.0", "lodash": "^4.17.4", "mkdirp": "^0.5.1", "source-map-support": "^0.4.15"}, "devDependencies": {"decache": "^4.1.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-register\n\n> The require hook will bind itself to node's require and automatically compile files on the fly.\n\nOne of the ways you can use Babel is through the require hook. The require hook\nwill bind itself to node's `require` and automatically compile files on the\nfly. This is equivalent to CoffeeScript's\n[coffee-script/register](http://coffeescript.org/v2/annotated-source/register.html).\n\n## Install\n\n```sh\nnpm install babel-register --save-dev\n```\n\n## Usage\n\n```js\nrequire(\"babel-register\");\n```\n\nAll subsequent files required by node with the extensions `.es6`, `.es`, `.jsx`\nand `.js` will be transformed by Babel.\n\n<blockquote class=\"babel-callout babel-callout-info\">\n  <h4>Polyfill not included</h4>\n  <p>\n    You must include the <a href=\"https://babeljs.io/docs/usage/polyfill/\">polyfill</a> separately\n    when using features that require it, like generators.\n  </p>\n</blockquote>\n\n### Ignores `node_modules` by default\n\n**NOTE:** By default all requires to `node_modules` will be ignored. You can\noverride this by passing an ignore regex via:\n\n```js\nrequire(\"babel-register\")({\n  // This will override `node_modules` ignoring - you can alternatively pass\n  // an array of strings to be explicitly matched or a regex / glob\n  ignore: false\n});\n```\n\n## Specifying options\n\n```javascript\nrequire(\"babel-register\")({\n  // Optional ignore regex - if any filenames **do** match this regex then they\n  // aren't compiled.\n  ignore: /regex/,\n\n  // Ignore can also be specified as a function.\n  ignore: function(filename) {\n    if (filename === \"/path/to/es6-file.js\") {\n      return false;\n    } else {\n      return true;\n    }\n  },\n\n  // Optional only regex - if any filenames **don't** match this regex then they\n  // aren't compiled\n  only: /my_es6_folder/,\n\n  // Setting this will remove the currently hooked extensions of .es6, `.es`, `.jsx`\n  // and .js so you'll have to add them back if you want them to be used again.\n  extensions: [\".es6\", \".es\", \".jsx\", \".js\"],\n\n  // Setting this to false will disable the cache.\n  cache: true\n});\n```\n\nYou can pass in all other [options](https://babeljs.io/docs/usage/api/#options) as well,\nincluding `plugins` and `presets`. But note that the closest [`.babelrc`](https://babeljs.io/docs/usage/babelrc/)\nto each file still applies, and takes precedence over any options you pass in here.\n\n## Environment variables\n\nBy default `babel-node` and `babel-register` will save to a json cache in your\ntemporary directory.\n\nThis will heavily improve with the startup and compilation of your files. There\nare however scenarios where you want to change this behaviour and there are\nenvironment variables exposed to allow you to do this.\n\n### BABEL_CACHE_PATH\n\nSpecify a different cache location.\n\n```sh\nBABEL_CACHE_PATH=/foo/my-cache.json babel-node script.js\n```\n\n### BABEL_DISABLE_CACHE\n\nDisable the cache.\n\n```sh\nBABEL_DISABLE_CACHE=1 babel-node script.js\n```"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 120866}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2766789}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11750855}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 38161579}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 73678217}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 159575610}], "dependentsCount": 1717, "starsCount": 39}, "github": {"homepage": "https://babel.dev", "starsCount": 36790, "forksCount": 4312, "subscribersCount": 867, "issues": {"count": 11637, "openCount": 793, "distribution": {"3600": 2464, "10800": 918, "32400": 1067, "97200": 1241, "291600": 1061, "874800": 1011, "2624400": 847, "7873200": 819, "23619600": 846, "70858800": 1092, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 157}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 399}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 792}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12333901, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "home-or-tmp": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "source-map-support": {"required": "^0.4.15", "stable": "0.5.19", "latest": "0.5.19"}, "core-js": {"required": "^2.5.0", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 42107, "downloadsCount": 12720526.333333334, "downloadsAcceleration": -18342.07741628615, "dependentsCount": 1717}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23994129349371512}}, "score": {"final": 0.67589770388105, "detail": {"quality": 0.8273397204742041, "popularity": 0.6529030249901653, "maintenance": 0.5690849399778025}}}}, {"should": {"analyzedAt": "2020-05-16T10:30:24.811Z", "collected": {"metadata": {"name": "should", "scope": "unscoped", "version": "13.2.3", "description": "test framework agnostic BDD-style assertions", "keywords": ["test", "bdd", "assert", "should"], "date": "2018-07-30T13:57:31.472Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "btd", "email": "bardadymchik@gmail.com"}, "maintainers": [{"username": "btd", "email": "bardadymchik@gmail.com"}, {"username": "gjohnson", "email": "gjj391@gmail.com"}, {"username": "travisjeffery", "email": "tj@travisjeffery.com"}], "repository": {"type": "git", "url": "git+https://github.com/shouldjs/should.js.git"}, "links": {"npm": "https://www.npmjs.com/package/should", "homepage": "https://github.com/shouldjs/should.js", "repository": "https://github.com/shouldjs/should.js", "bugs": "https://github.com/shouldjs/should.js/issues"}, "license": "MIT", "dependencies": {"should-equal": "^2.0.0", "should-format": "^3.0.3", "should-type": "^1.4.0", "should-type-adaptors": "^1.0.1", "should-util": "^1.0.0"}, "devDependencies": {"bluebird": "^3.5.1", "eslint": "^3.19.0", "eslint-config-shouldjs": "^1.0.0", "mocha": "^4.0.1", "mocha-better-spec-reporter": "latest", "prettier": "^1.7.4", "rollup": "^0.53.0", "rollup-plugin-node-resolve": "^3.0.0", "tslint": "^5.8.0", "typescript": "^2.5.3", "zuul": "latest"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# should.js\n\n[![Join the chat at https://gitter.im/shouldjs/should.js](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/shouldjs/should.js)\n\n[![Build Status](https://travis-ci.org/shouldjs/should.js.svg?branch=master)](https://travis-ci.org/shouldjs/should.js)\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/shouldjs.svg)](https://saucelabs.com/u/shouldjs)\n\n_should_ is an expressive, readable, framework-agnostic assertion library. The main goals of this library are __to be expressive__ and __to be helpful__. It keeps your test code clean, and your error messages helpful.\n\nBy default (when you `require('should')`) _should_ extends the `Object.prototype` with a single non-enumerable getter that allows you to express how that object should behave. It also returns itself when required with `require`.\n\nIt is also possible to use should.js without getter (it will not even try to extend Object.prototype), just `require('should/as-function')`. Or if you already use version that auto add getter, you can call `.noConflict` function.\n\n**Results of `(something).should` getter and `should(something)` in most situations are the same**\n\n### Upgrading instructions\n\nPlease check [wiki page](https://github.com/shouldjs/should.js/wiki/Breaking-changes) for upgrading instructions.\n\n### FAQ\n\nYou can take look in [FAQ](https://github.com/shouldjs/should.js/wiki/FAQ).\n\n## Example\n```javascript\nvar should = require('should');\n\nvar user = {\n    name: 'tj'\n  , pets: ['tobi', 'loki', 'jane', 'bandit']\n};\n\nuser.should.have.property('name', 'tj');\nuser.should.have.property('pets').with.lengthOf(4);\n\n// If the object was created with Object.create(null)\n// then it doesn't inherit `Object.prototype`, so it will not have `.should` getter\n// so you can do:\nshould(user).have.property('name', 'tj');\n\n// also you can test in that way for null's\nshould(null).not.be.ok();\n\nsomeAsyncTask(foo, function(err, result){\n  should.not.exist(err);\n  should.exist(result);\n  result.bar.should.equal(foo);\n});\n```\n## To begin\n\n 1. Install it:\n\n    ```bash\n    $ npm install should --save-dev\n    ```\n\n 2. Require it and use:\n\n    ```js\n    var should = require('should');\n\n    (5).should.be.exactly(5).and.be.a.Number();\n    ```\n\n    ```js\n    var should = require('should/as-function');\n\n    should(10).be.exactly(5).and.be.a.Number();\n    ```\n\n  3. For TypeScript users:\n\n    ```js\n    import * as should from 'should';\n\n    (0).should.be.Number();\n    ```\n\n## In browser\n\nWell, even when browsers by complaints of authors have 100% es5 support, it does not mean it has no bugs. Please see [wiki](https://github.com/shouldjs/should.js/wiki/Known-Bugs) for known bugs.\n\nIf you want to use _should_ in browser, use the `should.js` file in the root of this repository, or build it yourself. To build a fresh version:\n\n```bash\n$ npm install\n$ npm run browser\n```\n\nThe script is exported to `window.should`:\n\n```js\nshould(10).be.exactly(10)\n```\n\nYou can easy install it with npm or bower:\n\n```sh\nnpm install should -D\n# or\nbower install shouldjs/should.js\n```\n\n## API docs\n\nActual api docs generated by jsdoc comments and available at [http://shouldjs.github.io](http://shouldjs.github.io).\n\n## Usage examples\n\nPlease look on usage in [examples](https://github.com/shouldjs/examples)\n\n## .not\n\n`.not` negates the current assertion.\n\n## .any\n\n`.any` allow for assertions with multiple parameters to assert any of the parameters (but not all). This is similar to the native JavaScript [array.some](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/some).\n\n# Assertions\n## chaining assertions\n\nEvery assertion will return a `should.js`-wrapped Object, so assertions can be chained.\nTo help chained assertions read more clearly, you can use the following helpers anywhere in your chain: `.an`, `.of`, `.a`, `.and`, `.be`, `.have`, `.with`, `.is`, `.which`. Use them for better readability; they do nothing at all.\nFor example:\n```js\nuser.should.be.an.instanceOf(Object).and.have.property('name', 'tj');\nuser.pets.should.be.instanceof(Array).and.have.lengthOf(4);\n```\nAlmost all assertions return the same object - so you can easy chain them. But some (eg: `.length` and `.property`) move the assertion object to a property value, so be careful.\n\n## Adding own assertions\n\nAdding own assertion is pretty easy. You need to call `should.Assertion.add` function. It accept 2 arguments:\n\n1. name of assertion method (string)\n2. assertion function (function)\n\nWhat assertion function should do. It should check only positive case. `should` will handle `.not` itself.\n`this` in assertion function will be instance of `should.Assertion` and you **must** define in any way this.params object\n in your assertion function call before assertion check happen.\n\n`params` object can contain several fields:\n\n- `operator` - it is string which describe your assertion\n- `actual` it is actual value, you can assume it is your own this.obj if you need to define you own\n- `expected` it is any value that expected to be matched this.obj\n\nYou can assume its usage in generating AssertionError message like: expected `obj`? || this.obj not? `operator` `expected`?\n\nIn `should` sources appeared 2 kinds of usage of this method.\n\nFirst not preferred and used **only** for shortcuts to other assertions, e.g how `.should.be.true()` defined:\n\n```javascript\nAssertion.add('true', function() {\n    this.is.exactly(true);\n});\n```\nThere you can see that assertion function do not define own `this.params` and instead call within the same assertion `.exactly`\nthat will fill `this.params`. **You should use this way very carefully, but you can use it**.\n\nSecond way preferred and i assume you will use it instead of first.\n\n```javascript\nAssertion.add('true', function() {\n    this.params = { operator: 'to be true', expected: true };\n\n    should(this.obj).be.exactly(true);\n});\n```\nin this case this.params defined and then used new assertion context (because called `.should`). Internally this way does not\n create any edge cases as first.\n\n```javascript\nAssertion.add('asset', function() {\n    this.params = { operator: 'to be asset' };\n\n    this.obj.should.have.property('id').which.is.a.Number();\n    this.obj.should.have.property('path');\n})\n\n//then\n> ({ id: '10' }).should.be.an.asset();\nAssertionError: expected { id: '10' } to be asset\n    expected '10' to be a number\n\n> ({ id: 10 }).should.be.an.asset();\nAssertionError: expected { id: 10 } to be asset\n    expected { id: 10 } to have property path\n```\n\n## Additional projects\n\n* [`should-sinon`](https://github.com/shouldjs/sinon) - adds additional assertions for sinon.js\n* [`should-immutable`](https://github.com/shouldjs/should-immutable) - extends different parts of should.js to make immutable.js first-class citizen in should.js\n* [`should-http`](https://github.com/shouldjs/http) - adds small assertions for assertion on http responses for node only\n* [`should-jq`](https://github.com/shouldjs/jq) - assertions for jq (need maintainer)\n* [`karma-should`](https://github.com/seegno/karma-should) - make more or less easy to work karma with should.js\n* [`should-spies`](https://github.com/shouldjs/spies) - small and dirty simple zero dependencies spies\n\n\n## Contributions\n\n[Actual list of contributors](https://github.com/visionmedia/should.js/graphs/contributors) if you want to show it your friends.\n\nTo run the tests for _should_ simply run:\n\n    $ npm test\n\nSee also [CONTRIBUTING](./CONTRIBUTING.md).\n\n## OMG IT EXTENDS OBJECT???!?!@\n\nYes, yes it does, with a single getter _should_, and no it won't break your code, because it does this **properly** with a non-enumerable property.\n\nAlso it is possible use it without extension. Just use `require('should/as-function')` everywhere.\n\n## License\n\nMIT. See LICENSE for details."}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 108541}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 629677}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 2645447}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 7700517}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 12407407}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21930890}], "dependentsCount": 955, "starsCount": 132}, "github": {"homepage": "http://shouldjs.github.io", "starsCount": 1883, "forksCount": 136, "subscribersCount": 44, "issues": {"count": 187, "openCount": 11, "distribution": {"3600": 38, "10800": 22, "32400": 21, "97200": 29, "291600": 8, "874800": 23, "2624400": 18, "7873200": 11, "23619600": 5, "70858800": 6, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "btd", "commitsCount": 359}, {"username": "tj", "commitsCount": 132}, {"username": "aseemk", "commitsCount": 10}, {"username": "rixth", "commitsCount": 10}, {"username": "serby", "commitsCount": 7}, {"username": "TooTallNate", "commitsCount": 4}, {"username": "alsotang", "commitsCount": 4}, {"username": "gabrielfalcao", "commitsCount": 4}, {"username": "travisjeffery", "commitsCount": 4}, {"username": "alFReD-NSH", "commitsCount": 3}, {"username": "fediev", "commitsCount": 3}, {"username": "nickdaugherty", "commitsCount": 3}, {"username": "fredr", "commitsCount": 2}, {"username": "nbrownus", "commitsCount": 2}, {"username": "theycallmeswift", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "vlad-shatskyi", "commitsCount": 2}, {"username": "Awk34", "commitsCount": 1}, {"username": "Erkan-Yilmaz", "commitsCount": 1}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "Raynos", "commitsCount": 1}, {"username": "RubenVerborgh", "commitsCount": 1}, {"username": "SpenceSellers", "commitsCount": 1}, {"username": "boatmeme", "commitsCount": 1}, {"username": "bodenr", "commitsCount": 1}, {"username": "carldunham", "commitsCount": 1}, {"username": "chris-grabcad", "commitsCount": 1}, {"username": "citizensas", "commitsCount": 1}, {"username": "dlochrie", "commitsCount": 1}, {"username": "eldargab", "commitsCount": 1}, {"username": "garrows", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "guileen", "commitsCount": 1}, {"username": "ichernev", "commitsCount": 1}, {"username": "isayme", "commitsCount": 1}, {"username": "jakearchibald", "commitsCount": 1}, {"username": "joshrickert", "commitsCount": 1}, {"username": "jsdevel", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "juandelgado", "commitsCount": 1}, {"username": "kaspars", "commitsCount": 1}, {"username": "lackac", "commitsCount": 1}, {"username": "lumaxis", "commitsCount": 1}, {"username": "mcandre", "commitsCount": 1}, {"username": "mrlannigan", "commitsCount": 1}, {"username": "msemenistyi", "commitsCount": 1}, {"username": "msievers83", "commitsCount": 1}, {"username": "ndastur", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "qqzh002", "commitsCount": 1}, {"username": "rafmagana", "commitsCount": 1}, {"username": "robi50", "commitsCount": 1}, {"username": "rudolf", "commitsCount": 1}, {"username": "seejohnrun", "commitsCount": 1}, {"username": "sergiitk", "commitsCount": 1}, {"username": "shubhodeep9", "commitsCount": 1}, {"username": "skovalyov", "commitsCount": 1}, {"username": "stimberm", "commitsCount": 1}, {"username": "titarenko", "commitsCount": 1}, {"username": "tjwudi", "commitsCount": 1}, {"username": "tricknotes", "commitsCount": 1}, {"username": "tvjg", "commitsCount": 1}, {"username": "ulikoehler", "commitsCount": 1}, {"username": "vp2177", "commitsCount": 1}, {"username": "yamadapc", "commitsCount": 1}, {"username": "zarino", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 7809, "testsSize": 68474, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/shouldjs/should.js.svg?branch=master", "service": "https://api.travis-ci.org/shouldjs/should.js.svg?branch=master", "shields": "https://img.shields.io/travis/shouldjs/should.js/master.svg", "content": "https://img.shields.io/travis/shouldjs/should.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 2262, "downloadsCount": 2566839, "downloadsAcceleration": 9235.586320395738, "dependentsCount": 955}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8229770903742989, "detail": {"quality": 0.9650973074985816, "popularity": 0.5242453859698047, "maintenance": 0.9998914658151222}}}}, {"mkdirp": {"analyzedAt": "2020-06-07T07:49:19.964Z", "collected": {"metadata": {"name": "mkdirp", "scope": "unscoped", "version": "1.0.4", "description": "Recursively mkdir, like `mkdir -p`", "keywords": ["mkdir", "directory", "make dir", "make", "dir", "recursive", "native"], "date": "2020-04-03T17:03:08.825Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git+https://github.com/isaacs/node-mkdirp.git"}, "links": {"npm": "https://www.npmjs.com/package/mkdirp", "homepage": "https://github.com/isaacs/node-mkdirp#readme", "repository": "https://github.com/isaacs/node-mkdirp", "bugs": "https://github.com/isaacs/node-mkdirp/issues"}, "license": "MIT", "devDependencies": {"require-inject": "^1.4.4", "tap": "^14.10.7"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1667771}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 27708911}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 114362609}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 322660893}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 500934058}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 839540447}], "dependentsCount": 16240, "starsCount": 345}, "github": {"forkOf": "substack/node-mkdirp", "starsCount": 40, "forksCount": 15, "subscribersCount": 2, "issues": {"count": 27, "openCount": 2, "distribution": {"3600": 3, "10800": 3, "32400": 2, "97200": 3, "291600": 4, "874800": 7, "2624400": 3, "7873200": 2, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 61}, {"username": "isaacs", "commitsCount": 35}, {"username": "MylesBorins", "commitsCount": 2}, {"username": "calvinmetcalf", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 1}, {"username": "doublerebel", "commitsCount": 1}, {"username": "smurthas", "commitsCount": 1}, {"username": "sqs", "commitsCount": 1}, {"username": "ulikoehler", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 23}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 23}]}, "source": {"files": {"readmeSize": 0, "testsSize": 18761, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.49000000000000005, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 411, "downloadsCount": 107553631, "downloadsAcceleration": 498708.0820395738, "dependentsCount": 16240}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7551541095890411, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.8509533004131056, "detail": {"quality": 0.7592924552092748, "popularity": 0.7807117588989516, "maintenance": 0.9997612806734002}}}}, {"standard": {"analyzedAt": "2020-05-11T16:28:18.685Z", "collected": {"metadata": {"name": "standard", "scope": "unscoped", "version": "14.3.4", "description": "JavaScript Standard Style", "keywords": ["JavaScript Standard Style", "check", "checker", "code", "code checker", "code linter", "code standards", "code style", "enforce", "eslint", "hint", "jscs", "jshint", "lint", "policy", "quality", "simple", "standard", "standard style", "style", "style checker", "style linter", "verify"], "date": "2020-05-11T16:26:45.103Z", "author": {"name": "Feross Aboukhadijeh", "email": "feross@feross.org", "url": "https://feross.org/", "username": "feross"}, "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "bret", "email": "bcomnes@gmail.com"}, {"username": "dcousens", "email": "npm@dcousens.com"}, {"username": "dcposch", "email": "dcposch@dcpos.ch"}, {"username": "feross", "email": "feross@feross.org"}, {"username": "flet", "email": "flettre@gmail.com"}, {"username": "jb55", "email": "bill@casarin.me"}, {"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "linusu", "email": "linus@folkdatorn.se"}, {"username": "mafintosh", "email": "mathiasbuus@gmail.com"}, {"username": "maxogden", "email": "max@maxogden.com"}, {"username": "othiym23", "email": "ogd@aoaioxxysz.net"}, {"username": "reggi", "email": "thomas@reggi.com"}, {"username": "rstacruz", "email": "dropbox@ricostacruz.com"}, {"username": "timoxley", "email": "secoif@gmail.com"}, {"username": "watson", "email": "w@tson.dk"}, {"username": "xjamundx", "email": "jamund@gmail.com"}, {"username": "yoshuawuyts", "email": "i@yoshuawuyts.com"}], "repository": {"type": "git", "url": "git://github.com/standard/standard.git"}, "links": {"npm": "https://www.npmjs.com/package/standard", "homepage": "https://standardjs.com", "repository": "https://github.com/standard/standard", "bugs": "https://github.com/standard/standard/issues"}, "license": "MIT", "dependencies": {"eslint": "~6.8.0", "eslint-config-standard": "14.1.1", "eslint-config-standard-jsx": "8.1.0", "eslint-plugin-import": "~2.18.0", "eslint-plugin-node": "~10.0.0", "eslint-plugin-promise": "~4.2.1", "eslint-plugin-react": "~7.14.2", "eslint-plugin-standard": "~4.0.0", "standard-engine": "^12.0.0"}, "devDependencies": {"babel-eslint": "^10.0.3", "cross-spawn": "^7.0.0", "eslint-index": "^1.3.0", "hallmark": "^2.0.0", "minimist": "^1.2.2", "mkdirp": "^1.0.3", "run-parallel-limit": "^1.0.3", "standard-packages": "^3.6.1", "tape": "^4.6.0"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 16}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 18}], "hasTestScript": true, "readme": "<h1 align=\"center\">\n  <a href=\"https://standardjs.com\"><img src=\"https://cdn.rawgit.com/standard/standard/master/sticker.svg\" alt=\"Standard - JavaScript Style Guide\" width=\"200\"></a>\n  <br>\n  JavaScript Standard Style\n  <br>\n  <br>\n</h1>\n\n<p align=\"center\">\n  <a href=\"https://discord.gg/ZegqCBr\"><img src=\"https://img.shields.io/discord/612704110008991783\" alt=\"discord\"></a>\n  <a href=\"https://travis-ci.org/standard/standard\"><img src=\"https://img.shields.io/travis/standard/standard/master.svg\" alt=\"travis\"></a>\n  <a href=\"https://www.npmjs.com/package/standard\"><img src=\"https://img.shields.io/npm/v/standard.svg\" alt=\"npm version\"></a>\n  <a href=\"https://www.npmjs.com/package/eslint-config-standard\"><img src=\"https://img.shields.io/npm/dm/eslint-config-standard.svg\" alt=\"npm downloads\"></a>\n  <a href=\"https://standardjs.com\"><img src=\"https://img.shields.io/badge/code_style-standard-brightgreen.svg\" alt=\"Standard - JavaScript Style Guide\"></a>\n</p>\n\n<p align=\"center\">\n  <a href=\"/docs/README-en.md\">English</a> \u2022\n  <a href=\"/docs/README-esla.md\">Espa\u00f1ol (Latinoam\u00e9rica)</a> \u2022\n  <a href=\"/docs/README-fr.md\">Fran\u00e7ais</a> \u2022\n  <a href=\"/docs/README-iteu.md\">Italiano (Italian)</a> \u2022\n  <a href=\"/docs/README-ja.md\">\u65e5\u672c\u8a9e (Japanese)</a> \u2022\n  <a href=\"/docs/README-kokr.md\">\ud55c\uad6d\uc5b4 (Korean)</a> \u2022\n  <a href=\"/docs/README-ptbr.md\">Portugu\u00eas (Brasil)</a> \u2022\n  <a href=\"/docs/README-zhcn.md\">\u7b80\u4f53\u4e2d\u6587 (Simplified Chinese)</a> \u2022\n  <a href=\"/docs/README-zhtw.md\">\u7e41\u9ad4\u4e2d\u6587 (Taiwanese Mandarin)</a>\n</p>\n\n## JavaScript style guide, linter, and formatter\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce code quality in your\n  project. No decisions to make. No `.eslintrc` files to manage. It just works.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nGive it a try by running `npx standard --fix` right now!\n\n## Table of Contents\n\n- Quick start\n  - [Install](#install)\n  - [Usage](#usage)\n  - [What you might do if you're clever](#what-you-might-do-if-youre-clever)\n- FAQ\n  - [Why should I use JavaScript Standard Style?](#why-should-i-use-javascript-standard-style)\n  - [Who uses JavaScript Standard Style?](#who-uses-javascript-standard-style)\n  - [Are there text editor plugins?](#are-there-text-editor-plugins)\n  - [Is there a readme badge?](#is-there-a-readme-badge)\n  - [I disagree with rule X, can you change it?](#i-disagree-with-rule-x-can-you-change-it)\n  - [But this isn't a real web standard!](#but-this-isnt-a-real-web-standard)\n  - [Is there an automatic formatter?](#is-there-an-automatic-formatter)\n  - [How do I ignore files?](#how-do-i-ignore-files)\n  - [How do I hide a certain warning?](#how-do-i-hide-a-certain-warning)\n  - [I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?](#i-use-a-library-that-pollutes-the-global-namespace-how-do-i-prevent-variable-is-not-defined-errors)\n  - [How do I use experimental JavaScript (ES Next) features?](#how-do-i-use-experimental-javascript-es-next-features)\n  - [Can I use a JavaScript language variant, like Flow or TypeScript?](#can-i-use-a-javascript-language-variant-like-flow-or-typescript)\n  - [What about Mocha, Jest, Jasmine, QUnit, etc?](#what-about-mocha-jest-jasmine-qunit-etc)\n  - [What about Web Workers and Service Workers?](#what-about-web-workers-and-service-workers)\n  - [Can I check code inside of Markdown or HTML files?](#can-i-check-code-inside-of-markdown-or-html-files)\n  - [Is there a Git `pre-commit` hook?](#is-there-a-git-pre-commit-hook)\n  - [How do I make the output all colorful and pretty?](#how-do-i-make-the-output-all-colorful-and-pretty)\n  - [Is there a Node.js API?](#is-there-a-nodejs-api)\n  - [How do I contribute to StandardJS?](#how-do-i-contribute-to-standardjs)\n- [License](#license)\n\n## Install\n\nThe easiest way to use JavaScript Standard Style is to install it globally as a\nNode command line program. Run the following command in Terminal:\n\n```bash\n$ npm install standard --global\n```\n\nOr, you can install `standard` locally, for use in a single project:\n\n```bash\n$ npm install standard --save-dev\n```\n\n*Note: To run the preceding commands, [Node.js](http://nodejs.org) and [npm](https://npmjs.com) must be installed.*\n\n## Usage\n\nAfter you've installed `standard`, you should be able to use the `standard` program. The\nsimplest use case would be checking the style of all JavaScript files in the\ncurrent working directory:\n\n```bash\n$ standard\nError: Use JavaScript Standard Style\n  lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n```\n\nIf you've installed `standard` locally, run with `npx` instead:\n\n```bash\n$ npx standard\n```\n\nYou can optionally pass in a directory (or directories) using the glob pattern. Be\nsure to quote paths containing glob patterns so that they are expanded by\n`standard` instead of your shell:\n\n```bash\n$ standard \"src/util/**/*.js\" \"test/**/*.js\"\n```\n\n**Note:** by default `standard` will look for all files matching the patterns:\n`**/*.js`, `**/*.jsx`.\n\n## What you might do if you're clever\n\n1. Add it to `package.json`\n\n  ```json\n  {\n    \"name\": \"my-cool-package\",\n    \"devDependencies\": {\n      \"standard\": \"*\"\n    },\n    \"scripts\": {\n      \"test\": \"standard && node my-tests.js\"\n    }\n  }\n  ```\n\n2. Style is checked automatically when you run `npm test`\n\n  ```bash\n  $ npm test\n  Error: Use JavaScript Standard Style\n    lib/torrent.js:950:11: Expected '===' and instead saw '=='.\n  ```\n\n3. Never give style feedback on a pull request again!\n\n## Why should I use JavaScript Standard Style?\n\nThe beauty of JavaScript Standard Style is that it's simple. No one wants to\nmaintain multiple hundred-line style configuration files for every module/project\nthey work on. Enough of this madness!\n\nThis module saves you (and others!) time in three ways:\n\n- **No configuration.** The easiest way to enforce consistent style in your\n  project. Just drop it in.\n- **Automatically format code.** Just run `standard --fix` and say goodbye to\n  messy or inconsistent code.\n- **Catch style issues & programmer errors early.** Save precious code review\n  time by eliminating back-and-forth between reviewer & contributor.\n\nAdopting `standard` style means ranking the importance of code clarity and\ncommunity conventions higher than personal style. This might not make sense for\n100% of projects and development cultures, however open source can be a hostile\nplace for newbies. Setting up clear, automated contributor expectations makes a\nproject healthier.\n\nFor more info, see the conference talk [\"Write Perfect Code with Standard and\nESLint\"](https://www.youtube.com/watch?v=kuHfMw8j4xk). In this talk, you'll learn\nabout linting, when to use `standard` versus `eslint`, and how `prettier` compares\nto `standard`.\n\n## Who uses JavaScript Standard Style?\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodejs.png>](https://nodejs.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/npm.png>](https://www.npmjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/github.png>](https://github.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/elastic.png>](https://www.elastic.co) |\n|---|---|---|---|\n\n[<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/express.png>](http://expressjs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/electron.png>](http://electron.atom.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nuxtjs.png>](https://nuxtjs.org/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/atom.png>](https://atom.io) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/mongodb.jpg>](https://www.mongodb.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zendesk.png>](https://www.zendesk.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/brave.png>](https://www.brave.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zeit.png>](https://zeit.co) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nodesource.png>](https://nodesource.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/nearform.png>](http://www.nearform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/typeform.png>](https://www.typeform.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/gov-uk.png>](https://gds.blog.gov.uk) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/heroku.png>](https://www.heroku.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/saucelabs.png>](https://saucelabs.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/automattic.png>](https://automattic.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/godaddy.png>](https://www.godaddy.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webtorrent.png>](https://webtorrent.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ipfs.png>](https://ipfs.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/dat.png>](https://datproject.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitcoinjs.png>](https://bitcoinjs.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/voltra.png>](https://voltra.co) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/treasuredata.png>](https://www.treasuredata.com) | [<img alt=\"Free MIDIs, MIDI file downloads\" width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bitmidi.png>](https://bitmidi.com) | [<img width=190 alt=\"College essays, AP notes\" src=https://cdn.rawgit.com/standard/standard/master/docs/logos/studynotes.jpg>](https://www.apstudynotes.org) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/optiopay.png>](https://www.optiopay.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/jaguar-landrover.png>](https://www.jlrtechincubator.com/jlrti/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/bustle.jpg>](https://www.bustle.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/zentrick.png>](https://www.zentrick.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/greenkeeper.png>](https://greenkeeper.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/karma.png>](https://karma-runner.github.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/taser.png>](https://www.taser.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/neo4j.png>](https://www.neo4j.com) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/rentograph.png>](https://rentograph.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/eaze.png>](https://www.eaze.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/ctrl-alt-deseat.png>](https://www.ctrlaltdeseat.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/clevertech.png>](https://clevertech.biz) |\n|---|---|---|---|\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/aragon.png>](https://aragon.org) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/flowsent.png>](https://www.flowsent.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/puma-browser.png>](https://www.pumabrowser.com/) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/webstorm.png>](https://www.jetbrains.com/webstorm/) |\n|---|---|---|---|\n\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/fastify.png>](https://www.fastify.io) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/scuttlebutt.png>](https://www.scuttlebutt.nz) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/solid.png>](https://solid.inrupt.com) | [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/grab.png>](https://www.grab.com) |\n|---|---|---|---|\n\n\n| [<img width=190 src=https://cdn.rawgit.com/standard/standard/master/docs/logos/swissdev-js-jobs.png>](https://swissdevjobs.ch/jobs/JavaScript/All) | Your logo here | Your logo here | Your logo here |\n|---|---|---|---|\n\n\nIn addition to companies, many community members use `standard` on packages that\nare [too numerous](https://raw.githubusercontent.com/standard/standard-packages/master/all.json)\nto list here.\n\n`standard` is also the top-starred linter in GitHub's\n[Clean Code Linter](https://github.com/showcases/clean-code-linters) showcase.\n\n## Are there text editor plugins?\n\nFirst, install `standard`. Then, install the appropriate plugin for your editor:\n\n### Sublime Text\n\nUsing **[Package Control][sublime-1]**, install **[SublimeLinter][sublime-2]** and\n**[SublimeLinter-contrib-standard][sublime-3]**.\n\nFor automatic formatting on save, install **[StandardFormat][sublime-4]**.\n\n[sublime-1]: https://packagecontrol.io/\n[sublime-2]: http://www.sublimelinter.com/en/latest/\n[sublime-3]: https://packagecontrol.io/packages/SublimeLinter-contrib-standard\n[sublime-4]: https://packagecontrol.io/packages/StandardFormat\n\n### Atom\n\nInstall **[linter-js-standard][atom-1]**.\n\nAlternatively, you can install **[linter-js-standard-engine][atom-4]**. Instead of\nbundling a version of `standard` it will automatically use the version installed\nin your current project. It will also work out of the box with other linters based\non **[standard-engine][atom-5]**.\n\nFor automatic formatting, install **[standard-formatter][atom-2]**. For snippets,\ninstall **[standardjs-snippets][atom-3]**.\n\n[atom-1]: https://atom.io/packages/linter-js-standard\n[atom-2]: https://atom.io/packages/standard-formatter\n[atom-3]: https://atom.io/packages/standardjs-snippets\n[atom-4]: https://atom.io/packages/linter-js-standard-engine\n[atom-5]: https://github.com/standard/standard-engine\n\n### Visual Studio Code\n\nInstall **[vscode-standardjs][vscode-1]**. (Includes support for automatic formatting.)\n\nFor JS snippets, install: **[vscode-standardjs-snippets][vscode-2]**. For React snippets, install **[vscode-react-standard][vscode-3]**.\n\n[vscode-1]: https://marketplace.visualstudio.com/items/chenxsan.vscode-standardjs\n[vscode-2]: https://marketplace.visualstudio.com/items?itemName=capaj.vscode-standardjs-snippets\n[vscode-3]: https://marketplace.visualstudio.com/items/TimonVS.ReactSnippetsStandard\n\n### Vim\n\nInstall **[ale][vim-1]**. And add these lines to your `.vimrc` file.\n\n```vim\nlet g:ale_linters = {\n\\   'javascript': ['standard'],\n\\}\nlet g:ale_fixers = {'javascript': ['standard']}\n```\n\nThis sets standard as your only linter and fixer for javascript files and so prevents conflicts with eslint. For linting and automatic fixing on save, add these lines to `.vimrc`:\n```vim\nlet g:ale_lint_on_save = 1\nlet g:ale_fix_on_save = 1\n```\n\n\nAlternative plugins to consider include [neomake][vim-2] and [syntastic][vim-3], both of which have built-in support for `standard` (though configuration may be necessary).\n\n[vim-1]: https://github.com/w0rp/ale\n[vim-2]: https://github.com/neomake/neomake\n[vim-3]: https://github.com/vim-syntastic/syntastic\n\n### Emacs\n\nInstall **[Flycheck][emacs-1]** and check out the **[manual][emacs-2]** to learn\nhow to enable it in your projects.\n\n[emacs-1]: http://www.flycheck.org\n[emacs-2]: http://www.flycheck.org/en/latest/user/installation.html\n\n### Brackets\n\nSearch the extension registry for **[\"Standard Code Style\"][brackets-1]** and click \"Install\".\n\n[brackets-1]: https://github.com/ishamf/brackets-standard/\n\n### WebStorm (PhpStorm, IntelliJ, RubyMine, JetBrains, etc.)\n\nWebStorm [recently announced native support](https://blog.jetbrains.com/webstorm/2017/01/webstorm-2017-1-eap-171-2272/)\nfor `standard` directly in the IDE.\n\nIf you still prefer to configure `standard` manually, [follow this guide][webstorm-1]. This applies to all JetBrains products, including PhpStorm, IntelliJ, RubyMine, etc.\n\n[webstorm-1]: docs/webstorm.md\n\n## Is there a readme badge?\n\nYes! If you use `standard` in your project, you can include one of these badges in\nyour readme to let people know that your code is using the standard style.\n\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n\n```md\n[![JavaScript Style Guide](https://cdn.rawgit.com/standard/standard/master/badge.svg)](https://github.com/standard/standard)\n```\n\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\n```md\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n```\n\n## I disagree with rule X, can you change it?\n\nNo. The whole point of `standard` is to save you time by avoiding\n[bikeshedding][bikeshedding] about code style. There are lots of debates online about\ntabs vs. spaces, etc. that will never be resolved. These debates just distract from\ngetting stuff done. At the end of the day you have to 'just pick something', and\nthat's the whole philosophy of `standard` -- its a bunch of sensible 'just pick\nsomething' opinions. Hopefully, users see the value in that over defending their\nown opinions.\n\nThere are a couple of similar packages for anyone who does not want to completely accept `standard`:\n- [semistandard](https://github.com/standard/semistandard) - standard, with semicolons\n- [standardx](https://github.com/standard/standardx) - standard, with custom tweaks\n\nIf you really want to configure hundreds of ESLint rules individually, you can\nalways use `eslint` directly with\n[eslint-config-standard](https://github.com/standard/eslint-config-standard) to\nlayer your changes on top.\n[`standard-eject`](https://github.com/josephfrazier/standard-eject) can help\nyou migrate from `standard` to `eslint` and `eslint-config-standard`.\n\nPro tip: Just use `standard` and move on. There are actual real problems that you\ncould spend your time solving! :P\n\n[bikeshedding]: https://www.freebsd.org/doc/en/books/faq/misc.html#bikeshed-painting\n\n## But this isn't a real web standard!\n\nOf course it's not! The style laid out here is not affiliated with any official web\nstandards groups, which is why this repo is called `standard/standard` and not\n`ECMA/standard`.\n\nThe word \"standard\" has more meanings than just \"web standard\" :-) For example:\n\n- This module helps hold our code to a high *standard of quality*.\n- This module ensures that new contributors follow some basic *style standards*.\n\n## Is there an automatic formatter?\n\nYes! You can use `standard --fix` to fix most issues automatically.\n\n`standard --fix` is built into `standard` for maximum convenience. Most problems\nare fixable, but some errors (like forgetting to handle errors) must be fixed\nmanually.\n\nTo save you time, `standard` outputs the message \"`Run standard --fix to\nautomatically fix some problems`\" when it detects problems that can be fixed\nautomatically.\n\n## How do I ignore files?\n\nCertain paths (`node_modules/`, `coverage/`, `vendor/`, `*.min.js`, `bundle.js`,\nand files/folders that begin with `.` like `.git/`) are automatically ignored.\n\nPaths in a project's root `.gitignore` file are also automatically ignored.\n\nSometimes you need to ignore additional folders or specific minified files. To do\nthat, add a `standard.ignore` property to `package.json`:\n\n```json\n\"standard\": {\n  \"ignore\": [\n    \"**/out/\",\n    \"/lib/select2/\",\n    \"/lib/ckeditor/\",\n    \"tmp.js\"\n  ]\n}\n```\n\n## How do I hide a certain warning?\n\nIn rare cases, you'll need to break a rule and hide the warning generated by\n`standard`.\n\nJavaScript Standard Style uses [ESLint](http://eslint.org/) under-the-hood and\nyou can hide warnings as you normally would if you used ESLint directly.\n\nTo get verbose output (so you can find the particular rule name to ignore), run:\n\n```bash\n$ standard --verbose\nError: Use JavaScript Standard Style\n  routes/error.js:20:36: 'file' was used before it was defined. (no-use-before-define)\n```\n\nDisable **all rules** on a specific line:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line\n```\n\nOr, disable **only** the `\"no-use-before-define\"` rule:\n\n```js\nfile = 'I know what I am doing' // eslint-disable-line no-use-before-define\n```\n\nOr, disable the `\"no-use-before-define\"` rule for **multiple lines**:\n\n```js\n/* eslint-disable no-use-before-define */\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\nconsole.log('offending code goes here...')\n/* eslint-enable no-use-before-define */\n```\n\n## I use a library that pollutes the global namespace. How do I prevent \"variable is not defined\" errors?\n\nSome packages (e.g. `mocha`) put their functions (e.g. `describe`, `it`) on the\nglobal object (poor form!). Since these functions are not defined or `require`'d\nanywhere in your code, `standard` will warn that you're using a variable that is\nnot defined (usually, this rule is really useful for catching typos!). But we want\nto disable it for these global variables.\n\nTo let `standard` (as well as humans reading your code) know that certain variables\nare global in your code, add this to the top of your file:\n\n```js\n/* global myVar1, myVar2 */\n```\n\nIf you have hundreds of files, it may be desirable to avoid adding comments to\nevery file. In this case, run:\n\n```bash\n$ standard --global myVar1 --global myVar2\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"globals\": [ \"myVar1\", \"myVar2\" ]\n  }\n}\n```\n\n*Note: `global` and `globals` are equivalent.*\n\n## How do I use experimental JavaScript (ES Next) features?\n\n`standard` supports the latest ECMAScript features, ES8 (ES2017), including\nlanguage feature proposals that are in \"Stage 4\" of the proposal process.\n\nTo support experimental language features, `standard` supports specifying a\ncustom JavaScript parser. Before using a custom parser, consider whether the added\ncomplexity is worth it.\n\nTo use a custom parser, first install it from npm:\n\n```bash\nnpm install babel-eslint --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\"\n  }\n}\n```\n\n## Can I use a JavaScript language variant, like Flow or TypeScript?\n\n`standard` supports the latest ECMAScript features. However, Flow and TypeScript add new\nsyntax to the language, so they are not supported out-of-the-box.\n\nTo support JavaScript language variants, `standard` supports specifying a custom JavaScript\nparser as well as an ESLint plugin to handle the changed syntax. Before using a JavaScript\nlanguage variant, consider whether the added complexity is worth it.\n\n### Flow\n\nTo use Flow, you need to run `standard` with `babel-eslint` as the parser and\n`eslint-plugin-flowtype` as a plugin.\n\n```bash\nnpm install babel-eslint eslint-plugin-flowtype --save-dev\n```\n\nThen run:\n\n```bash\n$ standard --parser babel-eslint --plugin flowtype\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"standard\": {\n    \"parser\": \"babel-eslint\",\n    \"plugins\": [ \"flowtype\" ]\n  }\n}\n```\n\n*Note: `plugin` and `plugins` are equivalent.*\n\n### TypeScript\n\nTo use TypeScript, you need to run `standard` with `@typescript-eslint/parser` as the parser,\n`@typescript-eslint/eslint-plugin` as a plugin, and tell standard to lint `**/*.ts` files (since it\ndoesn't by default).\n\nUnfortunately, there's an outstanding [issue](https://github.com/standard/standard/issues/1283)\nwith `standard` and Typescript where `standard` would incorrectly emit unused-variable errors\n(e.g: when you import interfaces). And as a workaround, you need to use\n[standardx](https://github.com/standard/standardx) instead:sweat_smile:.\n\n```bash\nnpm install standardx @typescript-eslint/parser @typescript-eslint/eslint-plugin --save-dev\n```\n\nThen run:\n\n```bash\n$ standardx --parser @typescript-eslint/parser --plugin @typescript-eslint/eslint-plugin **/*.ts\n```\n\nOr, add this to `package.json`:\n\n```json\n{\n  \"eslintConfig\": {\n    \"rules\": {\n      \"no-unused-vars\": \"off\",\n      \"@typescript-eslint/no-unused-vars\": \"error\"\n    }\n  },\n  \"standardx\": {\n    \"parser\": \"@typescript-eslint/parser\",\n    \"plugins\": [ \"@typescript-eslint/eslint-plugin\" ]\n  }\n}\n```\n\nWith that in `package.json`, you can run:\n\n```bash\nstandardx **/*.ts\n```\n\nAnd you probably should remove `standard` too to avoid confusion where it's used by mistake\ninstead of `standardx`.\n\n```bash\nnpm uninstall standard\n```\n\n## What about Mocha, Jest, Jasmine, QUnit, etc?\n\nTo support mocha in test files, add this to the top of the test files:\n\n```js\n/* eslint-env mocha */\n```\n\nOr, run:\n\n```bash\n$ standard --env mocha\n```\n\nWhere `mocha` can be one of `jest`, `jasmine`, `qunit`, `phantomjs`, and so on. To see a\nfull list, check ESLint's\n[specifying environments](http://eslint.org/docs/user-guide/configuring.html#specifying-environments)\ndocumentation. For a list of what globals are available for these environments,\ncheck the\n[globals](https://github.com/sindresorhus/globals/blob/master/globals.json) npm\nmodule.\n\n*Note: `env` and `envs` are equivalent.*\n\n## What about Web Workers and Service Workers?\n\nAdd this to the top of web worker files:\n\n```js\n/* eslint-env worker */\n```\n\nThis lets `standard` (as well as humans reading the code) know that `self` is a\nglobal in web worker code.\n\nFor Service workers, add this instead:\n\n```js\n/* eslint-env serviceworker */\n```\n\n## Can I check code inside of Markdown or HTML files?\n\nTo check code inside Markdown files, use [`standard-markdown`](https://www.npmjs.com/package/standard-markdown).\n\nAlternatively, there are ESLint plugins that can check code inside Markdown, HTML,\nand many other types of language files:\n\nTo check code inside Markdown files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-markdown\n```\n\nThen, to check JS that appears inside code blocks, run:\n\n```bash\n$ standard --plugin markdown '**/*.md'\n```\n\nTo check code inside HTML files, use an ESLint plugin:\n\n```bash\n$ npm install eslint-plugin-html\n```\n\nThen, to check JS that appears inside `<script>` tags, run:\n\n```bash\n$ standard --plugin html '**/*.html'\n```\n\n## Is there a Git `pre-commit` hook?\n\nFunny you should ask!\n\n```bash\n#!/bin/bash\n\n# Ensure all JavaScript files staged for commit pass standard code style\nfunction xargs-r() {\n  # Portable version of \"xargs -r\". The -r flag is a GNU extension that\n  # prevents xargs from running if there are no input files.\n  if IFS= read -r -d $'\\n' path; then\n    { echo \"$path\"; cat; } | xargs $@\n  fi\n}\ngit diff --name-only --cached --relative | grep '\\.jsx\\?$' | sed 's/[^[:alnum:]]/\\\\&/g' | xargs-r -E '' -t standard\nif [[ $? -ne 0 ]]; then\n  echo 'JavaScript Standard Style errors were detected. Aborting commit.'\n  exit 1\nfi\n```\n\n## How do I make the output all colorful and pretty?\n\nThe built-in output is simple and straightforward, but if you like shiny things,\ninstall [snazzy](https://www.npmjs.com/package/snazzy):\n\n```bash\n$ npm install snazzy\n```\n\nAnd run:\n\n```bash\n$ standard --verbose | snazzy\n```\n\nThere's also [standard-tap](https://www.npmjs.com/package/standard-tap),\n[standard-json](https://www.npmjs.com/package/standard-json),\n[standard-reporter](https://www.npmjs.com/package/standard-reporter), and\n[standard-summary](https://www.npmjs.com/package/standard-summary).\n\n## Is there a Node.js API?\n\nYes!\n\n### `standard.lintText(text, [opts], callback)`\n\nLint the provided source `text`. An `opts` object may be provided:\n\n```js\n{\n  cwd: '',      // current working directory (default: process.cwd())\n  filename: '', // path of the file containing the text being linted (optional, though some eslint plugins require it)\n  fix: false,   // automatically fix problems\n  globals: [],  // custom global variables to declare\n  plugins: [],  // custom eslint plugins\n  envs: [],     // custom eslint environment\n  parser: ''    // custom js parser (e.g. babel-eslint)\n}\n```\n\nAdditional options may be loaded from a `package.json` if it's found for the\ncurrent working directory.\n\nThe `callback` will be called with an `Error` and `results` object.\n\nThe `results` object will contain the following properties:\n\n```js\nvar results = {\n  results: [\n    {\n      filePath: '',\n      messages: [\n        { ruleId: '', message: '', line: 0, column: 0 }\n      ],\n      errorCount: 0,\n      warningCount: 0,\n      output: '' // fixed source code (only present with {fix: true} option)\n    }\n  ],\n  errorCount: 0,\n  warningCount: 0\n}\n```\n\n### `results = standard.lintTextSync(text, [opts])`\n\nSynchronous version of `standard.lintText()`. If an error occurs, an exception is\nthrown. Otherwise, a `results` object is returned.\n\n### `standard.lintFiles(files, [opts], callback)`\n\nLint the provided `files` globs. An `opts` object may be provided:\n\n```js\nvar opts = {\n  ignore: [],   // file globs to ignore (has sane defaults)\n  cwd: '',      // current working directory (default: process.cwd())\n  fix: false,   // automatically fix problems\n  globals: [],  // global variables to declare\n  plugins: [],  // eslint plugins\n  envs: [],     // eslint environment\n  parser: ''    // js parser (e.g. babel-eslint)\n}\n```\n\nThe `callback` will be called with an `Error` and `results` object (same as above).\n\n## How do I contribute to StandardJS?\n\nContributions are welcome! Check out the [issues](https://github.com/standard/standard/issues) or the [PRs](https://github.com/standard/standard/pulls), and make your own if you want something that you don't see there.\n\nWant to chat? Join contributors on IRC in the `#standard` channel on freenode.\n\nHere are some important packages in the `standard` ecosystem:\n\n- **[standard](https://github.com/standard/standard)** - this repo\n  - **[standard-engine](https://github.com/standard/standard-engine)** - cli engine for arbitrary eslint rules\n  - **[eslint-config-standard](https://github.com/standard/eslint-config-standard)** - eslint rules for standard\n  - **[eslint-config-standard-jsx](https://github.com/standard/eslint-config-standard-jsx)** - eslint rules for standard (JSX)\n  - **[eslint-plugin-standard](https://github.com/standard/eslint-plugin-standard)** - custom eslint rules for standard (not part of eslint core)\n  - **[eslint](https://github.com/eslint/eslint)** - the linter that powers standard\n- **[snazzy](https://github.com/standard/snazzy)** - pretty terminal output for standard\n- **[standard-www](https://github.com/standard/standard-www)** - code for https://standardjs.com\n- **[semistandard](https://github.com/standard/semistandard)** - standard, with semicolons (if you must)\n- **[standardx](https://github.com/standard/standardx)** - standard, with custom tweaks\n\nThere are also many **[editor plugins](#are-there-text-editor-plugins)**, a list of\n**[npm packages that use `standard`](https://github.com/standard/standard-packages)**,\nand an awesome list of\n**[packages in the `standard` ecosystem](https://github.com/standard/awesome-standard)**.\n\n## Security Policies and Procedures\n\nThe `standard` team and community take all security bugs in `standard` seriously. Please see our [security policies and procedures](https://github.com/standard/.github/blob/master/SECURITY.md) document to learn how to report issues.\n\n## License\n\n[MIT](LICENSE). Copyright (c) [Feross Aboukhadijeh](https://feross.org)."}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 14318}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 263138}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1028188}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3135935}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 5428760}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 10168455}], "dependentsCount": 386, "starsCount": 162}, "github": {"homepage": "https://standardjs.com", "starsCount": 23698, "forksCount": 1826, "subscribersCount": 467, "issues": {"count": 1494, "openCount": 124, "distribution": {"3600": 254, "10800": 103, "32400": 128, "97200": 176, "291600": 133, "874800": 134, "2624400": 133, "7873200": 136, "23619600": 189, "70858800": 61, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "feross", "commitsCount": 972}, {"username": "devjin0617", "commitsCount": 42}, {"username": "Flet", "commitsCount": 31}, {"username": "munierujp", "commitsCount": 31}, {"username": "greenkeeper[bot]", "commitsCount": 17}, {"username": "Asoul", "commitsCount": 15}, {"username": "LinusU", "commitsCount": 11}, {"username": "falmar", "commitsCount": 11}, {"username": "maxogden", "commitsCount": 10}, {"username": "greenkeeperio-bot", "commitsCount": 9}, {"username": "rstacruz", "commitsCount": 9}, {"username": "RichardLitt", "commitsCount": 5}, {"username": "ahmadnassri", "commitsCount": 5}, {"username": "watson", "commitsCount": 5}, {"username": "dangen-effy", "commitsCount": 4}, {"username": "imrobinized", "commitsCount": 4}, {"username": "joshuacolvin", "commitsCount": 4}, {"username": "kohashi", "commitsCount": 4}, {"username": "ricardofbarros", "commitsCount": 4}, {"username": "wayou", "commitsCount": 4}, {"username": "capaj", "commitsCount": 3}, {"username": "chenxsan", "commitsCount": 3}, {"username": "pablopunk", "commitsCount": 3}, {"username": "reggi", "commitsCount": 3}, {"username": "tusharmath", "commitsCount": 3}, {"username": "yoshuawuyts", "commitsCount": 3}, {"username": "HCLonely", "commitsCount": 2}, {"username": "LitoMore", "commitsCount": 2}, {"username": "alexmoreno", "commitsCount": 2}, {"username": "bcomnes", "commitsCount": 2}, {"username": "brandonhorst", "commitsCount": 2}, {"username": "charliegerard", "commitsCount": 2}, {"username": "coderberry", "commitsCount": 2}, {"username": "daper", "commitsCount": 2}, {"username": "ehmicky", "commitsCount": 2}, {"username": "gustavnikolaj", "commitsCount": 2}, {"username": "helloitsjoe", "commitsCount": 2}, {"username": "jelz", "commitsCount": 2}, {"username": "mafintosh", "commitsCount": 2}, {"username": "mightyiam", "commitsCount": 2}, {"username": "mnquintana", "commitsCount": 2}, {"username": "prigara", "commitsCount": 2}, {"username": "sonicdoe", "commitsCount": 2}, {"username": "theoomoregbee", "commitsCount": 2}, {"username": "timoxley", "commitsCount": 2}, {"username": "tzmanics", "commitsCount": 2}, {"username": "ungoldman", "commitsCount": 2}, {"username": "vweevers", "commitsCount": 2}, {"username": "zigomir", "commitsCount": 2}, {"username": "AlexxNica", "commitsCount": 1}, {"username": "Amabel", "commitsCount": 1}, {"username": "CafeLungo", "commitsCount": 1}, {"username": "Gerhut", "commitsCount": 1}, {"username": "JaKXz", "commitsCount": 1}, {"username": "LionNatsu", "commitsCount": 1}, {"username": "MarvinJWendt", "commitsCount": 1}, {"username": "Nishisonic", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "Tommytrg", "commitsCount": 1}, {"username": "Vrq", "commitsCount": 1}, {"username": "aaronhong", "commitsCount": 1}, {"username": "adriantrunzo", "commitsCount": 1}, {"username": "ahimta", "commitsCount": 1}, {"username": "aichholzer", "commitsCount": 1}, {"username": "aladdin-add", "commitsCount": 1}, {"username": "andresattler", "commitsCount": 1}, {"username": "anteriovieira", "commitsCount": 1}, {"username": "austinorth", "commitsCount": 1}, {"username": "callmecavs", "commitsCount": 1}, {"username": "cnwangjie", "commitsCount": 1}, {"username": "davecarlson", "commitsCount": 1}, {"username": "despia", "commitsCount": 1}, {"username": "didilinkin", "commitsCount": 1}, {"username": "domdomegg", "commitsCount": 1}, {"username": "eladchen", "commitsCount": 1}, {"username": "elowes", "commitsCount": 1}, {"username": "ematipico", "commitsCount": 1}, {"username": "epixian", "commitsCount": 1}, {"username": "erikmueller", "commitsCount": 1}, {"username": "fa7ad", "commitsCount": 1}, {"username": "html5cat", "commitsCount": 1}, {"username": "iaurg", "commitsCount": 1}, {"username": "igorsantos07", "commitsCount": 1}, {"username": "jaredreich", "commitsCount": 1}, {"username": "josephfrazier", "commitsCount": 1}, {"username": "joshuagoran", "commitsCount": 1}, {"username": "jtrussell", "commitsCount": 1}, {"username": "lbbaldassari", "commitsCount": 1}, {"username": "lukasoppermann", "commitsCount": 1}, {"username": "mackermans", "commitsCount": 1}, {"username": "masylum", "commitsCount": 1}, {"username": "nyuszika7h", "commitsCount": 1}, {"username": "pe4cey", "commitsCount": 1}, {"username": "peterjenkins", "commitsCount": 1}, {"username": "termosa", "commitsCount": 1}, {"username": "tonyfinn", "commitsCount": 1}, {"username": "tumobi", "commitsCount": 1}, {"username": "xiaoyu2er", "commitsCount": 1}, {"username": "yanxi-me", "commitsCount": 1}, {"username": "yyjazsf", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 5}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 14}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 18}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 222}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 32374, "testsSize": 5296, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/standard/standard/master.svg", "service": "https://api.travis-ci.org/standard/standard.svg?branch=master", "shields": "https://img.shields.io/travis/standard/standard/master.svg", "content": "https://img.shields.io/travis/standard/standard/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/standard.svg", "shields": "https://img.shields.io/npm/v/standard.svg", "content": "https://img.shields.io/npm/v/standard.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-standard.svg", "content": "https://img.shields.io/npm/dm/eslint-config-standard.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig"], "outdatedDependencies": {"eslint-plugin-node": {"required": "~10.0.0", "stable": "11.1.0", "latest": "11.1.0"}, "eslint-plugin-react": {"required": "~7.14.2", "stable": "7.19.0", "latest": "7.19.0"}, "eslint-plugin-import": {"required": "~2.18.0", "stable": "2.20.2", "latest": "2.20.2"}, "eslint": {"required": "~6.8.0", "stable": "7.0.0", "latest": "7.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6749999999999999, "health": 0.5, "branding": 0.85}, "popularity": {"communityInterest": 26253, "downloadsCount": 1045311.6666666666, "downloadsAcceleration": 2178.787366818874, "dependentsCount": 386}, "maintenance": {"releasesFrequency": 0.8652397260273973, "commitsFrequency": 0.934986301369863, "openIssues": 1, "issuesDistribution": 0.29884452028442043}}, "score": {"final": 0.7802040742898477, "detail": {"quality": 0.8947145306152708, "popularity": 0.5353920945961853, "maintenance": 0.9268642342760047}}}}, {"@babel/plugin-proposal-class-properties": {"analyzedAt": "2020-06-04T04:36:32.793Z", "collected": {"metadata": {"name": "@babel/plugin-proposal-class-properties", "scope": "babel", "version": "7.10.1", "description": "This plugin transforms static class properties as well as properties declared with the property initializer syntax", "keywords": ["babel-plugin"], "date": "2020-05-27T22:08:36.753Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-plugin-proposal-class-properties"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fplugin-proposal-class-properties", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-create-class-features-plugin": "^7.10.1", "@babel/helper-plugin-utils": "^7.10.1"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 30}], "readme": "# @babel/plugin-proposal-class-properties\n\n> This plugin transforms static class properties as well as properties declared with the property initializer syntax\n\nSee our website [@babel/plugin-proposal-class-properties](https://babeljs.io/docs/en/next/babel-plugin-proposal-class-properties.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/plugin-proposal-class-properties\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/plugin-proposal-class-properties --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1708988}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8946784}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 34700067}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 97899096}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 172445800}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 300351134}], "dependentsCount": 2839, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36700, "forksCount": 4308, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1238, "291600": 1053, "874800": 1008, "2624400": 847, "7873200": 807, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 498, "testsSize": 503491, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 41975, "downloadsCount": 32633032, "downloadsAcceleration": 117235.37096651446, "dependentsCount": 2839}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2398263939099552}}, "score": {"final": 0.8918744795849585, "detail": {"quality": 0.9567054106307213, "popularity": 0.8383673583504571, "maintenance": 0.8898122313516634}}}}, {"eslint-config-airbnb-base": {"analyzedAt": "2020-06-11T06:43:27.724Z", "collected": {"metadata": {"name": "eslint-config-airbnb-base", "scope": "unscoped", "version": "14.2.0", "description": "Airbnb's base JS ESLint config, following our styleguide", "keywords": ["eslint", "eslintconfig", "config", "airbnb", "javascript", "styleguide", "es2015", "es2016", "es2017", "es2018"], "date": "2020-06-11T06:39:44.801Z", "author": {"name": "Jake Teton-Landis", "url": "https://twitter.com/@jitl"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "airbnbeng", "email": "opensource@airbnb.com"}, {"username": "etienne_tripier", "email": "etienne.tripier@airbnb.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "milesj", "email": "mileswjohnson@gmail.com"}, {"username": "noratarano", "email": "noratarano@gmail.com"}, {"username": "schleyfox", "email": "ben@pixelmachine.org"}, {"username": "sharmilajesupaul", "email": "tosharmila@gmail.com"}], "contributors": [{"name": "Jake Teton-Landis", "url": "https://twitter.com/jitl"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com", "url": "http://ljharb.codes"}, {"name": "Harrison Shoff", "url": "https://twitter.com/hshoff"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/javascript.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-config-airbnb-base", "homepage": "https://github.com/airbnb/javascript", "repository": "https://github.com/airbnb/javascript", "bugs": "https://github.com/airbnb/javascript/issues"}, "license": "MIT", "dependencies": {"confusing-browser-globals": "^1.0.9", "object.assign": "^4.1.0", "object.entries": "^1.1.2"}, "devDependencies": {"@babel/runtime": "^7.8.7", "babel-preset-airbnb": "^4.5.0", "babel-tape-runner": "^3.0.0", "eclint": "^2.8.1", "eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-find-rules": "^3.5.0", "eslint-plugin-import": "^2.21.2", "in-publish": "^2.0.1", "safe-publish-latest": "^1.1.4", "tape": "^5.0.1"}, "peerDependencies": {"eslint": "^5.16.0 || ^6.8.0 || ^7.2.0", "eslint-plugin-import": "^2.21.2"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# eslint-config-airbnb-base\n\n[![npm version](https://badge.fury.io/js/eslint-config-airbnb-base.svg)](http://badge.fury.io/js/eslint-config-airbnb-base)\n\nThis package provides Airbnb's base JS .eslintrc (without React plugins) as an extensible shared config.\n\n## Usage\n\nWe export two ESLint configurations for your usage.\n\n### eslint-config-airbnb-base\n\nOur default export contains all of our ESLint rules, including ECMAScript 6+. It requires `eslint` and `eslint-plugin-import`.\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb-base@latest\" peerDependencies\n  ```\n\n  If using **npm 5+**, use this shortcut\n\n  ```sh\n  npx install-peerdeps --dev eslint-config-airbnb-base\n  ```\n\n  If using **yarn**, you can also use the shortcut described above if you have npm 5+ installed on your machine, as the command will detect that you are using yarn and will act accordingly.\n  Otherwise, run `npm info \"eslint-config-airbnb-base@latest\" peerDependencies` to list the peer dependencies and versions, then run `yarn add --dev <dependency>@<version>` for each listed peer dependency.\n\n\n  If using **npm < 5**, Linux/OSX users can run\n\n  ```sh\n  (\n    export PKG=eslint-config-airbnb-base;\n    npm info \"$PKG@latest\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG@latest\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n    npm install --save-dev eslint-config-airbnb-base eslint@^#.#.# eslint-plugin-import@^#.#.#\n  ```\n\n  If using **npm < 5**, Windows users can either install all the peer dependencies manually, or use the [install-peerdeps](https://github.com/nathanhleung/install-peerdeps) cli tool.\n\n  ```sh\n  npm install -g install-peerdeps\n  install-peerdeps --dev eslint-config-airbnb-base\n  ```\n\n  The cli will produce and run a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb-base eslint@^#.#.# eslint-plugin-import@^#.#.#\n  ```\n\n2. Add `\"extends\": \"airbnb-base\"` to your .eslintrc.\n\n### eslint-config-airbnb-base/legacy\n\nLints ES5 and below. Requires `eslint` and `eslint-plugin-import`.\n\n1. Install the correct versions of each package, which are listed by the command:\n\n  ```sh\n  npm info \"eslint-config-airbnb-base@latest\" peerDependencies\n  ```\n\n  Linux/OSX users can run\n  ```sh\n  (\n    export PKG=eslint-config-airbnb-base;\n    npm info \"$PKG\" peerDependencies --json | command sed 's/[\\{\\},]//g ; s/: /@/g' | xargs npm install --save-dev \"$PKG\"\n  )\n  ```\n\n  Which produces and runs a command like:\n\n  ```sh\n  npm install --save-dev eslint-config-airbnb-base eslint@^3.0.1 eslint-plugin-import@^1.10.3\n  ```\n\n2. Add `\"extends\": \"airbnb-base/legacy\"` to your .eslintrc\n\nSee [Airbnb's overarching ESLint config](https://npmjs.com/eslint-config-airbnb), [Airbnb's JavaScript styleguide](https://github.com/airbnb/javascript), and the [ESlint config docs](https://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information.\n\n### eslint-config-airbnb-base/whitespace\n\nThis entry point only errors on whitespace rules and sets all other rules to warnings. View the list of whitespace rules [here](https://github.com/airbnb/javascript/blob/master/packages/eslint-config-airbnb-base/whitespace.js).\n\n## Improving this config\n\nConsider adding test cases if you're making complicated rules changes, like anything involving regexes. Perhaps in a distant future, we could use literate programming to structure our README as test cases for our .eslintrc?\n\nYou can run tests with `npm test`.\n\nYou can make sure this module lints with itself using `npm run lint`."}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 571969}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3046650}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 13142375}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 38563595}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 67535608}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 120517833}], "dependentsCount": 1279, "starsCount": 58}, "github": {"starsCount": 96929, "forksCount": 18845, "subscribersCount": 3634, "issues": {"count": 2203, "openCount": 116, "distribution": {"3600": 617, "10800": 246, "32400": 337, "97200": 216, "291600": 185, "874800": 113, "2624400": 117, "7873200": 106, "23619600": 85, "70858800": 87, "212576400": 94}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 502}, {"username": "hshoff", "commitsCount": 166}, {"username": "lencioni", "commitsCount": 50}, {"username": "architectcodes", "commitsCount": 19}, {"username": "sharmilajesupaul", "commitsCount": 16}, {"username": "vsemozhetbyt", "commitsCount": 15}, {"username": "1pete", "commitsCount": 14}, {"username": "ssorallen", "commitsCount": 13}, {"username": "goatslacker", "commitsCount": 12}, {"username": "chrisngobanh", "commitsCount": 10}, {"username": "thisconnect", "commitsCount": 9}, {"username": "SimenB", "commitsCount": 8}, {"username": "Ryan-McBride", "commitsCount": 7}, {"username": "taion", "commitsCount": 7}, {"username": "bl00mber", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "felipethome", "commitsCount": 5}, {"username": "graingert", "commitsCount": 5}, {"username": "joaomilho", "commitsCount": 5}, {"username": "kevinweber", "commitsCount": 5}, {"username": "mitsuruog", "commitsCount": 5}, {"username": "spikebrehm", "commitsCount": 5}, {"username": "simono", "commitsCount": 4}, {"username": "vladshcherbin", "commitsCount": 4}, {"username": "AlicanC", "commitsCount": 3}, {"username": "RobLoach", "commitsCount": 3}, {"username": "adrienverge", "commitsCount": 3}, {"username": "amsardesai", "commitsCount": 3}, {"username": "asherdale", "commitsCount": 3}, {"username": "camazorro", "commitsCount": 3}, {"username": "chentsulin", "commitsCount": 3}, {"username": "jabacchetta", "commitsCount": 3}, {"username": "karanjthakkar", "commitsCount": 3}, {"username": "kripod", "commitsCount": 3}, {"username": "leonidlebedev", "commitsCount": 3}, {"username": "lvarayut", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "pigoz", "commitsCount": 3}, {"username": "raunofreiberg", "commitsCount": 3}, {"username": "remcohaszing", "commitsCount": 3}, {"username": "trshafer", "commitsCount": 3}, {"username": "unkillbob", "commitsCount": 3}, {"username": "0xCMP", "commitsCount": 2}, {"username": "A-Tokyo", "commitsCount": 2}, {"username": "ClimbsRocks", "commitsCount": 2}, {"username": "Doweig", "commitsCount": 2}, {"username": "Ensive", "commitsCount": 2}, {"username": "HerringtonDarkholme", "commitsCount": 2}, {"username": "JBallin", "commitsCount": 2}, {"username": "KevinGrandon", "commitsCount": 2}, {"username": "NLDev", "commitsCount": 2}, {"username": "ParkSB", "commitsCount": 2}, {"username": "TheSavior", "commitsCount": 2}, {"username": "akai", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "atkinchris", "commitsCount": 2}, {"username": "bertho-zero", "commitsCount": 2}, {"username": "billyjanitsch", "commitsCount": 2}, {"username": "carterchung", "commitsCount": 2}, {"username": "cmalard", "commitsCount": 2}, {"username": "coliff", "commitsCount": 2}, {"username": "cooperka", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "daxelrod", "commitsCount": 2}, {"username": "evenfrost", "commitsCount": 2}, {"username": "fbergr", "commitsCount": 2}, {"username": "felixsanz", "commitsCount": 2}, {"username": "frenzzy", "commitsCount": 2}, {"username": "fvgs", "commitsCount": 2}, {"username": "gmccue", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "honzi", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "iamnirav", "commitsCount": 2}, {"username": "johnmanong", "commitsCount": 2}, {"username": "jondubin", "commitsCount": 2}, {"username": "kamronbatman", "commitsCount": 2}, {"username": "kaplanmaxe", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "lasota-piotr", "commitsCount": 2}, {"username": "liuchong", "commitsCount": 2}, {"username": "mifi", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "nicoder", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "olistic", "commitsCount": 2}, {"username": "pra85", "commitsCount": 2}, {"username": "rodocite", "commitsCount": 2}, {"username": "ronal2do", "commitsCount": 2}, {"username": "sangaman", "commitsCount": 2}, {"username": "sidoshi", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "sindrenm", "commitsCount": 2}, {"username": "spen", "commitsCount": 2}, {"username": "thepeoplesbourgeois", "commitsCount": 2}, {"username": "tikotzky", "commitsCount": 2}, {"username": "timofurrer", "commitsCount": 2}, {"username": "uzumaxy", "commitsCount": 2}, {"username": "vahan-hartooni", "commitsCount": 2}, {"username": "wyattdanger", "commitsCount": 2}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 9}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 13}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 32}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 91}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 3654, "testsSize": 1407, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "shields": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.svg", "content": "https://img.shields.io/npm/dm/eslint-config-airbnb-base.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6749999999999999, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 119566, "downloadsCount": 12854531.666666666, "downloadsAcceleration": 38226.325304414015, "dependentsCount": 1279}, "maintenance": {"releasesFrequency": 0.43458904109589047, "commitsFrequency": 0.9409178082191781, "openIssues": 1, "issuesDistribution": 0.2668729606981069}}, "score": {"final": 0.8594932750165185, "detail": {"quality": 0.9406867705065041, "popularity": 0.7659549747335492, "maintenance": 0.8834371505937858}}}}, {"rollup-plugin-commonjs": {"analyzedAt": "2020-06-13T03:37:30.360Z", "collected": {"metadata": {"name": "rollup-plugin-commonjs", "scope": "unscoped", "version": "10.1.0", "description": "Convert CommonJS modules to ES2015", "date": "2019-08-27T06:47:22.227Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "shellscape", "email": "andrew@shellscape.org"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup-plugin-commonjs.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-commonjs", "homepage": "https://github.com/rollup/rollup-plugin-commonjs", "repository": "https://github.com/rollup/rollup-plugin-commonjs", "bugs": "https://github.com/rollup/rollup-plugin-commonjs/issues"}, "license": "MIT", "dependencies": {"estree-walker": "^0.6.1", "is-reference": "^1.1.2", "magic-string": "^0.25.2", "resolve": "^1.11.0", "rollup-pluginutils": "^2.8.1"}, "devDependencies": {"@babel/core": "^7.4.5", "@babel/preset-env": "^7.4.5", "@babel/register": "^7.4.4", "acorn": "^6.1.1", "eslint": "^6.0.1", "eslint-plugin-import": "^2.18.0", "husky": "^2.4.1", "lint-staged": "^8.2.1", "locate-character": "^2.0.5", "mocha": "^6.1.4", "prettier": "^1.18.2", "require-relative": "^0.8.7", "rollup": "^1.16.2", "rollup-plugin-babel": "^4.3.3", "rollup-plugin-json": "^4.0.0", "rollup-plugin-node-resolve": "^5.1.0", "shx": "^0.3.2", "source-map": "^0.6.1", "source-map-support": "^0.5.12", "typescript": "^3.5.2"}, "peerDependencies": {"rollup": ">=1.12.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 19}], "deprecated": "This package has been deprecated and is no longer maintained. Please use @rollup/plugin-commonjs.", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-commonjs [![Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/rollup/rollup-plugin-commonjs.svg\n[travis]: https://travis-ci.org/rollup/rollup-plugin-commonjs\n\nConvert CommonJS modules to ES6, so they can be included in a Rollup bundle\n\n\n## Installation\n\n```bash\nnpm install --save-dev rollup-plugin-commonjs\n```\n\n\n## Usage\n\nTypically, you would use this plugin alongside [rollup-plugin-node-resolve](https://github.com/rollup/rollup-plugin-node-resolve), so that you could bundle your CommonJS dependencies in `node_modules`.\n\n```js\n// rollup.config.js\nimport commonjs from 'rollup-plugin-commonjs';\nimport nodeResolve from 'rollup-plugin-node-resolve';\n\nexport default {\n  input: 'main.js',\n  output: {\n    file: 'bundle.js',\n    format: 'iife'\n  },\n  plugins: [\n    nodeResolve({\n      jsnext: true,\n      main: true\n    }),\n\n    commonjs({\n      // non-CommonJS modules will be ignored, but you can also\n      // specifically include/exclude files\n      include: 'node_modules/**',  // Default: undefined\n      exclude: [ 'node_modules/foo/**', 'node_modules/bar/**' ],  // Default: undefined\n      // these values can also be regular expressions\n      // include: /node_modules/\n\n      // search for files other than .js files (must already\n      // be transpiled by a previous plugin!)\n      extensions: [ '.js', '.coffee' ],  // Default: [ '.js' ]\n\n      // if true then uses of `global` won't be dealt with by this plugin\n      ignoreGlobal: false,  // Default: false\n\n      // if false then skip sourceMap generation for CommonJS modules\n      sourceMap: false,  // Default: true\n\n      // explicitly specify unresolvable named exports\n      // (see below for more details)\n      namedExports: { 'react': ['createElement', 'Component' ] },  // Default: undefined\n\n      // sometimes you have to leave require statements\n      // unconverted. Pass an array containing the IDs\n      // or a `id => boolean` function. Only use this\n      // option if you know what you're doing!\n      ignore: [ 'conditional-runtime-dependency' ]\n    })\n  ]\n};\n```\n\n### Usage with symlinks\n\nSymlinks are common in monorepos and are also created by the `npm link` command. Rollup with `rollup-plugin-node-resolve` resolves modules to their real paths by default. So `include` and `exclude` paths should handle real paths rather than symlinked paths (e.g. `../common/node_modules/**` instead of `node_modules/**`). You may also use a regular expression for `include` that works regardless of base path. Try this:\n\n```\ncommonjs({\n  include: /node_modules/\n})\n```\n\nWhether symlinked module paths are [realpathed](http://man7.org/linux/man-pages/man3/realpath.3.html) or preserved depends on Rollup's `preserveSymlinks` setting, which is false by default, matching Node.js' default behavior. Setting `preserveSymlinks` to true in your Rollup config will cause `import` and `export` to match based on symlinked paths instead.\n\n### Custom named exports\n\nThis plugin will attempt to create named exports, where appropriate, so you can do this...\n\n```js\n// importer.js\nimport { named } from './exporter.js';\n\n// exporter.js\nmodule.exports = { named: 42 }; // or `exports.named = 42;`\n```\n\n...but that's not always possible:\n\n```js\n// importer.js\nimport { named } from 'my-lib';\n\n// my-lib.js\nvar myLib = exports;\nmyLib.named = 'you can\\'t see me';\n```\n\nIn those cases, you can specify custom named exports:\n\n```js\ncommonjs({\n  namedExports: {\n    // left-hand side can be an absolute path, a path\n    // relative to the current directory, or the name\n    // of a module in node_modules\n    'my-lib': [ 'named' ]\n  }\n})\n```\n\n\n## Strict mode\n\nES modules are *always* parsed in strict mode. That means that certain non-strict constructs (like octal literals) will be treated as syntax errors when Rollup parses modules that use them. Some older CommonJS modules depend on those constructs, and if you depend on them your bundle will blow up. There's basically nothing we can do about that.\n\nLuckily, there is absolutely no good reason *not* to use strict mode for everything \u2014 so the solution to this problem is to lobby the authors of those modules to update them.\n\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 70656}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 473083}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2079251}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6685778}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13469357}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26908719}], "dependentsCount": 905, "starsCount": 4}, "github": {"starsCount": 472, "forksCount": 123, "subscribersCount": 14, "issues": {"count": 423, "openCount": 0, "distribution": {"3600": 45, "10800": 14, "32400": 21, "97200": 30, "291600": 27, "874800": 30, "2624400": 39, "7873200": 66, "23619600": 47, "70858800": 74, "212576400": 30}, "isDisabled": false}, "contributors": [{"username": "Rich-Harris", "commitsCount": 142}, {"username": "lukastaegert", "commitsCount": 65}, {"username": "TrySound", "commitsCount": 20}, {"username": "guybedford", "commitsCount": 10}, {"username": "MattiasBuelens", "commitsCount": 5}, {"username": "adrianheine", "commitsCount": 5}, {"username": "otolab", "commitsCount": 5}, {"username": "bterlson", "commitsCount": 4}, {"username": "tivac", "commitsCount": 4}, {"username": "unstubbable", "commitsCount": 4}, {"username": "calvinmetcalf", "commitsCount": 3}, {"username": "jthoms1", "commitsCount": 3}, {"username": "mbostock", "commitsCount": 3}, {"username": "MaartenX", "commitsCount": 2}, {"username": "NotWoods", "commitsCount": 2}, {"username": "Victorystick", "commitsCount": 2}, {"username": "dmitrage", "commitsCount": 2}, {"username": "jnields", "commitsCount": 2}, {"username": "mister-what", "commitsCount": 2}, {"username": "nicolashenry", "commitsCount": 2}, {"username": "pshrmn", "commitsCount": 2}, {"username": "shellscape", "commitsCount": 2}, {"username": "DenisCarriere", "commitsCount": 1}, {"username": "Manduro", "commitsCount": 1}, {"username": "NathanielHill", "commitsCount": 1}, {"username": "Torsten85", "commitsCount": 1}, {"username": "Tundon", "commitsCount": 1}, {"username": "aleclarson", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "bhousel", "commitsCount": 1}, {"username": "btd", "commitsCount": 1}, {"username": "caleb531", "commitsCount": 1}, {"username": "creationix", "commitsCount": 1}, {"username": "dralletje", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "jharris4", "commitsCount": 1}, {"username": "lautis", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "madbence", "commitsCount": 1}, {"username": "maranomynet", "commitsCount": 1}, {"username": "marijnh", "commitsCount": 1}, {"username": "ntilwalli", "commitsCount": 1}, {"username": "opichals", "commitsCount": 1}, {"username": "porsager", "commitsCount": 1}, {"username": "sormy", "commitsCount": 1}, {"username": "tionkje", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 17}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 4200, "testsSize": 40134, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/rollup/rollup-plugin-commonjs.svg", "service": "https://api.travis-ci.org/rollup/rollup-plugin-commonjs.svg", "shields": "https://img.shields.io/travis/rollup/rollup-plugin-commonjs.svg", "content": "https://img.shields.io/travis/rollup/rollup-plugin-commonjs.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint", "prettier"], "outdatedDependencies": {"estree-walker": {"required": "^0.6.1", "stable": "2.0.1", "latest": "2.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 661, "downloadsCount": 2228592.6666666665, "downloadsAcceleration": -826.7269596651458, "dependentsCount": 905}, "maintenance": {"releasesFrequency": 0.5782534246575343, "commitsFrequency": 0.19561643835616438, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5392778577532706, "detail": {"quality": 0.6059677757159514, "popularity": 0.3989246298393595, "maintenance": 0.6224682988420268}}}}, {"@types/mocha": {"analyzedAt": "2019-05-30T18:06:39.562Z", "collected": {"metadata": {"name": "@types/mocha", "scope": "types", "version": "5.2.7", "description": "TypeScript definitions for mocha", "date": "2019-05-30T18:06:22.403Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Kazi Manzur Rashid", "url": "https://github.com/kazimanzurrashid"}, {"name": "otiai10", "url": "https://github.com/otiai10"}, {"name": "jt000", "url": "https://github.com/jt000"}, {"name": "Vadim Macagon", "url": "https://github.com/enlight"}, {"name": "Andrew Bradley", "url": "https://github.com/cspotcode"}, {"name": "Dmitrii Sorin", "url": "https://github.com/1999"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/mocha"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fmocha", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-04-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 0}, {"from": "2019-03-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 0}, {"from": "2018-12-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 1}, {"from": "2018-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 6}, {"from": "2017-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 16}], "readme": "# Installation\r\n> `npm install --save @types/mocha`\r\n\r\n# Summary\r\nThis package contains type definitions for mocha ( https://mochajs.org ).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/mocha\r\n\r\nAdditional Details\r\n * Last updated: Thu, 30 May 2019 18:05:34 GMT\r\n * Dependencies: none\r\n * Global values: Mocha, after, afterEach, before, beforeEach, context, describe, it, mocha, run, setup, specify, suite, suiteSetup, suiteTeardown, teardown, test, xcontext, xdescribe, xit, xspecify\r\n\r\n# Credits\r\nThese definitions were written by Kazi Manzur Rashid <https://github.com/kazimanzurrashid>, otiai10 <https://github.com/otiai10>, jt000 <https://github.com/jt000>, Vadim Macagon <https://github.com/enlight>, Andrew Bradley <https://github.com/cspotcode>, Dmitrii Sorin <https://github.com/1999>."}, "npm": {"downloads": [{"from": "2019-05-29T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 134423}, {"from": "2019-05-23T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 665890}, {"from": "2019-04-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 3122423}, {"from": "2019-03-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 9313436}, {"from": "2018-12-01T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 17203153}, {"from": "2018-05-30T00:00:00.000Z", "to": "2019-05-30T00:00:00.000Z", "count": 29667349}], "dependentsCount": 367, "starsCount": 2}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 2, "downloadsCount": 3104478.6666666665, "downloadsAcceleration": 9273.255612633184, "dependentsCount": 367}, "maintenance": {"releasesFrequency": 0.6090753424657535, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-mocha-stx2dpudtda/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-04-29T23:45:14.388Z"}, "score": {"final": 0.30118514417777176, "detail": {"quality": 0.198969320144589, "popularity": 0.3617227227297846, "maintenance": 0.3282611290827728}}}}, {"yargs": {"analyzedAt": "2020-06-04T09:19:01.861Z", "collected": {"metadata": {"name": "yargs", "scope": "unscoped", "version": "15.3.1", "description": "yargs the modern, pirate-themed, successor to optimist.", "keywords": ["argument", "args", "option", "parser", "parsing", "cli", "command"], "date": "2020-03-16T07:34:00.988Z", "publisher": {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}, "maintainers": [{"username": "bcoe", "email": "bencoe@gmail.com"}, {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}], "contributors": [{"name": "Yargs Contributors", "url": "https://github.com/yargs/yargs/graphs/contributors"}], "repository": {"type": "git", "url": "git+https://github.com/yargs/yargs.git"}, "links": {"npm": "https://www.npmjs.com/package/yargs", "homepage": "https://yargs.js.org/", "repository": "https://github.com/yargs/yargs", "bugs": "https://github.com/yargs/yargs/issues"}, "license": "MIT", "dependencies": {"cliui": "^6.0.0", "decamelize": "^1.2.0", "find-up": "^4.1.0", "get-caller-file": "^2.0.1", "require-directory": "^2.1.1", "require-main-filename": "^2.0.0", "set-blocking": "^2.0.0", "string-width": "^4.2.0", "which-module": "^2.0.0", "y18n": "^4.0.0", "yargs-parser": "^18.1.1"}, "devDependencies": {"c8": "^7.0.0", "chai": "^4.2.0", "chalk": "^3.0.0", "coveralls": "^3.0.9", "cpr": "^3.0.1", "cross-spawn": "^7.0.0", "es6-promise": "^4.2.5", "hashish": "0.0.4", "mocha": "^7.0.0", "rimraf": "^3.0.0", "standard": "^14.0.0", "which": "^2.0.0", "yargs-test-extends": "^1.0.1"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 38}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8671574}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 45263033}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 198008326}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 571898447}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1009144106}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1811745140}], "dependentsCount": 16416, "starsCount": 514}, "github": {"homepage": "http://yargs.js.org/", "starsCount": 7732, "forksCount": 749, "subscribersCount": 78, "issues": {"count": 1662, "openCount": 239, "distribution": {"3600": 216, "10800": 68, "32400": 98, "97200": 151, "291600": 171, "874800": 243, "2624400": 172, "7873200": 153, "23619600": 117, "70858800": 147, "212576400": 126}, "isDisabled": false}, "contributors": [{"username": "bcoe", "commitsCount": 242}, {"username": "substack", "commitsCount": 145}, {"username": "nexdrew", "commitsCount": 36}, {"username": "mleguen", "commitsCount": 35}, {"username": "maxrimue", "commitsCount": 23}, {"username": "greenkeeperio-bot", "commitsCount": 22}, {"username": "lrlna", "commitsCount": 18}, {"username": "elas7", "commitsCount": 15}, {"username": "nylen", "commitsCount": 11}, {"username": "chrisn", "commitsCount": 10}, {"username": "indexzero", "commitsCount": 9}, {"username": "jfhbrook", "commitsCount": 8}, {"username": "disjukr", "commitsCount": 7}, {"username": "osher", "commitsCount": 7}, {"username": "aorinevo", "commitsCount": 6}, {"username": "coreyfarrell", "commitsCount": 6}, {"username": "feyzo", "commitsCount": 5}, {"username": "laggingreflex", "commitsCount": 5}, {"username": "rilut", "commitsCount": 5}, {"username": "roryokane", "commitsCount": 5}, {"username": "tschaub", "commitsCount": 5}, {"username": "zkat", "commitsCount": 5}, {"username": "cameronhunter", "commitsCount": 4}, {"username": "codemonkey3045", "commitsCount": 4}, {"username": "coderarity", "commitsCount": 4}, {"username": "evocateur", "commitsCount": 4}, {"username": "kamilogorek", "commitsCount": 4}, {"username": "sgentle", "commitsCount": 4}, {"username": "trevorlinton", "commitsCount": 4}, {"username": "Khaledgarbaya", "commitsCount": 3}, {"username": "LinusU", "commitsCount": 3}, {"username": "LoicMahieu", "commitsCount": 3}, {"username": "Morishiri", "commitsCount": 3}, {"username": "novemberborn", "commitsCount": 3}, {"username": "oti", "commitsCount": 3}, {"username": "pirxpilot", "commitsCount": 3}, {"username": "qiu8310", "commitsCount": 3}, {"username": "raine", "commitsCount": 3}, {"username": "severen", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "sudo-suhas", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "DeadAlready", "commitsCount": 2}, {"username": "ashi009", "commitsCount": 2}, {"username": "babhishek21", "commitsCount": 2}, {"username": "bwagner", "commitsCount": 2}, {"username": "cg-cnu", "commitsCount": 2}, {"username": "chbrown", "commitsCount": 2}, {"username": "dogboydog", "commitsCount": 2}, {"username": "fizker", "commitsCount": 2}, {"username": "forivall", "commitsCount": 2}, {"username": "glenwinters", "commitsCount": 2}, {"username": "iarna", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jandockx", "commitsCount": 2}, {"username": "jdbruijn", "commitsCount": 2}, {"username": "kemitchell", "commitsCount": 2}, {"username": "madrisan", "commitsCount": 2}, {"username": "p0v1n0m", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "phanning", "commitsCount": 2}, {"username": "pvdlg", "commitsCount": 2}, {"username": "schnittstabil", "commitsCount": 2}, {"username": "soulgalore", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "AndrewFinlay", "commitsCount": 1}, {"username": "BigBlueHat", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "RobinCsl", "commitsCount": 1}, {"username": "aakti", "commitsCount": 1}, {"username": "andrewdotn", "commitsCount": 1}, {"username": "antonstefanov", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "cherryblossom000", "commitsCount": 1}, {"username": "cspotcode", "commitsCount": 1}, {"username": "dahim2006", "commitsCount": 1}, {"username": "dapplion", "commitsCount": 1}, {"username": "federicojasson", "commitsCount": 1}, {"username": "hogashi", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jaredgreen", "commitsCount": 1}, {"username": "jean-emmanuel", "commitsCount": 1}, {"username": "juergba", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "kidonng", "commitsCount": 1}, {"username": "mathielo", "commitsCount": 1}, {"username": "micha149", "commitsCount": 1}, {"username": "mtreinik", "commitsCount": 1}, {"username": "petrgrishin", "commitsCount": 1}, {"username": "royra", "commitsCount": 1}, {"username": "ruyadorno", "commitsCount": 1}, {"username": "rvolgers", "commitsCount": 1}, {"username": "sliftist", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "weswinder", "commitsCount": 1}, {"username": "yxliang01", "commitsCount": 1}, {"username": "zypA13510", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 37}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 75}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 151}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 335804, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "standard"], "coverage": 1, "outdatedDependencies": {"decamelize": {"required": "^1.2.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 0.8181818181818181, "branding": 0.4}, "popularity": {"communityInterest": 9171, "downloadsCount": 190632815.66666666, "downloadsAcceleration": 569815.7619101976, "dependentsCount": 16416}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8304830297191882, "detail": {"quality": 0.9408058531535813, "popularity": 0.8997369726850875, "maintenance": 0.6666666666666666}}}}, {"eslint-loader": {"analyzedAt": "2020-06-07T19:18:25.023Z", "collected": {"metadata": {"name": "eslint-loader", "scope": "unscoped", "version": "4.0.2", "description": "A ESlint loader for webpack", "keywords": ["eslint", "lint", "linter", "loader", "webpack"], "date": "2020-04-24T20:00:05.031Z", "author": {"name": "Maxime Thirouin"}, "publisher": {"username": "ricardogobbosouza", "email": "ricardogobbosouza@yahoo.com.br"}, "maintainers": [{"username": "moox", "email": "m@moox.io"}], "contributors": [{"name": "Ricardo Gobbo de Souza", "email": "ricardogobbosouza@yahoo.com.br"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/eslint-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-loader", "homepage": "https://github.com/webpack-contrib/eslint-loader", "repository": "https://github.com/webpack-contrib/eslint-loader", "bugs": "https://github.com/webpack-contrib/eslint-loader/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^3.3.1", "fs-extra": "^8.1.0", "loader-utils": "^2.0.0", "object-hash": "^2.0.3", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.0", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-eslint": "^10.1.0", "babel-jest": "^25.2.6", "chokidar": "^3.3.1", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-friendly-formatter": "^4.0.1", "eslint-plugin-import": "^2.20.2", "husky": "^4.2.3", "jest": "^25.2.6", "jest-junit": "^10.0.0", "lint-staged": "^10.1.1", "npm-run-all": "^4.1.5", "prettier": "^2.0.2", "standard-version": "^7.1.0", "webpack": "^4.42.1"}, "peerDependencies": {"eslint": "^6.0.0 || ^7.0.0", "webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/eslint/eslint\"><img width=\"200\" height=\"200\" src=\"https://cdn.worldvectorlogo.com/logos/eslint.svg\"></a>\n  <a href=\"https://github.com/webpack/webpack\"><img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\"></a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# eslint-loader\n\n> A ESlint loader for webpack\n\n## Install\n\n```bash\nnpm install eslint-loader --save-dev\n```\n\n**Note**: You also need to install `eslint` from npm, if you haven't already:\n\n```bash\nnpm install eslint --save-dev\n```\n\n## Usage\n\nIn your webpack configuration:\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          // eslint options (if necessary)\n        },\n      },\n    ],\n  },\n  // ...\n};\n```\n\nWhen using with transpiling loaders (like `babel-loader`), make sure they are in correct order (bottom to top). Otherwise files will be checked after being processed by `babel-loader`:\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        use: ['babel-loader', 'eslint-loader'],\n      },\n    ],\n  },\n  // ...\n};\n```\n\nTo be safe, you can use `enforce: 'pre'` section to check source files, not modified by other loaders (like `babel-loader`):\n\n```js\nmodule.exports = {\n  // ...\n  module: {\n    rules: [\n      {\n        enforce: 'pre',\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n      },\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'babel-loader',\n      },\n    ],\n  },\n  // ...\n};\n```\n\n## Options\n\nYou can pass [eslint options](http://eslint.org/docs/developer-guide/nodejs-api#cliengine) using standard webpack [loader options](https://webpack.js.org/configuration/module/#useentry).\n\n**Note**: That the config option you provide will be passed to the `CLIEngine`. This is a different set of options than what you'd specify in `package.json` or `.eslintrc`. See the [eslint docs](http://eslint.org/docs/developer-guide/nodejs-api#cliengine) for more detail.\n\n### `cache`\n\n- Type: `Boolean|String`\n- Default: `false`\n\nThis option will enable caching of the linting results into a file. This is particularly useful in reducing linting time when doing a full build.\n\nThis can either be a `boolean` value or the cache directory path(ex: `'./.eslint-loader-cache'`).\n\nIf `cache: true` is used, the cache is written to the `./node_modules/.cache/eslint-loader` directory. This is the recommended usage.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          cache: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `eslintPath`\n\n- Type: `String`\n- Default: `eslint`\n\nPath to `eslint` instance that will be used for linting. If the `eslintPath` is a folder like a official eslint, or specify a `formatter` option. Now you dont have to install `eslint`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          eslintPath: path.join(__dirname, 'reusable-eslint'),\n        },\n      },\n    ],\n  },\n};\n```\n\n### `fix`\n\n- Type: `Boolean`\n- Default: `false`\n\nThis option will enable [ESLint autofix feature](http://eslint.org/docs/user-guide/command-line-interface#fix).\n\n**Be careful: this option will change source files.**\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          fix: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `formatter`\n\n- Type: `String|Function`\n- Default: `stylish`\n\nThis option accepts a function that will have one argument: an array of eslint messages (object). The function must return the output as a string. You can use official [eslint formatters](https://eslint.org/docs/user-guide/formatters/).\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          // several examples !\n\n          // default value\n          formatter: 'stylish',\n\n          // community formatter\n          formatter: require('eslint-friendly-formatter'),\n\n          // custom formatter\n          formatter: function (results) {\n            // `results` format is available here\n            // http://eslint.org/docs/developer-guide/nodejs-api.html#executeonfiles()\n\n            // you should return a string\n            // DO NOT USE console.*() directly !\n            return 'OUTPUT';\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### Errors and Warning\n\n**By default the loader will auto adjust error reporting depending on eslint errors/warnings counts.** You can still force this behavior by using `emitError` **or** `emitWarning` options:\n\n#### `emitError`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill always return errors, if this option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          emitError: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `emitWarning`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill always return warnings, if option is set to `true`. **If you're using hot module replacement, you may wish to enable this in development, or else updates will be skipped when there's an eslint error.**\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          emitWarning: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `failOnError`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill cause the module build to fail if there are any errors, if option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          failOnError: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `failOnWarning`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill cause the module build to fail if there are any warnings, if option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          failOnWarning: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `quiet`\n\n- Type: `Boolean`\n- Default: `false`\n\nWill process and report errors only and ignore warnings, if this option is set to `true`.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          quiet: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `outputReport`\n\n- Type: `Boolean|Object`\n- Default: `false`\n\nWrite the output of the errors to a file, for example a checkstyle xml file for use for reporting on Jenkins CI.\n\nThe `filePath` is an absolute path or relative to the webpack config: `output.path`. You can pass in a different `formatter` for the output file, if none is passed in the default/configured formatter will be used.\n\n```js\nmodule.exports = {\n  entry: '...',\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        exclude: /node_modules/,\n        loader: 'eslint-loader',\n        options: {\n          outputReport: {\n            filePath: 'checkstyle.xml',\n            formatter: 'checkstyle',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n## Gotchas\n\n### NoEmitOnErrorsPlugin\n\n`NoEmitOnErrorsPlugin` is now automatically enabled in webpack 4, when mode is either unset, or set to production. So even ESLint warnings will fail the build. No matter what error settings are used for `eslint-loader`, except if `emitWarning` enabled.\n\n### Defining `configFile` or using `eslint -c path/.eslintrc`\n\nBear in mind that when you define `configFile`, `eslint` doesn't automatically look for `.eslintrc` files in the directory of the file to be linted. More information is available in official eslint documentation in section [_Using Configuration Files_](http://eslint.org/docs/user-guide/configuring#using-configuration-files). See [#129](https://github.com/webpack-contrib/eslint-loader/issues/129).\n\n## Changelog\n\n[Changelog](CHANGELOG.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/eslint-loader.svg\n[npm-url]: https://npmjs.com/package/eslint-loader\n[node]: https://img.shields.io/node/v/eslint-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/eslint-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/eslint-loader\n[tests]: https://dev.azure.com/webpack-contrib/eslint-loader/_apis/build/status/webpack-contrib.eslint-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/eslint-loader/_build/latest?definitionId=4&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/eslint-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/eslint-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=eslint-loader\n[size-url]: https://packagephobia.now.sh/result?p=eslint-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 206221}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3532317}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14491292}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 43239713}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 75817150}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 136143348}], "dependentsCount": 4109, "starsCount": 27}, "github": {"starsCount": 1047, "forksCount": 131, "subscribersCount": 18, "issues": {"count": 331, "openCount": 6, "distribution": {"3600": 39, "10800": 20, "32400": 24, "97200": 44, "291600": 37, "874800": 40, "2624400": 33, "7873200": 26, "23619600": 33, "70858800": 32, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "MoOx", "commitsCount": 81}, {"username": "ricardogobbosouza", "commitsCount": 37}, {"username": "evilebottnawi", "commitsCount": 7}, {"username": "wrakky", "commitsCount": 5}, {"username": "sudo-suhas", "commitsCount": 4}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "JamesHenry", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "edmorley", "commitsCount": 2}, {"username": "eschablowski", "commitsCount": 2}, {"username": "genintho", "commitsCount": 2}, {"username": "nkbt", "commitsCount": 2}, {"username": "trungdq88", "commitsCount": 2}, {"username": "viankakrisna", "commitsCount": 2}, {"username": "Alex-Sokolov", "commitsCount": 1}, {"username": "HDuck", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "NickHeiner", "commitsCount": 1}, {"username": "PoziWorld", "commitsCount": 1}, {"username": "Semigradsky", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "aaharu", "commitsCount": 1}, {"username": "alexsunxl", "commitsCount": 1}, {"username": "barraponto", "commitsCount": 1}, {"username": "bjornbytes", "commitsCount": 1}, {"username": "brigand", "commitsCount": 1}, {"username": "buihdk", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "christianhg", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "davidfou", "commitsCount": 1}, {"username": "deryni", "commitsCount": 1}, {"username": "existentialism", "commitsCount": 1}, {"username": "farneman", "commitsCount": 1}, {"username": "fknussel", "commitsCount": 1}, {"username": "hinok", "commitsCount": 1}, {"username": "jameslnewell", "commitsCount": 1}, {"username": "jaridmargolin", "commitsCount": 1}, {"username": "julmot", "commitsCount": 1}, {"username": "lancefisher", "commitsCount": 1}, {"username": "lmnsg", "commitsCount": 1}, {"username": "maxhauser", "commitsCount": 1}, {"username": "mgtitimoli", "commitsCount": 1}, {"username": "neokeld", "commitsCount": 1}, {"username": "nicolaslt", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "vidhill", "commitsCount": 1}, {"username": "vinodc", "commitsCount": 1}, {"username": "waiterZen", "commitsCount": 1}, {"username": "werme", "commitsCount": 1}, {"username": "wonism", "commitsCount": 1}, {"username": "yamalight", "commitsCount": 1}, {"username": "yhostc", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 18}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 51}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 9859, "testsSize": 19415, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-loader.svg", "shields": "https://img.shields.io/npm/v/eslint-loader.svg", "content": "https://img.shields.io/npm/v/eslint-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/eslint-loader.svg", "service": "https://david-dm.org/webpack-contrib/eslint-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/eslint-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/eslint-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"fs-extra": {"required": "^8.1.0", "stable": "9.0.1", "latest": "9.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.991, "health": 0.75, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1278, "downloadsCount": 14413237.666666666, "downloadsAcceleration": 39564.62690258751, "dependentsCount": 4109}, "maintenance": {"releasesFrequency": 0.9600171232876713, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8788832554028484, "detail": {"quality": 0.9880336517040283, "popularity": 0.6642727136379893, "maintenance": 0.999936314623839}}}}, {"babel-plugin-transform-object-rest-spread": {"analyzedAt": "2020-06-14T11:43:13.570Z", "collected": {"metadata": {"name": "babel-plugin-transform-object-rest-spread", "scope": "unscoped", "version": "6.26.0", "description": "Compile object rest and spread to ES5", "keywords": ["babel-plugin"], "date": "2017-08-16T15:54:11.363Z", "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-object-rest-spread", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-syntax-object-rest-spread": "^6.8.0", "babel-runtime": "^6.26.0"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.22.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-plugin-transform-object-rest-spread\n\n> This plugin allows Babel to transform rest properties for object destructuring assignment and spread properties for object literals.\n\n## Example\n\n### Rest Properties\n\n```js\nlet { x, y, ...z } = { x: 1, y: 2, a: 3, b: 4 };\nconsole.log(x); // 1\nconsole.log(y); // 2\nconsole.log(z); // { a: 3, b: 4 }\n```\n\n### Spread Properties\n\n```js\nlet n = { x, y, ...z };\nconsole.log(n); // { x: 1, y: 2, a: 3, b: 4 }\n```\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-object-rest-spread\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\"transform-object-rest-spread\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-object-rest-spread script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-object-rest-spread\"]\n});\n```\n\n## Options\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nBy default, this plugin uses Babel's `extends` helper which polyfills `Object.assign`. Enabling this option will use `Object.assign` directly.\n\n**.babelrc**\n\n```json\n{\n  \"plugins\": [\n    [\"transform-object-rest-spread\", { \"useBuiltIns\": true }]\n  ]\n}\n```\n\n**In**\n\n```js\nz = { x, ...y };\n```\n\n**Out**\n\n```js\nz = Object.assign({ x }, y);\n```\n\n## References\n\n* [Proposal: Object Rest/Spread Properties for ECMAScript](https://github.com/sebmarkbage/ecmascript-rest-spread)\n* [Spec](http://sebmarkbage.github.io/ecmascript-rest-spread)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 155829}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3395459}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14040787}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 43061013}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 78165284}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 153044058}], "dependentsCount": 1567, "starsCount": 17}, "github": {"homepage": "https://babel.dev", "starsCount": 36790, "forksCount": 4312, "subscribersCount": 867, "issues": {"count": 11637, "openCount": 793, "distribution": {"3600": 2464, "10800": 918, "32400": 1067, "97200": 1241, "291600": 1061, "874800": 1011, "2624400": 847, "7873200": 819, "23619600": 846, "70858800": 1092, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 157}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 399}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 792}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12333901, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 42085, "downloadsCount": 14353671, "downloadsAcceleration": 15920.058257229844, "dependentsCount": 1567}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23994129349371512}}, "score": {"final": 0.7248502937501843, "detail": {"quality": 0.8881385661719261, "popularity": 0.7406542711610733, "maintenance": 0.5690849399778025}}}}, {"ava": {"analyzedAt": "2020-05-08T15:57:30.737Z", "collected": {"metadata": {"name": "ava", "scope": "unscoped", "version": "3.8.2", "description": "Node.js test runner that lets you develop with confidence.", "keywords": ["\ud83e\udd84", "test", "runner", "testing", "ava", "concurrent", "parallel", "fast", "tdd", "cli-app", "cli", "jest", "mocha", "tape", "tap", "qunit", "jasmine", "babel", "assert", "assertion", "promise", "promises", "async", "function", "await", "generator", "generators", "yield", "observable", "observables", "unit", "snapshot", "expect", "typescript"], "date": "2020-05-08T12:14:10.097Z", "publisher": {"username": "novemberborn", "email": "mark@novemberborn.net"}, "maintainers": [{"username": "novemberborn", "email": "mark@novemberborn.net"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "vdemedes", "email": "vdemedes@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/avajs/ava.git"}, "links": {"npm": "https://www.npmjs.com/package/ava", "homepage": "https://avajs.dev", "repository": "https://github.com/avajs/ava", "bugs": "https://github.com/avajs/ava/issues"}, "license": "MIT", "dependencies": {"@concordance/react": "^2.0.0", "acorn": "^7.1.1", "acorn-walk": "^7.1.1", "ansi-styles": "^4.2.1", "arrgv": "^1.0.2", "arrify": "^2.0.1", "callsites": "^3.1.0", "chalk": "^4.0.0", "chokidar": "^3.4.0", "chunkd": "^2.0.1", "ci-info": "^2.0.0", "ci-parallel-vars": "^1.0.0", "clean-yaml-object": "^0.1.0", "cli-cursor": "^3.1.0", "cli-truncate": "^2.1.0", "code-excerpt": "^2.1.1", "common-path-prefix": "^3.0.0", "concordance": "^4.0.0", "convert-source-map": "^1.7.0", "currently-unhandled": "^0.4.1", "debug": "^4.1.1", "del": "^5.1.0", "emittery": "^0.6.0", "equal-length": "^1.0.0", "figures": "^3.2.0", "globby": "^11.0.0", "ignore-by-default": "^1.0.0", "import-local": "^3.0.2", "indent-string": "^4.0.0", "is-error": "^2.2.2", "is-plain-object": "^3.0.0", "is-promise": "^4.0.0", "lodash": "^4.17.15", "matcher": "^3.0.0", "md5-hex": "^3.0.1", "mem": "^6.1.0", "ms": "^2.1.2", "ora": "^4.0.4", "p-map": "^4.0.0", "picomatch": "^2.2.2", "pkg-conf": "^3.1.0", "plur": "^4.0.0", "pretty-ms": "^7.0.0", "read-pkg": "^5.2.0", "resolve-cwd": "^3.0.0", "slash": "^3.0.0", "source-map-support": "^0.5.19", "stack-utils": "^2.0.2", "strip-ansi": "^6.0.0", "supertap": "^1.0.0", "temp-dir": "^2.0.0", "trim-off-newlines": "^1.0.1", "update-notifier": "^4.1.0", "write-file-atomic": "^3.0.3", "yargs": "^15.3.1"}, "devDependencies": {"@ava/babel": "^1.0.1", "@ava/test": "github:avajs/test", "@babel/plugin-proposal-do-expressions": "^7.8.3", "@sinonjs/fake-timers": "^6.0.1", "ansi-escapes": "^4.3.1", "c8": "^7.1.2", "delay": "^4.3.0", "esm": "^3.2.25", "execa": "^4.0.0", "get-stream": "^5.1.0", "p-event": "^4.1.0", "proxyquire": "^2.1.3", "react": "^16.13.1", "react-test-renderer": "^16.13.1", "replace-string": "^3.0.0", "sinon": "^9.0.2", "source-map-fixtures": "^2.1.0", "tap": "^14.10.7", "temp-write": "^4.0.0", "tempy": "^0.5.0", "touch": "^3.1.0", "tsd": "^0.11.0", "typescript": "^3.8.3", "xo": "^0.30.0", "zen-observable": "^0.8.15"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 10}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 15}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 22}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 38}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# <img src=\"media/header.png\" title=\"AVA\" alt=\"AVA logo\" width=\"530\">\n\n[![Build Status](https://travis-ci.org/avajs/ava.svg?branch=master)](https://travis-ci.org/avajs/ava)  [![Coverage Status](https://codecov.io/gh/avajs/ava/branch/master/graph/badge.svg)](https://codecov.io/gh/avajs/ava/branch/master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Join the community on Spectrum](https://withspectrum.github.io/badge/badge.svg)](https://spectrum.chat/ava)\n[![Mentioned in Awesome Node.js](https://awesome.re/mentioned-badge.svg)](https://github.com/sindresorhus/awesome-nodejs)\n\nAVA is a test runner for Node.js with a concise API, detailed error output, embrace of new language features and process isolation that lets you develop with confidence \ud83d\ude80\n\nFollow the [AVA Twitter account](https://twitter.com/ava__js) for updates.\n\nRead our [contributing guide](.github/CONTRIBUTING.md) if you're looking to contribute (issues / PRs / etc).\n\n![](media/mini-reporter.gif)\n\n\nTranslations: [Espa\u00f1ol](https://github.com/avajs/ava-docs/blob/master/es_ES/readme.md), [Fran\u00e7ais](https://github.com/avajs/ava-docs/blob/master/fr_FR/readme.md), [Italiano](https://github.com/avajs/ava-docs/blob/master/it_IT/readme.md), [\u65e5\u672c\u8a9e](https://github.com/avajs/ava-docs/blob/master/ja_JP/readme.md), [\ud55c\uad6d\uc5b4](https://github.com/avajs/ava-docs/blob/master/ko_KR/readme.md), [Portugu\u00eas](https://github.com/avajs/ava-docs/blob/master/pt_BR/readme.md), [\u0420\u0443\u0441\u0441\u043a\u0438\u0439](https://github.com/avajs/ava-docs/blob/master/ru_RU/readme.md), [\u7b80\u4f53\u4e2d\u6587](https://github.com/avajs/ava-docs/blob/master/zh_CN/readme.md)\n\n\n## Why AVA?\n\n- Minimal and fast\n- Simple test syntax\n- Runs tests concurrently\n- Enforces writing atomic tests\n- No implicit globals\n- Includes TypeScript definitions\n- [Magic assert](#magic-assert)\n- [Isolated environment for each test file](./docs/01-writing-tests.md#process-isolation)\n- [Write your tests using the latest JavaScript syntax](https://github.com/avajs/babel)\n- [Promise support](./docs/01-writing-tests.md#promise-support)\n- [Async function support](./docs/01-writing-tests.md#async-function-support)\n- [Observable support](./docs/01-writing-tests.md#observable-support)\n- [Enhanced assertion messages](./docs/03-assertions.md#enhanced-assertion-messages)\n- [Automatic parallel test runs in CI](#parallel-runs-in-ci)\n- [TAP reporter](./docs/05-command-line.md#tap-reporter)\n\n\n## Usage\n\nTo install and set up AVA, run:\n\n```console\nnpm init ava\n```\n\nYour `package.json` will then look like this (exact version notwithstanding):\n\n```json\n{\n\t\"name\": \"awesome-package\",\n\t\"scripts\": {\n\t\t\"test\": \"ava\"\n\t},\n\t\"devDependencies\": {\n\t\t\"ava\": \"^1.0.0\"\n\t}\n}\n```\n\nOr if you prefer using Yarn:\n\n```console\nyarn add ava --dev\n```\n\nAlternatively you can install `ava` manually:\n\n```console\nnpm install --save-dev ava\n```\n\nDon't forget to configure the `test` script in your `package.json` as per above.\n\n### Create your test file\n\nCreate a file named `test.js` in the project root directory:\n\n```js\nconst test = require('ava');\n\ntest('foo', t => {\n\tt.pass();\n});\n\ntest('bar', async t => {\n\tconst bar = Promise.resolve('bar');\n\tt.is(await bar, 'bar');\n});\n```\n\n### Running your tests\n\n```console\nnpm test\n```\n\nOr with `npx`:\n\n```console\nnpx ava\n```\n\nRun with the `--watch` flag to enable AVA's [watch mode](docs/recipes/watch-mode.md):\n\n```console\nnpx ava --watch\n```\n\n## Supported Node.js versions\n\nAVA supports the latest release of any major version that [is supported by Node.js itself](https://github.com/nodejs/Release#release-schedule). Read more in our [support statement](docs/support-statement.md).\n\n## Highlights\n\n### Magic assert\n\nAVA adds code excerpts and clean diffs for actual and expected values. If values in the assertion are objects or arrays, only a diff is displayed, to remove the noise and focus on the problem. The diff is syntax-highlighted too! If you are comparing strings, both single and multi line, AVA displays a different kind of output, highlighting the added or missing characters.\n\n![](media/magic-assert-combined.png)\n\n### Clean stack traces\n\nAVA automatically removes unrelated lines in stack traces, allowing you to find the source of an error much faster, as seen above.\n\n### Parallel runs in CI\n\nAVA automatically detects whether your CI environment supports parallel builds. Each build will run a subset of all test files, while still making sure all tests get executed. See the [`ci-parallel-vars`](https://www.npmjs.com/package/ci-parallel-vars) package for a list of supported CI environments.\n\n## Documentation\n\nPlease see the [files in the `docs` directory](./docs):\n\n* [Writing tests](./docs/01-writing-tests.md)\n* [Execution context](./docs/02-execution-context.md)\n* [Assertions](./docs/03-assertions.md)\n* [Snapshot testing](./docs/04-snapshot-testing.md)\n* [Command line (CLI)](./docs/05-command-line.md)\n* [Configuration](./docs/06-configuration.md)\n* [Test timeouts](./docs/07-test-timeouts.md)\n\n### Common pitfalls\n\nWe have a growing list of [common pitfalls](docs/08-common-pitfalls.md) you may experience while using AVA. If you encounter any issues you think are common, comment in [this issue](https://github.com/avajs/ava/issues/404).\n\n### Recipes\n\n- [Test setup](docs/recipes/test-setup.md)\n- [Code coverage](docs/recipes/code-coverage.md)\n- [Watch mode](docs/recipes/watch-mode.md)\n- [Endpoint testing](docs/recipes/endpoint-testing.md)\n- [When to use `t.plan()`](docs/recipes/when-to-use-plan.md)\n- [Browser testing](docs/recipes/browser-testing.md)\n- [TypeScript](docs/recipes/typescript.md)\n- [Flow](docs/recipes/flow.md)\n- [Configuring Babel](https://github.com/avajs/babel)\n- [Using ES modules](docs/recipes/es-modules.md)\n- [Passing arguments to your test files](docs/recipes/passing-arguments-to-your-test-files.md)\n- [Testing React components](docs/recipes/react.md)\n- [Testing Vue.js components](docs/recipes/vue.md)\n- [Debugging tests with Chrome DevTools](docs/recipes/debugging-with-chrome-devtools.md)\n- [Debugging tests with VSCode](docs/recipes/debugging-with-vscode.md)\n- [Debugging tests with WebStorm](docs/recipes/debugging-with-webstorm.md)\n- [Isolated MongoDB integration tests](docs/recipes/isolated-mongodb-integration-tests.md)\n- [Testing web apps using Puppeteer](docs/recipes/puppeteer.md)\n- [Testing web apps using Selenium WebDriverJS](docs/recipes/testing-with-selenium-webdriverjs.md)\n\n## FAQ\n\n### Why not `mocha`, `tape`, `tap`?\n\nMocha requires you to use implicit globals like `describe` and `it` with the default interface (which most people use). It's not very opinionated and executes tests serially without process isolation, making it slow.\n\nTape and tap are pretty good. AVA is highly inspired by their syntax. They too execute tests serially. Their default [TAP](https://testanything.org) output isn't very user-friendly though so you always end up using an external tap reporter.\n\nIn contrast AVA is highly opinionated and runs tests concurrently, with a separate process for each test file. Its default reporter is easy on the eyes and yet AVA still supports TAP output through a CLI flag.\n\n### How is the name written and pronounced?\n\nAVA, not Ava or ava. Pronounced [`/\u02c8e\u026av\u0259/`](media/pronunciation.m4a?raw=true): Ay (f**a**ce, m**a**de) V (**v**ie, ha**v**e) A (comm**a**, **a**go)\n\n### What is the header background?\n\nIt's the [Andromeda galaxy](https://simple.wikipedia.org/wiki/Andromeda_galaxy).\n\n### What is the difference between concurrency and parallelism?\n\n[Concurrency is not parallelism. It enables parallelism.](https://stackoverflow.com/q/1050222)\n\n## Support\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/ava)\n- [Spectrum](https://spectrum.chat/ava)\n- [Twitter](https://twitter.com/ava__js)\n\n## Related\n\n- [eslint-plugin-ava](https://github.com/avajs/eslint-plugin-ava) - Lint rules for AVA tests\n- [sublime-ava](https://github.com/avajs/sublime-ava) - Snippets for AVA tests\n- [atom-ava](https://github.com/avajs/atom-ava) - Snippets for AVA tests\n- [vscode-ava](https://github.com/samverschueren/vscode-ava) - Snippets for AVA tests\n- [gulp-ava](https://github.com/avajs/gulp-ava) - Run tests with gulp\n- [grunt-ava](https://github.com/avajs/grunt-ava) - Run tests with grunt\n- [More\u2026](https://github.com/avajs/awesome-ava#packages)\n\n## Links\n\n- [AVA stickers, t-shirts, etc](https://www.redbubble.com/people/sindresorhus/works/30330590-ava-logo)\n- [Awesome list](https://github.com/avajs/awesome-ava)\n- [AVA Casts](http://avacasts.com)\n- [Do you like AVA? Donate here!](https://opencollective.com/ava)\n- [More\u2026](https://github.com/avajs/awesome-ava)\n\n## Team\n\n[![Mark Wubben](https://github.com/novemberborn.png?size=100)](https://github.com/novemberborn) | [![Sindre Sorhus](https://github.com/sindresorhus.png?size=100)](https://github.com/sindresorhus) | [![Vadim Demedes](https://github.com/vadimdemedes.png?size=100)](https://github.com/vadimdemedes)\n---|---|---\n[Mark Wubben](https://novemberborn.net) | [Sindre Sorhus](https://sindresorhus.com) | [Vadim Demedes](https://github.com/vadimdemedes)\n\n###### Former\n\n- [Kevin M\u00e5rtensson](https://github.com/kevva)\n- [James Talmage](https://github.com/jamestalmage)\n- [Juan Soto](https://github.com/sotojuan)\n- [Jeroen Engels](https://github.com/jfmengels)\n\n\n<div align=\"center\">\n\t<br>\n\t<br>\n\t<br>\n\t<a href=\"https://avajs.dev\">\n\t\t<img src=\"media/logo.svg\" width=\"200\" alt=\"AVA\">\n\t</a>\n\t<br>\n\t<br>\n</div>"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 38265}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 207581}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 943101}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2732023}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4756770}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8647528}], "dependentsCount": 295, "starsCount": 102}, "github": {"starsCount": 17871, "forksCount": 1225, "subscribersCount": 242, "issues": {"count": 2478, "openCount": 157, "distribution": {"3600": 328, "10800": 149, "32400": 151, "97200": 321, "291600": 317, "874800": 303, "2624400": 239, "7873200": 206, "23619600": 202, "70858800": 177, "212576400": 85}, "isDisabled": false}, "contributors": [{"username": "novemberborn", "commitsCount": 532}, {"username": "sindresorhus", "commitsCount": 281}, {"username": "jamestalmage", "commitsCount": 136}, {"username": "vadimdemedes", "commitsCount": 72}, {"username": "forresst", "commitsCount": 37}, {"username": "kevva", "commitsCount": 22}, {"username": "SamVerschueren", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 6}, {"username": "kugtong33", "commitsCount": 6}, {"username": "lukechilds", "commitsCount": 6}, {"username": "nfcampos", "commitsCount": 6}, {"username": "ariporad", "commitsCount": 5}, {"username": "jamiebuilds", "commitsCount": 5}, {"username": "jfmengels", "commitsCount": 5}, {"username": "okyantoro", "commitsCount": 5}, {"username": "qlonik", "commitsCount": 5}, {"username": "BusbyActual", "commitsCount": 4}, {"username": "ThomasBem", "commitsCount": 4}, {"username": "cgcgbcbc", "commitsCount": 4}, {"username": "dflupu", "commitsCount": 4}, {"username": "ivogabe", "commitsCount": 4}, {"username": "kasperlewau", "commitsCount": 4}, {"username": "sotojuan", "commitsCount": 4}, {"username": "ulken", "commitsCount": 4}, {"username": "yovasx2", "commitsCount": 4}, {"username": "LasaleFamine", "commitsCount": 3}, {"username": "bunysae", "commitsCount": 3}, {"username": "codeslikejaggars", "commitsCount": 3}, {"username": "leebyron", "commitsCount": 3}, {"username": "mightyiam", "commitsCount": 3}, {"username": "timdeschryver", "commitsCount": 3}, {"username": "BarryThePenguin", "commitsCount": 2}, {"username": "Carnubak", "commitsCount": 2}, {"username": "ChristianMurphy", "commitsCount": 2}, {"username": "JPeer264", "commitsCount": 2}, {"username": "Qix-", "commitsCount": 2}, {"username": "StoneCypher", "commitsCount": 2}, {"username": "TrySound", "commitsCount": 2}, {"username": "adriantoine", "commitsCount": 2}, {"username": "ajtorres9", "commitsCount": 2}, {"username": "alathon", "commitsCount": 2}, {"username": "alexisfontaine", "commitsCount": 2}, {"username": "anishkny", "commitsCount": 2}, {"username": "anoff", "commitsCount": 2}, {"username": "asafigan", "commitsCount": 2}, {"username": "btkostner", "commitsCount": 2}, {"username": "cdaringe", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 2}, {"username": "fluffywaffles", "commitsCount": 2}, {"username": "grnch", "commitsCount": 2}, {"username": "ingro", "commitsCount": 2}, {"username": "jagoda", "commitsCount": 2}, {"username": "jarlehansen", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jokeyrhyme", "commitsCount": 2}, {"username": "jugglinmike", "commitsCount": 2}, {"username": "kutyel", "commitsCount": 2}, {"username": "lo1tuma", "commitsCount": 2}, {"username": "mattkrick", "commitsCount": 2}, {"username": "mdvorscak", "commitsCount": 2}, {"username": "micaelmbagira", "commitsCount": 2}, {"username": "naptowncode", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "pine", "commitsCount": 2}, {"username": "platy11", "commitsCount": 2}, {"username": "ronen", "commitsCount": 2}, {"username": "sh7dm", "commitsCount": 2}, {"username": "sharkykh", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "thebrokenfinger", "commitsCount": 2}, {"username": "twada", "commitsCount": 2}, {"username": "uiur", "commitsCount": 2}, {"username": "vancouverwill", "commitsCount": 2}, {"username": "zs-zs", "commitsCount": 2}, {"username": "DYefimov", "commitsCount": 1}, {"username": "HeathNaylor", "commitsCount": 1}, {"username": "MarchWorks", "commitsCount": 1}, {"username": "MoppetX", "commitsCount": 1}, {"username": "Scrum", "commitsCount": 1}, {"username": "alexdrans", "commitsCount": 1}, {"username": "aptester", "commitsCount": 1}, {"username": "arlac77", "commitsCount": 1}, {"username": "bobthekingofegypt", "commitsCount": 1}, {"username": "dongjae93", "commitsCount": 1}, {"username": "fisker", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jeremenichelli", "commitsCount": 1}, {"username": "jhechtf", "commitsCount": 1}, {"username": "jimmywarting", "commitsCount": 1}, {"username": "maximelkin", "commitsCount": 1}, {"username": "pcdevil", "commitsCount": 1}, {"username": "sramam", "commitsCount": 1}, {"username": "stavalfi", "commitsCount": 1}, {"username": "theashraf", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "toddkcarlson", "commitsCount": 1}, {"username": "tryzniak", "commitsCount": 1}, {"username": "tymfear", "commitsCount": 1}, {"username": "zackschuster", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 25}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 58}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 136}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 210}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 9464, "testsSize": 70610}, "badges": [{"urls": {"original": "https://travis-ci.org/avajs/ava.svg?branch=master", "service": "https://api.travis-ci.org/avajs/ava.svg?branch=master", "shields": "https://img.shields.io/travis/avajs/ava/master.svg", "content": "https://img.shields.io/travis/avajs/ava/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9895, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 19540, "downloadsCount": 910674.3333333334, "downloadsAcceleration": 2619.8712328767133, "dependentsCount": 295}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.18026229756516443}}, "score": {"final": 0.770978187820468, "detail": {"quality": 0.9877988673769469, "popularity": 0.5139880777240055, "maintenance": 0.8421220011542347}}}}, {"shelljs": {"analyzedAt": "2020-06-07T19:54:55.921Z", "collected": {"metadata": {"name": "shelljs", "scope": "unscoped", "version": "0.8.4", "description": "Portable Unix shell commands for Node.js", "keywords": ["shelljs", "bash", "unix", "shell", "makefile", "make", "jake", "synchronous"], "date": "2020-04-25T03:58:19.570Z", "publisher": {"username": "nfischer", "email": "ntfschr@gmail.com"}, "maintainers": [{"username": "artur", "email": "arturadib@gmail.com"}, {"username": "freitagbr", "email": "freitagbr@gmail.com"}, {"username": "nfischer", "email": "ntfschr@gmail.com"}], "contributors": [{"name": "Nate Fischer", "email": "ntfschr@gmail.com", "url": "https://github.com/nfischer"}, {"name": "Brandon Freitag", "email": "freitagbr@gmail.com", "url": "https://github.com/freitagbr"}], "repository": {"type": "git", "url": "git://github.com/shelljs/shelljs.git"}, "links": {"npm": "https://www.npmjs.com/package/shelljs", "homepage": "http://github.com/shelljs/shelljs", "repository": "https://github.com/shelljs/shelljs", "bugs": "https://github.com/shelljs/shelljs/issues"}, "license": "BSD-3-Clause", "dependencies": {"glob": "^7.0.0", "interpret": "^1.0.0", "rechoir": "^0.6.2"}, "devDependencies": {"ava": "^0.21.0", "chalk": "^1.1.3", "codecov": "^3.0.2", "coffee-script": "^1.10.0", "eslint": "^2.0.0", "eslint-config-airbnb-base": "^3.0.0", "eslint-plugin-import": "^1.11.1", "nyc": "^11.3.0", "shelljs-changelog": "^0.2.0", "shelljs-release": "^0.3.0", "shx": "^0.2.0", "travis-check-changes": "^0.2.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ShellJS - Unix shell commands for Node.js\n\n[![Travis](https://img.shields.io/travis/shelljs/shelljs/master.svg?style=flat-square&label=unix)](https://travis-ci.org/shelljs/shelljs)\n[![AppVeyor](https://img.shields.io/appveyor/ci/shelljs/shelljs/master.svg?style=flat-square&label=windows)](https://ci.appveyor.com/project/shelljs/shelljs/branch/master)\n[![Codecov](https://img.shields.io/codecov/c/github/shelljs/shelljs/master.svg?style=flat-square&label=coverage)](https://codecov.io/gh/shelljs/shelljs)\n[![npm version](https://img.shields.io/npm/v/shelljs.svg?style=flat-square)](https://www.npmjs.com/package/shelljs)\n[![npm downloads](https://img.shields.io/npm/dm/shelljs.svg?style=flat-square)](https://www.npmjs.com/package/shelljs)\n\nShellJS is a portable **(Windows/Linux/OS X)** implementation of Unix shell\ncommands on top of the Node.js API. You can use it to eliminate your shell\nscript's dependency on Unix while still keeping its familiar and powerful\ncommands. You can also install it globally so you can run it from outside Node\nprojects - say goodbye to those gnarly Bash scripts!\n\nShellJS is proudly tested on every node release since `v4`!\n\nThe project is [unit-tested](http://travis-ci.org/shelljs/shelljs) and battle-tested in projects like:\n\n+ [Firebug](http://getfirebug.com/) - Firefox's infamous debugger\n+ [JSHint](http://jshint.com) & [ESLint](http://eslint.org/) - popular JavaScript linters\n+ [Zepto](http://zeptojs.com) - jQuery-compatible JavaScript library for modern browsers\n+ [Yeoman](http://yeoman.io/) - Web application stack and development tool\n+ [Deployd.com](http://deployd.com) - Open source PaaS for quick API backend generation\n+ And [many more](https://npmjs.org/browse/depended/shelljs).\n\nIf you have feedback, suggestions, or need help, feel free to post in our [issue\ntracker](https://github.com/shelljs/shelljs/issues).\n\nThink ShellJS is cool? Check out some related projects in our [Wiki\npage](https://github.com/shelljs/shelljs/wiki)!\n\nUpgrading from an older version? Check out our [breaking\nchanges](https://github.com/shelljs/shelljs/wiki/Breaking-Changes) page to see\nwhat changes to watch out for while upgrading.\n\n## Command line use\n\nIf you just want cross platform UNIX commands, checkout our new project\n[shelljs/shx](https://github.com/shelljs/shx), a utility to expose `shelljs` to\nthe command line.\n\nFor example:\n\n```\n$ shx mkdir -p foo\n$ shx touch foo/bar.txt\n$ shx rm -rf foo\n```\n\n## Plugin API\n\nShellJS now supports third-party plugins! You can learn more about using plugins\nand writing your own ShellJS commands in [the\nwiki](https://github.com/shelljs/shelljs/wiki/Using-ShellJS-Plugins).\n\n## A quick note about the docs\n\nFor documentation on all the latest features, check out our\n[README](https://github.com/shelljs/shelljs). To read docs that are consistent\nwith the latest release, check out [the npm\npage](https://www.npmjs.com/package/shelljs) or\n[shelljs.org](http://documentup.com/shelljs/shelljs).\n\n## Installing\n\nVia npm:\n\n```bash\n$ npm install [-g] shelljs\n```\n\n## Examples\n\n```javascript\nvar shell = require('shelljs');\n\nif (!shell.which('git')) {\n  shell.echo('Sorry, this script requires git');\n  shell.exit(1);\n}\n\n// Copy files to release dir\nshell.rm('-rf', 'out/Release');\nshell.cp('-R', 'stuff/', 'out/Release');\n\n// Replace macros in each .js file\nshell.cd('lib');\nshell.ls('*.js').forEach(function (file) {\n  shell.sed('-i', 'BUILD_VERSION', 'v0.1.2', file);\n  shell.sed('-i', /^.*REMOVE_THIS_LINE.*$/, '', file);\n  shell.sed('-i', /.*REPLACE_LINE_WITH_MACRO.*\\n/, shell.cat('macro.js'), file);\n});\nshell.cd('..');\n\n// Run external tool synchronously\nif (shell.exec('git commit -am \"Auto-commit\"').code !== 0) {\n  shell.echo('Error: Git commit failed');\n  shell.exit(1);\n}\n```\n\n## Exclude options\n\nIf you need to pass a parameter that looks like an option, you can do so like:\n\n```js\nshell.grep('--', '-v', 'path/to/file'); // Search for \"-v\", no grep options\n\nshell.cp('-R', '-dir', 'outdir'); // If already using an option, you're done\n```\n\n## Global vs. Local\n\nWe no longer recommend using a global-import for ShellJS (i.e.\n`require('shelljs/global')`). While still supported for convenience, this\npollutes the global namespace, and should therefore only be used with caution.\n\nInstead, we recommend a local import (standard for npm packages):\n\n```javascript\nvar shell = require('shelljs');\nshell.echo('hello world');\n```\n\n<!-- DO NOT MODIFY BEYOND THIS POINT - IT'S AUTOMATICALLY GENERATED -->\n\n\n## Command reference\n\n\nAll commands run synchronously, unless otherwise stated.\nAll commands accept standard bash globbing characters (`*`, `?`, etc.),\ncompatible with the [node `glob` module](https://github.com/isaacs/node-glob).\n\nFor less-commonly used commands and features, please check out our [wiki\npage](https://github.com/shelljs/shelljs/wiki).\n\n\n### cat([options,] file [, file ...])\n### cat([options,] file_array)\n\nAvailable options:\n\n+ `-n`: number all output lines\n\nExamples:\n\n```javascript\nvar str = cat('file*.txt');\nvar str = cat('file1', 'file2');\nvar str = cat(['file1', 'file2']); // same as above\n```\n\nReturns a string containing the given file, or a concatenated string\ncontaining the files if more than one file is given (a new line character is\nintroduced between each file).\n\n\n### cd([dir])\n\nChanges to directory `dir` for the duration of the script. Changes to home\ndirectory if no argument is supplied.\n\n\n### chmod([options,] octal_mode || octal_string, file)\n### chmod([options,] symbolic_mode, file)\n\nAvailable options:\n\n+ `-v`: output a diagnostic for every file processed\n+ `-c`: like verbose, but report only when a change is made\n+ `-R`: change files and directories recursively\n\nExamples:\n\n```javascript\nchmod(755, '/Users/brandon');\nchmod('755', '/Users/brandon'); // same as above\nchmod('u+x', '/Users/brandon');\nchmod('-R', 'a-w', '/Users/brandon');\n```\n\nAlters the permissions of a file or directory by either specifying the\nabsolute permissions in octal form or expressing the changes in symbols.\nThis command tries to mimic the POSIX behavior as much as possible.\nNotable exceptions:\n\n+ In symbolic modes, `a-r` and `-r` are identical.  No consideration is\n  given to the `umask`.\n+ There is no \"quiet\" option, since default behavior is to run silent.\n\n\n### cp([options,] source [, source ...], dest)\n### cp([options,] source_array, dest)\n\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n+ `-u`: only copy if `source` is newer than `dest`\n+ `-r`, `-R`: recursive\n+ `-L`: follow symlinks\n+ `-P`: don't follow symlinks\n\nExamples:\n\n```javascript\ncp('file1', 'dir1');\ncp('-R', 'path/to/dir/', '~/newCopy/');\ncp('-Rf', '/tmp/*', '/usr/local/*', '/home/tmp');\ncp('-Rf', ['/tmp/*', '/usr/local/*'], '/home/tmp'); // same as above\n```\n\nCopies files.\n\n\n### pushd([options,] [dir | '-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppresses the normal change of directory when adding directories to the stack, so that only the stack is manipulated.\n+ `-q`: Supresses output to the console.\n\nArguments:\n\n+ `dir`: Sets the current working directory to the top of the stack, then executes the equivalent of `cd dir`.\n+ `+N`: Brings the Nth directory (counting from the left of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n+ `-N`: Brings the Nth directory (counting from the right of the list printed by dirs, starting with zero) to the top of the list by rotating the stack.\n\nExamples:\n\n```javascript\n// process.cwd() === '/usr'\npushd('/etc'); // Returns /etc /usr\npushd('+1');   // Returns /usr /etc\n```\n\nSave the current directory on the top of the directory stack and then `cd` to `dir`. With no arguments, `pushd` exchanges the top two directories. Returns an array of paths in the stack.\n\n\n### popd([options,] ['-N' | '+N'])\n\nAvailable options:\n\n+ `-n`: Suppress the normal directory change when removing directories from the stack, so that only the stack is manipulated.\n+ `-q`: Supresses output to the console.\n\nArguments:\n\n+ `+N`: Removes the Nth directory (counting from the left of the list printed by dirs), starting with zero.\n+ `-N`: Removes the Nth directory (counting from the right of the list printed by dirs), starting with zero.\n\nExamples:\n\n```javascript\necho(process.cwd()); // '/usr'\npushd('/etc');       // '/etc /usr'\necho(process.cwd()); // '/etc'\npopd();              // '/usr'\necho(process.cwd()); // '/usr'\n```\n\nWhen no arguments are given, `popd` removes the top directory from the stack and performs a `cd` to the new top directory. The elements are numbered from 0, starting at the first directory listed with dirs (i.e., `popd` is equivalent to `popd +0`). Returns an array of paths in the stack.\n\n\n### dirs([options | '+N' | '-N'])\n\nAvailable options:\n\n+ `-c`: Clears the directory stack by deleting all of the elements.\n+ `-q`: Supresses output to the console.\n\nArguments:\n\n+ `+N`: Displays the Nth directory (counting from the left of the list printed by dirs when invoked without options), starting with zero.\n+ `-N`: Displays the Nth directory (counting from the right of the list printed by dirs when invoked without options), starting with zero.\n\nDisplay the list of currently remembered directories. Returns an array of paths in the stack, or a single path if `+N` or `-N` was specified.\n\nSee also: `pushd`, `popd`\n\n\n### echo([options,] string [, string ...])\n\nAvailable options:\n\n+ `-e`: interpret backslash escapes (default)\n+ `-n`: remove trailing newline from output\n\nExamples:\n\n```javascript\necho('hello world');\nvar str = echo('hello world');\necho('-n', 'no newline at end');\n```\n\nPrints `string` to stdout, and returns string with additional utility methods\nlike `.to()`.\n\n\n### exec(command [, options] [, callback])\n\nAvailable options:\n\n+ `async`: Asynchronous execution. If a callback is provided, it will be set to\n  `true`, regardless of the passed value (default: `false`).\n+ `silent`: Do not echo program output to console (default: `false`).\n+ `encoding`: Character encoding to use. Affects the values returned to stdout and stderr, and\n  what is written to stdout and stderr when not in silent mode (default: `'utf8'`).\n+ and any option available to Node.js's\n  [`child_process.exec()`](https://nodejs.org/api/child_process.html#child_process_child_process_exec_command_options_callback)\n\nExamples:\n\n```javascript\nvar version = exec('node --version', {silent:true}).stdout;\n\nvar child = exec('some_long_running_process', {async:true});\nchild.stdout.on('data', function(data) {\n  /* ... do something with data ... */\n});\n\nexec('some_long_running_process', function(code, stdout, stderr) {\n  console.log('Exit code:', code);\n  console.log('Program output:', stdout);\n  console.log('Program stderr:', stderr);\n});\n```\n\nExecutes the given `command` _synchronously_, unless otherwise specified.  When in synchronous\nmode, this returns a `ShellString` (compatible with ShellJS v0.6.x, which returns an object\nof the form `{ code:..., stdout:... , stderr:... }`). Otherwise, this returns the child process\nobject, and the `callback` receives the arguments `(code, stdout, stderr)`.\n\nNot seeing the behavior you want? `exec()` runs everything through `sh`\nby default (or `cmd.exe` on Windows), which differs from `bash`. If you\nneed bash-specific behavior, try out the `{shell: 'path/to/bash'}` option.\n\n\n### find(path [, path ...])\n### find(path_array)\n\nExamples:\n\n```javascript\nfind('src', 'lib');\nfind(['src', 'lib']); // same as above\nfind('.').filter(function(file) { return file.match(/\\.js$/); });\n```\n\nReturns array of all files (however deep) in the given paths.\n\nThe main difference from `ls('-R', path)` is that the resulting file names\ninclude the base directories (e.g., `lib/resources/file1` instead of just `file1`).\n\n\n### grep([options,] regex_filter, file [, file ...])\n### grep([options,] regex_filter, file_array)\n\nAvailable options:\n\n+ `-v`: Invert `regex_filter` (only print non-matching lines).\n+ `-l`: Print only filenames of matching files.\n+ `-i`: Ignore case.\n\nExamples:\n\n```javascript\ngrep('-v', 'GLOBAL_VARIABLE', '*.js');\ngrep('GLOBAL_VARIABLE', '*.js');\n```\n\nReads input string from given files and returns a string containing all lines of the\nfile that match the given `regex_filter`.\n\n\n### head([{'-n': \\<num\\>},] file [, file ...])\n### head([{'-n': \\<num\\>},] file_array)\n\nAvailable options:\n\n+ `-n <num>`: Show the first `<num>` lines of the files\n\nExamples:\n\n```javascript\nvar str = head({'-n': 1}, 'file*.txt');\nvar str = head('file1', 'file2');\nvar str = head(['file1', 'file2']); // same as above\n```\n\nRead the start of a file.\n\n\n### ln([options,] source, dest)\n\nAvailable options:\n\n+ `-s`: symlink\n+ `-f`: force\n\nExamples:\n\n```javascript\nln('file', 'newlink');\nln('-sf', 'file', 'existing');\n```\n\nLinks `source` to `dest`. Use `-f` to force the link, should `dest` already exist.\n\n\n### ls([options,] [path, ...])\n### ls([options,] path_array)\n\nAvailable options:\n\n+ `-R`: recursive\n+ `-A`: all files (include files beginning with `.`, except for `.` and `..`)\n+ `-L`: follow symlinks\n+ `-d`: list directories themselves, not their contents\n+ `-l`: list objects representing each file, each with fields containing `ls\n        -l` output fields. See\n        [`fs.Stats`](https://nodejs.org/api/fs.html#fs_class_fs_stats)\n        for more info\n\nExamples:\n\n```javascript\nls('projs/*.js');\nls('-R', '/users/me', '/tmp');\nls('-R', ['/users/me', '/tmp']); // same as above\nls('-l', 'file.txt'); // { name: 'file.txt', mode: 33188, nlink: 1, ...}\n```\n\nReturns array of files in the given `path`, or files in\nthe current directory if no `path` is  provided.\n\n\n### mkdir([options,] dir [, dir ...])\n### mkdir([options,] dir_array)\n\nAvailable options:\n\n+ `-p`: full path (and create intermediate directories, if necessary)\n\nExamples:\n\n```javascript\nmkdir('-p', '/tmp/a/b/c/d', '/tmp/e/f/g');\nmkdir('-p', ['/tmp/a/b/c/d', '/tmp/e/f/g']); // same as above\n```\n\nCreates directories.\n\n\n### mv([options ,] source [, source ...], dest')\n### mv([options ,] source_array, dest')\n\nAvailable options:\n\n+ `-f`: force (default behavior)\n+ `-n`: no-clobber\n\nExamples:\n\n```javascript\nmv('-n', 'file', 'dir/');\nmv('file1', 'file2', 'dir/');\nmv(['file1', 'file2'], 'dir/'); // same as above\n```\n\nMoves `source` file(s) to `dest`.\n\n\n### pwd()\n\nReturns the current directory.\n\n\n### rm([options,] file [, file ...])\n### rm([options,] file_array)\n\nAvailable options:\n\n+ `-f`: force\n+ `-r, -R`: recursive\n\nExamples:\n\n```javascript\nrm('-rf', '/tmp/*');\nrm('some_file.txt', 'another_file.txt');\nrm(['some_file.txt', 'another_file.txt']); // same as above\n```\n\nRemoves files.\n\n\n### sed([options,] search_regex, replacement, file [, file ...])\n### sed([options,] search_regex, replacement, file_array)\n\nAvailable options:\n\n+ `-i`: Replace contents of `file` in-place. _Note that no backups will be created!_\n\nExamples:\n\n```javascript\nsed('-i', 'PROGRAM_VERSION', 'v0.1.3', 'source.js');\nsed(/.*DELETE_THIS_LINE.*\\n/, '', 'source.js');\n```\n\nReads an input string from `file`s, and performs a JavaScript `replace()` on the input\nusing the given `search_regex` and `replacement` string or function. Returns the new string after replacement.\n\nNote:\n\nLike unix `sed`, ShellJS `sed` supports capture groups. Capture groups are specified\nusing the `$n` syntax:\n\n```javascript\nsed(/(\\w+)\\s(\\w+)/, '$2, $1', 'file.txt');\n```\n\n\n### set(options)\n\nAvailable options:\n\n+ `+/-e`: exit upon error (`config.fatal`)\n+ `+/-v`: verbose: show all commands (`config.verbose`)\n+ `+/-f`: disable filename expansion (globbing)\n\nExamples:\n\n```javascript\nset('-e'); // exit upon first error\nset('+e'); // this undoes a \"set('-e')\"\n```\n\nSets global configuration variables.\n\n\n### sort([options,] file [, file ...])\n### sort([options,] file_array)\n\nAvailable options:\n\n+ `-r`: Reverse the results\n+ `-n`: Compare according to numerical value\n\nExamples:\n\n```javascript\nsort('foo.txt', 'bar.txt');\nsort('-r', 'foo.txt');\n```\n\nReturn the contents of the `file`s, sorted line-by-line. Sorting multiple\nfiles mixes their content (just as unix `sort` does).\n\n\n### tail([{'-n': \\<num\\>},] file [, file ...])\n### tail([{'-n': \\<num\\>},] file_array)\n\nAvailable options:\n\n+ `-n <num>`: Show the last `<num>` lines of `file`s\n\nExamples:\n\n```javascript\nvar str = tail({'-n': 1}, 'file*.txt');\nvar str = tail('file1', 'file2');\nvar str = tail(['file1', 'file2']); // same as above\n```\n\nRead the end of a `file`.\n\n\n### tempdir()\n\nExamples:\n\n```javascript\nvar tmp = tempdir(); // \"/tmp\" for most *nix platforms\n```\n\nSearches and returns string containing a writeable, platform-dependent temporary directory.\nFollows Python's [tempfile algorithm](http://docs.python.org/library/tempfile.html#tempfile.tempdir).\n\n\n### test(expression)\n\nAvailable expression primaries:\n\n+ `'-b', 'path'`: true if path is a block device\n+ `'-c', 'path'`: true if path is a character device\n+ `'-d', 'path'`: true if path is a directory\n+ `'-e', 'path'`: true if path exists\n+ `'-f', 'path'`: true if path is a regular file\n+ `'-L', 'path'`: true if path is a symbolic link\n+ `'-p', 'path'`: true if path is a pipe (FIFO)\n+ `'-S', 'path'`: true if path is a socket\n\nExamples:\n\n```javascript\nif (test('-d', path)) { /* do something with dir */ };\nif (!test('-f', path)) continue; // skip if it's a regular file\n```\n\nEvaluates `expression` using the available primaries and returns corresponding value.\n\n\n### ShellString.prototype.to(file)\n\nExamples:\n\n```javascript\ncat('input.txt').to('output.txt');\n```\n\nAnalogous to the redirection operator `>` in Unix, but works with\n`ShellStrings` (such as those returned by `cat`, `grep`, etc.). _Like Unix\nredirections, `to()` will overwrite any existing file!_\n\n\n### ShellString.prototype.toEnd(file)\n\nExamples:\n\n```javascript\ncat('input.txt').toEnd('output.txt');\n```\n\nAnalogous to the redirect-and-append operator `>>` in Unix, but works with\n`ShellStrings` (such as those returned by `cat`, `grep`, etc.).\n\n\n### touch([options,] file [, file ...])\n### touch([options,] file_array)\n\nAvailable options:\n\n+ `-a`: Change only the access time\n+ `-c`: Do not create any files\n+ `-m`: Change only the modification time\n+ `-d DATE`: Parse `DATE` and use it instead of current time\n+ `-r FILE`: Use `FILE`'s times instead of current time\n\nExamples:\n\n```javascript\ntouch('source.js');\ntouch('-c', '/path/to/some/dir/source.js');\ntouch({ '-r': FILE }, '/path/to/some/dir/source.js');\n```\n\nUpdate the access and modification times of each `FILE` to the current time.\nA `FILE` argument that does not exist is created empty, unless `-c` is supplied.\nThis is a partial implementation of [`touch(1)`](http://linux.die.net/man/1/touch).\n\n\n### uniq([options,] [input, [output]])\n\nAvailable options:\n\n+ `-i`: Ignore case while comparing\n+ `-c`: Prefix lines by the number of occurrences\n+ `-d`: Only print duplicate lines, one for each group of identical lines\n\nExamples:\n\n```javascript\nuniq('foo.txt');\nuniq('-i', 'foo.txt');\nuniq('-cd', 'foo.txt', 'bar.txt');\n```\n\nFilter adjacent matching lines from `input`.\n\n\n### which(command)\n\nExamples:\n\n```javascript\nvar nodeExec = which('node');\n```\n\nSearches for `command` in the system's `PATH`. On Windows, this uses the\n`PATHEXT` variable to append the extension if it's not already executable.\nReturns string containing the absolute path to `command`.\n\n\n### exit(code)\n\nExits the current process with the given exit `code`.\n\n### error()\n\nTests if error occurred in the last command. Returns a truthy value if an\nerror returned, or a falsy value otherwise.\n\n**Note**: do not rely on the\nreturn value to be an error message. If you need the last error message, use\nthe `.stderr` attribute from the last command's return value instead.\n\n\n### ShellString(str)\n\nExamples:\n\n```javascript\nvar foo = ShellString('hello world');\n```\n\nTurns a regular string into a string-like object similar to what each\ncommand returns. This has special methods, like `.to()` and `.toEnd()`.\n\n\n### env['VAR_NAME']\n\nObject containing environment variables (both getter and setter). Shortcut\nto `process.env`.\n\n### Pipes\n\nExamples:\n\n```javascript\ngrep('foo', 'file1.txt', 'file2.txt').sed(/o/g, 'a').to('output.txt');\necho('files with o\\'s in the name:\\n' + ls().grep('o'));\ncat('test.js').exec('node'); // pipe to exec() call\n```\n\nCommands can send their output to another command in a pipe-like fashion.\n`sed`, `grep`, `cat`, `exec`, `to`, and `toEnd` can appear on the right-hand\nside of a pipe. Pipes can be chained.\n\n## Configuration\n\n\n### config.silent\n\nExample:\n\n```javascript\nvar sh = require('shelljs');\nvar silentState = sh.config.silent; // save old silent state\nsh.config.silent = true;\n/* ... */\nsh.config.silent = silentState; // restore old silent state\n```\n\nSuppresses all command output if `true`, except for `echo()` calls.\nDefault is `false`.\n\n### config.fatal\n\nExample:\n\n```javascript\nrequire('shelljs/global');\nconfig.fatal = true; // or set('-e');\ncp('this_file_does_not_exist', '/dev/null'); // throws Error here\n/* more commands... */\n```\n\nIf `true`, the script will throw a Javascript error when any shell.js\ncommand encounters an error. Default is `false`. This is analogous to\nBash's `set -e`.\n\n### config.verbose\n\nExample:\n\n```javascript\nconfig.verbose = true; // or set('-v');\ncd('dir/');\nrm('-rf', 'foo.txt', 'bar.txt');\nexec('echo hello');\n```\n\nWill print each command as follows:\n\n```\ncd dir/\nrm -rf foo.txt bar.txt\nexec echo hello\n```\n\n### config.globOptions\n\nExample:\n\n```javascript\nconfig.globOptions = {nodir: true};\n```\n\nUse this value for calls to `glob.sync()` instead of the default options.\n\n### config.reset()\n\nExample:\n\n```javascript\nvar shell = require('shelljs');\n// Make changes to shell.config, and do stuff...\n/* ... */\nshell.config.reset(); // reset to original state\n// Do more stuff, but with original settings\n/* ... */\n```\n\nReset `shell.config` to the defaults:\n\n```javascript\n{\n  fatal: false,\n  globOptions: {},\n  maxdepth: 255,\n  noglob: false,\n  silent: false,\n  verbose: false,\n}\n```\n\n## Team\n\n| [![Nate Fischer](https://avatars.githubusercontent.com/u/5801521?s=130)](https://github.com/nfischer) | [![Brandon Freitag](https://avatars1.githubusercontent.com/u/5988055?v=3&s=130)](http://github.com/freitagbr) |\n|:---:|:---:|\n| [Nate Fischer](https://github.com/nfischer) | [Brandon Freitag](http://github.com/freitagbr) |"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 307525}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6059204}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25412290}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 76918357}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 139226670}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 266242371}], "dependentsCount": 9228, "starsCount": 432}, "github": {"homepage": "https://documentup.com/shelljs/shelljs", "starsCount": 11097, "forksCount": 640, "subscribersCount": 179, "issues": {"count": 998, "openCount": 80, "distribution": {"3600": 55, "10800": 55, "32400": 44, "97200": 137, "291600": 122, "874800": 138, "2624400": 83, "7873200": 79, "23619600": 92, "70858800": 124, "212576400": 69}, "isDisabled": false}, "contributors": [{"username": "nfischer", "commitsCount": 260}, {"username": "arturadib", "commitsCount": 191}, {"username": "freitagbr", "commitsCount": 40}, {"username": "ariporad", "commitsCount": 15}, {"username": "mstade", "commitsCount": 13}, {"username": "utensil", "commitsCount": 10}, {"username": "aeosynth", "commitsCount": 9}, {"username": "a10y", "commitsCount": 7}, {"username": "rezonant", "commitsCount": 6}, {"username": "brandonramirez", "commitsCount": 5}, {"username": "stephenmathieson", "commitsCount": 5}, {"username": "BYK", "commitsCount": 4}, {"username": "TimothyGu", "commitsCount": 4}, {"username": "andreialecu", "commitsCount": 4}, {"username": "Schoonology", "commitsCount": 3}, {"username": "iapain", "commitsCount": 3}, {"username": "JulianLaval", "commitsCount": 2}, {"username": "danielepolencic", "commitsCount": 2}, {"username": "frandiox", "commitsCount": 2}, {"username": "gyandeeps", "commitsCount": 2}, {"username": "idearat", "commitsCount": 2}, {"username": "jamon", "commitsCount": 2}, {"username": "joshi-sh", "commitsCount": 2}, {"username": "termosa", "commitsCount": 2}, {"username": "wyardley", "commitsCount": 2}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Jason-Cooke", "commitsCount": 1}, {"username": "TingluoHuang", "commitsCount": 1}, {"username": "WesCossick", "commitsCount": 1}, {"username": "Zearin", "commitsCount": 1}, {"username": "abdul-martinez", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "alexreg", "commitsCount": 1}, {"username": "ando-takahiro", "commitsCount": 1}, {"username": "asmblah", "commitsCount": 1}, {"username": "binki", "commitsCount": 1}, {"username": "charlesread", "commitsCount": 1}, {"username": "charlierudolph", "commitsCount": 1}, {"username": "christopherthielen", "commitsCount": 1}, {"username": "dallonf", "commitsCount": 1}, {"username": "dthree", "commitsCount": 1}, {"username": "dwi2", "commitsCount": 1}, {"username": "faheel", "commitsCount": 1}, {"username": "gcca", "commitsCount": 1}, {"username": "giosh94mhz", "commitsCount": 1}, {"username": "gkalpak", "commitsCount": 1}, {"username": "jrmclaurin", "commitsCount": 1}, {"username": "kerphi", "commitsCount": 1}, {"username": "keskival", "commitsCount": 1}, {"username": "kkujala", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "levithomason", "commitsCount": 1}, {"username": "lge88", "commitsCount": 1}, {"username": "madrobby", "commitsCount": 1}, {"username": "maxnordlund", "commitsCount": 1}, {"username": "ndelitski", "commitsCount": 1}, {"username": "nzakas", "commitsCount": 1}, {"username": "panrafal", "commitsCount": 1}, {"username": "ppsleep", "commitsCount": 1}, {"username": "ratbeard", "commitsCount": 1}, {"username": "rizowski", "commitsCount": 1}, {"username": "sanemat", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "st-sloth", "commitsCount": 1}, {"username": "t3rmin4t0r", "commitsCount": 1}, {"username": "uttpal", "commitsCount": 1}, {"username": "vise890", "commitsCount": 1}, {"username": "voy", "commitsCount": 1}, {"username": "waddlesplash", "commitsCount": 1}, {"username": "zephraph", "commitsCount": 1}, {"username": "zommerfelds", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 22293, "testsSize": 190660, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/shelljs/shelljs/master.svg?label=unix", "service": "https://api.travis-ci.org/shelljs/shelljs.svg?branch=master", "shields": "https://img.shields.io/travis/shelljs/shelljs/master.svg", "content": "https://img.shields.io/travis/shelljs/shelljs/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/shelljs/shelljs/master.svg?label=windows", "service": "https://ci.appveyor.com/api/projects/status/shelljs/shelljs/branch/master", "shields": "https://img.shields.io/appveyor/ci/shelljs/shelljs/master.svg", "content": "https://img.shields.io/appveyor/ci/shelljs/shelljs/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/shelljs/shelljs/master.svg?label=coverage", "service": "https://codecov.io/github/shelljs/shelljs/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/shelljs/shelljs/master.svg", "content": "https://img.shields.io/codecov/c/github/shelljs/shelljs/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/shelljs.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/shelljs.svg", "content": "https://img.shields.io/npm/v/shelljs.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/shelljs.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/shelljs.svg", "content": "https://img.shields.io/npm/dm/shelljs.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.97, "outdatedDependencies": {"interpret": {"required": "^1.0.0", "stable": "2.2.0", "latest": "2.2.0"}, "rechoir": {"required": "^0.6.2", "stable": "0.7.0", "latest": "0.7.0"}}}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.8704999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 12419, "downloadsCount": 25639452.333333332, "downloadsAcceleration": 40423.88162100458, "dependentsCount": 9228}, "maintenance": {"releasesFrequency": 0.5428082191780822, "commitsFrequency": 0.22510273972602737, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7555261387239125, "detail": {"quality": 0.8392217169344338, "popularity": 0.8114158591092994, "maintenance": 0.6278973513009359}}}}, {"semver": {"analyzedAt": "2020-06-07T17:27:06.686Z", "collected": {"metadata": {"name": "semver", "scope": "unscoped", "version": "7.3.2", "description": "The semantic version parser used by npm.", "date": "2020-04-14T17:43:28.451Z", "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "adam_baldwin", "email": "evilpacket@gmail.com"}, {"username": "claudiahdz", "email": "cghr1990@gmail.com"}, {"username": "darcyclarke", "email": "darcy@darcyclarke.me"}, {"username": "isaacs", "email": "i@izs.me"}, {"username": "ruyadorno", "email": "ruyadorno@hotmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/npm/node-semver.git"}, "links": {"npm": "https://www.npmjs.com/package/semver", "homepage": "https://github.com/npm/node-semver#readme", "repository": "https://github.com/npm/node-semver", "bugs": "https://github.com/npm/node-semver/issues"}, "license": "ISC", "devDependencies": {"tap": "^14.10.7"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 18}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 24}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "semver(1) -- The semantic versioner for npm\n===========================================\n\n## Install\n\n```bash\nnpm install semver\n````\n\n## Usage\n\nAs a node module:\n\n```js\nconst semver = require('semver')\n\nsemver.valid('1.2.3') // '1.2.3'\nsemver.valid('a.b.c') // null\nsemver.clean('  =v1.2.3   ') // '1.2.3'\nsemver.satisfies('1.2.3', '1.x || >=2.5.0 || 5.0.0 - 7.2.3') // true\nsemver.gt('1.2.3', '9.8.7') // false\nsemver.lt('1.2.3', '9.8.7') // true\nsemver.minVersion('>=1.0.0') // '1.0.0'\nsemver.valid(semver.coerce('v2')) // '2.0.0'\nsemver.valid(semver.coerce('42.6.7.9.3-alpha')) // '42.6.7'\n```\n\nYou can also just load the module for the function that you care about, if\nyou'd like to minimize your footprint.\n\n```js\n// load the whole API at once in a single object\nconst semver = require('semver')\n\n// or just load the bits you need\n// all of them listed here, just pick and choose what you want\n\n// classes\nconst SemVer = require('semver/classes/semver')\nconst Comparator = require('semver/classes/comparator')\nconst Range = require('semver/classes/range')\n\n// functions for working with versions\nconst semverParse = require('semver/functions/parse')\nconst semverValid = require('semver/functions/valid')\nconst semverClean = require('semver/functions/clean')\nconst semverInc = require('semver/functions/inc')\nconst semverDiff = require('semver/functions/diff')\nconst semverMajor = require('semver/functions/major')\nconst semverMinor = require('semver/functions/minor')\nconst semverPatch = require('semver/functions/patch')\nconst semverPrerelease = require('semver/functions/prerelease')\nconst semverCompare = require('semver/functions/compare')\nconst semverRcompare = require('semver/functions/rcompare')\nconst semverCompareLoose = require('semver/functions/compare-loose')\nconst semverCompareBuild = require('semver/functions/compare-build')\nconst semverSort = require('semver/functions/sort')\nconst semverRsort = require('semver/functions/rsort')\n\n// low-level comparators between versions\nconst semverGt = require('semver/functions/gt')\nconst semverLt = require('semver/functions/lt')\nconst semverEq = require('semver/functions/eq')\nconst semverNeq = require('semver/functions/neq')\nconst semverGte = require('semver/functions/gte')\nconst semverLte = require('semver/functions/lte')\nconst semverCmp = require('semver/functions/cmp')\nconst semverCoerce = require('semver/functions/coerce')\n\n// working with ranges\nconst semverSatisfies = require('semver/functions/satisfies')\nconst semverMaxSatisfying = require('semver/ranges/max-satisfying')\nconst semverMinSatisfying = require('semver/ranges/min-satisfying')\nconst semverToComparators = require('semver/ranges/to-comparators')\nconst semverMinVersion = require('semver/ranges/min-version')\nconst semverValidRange = require('semver/ranges/valid')\nconst semverOutside = require('semver/ranges/outside')\nconst semverGtr = require('semver/ranges/gtr')\nconst semverLtr = require('semver/ranges/ltr')\nconst semverIntersects = require('semver/ranges/intersects')\nconst simplifyRange = require('semver/ranges/simplify')\nconst rangeSubset = require('semver/ranges/subset')\n```\n\nAs a command-line utility:\n\n```\n$ semver -h\n\nA JavaScript implementation of the https://semver.org/ specification\nCopyright Isaac Z. Schlueter\n\nUsage: semver [options] <version> [<version> [...]]\nPrints valid versions sorted by SemVer precedence\n\nOptions:\n-r --range <range>\n        Print versions that match the specified range.\n\n-i --increment [<level>]\n        Increment a version by the specified level.  Level can\n        be one of: major, minor, patch, premajor, preminor,\n        prepatch, or prerelease.  Default level is 'patch'.\n        Only one version may be specified.\n\n--preid <identifier>\n        Identifier to be used to prefix premajor, preminor,\n        prepatch or prerelease version increments.\n\n-l --loose\n        Interpret versions and ranges loosely\n\n-p --include-prerelease\n        Always include prerelease versions in range matching\n\n-c --coerce\n        Coerce a string into SemVer if possible\n        (does not imply --loose)\n\n--rtl\n        Coerce version strings right to left\n\n--ltr\n        Coerce version strings left to right (default)\n\nProgram exits successfully if any valid version satisfies\nall supplied ranges, and prints all satisfying versions.\n\nIf no satisfying versions are found, then exits failure.\n\nVersions are printed in ascending order, so supplying\nmultiple versions to the utility will just sort them.\n```\n\n## Versions\n\nA \"version\" is described by the `v2.0.0` specification found at\n<https://semver.org/>.\n\nA leading `\"=\"` or `\"v\"` character is stripped off and ignored.\n\n## Ranges\n\nA `version range` is a set of `comparators` which specify versions\nthat satisfy the range.\n\nA `comparator` is composed of an `operator` and a `version`.  The set\nof primitive `operators` is:\n\n* `<` Less than\n* `<=` Less than or equal to\n* `>` Greater than\n* `>=` Greater than or equal to\n* `=` Equal.  If no operator is specified, then equality is assumed,\n  so this operator is optional, but MAY be included.\n\nFor example, the comparator `>=1.2.7` would match the versions\n`1.2.7`, `1.2.8`, `2.5.3`, and `1.3.9`, but not the versions `1.2.6`\nor `1.1.0`.\n\nComparators can be joined by whitespace to form a `comparator set`,\nwhich is satisfied by the **intersection** of all of the comparators\nit includes.\n\nA range is composed of one or more comparator sets, joined by `||`.  A\nversion matches a range if and only if every comparator in at least\none of the `||`-separated comparator sets is satisfied by the version.\n\nFor example, the range `>=1.2.7 <1.3.0` would match the versions\n`1.2.7`, `1.2.8`, and `1.2.99`, but not the versions `1.2.6`, `1.3.0`,\nor `1.1.0`.\n\nThe range `1.2.7 || >=1.2.9 <2.0.0` would match the versions `1.2.7`,\n`1.2.9`, and `1.4.6`, but not the versions `1.2.8` or `2.0.0`.\n\n### Prerelease Tags\n\nIf a version has a prerelease tag (for example, `1.2.3-alpha.3`) then\nit will only be allowed to satisfy comparator sets if at least one\ncomparator with the same `[major, minor, patch]` tuple also has a\nprerelease tag.\n\nFor example, the range `>1.2.3-alpha.3` would be allowed to match the\nversion `1.2.3-alpha.7`, but it would *not* be satisfied by\n`3.4.5-alpha.9`, even though `3.4.5-alpha.9` is technically \"greater\nthan\" `1.2.3-alpha.3` according to the SemVer sort rules.  The version\nrange only accepts prerelease tags on the `1.2.3` version.  The\nversion `3.4.5` *would* satisfy the range, because it does not have a\nprerelease flag, and `3.4.5` is greater than `1.2.3-alpha.7`.\n\nThe purpose for this behavior is twofold.  First, prerelease versions\nfrequently are updated very quickly, and contain many breaking changes\nthat are (by the author's design) not yet fit for public consumption.\nTherefore, by default, they are excluded from range matching\nsemantics.\n\nSecond, a user who has opted into using a prerelease version has\nclearly indicated the intent to use *that specific* set of\nalpha/beta/rc versions.  By including a prerelease tag in the range,\nthe user is indicating that they are aware of the risk.  However, it\nis still not appropriate to assume that they have opted into taking a\nsimilar risk on the *next* set of prerelease versions.\n\nNote that this behavior can be suppressed (treating all prerelease\nversions as if they were normal versions, for the purpose of range\nmatching) by setting the `includePrerelease` flag on the options\nobject to any\n[functions](https://github.com/npm/node-semver#functions) that do\nrange matching.\n\n#### Prerelease Identifiers\n\nThe method `.inc` takes an additional `identifier` string argument that\nwill append the value of the string as a prerelease identifier:\n\n```javascript\nsemver.inc('1.2.3', 'prerelease', 'beta')\n// '1.2.4-beta.0'\n```\n\ncommand-line example:\n\n```bash\n$ semver 1.2.3 -i prerelease --preid beta\n1.2.4-beta.0\n```\n\nWhich then can be used to increment further:\n\n```bash\n$ semver 1.2.4-beta.0 -i prerelease\n1.2.4-beta.1\n```\n\n### Advanced Range Syntax\n\nAdvanced range syntax desugars to primitive comparators in\ndeterministic ways.\n\nAdvanced ranges may be combined in the same way as primitive\ncomparators using white space or `||`.\n\n#### Hyphen Ranges `X.Y.Z - A.B.C`\n\nSpecifies an inclusive set.\n\n* `1.2.3 - 2.3.4` := `>=1.2.3 <=2.3.4`\n\nIf a partial version is provided as the first version in the inclusive\nrange, then the missing pieces are replaced with zeroes.\n\n* `1.2 - 2.3.4` := `>=1.2.0 <=2.3.4`\n\nIf a partial version is provided as the second version in the\ninclusive range, then all versions that start with the supplied parts\nof the tuple are accepted, but nothing that would be greater than the\nprovided tuple parts.\n\n* `1.2.3 - 2.3` := `>=1.2.3 <2.4.0-0`\n* `1.2.3 - 2` := `>=1.2.3 <3.0.0-0`\n\n#### X-Ranges `1.2.x` `1.X` `1.2.*` `*`\n\nAny of `X`, `x`, or `*` may be used to \"stand in\" for one of the\nnumeric values in the `[major, minor, patch]` tuple.\n\n* `*` := `>=0.0.0` (Any version satisfies)\n* `1.x` := `>=1.0.0 <2.0.0-0` (Matching major version)\n* `1.2.x` := `>=1.2.0 <1.3.0-0` (Matching major and minor versions)\n\nA partial version range is treated as an X-Range, so the special\ncharacter is in fact optional.\n\n* `\"\"` (empty string) := `*` := `>=0.0.0`\n* `1` := `1.x.x` := `>=1.0.0 <2.0.0-0`\n* `1.2` := `1.2.x` := `>=1.2.0 <1.3.0-0`\n\n#### Tilde Ranges `~1.2.3` `~1.2` `~1`\n\nAllows patch-level changes if a minor version is specified on the\ncomparator.  Allows minor-level changes if not.\n\n* `~1.2.3` := `>=1.2.3 <1.(2+1).0` := `>=1.2.3 <1.3.0-0`\n* `~1.2` := `>=1.2.0 <1.(2+1).0` := `>=1.2.0 <1.3.0-0` (Same as `1.2.x`)\n* `~1` := `>=1.0.0 <(1+1).0.0` := `>=1.0.0 <2.0.0-0` (Same as `1.x`)\n* `~0.2.3` := `>=0.2.3 <0.(2+1).0` := `>=0.2.3 <0.3.0-0`\n* `~0.2` := `>=0.2.0 <0.(2+1).0` := `>=0.2.0 <0.3.0-0` (Same as `0.2.x`)\n* `~0` := `>=0.0.0 <(0+1).0.0` := `>=0.0.0 <1.0.0-0` (Same as `0.x`)\n* `~1.2.3-beta.2` := `>=1.2.3-beta.2 <1.3.0-0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n\n#### Caret Ranges `^1.2.3` `^0.2.5` `^0.0.4`\n\nAllows changes that do not modify the left-most non-zero element in the\n`[major, minor, patch]` tuple.  In other words, this allows patch and\nminor updates for versions `1.0.0` and above, patch updates for\nversions `0.X >=0.1.0`, and *no* updates for versions `0.0.X`.\n\nMany authors treat a `0.x` version as if the `x` were the major\n\"breaking-change\" indicator.\n\nCaret ranges are ideal when an author may make breaking changes\nbetween `0.2.4` and `0.3.0` releases, which is a common practice.\nHowever, it presumes that there will *not* be breaking changes between\n`0.2.4` and `0.2.5`.  It allows for changes that are presumed to be\nadditive (but non-breaking), according to commonly observed practices.\n\n* `^1.2.3` := `>=1.2.3 <2.0.0-0`\n* `^0.2.3` := `>=0.2.3 <0.3.0-0`\n* `^0.0.3` := `>=0.0.3 <0.0.4-0`\n* `^1.2.3-beta.2` := `>=1.2.3-beta.2 <2.0.0-0` Note that prereleases in\n  the `1.2.3` version will be allowed, if they are greater than or\n  equal to `beta.2`.  So, `1.2.3-beta.4` would be allowed, but\n  `1.2.4-beta.2` would not, because it is a prerelease of a\n  different `[major, minor, patch]` tuple.\n* `^0.0.3-beta` := `>=0.0.3-beta <0.0.4-0`  Note that prereleases in the\n  `0.0.3` version *only* will be allowed, if they are greater than or\n  equal to `beta`.  So, `0.0.3-pr.2` would be allowed.\n\nWhen parsing caret ranges, a missing `patch` value desugars to the\nnumber `0`, but will allow flexibility within that value, even if the\nmajor and minor versions are both `0`.\n\n* `^1.2.x` := `>=1.2.0 <2.0.0-0`\n* `^0.0.x` := `>=0.0.0 <0.1.0-0`\n* `^0.0` := `>=0.0.0 <0.1.0-0`\n\nA missing `minor` and `patch` values will desugar to zero, but also\nallow flexibility within those values, even if the major version is\nzero.\n\n* `^1.x` := `>=1.0.0 <2.0.0-0`\n* `^0.x` := `>=0.0.0 <1.0.0-0`\n\n### Range Grammar\n\nPutting all this together, here is a Backus-Naur grammar for ranges,\nfor the benefit of parser authors:\n\n```bnf\nrange-set  ::= range ( logical-or range ) *\nlogical-or ::= ( ' ' ) * '||' ( ' ' ) *\nrange      ::= hyphen | simple ( ' ' simple ) * | ''\nhyphen     ::= partial ' - ' partial\nsimple     ::= primitive | partial | tilde | caret\nprimitive  ::= ( '<' | '>' | '>=' | '<=' | '=' ) partial\npartial    ::= xr ( '.' xr ( '.' xr qualifier ? )? )?\nxr         ::= 'x' | 'X' | '*' | nr\nnr         ::= '0' | ['1'-'9'] ( ['0'-'9'] ) *\ntilde      ::= '~' partial\ncaret      ::= '^' partial\nqualifier  ::= ( '-' pre )? ( '+' build )?\npre        ::= parts\nbuild      ::= parts\nparts      ::= part ( '.' part ) *\npart       ::= nr | [-0-9A-Za-z]+\n```\n\n## Functions\n\nAll methods and classes take a final `options` object argument.  All\noptions in this object are `false` by default.  The options supported\nare:\n\n- `loose`  Be more forgiving about not-quite-valid semver strings.\n  (Any resulting output will always be 100% strict compliant, of\n  course.)  For backwards compatibility reasons, if the `options`\n  argument is a boolean value instead of an object, it is interpreted\n  to be the `loose` param.\n- `includePrerelease`  Set to suppress the [default\n  behavior](https://github.com/npm/node-semver#prerelease-tags) of\n  excluding prerelease tagged versions from ranges unless they are\n  explicitly opted into.\n\nStrict-mode Comparators and Ranges will be strict about the SemVer\nstrings that they parse.\n\n* `valid(v)`: Return the parsed version, or null if it's not valid.\n* `inc(v, release)`: Return the version incremented by the release\n  type (`major`,   `premajor`, `minor`, `preminor`, `patch`,\n  `prepatch`, or `prerelease`), or null if it's not valid\n  * `premajor` in one call will bump the version up to the next major\n    version and down to a prerelease of that major version.\n    `preminor`, and `prepatch` work the same way.\n  * If called from a non-prerelease version, the `prerelease` will work the\n    same as `prepatch`. It increments the patch version, then makes a\n    prerelease. If the input version is already a prerelease it simply\n    increments it.\n* `prerelease(v)`: Returns an array of prerelease components, or null\n  if none exist. Example: `prerelease('1.2.3-alpha.1') -> ['alpha', 1]`\n* `major(v)`: Return the major version number.\n* `minor(v)`: Return the minor version number.\n* `patch(v)`: Return the patch version number.\n* `intersects(r1, r2, loose)`: Return true if the two supplied ranges\n  or comparators intersect.\n* `parse(v)`: Attempt to parse a string as a semantic version, returning either\n  a `SemVer` object or `null`.\n\n### Comparison\n\n* `gt(v1, v2)`: `v1 > v2`\n* `gte(v1, v2)`: `v1 >= v2`\n* `lt(v1, v2)`: `v1 < v2`\n* `lte(v1, v2)`: `v1 <= v2`\n* `eq(v1, v2)`: `v1 == v2` This is true if they're logically equivalent,\n  even if they're not the exact same string.  You already know how to\n  compare strings.\n* `neq(v1, v2)`: `v1 != v2` The opposite of `eq`.\n* `cmp(v1, comparator, v2)`: Pass in a comparison string, and it'll call\n  the corresponding function above.  `\"===\"` and `\"!==\"` do simple\n  string comparison, but are included for completeness.  Throws if an\n  invalid comparison string is provided.\n* `compare(v1, v2)`: Return `0` if `v1 == v2`, or `1` if `v1` is greater, or `-1` if\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `rcompare(v1, v2)`: The reverse of compare.  Sorts an array of versions\n  in descending order when passed to `Array.sort()`.\n* `compareBuild(v1, v2)`: The same as `compare` but considers `build` when two versions\n  are equal.  Sorts in ascending order if passed to `Array.sort()`.\n  `v2` is greater.  Sorts in ascending order if passed to `Array.sort()`.\n* `diff(v1, v2)`: Returns difference between two versions by the release type\n  (`major`, `premajor`, `minor`, `preminor`, `patch`, `prepatch`, or `prerelease`),\n  or null if the versions are the same.\n\n### Comparators\n\n* `intersects(comparator)`: Return true if the comparators intersect\n\n### Ranges\n\n* `validRange(range)`: Return the valid range or null if it's not valid\n* `satisfies(version, range)`: Return true if the version satisfies the\n  range.\n* `maxSatisfying(versions, range)`: Return the highest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minSatisfying(versions, range)`: Return the lowest version in the list\n  that satisfies the range, or `null` if none of them do.\n* `minVersion(range)`: Return the lowest version that can possibly match\n  the given range.\n* `gtr(version, range)`: Return `true` if version is greater than all the\n  versions possible in the range.\n* `ltr(version, range)`: Return `true` if version is less than all the\n  versions possible in the range.\n* `outside(version, range, hilo)`: Return true if the version is outside\n  the bounds of the range in either the high or low direction.  The\n  `hilo` argument must be either the string `'>'` or `'<'`.  (This is\n  the function called by `gtr` and `ltr`.)\n* `intersects(range)`: Return true if any of the ranges comparators intersect\n* `simplifyRange(versions, range)`: Return a \"simplified\" range that\n  matches the same items in `versions` list as the range specified.  Note\n  that it does *not* guarantee that it would match the same versions in all\n  cases, only for the set of versions provided.  This is useful when\n  generating ranges by joining together multiple versions with `||`\n  programmatically, to provide the user with something a bit more\n  ergonomic.  If the provided range is shorter in string-length than the\n  generated range, then that is returned.\n* `subset(subRange, superRange)`: Return `true` if the `subRange` range is\n  entirely contained by the `superRange` range.\n\nNote that, since ranges may be non-contiguous, a version might not be\ngreater than a range, less than a range, *or* satisfy a range!  For\nexample, the range `1.2 <1.2.9 || >2.0.0` would have a hole from `1.2.9`\nuntil `2.0.0`, so the version `1.2.10` would not be greater than the\nrange (because `2.0.1` satisfies, which is higher), nor less than the\nrange (since `1.2.8` satisfies, which is lower), and it also does not\nsatisfy the range.\n\nIf you want to know if a version satisfies or does not satisfy a\nrange, use the `satisfies(version, range)` function.\n\n### Coercion\n\n* `coerce(version, options)`: Coerces a string to semver if possible\n\nThis aims to provide a very forgiving translation of a non-semver string to\nsemver. It looks for the first digit in a string, and consumes all\nremaining characters which satisfy at least a partial semver (e.g., `1`,\n`1.2`, `1.2.3`) up to the max permitted length (256 characters).  Longer\nversions are simply truncated (`4.6.3.9.2-alpha2` becomes `4.6.3`).  All\nsurrounding text is simply ignored (`v3.4 replaces v3.3.1` becomes\n`3.4.0`).  Only text which lacks digits will fail coercion (`version one`\nis not valid).  The maximum  length for any semver component considered for\ncoercion is 16 characters; longer components will be ignored\n(`10000000000000000.4.7.4` becomes `4.7.4`).  The maximum value for any\nsemver component is `Number.MAX_SAFE_INTEGER || (2**53 - 1)`; higher value\ncomponents are invalid (`9999999999999999.4.7.4` is likely invalid).\n\nIf the `options.rtl` flag is set, then `coerce` will return the right-most\ncoercible tuple that does not share an ending index with a longer coercible\ntuple.  For example, `1.2.3.4` will return `2.3.4` in rtl mode, not\n`4.0.0`.  `1.2.3/4` will return `4.0.0`, because the `4` is not a part of\nany other overlapping SemVer tuple.\n\n### Clean\n\n* `clean(version)`: Clean a string to be a valid semver if possible\n\nThis will return a cleaned and trimmed semver version. If the provided\nversion is not valid a null will be returned. This does not work for\nranges.\n\nex.\n* `s.clean(' = v 2.1.5foo')`: `null`\n* `s.clean(' = v 2.1.5foo', { loose: true })`: `'2.1.5-foo'`\n* `s.clean(' = v 2.1.5-foo')`: `null`\n* `s.clean(' = v 2.1.5-foo', { loose: true })`: `'2.1.5-foo'`\n* `s.clean('=v2.1.5')`: `'2.1.5'`\n* `s.clean('  =v2.1.5')`: `2.1.5`\n* `s.clean('      2.1.5   ')`: `'2.1.5'`\n* `s.clean('~1.0.0')`: `null`\n\n## Exported Modules\n\n<!--\nTODO: Make sure that all of these items are documented (classes aren't,\neg), and then pull the module name into the documentation for that specific\nthing.\n-->\n\nYou may pull in just the part of this semver utility that you need, if you\nare sensitive to packing and tree-shaking concerns.  The main\n`require('semver')` export uses getter functions to lazily load the parts\nof the API that are used.\n\nThe following modules are available:\n\n* `require('semver')`\n* `require('semver/classes')`\n* `require('semver/classes/comparator')`\n* `require('semver/classes/range')`\n* `require('semver/classes/semver')`\n* `require('semver/functions/clean')`\n* `require('semver/functions/cmp')`\n* `require('semver/functions/coerce')`\n* `require('semver/functions/compare')`\n* `require('semver/functions/compare-build')`\n* `require('semver/functions/compare-loose')`\n* `require('semver/functions/diff')`\n* `require('semver/functions/eq')`\n* `require('semver/functions/gt')`\n* `require('semver/functions/gte')`\n* `require('semver/functions/inc')`\n* `require('semver/functions/lt')`\n* `require('semver/functions/lte')`\n* `require('semver/functions/major')`\n* `require('semver/functions/minor')`\n* `require('semver/functions/neq')`\n* `require('semver/functions/parse')`\n* `require('semver/functions/patch')`\n* `require('semver/functions/prerelease')`\n* `require('semver/functions/rcompare')`\n* `require('semver/functions/rsort')`\n* `require('semver/functions/satisfies')`\n* `require('semver/functions/sort')`\n* `require('semver/functions/valid')`\n* `require('semver/ranges/gtr')`\n* `require('semver/ranges/intersects')`\n* `require('semver/ranges/ltr')`\n* `require('semver/ranges/max-satisfying')`\n* `require('semver/ranges/min-satisfying')`\n* `require('semver/ranges/min-version')`\n* `require('semver/ranges/outside')`\n* `require('semver/ranges/to-comparators')`\n* `require('semver/ranges/valid')`"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3527528}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 61636753}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 254261248}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 742222896}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1295312721}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2246621901}], "dependentsCount": 11026, "starsCount": 176}, "github": {"starsCount": 3296, "forksCount": 340, "subscribersCount": 86, "issues": {"count": 323, "openCount": 32, "distribution": {"3600": 33, "10800": 18, "32400": 29, "97200": 25, "291600": 18, "874800": 28, "2624400": 27, "7873200": 43, "23619600": 42, "70858800": 37, "212576400": 23}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 251}, {"username": "pjohnmeyer", "commitsCount": 9}, {"username": "othiym23", "commitsCount": 6}, {"username": "AsaAyers", "commitsCount": 5}, {"username": "rtfpessoa", "commitsCount": 5}, {"username": "agnoster", "commitsCount": 4}, {"username": "adamreeve", "commitsCount": 3}, {"username": "alanshaw", "commitsCount": 3}, {"username": "joeledwards", "commitsCount": 3}, {"username": "Hypercubed", "commitsCount": 2}, {"username": "ahmadnassri", "commitsCount": 2}, {"username": "bzoz", "commitsCount": 2}, {"username": "coreyfarrell", "commitsCount": 2}, {"username": "cvrebert", "commitsCount": 2}, {"username": "luk-", "commitsCount": 2}, {"username": "protyposis", "commitsCount": 2}, {"username": "raphaelzulliger", "commitsCount": 2}, {"username": "Asthetic", "commitsCount": 1}, {"username": "C45tr0", "commitsCount": 1}, {"username": "Flarna", "commitsCount": 1}, {"username": "XhmikosR", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "arikon", "commitsCount": 1}, {"username": "asnowfix", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "bromanko", "commitsCount": 1}, {"username": "chellmuth", "commitsCount": 1}, {"username": "davidchambers", "commitsCount": 1}, {"username": "dodev", "commitsCount": 1}, {"username": "eddiemonge", "commitsCount": 1}, {"username": "edef1c", "commitsCount": 1}, {"username": "eemeli", "commitsCount": 1}, {"username": "ekmartin", "commitsCount": 1}, {"username": "fjakobs", "commitsCount": 1}, {"username": "hoobdeebla", "commitsCount": 1}, {"username": "ixalon", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jiyinyiyong", "commitsCount": 1}, {"username": "kevinawoo", "commitsCount": 1}, {"username": "kuatsure", "commitsCount": 1}, {"username": "lm1", "commitsCount": 1}, {"username": "mal", "commitsCount": 1}, {"username": "megawac", "commitsCount": 1}, {"username": "memreflect", "commitsCount": 1}, {"username": "motet-a", "commitsCount": 1}, {"username": "nexdrew", "commitsCount": 1}, {"username": "repeatingbeats", "commitsCount": 1}, {"username": "seriema", "commitsCount": 1}, {"username": "sethkinast", "commitsCount": 1}, {"username": "stabbylambda", "commitsCount": 1}, {"username": "stephenharris", "commitsCount": 1}, {"username": "steveklabnik", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "vyclone", "commitsCount": 1}, {"username": "wraithgar", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 19}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 32}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 59}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 22109, "testsSize": 100782, "hasChangelog": true}, "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 1, "health": 1, "branding": 0}, "popularity": {"communityInterest": 3955, "downloadsCount": 247407632, "downloadsAcceleration": 840324.9312214614, "dependentsCount": 11026}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8184931506849316, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7967045625605386, "detail": {"quality": 0.8835752408616089, "popularity": 0.852370149604226, "maintenance": 0.6665783941159342}}}}, {"underscore": {"analyzedAt": "2020-06-06T00:54:05.175Z", "collected": {"metadata": {"name": "underscore", "scope": "unscoped", "version": "1.10.2", "description": "JavaScript's functional programming helper library.", "keywords": ["util", "functional", "server", "client", "browser"], "date": "2020-03-30T21:28:31.173Z", "author": {"name": "Jeremy Ashkenas", "email": "jeremy@documentcloud.org"}, "publisher": {"username": "jashkenas", "email": "jashkenas@gmail.com"}, "maintainers": [{"username": "jashkenas", "email": "jashkenas@gmail.com"}, {"username": "jridgewell", "email": "justin+npm@ridgewell.name"}], "repository": {"type": "git", "url": "git://github.com/jashkenas/underscore.git"}, "links": {"npm": "https://www.npmjs.com/package/underscore", "homepage": "https://underscorejs.org", "repository": "https://github.com/jashkenas/underscore", "bugs": "https://github.com/jashkenas/underscore/issues"}, "license": "MIT", "devDependencies": {"coveralls": "^2.11.2", "docco": "*", "eslint": "^6.8.0", "eslint-plugin-import": "^2.20.1", "gzip-size-cli": "^1.0.0", "husky": "^4.2.3", "karma": "^0.13.13", "karma-qunit": "~2.0.1", "karma-sauce-launcher": "^1.2.0", "nyc": "^2.1.3", "pretty-bytes-cli": "^1.0.0", "qunit": "^2.6.0", "qunit-cli": "~0.2.0", "rollup": "^0.59.4", "uglify-js": "3.3.21"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 4}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 5}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 5}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "__\n                      /\\ \\                                                         __\n     __  __    ___    \\_\\ \\     __   _ __   ____    ___    ___   _ __    __       /\\_\\    ____\n    /\\ \\/\\ \\ /' _ `\\  /'_  \\  /'__`\\/\\  __\\/ ,__\\  / ___\\ / __`\\/\\  __\\/'__`\\     \\/\\ \\  /',__\\\n    \\ \\ \\_\\ \\/\\ \\/\\ \\/\\ \\ \\ \\/\\  __/\\ \\ \\//\\__, `\\/\\ \\__//\\ \\ \\ \\ \\ \\//\\  __/  __  \\ \\ \\/\\__, `\\\n     \\ \\____/\\ \\_\\ \\_\\ \\___,_\\ \\____\\\\ \\_\\\\/\\____/\\ \\____\\ \\____/\\ \\_\\\\ \\____\\/\\_\\ _\\ \\ \\/\\____/\n      \\/___/  \\/_/\\/_/\\/__,_ /\\/____/ \\/_/ \\/___/  \\/____/\\/___/  \\/_/ \\/____/\\/_//\\ \\_\\ \\/___/\n                                                                                  \\ \\____/\n                                                                                   \\/___/\n\nUnderscore.js is a utility-belt library for JavaScript that provides\nsupport for the usual functional suspects (each, map, reduce, filter...)\nwithout extending any core JavaScript objects.\n\nFor Docs, License, Tests, and pre-packed downloads, see:\nhttps://underscorejs.org\n\nFor support and questions, please use\n[the gitter channel](https://gitter.im/jashkenas/underscore)\nor [stackoverflow](https://stackoverflow.com/search?q=underscore.js)\n\nUnderscore is an open-sourced component of DocumentCloud:\nhttps://github.com/documentcloud\n\nMany thanks to our contributors:\nhttps://github.com/jashkenas/underscore/contributors\n\nThis project adheres to a [code of conduct](CODE_OF_CONDUCT.md). By participating, you are expected to uphold this code."}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1238427}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 7251572}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 31788355}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 94873196}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 175375165}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 344209203}], "dependentsCount": 17337, "starsCount": 574}, "github": {"homepage": "https://underscorejs.org", "starsCount": 25353, "forksCount": 5525, "subscribersCount": 908, "issues": {"count": 2840, "openCount": 57, "distribution": {"3600": 665, "10800": 286, "32400": 317, "97200": 335, "291600": 241, "874800": 258, "2624400": 298, "7873200": 197, "23619600": 87, "70858800": 61, "212576400": 95}, "isDisabled": false}, "contributors": [{"username": "jashkenas", "commitsCount": 573}, {"username": "braddunbar", "commitsCount": 127}, {"username": "megawac", "commitsCount": 94}, {"username": "captbaritone", "commitsCount": 89}, {"username": "gyeates", "commitsCount": 51}, {"username": "akre54", "commitsCount": 50}, {"username": "jgonggrijp", "commitsCount": 50}, {"username": "jridgewell", "commitsCount": 50}, {"username": "michaelficarra", "commitsCount": 50}, {"username": "davidchambers", "commitsCount": 37}, {"username": "jdalton", "commitsCount": 30}, {"username": "ratbeard", "commitsCount": 22}, {"username": "ryantenney", "commitsCount": 22}, {"username": "mehdishojaei", "commitsCount": 14}, {"username": "maartenbreddels", "commitsCount": 11}, {"username": "jsoref", "commitsCount": 9}, {"username": "octatone", "commitsCount": 9}, {"username": "iamnoah", "commitsCount": 7}, {"username": "samuelclay", "commitsCount": 7}, {"username": "almost", "commitsCount": 6}, {"username": "lfac-pt", "commitsCount": 6}, {"username": "liuyl", "commitsCount": 6}, {"username": "mlanza", "commitsCount": 6}, {"username": "AdamCraven", "commitsCount": 5}, {"username": "caseywebdev", "commitsCount": 5}, {"username": "hackreactor-students", "commitsCount": 5}, {"username": "jamiebuilds", "commitsCount": 5}, {"username": "jasondavies", "commitsCount": 4}, {"username": "mrocklin", "commitsCount": 4}, {"username": "shinuza", "commitsCount": 4}, {"username": "vincentwoo", "commitsCount": 4}, {"username": "Florian-R", "commitsCount": 3}, {"username": "JensRantil", "commitsCount": 3}, {"username": "bnjmnt4n", "commitsCount": 3}, {"username": "coolov", "commitsCount": 3}, {"username": "craigmichaelmartin", "commitsCount": 3}, {"username": "helloenvoy-andrew", "commitsCount": 3}, {"username": "henryw4k", "commitsCount": 3}, {"username": "int3", "commitsCount": 3}, {"username": "jmrog", "commitsCount": 3}, {"username": "josephrubin", "commitsCount": 3}, {"username": "jrburke", "commitsCount": 3}, {"username": "kishanov", "commitsCount": 3}, {"username": "lifesinger", "commitsCount": 3}, {"username": "melnikov-s", "commitsCount": 3}, {"username": "paulfalgout", "commitsCount": 3}, {"username": "rfletcher", "commitsCount": 3}, {"username": "ryanve", "commitsCount": 3}, {"username": "sdwebster", "commitsCount": 3}, {"username": "smarden1", "commitsCount": 3}, {"username": "spadgos", "commitsCount": 3}, {"username": "wgpsutherland", "commitsCount": 3}, {"username": "xcodebuild", "commitsCount": 3}, {"username": "DmitryBaranovskiy", "commitsCount": 2}, {"username": "JeffAMcGee", "commitsCount": 2}, {"username": "JonAbrams", "commitsCount": 2}, {"username": "MahmudH", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "Suor", "commitsCount": 2}, {"username": "TalAter", "commitsCount": 2}, {"username": "ahonn", "commitsCount": 2}, {"username": "alanhogan", "commitsCount": 2}, {"username": "alanzheng88", "commitsCount": 2}, {"username": "amZotti", "commitsCount": 2}, {"username": "ankurp", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "bathos", "commitsCount": 2}, {"username": "bjh", "commitsCount": 2}, {"username": "brianhaveri", "commitsCount": 2}, {"username": "carltonf", "commitsCount": 2}, {"username": "chaoflow", "commitsCount": 2}, {"username": "cobbweb", "commitsCount": 2}, {"username": "dmitrygusev", "commitsCount": 2}, {"username": "dreyacosta", "commitsCount": 2}, {"username": "gka", "commitsCount": 2}, {"username": "jayphelps", "commitsCount": 2}, {"username": "jdelbello", "commitsCount": 2}, {"username": "josephlin55555", "commitsCount": 2}, {"username": "jtfairbank", "commitsCount": 2}, {"username": "kevinoid", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 2}, {"username": "liroyleshed", "commitsCount": 2}, {"username": "malclocke", "commitsCount": 2}, {"username": "marcusphillips", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "mattrobenolt", "commitsCount": 2}, {"username": "maw", "commitsCount": 2}, {"username": "mcmire", "commitsCount": 2}, {"username": "phadej", "commitsCount": 2}, {"username": "philfreo", "commitsCount": 2}, {"username": "rck109d", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "stevenharman", "commitsCount": 2}, {"username": "tjbarber", "commitsCount": 2}, {"username": "tkristiansen", "commitsCount": 2}, {"username": "tnga", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "tvibliani", "commitsCount": 2}, {"username": "yuchi", "commitsCount": 2}, {"username": "zertosh", "commitsCount": 2}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 46}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 59}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 60}]}, "source": {"files": {"readmeSize": 1517, "testsSize": 340758}, "linters": ["eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7454999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 32460, "downloadsCount": 31624398.666666668, "downloadsAcceleration": 36960.120224505314, "dependentsCount": 17337}, "maintenance": {"releasesFrequency": 0.858304794520548, "commitsFrequency": 0.9082260273972603, "openIssues": 1, "issuesDistribution": 0.4687970118493473}}, "score": {"final": 0.9355910678081263, "detail": {"quality": 0.9531051040185904, "popularity": 0.8749214330561123, "maintenance": 0.9812486715225996}}}}, {"karma-jasmine": {"analyzedAt": "2020-06-03T10:24:31.544Z", "collected": {"metadata": {"name": "karma-jasmine", "scope": "unscoped", "version": "3.3.1", "description": "A Karma plugin - adapter for Jasmine testing framework.", "keywords": ["karma-plugin", "karma-adapter", "jasmine"], "date": "2020-05-28T22:42:05.918Z", "author": {"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "maksimr", "email": "rv.maksim@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Maksim Ryzhikov", "email": "rv.maksim@gmail.com"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Friedel Ziegelmayer", "email": "dignifiedquire@gmail.com"}, {"name": "olegskl", "email": "sklyanchuk@gmail.com"}, {"name": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"name": "Cornelius Schmale", "email": "github@cschmale.de"}, {"name": "Arthur Thornton", "email": "arthur@thestorefront.com"}, {"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "Patrick McGuckin", "email": "patrick@gskinner.com"}, {"name": "Richard Park", "email": "objectiv@gmail.com"}, {"name": "XhmikosR", "email": "xhmikosr@gmail.com"}, {"name": "Fernando Costa", "email": "fadc80@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Niels Dequeker", "email": "niels.dequeker@gmail.com"}, {"name": "Robin Gloster", "email": "robin@loc-com.de"}, {"name": "Sahat Yalkabov", "email": "sakhat@gmail.com"}, {"name": "Schaaf, Martin", "email": "703355+mschaaf@users.noreply.github.com"}, {"name": "Sergey Tatarintsev", "email": "sevinf@yandex-team.ru"}, {"name": "Stefan Dragnev", "email": "dragnev@telerik.com"}, {"name": "Vladimir Belov", "email": "Vladimir.Belov@hotmail.com"}, {"name": "Yusuke Iinuma", "email": "yinm@users.noreply.github.com"}, {"name": "jiverson", "email": "jiverson222@gmail.com"}, {"name": "rpark", "email": "objectiv@gmail.com"}, {"name": "Aaron Hartwig", "email": "aaron.hartwig@whyhigh.com"}, {"name": "strille", "email": "strille@users.noreply.github.com"}, {"name": "Alesei N", "email": "github.com@bzik.net"}, {"name": "Barry Fitzgerald", "email": "barfitzgerald@gmail.com"}, {"name": "Dirk T", "email": "DirkToewe@GoogleMail.com"}, {"name": "Dmitriy Tychshenko", "email": "dtychshenko@users.noreply.github.com"}, {"name": "Georgii Dolzhykov", "email": "thorn.mailbox@gmail.com"}, {"name": "Gregg Van Hove", "email": "gvanhove@pivotal.io"}, {"name": "Jacob Trimble", "email": "modmaker@google.com"}, {"name": "Jo\u00e3o Pereira", "email": "joaopapereira@gmail.com"}, {"name": "Keen Yee Liau", "email": "kyliau@google.com"}, {"name": "Luis Aleman", "email": "Lalem001@users.noreply.github.com"}, {"name": "Marek Vavrecan", "email": "vavrecan@gmail.com"}, {"name": "Matthew Hill", "email": "Matthew.Hill4@bskyb.com"}, {"name": "Milan Lempera", "email": "milanlempera@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-jasmine.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-jasmine", "homepage": "https://github.com/karma-runner/karma-jasmine#readme", "repository": "https://github.com/karma-runner/karma-jasmine", "bugs": "https://github.com/karma-runner/karma-jasmine/issues"}, "license": "MIT", "dependencies": {"jasmine-core": "^3.5.0"}, "devDependencies": {"@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "conventional-changelog": "^3.1.18", "conventional-changelog-core": "^4.1.4", "eslint-config-standard": "^14.1.0", "eslint-plugin-import": "^2.20.0", "eslint-plugin-node": "^11.0.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "grunt": "^1.0.4", "grunt-bump": "^0.8.0", "grunt-conventional-changelog": "^6.1.0", "grunt-conventional-github-releaser": "^1.0.0", "grunt-eslint": "^22.0.0", "grunt-karma": "^3.0.2", "grunt-npm": "0.0.2", "husky": "^4.0.7", "jasmine": "^3.5.0", "karma": "^4.4.1", "karma-chrome-launcher": "^3.1.0", "karma-firefox-launcher": "^1.3.0", "load-grunt-tasks": "^5.1.0"}, "peerDependencies": {"karma": "*"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# karma-jasmine\n\n[![npm version](https://img.shields.io/npm/v/karma-jasmine.svg?style=flat-square)](https://www.npmjs.com/package/karma-jasmine) [![npm downloads](https://img.shields.io/npm/dm/karma-jasmine.svg?style=flat-square)](https://www.npmjs.com/package/karma-jasmine)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-jasmine/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-jasmine) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-jasmine.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-jasmine) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-jasmine.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-jasmine?type=dev)\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-jasmine) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n> Adapter for the [Jasmine](https://jasmine.github.io/) testing framework.\n\n## Installation\n\n```bash\nnpm install karma-jasmine --save-dev\n```\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['jasmine'],\n\n    files: [\n      '*.js'\n    ]\n  })\n}\n```\n\nIf you want to run only some tests matching a given pattern you can do this in the following way\n\n```bash\n$ karma start &\n$ karma run -- --grep=<pattern>\n```\n\nor\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      args: ['--grep', '<pattern>'],\n      ...\n    }\n  })\n}\n```\n\nIf you want to pass configuration options directly to jasmine you can do this in the following way\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    client: {\n      jasmine: {\n        random: true,\n        seed: '4321',\n        oneFailurePerSpec: true,\n        failFast: true,\n        timeoutInterval: 1000\n      }\n    }\n  })\n}\n```\n\n## Debug by URL\n\nFailing tests print a debug URL with `?spec=`. Use it with `--no_single_run`\nand paste it into your browser to focus on a single failing test.\n\n## Sharding\n\nBy setting `config.client.shardIndex` and `config.client.totalShards`, you can\nrun a subset of the full set of specs. Complete sharding support needs to be\ndone in the process that calls karma, and would need to support test result\nintegration across shards.\n\n---\n\nFor more information on Karma see the [homepage](https://karma-runner.github.com/)."}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 273073}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1446734}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6340321}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 18480846}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 33947760}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 64349526}], "dependentsCount": 366, "starsCount": 44}, "github": {"starsCount": 513, "forksCount": 158, "subscribersCount": 32, "issues": {"count": 271, "openCount": 17, "distribution": {"3600": 36, "10800": 10, "32400": 24, "97200": 26, "291600": 29, "874800": 25, "2624400": 22, "7873200": 27, "23619600": 14, "70858800": 47, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "vojtajina", "commitsCount": 58}, {"username": "johnjbarton", "commitsCount": 36}, {"username": "zzo", "commitsCount": 18}, {"username": "dignifiedquire", "commitsCount": 14}, {"username": "maksimr", "commitsCount": 13}, {"username": "olegskl", "commitsCount": 11}, {"username": "XhmikosR", "commitsCount": 5}, {"username": "readme42", "commitsCount": 5}, {"username": "semantic-release-bot", "commitsCount": 5}, {"username": "ArthurThornton", "commitsCount": 4}, {"username": "r-park", "commitsCount": 4}, {"username": "tehvgg", "commitsCount": 3}, {"username": "fadc80", "commitsCount": 2}, {"username": "DirkToewe", "commitsCount": 1}, {"username": "Lalem001", "commitsCount": 1}, {"username": "MilanLempera", "commitsCount": 1}, {"username": "TheModMaker", "commitsCount": 1}, {"username": "dtychshenko", "commitsCount": 1}, {"username": "globin", "commitsCount": 1}, {"username": "gnrlbzik", "commitsCount": 1}, {"username": "jiverson", "commitsCount": 1}, {"username": "joaopapereira", "commitsCount": 1}, {"username": "kyliau", "commitsCount": 1}, {"username": "limonte", "commitsCount": 1}, {"username": "mschaaf", "commitsCount": 1}, {"username": "nicojs", "commitsCount": 1}, {"username": "pablojim", "commitsCount": 1}, {"username": "sahat", "commitsCount": 1}, {"username": "slackersoft", "commitsCount": 1}, {"username": "strille", "commitsCount": 1}, {"username": "tailsu", "commitsCount": 1}, {"username": "thorn0", "commitsCount": 1}, {"username": "toolmagic", "commitsCount": 1}, {"username": "vavrecan", "commitsCount": 1}, {"username": "yinm", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 34}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 39}]}, "source": {"files": {"readmeSize": 2558, "testsSize": 23420, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-jasmine.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-jasmine.svg", "content": "https://img.shields.io/npm/v/karma-jasmine.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-jasmine.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-jasmine.svg", "content": "https://img.shields.io/npm/dm/karma-jasmine.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-jasmine/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-jasmine.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-jasmine/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-jasmine/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-jasmine.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-jasmine.svg", "shields": "https://img.shields.io/david/karma-runner/karma-jasmine.svg", "content": "https://img.shields.io/david/karma-runner/karma-jasmine.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-jasmine.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-jasmine/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-jasmine.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-jasmine.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 782, "downloadsCount": 6160282, "downloadsAcceleration": 11835.63938356164, "dependentsCount": 366}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9058219178082192, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.688833890144546, "detail": {"quality": 0.9439269187264678, "popularity": 0.492360849613617, "maintenance": 0.666655763319542}}}}, {"vue-loader": {"analyzedAt": "2020-06-03T00:07:37.187Z", "collected": {"metadata": {"name": "vue-loader", "scope": "unscoped", "version": "15.9.2", "description": "Vue single-file component loader for Webpack", "date": "2020-05-01T15:39:12.739Z", "author": {"name": "Evan You"}, "publisher": {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, "maintainers": [{"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/vue-loader", "homepage": "https://github.com/vuejs/vue-loader", "repository": "https://github.com/vuejs/vue-loader", "bugs": "https://github.com/vuejs/vue-loader/issues"}, "license": "MIT", "dependencies": {"@vue/component-compiler-utils": "^3.1.0", "hash-sum": "^1.0.2", "loader-utils": "^1.1.0", "vue-hot-reload-api": "^2.3.0", "vue-style-loader": "^4.1.0"}, "devDependencies": {"@types/webpack": "^4.4.27", "babel-core": "^6.26.0", "babel-loader": "^7.1.4", "babel-preset-env": "^1.6.1", "cache-loader": "^2.0.1", "conventional-changelog-cli": "^1.3.22", "css-loader": "^1.0.0", "eslint": "^4.19.0", "eslint-plugin-vue-libs": "^2.1.0", "file-loader": "^1.1.11", "html-webpack-plugin": "4.0.0-beta.14", "javascript-stringify": "^1.6.0", "jest": "^23.5.0", "jsdom": "^11.6.2", "json": "^9.0.6", "lint-staged": "^7.0.0", "markdown-loader": "^2.0.2", "memfs": "^3.1.2", "mini-css-extract-plugin": "^0.4.1", "node-sass": "^4.7.2", "normalize-newline": "^3.0.0", "null-loader": "^0.1.1", "postcss-loader": "^2.1.2", "pug": "^2.0.1", "pug-plain-loader": "^1.0.0", "raw-loader": "^0.5.1", "sass-loader": "^6.0.7", "source-map": "^0.5.0", "stylus": "^0.54.5", "stylus-loader": "^3.0.2", "sugarss": "^1.0.1", "ts-loader": "^4.2.0", "typescript": "^2.8.3", "url-loader": "^1.0.1", "vue": "^2.5.16", "vue-server-renderer": "^2.5.16", "vue-template-compiler": "^2.5.16", "vuepress": "^0.14.2", "vuepress-theme-vue": "^1.1.0", "webpack": "^4.1.0", "webpack-cli": "^3.2.0", "webpack-dev-server": "^3.1.1", "webpack-merge": "^4.1.2", "yorkie": "^1.0.3"}, "peerDependencies": {"css-loader": "*", "webpack": "^3.0.0 || ^4.1.0 || ^5.0.0-0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 15}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 34}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1193728}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6103356}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17995237}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 32447242}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 58255066}], "dependentsCount": 1601, "starsCount": 26}, "github": {"starsCount": 4336, "forksCount": 782, "subscribersCount": 120, "issues": {"count": 1659, "openCount": 92, "distribution": {"3600": 296, "10800": 132, "32400": 173, "97200": 154, "291600": 158, "874800": 196, "2624400": 156, "7873200": 159, "23619600": 123, "70858800": 88, "212576400": 24}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 197}, {"username": "sodatea", "commitsCount": 44}, {"username": "Jinjiang", "commitsCount": 33}, {"username": "Alex-Sokolov", "commitsCount": 9}, {"username": "clarkdo", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "jkzing", "commitsCount": 2}, {"username": "mrv1k", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "ulivz", "commitsCount": 2}, {"username": "18566246732", "commitsCount": 1}, {"username": "AndreasCag", "commitsCount": 1}, {"username": "AskingQuestions", "commitsCount": 1}, {"username": "Flyingmana", "commitsCount": 1}, {"username": "GMartigny", "commitsCount": 1}, {"username": "JounQin", "commitsCount": 1}, {"username": "NE-SmallTown", "commitsCount": 1}, {"username": "Val-istar-Guo", "commitsCount": 1}, {"username": "WilsonLiu95", "commitsCount": 1}, {"username": "YuJianrong", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "armano2", "commitsCount": 1}, {"username": "bibi7", "commitsCount": 1}, {"username": "bigtunacan", "commitsCount": 1}, {"username": "brianhelba", "commitsCount": 1}, {"username": "chenghuzi", "commitsCount": 1}, {"username": "chrisvfritz", "commitsCount": 1}, {"username": "davidguilherme", "commitsCount": 1}, {"username": "egoist", "commitsCount": 1}, {"username": "fnlctrl", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "hibariya", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "ishitatsuyuki", "commitsCount": 1}, {"username": "johnnywang1994", "commitsCount": 1}, {"username": "ktsn", "commitsCount": 1}, {"username": "liximomo", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "meowtec", "commitsCount": 1}, {"username": "netchampfaris", "commitsCount": 1}, {"username": "opl-", "commitsCount": 1}, {"username": "privatenumber", "commitsCount": 1}, {"username": "remote-star", "commitsCount": 1}, {"username": "rigor789", "commitsCount": 1}, {"username": "s-pace", "commitsCount": 1}, {"username": "scottbedard", "commitsCount": 1}, {"username": "sharkykh", "commitsCount": 1}, {"username": "srawlins", "commitsCount": 1}, {"username": "teal-front", "commitsCount": 1}, {"username": "unixzii", "commitsCount": 1}, {"username": "visualfanatic", "commitsCount": 1}, {"username": "wmzy", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 34}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 51}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 88708, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint"], "outdatedDependencies": {"hash-sum": {"required": "^1.0.2", "stable": "2.0.0", "latest": "2.0.0"}, "loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.6, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 5317, "downloadsCount": 5998412.333333333, "downloadsAcceleration": 16125.453614916296, "dependentsCount": 1601}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8194178082191781, "openIssues": 1, "issuesDistribution": 0.5255079980124482}}, "score": {"final": 0.7834419022640493, "detail": {"quality": 0.7298544830841383, "popularity": 0.6241837518563766, "maintenance": 0.988632126254503}}}}, {"enzyme": {"analyzedAt": "2020-05-11T05:11:12.728Z", "collected": {"metadata": {"name": "enzyme", "scope": "unscoped", "version": "3.11.0", "description": "JavaScript Testing utilities for React", "keywords": ["javascript", "shallow rendering", "shallowRender", "test", "reactjs", "react", "flux", "testing", "test utils", "assertion helpers", "tdd", "mocha"], "date": "2019-12-20T00:08:40.725Z", "author": {"name": "Leland Richardson", "email": "leland.richardson@airbnb.com"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "gdborton", "email": "gdborton@gmail.com"}, {"username": "intelligibabble", "email": "leland.m.richardson@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/enzyme.git", "directory": "packages/enzyme"}, "links": {"npm": "https://www.npmjs.com/package/enzyme", "homepage": "https://airbnb.io/enzyme/", "repository": "https://github.com/airbnb/enzyme", "bugs": "https://github.com/airbnb/enzyme/issues"}, "license": "MIT", "dependencies": {"array.prototype.flat": "^1.2.3", "cheerio": "^1.0.0-rc.3", "enzyme-shallow-equal": "^1.0.1", "function.prototype.name": "^1.1.2", "has": "^1.0.3", "html-element-map": "^1.2.0", "is-boolean-object": "^1.0.1", "is-callable": "^1.1.5", "is-number-object": "^1.0.4", "is-regex": "^1.0.5", "is-string": "^1.0.5", "is-subset": "^0.1.1", "lodash.escape": "^4.0.1", "lodash.isequal": "^4.5.0", "object-inspect": "^1.7.0", "object-is": "^1.0.2", "object.assign": "^4.1.0", "object.entries": "^1.1.1", "object.values": "^1.1.1", "raf": "^3.4.1", "rst-selector-parser": "^2.2.3", "string.prototype.trim": "^1.2.1"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-plugin-transform-replace-object-assign": "^1.0.0", "babel-preset-airbnb": "^2.6.0", "eslint": "^6.7.2", "eslint-config-airbnb": "^18.0.1", "eslint-plugin-import": "^2.19.1", "eslint-plugin-jsx-a11y": "^6.2.3", "eslint-plugin-react": "^7.17.0", "in-publish": "^2.0.0", "jsdom": "^6.5.1", "rimraf": "^2.7.1", "safe-publish-latest": "^1.1.4"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 14}], "readme": "Enzyme\n=======\n\n[![Join the chat at https://gitter.im/airbnb/enzyme](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/enzyme?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![npm Version](https://img.shields.io/npm/v/enzyme.svg)](https://www.npmjs.com/package/enzyme) [![License](https://img.shields.io/npm/l/enzyme.svg)](https://github.com/airbnb/enzyme/blob/master/LICENSE.md) [![Build Status](https://travis-ci.org/airbnb/enzyme.svg)](https://travis-ci.org/airbnb/enzyme) [![Coverage Status](https://coveralls.io/repos/airbnb/enzyme/badge.svg?branch=master&service=github)](https://coveralls.io/github/airbnb/enzyme?branch=master)\n\n\nEnzyme is a JavaScript Testing utility for React that makes it easier to test your React Components' output.\nYou can also manipulate, traverse, and in some ways simulate runtime given the output.\n\nEnzyme's API is meant to be intuitive and flexible by mimicking jQuery's API for DOM manipulation\nand traversal.\n\nUpgrading from Enzyme 2.x or React < 16\n===========\n\nAre you here to check whether or not Enzyme is compatible with React 16? Are you currently using\nEnzyme 2.x? Great! Check out our [migration guide](/docs/guides/migration-from-2-to-3.md) for help\nmoving on to Enzyme v3 where React 16 is supported.\n\n### [Installation](/docs/installation/README.md)\n\nTo get started with enzyme, you can simply install it via npm. You will need to install enzyme\nalong with an Adapter corresponding to the version of react (or other UI Component library) you\nare using. For instance, if you are using enzyme with React 16, you can run:\n\n```bash\nnpm i --save-dev enzyme enzyme-adapter-react-16\n```\n\nEach adapter may have additional peer dependencies which you will need to install as well. For instance,\n`enzyme-adapter-react-16` has peer dependencies on `react` and `react-dom`.\n\nAt the moment, Enzyme has adapters that provide compatibility with `React 16.x`, `React 15.x`,\n`React 0.14.x` and `React 0.13.x`.\n\nThe following adapters are officially provided by enzyme, and have the following compatibility with\nReact:\n\n| Enzyme Adapter Package | React semver compatibility |\n| --- | --- |\n| `enzyme-adapter-react-16` | `^16.4.0-0` |\n| `enzyme-adapter-react-16.3` | `~16.3.0-0` |\n| `enzyme-adapter-react-16.2` | `~16.2` |\n| `enzyme-adapter-react-16.1` | `~16.0.0-0 \\|\\| ~16.1` |\n| `enzyme-adapter-react-15` | `^15.5.0` |\n| `enzyme-adapter-react-15.4` | `15.0.0-0 - 15.4.x` |\n| `enzyme-adapter-react-14` | `^0.14.0` |\n| `enzyme-adapter-react-13` | `^0.13.0` |\n\nFinally, you need to configure enzyme to use the adapter you want it to use. To do this, you can use\nthe top level `configure(...)` API.\n\n```js\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nEnzyme.configure({ adapter: new Adapter() });\n```\n\n3rd Party Adapters\n=============\n\nIt is possible for the community to create additional (non-official) adapters that will make enzyme\nwork with other libraries. If you have made one and it's not included in the list below, feel free\nto make a PR to this README and add a link to it! The known 3rd party adapters are:\n\n| Adapter Package | For Library | Status |\n| --- | --- | --- |\n| [`enzyme-adapter-preact-pure`](https://github.com/preactjs/enzyme-adapter-preact-pure) | [`preact`](https://github.com/developit/preact) | (stable) |\n|[`enzyme-adapter-inferno`](https://github.com/bbc/enzyme-adapter-inferno)|[`inferno`](https://github.com/infernojs/inferno)|(work in progress)|\n\nRunning Enzyme Tests\n===========\n\nEnzyme is unopinionated regarding which test runner or assertion library you use, and should be\ncompatible with all major test runners and assertion libraries out there. The documentation and\nexamples for enzyme use [mocha](https://mochajs.org/) and [chai](http://chaijs.com/), but you\nshould be able to extrapolate to your framework of choice.\n\nIf you are interested in using enzyme with custom assertions and convenience functions for\ntesting your React components, you can consider using:\n\n* [`chai-enzyme`](https://github.com/producthunt/chai-enzyme) with Mocha/Chai.\n* [`jasmine-enzyme`](https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jasmine-enzyme) with Jasmine.\n* [`jest-enzyme`](https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jest-enzyme) with Jest.\n* [`should-enzyme`](https://github.com/rkotze/should-enzyme) for should.js.\n* [`expect-enzyme`](https://github.com/PsychoLlama/expect-enzyme) for expect.\n\n\n[Using Enzyme with Mocha](/docs/guides/mocha.md)\n\n[Using Enzyme with Karma](/docs/guides/karma.md)\n\n[Using Enzyme with Browserify](/docs/guides/browserify.md)\n\n[Using Enzyme with SystemJS](/docs/guides/systemjs.md)\n\n[Using Enzyme with Webpack](/docs/guides/webpack.md)\n\n[Using Enzyme with JSDOM](/docs/guides/jsdom.md)\n\n[Using Enzyme with React Native](/docs/guides/react-native.md)\n\n[Using Enzyme with Jest](/docs/guides/jest.md)\n\n[Using Enzyme with Lab](/docs/guides/lab.md)\n\n[Using Enzyme with Tape and AVA](/docs/guides/tape-ava.md)\n\nBasic Usage\n===========\n\n## [Shallow Rendering](/docs/api/shallow.md)\n\n```javascript\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'enzyme';\nimport sinon from 'sinon';\n\nimport MyComponent from './MyComponent';\nimport Foo from './Foo';\n\ndescribe('<MyComponent />', () => {\n  it('renders three <Foo /> components', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find(Foo)).to.have.lengthOf(3);\n  });\n\n  it('renders an `.icon-star`', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find('.icon-star')).to.have.lengthOf(1);\n  });\n\n  it('renders children when passed in', () => {\n    const wrapper = shallow((\n      <MyComponent>\n        <div className=\"unique\" />\n      </MyComponent>\n    ));\n    expect(wrapper.contains(<div className=\"unique\" />)).to.equal(true);\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = shallow(<Foo onButtonClick={onButtonClick} />);\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/shallow.md)\n\n\n\n## [Full DOM Rendering](/docs/api/mount.md)\n\n```javascript\nimport React from 'react';\nimport sinon from 'sinon';\nimport { expect } from 'chai';\nimport { mount } from 'enzyme';\n\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('allows us to set props', () => {\n    const wrapper = mount(<Foo bar=\"baz\" />);\n    expect(wrapper.props().bar).to.equal('baz');\n    wrapper.setProps({ bar: 'foo' });\n    expect(wrapper.props().bar).to.equal('foo');\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = mount((\n      <Foo onButtonClick={onButtonClick} />\n    ));\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n\n  it('calls componentDidMount', () => {\n    sinon.spy(Foo.prototype, 'componentDidMount');\n    const wrapper = mount(<Foo />);\n    expect(Foo.prototype.componentDidMount).to.have.property('callCount', 1);\n    Foo.prototype.componentDidMount.restore();\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/mount.md)\n\n\n## [Static Rendered Markup](/docs/api/render.md)\n\n```javascript\nimport React from 'react';\nimport { expect } from 'chai';\nimport { render } from 'enzyme';\n\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('renders three `.foo-bar`s', () => {\n    const wrapper = render(<Foo />);\n    expect(wrapper.find('.foo-bar')).to.have.lengthOf(3);\n  });\n\n  it('renders the title', () => {\n    const wrapper = render(<Foo title=\"unique\" />);\n    expect(wrapper.text()).to.contain('unique');\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/render.md)\n\n### React Hooks support\n\nEnzyme supports [react hooks](https://reactjs.org/docs/hooks-intro.html) with some limitations in [`.shallow()`](https://airbnb.io/enzyme/docs/api/shallow.html) due to upstream issues in React's shallow renderer:\n\n* `useEffect()` and `useLayoutEffect()` don't get called in the React shallow renderer. [Related issue](https://github.com/facebook/react/issues/15275)\n\n* `useCallback()` doesn't memoize callback in React shallow renderer. [Related issue](https://github.com/facebook/react/issues/15774)\n\n#### [`ReactTestUtils.act()`](https://reactjs.org/docs/test-utils.html#act) wrap\n\nIf you're using React 16.8+ and `.mount()`, Enzyme will wrap apis including [`.simulate()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/simulate.html), [`.setProps()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/setProps.html), [`.setContext()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/setContext.html), [`.invoke()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/invoke.html) with [`ReactTestUtils.act()`](https://reactjs.org/docs/test-utils.html#act) so you don't need to manually wrap it.\n\nA common pattern to trigger handlers with `.act()` and assert is:\n\n```javascript\nconst wrapper = mount(<SomeComponent />);\nact(() => wrapper.prop('handler')());\nwrapper.update();\nexpect(/* ... */);\n```\n\nWe cannot wrap the result of `.prop()` (or `.props()`) with `.act()` in Enzyme internally since it will break the equality of the returned value.\nHowever, you could use `.invoke()` to simplify the code:\n\n```javascript\nconst wrapper = mount(<SomeComponent />);\nwrapper.invoke('handler')();\nexpect(/* ... */);\n```\n\n### Future\n\n[Enzyme Future](/docs/future.md)\n\n\n### Contributing\n\nSee the [Contributors Guide](/CONTRIBUTING.md)\n\n### In the wild\n\nOrganizations and projects using `enzyme` can list themselves [here](INTHEWILD.md).\n\n### License\n\n[MIT](/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 67248}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2280256}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 9199196}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 27692376}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 49545727}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 96077763}], "dependentsCount": 885, "starsCount": 70}, "github": {"homepage": "https://enzymejs.github.io/enzyme/", "starsCount": 18714, "forksCount": 2039, "subscribersCount": 281, "issues": {"count": 2396, "openCount": 248, "distribution": {"3600": 270, "10800": 175, "32400": 227, "97200": 245, "291600": 220, "874800": 232, "2624400": 199, "7873200": 222, "23619600": 230, "70858800": 293, "212576400": 83}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 619}, {"username": "lelandrichardson", "commitsCount": 161}, {"username": "koba04", "commitsCount": 43}, {"username": "nfcampos", "commitsCount": 33}, {"username": "chenesan", "commitsCount": 22}, {"username": "jquense", "commitsCount": 20}, {"username": "jwbay", "commitsCount": 16}, {"username": "minznerjosh", "commitsCount": 15}, {"username": "aweary", "commitsCount": 13}, {"username": "jgzuke", "commitsCount": 13}, {"username": "lamhieu-vk", "commitsCount": 8}, {"username": "blainekasten", "commitsCount": 7}, {"username": "eddyerburgh", "commitsCount": 7}, {"username": "alecrobins", "commitsCount": 6}, {"username": "iancmyers", "commitsCount": 6}, {"username": "marlonbernardes", "commitsCount": 6}, {"username": "dferber90", "commitsCount": 5}, {"username": "madicap", "commitsCount": 5}, {"username": "mwilliamson", "commitsCount": 5}, {"username": "bdwain", "commitsCount": 4}, {"username": "cpojer", "commitsCount": 4}, {"username": "gregberge", "commitsCount": 4}, {"username": "idanilt", "commitsCount": 4}, {"username": "jackfranklin", "commitsCount": 4}, {"username": "jordwest", "commitsCount": 4}, {"username": "k3ithl1m", "commitsCount": 4}, {"username": "kmcq", "commitsCount": 4}, {"username": "peanutenthusiast", "commitsCount": 4}, {"username": "serut", "commitsCount": 4}, {"username": "silvenon", "commitsCount": 4}, {"username": "smacker", "commitsCount": 4}, {"username": "AndersDJohnson", "commitsCount": 3}, {"username": "SimenB", "commitsCount": 3}, {"username": "ahuth", "commitsCount": 3}, {"username": "brucewpaul", "commitsCount": 3}, {"username": "dompuiu", "commitsCount": 3}, {"username": "eps1lon", "commitsCount": 3}, {"username": "erikthedeveloper", "commitsCount": 3}, {"username": "finnigantime", "commitsCount": 3}, {"username": "graingert", "commitsCount": 3}, {"username": "griffinmichl", "commitsCount": 3}, {"username": "istarkov", "commitsCount": 3}, {"username": "krawaller", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "srph", "commitsCount": 3}, {"username": "Andarist", "commitsCount": 2}, {"username": "CurtisHumphrey", "commitsCount": 2}, {"username": "Danwhy", "commitsCount": 2}, {"username": "JoshuaKGoldberg", "commitsCount": 2}, {"username": "ReactiveRaven", "commitsCount": 2}, {"username": "Silviu-Marian", "commitsCount": 2}, {"username": "baldwmic", "commitsCount": 2}, {"username": "barmac", "commitsCount": 2}, {"username": "blackpost38", "commitsCount": 2}, {"username": "bvaughn", "commitsCount": 2}, {"username": "gaearon", "commitsCount": 2}, {"username": "ialexryan", "commitsCount": 2}, {"username": "jakubzitny", "commitsCount": 2}, {"username": "jstoebel", "commitsCount": 2}, {"username": "just-boris", "commitsCount": 2}, {"username": "kentcdodds", "commitsCount": 2}, {"username": "kevinzwhuang", "commitsCount": 2}, {"username": "manishdipankar1711", "commitsCount": 2}, {"username": "mauriciosoares", "commitsCount": 2}, {"username": "mykhailo-riabokon", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "rnsloan", "commitsCount": 2}, {"username": "roadhump", "commitsCount": 2}, {"username": "samit4me", "commitsCount": 2}, {"username": "sdemjanenko", "commitsCount": 2}, {"username": "suchipi", "commitsCount": 2}, {"username": "thatjessicakelly", "commitsCount": 2}, {"username": "themouette", "commitsCount": 2}, {"username": "vslinko", "commitsCount": 2}, {"username": "Lukas-Kullmann", "commitsCount": 1}, {"username": "azhuologist", "commitsCount": 1}, {"username": "erickzhao", "commitsCount": 1}, {"username": "f2acode", "commitsCount": 1}, {"username": "fatso83", "commitsCount": 1}, {"username": "gustavovnicius", "commitsCount": 1}, {"username": "hitsuji-no-shippo", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "kingerez", "commitsCount": 1}, {"username": "levimeahan", "commitsCount": 1}, {"username": "mvasin", "commitsCount": 1}, {"username": "ooHmartY", "commitsCount": 1}, {"username": "ottosichert", "commitsCount": 1}, {"username": "pastelsky", "commitsCount": 1}, {"username": "paulvollmer", "commitsCount": 1}, {"username": "peter-mouland", "commitsCount": 1}, {"username": "petersendidit", "commitsCount": 1}, {"username": "robertknight", "commitsCount": 1}, {"username": "rvpanoz", "commitsCount": 1}, {"username": "sergsavoniuk", "commitsCount": 1}, {"username": "skyboyer", "commitsCount": 1}, {"username": "tilgovi", "commitsCount": 1}, {"username": "vnys", "commitsCount": 1}, {"username": "votemike", "commitsCount": 1}, {"username": "wannabefro", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 26}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 52}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 128}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 9737, "testsSize": 711976, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/enzyme.svg", "shields": "https://img.shields.io/npm/v/enzyme.svg", "content": "https://img.shields.io/npm/v/enzyme.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/enzyme.svg", "shields": "https://img.shields.io/npm/l/enzyme.svg", "content": "https://img.shields.io/npm/l/enzyme.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://travis-ci.org/airbnb/enzyme.svg", "service": "https://api.travis-ci.org/airbnb/enzyme.svg", "shields": "https://img.shields.io/travis/airbnb/enzyme.svg", "content": "https://img.shields.io/travis/airbnb/enzyme.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/airbnb/enzyme/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/airbnb/enzyme/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/airbnb/enzyme/master.svg", "content": "https://img.shields.io/coveralls/airbnb/enzyme/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "coverage": 0.95}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6925, "health": 1, "branding": 1}, "popularity": {"communityInterest": 21203, "downloadsCount": 9230792, "downloadsAcceleration": 13860.102416286143, "dependentsCount": 885}, "maintenance": {"releasesFrequency": 0.6352739726027398, "commitsFrequency": 0.948082191780822, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7549130895483492, "detail": {"quality": 0.9580429523728092, "popularity": 0.6729220519183183, "maintenance": 0.6627928161859858}}}}, {"jquery": {"analyzedAt": "2020-05-08T01:49:15.924Z", "collected": {"metadata": {"name": "jquery", "scope": "unscoped", "version": "3.5.1", "description": "JavaScript library for DOM operations", "keywords": ["jquery", "javascript", "browser", "library"], "date": "2020-05-04T22:50:08.819Z", "author": {"name": "JS Foundation and other contributors", "url": "https://github.com/jquery/jquery/blob/3.5.1/AUTHORS.txt"}, "publisher": {"username": "timmywil", "email": "4timmywil@gmail.com"}, "maintainers": [{"username": "dmethvin", "email": "dave.methvin@gmail.com"}, {"username": "mgol", "email": "m.goleb@gmail.com"}, {"username": "scott.gonzalez", "email": "scott.gonzalez@gmail.com"}, {"username": "timmywil", "email": "4timmywil@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jquery/jquery.git"}, "links": {"npm": "https://www.npmjs.com/package/jquery", "homepage": "https://jquery.com", "repository": "https://github.com/jquery/jquery", "bugs": "https://github.com/jquery/jquery/issues"}, "license": "MIT", "devDependencies": {"@babel/core": "7.3.3", "@babel/plugin-transform-for-of": "7.2.0", "commitplease": "3.2.0", "core-js": "2.6.5", "eslint-config-jquery": "2.0.0", "grunt": "1.0.3", "grunt-babel": "8.0.0", "grunt-cli": "1.3.2", "grunt-compare-size": "0.4.2", "grunt-contrib-uglify": "3.4.0", "grunt-contrib-watch": "1.1.0", "grunt-eslint": "22.0.0", "grunt-git-authors": "3.2.0", "grunt-jsonlint": "1.1.0", "grunt-karma": "3.0.1", "grunt-newer": "1.3.0", "grunt-npmcopy": "0.1.0", "gzip-js": "0.3.2", "husky": "1.3.1", "insight": "0.10.1", "jsdom": "13.2.0", "karma": "4.0.1", "karma-browserstack-launcher": "1.4.0", "karma-chrome-launcher": "2.2.0", "karma-firefox-launcher": "1.1.0", "karma-ie-launcher": "1.0.0", "karma-jsdom-launcher": "7.1.0", "karma-qunit": "3.0.0", "load-grunt-tasks": "4.0.0", "native-promise-only": "0.8.1", "promises-aplus-tests": "2.1.2", "q": "1.5.1", "qunit": "2.9.2", "raw-body": "2.3.3", "requirejs": "2.3.6", "sinon": "2.3.7", "sizzle": "2.3.5", "strip-json-comments": "2.0.1", "testswarm": "1.1.0", "uglify-js": "3.4.7"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# jQuery\n\n> jQuery is a fast, small, and feature-rich JavaScript library.\n\nFor information on how to get started and how to use jQuery, please see [jQuery's documentation](https://api.jquery.com/).\nFor source files and issues, please visit the [jQuery repo](https://github.com/jquery/jquery).\n\nIf upgrading, please see the [blog post for 3.5.1](https://blog.jquery.com/2020/05/04/jquery-3-5-1-released-fixing-a-regression/). This includes notable differences from the previous version and a more readable changelog.\n\n## Including jQuery\n\nBelow are some of the most common ways to include jQuery.\n\n### Browser\n\n#### Script tag\n\n```html\n<script src=\"https://code.jquery.com/jquery-3.5.1.min.js\"></script>\n```\n\n#### Babel\n\n[Babel](https://babeljs.io/) is a next generation JavaScript compiler. One of the features is the ability to use ES6/ES2015 modules now, even though browsers do not yet support this feature natively.\n\n```js\nimport $ from \"jquery\";\n```\n\n#### Browserify/Webpack\n\nThere are several ways to use [Browserify](http://browserify.org/) and [Webpack](https://webpack.github.io/). For more information on using these tools, please refer to the corresponding project's documentation. In the script, including jQuery will usually look like this...\n\n```js\nvar $ = require( \"jquery\" );\n```\n\n#### AMD (Asynchronous Module Definition)\n\nAMD is a module format built for the browser. For more information, we recommend [require.js' documentation](https://requirejs.org/docs/whyamd.html).\n\n```js\ndefine( [ \"jquery\" ], function( $ ) {\n\n} );\n```\n\n### Node\n\nTo include jQuery in [Node](https://nodejs.org/), first install with npm.\n\n```sh\nnpm install jquery\n```\n\nFor jQuery to work in Node, a window with a document is required. Since no such window exists natively in Node, one can be mocked by tools such as [jsdom](https://github.com/jsdom/jsdom). This can be useful for testing purposes.\n\n```js\nconst { JSDOM } = require( \"jsdom\" );\nconst { window } = new JSDOM( \"\" );\nconst $ = require( \"jquery\" )( window );\n```"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 726819}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3652369}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 16151035}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 45492473}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 80532516}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 152197630}], "dependentsCount": 12204, "starsCount": 364}, "github": {"homepage": "https://jquery.com/", "starsCount": 53291, "forksCount": 19306, "subscribersCount": 3406, "issues": {"count": 4629, "openCount": 79, "distribution": {"3600": 914, "10800": 437, "32400": 442, "97200": 432, "291600": 459, "874800": 617, "2624400": 523, "7873200": 402, "23619600": 233, "70858800": 102, "212576400": 68}, "isDisabled": false}, "contributors": [{"username": "jeresig", "commitsCount": 1595}, {"username": "timmywil", "commitsCount": 535}, {"username": "dmethvin", "commitsCount": 529}, {"username": "mgol", "commitsCount": 360}, {"username": "jzaefferer", "commitsCount": 327}, {"username": "rwaldron", "commitsCount": 302}, {"username": "gibson042", "commitsCount": 276}, {"username": "markelog", "commitsCount": 269}, {"username": "jaubourg", "commitsCount": 267}, {"username": "brandonaaron", "commitsCount": 248}, {"username": "flesler", "commitsCount": 200}, {"username": "mikesherov", "commitsCount": 84}, {"username": "davids549", "commitsCount": 67}, {"username": "csnover", "commitsCount": 56}, {"username": "gnarf", "commitsCount": 55}, {"username": "wycats", "commitsCount": 50}, {"username": "jitter", "commitsCount": 35}, {"username": "scottgonzalez", "commitsCount": 30}, {"username": "Krinkle", "commitsCount": 27}, {"username": "jbedard", "commitsCount": 22}, {"username": "rkatic", "commitsCount": 22}, {"username": "danheberden", "commitsCount": 16}, {"username": "azatoth", "commitsCount": 13}, {"username": "cowboy", "commitsCount": 12}, {"username": "malsup", "commitsCount": 11}, {"username": "jboesch", "commitsCount": 10}, {"username": "mathiasbynens", "commitsCount": 9}, {"username": "sindresorhus", "commitsCount": 9}, {"username": "elijahmanor", "commitsCount": 8}, {"username": "ChrisAntaki", "commitsCount": 7}, {"username": "ajpiano", "commitsCount": 7}, {"username": "dcneiner", "commitsCount": 7}, {"username": "james-huston", "commitsCount": 7}, {"username": "rdworth", "commitsCount": 7}, {"username": "stefanpetre", "commitsCount": 7}, {"username": "coreyjewett", "commitsCount": 6}, {"username": "gf3", "commitsCount": 6}, {"username": "mr21", "commitsCount": 6}, {"username": "xavi-", "commitsCount": 6}, {"username": "SlexAxton", "commitsCount": 5}, {"username": "cmcnulty", "commitsCount": 5}, {"username": "dcherman", "commitsCount": 5}, {"username": "jrburke", "commitsCount": 5}, {"username": "SaptakS", "commitsCount": 4}, {"username": "irae", "commitsCount": 4}, {"username": "justinbmeyer", "commitsCount": 4}, {"username": "kswedberg", "commitsCount": 4}, {"username": "LeonardoBraga", "commitsCount": 3}, {"username": "PaulBRamos", "commitsCount": 3}, {"username": "araghava", "commitsCount": 3}, {"username": "edg2s", "commitsCount": 3}, {"username": "fmarcia", "commitsCount": 3}, {"username": "gdrsi", "commitsCount": 3}, {"username": "louisremi", "commitsCount": 3}, {"username": "paulirish", "commitsCount": 3}, {"username": "ruado1987", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "AurelioDeRosa", "commitsCount": 2}, {"username": "ConnorAtherton", "commitsCount": 2}, {"username": "FarSeeing", "commitsCount": 2}, {"username": "JessThrysoee", "commitsCount": 2}, {"username": "LizaLemons", "commitsCount": 2}, {"username": "MoonScript", "commitsCount": 2}, {"username": "Queeniebee", "commitsCount": 2}, {"username": "ShashankaNataraj", "commitsCount": 2}, {"username": "abnud1", "commitsCount": 2}, {"username": "alexr101", "commitsCount": 2}, {"username": "ameyms", "commitsCount": 2}, {"username": "anthonyryan1", "commitsCount": 2}, {"username": "antishok", "commitsCount": 2}, {"username": "anton-ryzhov", "commitsCount": 2}, {"username": "arthurvr", "commitsCount": 2}, {"username": "batiste", "commitsCount": 2}, {"username": "bentruyman", "commitsCount": 2}, {"username": "coliff", "commitsCount": 2}, {"username": "ctalkington", "commitsCount": 2}, {"username": "danielchatfield", "commitsCount": 2}, {"username": "datag", "commitsCount": 2}, {"username": "dgalvez", "commitsCount": 2}, {"username": "djanowski", "commitsCount": 2}, {"username": "farmdawgnation", "commitsCount": 2}, {"username": "hasclass", "commitsCount": 2}, {"username": "ikhair", "commitsCount": 2}, {"username": "jonathansampson", "commitsCount": 2}, {"username": "kborchers", "commitsCount": 2}, {"username": "kumarmj", "commitsCount": 2}, {"username": "nanto", "commitsCount": 2}, {"username": "petersendidit", "commitsCount": 2}, {"username": "pgilad", "commitsCount": 2}, {"username": "robmorgan", "commitsCount": 2}, {"username": "ros3cin", "commitsCount": 2}, {"username": "sbisbee", "commitsCount": 2}, {"username": "stonelee", "commitsCount": 2}, {"username": "terrycojones", "commitsCount": 2}, {"username": "tjvantoll", "commitsCount": 2}, {"username": "tomfuertes", "commitsCount": 2}, {"username": "treyhunner", "commitsCount": 2}, {"username": "tricknotes", "commitsCount": 2}, {"username": "victor-homyakov", "commitsCount": 2}, {"username": "wonseop", "commitsCount": 2}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 14}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 24}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 49}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 86}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12644, "testsSize": 1334830, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 76467, "downloadsCount": 15164157.666666666, "downloadsAcceleration": 37952.770890410975, "dependentsCount": 12204}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9997739726027397, "openIssues": 1, "issuesDistribution": 0.6851548821719299}}, "score": {"final": 0.9397542684281347, "detail": {"quality": 0.9674308342921744, "popularity": 0.8580217404939268, "maintenance": 0.9977640256217373}}}}, {"inquirer": {"analyzedAt": "2020-06-17T13:43:44.668Z", "collected": {"metadata": {"name": "inquirer", "scope": "unscoped", "version": "7.2.0", "description": "A collection of common interactive command line user interfaces.", "keywords": ["command", "prompt", "stdin", "cli", "tty", "menu"], "date": "2020-06-15T01:52:17.115Z", "author": {"name": "Simon Boudrias", "email": "admin@simonboudrias.com", "username": "sboudrias"}, "publisher": {"username": "sboudrias", "email": "admin@simonboudrias.com"}, "maintainers": [{"username": "danielchatfield", "email": "chatfielddaniel@gmail.com"}, {"username": "mischah", "email": "mail@michael-kuehnel.de"}, {"username": "sboudrias", "email": "admin@simonboudrias.com"}], "repository": {"type": "git", "url": "git+https://github.com/SBoudrias/Inquirer.js.git"}, "links": {"npm": "https://www.npmjs.com/package/inquirer", "homepage": "https://github.com/SBoudrias/Inquirer.js#readme", "repository": "https://github.com/SBoudrias/Inquirer.js", "bugs": "https://github.com/SBoudrias/Inquirer.js/issues"}, "license": "MIT", "dependencies": {"ansi-escapes": "^4.2.1", "chalk": "^3.0.0", "cli-cursor": "^3.1.0", "cli-width": "^2.0.0", "external-editor": "^3.0.3", "figures": "^3.0.0", "lodash": "^4.17.15", "mute-stream": "0.0.8", "run-async": "^2.4.0", "rxjs": "^6.5.3", "string-width": "^4.1.0", "strip-ansi": "^6.0.0", "through": "^2.3.6"}, "devDependencies": {"chai": "^4.2.0", "chalk-pipe": "^3.0.0", "cmdify": "^0.0.4", "mocha": "^7.1.0", "mockery": "^2.1.0", "nyc": "^15.0.0", "sinon": "^9.0.0"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 15}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 20}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<img width=\"75px\" height=\"75px\" align=\"right\" alt=\"Inquirer Logo\" src=\"https://raw.githubusercontent.com/SBoudrias/Inquirer.js/master/assets/inquirer_readme.svg?sanitize=true\" title=\"Inquirer.js\"/>\n\n# Inquirer.js\n\n[![npm](https://badge.fury.io/js/inquirer.svg)](http://badge.fury.io/js/inquirer)\n[![tests](https://travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master)](http://travis-ci.org/SBoudrias/Inquirer.js)\n[![Coverage Status](https://codecov.io/gh/SBoudrias/Inquirer.js/branch/master/graph/badge.svg)](https://codecov.io/gh/SBoudrias/Inquirer.js)\n[![FOSSA Status](https://app.fossa.com/api/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js.svg?type=shield)](https://app.fossa.com/projects/git%2Bgithub.com%2FSBoudrias%2FInquirer.js?ref=badge_shield)\n\nA collection of common interactive command line user interfaces.\n\n## Table of Contents\n\n1.  [Documentation](#documentation)\n    1.  [Installation](#installation)\n    2.  [Examples](#examples)\n    3.  [Methods](#methods)\n    4.  [Objects](#objects)\n    5.  [Questions](#questions)\n    6.  [Answers](#answers)\n    7.  [Separator](#separator)\n    8.  [Prompt Types](#prompt)\n2.  [User Interfaces and Layouts](#layouts)\n    1.  [Reactive Interface](#reactive)\n3.  [Support](#support)\n4.  [Known issues](#issues)\n4.  [News](#news)\n5.  [Contributing](#contributing)\n6.  [License](#license)\n7.  [Plugins](#plugins)\n\n## Goal and Philosophy\n\n**`Inquirer.js`** strives to be an easily embeddable and beautiful command line interface for [Node.js](https://nodejs.org/) (and perhaps the \"CLI [Xanadu](https://en.wikipedia.org/wiki/Citizen_Kane)\").\n\n**`Inquirer.js`** should ease the process of\n\n- providing _error feedback_\n- _asking questions_\n- _parsing_ input\n- _validating_ answers\n- managing _hierarchical prompts_\n\n> **Note:** **`Inquirer.js`** provides the user interface and the inquiry session flow. If you're searching for a full blown command line program utility, then check out [commander](https://github.com/visionmedia/commander.js), [vorpal](https://github.com/dthree/vorpal) or [args](https://github.com/leo/args).\n\n## [Documentation](#documentation)\n\n<a name=\"documentation\"></a>\n\n### Installation\n\n<a name=\"installation\"></a>\n\n```shell\nnpm install inquirer\n```\n\n```javascript\nvar inquirer = require('inquirer');\ninquirer\n  .prompt([\n    /* Pass your questions in here */\n  ])\n  .then(answers => {\n    // Use user feedback for... whatever!!\n  })\n  .catch(error => {\n    if(error.isTtyError) {\n      // Prompt couldn't be rendered in the current environment\n    } else {\n      // Something else when wrong\n    }\n  });\n```\n\n<a name=\"examples\"></a>\n\n### Examples (Run it and see it)\n\nCheck out the [`packages/inquirer/examples/`](https://github.com/SBoudrias/Inquirer.js/tree/master/packages/inquirer/examples) folder for code and interface examples.\n\n```shell\nnode packages/inquirer/examples/pizza.js\nnode packages/inquirer/examples/checkbox.js\n# etc...\n```\n\n### Methods\n\n<a name=\"methods\"></a>\n\n#### `inquirer.prompt(questions) -> promise`\n\nLaunch the prompt interface (inquiry session)\n\n- **questions** (Array) containing [Question Object](#question) (using the [reactive interface](#reactive-interface), you can also pass a `Rx.Observable` instance)\n- returns a **Promise**\n\n#### `inquirer.registerPrompt(name, prompt)`\n\nRegister prompt plugins under `name`.\n\n- **name** (string) name of the this new prompt. (used for question `type`)\n- **prompt** (object) the prompt object itself (the plugin)\n\n#### `inquirer.createPromptModule() -> prompt function`\n\nCreate a self contained inquirer module. If you don't want to affect other libraries that also rely on inquirer when you overwrite or add new prompt types.\n\n```js\nvar prompt = inquirer.createPromptModule();\n\nprompt(questions).then(/* ... */);\n```\n\n### Objects\n\n<a name=\"objects\"></a>\n\n#### Question\n\n<a name=\"questions\"></a>\nA question object is a `hash` containing question related values:\n\n- **type**: (String) Type of the prompt. Defaults: `input` - Possible values: `input`, `number`, `confirm`,\n  `list`, `rawlist`, `expand`, `checkbox`, `password`, `editor`\n- **name**: (String) The name to use when storing the answer in the answers hash. If the name contains periods, it will define a path in the answers hash.\n- **message**: (String|Function) The question to print. If defined as a function, the first parameter will be the current inquirer session answers. Defaults to the value of `name` (followed by a colon).\n- **default**: (String|Number|Boolean|Array|Function) Default value(s) to use if nothing is entered, or a function that returns the default value(s). If defined as a function, the first parameter will be the current inquirer session answers.\n- **choices**: (Array|Function) Choices array or a function returning a choices array. If defined as a function, the first parameter will be the current inquirer session answers.\n  Array values can be simple `numbers`, `strings`, or `objects` containing a `name` (to display in list), a `value` (to save in the answers hash) and a `short` (to display after selection) properties. The choices array can also contain [a `Separator`](#separator).\n- **validate**: (Function) Receive the user input and answers hash. Should return `true` if the value is valid, and an error message (`String`) otherwise. If `false` is returned, a default error message is provided.\n- **filter**: (Function) Receive the user input and return the filtered value to be used inside the program. The value returned will be added to the _Answers_ hash.\n- **transformer**: (Function) Receive the user input, answers hash and option flags, and return a transformed value to display to the user. The transformation only impacts what is shown while editing. It does not modify the answers hash.\n- **when**: (Function, Boolean) Receive the current user answers hash and should return `true` or `false` depending on whether or not this question should be asked. The value can also be a simple boolean.\n- **pageSize**: (Number) Change the number of lines that will be rendered when using `list`, `rawList`, `expand` or `checkbox`.\n- **prefix**: (String) Change the default _prefix_ message.\n- **suffix**: (String) Change the default _suffix_ message.\n- **askAnswered**: (Boolean) Force to prompt the question if the answer already exists.\n\n`default`, `choices`(if defined as functions), `validate`, `filter` and `when` functions can be called asynchronously. Either return a promise or use `this.async()` to get a callback you'll call with the final value.\n\n```javascript\n{\n  /* Preferred way: with promise */\n  filter() {\n    return new Promise(/* etc... */);\n  },\n\n  /* Legacy way: with this.async */\n  validate: function (input) {\n    // Declare function as asynchronous, and save the done callback\n    var done = this.async();\n\n    // Do async stuff\n    setTimeout(function() {\n      if (typeof input !== 'number') {\n        // Pass the return value in the done callback\n        done('You need to provide a number');\n        return;\n      }\n      // Pass the return value in the done callback\n      done(null, true);\n    }, 3000);\n  }\n}\n```\n\n### Answers\n\n<a name=\"answers\"></a>\nA key/value hash containing the client answers in each prompt.\n\n- **Key** The `name` property of the _question_ object\n- **Value** (Depends on the prompt)\n  - `confirm`: (Boolean)\n  - `input` : User input (filtered if `filter` is defined) (String)\n  - `number`: User input (filtered if `filter` is defined) (Number)\n  - `rawlist`, `list` : Selected choice value (or name if no value specified) (String)\n\n### Separator\n\n<a name=\"separator\"></a>\nA separator can be added to any `choices` array:\n\n```\n// In the question object\nchoices: [ \"Choice A\", new inquirer.Separator(), \"choice B\" ]\n\n// Which'll be displayed this way\n[?] What do you want to do?\n > Order a pizza\n   Make a reservation\n   --------\n   Ask opening hours\n   Talk to the receptionist\n```\n\nThe constructor takes a facultative `String` value that'll be use as the separator. If omitted, the separator will be `--------`.\n\nSeparator instances have a property `type` equal to `separator`. This should allow tools fa\u00e7ading Inquirer interface from detecting separator types in lists.\n\n<a name=\"prompt\"></a>\n\n### Prompt types\n\n---\n\n> **Note:**: _allowed options written inside square brackets (`[]`) are optional. Others are required._\n\n#### List - `{type: 'list'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array or a choice `value`)\n\n![List prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/list.svg)\n\n---\n\n#### Raw List - `{type: 'rawlist'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`, `filter`] properties. (Note that\ndefault must be the choice `index` in the array)\n\n![Raw list prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/rawlist.svg)\n\n---\n\n#### Expand - `{type: 'expand'}`\n\nTake `type`, `name`, `message`, `choices`[, `default`] properties. (Note that\ndefault must be the choice `index` in the array. If `default` key not provided, then `help` will be used as default choice)\n\nNote that the `choices` object will take an extra parameter called `key` for the `expand` prompt. This parameter must be a single (lowercased) character. The `h` option is added by the prompt and shouldn't be defined by the user.\n\nSee `examples/expand.js` for a running example.\n\n![Expand prompt closed](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-y.svg)\n![Expand prompt expanded](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/expand-d.svg)\n\n---\n\n#### Checkbox - `{type: 'checkbox'}`\n\nTake `type`, `name`, `message`, `choices`[, `filter`, `validate`, `default`] properties. `default` is expected to be an Array of the checked choices value.\n\nChoices marked as `{checked: true}` will be checked by default.\n\nChoices whose property `disabled` is truthy will be unselectable. If `disabled` is a string, then the string will be outputted next to the disabled choice, otherwise it'll default to `\"Disabled\"`. The `disabled` property can also be a synchronous function receiving the current answers as argument and returning a boolean or a string.\n\n![Checkbox prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/checkbox.svg)\n\n---\n\n#### Confirm - `{type: 'confirm'}`\n\nTake `type`, `name`, `message`, [`default`] properties. `default` is expected to be a boolean if used.\n\n![Confirm prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/confirm.svg)\n\n---\n\n#### Input - `{type: 'input'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`, `transformer`] properties.\n\n![Input prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/input.svg)\n\n---\n\n#### Input - `{type: 'number'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`, `transformer`] properties.\n\n---\n\n#### Password - `{type: 'password'}`\n\nTake `type`, `name`, `message`, `mask`,[, `default`, `filter`, `validate`] properties.\n\n![Password prompt](https://cdn.rawgit.com/SBoudrias/Inquirer.js/28ae8337ba51d93e359ef4f7ee24e79b69898962/assets/screenshots/password.svg)\n\n---\n\nNote that `mask` is required to hide the actual user input.\n\n#### Editor - `{type: 'editor'}`\n\nTake `type`, `name`, `message`[, `default`, `filter`, `validate`] properties\n\nLaunches an instance of the users preferred editor on a temporary file. Once the user exits their editor, the contents of the temporary file are read in as the result. The editor to use is determined by reading the $VISUAL or $EDITOR environment variables. If neither of those are present, notepad (on Windows) or vim (Linux or Mac) is used.\n\n<a name=\"layouts\"></a>\n\n### Use in Non-Interactive Environments\n`prompt()` requires that it is run in an interactive environment. (I.e. [One where `process.stdin.isTTY` is `true`](https://nodejs.org/docs/latest-v12.x/api/process.html#process_a_note_on_process_i_o)). If `prompt()` is invoked outside of such an environment, then `prompt()` will return a rejected promise with an error. For convenience, the error will have a `isTtyError` property to programmatically indicate the cause.\n\n\n## User Interfaces and layouts\n\nAlong with the prompts, Inquirer offers some basic text UI.\n\n#### Bottom Bar - `inquirer.ui.BottomBar`\n\nThis UI present a fixed text at the bottom of a free text zone. This is useful to keep a message to the bottom of the screen while outputting command outputs on the higher section.\n\n```javascript\nvar ui = new inquirer.ui.BottomBar();\n\n// pipe a Stream to the log zone\noutputStream.pipe(ui.log);\n\n// Or simply write output\nui.log.write('something just happened.');\nui.log.write('Almost over, standby!');\n\n// During processing, update the bottom bar content to display a loader\n// or output a progress bar, etc\nui.updateBottomBar('new bottom bar content');\n```\n\n<a name=\"reactive\"></a>\n\n## Reactive interface\n\nInternally, Inquirer uses the [JS reactive extension](https://github.com/ReactiveX/rxjs) to handle events and async flows.\n\nThis mean you can take advantage of this feature to provide more advanced flows. For example, you can dynamically add questions to be asked:\n\n```js\nvar prompts = new Rx.Subject();\ninquirer.prompt(prompts);\n\n// At some point in the future, push new questions\nprompts.next({\n  /* question... */\n});\nprompts.next({\n  /* question... */\n});\n\n// When you're done\nprompts.complete();\n```\n\nAnd using the return value `process` property, you can access more fine grained callbacks:\n\n```js\ninquirer.prompt(prompts).ui.process.subscribe(onEachAnswer, onError, onComplete);\n```\n\n## Support (OS Terminals)\n\n<a name=\"support\"></a>\n\nYou should expect mostly good support for the CLI below. This does not mean we won't\nlook at issues found on other command line - feel free to report any!\n\n- **Mac OS**:\n  - Terminal.app\n  - iTerm\n- **Windows ([Known issues](#issues))**:\n  - [ConEmu](https://conemu.github.io/)\n  - cmd.exe\n  - Powershell\n  - Cygwin\n- **Linux (Ubuntu, openSUSE, Arch Linux, etc)**:\n  - gnome-terminal (Terminal GNOME)\n  - konsole\n\n## Know issues\n\n<a name=\"issues\"></a>\n\nRunning Inquirer together with network streams in Windows platform inside some terminals can result in process hang.\nWorkaround: run inside another terminal.\nPlease refer to the https://github.com/nodejs/node/issues/21771\n\n## News on the march (Release notes)\n\n<a name=\"news\"></a>\n\nPlease refer to the [GitHub releases section for the changelog](https://github.com/SBoudrias/Inquirer.js/releases)\n\n## Contributing\n\n<a name=\"contributing\"></a>\n\n**Unit test**\nUnit test are written in [Mocha](https://mochajs.org/). Please add a unit test for every new feature or bug fix. `npm test` to run the test suite.\n\n**Documentation**\nAdd documentation for every API change. Feel free to send typo fixes and better docs!\n\nWe're looking to offer good support for multiple prompts and environments. If you want to\nhelp, we'd like to keep a list of testers for each terminal/OS so we can contact you and\nget feedback before release. Let us know if you want to be added to the list (just tweet\nto [@vaxilart](https://twitter.com/Vaxilart)) or just add your name to [the wiki](https://github.com/SBoudrias/Inquirer.js/wiki/Testers)\n\n## License\n\n<a name=\"license\"></a>\n\nCopyright (c) 2016 Simon Boudrias (twitter: [@vaxilart](https://twitter.com/Vaxilart))\nLicensed under the MIT license.\n\n## Plugins\n\n<a name=\"plugins\"></a>\n\n### Prompts\n\n[**autocomplete**](https://github.com/mokkabonna/inquirer-autocomplete-prompt)<br>\nPresents a list of options as the user types, compatible with other packages such as fuzzy (for search)<br>\n<br>\n![autocomplete prompt](https://github.com/mokkabonna/inquirer-autocomplete-prompt/raw/master/inquirer.gif)\n\n[**checkbox-plus**](https://github.com/faressoft/inquirer-checkbox-plus-prompt)<br>\nCheckbox list with autocomplete and other additions<br>\n<br>\n![checkbox-plus](https://github.com/faressoft/inquirer-checkbox-plus-prompt/raw/master/demo.gif)\n\n[**datetime**](https://github.com/DerekTBrown/inquirer-datepicker-prompt)<br>\nCustomizable date/time selector using both number pad and arrow keys<br>\n<br>\n![Datetime Prompt](https://github.com/DerekTBrown/inquirer-datepicker-prompt/raw/master/example/datetime-prompt.png)\n\n[**inquirer-select-line**](https://github.com/adam-golab/inquirer-select-line)<br>\nPrompt for selecting index in array where add new element<br>\n<br>\n![inquirer-select-line gif](https://media.giphy.com/media/xUA7b1MxpngddUvdHW/giphy.gif)\n\n[**command**](https://github.com/sullof/inquirer-command-prompt)<br>\nSimple prompt with command history and dynamic autocomplete<br>\n\n[**inquirer-fuzzy-path**](https://github.com/adelsz/inquirer-fuzzy-path)<br>\nPrompt for fuzzy file/directory selection.<br>\n<br>\n![inquirer-fuzzy-path](https://raw.githubusercontent.com/adelsz/inquirer-fuzzy-path/master/recording.gif)\n\n[**inquirer-emoji**](https://github.com/tannerntannern/inquirer-emoji)<br>\nPrompt for inputting emojis.<br>\n<br>\n![inquirer-emoji](https://github.com/tannerntannern/inquirer-emoji/raw/master/demo.gif)\n\n[**inquirer-chalk-pipe**](https://github.com/LitoMore/inquirer-chalk-pipe)<br>\nPrompt for input chalk-pipe style strings<br>\n<br>\n![inquirer-chalk-pipe](https://github.com/LitoMore/inquirer-chalk-pipe/raw/master/screenshot.gif)\n\n[**inquirer-search-checkbox**](https://github.com/clinyong/inquirer-search-checkbox)<br>\nSearchable Inquirer checkbox<br>\n\n[**inquirer-search-list**](https://github.com/robin-rpr/inquirer-search-list)<br>\nSearchable Inquirer list<br>\n<br>\n![inquirer-search-list](https://github.com/robin-rpr/inquirer-search-list/blob/master/preview.gif)\n\n[**inquirer-prompt-suggest**](https://github.com/olistic/inquirer-prompt-suggest)<br>\nInquirer prompt for your less creative users.<br>\n<br>\n![inquirer-prompt-suggest](https://user-images.githubusercontent.com/5600126/40391192-d4f3d6d0-5ded-11e8-932f-4b75b642c09e.gif)\n\n[**inquirer-s3**](https://github.com/HQarroum/inquirer-s3)<br>\nAn S3 object selector for Inquirer.<br>\n<br>\n![inquirer-s3](https://github.com/HQarroum/inquirer-s3/raw/master/docs/inquirer-screenshot.png)\n\n[**inquirer-autosubmit-prompt**](https://github.com/yaodingyd/inquirer-autosubmit-prompt)<br>\nAuto submit based on your current input, saving one extra enter<br>\n\n[**inquirer-file-tree-selection-prompt**](https://github.com/anc95/inquirer-file-tree-selection)<br>\nInquirer prompt for to select a file or directory in file tree<br>\n<br>\n![inquirer-file-tree-selection-prompt](https://github.com/anc95/inquirer-file-tree-selection/blob/master/example/screenshot.gif)\n\n[**inquirer-table-prompt**](https://github.com/eduardoboucas/inquirer-table-prompt)<br>\nA table-like prompt for Inquirer.<br>\n<br>\n![inquirer-table-prompt](https://raw.githubusercontent.com/eduardoboucas/inquirer-table-prompt/master/screen-capture.gif)"}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 4364576}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 22228988}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 96086561}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 284597906}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 505379848}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 893152698}], "dependentsCount": 18025, "starsCount": 440}, "github": {"starsCount": 12683, "forksCount": 808, "subscribersCount": 147, "issues": {"count": 930, "openCount": 162, "distribution": {"3600": 131, "10800": 62, "32400": 92, "97200": 94, "291600": 69, "874800": 83, "2624400": 92, "7873200": 65, "23619600": 73, "70858800": 80, "212576400": 89}, "isDisabled": false}, "contributors": [{"username": "SBoudrias", "commitsCount": 504}, {"username": "greenkeeper[bot]", "commitsCount": 28}, {"username": "LitoMore", "commitsCount": 12}, {"username": "sindresorhus", "commitsCount": 8}, {"username": "akwangho", "commitsCount": 6}, {"username": "mshima", "commitsCount": 6}, {"username": "danielchatfield", "commitsCount": 5}, {"username": "mokkabonna", "commitsCount": 5}, {"username": "mrkmg", "commitsCount": 4}, {"username": "jcready", "commitsCount": 3}, {"username": "vweevers", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Froren", "commitsCount": 2}, {"username": "adamreisnz", "commitsCount": 2}, {"username": "jhorbulyk", "commitsCount": 2}, {"username": "ruyadorno", "commitsCount": 2}, {"username": "sarthology", "commitsCount": 2}, {"username": "tklun", "commitsCount": 2}, {"username": "user3587412", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "Abazhenov", "commitsCount": 1}, {"username": "CaAlden", "commitsCount": 1}, {"username": "DerekTBrown", "commitsCount": 1}, {"username": "Equim-chan", "commitsCount": 1}, {"username": "GabrielTK", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "HQarroum", "commitsCount": 1}, {"username": "PatOnTheBack", "commitsCount": 1}, {"username": "Rawnly", "commitsCount": 1}, {"username": "RichardHJensen", "commitsCount": 1}, {"username": "TheSavior", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "Turbo87", "commitsCount": 1}, {"username": "ZYSzys", "commitsCount": 1}, {"username": "acburdine", "commitsCount": 1}, {"username": "adam-golab", "commitsCount": 1}, {"username": "adelsz", "commitsCount": 1}, {"username": "aliaksandr-yermalayeu", "commitsCount": 1}, {"username": "anc95", "commitsCount": 1}, {"username": "anicke", "commitsCount": 1}, {"username": "biancapower", "commitsCount": 1}, {"username": "bibli-alex", "commitsCount": 1}, {"username": "blewisio", "commitsCount": 1}, {"username": "bokub", "commitsCount": 1}, {"username": "chrisdothtml", "commitsCount": 1}, {"username": "clinyong", "commitsCount": 1}, {"username": "danmactough", "commitsCount": 1}, {"username": "dawidpawlowski", "commitsCount": 1}, {"username": "dkirchhof", "commitsCount": 1}, {"username": "dwieeb", "commitsCount": 1}, {"username": "eduardoboucas", "commitsCount": 1}, {"username": "eush77", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "faressoft", "commitsCount": 1}, {"username": "ihorskyi", "commitsCount": 1}, {"username": "ilabacheuski", "commitsCount": 1}, {"username": "imyelo", "commitsCount": 1}, {"username": "jakepruitt", "commitsCount": 1}, {"username": "janriemer", "commitsCount": 1}, {"username": "jared-hexagon", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jetersen", "commitsCount": 1}, {"username": "jmeis", "commitsCount": 1}, {"username": "joeyZhouYicheng", "commitsCount": 1}, {"username": "joshkel", "commitsCount": 1}, {"username": "jtillmann", "commitsCount": 1}, {"username": "kaustavha", "commitsCount": 1}, {"username": "larkinscott", "commitsCount": 1}, {"username": "leak4mk0", "commitsCount": 1}, {"username": "leo", "commitsCount": 1}, {"username": "loicbourgois", "commitsCount": 1}, {"username": "mathiasbynens", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "notnarb", "commitsCount": 1}, {"username": "ntwcklng", "commitsCount": 1}, {"username": "ohicham", "commitsCount": 1}, {"username": "olistic", "commitsCount": 1}, {"username": "orgads", "commitsCount": 1}, {"username": "pgherveou", "commitsCount": 1}, {"username": "phantom0424", "commitsCount": 1}, {"username": "pldg", "commitsCount": 1}, {"username": "raingerber", "commitsCount": 1}, {"username": "ransombriggs", "commitsCount": 1}, {"username": "rbardini", "commitsCount": 1}, {"username": "rhyek", "commitsCount": 1}, {"username": "robin-rpr", "commitsCount": 1}, {"username": "ryankeener", "commitsCount": 1}, {"username": "sathomps", "commitsCount": 1}, {"username": "sdgluck", "commitsCount": 1}, {"username": "sirreal", "commitsCount": 1}, {"username": "stuartpb", "commitsCount": 1}, {"username": "sullof", "commitsCount": 1}, {"username": "tannerntannern", "commitsCount": 1}, {"username": "travi", "commitsCount": 1}, {"username": "walfly", "commitsCount": 1}, {"username": "xiaoxielnino", "commitsCount": 1}, {"username": "yaodingyd", "commitsCount": 1}, {"username": "yujunlong2000", "commitsCount": 1}, {"username": "zaide-chris", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 2}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 3}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 7}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 26}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 59}], "statuses": [{"context": "License Compliance", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 72090}, "badges": [{"urls": {"original": "https://travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master", "service": "https://api.travis-ci.org/SBoudrias/Inquirer.js.svg?branch=master", "shields": "https://img.shields.io/travis/SBoudrias/Inquirer.js/master.svg", "content": "https://img.shields.io/travis/SBoudrias/Inquirer.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"chalk": {"required": "^3.0.0", "stable": "4.1.0", "latest": "4.1.0"}, "cli-width": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9895, "health": 0.6923076923076923, "branding": 0.15}, "popularity": {"communityInterest": 14177, "downloadsCount": 94865968.66666667, "downloadsAcceleration": 279140.95064687985, "dependentsCount": 18025}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8484931506849315, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8202665843968706, "detail": {"quality": 0.8950408827203179, "popularity": 0.9098233974859431, "maintenance": 0.6666175156019863}}}}, {"babel-preset-stage-2": {"analyzedAt": "2020-05-04T21:43:49.893Z", "collected": {"metadata": {"name": "babel-preset-stage-2", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for stage 2 plugins", "date": "2017-04-07T15:19:45.006Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-stage-2", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-transform-class-properties": "^6.24.1", "babel-plugin-transform-decorators": "^6.24.1", "babel-plugin-syntax-dynamic-import": "^6.18.0", "babel-preset-stage-3": "^6.24.1"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.8.3", "@babel/plugin-proposal-dynamic-import": "^7.8.3", "@babel/plugin-proposal-export-namespace-from": "^7.8.3", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/plugin-transform-flow-strip-types": "^7.9.0", "@babel/plugin-transform-for-of": "^7.9.0", "@babel/plugin-transform-modules-commonjs": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/preset-flow": "^7.9.0", "@babel/register": "^7.9.0", "@babel/runtime": "^7.9.6", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^1.19.1", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "^1.32.1", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2018-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-stage-2\n\n> Babel preset for stage 2 plugins.\n\nThe gist of Stage 2 is:\n\n> **Stage 2:** draft\n> \n> **What is it?** A first version of what will be in the specification. At this point, an eventual inclusion of the feature in the standard is likely.\n> \n> **What\u2019s required?** The proposal must now additionally have a formal description of the syntax and semantics of the feature (using the formal language of the ECMAScript specification). The description should be as complete as possible, but can contain todos and placeholders. Two experimental implementations of the feature are needed, but one of them can be in a transpiler such as Babel.\n>\n> **What\u2019s next?** Only incremental changes are expected from now on.\n\n\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-stage-2\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"stage-2\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets stage-2\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"stage-2\"]\n});\n```\n## References\n\n- Chapter \"[The TC39 process for ECMAScript features](http://exploringjs.com/es2016-es2017/ch_tc39-process.html)\" in \"Exploring ES2016 and ES2017\" by Axel Rauschmayer"}, "npm": {"downloads": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 40936}, {"from": "2020-04-27T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 811123}, {"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 3477256}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 11232799}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 21520484}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 48360291}], "dependentsCount": 1002, "starsCount": 15}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36445, "forksCount": 4260, "subscribersCount": 871, "issues": {"count": 11460, "openCount": 759, "distribution": {"3600": 2447, "10800": 906, "32400": 1056, "97200": 1219, "291600": 1038, "874800": 990, "2624400": 844, "7873200": 774, "23619600": 843, "70858800": 1090, "212576400": 253}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5192}, {"username": "hzoo", "commitsCount": 1260}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 463}, {"username": "existentialism", "commitsCount": 448}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 176}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 150}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 68}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 40}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-04-27T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 2}, {"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 55}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 197}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 436}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 758}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 11779561, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 41690, "downloadsCount": 3744266.3333333335, "downloadsAcceleration": -7380.279528158288, "dependentsCount": 1002}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2496781220768714}}, "score": {"final": 0.7004172235675686, "detail": {"quality": 0.9859852242301949, "popularity": 0.5801033424224813, "maintenance": 0.5759585327161193}}}}, {"@typescript-eslint/eslint-plugin": {"analyzedAt": "2020-06-16T17:35:28.200Z", "collected": {"metadata": {"name": "@typescript-eslint/eslint-plugin", "scope": "typescript-eslint", "version": "3.3.0", "description": "TypeScript plugin for ESLint", "keywords": ["eslint", "eslintplugin", "eslint-plugin", "typescript"], "date": "2020-06-15T17:02:40.107Z", "publisher": {"username": "jameshenry", "email": "npm@jameshenry.email"}, "maintainers": [{"username": "jameshenry", "email": "james@henry.sc"}], "repository": {"type": "git", "url": "git+https://github.com/typescript-eslint/typescript-eslint.git", "directory": "packages/eslint-plugin"}, "links": {"npm": "https://www.npmjs.com/package/%40typescript-eslint%2Feslint-plugin", "homepage": "https://github.com/typescript-eslint/typescript-eslint#readme", "repository": "https://github.com/typescript-eslint/typescript-eslint", "bugs": "https://github.com/typescript-eslint/typescript-eslint/issues"}, "license": "MIT", "dependencies": {"@typescript-eslint/experimental-utils": "3.3.0", "functional-red-black-tree": "^1.0.1", "regexpp": "^3.0.0", "semver": "^7.3.2", "tsutils": "^3.17.1"}, "devDependencies": {"@types/marked": "^0.7.1", "chalk": "^4.0.0", "marked": "^1.0.0", "prettier": "*", "typescript": "*"}, "peerDependencies": {"@typescript-eslint/parser": "^3.0.0", "eslint": "^5.0.0 || ^6.0.0 || ^7.0.0"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 63}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 175}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 344}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 566}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 782}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 917007}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 4977052}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 20856033}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 59418496}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 97363977}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 142198375}], "dependentsCount": 2519, "starsCount": 0}, "github": {"homepage": "https://typescript-eslint.io", "starsCount": 7355, "forksCount": 911, "subscribersCount": 77, "issues": {"count": 2219, "openCount": 233, "distribution": {"3600": 330, "10800": 173, "32400": 267, "97200": 266, "291600": 202, "874800": 202, "2624400": 230, "7873200": 223, "23619600": 198, "70858800": 128, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "JamesHenry", "commitsCount": 284}, {"username": "bradzacher", "commitsCount": 257}, {"username": "armano2", "commitsCount": 209}, {"username": "a-tarasyuk", "commitsCount": 55}, {"username": "soda0289", "commitsCount": 44}, {"username": "weirdpattern", "commitsCount": 36}, {"username": "G-Rath", "commitsCount": 31}, {"username": "nzakas", "commitsCount": 28}, {"username": "j-f1", "commitsCount": 25}, {"username": "eslint[bot]", "commitsCount": 18}, {"username": "uniqueiniquity", "commitsCount": 18}, {"username": "JoshuaKGoldberg", "commitsCount": 15}, {"username": "greenkeeper[bot]", "commitsCount": 12}, {"username": "scottohara", "commitsCount": 11}, {"username": "Retsam", "commitsCount": 10}, {"username": "kaicataldo", "commitsCount": 10}, {"username": "Pajn", "commitsCount": 9}, {"username": "mysticatea", "commitsCount": 9}, {"username": "azz", "commitsCount": 8}, {"username": "yeonjuan", "commitsCount": 8}, {"username": "dannyfritz", "commitsCount": 7}, {"username": "ikatyang", "commitsCount": 7}, {"username": "macklinu", "commitsCount": 7}, {"username": "phaux", "commitsCount": 7}, {"username": "semantic-release-bot", "commitsCount": 7}, {"username": "lukyth", "commitsCount": 6}, {"username": "SimenB", "commitsCount": 5}, {"username": "anikethsaha", "commitsCount": 5}, {"username": "ldrick", "commitsCount": 5}, {"username": "vapurrmaid", "commitsCount": 5}, {"username": "Validark", "commitsCount": 4}, {"username": "duailibe", "commitsCount": 4}, {"username": "gavinbarron", "commitsCount": 4}, {"username": "mightyiam", "commitsCount": 4}, {"username": "octogonz", "commitsCount": 4}, {"username": "pablobirukov", "commitsCount": 4}, {"username": "platinumazure", "commitsCount": 4}, {"username": "sosukesuzuki", "commitsCount": 4}, {"username": "ulrichb", "commitsCount": 4}, {"username": "ThomasdenH", "commitsCount": 3}, {"username": "dimitropoulos", "commitsCount": 3}, {"username": "flying-sheep", "commitsCount": 3}, {"username": "g-plane", "commitsCount": 3}, {"username": "jonathanrdelgado", "commitsCount": 3}, {"username": "madbence", "commitsCount": 3}, {"username": "nevir", "commitsCount": 3}, {"username": "susisu", "commitsCount": 3}, {"username": "timkraut", "commitsCount": 3}, {"username": "webschik", "commitsCount": 3}, {"username": "43081j", "commitsCount": 2}, {"username": "Dilatorily", "commitsCount": 2}, {"username": "Nizarius", "commitsCount": 2}, {"username": "OliverSieweke", "commitsCount": 2}, {"username": "Svish", "commitsCount": 2}, {"username": "Zzzen", "commitsCount": 2}, {"username": "aboyton", "commitsCount": 2}, {"username": "ankeetmaini", "commitsCount": 2}, {"username": "auhsoja", "commitsCount": 2}, {"username": "borekb", "commitsCount": 2}, {"username": "cherryblossom000", "commitsCount": 2}, {"username": "corbinu", "commitsCount": 2}, {"username": "despairblue", "commitsCount": 2}, {"username": "dimabory", "commitsCount": 2}, {"username": "domoritz", "commitsCount": 2}, {"username": "duduluu", "commitsCount": 2}, {"username": "eranshabi", "commitsCount": 2}, {"username": "fa93hws", "commitsCount": 2}, {"username": "garyking", "commitsCount": 2}, {"username": "gilbsgilbs", "commitsCount": 2}, {"username": "jens-duttke", "commitsCount": 2}, {"username": "lonyele", "commitsCount": 2}, {"username": "mohsen1", "commitsCount": 2}, {"username": "otofu-square", "commitsCount": 2}, {"username": "princjef", "commitsCount": 2}, {"username": "rhysd", "commitsCount": 2}, {"username": "shaodahong", "commitsCount": 2}, {"username": "sheetalkamat", "commitsCount": 2}, {"username": "sinyovercosy", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "thorn0", "commitsCount": 2}, {"username": "timothykang", "commitsCount": 2}, {"username": "umidbekkarimov", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}, {"username": "yoyo930021", "commitsCount": 2}, {"username": "Robbie-Cook", "commitsCount": 1}, {"username": "bbarry", "commitsCount": 1}, {"username": "dependabot[bot]", "commitsCount": 1}, {"username": "drewwyatt", "commitsCount": 1}, {"username": "edwinm", "commitsCount": 1}, {"username": "eeeee", "commitsCount": 1}, {"username": "ianbollinger", "commitsCount": 1}, {"username": "ifiokjr", "commitsCount": 1}, {"username": "ikesyo", "commitsCount": 1}, {"username": "mgcrea", "commitsCount": 1}, {"username": "proudust", "commitsCount": 1}, {"username": "segeda", "commitsCount": 1}, {"username": "toshi-toma", "commitsCount": 1}, {"username": "villelahdenvuo", "commitsCount": 1}, {"username": "zhangciwu", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 4}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 71}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 184}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 361}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 626}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1617892, "hasChangelog": true}, "linters": ["prettier"], "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.9895, "health": 1, "branding": 0}, "popularity": {"communityInterest": 8443, "downloadsCount": 19806165.333333332, "downloadsAcceleration": 114235.72631278538, "dependentsCount": 2519}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6761492712906726}}, "score": {"final": 0.8659160149988856, "detail": {"quality": 0.8448405985925853, "popularity": 0.7523781797807565, "maintenance": 0.9975184928509867}}}}, {"@typescript-eslint/parser": {"analyzedAt": "2020-06-16T17:35:18.587Z", "collected": {"metadata": {"name": "@typescript-eslint/parser", "scope": "typescript-eslint", "version": "3.3.0", "description": "An ESLint custom parser which leverages TypeScript ESTree", "keywords": ["ast", "ecmascript", "javascript", "typescript", "parser", "syntax", "eslint"], "date": "2020-06-15T17:02:49.912Z", "publisher": {"username": "jameshenry", "email": "npm@jameshenry.email"}, "maintainers": [{"username": "jameshenry", "email": "james@henry.sc"}], "repository": {"type": "git", "url": "git+https://github.com/typescript-eslint/typescript-eslint.git", "directory": "packages/parser"}, "links": {"npm": "https://www.npmjs.com/package/%40typescript-eslint%2Fparser", "homepage": "https://github.com/typescript-eslint/typescript-eslint#readme", "repository": "https://github.com/typescript-eslint/typescript-eslint", "bugs": "https://github.com/typescript-eslint/typescript-eslint/issues"}, "license": "BSD-2-Clause", "dependencies": {"@types/eslint-visitor-keys": "^1.0.0", "@typescript-eslint/experimental-utils": "3.3.0", "@typescript-eslint/typescript-estree": "3.3.0", "eslint-visitor-keys": "^1.1.0"}, "devDependencies": {"@types/glob": "^7.1.1", "@typescript-eslint/shared-fixtures": "3.3.0", "glob": "*"}, "peerDependencies": {"eslint": "^5.0.0 || ^6.0.0 || ^7.0.0"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 63}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 175}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 344}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 566}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 782}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 965061}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 5261479}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 22084207}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 62948752}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 103473470}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 151808340}], "dependentsCount": 2618, "starsCount": 0}, "github": {"homepage": "https://typescript-eslint.io", "starsCount": 7355, "forksCount": 911, "subscribersCount": 77, "issues": {"count": 2219, "openCount": 233, "distribution": {"3600": 330, "10800": 173, "32400": 267, "97200": 266, "291600": 202, "874800": 202, "2624400": 230, "7873200": 223, "23619600": 198, "70858800": 128, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "JamesHenry", "commitsCount": 284}, {"username": "bradzacher", "commitsCount": 257}, {"username": "armano2", "commitsCount": 209}, {"username": "a-tarasyuk", "commitsCount": 55}, {"username": "soda0289", "commitsCount": 44}, {"username": "weirdpattern", "commitsCount": 36}, {"username": "G-Rath", "commitsCount": 31}, {"username": "nzakas", "commitsCount": 28}, {"username": "j-f1", "commitsCount": 25}, {"username": "eslint[bot]", "commitsCount": 18}, {"username": "uniqueiniquity", "commitsCount": 18}, {"username": "JoshuaKGoldberg", "commitsCount": 15}, {"username": "greenkeeper[bot]", "commitsCount": 12}, {"username": "scottohara", "commitsCount": 11}, {"username": "Retsam", "commitsCount": 10}, {"username": "kaicataldo", "commitsCount": 10}, {"username": "Pajn", "commitsCount": 9}, {"username": "mysticatea", "commitsCount": 9}, {"username": "azz", "commitsCount": 8}, {"username": "yeonjuan", "commitsCount": 8}, {"username": "dannyfritz", "commitsCount": 7}, {"username": "ikatyang", "commitsCount": 7}, {"username": "macklinu", "commitsCount": 7}, {"username": "phaux", "commitsCount": 7}, {"username": "semantic-release-bot", "commitsCount": 7}, {"username": "lukyth", "commitsCount": 6}, {"username": "SimenB", "commitsCount": 5}, {"username": "anikethsaha", "commitsCount": 5}, {"username": "ldrick", "commitsCount": 5}, {"username": "vapurrmaid", "commitsCount": 5}, {"username": "Validark", "commitsCount": 4}, {"username": "duailibe", "commitsCount": 4}, {"username": "gavinbarron", "commitsCount": 4}, {"username": "mightyiam", "commitsCount": 4}, {"username": "octogonz", "commitsCount": 4}, {"username": "pablobirukov", "commitsCount": 4}, {"username": "platinumazure", "commitsCount": 4}, {"username": "sosukesuzuki", "commitsCount": 4}, {"username": "ulrichb", "commitsCount": 4}, {"username": "ThomasdenH", "commitsCount": 3}, {"username": "dimitropoulos", "commitsCount": 3}, {"username": "flying-sheep", "commitsCount": 3}, {"username": "g-plane", "commitsCount": 3}, {"username": "jonathanrdelgado", "commitsCount": 3}, {"username": "madbence", "commitsCount": 3}, {"username": "nevir", "commitsCount": 3}, {"username": "susisu", "commitsCount": 3}, {"username": "timkraut", "commitsCount": 3}, {"username": "webschik", "commitsCount": 3}, {"username": "43081j", "commitsCount": 2}, {"username": "Dilatorily", "commitsCount": 2}, {"username": "Nizarius", "commitsCount": 2}, {"username": "OliverSieweke", "commitsCount": 2}, {"username": "Svish", "commitsCount": 2}, {"username": "Zzzen", "commitsCount": 2}, {"username": "aboyton", "commitsCount": 2}, {"username": "ankeetmaini", "commitsCount": 2}, {"username": "auhsoja", "commitsCount": 2}, {"username": "borekb", "commitsCount": 2}, {"username": "cherryblossom000", "commitsCount": 2}, {"username": "corbinu", "commitsCount": 2}, {"username": "despairblue", "commitsCount": 2}, {"username": "dimabory", "commitsCount": 2}, {"username": "domoritz", "commitsCount": 2}, {"username": "duduluu", "commitsCount": 2}, {"username": "eranshabi", "commitsCount": 2}, {"username": "fa93hws", "commitsCount": 2}, {"username": "garyking", "commitsCount": 2}, {"username": "gilbsgilbs", "commitsCount": 2}, {"username": "jens-duttke", "commitsCount": 2}, {"username": "lonyele", "commitsCount": 2}, {"username": "mohsen1", "commitsCount": 2}, {"username": "otofu-square", "commitsCount": 2}, {"username": "princjef", "commitsCount": 2}, {"username": "rhysd", "commitsCount": 2}, {"username": "shaodahong", "commitsCount": 2}, {"username": "sheetalkamat", "commitsCount": 2}, {"username": "sinyovercosy", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "teppeis", "commitsCount": 2}, {"username": "thorn0", "commitsCount": 2}, {"username": "timothykang", "commitsCount": 2}, {"username": "umidbekkarimov", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}, {"username": "yoyo930021", "commitsCount": 2}, {"username": "Robbie-Cook", "commitsCount": 1}, {"username": "bbarry", "commitsCount": 1}, {"username": "dependabot[bot]", "commitsCount": 1}, {"username": "drewwyatt", "commitsCount": 1}, {"username": "edwinm", "commitsCount": 1}, {"username": "eeeee", "commitsCount": 1}, {"username": "ianbollinger", "commitsCount": 1}, {"username": "ifiokjr", "commitsCount": 1}, {"username": "ikesyo", "commitsCount": 1}, {"username": "mgcrea", "commitsCount": 1}, {"username": "proudust", "commitsCount": 1}, {"username": "segeda", "commitsCount": 1}, {"username": "toshi-toma", "commitsCount": 1}, {"username": "villelahdenvuo", "commitsCount": 1}, {"username": "zhangciwu", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 4}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 71}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 184}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 361}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 626}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3842017, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier", "tslint"], "coverage": 0.93}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.9895, "health": 1, "branding": 0}, "popularity": {"communityInterest": 8443, "downloadsCount": 20982917.333333332, "downloadsAcceleration": 119791.58097412481, "dependentsCount": 2618}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6761492712906726}}, "score": {"final": 0.8675842640994063, "detail": {"quality": 0.8448405985925853, "popularity": 0.7571446057822435, "maintenance": 0.9975184928509867}}}}, {"grunt-contrib-jshint": {"analyzedAt": "2020-06-14T09:40:29.708Z", "collected": {"metadata": {"name": "grunt-contrib-jshint", "scope": "unscoped", "version": "2.1.0", "description": "Validate files with JSHint", "keywords": ["gruntplugin"], "date": "2019-03-18T12:17:11.065Z", "author": {"name": "Grunt Team", "url": "https://gruntjs.com/"}, "publisher": {"username": "vladikoff", "email": "vlad@vladikoff.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "jmeas", "email": "jellyes2@gmail.com"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com/"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com/"}, {"name": "Kyle Robinson Young", "url": "http://dontkry.com/"}, {"name": "Vlad Filippov", "url": "http://vladfilippov.com/"}, {"name": "Tony Lukasavage"}, {"name": "Thomas Boyt"}, {"name": "Szymon Przybylski"}, {"name": "Spencer Alger"}, {"name": "Sebastiaan Deckers"}, {"name": "Rob Wierzbowski"}, {"name": "Patrick Williams"}, {"name": "Nick Schonning"}, {"name": "Nick Babcock"}, {"name": "Micha\u0142 Go\u0142\u0119biowski-Owczarek"}, {"name": "Kosei Moriyama"}, {"name": "Juan Pablo Buritica"}, {"name": "James Beavers"}, {"name": "Eugene Kashida"}, {"name": "Cliffano Subagio"}, {"name": "Allan K. Jensen"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt-contrib-jshint.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt-contrib-jshint", "homepage": "https://github.com/gruntjs/grunt-contrib-jshint#readme", "repository": "https://github.com/gruntjs/grunt-contrib-jshint", "bugs": "https://github.com/gruntjs/grunt-contrib-jshint/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.2", "hooker": "^0.2.3", "jshint": "~2.10.2"}, "devDependencies": {"grunt": "^1.0.3", "grunt-contrib-internal": "^3.1.0", "grunt-contrib-nodeunit": "^2.0.0"}, "peerDependencies": {"grunt": ">=1.0.3"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# grunt-contrib-jshint v2.1.0 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-jshint.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-jshint) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/j04ik7qgx21ixyfw/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-jshint/branch/master)\n\n> Validate files with JSHint\n\n\n\n## Getting Started\n\nIf you haven't used [Grunt](https://gruntjs.com/) before, be sure to check out the [Getting Started](https://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](https://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-jshint --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-jshint');\n```\n\n\n\n\n## Jshint task\n_Run this task with the `grunt jshint` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](https://gruntjs.com/configuring-tasks) guide.\n\n### Options\n\nAny specified option will be passed through directly to [JSHint][], thus you can specify any option that JSHint supports. See the [JSHint documentation][] for a list of supported options.\n\n[JSHint]: http://jshint.com/\n[JSHint documentation]: http://jshint.com/docs/\n\nA few additional options are supported:\n\n\n#### globals\n\nType: `Object`  \nDefault: `null`\n\nA map of global variables, with keys as names and a boolean value to determine if they are assignable. This is not a standard JSHint option, but is passed into the `JSHINT` function as its third argument. See the [JSHint documentation][] for more information.\n\n\n#### jshintrc\n\nType: `String` or `true`  \nDefault: `null`\n\nIf set to `true`, no config will be sent to JSHint and JSHint will search for `.jshintrc` files relative to the files being linted.\n\nIf a filename is specified, options and globals defined therein will be used. The `jshintrc` file must be valid JSON and looks something like this:\n\n```json\n{\n  \"curly\": true,\n  \"eqnull\": true,\n  \"eqeqeq\": true,\n  \"undef\": true,\n  \"globals\": {\n    \"jQuery\": true\n  }\n}\n```\n\n*Be aware that `jshintrc` settings are not merged with your Grunt options.*\n\n\n#### extensions\n\nType: `String`  \nDefault: `''`\n\nA list of non-dot-js extensions to check.\n\n\n#### ignores\n\nType: `Array`  \nDefault: `null`\n\nA list of files and dirs to ignore. This will override your `.jshintignore` file if set and does not merge.\n\n\n#### force\n\nType: `Boolean`  \nDefault: `false`\n\nSet `force` to `true` to report JSHint errors but not fail the task.\n\n\n#### reporter\n\nType: `String`  \nDefault: `null`\n\nAllows you to modify this plugins output. By default it will use a built-in Grunt reporter. Set the path to your own custom reporter or to one of the built-in JSHint reporters: `jslint` or `checkstyle`.\n\nSee also: [Writing your own JSHint reporter.](http://jshint.com/docs/reporters/)\n\nYou can also use an external reporter. For example [jshint-stylish](https://github.com/sindresorhus/jshint-stylish):\n\n```\n$ npm install --save-dev jshint-stylish\n```\n\n```js\noptions: {\n    reporter: require('jshint-stylish')\n}\n```\n\n#### reporterOutput\n\nType: `String`  \nDefault: `null`\n\nSpecify a filepath  to output the results of a reporter. If `reporterOutput` is specified then all output will be written to the given filepath instead of printed to stdout.\n\n###### reporterOutputRelative\n\nType: `Boolean`  \nDefault: `true`\n\nResults of a reporter will use a relative filepath to `reporterOutput`.  If set to `false` then filepaths will appear relative to the current folder.  Unless `reporterOutput` is not set this option will not have any effect.\n\n### Usage examples\n\n#### Wildcards\nIn this example, running `grunt jshint:all` (or `grunt jshint` because `jshint` is a [multi task](https://gruntjs.com/configuring-tasks#task-configuration-and-targets)) will lint the project's Gruntfile as well as all JavaScript files in the `lib` and `test` directories and their subdirectories, using the default JSHint options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  jshint: {\n    all: ['Gruntfile.js', 'lib/**/*.js', 'test/**/*.js']\n  }\n});\n```\n\n#### Linting before and after concatenating\nIn this example, running `grunt jshint` will lint both the \"beforeconcat\" set and \"afterconcat\" sets of files. This is not ideal, because `dist/output.js` may get linted before it gets created via the [grunt-contrib-concat plugin](https://github.com/gruntjs/grunt-contrib-concat) `concat` task.\n\nIn this case, you should lint the \"beforeconcat\" files first, then concat, then lint the \"afterconcat\" files, by running `grunt jshint:beforeconcat concat jshint:afterconcat`.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  concat: {\n    dist: {\n      src: ['src/foo.js', 'src/bar.js'],\n      dest: 'dist/output.js'\n    }\n  },\n  jshint: {\n    beforeconcat: ['src/foo.js', 'src/bar.js'],\n    afterconcat: ['dist/output.js']\n  }\n});\n```\n\n#### Specifying JSHint options and globals\n\nIn this example, custom JSHint options are specified. Note that when `grunt jshint:uses_defaults` is run, those files are linted using the default options, but when `grunt jshint:with_overrides` is run, those files are linted using _merged_ task/target options.\n\n```js\n// Project configuration.\ngrunt.initConfig({\n  jshint: {\n    options: {\n      curly: true,\n      eqeqeq: true,\n      eqnull: true,\n      browser: true,\n      globals: {\n        jQuery: true\n      },\n    },\n    uses_defaults: ['dir1/**/*.js', 'dir2/**/*.js'],\n    with_overrides: {\n      options: {\n        curly: false,\n        undef: true,\n      },\n      files: {\n        src: ['dir3/**/*.js', 'dir4/**/*.js']\n      },\n    }\n  },\n});\n```\n\n#### Ignoring specific warnings\n\nIf you would like to ignore a specific warning:\n\n```shell\n[L24:C9] W015: Expected '}' to have an indentation at 11 instead at 9.\n```\n\nYou can toggle it by prepending `-` to the warning id as an option:\n\n```js\ngrunt.initConfig({\n  jshint: {\n    ignore_warning: {\n      options: {\n        '-W015': true,\n      },\n      src: ['**/*.js'],\n    },\n  },\n});\n```\n\n\n## Release History\n\n * 2019-03-18\u2003\u2003\u2003v2.1.0\u2003\u2003\u2003Bump dependencies. Update to latest JSHint\n * 2018-09-22\u2003\u2003\u2003v2.0.0\u2003\u2003\u2003Bump devDependencies. Drop Node.js < 6 support.\n * 2016-11-23\u2003\u2003\u2003v1.1.0\u2003\u2003\u2003Fix relative output Bump minor version\n * 2016-02-16\u2003\u2003\u2003v1.0.0\u2003\u2003\u2003Replace String prototype colors with chalk. Update Grunt peerDep to `>=0.4.0`.\n * 2016-01-17\u2003\u2003\u2003v0.12.0\u2003\u2003\u2003Update to JSHint ~2.9.0.\n * 2015-09-03\u2003\u2003\u2003v0.11.3\u2003\u2003\u2003Update to JSHint ~2.8.0.\n * 2015-04-16\u2003\u2003\u2003v0.11.2\u2003\u2003\u2003Fix default value of the `reporter` option.\n * 2015-03-20\u2003\u2003\u2003v0.11.1\u2003\u2003\u2003Fix io.js compatibility issues. Other fixes to pathing.\n * 2015-01-22\u2003\u2003\u2003v0.11.0\u2003\u2003\u2003Update to JSHint ~2.6.0.\n * 2014-04-02\u2003\u2003\u2003v0.10.0\u2003\u2003\u2003Update to JSHint 2.5.0.\n * 2014-03-12\u2003\u2003\u2003v0.9.2\u2003\u2003\u2003Fixes a bug where `reporterOutput` was still passed to JSHint.\n * 2014-03-12\u2003\u2003\u2003v0.9.1\u2003\u2003\u2003Don't pass `reporterOutput` option to JSHint.\n * 2014-03-12\u2003\u2003\u2003v0.9.0\u2003\u2003\u2003Replace deprecated `grunt.util._.clone` with `Object.create()`. Replace deprecated `grunt.util.hooker` with hooker lib. Enhancing the readability of the output. Reporter output is relative to the output file. Pass JSHint options to the external reporter.\n * 2013-12-25\u2003\u2003\u2003v0.8.0\u2003\u2003\u2003Update to JSHint 2.4.0.\n * 2013-11-16\u2003\u2003\u2003v0.7.2\u2003\u2003\u2003Only print file name once per error.\n * 2013-10-31\u2003\u2003\u2003v0.7.1\u2003\u2003\u2003Ability to set jshintrc option to true to use JSHint's native ability for finding .jshintrc files relative to the linted files.\n * 2013-10-23\u2003\u2003\u2003v0.7.0\u2003\u2003\u2003Update to JSHint 2.3.0.\n * 2013-10-23\u2003\u2003\u2003v0.6.5\u2003\u2003\u2003Fix output when `maxerr` is low.\n * 2013-08-29\u2003\u2003\u2003v0.6.4\u2003\u2003\u2003jshintrc now loaded by JSHint allowing comments.\n * 2013-08-15\u2003\u2003\u2003v0.6.3\u2003\u2003\u2003Fix module location for JSHint 2.1.10.\n * 2013-07-29\u2003\u2003\u2003v0.6.2\u2003\u2003\u2003Update to JSHint 2.1.7.\n * 2013-07-27\u2003\u2003\u2003v0.6.1\u2003\u2003\u2003Peg JSHint to 2.1.4 until breaking changes in 2.1.5 are fixed.\n * 2013-06-02\u2003\u2003\u2003v0.6.0\u2003\u2003\u2003Don't always succeed the task when using a custom reporter. Bump JSHint to 2.1.3.\n * 2013-05-22\u2003\u2003\u2003v0.5.4\u2003\u2003\u2003Fix default reporter to show offending file.\n * 2013-05-19\u2003\u2003\u2003v0.5.3\u2003\u2003\u2003Performance: Execute the reporter once rather than per file.\n * 2013-05-18\u2003\u2003\u2003v0.5.2\u2003\u2003\u2003Fix printing too many erroneous ignored file errors.\n * 2013-05-17\u2003\u2003\u2003v0.5.1\u2003\u2003\u2003Fix for when only 1 file is lint free.\n * 2013-05-17\u2003\u2003\u2003v0.5.0\u2003\u2003\u2003Bump to JSHint 2.0. Add support for .jshintignore files and ignores option. Add support for `extensions` option. Add support for custom reporters and output report to a file.\n * 2013-04-08\u2003\u2003\u2003v0.4.3\u2003\u2003\u2003Fix evaluation of `predef` option when it's an object.\n * 2013-04-08\u2003\u2003\u2003v0.4.2\u2003\u2003\u2003Avoid wiping `force` option when jshintrc is used.\n * 2013-04-06\u2003\u2003\u2003v0.4.1\u2003\u2003\u2003Fix to allow object type for deprecated predef.\n * 2013-04-04\u2003\u2003\u2003v0.4.0\u2003\u2003\u2003Revert task level options to override jshintrc files.\n * 2013-03-13\u2003\u2003\u2003v0.3.0\u2003\u2003\u2003Bump to JSHint 1.1.0. Add force option to report JSHint errors but not fail the task. Add error/warning code to message. Allow task level options to override jshintrc file.\n * 2013-02-26\u2003\u2003\u2003v0.2.0\u2003\u2003\u2003Bump to JSHint 1.0.\n * 2013-02-15\u2003\u2003\u2003v0.1.1\u2003\u2003\u2003First official release for Grunt 0.4.0.\n * 2013-01-18\u2003\u2003\u2003v0.1.1rc6\u2003\u2003\u2003Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09\u2003\u2003\u2003v0.1.1rc5\u2003\u2003\u2003Updating to work with grunt v0.4.0rc5. Switching to `this.filesSrc` API.\n * 2012-10-18\u2003\u2003\u2003v0.1.0\u2003\u2003\u2003Work in progress, not yet officially released.\n\n---\n\nTask submitted by [\"Cowboy\" Ben Alman](http://benalman.com/)\n\n*This file was generated on Mon Mar 18 2019 08:12:41.*"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11339}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 169031}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 703215}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2042289}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3581549}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7465751}], "dependentsCount": 451, "starsCount": 109}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 718, "forksCount": 198, "subscribersCount": 26, "issues": {"count": 293, "openCount": 21, "distribution": {"3600": 70, "10800": 26, "32400": 35, "97200": 23, "291600": 13, "874800": 24, "2624400": 22, "7873200": 33, "23619600": 15, "70858800": 6, "212576400": 26}, "isDisabled": false}, "contributors": [{"username": "shama", "commitsCount": 51}, {"username": "XhmikosR", "commitsCount": 22}, {"username": "vladikoff", "commitsCount": 19}, {"username": "tkellen", "commitsCount": 18}, {"username": "cowboy", "commitsCount": 12}, {"username": "sindresorhus", "commitsCount": 7}, {"username": "xzyfer", "commitsCount": 4}, {"username": "jamesplease", "commitsCount": 3}, {"username": "Tiross", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "sjhewitt", "commitsCount": 2}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Saturate", "commitsCount": 1}, {"username": "billwolckenlmco", "commitsCount": 1}, {"username": "buritica", "commitsCount": 1}, {"username": "cliffano", "commitsCount": 1}, {"username": "cou929", "commitsCount": 1}, {"username": "ekashida", "commitsCount": 1}, {"username": "giltron", "commitsCount": 1}, {"username": "gruber76", "commitsCount": 1}, {"username": "jasonkarns", "commitsCount": 1}, {"username": "jsr6720", "commitsCount": 1}, {"username": "nfriedly", "commitsCount": 1}, {"username": "nickbabcock", "commitsCount": 1}, {"username": "nschonni", "commitsCount": 1}, {"username": "ofirdagan", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "robwierzbowski", "commitsCount": 1}, {"username": "scottnonnenberg", "commitsCount": 1}, {"username": "sebdeckers", "commitsCount": 1}, {"username": "spalger", "commitsCount": 1}, {"username": "sprzybylski", "commitsCount": 1}, {"username": "sudodoki", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "thomasboyt", "commitsCount": 1}, {"username": "tonylukasavage", "commitsCount": 1}, {"username": "uniqname", "commitsCount": 1}, {"username": "willfarrell", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 10186, "testsSize": 6820, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt-contrib-jshint.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt-contrib-jshint.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt-contrib-jshint/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt-contrib-jshint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/j04ik7qgx21ixyfw/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/j04ik7qgx21ixyfw/branch/master", "shields": "https://img.shields.io/appveyor/ci/j04ik7qgx21ixyfw/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/j04ik7qgx21ixyfw/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["jshint"], "outdatedDependencies": {"chalk": {"required": "^2.4.2", "stable": "4.1.0", "latest": "4.1.0"}, "jshint": {"required": "~2.10.2", "stable": "2.11.1", "latest": "2.11.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 1091, "downloadsCount": 680763, "downloadsAcceleration": 607.4424467275503, "dependentsCount": 451}, "maintenance": {"releasesFrequency": 0.03698630136986302, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.48420470698490475, "detail": {"quality": 0.9142478620414141, "popularity": 0.3854471629440439, "maintenance": 0.2143538324059006}}}}, {"uuid": {"analyzedAt": "2020-05-20T18:53:21.673Z", "collected": {"metadata": {"name": "uuid", "scope": "unscoped", "version": "8.1.0", "description": "RFC4122 (v1, v4, and v5) UUIDs", "keywords": ["uuid", "guid", "rfc4122"], "date": "2020-05-20T18:52:38.248Z", "publisher": {"username": "ctavan", "email": "dev@tavan.de"}, "maintainers": [{"username": "broofa", "email": "robert@broofa.com"}, {"username": "ctavan", "email": "dev@tavan.de"}, {"username": "defunctzombie", "email": "shtylman@gmail.com"}, {"username": "vvo", "email": "vincent.voyer@gmail.com"}], "contributors": [{"name": "Robert Kieffer", "email": "robert@broofa.com"}, {"name": "Christoph Tavan", "email": "dev@tavan.de"}, {"name": "AJ ONeal", "email": "coolaj86@gmail.com"}, {"name": "Vincent Voyer", "email": "vincent@zeroload.net"}, {"name": "Roman Shtylman", "email": "shtylman@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/uuidjs/uuid.git"}, "links": {"npm": "https://www.npmjs.com/package/uuid", "homepage": "https://github.com/uuidjs/uuid#readme", "repository": "https://github.com/uuidjs/uuid", "bugs": "https://github.com/uuidjs/uuid/issues"}, "license": "MIT", "devDependencies": {"@babel/cli": "7.8.4", "@babel/core": "7.9.0", "@babel/preset-env": "7.9.5", "@commitlint/cli": "8.3.5", "@commitlint/config-conventional": "8.3.4", "@rollup/plugin-node-resolve": "7.1.3", "@wdio/browserstack-service": "6.0.12", "@wdio/cli": "6.0.15", "@wdio/jasmine-framework": "6.0.15", "@wdio/local-runner": "6.0.15", "@wdio/spec-reporter": "6.0.14", "@wdio/static-server-service": "6.0.13", "@wdio/sync": "6.0.15", "babel-eslint": "10.1.0", "bundlewatch": "0.2.6", "eslint": "6.8.0", "eslint-config-prettier": "6.10.1", "eslint-config-standard": "14.1.1", "eslint-plugin-import": "2.20.2", "eslint-plugin-node": "11.1.0", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-promise": "4.2.1", "eslint-plugin-standard": "4.0.1", "husky": "4.2.5", "jest": "25.3.0", "lint-staged": "10.1.3", "npm-run-all": "4.1.5", "prettier": "2.0.4", "rollup": "2.6.1", "rollup-plugin-terser": "5.3.0", "runmd": "1.3.2", "standard-version": "7.1.0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 7}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 9}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 10}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<!--\n  -- This file is auto-generated from README_js.md. Changes should be made there.\n  -->\n\n# uuid [![Build Status](https://github.com/uuidjs/uuid/workflows/CI/badge.svg)](https://github.com/uuidjs/uuid/actions)\n\nFor the creation of [RFC4122](http://www.ietf.org/rfc/rfc4122.txt) UUIDs\n\n- **Complete** - Support for RFC4122 version 1, 3, 4, and 5 UUIDs\n- **Cross-platform** - Support for ...\n  - CommonJS, [ECMAScript Modules](#ecmascript-modules) and UMD builds\n  - Node 8, 10, 12, 14\n  - Chrome, Safari, Firefox, Edge, IE 11 browsers\n  - Webpack and rollup.js module bundlers\n  - [React Native](#react-native)\n- **Secure** - Cryptographically-strong random values\n- **Small** - Zero-dependency, small footprint, plays nice with \"tree shaking\" packagers\n- **CLI** - Includes the [`uuid` command line](#command-line) utility\n\n**Upgrading from uuid\\@3?** Your code is probably okay, but check out [Upgrading\nFrom uuid\\@3](#upgrading-from-uuid3) for details.\n\n## Quickstart\n\n```shell\nnpm install uuid\n```\n\nOnce installed, decide which type of UUID you need. RFC4122 provides for four\nversions, all of which are supported here. In order of popularity, they are:\n\n- Version 4 (random) - Created from cryptographically-strong random values\n- Version 1 (timestamp) - Created from the system clock (plus random values)\n- Version 5 (namespace, SHA-1) - Created from user-supplied name and namespace strings\n- Version 3 (namespace, MD5) - Like version 5, above, but with a poorer hash algorithm\n\n**Unsure which one to use?** Use version 4 (random) unless you have a specific need for one of the other versions. See also [this FAQ](https://github.com/tc39/proposal-uuid#faq).\n\n### Create Version 4 (Random) UUIDs\n\nECMAScript Module syntax:\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4(); // \u21e8 '9b1deb4d-3b7d-4bad-9bdd-2b0d7b3dcb6d'\n```\n\nCommonJS syntax:\n\n```javascript\nconst { v4: uuidv4 } = require('uuid');\nuuidv4(); // \u21e8 '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed'\n```\n\n### Create Version 1 (Timestamp) UUIDs\n\n```javascript\nimport { v1 as uuidv1 } from 'uuid';\nuuidv1(); // \u21e8 '2c5ea4c0-4067-11e9-8bad-9b1deb4d3b7d'\n```\n\n### Create Version 3 or Version 5 (Namespace) UUIDs\n\n&#x26a0;&#xfe0f; Version 3 and Version 5 UUIDs are basically the same, differing\nonly in the underlying hash algorithm. Note that per the RFC, \"_If backward\ncompatibility is not an issue, SHA-1 [Version 5] is preferred_.\"\n\n&#x26a0;&#xfe0f; If using a custom namespace **be sure to generate your own\nnamespace UUID**. You can grab one [here](https://www.uuidgenerator.net/).\n\n```javascript\nimport { v5 as uuidv5 } from 'uuid'; // For version 5\nimport { v3 as uuidv3 } from 'uuid'; // For version 3\n\n// Using predefined DNS namespace (for domain names)\nuuidv5('hello.example.com', uuidv5.DNS); // \u21e8 'fdda765f-fc57-5604-a269-52a7df8164ec'\nuuidv3('hello.example.com', uuidv3.DNS); // \u21e8 '9125a8dc-52ee-365b-a5aa-81b0b3681cf6'\n\n// Using predefined URL namespace (for URLs)\nuuidv5('http://example.com/hello', uuidv5.URL); // \u21e8 '3bbcee75-cecc-5b56-8031-b6641c1ed1f1'\nuuidv3('http://example.com/hello', uuidv3.URL); // \u21e8 'c6235813-3ba4-3801-ae84-e0a6ebb7d138'\n\n// Using a custom namespace (See note, above, about generating your own\n// namespace UUID)\nconst MY_NAMESPACE = '1b671a64-40d5-491e-99b0-da01ff1f3341';\nuuidv5('Hello, World!', MY_NAMESPACE); // \u21e8 '630eb68f-e0fa-5ecc-887a-7c7a62614681'\nuuidv3('Hello, World!', MY_NAMESPACE); // \u21e8 'e8b5a51d-11c8-3310-a6ab-367563f20686'\n```\n\n## API\n\n### Version 4 (Random)\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\n\n// Incantations\nuuidv4();\nuuidv4(options);\nuuidv4(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 4 UUID.\n\n- `options` - (Object) Optional uuid state to apply. Properties may include:\n  - `random` - (Number[16]) Array of 16 numbers (0-255) to use in place of randomly generated values. Takes precedence over `options.rng`.\n  - `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255). Alternative to `options.random`.\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample: Generate string UUID with predefined `random` values\n\n```javascript\nconst v4options = {\n  random: [\n    0x10,\n    0x91,\n    0x56,\n    0xbe,\n    0xc4,\n    0xfb,\n    0xc1,\n    0xea,\n    0x71,\n    0xb4,\n    0xef,\n    0xe1,\n    0x67,\n    0x1c,\n    0x58,\n    0x36,\n  ],\n};\nuuidv4(v4options); // \u21e8 '109156be-c4fb-41ea-b1b4-efe1671c5836'\n```\n\nExample: Generate two IDs in a single buffer\n\n```javascript\nconst buffer = new Array();\nuuidv4(null, buffer, 0); // \u21e8 \n  // [\n  //    27, 157, 107, 205, 187,\n  //   253,  75,  45, 155,  93,\n  //   171, 141, 251, 189,  75,\n  //   237\n  // ]\nuuidv4(null, buffer, 16); // \u21e8 \n  // [\n  //    27, 157, 107, 205, 187, 253,  75,  45,\n  //   155,  93, 171, 141, 251, 189,  75, 237,\n  //   155,  29, 235,  77,  59, 125,  75, 173,\n  //   155, 221,  43,  13, 123,  61, 203, 109\n  // ]\n```\n\n### Version 1 (Timestamp)\n\n```javascript\nimport { v1 as uuidv1 } from 'uuid';\n\n// Incantations\nuuidv1();\nuuidv1(options);\nuuidv1(options, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 1 (timestamp) UUID.\n\n- `options` - (Object) Optional uuid state to apply. Properties may include:\n  - `node` - (Array) Node id as Array of 6 bytes (per 4.1.6). Default: Randomly generated ID. See note 1.\n  - `clockseq` - (Number between 0 - 0x3fff) RFC clock sequence. Default: An internally maintained clockseq is used.\n  - `msecs` - (Number) Time in milliseconds since unix Epoch. Default: The current time is used.\n  - `nsecs` - (Number between 0-9999) additional time, in 100-nanosecond units. Ignored if `msecs` is unspecified. Default: internal uuid counter is used, as per 4.2.1.2.\n  - `random` - (Number[16]) Array of 16 numbers (0-255) to use for initialization of `node` and `clockseq` as described above. Takes precedence over `options.rng`.\n  - `rng` - (Function) Random # generator function that returns an Array[16] of byte values (0-255). Alternative to `options.random`.\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing.\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nNote: The default [node id](https://tools.ietf.org/html/rfc4122#section-4.1.6) (the last 12 digits in the UUID) is generated once, randomly, on process startup, and then remains unchanged for the duration of the process.\n\nExample: Generate string UUID with fully-specified options\n\n```javascript\nconst v1options = {\n  node: [0x01, 0x23, 0x45, 0x67, 0x89, 0xab],\n  clockseq: 0x1234,\n  msecs: new Date('2011-11-01').getTime(),\n  nsecs: 5678,\n};\nuuidv1(v1options); // \u21e8 '710b962e-041c-11e1-9234-0123456789ab'\n```\n\nExample: In-place generation of two binary IDs\n\n```javascript\n// Generate two ids in an array\nconst arr = new Array();\nuuidv1(null, arr, 0); // \u21e8 \n  // [\n  //    44,  94, 164, 192,  64, 103,\n  //    17, 233, 146,  52, 155,  29,\n  //   235,  77,  59, 125\n  // ]\nuuidv1(null, arr, 16); // \u21e8 \n  // [\n  //    44, 94, 164, 192,  64, 103, 17, 233,\n  //   146, 52, 155,  29, 235,  77, 59, 125,\n  //    44, 94, 164, 193,  64, 103, 17, 233,\n  //   146, 52, 155,  29, 235,  77, 59, 125\n  // ]\n```\n\n### Version 5 (Namespace)\n\n```javascript\nimport { v5 as uuidv5 } from 'uuid';\n\n// Incantations\nuuidv5(name, namespace);\nuuidv5(name, namespace, buffer);\nuuidv5(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 5 UUID.\n\n- `name` - (String | Array[]) \"name\" to create UUID with\n- `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv5('hello world', MY_NAMESPACE); // \u21e8 '9f282611-e0fd-5650-8953-89c8e342da0b'\n```\n\n### Version 3 (Namespace)\n\n&#x26a0;&#xfe0f; Note: Per the RFC, \"_If backward compatibility is not an issue, SHA-1 [Version 5] is preferred_.\"\n\n```javascript\nimport { v3 as uuidv3 } from 'uuid';\n\n// Incantations\nuuidv3(name, namespace);\nuuidv3(name, namespace, buffer);\nuuidv3(name, namespace, buffer, offset);\n```\n\nGenerate and return a RFC4122 version 3 UUID.\n\n- `name` - (String | Array[]) \"name\" to create UUID with\n- `namespace` - (String | Array[]) \"namespace\" UUID either as a String or Array[16] of byte values\n- `buffer` - (Array | Buffer) Array or buffer where UUID bytes are to be written.\n- `offset` - (Number) Starting index in `buffer` at which to begin writing. Default = 0\n\nReturns `buffer`, if specified, otherwise the string form of the UUID\n\nExample:\n\n```javascript\nuuidv3('hello world', MY_NAMESPACE); // \u21e8 '042ffd34-d989-321c-ad06-f60826172424'\n```\n\n## Command Line\n\nUUIDs can be generated from the command line using `uuid`.\n\n```shell\n$ uuid\nddeb27fb-d9a0-4624-be4d-4615062daed4\n```\n\nThe default is to generate version 4 UUIDS, however the other versions are supported. Type `uuid --help` for details:\n\n```\n$ uuid --help\n\nUsage:\n  uuid\n  uuid v1\n  uuid v3 <name> <namespace uuid>\n  uuid v4\n  uuid v5 <name> <namespace uuid>\n  uuid --help\n\nNote: <namespace uuid> may be \"URL\" or \"DNS\" to use the corresponding UUIDs\ndefined by RFC4122\n```\n\n## ECMAScript Modules\n\nThis library comes with [ECMAScript\nModules](https://www.ecma-international.org/ecma-262/6.0/#sec-modules) (ESM) support for Node.js\nversions that support it ([example](./examples/node-esmodules/)) as well as bundlers like\n[rollup.js](https://rollupjs.org/guide/en/#tree-shaking) ([example](./examples/browser-rollup/))\nand [webpack](https://webpack.js.org/guides/tree-shaking/)\n([example](./examples/browser-webpack/)) (targeting both, Node.js and browser environments).\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4(); // \u21e8 '1b9d6bcd-bbfd-4b2d-9b5d-ab8dfbbd4bed'\n```\n\nTo run the examples you must first create a dist build of this library in the module root:\n\n```\nnpm run build\n```\n\n## UMD Builds\n\nIf you want to load a minified UMD build directly in the browser you can use one of the popular npm\nCDNs:\n\n```html\n<script src=\"https://unpkg.com/uuid@latest/dist/umd/uuidv4.min.js\"></script>\n<script>\n  alert(uuidv4());\n</script>\n```\n\nor\n\n```html\n<script src=\"https://cdn.jsdelivr.net/npm/uuid@latest/dist/umd/uuidv4.min.js\"></script>\n<script>\n  alert(uuidv4());\n</script>\n```\n\nAvailable bundles:\n\n- https://unpkg.com/uuid@latest/dist/umd/\n- https://cdn.jsdelivr.net/npm/uuid@latest/dist/umd/\n\n## \"getRandomValues() not supported\"\n\nThis error occurs in environments where the standard\n[`crypto.getRandomValues()`](https://developer.mozilla.org/en-US/docs/Web/API/Crypto/getRandomValues)\nAPI is not supported. This issue can be resolved by adding an appropriate polyfill:\n\n### React Native\n\n1. Install [`react-native-get-random-values`](https://github.com/LinusU/react-native-get-random-values#readme)\n1. Import it before `uuid`:\n\n```javascript\nimport 'react-native-get-random-values';\nimport { v4 as uuidv4 } from 'uuid';\n```\n\n### Web Workers / Service Workers (Edge <= 18)\n\n[In Edge <= 18, Web Crypto is not supported in Web Workers or Service\nWorkers](https://caniuse.com/#feat=cryptography) and we are not aware of a polyfill (let us know if\nyou find one, please).\n\n## Upgrading From uuid\\@7\n\n### Only Named Exports Supported When Using with Node.js ESM\n\nuuid\\@7 did not come with native ECMAScript Module (ESM) support for Node.js. Importing it in\nNode.js ESM consequently imported the CommonJS source with a default export. This library now comes\nwith true Node.js ESM support and only provides named exports.\n\nInstead of doing:\n\n```javascript\nimport uuid from 'uuid';\nuuid.v4();\n```\n\nyou will now have to use the named exports:\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n```\n\n### Deep Requires No Longer Supported\n\nDeep requires like `require('uuid/v4')` [which have been deprecated in\nuuid\\@7](#deep-requires-now-deprecated) are no longer supported.\n\n## Upgrading From uuid\\@3\n\n\"_Wait... what happened to uuid\\@4 - uuid\\@6?!?_\"\n\nIn order to avoid confusion with RFC [version 4](#version-4-random) and [version\n5](#version-5-namespace) UUIDs, and a possible [version\n6](http://gh.peabody.io/uuidv6/), releases 4 thru 6 of this module have been\nskipped. Hence, how we're now at uuid\\@7.\n\n### Deep Requires Now Deprecated\n\nuuid\\@3 encouraged the use of deep requires to minimize the bundle size of\nbrowser builds:\n\n```javascript\nconst uuidv4 = require('uuid/v4'); // <== NOW DEPRECATED!\nuuidv4();\n```\n\nAs of uuid\\@7 this library now provides ECMAScript modules builds, which allow\npackagers like Webpack and Rollup to do \"tree-shaking\" to remove dead code.\nInstead, use the `import` syntax:\n\n```javascript\nimport { v4 as uuidv4 } from 'uuid';\nuuidv4();\n```\n\n... or for CommonJS:\n\n```javascript\nconst { v4: uuidv4 } = require('uuid');\nuuidv4();\n```\n\n### Default Export Removed\n\nuuid\\@3 was exporting the Version 4 UUID method as a default export:\n\n```javascript\nconst uuid = require('uuid'); // <== REMOVED!\n```\n\nThis usage pattern was already discouraged in uuid\\@3 and has been removed in uuid\\@7.\n\n----\nMarkdown generated from [README_js.md](README_js.md) by [![RunMD Logo](http://i.imgur.com/h0FVyzU.png)](https://github.com/broofa/runmd)"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 5609881}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 30167554}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 126668475}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 351353268}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 608625184}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1072283945}], "dependentsCount": 15421, "starsCount": 313}, "github": {"starsCount": 9286, "forksCount": 660, "subscribersCount": 128, "issues": {"count": 451, "openCount": 8, "distribution": {"3600": 53, "10800": 33, "32400": 60, "97200": 80, "291600": 41, "874800": 39, "2624400": 28, "7873200": 37, "23619600": 39, "70858800": 32, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "ctavan", "commitsCount": 189}, {"username": "broofa", "commitsCount": 91}, {"username": "defunctzombie", "commitsCount": 10}, {"username": "solderjs", "commitsCount": 9}, {"username": "awwit", "commitsCount": 3}, {"username": "benjreinhart", "commitsCount": 2}, {"username": "Alex-Sokolov", "commitsCount": 1}, {"username": "G-Rath", "commitsCount": 1}, {"username": "JasonWoof", "commitsCount": 1}, {"username": "Landmaster", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "Nimelrian", "commitsCount": 1}, {"username": "Raynos", "commitsCount": 1}, {"username": "ScottWeinstein", "commitsCount": 1}, {"username": "TSMMark", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "abstein2", "commitsCount": 1}, {"username": "bpo", "commitsCount": 1}, {"username": "bwrrp", "commitsCount": 1}, {"username": "danorton-cubic-austin", "commitsCount": 1}, {"username": "eagleeye", "commitsCount": 1}, {"username": "gokaygurcan", "commitsCount": 1}, {"username": "kenhkan", "commitsCount": 1}, {"username": "kuba-orlik", "commitsCount": 1}, {"username": "liquidg3", "commitsCount": 1}, {"username": "maboiteaspam", "commitsCount": 1}, {"username": "mariotacke", "commitsCount": 1}, {"username": "mauricedb", "commitsCount": 1}, {"username": "mrjbq7", "commitsCount": 1}, {"username": "nateps", "commitsCount": 1}, {"username": "nathanhammond", "commitsCount": 1}, {"username": "oatkiller", "commitsCount": 1}, {"username": "paxl13", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "poldridge", "commitsCount": 1}, {"username": "robwierzbowski", "commitsCount": 1}, {"username": "sava-smith", "commitsCount": 1}, {"username": "seokju-other", "commitsCount": 1}, {"username": "sobrinho", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "victorplentz", "commitsCount": 1}, {"username": "xavi-", "commitsCount": 1}, {"username": "zeke", "commitsCount": 1}, {"username": "zubairov", "commitsCount": 1}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 15}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 51}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 99}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 119}], "statuses": [{"context": "bundlewatch", "state": "success"}]}, "source": {"files": {"readmeSize": 13531, "testsSize": 17536, "hasChangelog": true}, "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 10431, "downloadsCount": 117117756, "downloadsAcceleration": 432001.26411719935, "dependentsCount": 15421}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9285109345881739, "detail": {"quality": 0.8798381438419576, "popularity": 0.8987891688006664, "maintenance": 0.9999522353010099}}}}, {"del": {"analyzedAt": "2020-06-13T20:17:30.423Z", "collected": {"metadata": {"name": "del", "scope": "unscoped", "version": "5.1.0", "description": "Delete files and directories", "keywords": ["delete", "files", "folders", "directories", "remove", "destroy", "trash", "unlink", "clean", "cleaning", "cleanup", "rm", "rmrf", "rimraf", "rmdir", "glob", "gulpfriendly", "file", "folder", "directory", "fs", "filesystem"], "date": "2019-08-23T11:11:17.479Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/del.git"}, "links": {"npm": "https://www.npmjs.com/package/del", "homepage": "https://github.com/sindresorhus/del#readme", "repository": "https://github.com/sindresorhus/del", "bugs": "https://github.com/sindresorhus/del/issues"}, "license": "MIT", "dependencies": {"globby": "^10.0.1", "graceful-fs": "^4.2.2", "is-glob": "^4.0.1", "is-path-cwd": "^2.2.0", "is-path-inside": "^3.0.1", "p-map": "^3.0.0", "rimraf": "^3.0.0", "slash": "^3.0.0"}, "devDependencies": {"ava": "^2.3.0", "benchmark": "^2.1.4", "make-dir": "^3.0.0", "tempy": "^0.3.0", "tsd": "^0.7.4", "xo": "^0.24.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# del [![Build Status](https://travis-ci.org/sindresorhus/del.svg?branch=master)](https://travis-ci.org/sindresorhus/del) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo)\n\n> Delete files and directories using [globs](https://github.com/sindresorhus/globby#globbing-patterns)\n\nSimilar to [rimraf](https://github.com/isaacs/rimraf), but with a Promise API and support for multiple files and globbing. It also protects you against deleting the current working directory and above.\n\n\n## Install\n\n```\n$ npm install del\n```\n\n\n## Usage\n\n```js\nconst del = require('del');\n\n(async () => {\n\tconst deletedPaths = await del(['temp/*.js', '!temp/unicorn.js']);\n\n\tconsole.log('Deleted files and directories:\\n', deletedPaths.join('\\n'));\n})();\n```\n\n\n## Beware\n\nThe glob pattern `**` matches all children and *the parent*.\n\nSo this won't work:\n\n```js\ndel.sync(['public/assets/**', '!public/assets/goat.png']);\n```\n\nYou have to explicitly ignore the parent directories too:\n\n```js\ndel.sync(['public/assets/**', '!public/assets', '!public/assets/goat.png']);\n```\n\nSuggestions on how to improve this welcome!\n\n\n## API\n\nNote that glob patterns can only contain forward-slashes, not backward-slashes. Windows file paths can use backward-slashes as long as the path does not contain any glob-like characters, otherwise use `path.posix.join()` instead of `path.join()`.\n\n### del(patterns, options?)\n\nReturns `Promise<string[]>` with the deleted paths.\n\n### del.sync(patterns, options?)\n\nReturns `string[]` with the deleted paths.\n\n#### patterns\n\nType: `string | string[]`\n\nSee the supported [glob patterns](https://github.com/sindresorhus/globby#globbing-patterns).\n\n- [Pattern examples with expected matches](https://github.com/sindresorhus/multimatch/blob/master/test/test.js)\n- [Quick globbing pattern overview](https://github.com/sindresorhus/multimatch#globbing-patterns)\n\n#### options\n\nType: `object`\n\nYou can specify any of the [`globby` options](https://github.com/sindresorhus/globby#options) in addition to the below options. In contrast to the `globby` defaults, `expandDirectories`, `onlyFiles`, and `followSymbolicLinks` are `false` by default.\n\n##### force\n\nType: `boolean`<br>\nDefault: `false`\n\nAllow deleting the current working directory and outside.\n\n##### dryRun\n\nType: `boolean`<br>\nDefault: `false`\n\nSee what would be deleted.\n\n```js\nconst del = require('del');\n\n(async () => {\n\tconst deletedPaths = await del(['temp/*.js'], {dryRun: true});\n\n\tconsole.log('Files and directories that would be deleted:\\n', deletedPaths.join('\\n'));\n})();\n```\n\n##### concurrency\n\nType: `number`<br>\nDefault: `Infinity`<br>\nMinimum: `1`\n\nConcurrency limit.\n\n\n## CLI\n\nSee [del-cli](https://github.com/sindresorhus/del-cli) for a CLI for this module and [trash-cli](https://github.com/sindresorhus/trash-cli) for a safe version that is suitable for running by hand.\n\n\n## Related\n\n- [make-dir](https://github.com/sindresorhus/make-dir) - Make a directory and its parents if needed\n- [globby](https://github.com/sindresorhus/globby) - User-friendly glob matching\n\n\n---\n\n<div align=\"center\">\n\t<b>\n\t\t<a href=\"https://tidelift.com/subscription/pkg/npm-del?utm_source=npm-del&utm_medium=referral&utm_campaign=readme\">Get professional support for this package with a Tidelift subscription</a>\n\t</b>\n\t<br>\n\t<sub>\n\t\tTidelift helps make open source sustainable for maintainers while giving companies<br>assurances about security, maintenance, and licensing for their dependencies.\n\t</sub>\n</div>"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1791288}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 11469858}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 48780146}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 146353543}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 269571602}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 497025353}], "dependentsCount": 3075, "starsCount": 282}, "github": {"starsCount": 1081, "forksCount": 62, "subscribersCount": 20, "issues": {"count": 124, "openCount": 11, "distribution": {"3600": 37, "10800": 8, "32400": 14, "97200": 17, "291600": 2, "874800": 12, "2624400": 6, "7873200": 7, "23619600": 8, "70858800": 11, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 72}, {"username": "chrisblossom", "commitsCount": 9}, {"username": "schnittstabil", "commitsCount": 3}, {"username": "BendingBender", "commitsCount": 2}, {"username": "DiamondeX", "commitsCount": 1}, {"username": "SamVerschueren", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "deadcoder0904", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "luftywiranda13", "commitsCount": 1}, {"username": "peterkc", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "silvenon", "commitsCount": 1}, {"username": "stbaer", "commitsCount": 1}, {"username": "vladshcherbin", "commitsCount": 1}, {"username": "wbinnssmith", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 20}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "Tidelift", "state": "success"}]}, "source": {"files": {"readmeSize": 3517, "testsSize": 9578}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/del.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/del.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/del/master.svg", "content": "https://img.shields.io/travis/sindresorhus/del/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"p-map": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "globby": {"required": "^10.0.1", "stable": "11.0.1", "latest": "11.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 1461, "downloadsCount": 48784514.333333336, "downloadsAcceleration": 100049.57149923901, "dependentsCount": 3075}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8705937101841197, "detail": {"quality": 0.8942454362629071, "popularity": 0.7210230464855849, "maintenance": 0.9998914658151222}}}}, {"gulp-rename": {"analyzedAt": "2020-06-13T18:57:11.358Z", "collected": {"metadata": {"name": "gulp-rename", "scope": "unscoped", "version": "2.0.0", "description": "Rename files", "keywords": ["gulpplugin"], "date": "2019-12-04T16:50:06.532Z", "author": {"name": "Hector Guillermo Parra Alvarez", "email": "hector@hectorparra.com", "url": "https://github.com/hparra", "username": "hgpa"}, "publisher": {"username": "contra", "email": "yo@contra.io"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "fractal", "email": "contact@wearefractal.com"}, {"username": "hgpa", "email": "hector@hectorparra.com"}, {"username": "hparra", "email": "hector@hectorparra.com"}, {"username": "shinnn", "email": "snnskwtnb@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/hparra/gulp-rename.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-rename", "homepage": "https://github.com/hparra/gulp-rename", "repository": "https://github.com/hparra/gulp-rename", "bugs": "https://github.com/hparra/gulp-rename/issues"}, "license": "MIT", "devDependencies": {"gulp": "^4.0.2", "gulp-sourcemaps": "^2.6.5", "map-stream": "^0.0.7", "mocha": "^6.0.0", "prettier": "^1.19.1", "should": "^13.2.3", "vinyl": "^2.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gulp-rename\n\ngulp-rename is a [gulp](https://github.com/wearefractal/gulp) plugin to rename files easily.\n\n[![NPM](https://nodei.co/npm/gulp-rename.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/gulp-rename/)\n\n[![build status](https://secure.travis-ci.org/hparra/gulp-rename.svg)](http://travis-ci.org/hparra/gulp-rename)\n[![devDependency Status](https://david-dm.org/hparra/gulp-rename/dev-status.svg)](https://david-dm.org/hparra/gulp-rename#info=devDependencies)\n\n## Usage\n\ngulp-rename provides simple file renaming methods.\n\n```javascript\nvar rename = require(\"gulp-rename\");\n\n// rename to a fixed value\ngulp.src(\"./src/main/text/hello.txt\")\n  .pipe(rename(\"main/text/ciao/goodbye.md\"))\n  .pipe(gulp.dest(\"./dist\")); // ./dist/main/text/ciao/goodbye.md\n\n// rename via mutating function\ngulp.src(\"./src/**/hello.txt\")\n  .pipe(rename(function (path) {\n    // Updates the object in-place\n    path.dirname += \"/ciao\";\n    path.basename += \"-goodbye\";\n    path.extname = \".md\";\n  }))\n  .pipe(gulp.dest(\"./dist\")); // ./dist/main/text/ciao/hello-goodbye.md\n\n// rename via a map function\ngulp.src(\"./src/**/hello.txt\")\n  .pipe(rename(function (path) {\n    // Returns a completely new object, make sure you return all keys needed!\n    return {\n      dirname: path.dirname + \"/ciao\",\n      basename: path.basename + \"-goodbye\",\n      extname: \".md\"\n    };\n  }))\n  .pipe(gulp.dest(\"./dist\")); // ./dist/main/text/ciao/hello-goodbye.md\n\n// rename via a fixed object\ngulp.src(\"./src/main/text/hello.txt\", { base: process.cwd() })\n  .pipe(rename({\n    dirname: \"main/text/ciao\",\n    basename: \"aloha\",\n    prefix: \"bonjour-\",\n    suffix: \"-hola\",\n    extname: \".md\"\n  }))\n  .pipe(gulp.dest(\"./dist\")); // ./dist/main/text/ciao/bonjour-aloha-hola.md\n```\n\n**See [test/rename.spec.js](test/rename.spec.js) for more examples and [test/path-parsing.spec.js](test/path-parsing.spec.js) for hairy details.**\n\n## Notes\n\n* `dirname` is the relative path from the base directory set by `gulp.src` to the filename.\n  * `gulp.src()` uses glob-stream which sets the base to the parent of the first directory glob (`*`, `**`, [], or extglob). `dirname` is the remaining directories or `./` if none. glob-stream versions >= 3.1.0 (used by gulp >= 3.2.2) accept a `base` option, which can be used to explicitly set the base.\n  * `gulp.dest()` renames the directories between `process.cwd()` and `dirname` (i.e. the base relative to CWD). Use `dirname` to rename the directories matched by the glob or descendents of the base of option.\n* `basename` is the filename without the extension like `path.basename(filename, path.extname(filename))`.\n* `extname` is the file extension including the `.` like `path.extname(filename)`.\n* when using a function, a second `file` argument is provided with the whole context and original file value.\n* when using a function, if no `Object` is returned then the passed parameter object (along with any modifications) is re-used.\n\n## License\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 113571}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 728950}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3079667}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9272995}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 17783698}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 37134248}], "dependentsCount": 2655, "starsCount": 323}, "github": {"starsCount": 670, "forksCount": 70, "subscribersCount": 14, "issues": {"count": 91, "openCount": 4, "distribution": {"3600": 13, "10800": 5, "32400": 6, "97200": 6, "291600": 9, "874800": 8, "2624400": 4, "7873200": 8, "23619600": 12, "70858800": 14, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "hparra", "commitsCount": 14}, {"username": "contra", "commitsCount": 8}, {"username": "SimenB", "commitsCount": 7}, {"username": "douglasduteil", "commitsCount": 7}, {"username": "TheDancingCode", "commitsCount": 6}, {"username": "KenanY", "commitsCount": 3}, {"username": "adam-lynch", "commitsCount": 3}, {"username": "w0rm", "commitsCount": 3}, {"username": "Josiah", "commitsCount": 2}, {"username": "jrpomeroy", "commitsCount": 2}, {"username": "nfroidure", "commitsCount": 2}, {"username": "kevva", "commitsCount": 1}, {"username": "lleaff", "commitsCount": 1}, {"username": "mgcrea", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "sam97", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "tommcc", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3034, "testsSize": 14739, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/gulp-rename.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/gulp-rename.svg", "content": "https://img.shields.io/npm/v/gulp-rename.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://secure.travis-ci.org/hparra/gulp-rename.svg", "service": "https://api.travis-ci.org/hparra/gulp-rename.svg", "shields": "https://img.shields.io/travis/hparra/gulp-rename.svg", "content": "https://img.shields.io/travis/hparra/gulp-rename.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://david-dm.org/hparra/gulp-rename/dev-status.svg", "service": "https://david-dm.org/hparra/gulp-rename/dev-status.svg", "shields": "https://img.shields.io/david/dev/hparra/gulp-rename.svg", "content": "https://img.shields.io/david/dev/hparra/gulp-rename.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["editorconfig", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1095, "downloadsCount": 3090998.3333333335, "downloadsAcceleration": -505.3606544901086, "dependentsCount": 2655}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8084044560384076, "detail": {"quality": 0.9782069173799172, "popularity": 0.4713724793975417, "maintenance": 0.9998914658151222}}}}, {"@angular/core": {"analyzedAt": "2020-06-11T23:25:15.959Z", "collected": {"metadata": {"name": "@angular/core", "scope": "angular", "version": "9.1.11", "description": "Angular - the core framework", "date": "2020-06-10T18:22:54.299Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/core"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fcore", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"rxjs": "^6.5.3", "tslib": "^1.10.0", "zone.js": "~0.10.3"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 12}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 32}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 53}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 105}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 194}]}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 310142}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1619143}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 6857484}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 20090917}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 36773182}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 69441574}], "dependentsCount": 8373, "starsCount": 46}, "github": {"homepage": "https://angular.io", "starsCount": 62026, "forksCount": 16872, "subscribersCount": 3166, "issues": {"count": 37198, "openCount": 3305, "distribution": {"3600": 3771, "10800": 2600, "32400": 3131, "97200": 4498, "291600": 4493, "874800": 4708, "2624400": 3637, "7873200": 3122, "23619600": 3184, "70858800": 2477, "212576400": 1577}, "isDisabled": false}, "contributors": [{"username": "petebacondarwin", "commitsCount": 1409}, {"username": "gkalpak", "commitsCount": 1254}, {"username": "vsavkin", "commitsCount": 952}, {"username": "IgorMinar", "commitsCount": 930}, {"username": "vicb", "commitsCount": 916}, {"username": "tbosch", "commitsCount": 788}, {"username": "mhevery", "commitsCount": 671}, {"username": "alxhub", "commitsCount": 571}, {"username": "alexeagle", "commitsCount": 561}, {"username": "pkozlowski-opensource", "commitsCount": 542}, {"username": "kara", "commitsCount": 516}, {"username": "matsko", "commitsCount": 479}, {"username": "devversion", "commitsCount": 381}, {"username": "chuckjaz", "commitsCount": 336}, {"username": "marclaval", "commitsCount": 310}, {"username": "gregmagolan", "commitsCount": 290}, {"username": "AndrewKushnir", "commitsCount": 246}, {"username": "kyliau", "commitsCount": 238}, {"username": "josephperrott", "commitsCount": 214}, {"username": "crisbeto", "commitsCount": 207}, {"username": "alan-agius4", "commitsCount": 200}, {"username": "jasonaden", "commitsCount": 191}, {"username": "ocombe", "commitsCount": 191}, {"username": "jbogarthyde", "commitsCount": 180}, {"username": "JoostK", "commitsCount": 165}, {"username": "btford", "commitsCount": 152}, {"username": "brandonroberts", "commitsCount": 151}, {"username": "wardbell", "commitsCount": 149}, {"username": "yjbanov", "commitsCount": 145}, {"username": "filipesilva", "commitsCount": 137}, {"username": "rkirov", "commitsCount": 123}, {"username": "mprobst", "commitsCount": 120}, {"username": "jeffbcross", "commitsCount": 118}, {"username": "kapunahelewong", "commitsCount": 113}, {"username": "benlesh", "commitsCount": 112}, {"username": "sjtrimble", "commitsCount": 112}, {"username": "atscott", "commitsCount": 98}, {"username": "JiaLiPassion", "commitsCount": 88}, {"username": "Foxandxss", "commitsCount": 85}, {"username": "juliemr", "commitsCount": 79}, {"username": "vikerman", "commitsCount": 79}, {"username": "ayazhafiz", "commitsCount": 77}, {"username": "cexbrayat", "commitsCount": 77}, {"username": "robwormald", "commitsCount": 75}, {"username": "PatrickJS", "commitsCount": 73}, {"username": "sonukapoor", "commitsCount": 62}, {"username": "jelbourn", "commitsCount": 58}, {"username": "ajitsinghkaler", "commitsCount": 49}, {"username": "trotyl", "commitsCount": 44}, {"username": "kevmoo", "commitsCount": 43}, {"username": "naomiblack", "commitsCount": 42}, {"username": "jteplitz", "commitsCount": 41}, {"username": "caitp", "commitsCount": 37}, {"username": "StephenFluin", "commitsCount": 35}, {"username": "hansl", "commitsCount": 33}, {"username": "jenniferfell", "commitsCount": 33}, {"username": "chembu", "commitsCount": 32}, {"username": "mgechev", "commitsCount": 31}, {"username": "tinayuangao", "commitsCount": 29}, {"username": "wKoza", "commitsCount": 29}, {"username": "andrewseguin", "commitsCount": 28}, {"username": "alfaproject", "commitsCount": 24}, {"username": "jakemac53", "commitsCount": 24}, {"username": "wagnermaciel", "commitsCount": 24}, {"username": "CaerusKaru", "commitsCount": 23}, {"username": "santoshyadav198613", "commitsCount": 23}, {"username": "ivanwonder", "commitsCount": 22}, {"username": "vojtajina", "commitsCount": 21}, {"username": "Toxicable", "commitsCount": 20}, {"username": "lacolaco", "commitsCount": 20}, {"username": "ttowncompiled", "commitsCount": 20}, {"username": "PascalPrecht", "commitsCount": 17}, {"username": "danielsogl", "commitsCount": 17}, {"username": "kwalrath", "commitsCount": 17}, {"username": "TedSander", "commitsCount": 14}, {"username": "bowenni", "commitsCount": 13}, {"username": "Splaktar", "commitsCount": 12}, {"username": "ahasall", "commitsCount": 12}, {"username": "alfonso-presa", "commitsCount": 12}, {"username": "chalin", "commitsCount": 12}, {"username": "FrederikSchlemmer", "commitsCount": 11}, {"username": "clydin", "commitsCount": 11}, {"username": "goderbauer", "commitsCount": 11}, {"username": "SekibOmazic", "commitsCount": 10}, {"username": "hankduan", "commitsCount": 10}, {"username": "joostme", "commitsCount": 10}, {"username": "manekinekko", "commitsCount": 10}, {"username": "LayZeeDK", "commitsCount": 9}, {"username": "Potapy4", "commitsCount": 9}, {"username": "benbraou", "commitsCount": 9}, {"username": "hterkelsen", "commitsCount": 9}, {"username": "Goodwine", "commitsCount": 8}, {"username": "asnowwolf", "commitsCount": 8}, {"username": "chirayuk", "commitsCount": 8}, {"username": "juleskremer", "commitsCount": 8}, {"username": "laskoviymishka", "commitsCount": 8}, {"username": "martinsik", "commitsCount": 8}, {"username": "sarunint", "commitsCount": 8}, {"username": "arturovt", "commitsCount": 7}, {"username": "dgp1130", "commitsCount": 7}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 15}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 147}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 717}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1552}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3528}], "statuses": [{"context": "ci/circleci: publish_packages_as_artifacts", "state": "pending"}, {"context": "ci/circleci: test_aio_tools", "state": "pending"}, {"context": "ci/circleci: test_aio_local", "state": "pending"}, {"context": "ci/circleci: test_docs_examples", "state": "pending"}, {"context": "ci/circleci: test_aio_local_viewengine", "state": "pending"}, {"context": "ci/circleci: components-repo-unit-tests", "state": "pending"}, {"context": "ci/circleci: test_docs_examples_viewengine", "state": "pending"}, {"context": "ci/circleci: test_ivy_aot_win", "state": "pending"}, {"context": "ci/circleci: build-npm-packages", "state": "success"}, {"context": "ci/angular: size", "state": "success"}, {"context": "ci/circleci: test_ivy_aot", "state": "success"}, {"context": "ci/circleci: build-ivy-npm-packages", "state": "success"}, {"context": "ci/circleci: test_win", "state": "pending"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: test_zonejs", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: test_aio", "state": "pending"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3445803, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.44705882352941173, "health": 1, "branding": 0}, "popularity": {"communityInterest": 82210, "downloadsCount": 6696972.333333333, "downloadsAcceleration": 13094.120053272454, "dependentsCount": 8373}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.09089486358443866}}, "error": {"name": "TimeoutError", "code": "ETIMEDOUT", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/angular/angular/issues?state=all&per_page=100&page=18", "protocol": "https:", "url": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=18", "gotOptions": {"path": "/repos/angular/angular/issues?state=all&per_page=100&page=18", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=18", "pathname": "/repos/angular/angular/issues", "href": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=18", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token 679e7e62e7ba3bce9ac21304a2969b6565321090", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET", "forceRefresh": true}, "event": "request", "message": "Timeout awaiting 'request' for 15000ms", "stack": "TimeoutError: Timeout awaiting 'request' for 15000ms\n    at ClientRequest.request.once.error (/home/analyzer/npms-analyzer/source/node_modules/got/source/request-as-event-emitter.js:176:14)\n    at Object.onceWrapper (events.js:281:20)\n    at ClientRequest.emit (events.js:198:15)\n    at ClientRequest.origin.emit.args (/home/analyzer/npms-analyzer/source/node_modules/@szmarczak/http-timer/source/index.js:37:11)\n    at Immediate.timeoutHandler (/home/analyzer/npms-analyzer/source/node_modules/got/source/utils/timed-out.js:63:11)\n    at Immediate.args.(anonymous function) [as _onImmediate] (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:445:19)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\n    at Promise.resolve.then.then.val (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:51:6)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:47:5)\n    at Promise (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:61:3)\nFrom previous event:\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:2:46)\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:38)\n    at doRequest.then (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:134:16)\nFrom previous event:\n    at ghIssueStats (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:124:6)\n    at fetchIssuesStats (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:125:12)\n    at Object.github (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:199:22)\n    at checkRepositoryOwnership.then (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:95:53)\nFrom previous event:\n    at collect (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:89:6)\n    at download.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:163:13)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:162:10)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\n    at Object.onceWrapper (events.js:281:20)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-15T21:25:47.295Z"}, "score": {"final": 0.7656663091632985, "detail": {"quality": 0.7471296935412162, "popularity": 0.7891136136549503, "maintenance": 0.7581075323477173}}}}, {"colors": {"analyzedAt": "2020-06-13T14:54:53.962Z", "collected": {"metadata": {"name": "colors", "scope": "unscoped", "version": "1.4.0", "description": "get colors in your node.js console", "keywords": ["ansi", "terminal", "colors"], "date": "2019-09-22T23:46:07.522Z", "author": {"name": "Marak Squires"}, "publisher": {"username": "dabh", "email": "dabh@alumni.stanford.edu"}, "maintainers": [{"username": "dabh", "email": "dabh@stanford.edu"}, {"username": "marak", "email": "marak.squires@gmail.com"}], "contributors": [{"name": "DABH", "url": "https://github.com/DABH"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/Marak/colors.js.git"}, "links": {"npm": "https://www.npmjs.com/package/colors", "homepage": "https://github.com/Marak/colors.js", "repository": "https://github.com/Marak/colors.js", "bugs": "https://github.com/Marak/colors.js/issues"}, "license": "MIT", "devDependencies": {"eslint": "^5.2.0", "eslint-config-google": "^0.11.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# colors.js\n[![Build Status](https://travis-ci.org/Marak/colors.js.svg?branch=master)](https://travis-ci.org/Marak/colors.js)\n[![version](https://img.shields.io/npm/v/colors.svg)](https://www.npmjs.org/package/colors)\n[![dependencies](https://david-dm.org/Marak/colors.js.svg)](https://david-dm.org/Marak/colors.js)\n[![devDependencies](https://david-dm.org/Marak/colors.js/dev-status.svg)](https://david-dm.org/Marak/colors.js#info=devDependencies)\n\nPlease check out the [roadmap](ROADMAP.md) for upcoming features and releases.  Please open Issues to provide feedback, and check the `develop` branch for the latest bleeding-edge updates.\n\n## get color and style in your node.js console\n\n![Demo](https://raw.githubusercontent.com/Marak/colors.js/master/screenshots/colors.png)\n\n## Installation\n\n    npm install colors\n\n## colors and styles!\n\n### text colors\n\n  - black\n  - red\n  - green\n  - yellow\n  - blue\n  - magenta\n  - cyan\n  - white\n  - gray\n  - grey\n\n### bright text colors\n\n  - brightRed\n  - brightGreen\n  - brightYellow\n  - brightBlue\n  - brightMagenta\n  - brightCyan\n  - brightWhite\n\n### background colors\n\n  - bgBlack\n  - bgRed\n  - bgGreen\n  - bgYellow\n  - bgBlue\n  - bgMagenta\n  - bgCyan\n  - bgWhite\n  - bgGray\n  - bgGrey\n\n### bright background colors\n\n  - bgBrightRed\n  - bgBrightGreen\n  - bgBrightYellow\n  - bgBrightBlue\n  - bgBrightMagenta\n  - bgBrightCyan\n  - bgBrightWhite\n\n### styles\n\n  - reset\n  - bold\n  - dim\n  - italic\n  - underline\n  - inverse\n  - hidden\n  - strikethrough\n\n### extras\n\n  - rainbow\n  - zebra\n  - america\n  - trap\n  - random\n\n\n## Usage\n\nBy popular demand, `colors` now ships with two types of usages!\n\nThe super nifty way\n\n```js\nvar colors = require('colors');\n\nconsole.log('hello'.green); // outputs green text\nconsole.log('i like cake and pies'.underline.red) // outputs red underlined text\nconsole.log('inverse the color'.inverse); // inverses the color\nconsole.log('OMG Rainbows!'.rainbow); // rainbow\nconsole.log('Run the trap'.trap); // Drops the bass\n\n```\n\nor a slightly less nifty way which doesn't extend `String.prototype`\n\n```js\nvar colors = require('colors/safe');\n\nconsole.log(colors.green('hello')); // outputs green text\nconsole.log(colors.red.underline('i like cake and pies')) // outputs red underlined text\nconsole.log(colors.inverse('inverse the color')); // inverses the color\nconsole.log(colors.rainbow('OMG Rainbows!')); // rainbow\nconsole.log(colors.trap('Run the trap')); // Drops the bass\n\n```\n\nI prefer the first way. Some people seem to be afraid of extending `String.prototype` and prefer the second way. \n\nIf you are writing good code you will never have an issue with the first approach. If you really don't want to touch `String.prototype`, the second usage will not touch `String` native object.\n\n## Enabling/Disabling Colors\n\nThe package will auto-detect whether your terminal can use colors and enable/disable accordingly. When colors are disabled, the color functions do nothing. You can override this with a command-line flag:\n\n```bash\nnode myapp.js --no-color\nnode myapp.js --color=false\n\nnode myapp.js --color\nnode myapp.js --color=true\nnode myapp.js --color=always\n\nFORCE_COLOR=1 node myapp.js\n```\n\nOr in code:\n\n```javascript\nvar colors = require('colors');\ncolors.enable();\ncolors.disable();\n```\n\n## Console.log [string substitution](http://nodejs.org/docs/latest/api/console.html#console_console_log_data)\n\n```js\nvar name = 'Marak';\nconsole.log(colors.green('Hello %s'), name);\n// outputs -> 'Hello Marak'\n```\n\n## Custom themes\n\n### Using standard API\n\n```js\n\nvar colors = require('colors');\n\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(\"this is an error\".error);\n\n// outputs yellow text\nconsole.log(\"this is a warning\".warn);\n```\n\n### Using string safe API\n\n```js\nvar colors = require('colors/safe');\n\n// set single property\nvar error = colors.red;\nerror('this is red');\n\n// set theme\ncolors.setTheme({\n  silly: 'rainbow',\n  input: 'grey',\n  verbose: 'cyan',\n  prompt: 'grey',\n  info: 'green',\n  data: 'grey',\n  help: 'cyan',\n  warn: 'yellow',\n  debug: 'blue',\n  error: 'red'\n});\n\n// outputs red text\nconsole.log(colors.error(\"this is an error\"));\n\n// outputs yellow text\nconsole.log(colors.warn(\"this is a warning\"));\n\n```\n\n### Combining Colors\n\n```javascript\nvar colors = require('colors');\n\ncolors.setTheme({\n  custom: ['red', 'underline']\n});\n\nconsole.log('test'.custom);\n```\n\n*Protip: There is a secret undocumented style in `colors`. If you find the style you can summon him.*"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2466047}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 15397574}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 65997694}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 199303833}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 364079690}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 678789975}], "dependentsCount": 13939, "starsCount": 457}, "github": {"homepage": "https://github.com/Marak/colors.js", "starsCount": 3903, "forksCount": 272, "subscribersCount": 50, "issues": {"count": 273, "openCount": 44, "distribution": {"3600": 35, "10800": 3, "32400": 10, "97200": 13, "291600": 13, "874800": 11, "2624400": 16, "7873200": 23, "23619600": 34, "70858800": 63, "212576400": 52}, "isDisabled": false}, "contributors": [{"username": "Marak", "commitsCount": 69}, {"username": "DABH", "commitsCount": 48}, {"username": "paladox", "commitsCount": 18}, {"username": "mmalecki", "commitsCount": 7}, {"username": "pksunkara", "commitsCount": 5}, {"username": "stevenvachon", "commitsCount": 3}, {"username": "bcaudan", "commitsCount": 2}, {"username": "cjc", "commitsCount": 2}, {"username": "fscherwi", "commitsCount": 2}, {"username": "jennings", "commitsCount": 2}, {"username": "justincampbell", "commitsCount": 2}, {"username": "morganrallen", "commitsCount": 2}, {"username": "osmanmesutozcan", "commitsCount": 2}, {"username": "xiangshouding", "commitsCount": 2}, {"username": "GlitchMasta47", "commitsCount": 1}, {"username": "MeriemKhelifi", "commitsCount": 1}, {"username": "adrielcodeco", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "buschtoens", "commitsCount": 1}, {"username": "danbell", "commitsCount": 1}, {"username": "ded", "commitsCount": 1}, {"username": "edi9999", "commitsCount": 1}, {"username": "gauntface", "commitsCount": 1}, {"username": "givehug", "commitsCount": 1}, {"username": "grit96", "commitsCount": 1}, {"username": "hashar", "commitsCount": 1}, {"username": "jakub-g", "commitsCount": 1}, {"username": "jamescostian", "commitsCount": 1}, {"username": "jpap", "commitsCount": 1}, {"username": "jweinsteincbt", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "konsumer", "commitsCount": 1}, {"username": "mrjacobbloom", "commitsCount": 1}, {"username": "omidnikrah", "commitsCount": 1}, {"username": "panuhorsmalahti", "commitsCount": 1}, {"username": "pedramphp", "commitsCount": 1}, {"username": "smtlaissezfaire", "commitsCount": 1}, {"username": "stelcheck", "commitsCount": 1}, {"username": "yursha", "commitsCount": 1}, {"username": "zofrex", "commitsCount": 1}, {"username": "zucher", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 8}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4646, "testsSize": 5243, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/Marak/colors.js.svg?branch=master", "service": "https://api.travis-ci.org/Marak/colors.js.svg?branch=master", "shields": "https://img.shields.io/travis/Marak/colors.js/master.svg", "content": "https://img.shields.io/travis/Marak/colors.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/colors.svg", "shields": "https://img.shields.io/npm/v/colors.svg", "content": "https://img.shields.io/npm/v/colors.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/Marak/colors.js.svg", "service": "https://david-dm.org/Marak/colors.js.svg", "shields": "https://img.shields.io/david/Marak/colors.js.svg", "content": "https://img.shields.io/david/Marak/colors.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/Marak/colors.js/dev-status.svg", "service": "https://david-dm.org/Marak/colors.js/dev-status.svg", "shields": "https://img.shields.io/david/dev/Marak/colors.js.svg", "content": "https://img.shields.io/david/dev/Marak/colors.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 4723, "downloadsCount": 66434611, "downloadsAcceleration": 125797.73862252664, "dependentsCount": 13939}, "maintenance": {"releasesFrequency": 0.16027397260273973, "commitsFrequency": 0.14455479452054795, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7357701704107693, "detail": {"quality": 0.9693058337670664, "popularity": 0.8379381335214149, "maintenance": 0.43342878156615494}}}}, {"classnames": {"analyzedAt": "2020-06-14T16:13:02.929Z", "collected": {"metadata": {"name": "classnames", "scope": "unscoped", "version": "2.2.6", "description": "A simple utility for conditionally joining classNames together", "keywords": ["react", "css", "classes", "classname", "classnames", "util", "utility"], "date": "2018-06-08T08:09:46.288Z", "author": {"name": "Jed Watson"}, "publisher": {"username": "jedwatson", "email": "jed.watson@me.com"}, "maintainers": [{"username": "jedwatson", "email": "jed.watson@me.com"}], "repository": {"type": "git", "url": "git+https://github.com/JedWatson/classnames.git"}, "links": {"npm": "https://www.npmjs.com/package/classnames", "homepage": "https://github.com/JedWatson/classnames#readme", "repository": "https://github.com/JedWatson/classnames", "bugs": "https://github.com/JedWatson/classnames/issues"}, "license": "MIT", "devDependencies": {"benchmark": "^1.0.0", "browserify": "^14.1.0", "mocha": "^2.1.0", "opn-cli": "^3.1.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "Classnames\n===========\n\n[![Version](http://img.shields.io/npm/v/classnames.svg)](https://www.npmjs.org/package/classnames)\n[![Build Status](https://travis-ci.org/JedWatson/classnames.svg?branch=master)](https://travis-ci.org/JedWatson/classnames)\n[![Supported by Thinkmill](https://thinkmill.github.io/badge/heart.svg)](http://thinkmill.com.au/?utm_source=github&utm_medium=badge&utm_campaign=classnames)\n\nA simple JavaScript utility for conditionally joining classNames together.\n\nInstall with [npm](https://www.npmjs.com/), [Bower](https://bower.io/), or [Yarn](https://yarnpkg.com/):\n\nnpm:\n```sh\nnpm install classnames --save\n```\n\nBower:\n```sh\nbower install classnames --save\n```\n\nYarn (note that `yarn add` automatically saves the package to the `dependencies` in `package.json`):\n```sh\nyarn add classnames\n```\n\nUse with [Node.js](https://nodejs.org/en/), [Browserify](http://browserify.org/), or [webpack](https://webpack.github.io/):\n\n```js\nvar classNames = require('classnames');\nclassNames('foo', 'bar'); // => 'foo bar'\n```\n\nAlternatively, you can simply include `index.js` on your page with a standalone `<script>` tag and it will export a global `classNames` method, or define the module if you are using RequireJS.\n\n### Project philosophy\n\nWe take the stability and performance of this package seriously, because it is run millions of times a day in browsers all around the world. Updates are thoroughly reviewed for performance impacts before being released, and we have a comprehensive test suite.\n\nClassnames follows the [SemVer](http://semver.org/) standard for versioning.\n\nThere is also a [Changelog](https://github.com/JedWatson/classnames/blob/master/HISTORY.md).\n\n## Usage\n\nThe `classNames` function takes any number of arguments which can be a string or object.\nThe argument `'foo'` is short for `{ foo: true }`. If the value associated with a given key is falsy, that key won't be included in the output.\n\n```js\nclassNames('foo', 'bar'); // => 'foo bar'\nclassNames('foo', { bar: true }); // => 'foo bar'\nclassNames({ 'foo-bar': true }); // => 'foo-bar'\nclassNames({ 'foo-bar': false }); // => ''\nclassNames({ foo: true }, { bar: true }); // => 'foo bar'\nclassNames({ foo: true, bar: true }); // => 'foo bar'\n\n// lots of arguments of various types\nclassNames('foo', { bar: true, duck: false }, 'baz', { quux: true }); // => 'foo bar baz quux'\n\n// other falsy values are just ignored\nclassNames(null, false, 'bar', undefined, 0, 1, { baz: null }, ''); // => 'bar 1'\n```\n\nArrays will be recursively flattened as per the rules above:\n\n```js\nvar arr = ['b', { c: true, d: false }];\nclassNames('a', arr); // => 'a b c'\n```\n\n### Dynamic class names with ES2015\n\nIf you're in an environment that supports [computed keys](http://www.ecma-international.org/ecma-262/6.0/#sec-object-initializer) (available in ES2015 and Babel) you can use dynamic class names:\n\n```js\nlet buttonType = 'primary';\nclassNames({ [`btn-${buttonType}`]: true });\n```\n\n### Usage with React.js\n\nThis package is the official replacement for `classSet`, which was originally shipped in the React.js Addons bundle.\n\nOne of its primary use cases is to make dynamic and conditional `className` props simpler to work with (especially more so than conditional string manipulation). So where you may have the following code to generate a `className` prop for a `<button>` in React:\n\n```js\nvar Button = React.createClass({\n  // ...\n  render () {\n    var btnClass = 'btn';\n    if (this.state.isPressed) btnClass += ' btn-pressed';\n    else if (this.state.isHovered) btnClass += ' btn-over';\n    return <button className={btnClass}>{this.props.label}</button>;\n  }\n});\n```\n\nYou can express the conditional classes more simply as an object:\n\n```js\nvar classNames = require('classnames');\n\nvar Button = React.createClass({\n  // ...\n  render () {\n    var btnClass = classNames({\n      btn: true,\n      'btn-pressed': this.state.isPressed,\n      'btn-over': !this.state.isPressed && this.state.isHovered\n    });\n    return <button className={btnClass}>{this.props.label}</button>;\n  }\n});\n```\n\nBecause you can mix together object, array and string arguments, supporting optional `className` props is also simpler as only truthy arguments get included in the result:\n\n```js\nvar btnClass = classNames('btn', this.props.className, {\n  'btn-pressed': this.state.isPressed,\n  'btn-over': !this.state.isPressed && this.state.isHovered\n});\n```\n\n\n### Alternate `dedupe` version\n\nThere is an alternate version of `classNames` available which correctly dedupes classes and ensures that falsy classes specified in later arguments are excluded from the result set.\n\nThis version is slower (about 5x) so it is offered as an opt-in.\n\nTo use the dedupe version with Node.js, Browserify, or webpack:\n\n```js\nvar classNames = require('classnames/dedupe');\n\nclassNames('foo', 'foo', 'bar'); // => 'foo bar'\nclassNames('foo', { foo: false, bar: true }); // => 'bar'\n```\n\nFor standalone (global / AMD) use, include `dedupe.js` in a `<script>` tag on your page.\n\n\n### Alternate `bind` version (for [css-modules](https://github.com/css-modules/css-modules))\n\nIf you are using [css-modules](https://github.com/css-modules/css-modules), or a similar approach to abstract class \"names\" and the real `className` values that are actually output to the DOM, you may want to use the `bind` variant.\n\n_Note that in ES2015 environments, it may be better to use the \"dynamic class names\" approach documented above._\n\n```js\nvar classNames = require('classnames/bind');\n\nvar styles = {\n  foo: 'abc',\n  bar: 'def',\n  baz: 'xyz'\n};\n\nvar cx = classNames.bind(styles);\n\nvar className = cx('foo', ['bar'], { baz: true }); // => \"abc def xyz\"\n```\n\nReal-world example:\n\n```js\n/* components/submit-button.js */\nimport { Component } from 'react';\nimport classNames from 'classnames/bind';\nimport styles from './submit-button.css';\n\nlet cx = classNames.bind(styles);\n\nexport default class SubmitButton extends Component {\n  render () {\n    let text = this.props.store.submissionInProgress ? 'Processing...' : 'Submit';\n    let className = cx({\n      base: true,\n      inProgress: this.props.store.submissionInProgress,\n      error: this.props.store.errorOccurred,\n      disabled: this.props.form.valid,\n    });\n    return <button className={className}>{text}</button>;\n  }\n};\n\n```\n\n\n## Polyfills needed to support older browsers\n\n#### `classNames >=2.0.0`\n\n`Array.isArray`: see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array/isArray) for details about unsupported older browsers (e.g. <= IE8) and a simple polyfill.\n\n`Object.keys`: see [MDN](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object/keys) for details about unsupported older browsers (e.g. <= IE8) and a simple polyfill. This is only used in `dedupe.js`.\n\n## License\n\n[MIT](LICENSE). Copyright (c) 2017 Jed Watson."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 189255}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4938431}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 20713238}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63300052}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 111451158}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 202197362}], "dependentsCount": 15097, "starsCount": 224}, "github": {"starsCount": 12484, "forksCount": 447, "subscribersCount": 127, "issues": {"count": 213, "openCount": 16, "distribution": {"3600": 19, "10800": 10, "32400": 21, "97200": 24, "291600": 18, "874800": 12, "2624400": 18, "7873200": 26, "23619600": 30, "70858800": 33, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "JedWatson", "commitsCount": 89}, {"username": "dcousens", "commitsCount": 31}, {"username": "bartriordan", "commitsCount": 7}, {"username": "resetko", "commitsCount": 6}, {"username": "bgoscinski", "commitsCount": 4}, {"username": "blia", "commitsCount": 4}, {"username": "chenglou", "commitsCount": 4}, {"username": "xobotyi", "commitsCount": 4}, {"username": "bradleyayers", "commitsCount": 3}, {"username": "avindra", "commitsCount": 2}, {"username": "longlho", "commitsCount": 2}, {"username": "nkbt", "commitsCount": 2}, {"username": "stuartsan", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 1}, {"username": "barneycarroll", "commitsCount": 1}, {"username": "brigand", "commitsCount": 1}, {"username": "cht8687", "commitsCount": 1}, {"username": "daviferreira", "commitsCount": 1}, {"username": "diegolacarta", "commitsCount": 1}, {"username": "grushetsky", "commitsCount": 1}, {"username": "hellectronic", "commitsCount": 1}, {"username": "jacamera", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "kirill-konshin", "commitsCount": 1}, {"username": "klimashkin", "commitsCount": 1}, {"username": "monners", "commitsCount": 1}, {"username": "mvasin", "commitsCount": 1}, {"username": "mxstbr", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "victor-homyakov", "commitsCount": 1}, {"username": "wcjordan", "commitsCount": 1}, {"username": "webdeveloperpr", "commitsCount": 1}, {"username": "wwcline", "commitsCount": 1}, {"username": "zackify", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 6886, "testsSize": 8929, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/classnames.svg", "shields": "https://img.shields.io/npm/v/classnames.svg", "content": "https://img.shields.io/npm/v/classnames.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/JedWatson/classnames.svg?branch=master", "service": "https://api.travis-ci.org/JedWatson/classnames.svg?branch=master", "shields": "https://img.shields.io/travis/JedWatson/classnames/master.svg", "content": "https://img.shields.io/travis/JedWatson/classnames/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 13318, "downloadsCount": 21100017.333333332, "downloadsAcceleration": 50420.90399543382, "dependentsCount": 15097}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0.057534246575342465, "openIssues": 1, "issuesDistribution": 0.06961472671254798}}, "score": {"final": 0.6763915532619416, "detail": {"quality": 0.939614767160585, "popularity": 0.827889452459864, "maintenance": 0.2992737564366108}}}}, {"uglify-js": {"analyzedAt": "2020-06-04T03:31:18.688Z", "collected": {"metadata": {"name": "uglify-js", "scope": "unscoped", "version": "3.9.4", "description": "JavaScript parser, mangler/compressor and beautifier toolkit", "keywords": ["cli", "compress", "compressor", "ecma", "ecmascript", "es", "es5", "javascript", "js", "jsmin", "min", "minification", "minifier", "minify", "optimize", "optimizer", "pack", "packer", "parse", "parser", "uglifier", "uglify"], "date": "2020-05-27T10:36:26.192Z", "author": {"name": "Mihai Bazon", "email": "mihai.bazon@gmail.com", "url": "http://lisperator.net/", "username": "mishoo"}, "publisher": {"username": "alexlamsl", "email": "alexlamsl@gmail.com"}, "maintainers": [{"username": "alexlamsl", "email": "alexlamsl@gmail.com"}, {"username": "mishoo", "email": "mihai.bazon@gmail.com"}, {"username": "rvanvelzen1", "email": "rvanvelzen1@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mishoo/UglifyJS.git"}, "links": {"npm": "https://www.npmjs.com/package/uglify-js", "homepage": "https://github.com/mishoo/UglifyJS#readme", "repository": "https://github.com/mishoo/UglifyJS", "bugs": "https://github.com/mishoo/UglifyJS/issues"}, "license": "BSD-2-Clause", "dependencies": {"commander": "~2.20.3"}, "devDependencies": {"acorn": "~7.1.0", "semver": "~6.3.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 14}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 25}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "UglifyJS 3\n==========\n\nUglifyJS is a JavaScript parser, minifier, compressor and beautifier toolkit.\n\n#### Note:\n- **`uglify-js@3` has a simplified [API](#api-reference) and [CLI](#command-line-usage) that is not backwards compatible with [`uglify-js@2`](https://github.com/mishoo/UglifyJS/tree/v2.x)**.\n- **Documentation for UglifyJS `2.x` releases can be found [here](https://github.com/mishoo/UglifyJS/tree/v2.x)**.\n- `uglify-js` only supports JavaScript (ECMAScript 5).\n- To minify ECMAScript 2015 or above, transpile using tools like [Babel](https://babeljs.io/).\n\nInstall\n-------\n\nFirst make sure you have installed the latest version of [node.js](http://nodejs.org/)\n(You may need to restart your computer after this step).\n\nFrom NPM for use as a command line app:\n\n    npm install uglify-js -g\n\nFrom NPM for programmatic use:\n\n    npm install uglify-js\n\n# Command line usage\n\n    uglifyjs [input files] [options]\n\nUglifyJS can take multiple input files.  It's recommended that you pass the\ninput files first, then pass the options.  UglifyJS will parse input files\nin sequence and apply any compression options.  The files are parsed in the\nsame global scope, that is, a reference from a file to some\nvariable/function declared in another file will be matched properly.\n\nIf no input file is specified, UglifyJS will read from STDIN.\n\nIf you wish to pass your options before the input files, separate the two with\na double dash to prevent input files being used as option arguments:\n\n    uglifyjs --compress --mangle -- input.js\n\n### Command line options\n\n```\n    -h, --help                  Print usage information.\n                                `--help options` for details on available options.\n    -V, --version               Print version number.\n    -p, --parse <options>       Specify parser options:\n                                `acorn`  Use Acorn for parsing.\n                                `bare_returns`  Allow return outside of functions.\n                                                Useful when minifying CommonJS\n                                                modules and Userscripts that may\n                                                be anonymous function wrapped (IIFE)\n                                                by the .user.js engine `caller`.\n                                `expression`  Parse a single expression, rather than\n                                              a program (for parsing JSON).\n                                `spidermonkey`  Assume input files are SpiderMonkey\n                                                AST format (as JSON).\n    -c, --compress [options]    Enable compressor/specify compressor options:\n                                `pure_funcs`  List of functions that can be safely\n                                              removed when their return values are\n                                              not used.\n    -m, --mangle [options]      Mangle names/specify mangler options:\n                                `reserved`  List of names that should not be mangled.\n    --mangle-props [options]    Mangle properties/specify mangler options:\n                                `builtins`  Mangle property names that overlaps\n                                            with standard JavaScript globals.\n                                `debug`  Add debug prefix and suffix.\n                                `domprops`  Mangle property names that overlaps\n                                            with DOM properties.\n                                `keep_quoted`  Only mangle unquoted properties.\n                                `regex`  Only mangle matched property names.\n                                `reserved`  List of names that should not be mangled.\n    -b, --beautify [options]    Beautify output/specify output options:\n                                `beautify`  Enabled with `--beautify` by default.\n                                `preamble`  Preamble to prepend to the output. You\n                                            can use this to insert a comment, for\n                                            example for licensing information.\n                                            This will not be parsed, but the source\n                                            map will adjust for its presence.\n                                `quote_style`  Quote style:\n                                               0 - auto\n                                               1 - single\n                                               2 - double\n                                               3 - original\n                                `wrap_iife`  Wrap IIFEs in parenthesis. Note: you may\n                                             want to disable `negate_iife` under\n                                             compressor options.\n    -O, --output-opts [options] Specify output options (`beautify` disabled by default).\n    -o, --output <file>         Output file path (default STDOUT). Specify `ast` or\n                                `spidermonkey` to write UglifyJS or SpiderMonkey AST\n                                as JSON to STDOUT respectively.\n    --comments [filter]         Preserve copyright comments in the output. By\n                                default this works like Google Closure, keeping\n                                JSDoc-style comments that contain \"@license\" or\n                                \"@preserve\". You can optionally pass one of the\n                                following arguments to this flag:\n                                - \"all\" to keep all comments\n                                - a valid JS RegExp like `/foo/` or `/^!/` to\n                                keep only matching comments.\n                                Note that currently not *all* comments can be\n                                kept when compression is on, because of dead\n                                code removal or cascading statements into\n                                sequences.\n    --config-file <file>        Read `minify()` options from JSON file.\n    -d, --define <expr>[=value] Global definitions.\n    -e, --enclose [arg[:value]] Embed everything in a big function, with configurable\n                                argument(s) & value(s).\n    --ie8                       Support non-standard Internet Explorer 8.\n                                Equivalent to setting `ie8: true` in `minify()`\n                                for `compress`, `mangle` and `output` options.\n                                By default UglifyJS will not try to be IE-proof.\n    --keep-fnames               Do not mangle/drop function names.  Useful for\n                                code relying on Function.prototype.name.\n    --name-cache <file>         File to hold mangled name mappings.\n    --self                      Build UglifyJS as a library (implies --wrap UglifyJS)\n    --source-map [options]      Enable source map/specify source map options:\n                                `base`  Path to compute relative paths from input files.\n                                `content`  Input source map, useful if you're compressing\n                                           JS that was generated from some other original\n                                           code. Specify \"inline\" if the source map is\n                                           included within the sources.\n                                `filename`  Filename and/or location of the output source\n                                            (sets `file` attribute in source map).\n                                `includeSources`  Pass this flag if you want to include\n                                                  the content of source files in the\n                                                  source map as sourcesContent property.\n                                `names` Include symbol names in the source map.\n                                `root`  Path to the original source to be included in\n                                        the source map.\n                                `url`  If specified, path to the source map to append in\n                                       `//# sourceMappingURL`.\n    --timings                   Display operations run time on STDERR.\n    --toplevel                  Compress and/or mangle variables in top level scope.\n    --verbose                   Print diagnostic messages.\n    --warn                      Print warning messages.\n    --wrap <name>               Embed everything in a big function, making the\n                                \u201cexports\u201d and \u201cglobal\u201d variables available. You\n                                need to pass an argument to this option to\n                                specify the name that your module will take\n                                when included in, say, a browser.\n```\n\nSpecify `--output` (`-o`) to declare the output file.  Otherwise the output\ngoes to STDOUT.\n\n## CLI source map options\n\nUglifyJS can generate a source map file, which is highly useful for\ndebugging your compressed JavaScript.  To get a source map, pass\n`--source-map --output output.js` (source map will be written out to\n`output.js.map`).\n\nAdditional options:\n\n- `--source-map \"filename='<NAME>'\"` to specify the name of the source map. The value of\n  `filename` is only used to set `file` attribute (see [the spec][sm-spec])\n  in source map file.\n\n- `--source-map \"root='<URL>'\"` to pass the URL where the original files can be found.\n\n- `--source-map \"names=false\"` to omit symbol names if you want to reduce size\n  of the source map file.\n\n- `--source-map \"url='<URL>'\"` to specify the URL where the source map can be found.\n  Otherwise UglifyJS assumes HTTP `X-SourceMap` is being used and will omit the\n  `//# sourceMappingURL=` directive.\n\nFor example:\n\n    uglifyjs js/file1.js js/file2.js \\\n             -o foo.min.js -c -m \\\n             --source-map \"root='http://foo.com/src',url='foo.min.js.map'\"\n\nThe above will compress and mangle `file1.js` and `file2.js`, will drop the\noutput in `foo.min.js` and the source map in `foo.min.js.map`.  The source\nmapping will refer to `http://foo.com/src/js/file1.js` and\n`http://foo.com/src/js/file2.js` (in fact it will list `http://foo.com/src`\nas the source map root, and the original files as `js/file1.js` and\n`js/file2.js`).\n\n### Composed source map\n\nWhen you're compressing JS code that was output by a compiler such as\nCoffeeScript, mapping to the JS code won't be too helpful.  Instead, you'd\nlike to map back to the original code (i.e. CoffeeScript).  UglifyJS has an\noption to take an input source map.  Assuming you have a mapping from\nCoffeeScript \u2192 compiled JS, UglifyJS can generate a map from CoffeeScript \u2192\ncompressed JS by mapping every token in the compiled JS to its original\nlocation.\n\nTo use this feature pass `--source-map \"content='/path/to/input/source.map'\"`\nor `--source-map \"content=inline\"` if the source map is included inline with\nthe sources.\n\n## CLI compress options\n\nYou need to pass `--compress` (`-c`) to enable the compressor.  Optionally\nyou can pass a comma-separated list of [compress options](#compress-options).\n\nOptions are in the form `foo=bar`, or just `foo` (the latter implies\na boolean option that you want to set `true`; it's effectively a\nshortcut for `foo=true`).\n\nExample:\n\n    uglifyjs file.js -c toplevel,sequences=false\n\n## CLI mangle options\n\nTo enable the mangler you need to pass `--mangle` (`-m`).  The following\n(comma-separated) options are supported:\n\n- `toplevel` (default `false`) -- mangle names declared in the top level scope.\n\n- `eval` (default `false`) -- mangle names visible in scopes where `eval` or `with` are used.\n\nWhen mangling is enabled but you want to prevent certain names from being\nmangled, you can declare those names with `--mangle reserved` \u2014 pass a\ncomma-separated list of names.  For example:\n\n    uglifyjs ... -m reserved=['$','require','exports']\n\nto prevent the `require`, `exports` and `$` names from being changed.\n\n### CLI mangling property names (`--mangle-props`)\n\n**Note:** THIS WILL PROBABLY BREAK YOUR CODE.  Mangling property names\nis a separate step, different from variable name mangling.  Pass\n`--mangle-props` to enable it.  It will mangle all properties in the\ninput code with the exception of built in DOM properties and properties\nin core JavaScript classes.  For example:\n\n```javascript\n// example.js\nvar x = {\n    baz_: 0,\n    foo_: 1,\n    calc: function() {\n        return this.foo_ + this.baz_;\n    }\n};\nx.bar_ = 2;\nx[\"baz_\"] = 3;\nconsole.log(x.calc());\n```\nMangle all properties (except for JavaScript `builtins`):\n```bash\n$ uglifyjs example.js -c -m --mangle-props\n```\n```javascript\nvar x={o:0,_:1,l:function(){return this._+this.o}};x.t=2,x.o=3,console.log(x.l());\n```\nMangle all properties except for `reserved` properties:\n```bash\n$ uglifyjs example.js -c -m --mangle-props reserved=[foo_,bar_]\n```\n```javascript\nvar x={o:0,foo_:1,_:function(){return this.foo_+this.o}};x.bar_=2,x.o=3,console.log(x._());\n```\nMangle all properties matching a `regex`:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.l=2,x.o=3,console.log(x.calc());\n```\n\nCombining mangle properties options:\n```bash\n$ uglifyjs example.js -c -m --mangle-props regex=/_$/,reserved=[bar_]\n```\n```javascript\nvar x={o:0,_:1,calc:function(){return this._+this.o}};x.bar_=2,x.o=3,console.log(x.calc());\n```\n\nIn order for this to be of any use, we avoid mangling standard JS names by\ndefault (`--mangle-props builtins` to override).\n\nA default exclusion file is provided in `tools/domprops.json` which should\ncover most standard JS and DOM properties defined in various browsers.  Pass\n`--mangle-props domprops` to disable this feature.\n\nA regular expression can be used to define which property names should be\nmangled.  For example, `--mangle-props regex=/^_/` will only mangle property\nnames that start with an underscore.\n\nWhen you compress multiple files using this option, in order for them to\nwork together in the end we need to ensure somehow that one property gets\nmangled to the same name in all of them.  For this, pass `--name-cache filename.json`\nand UglifyJS will maintain these mappings in a file which can then be reused.\nIt should be initially empty.  Example:\n\n```bash\n$ rm -f /tmp/cache.json  # start fresh\n$ uglifyjs file1.js file2.js --mangle-props --name-cache /tmp/cache.json -o part1.js\n$ uglifyjs file3.js file4.js --mangle-props --name-cache /tmp/cache.json -o part2.js\n```\n\nNow, `part1.js` and `part2.js` will be consistent with each other in terms\nof mangled property names.\n\nUsing the name cache is not necessary if you compress all your files in a\nsingle call to UglifyJS.\n\n### Mangling unquoted names (`--mangle-props keep_quoted`)\n\nUsing quoted property name (`o[\"foo\"]`) reserves the property name (`foo`)\nso that it is not mangled throughout the entire script even when used in an\nunquoted style (`o.foo`). Example:\n\n```javascript\n// stuff.js\nvar o = {\n    \"foo\": 1,\n    bar: 3\n};\no.foo += o.bar;\nconsole.log(o.foo);\n```\n```bash\n$ uglifyjs stuff.js --mangle-props keep_quoted -c -m\n```\n```javascript\nvar o={foo:1,o:3};o.foo+=o.o,console.log(o.foo);\n```\n\n### Debugging property name mangling\n\nYou can also pass `--mangle-props debug` in order to mangle property names\nwithout completely obscuring them. For example the property `o.foo`\nwould mangle to `o._$foo$_` with this option. This allows property mangling\nof a large codebase while still being able to debug the code and identify\nwhere mangling is breaking things.\n\n```bash\n$ uglifyjs stuff.js --mangle-props debug -c -m\n```\n```javascript\nvar o={_$foo$_:1,_$bar$_:3};o._$foo$_+=o._$bar$_,console.log(o._$foo$_);\n```\n\nYou can also pass a custom suffix using `--mangle-props debug=XYZ`. This would then\nmangle `o.foo` to `o._$foo$XYZ_`. You can change this each time you compile a\nscript to identify how a property got mangled. One technique is to pass a\nrandom number on every compile to simulate mangling changing with different\ninputs (e.g. as you update the input script with new properties), and to help\nidentify mistakes like writing mangled keys to storage.\n\n\n# API Reference\n\nAssuming installation via NPM, you can load UglifyJS in your application\nlike this:\n```javascript\nvar UglifyJS = require(\"uglify-js\");\n```\n\nThere is a single high level function, **`minify(code, options)`**,\nwhich will perform all minification [phases](#minify-options) in a configurable\nmanner. By default `minify()` will enable the options [`compress`](#compress-options)\nand [`mangle`](#mangle-options). Example:\n```javascript\nvar code = \"function add(first, second) { return first + second; }\";\nvar result = UglifyJS.minify(code);\nconsole.log(result.error); // runtime error, or `undefined` if no error\nconsole.log(result.code);  // minified output: function add(n,d){return n+d}\n```\n\nYou can `minify` more than one JavaScript file at a time by using an object\nfor the first argument where the keys are file names and the values are source\ncode:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar result = UglifyJS.minify(code);\nconsole.log(result.code);\n// function add(d,n){return d+n}console.log(add(3,7));\n```\n\nThe `toplevel` option:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = { toplevel: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// console.log(3+7);\n```\n\nThe `nameCache` option:\n```javascript\nvar options = {\n    mangle: {\n        toplevel: true,\n    },\n    nameCache: {}\n};\nvar result1 = UglifyJS.minify({\n    \"file1.js\": \"function add(first, second) { return first + second; }\"\n}, options);\nvar result2 = UglifyJS.minify({\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n}, options);\nconsole.log(result1.code);\n// function n(n,r){return n+r}\nconsole.log(result2.code);\n// console.log(n(3,7));\n```\n\nYou may persist the name cache to the file system in the following way:\n```javascript\nvar cacheFileName = \"/tmp/cache.json\";\nvar options = {\n    mangle: {\n        properties: true,\n    },\n    nameCache: JSON.parse(fs.readFileSync(cacheFileName, \"utf8\"))\n};\nfs.writeFileSync(\"part1.js\", UglifyJS.minify({\n    \"file1.js\": fs.readFileSync(\"file1.js\", \"utf8\"),\n    \"file2.js\": fs.readFileSync(\"file2.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(\"part2.js\", UglifyJS.minify({\n    \"file3.js\": fs.readFileSync(\"file3.js\", \"utf8\"),\n    \"file4.js\": fs.readFileSync(\"file4.js\", \"utf8\")\n}, options).code, \"utf8\");\nfs.writeFileSync(cacheFileName, JSON.stringify(options.nameCache), \"utf8\");\n```\n\nAn example of a combination of `minify()` options:\n```javascript\nvar code = {\n    \"file1.js\": \"function add(first, second) { return first + second; }\",\n    \"file2.js\": \"console.log(add(1 + 2, 3 + 4));\"\n};\nvar options = {\n    toplevel: true,\n    compress: {\n        global_defs: {\n            \"@console.log\": \"alert\"\n        },\n        passes: 2\n    },\n    output: {\n        beautify: false,\n        preamble: \"/* uglified */\"\n    }\n};\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.code);\n// /* uglified */\n// alert(10);\"\n```\n\nTo produce warnings:\n```javascript\nvar code = \"function f(){ var u; return 2 + 3; }\";\nvar options = { warnings: true };\nvar result = UglifyJS.minify(code, options);\nconsole.log(result.error);    // runtime error, `undefined` in this case\nconsole.log(result.warnings); // [ 'Dropping unused variable u [0:1,18]' ]\nconsole.log(result.code);     // function f(){return 5}\n```\n\nAn error example:\n```javascript\nvar result = UglifyJS.minify({\"foo.js\" : \"if (0) else console.log(1);\"});\nconsole.log(JSON.stringify(result.error));\n// {\"message\":\"Unexpected token: keyword (else)\",\"filename\":\"foo.js\",\"line\":1,\"col\":7,\"pos\":7}\n```\nNote: unlike `uglify-js@2.x`, the `3.x` API does not throw errors. To\nachieve a similar effect one could do the following:\n```javascript\nvar result = UglifyJS.minify(code, options);\nif (result.error) throw result.error;\n```\n\n## Minify options\n\n- `compress` (default `{}`) \u2014 pass `false` to skip compressing entirely.\n  Pass an object to specify custom [compress options](#compress-options).\n\n- `ie8` (default `false`) -- set to `true` to support IE8.\n\n- `keep_fnames` (default: `false`) -- pass `true` to prevent discarding or mangling\n  of function names.  Useful for code relying on `Function.prototype.name`.\n\n- `mangle` (default `true`) \u2014 pass `false` to skip mangling names, or pass\n  an object to specify [mangle options](#mangle-options) (see below).\n\n  - `mangle.properties` (default `false`) \u2014 a subcategory of the mangle option.\n    Pass an object to specify custom [mangle property options](#mangle-properties-options).\n\n- `nameCache` (default `null`) -- pass an empty object `{}` or a previously\n  used `nameCache` object if you wish to cache mangled variable and\n  property names across multiple invocations of `minify()`. Note: this is\n  a read/write property. `minify()` will read the name cache state of this\n  object and update it during minification so that it may be\n  reused or externally persisted by the user.\n\n- `output` (default `null`) \u2014 pass an object if you wish to specify\n  additional [output options](#output-options).  The defaults are optimized\n  for best compression.\n\n- `parse` (default `{}`) \u2014 pass an object if you wish to specify some\n  additional [parse options](#parse-options).\n\n- `sourceMap` (default `false`) -- pass an object if you wish to specify\n  [source map options](#source-map-options).\n\n- `toplevel` (default `false`) -- set to `true` if you wish to enable top level\n  variable and function name mangling and to drop unused variables and functions.\n\n- `warnings` (default `false`) \u2014 pass `true` to return compressor warnings\n  in `result.warnings`. Use the value `\"verbose\"` for more detailed warnings.\n\n## Minify options structure\n\n```javascript\n{\n    parse: {\n        // parse options\n    },\n    compress: {\n        // compress options\n    },\n    mangle: {\n        // mangle options\n\n        properties: {\n            // mangle property options\n        }\n    },\n    output: {\n        // output options\n    },\n    sourceMap: {\n        // source map options\n    },\n    nameCache: null, // or specify a name cache object\n    toplevel: false,\n    ie8: false,\n    warnings: false,\n}\n```\n\n### Source map options\n\nTo generate a source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        filename: \"out.js\",\n        url: \"out.js.map\"\n    }\n});\nconsole.log(result.code); // minified output\nconsole.log(result.map);  // source map\n```\n\nNote that the source map is not saved in a file, it's just returned in\n`result.map`.  The value passed for `sourceMap.url` is only used to set\n`//# sourceMappingURL=out.js.map` in `result.code`. The value of\n`filename` is only used to set `file` attribute (see [the spec][sm-spec])\nin source map file.\n\nYou can set option `sourceMap.url` to be `\"inline\"` and source map will\nbe appended to code.\n\nYou can also specify sourceRoot property to be included in source map:\n```javascript\nvar result = UglifyJS.minify({\"file1.js\": \"var a = function() {};\"}, {\n    sourceMap: {\n        root: \"http://example.com/src\",\n        url: \"out.js.map\"\n    }\n});\n```\n\nIf you're compressing compiled JavaScript and have a source map for it, you\ncan use `sourceMap.content`:\n```javascript\nvar result = UglifyJS.minify({\"compiled.js\": \"compiled code\"}, {\n    sourceMap: {\n        content: \"content from compiled.js.map\",\n        url: \"minified.js.map\"\n    }\n});\n// same as before, it returns `code` and `map`\n```\n\nIf you're using the `X-SourceMap` header instead, you can just omit `sourceMap.url`.\n\nIf you wish to reduce file size of the source map, set option `sourceMap.names`\nto be `false` and all symbol names will be omitted.\n\n## Parse options\n\n- `bare_returns` (default `false`) -- support top level `return` statements\n\n- `html5_comments` (default `true`)\n\n- `shebang` (default `true`) -- support `#!command` as the first line\n\n## Compress options\n\n- `arguments` (default: `true`) -- replace `arguments[index]` with function\n  parameter name whenever possible.\n\n- `assignments` (default: `true`) -- apply optimizations to assignment expressions.\n\n- `booleans` (default: `true`) -- various optimizations for boolean context,\n  for example `!!a ? b : c \u2192 a ? b : c`\n\n- `collapse_vars` (default: `true`) -- Collapse single-use non-constant variables,\n  side effects permitting.\n\n- `comparisons` (default: `true`) -- apply certain optimizations to binary nodes,\n  e.g. `!(a <= b) \u2192 a > b`, attempts to negate binary nodes, e.g.\n  `a = !b && !c && !d && !e \u2192 a=!(b||c||d||e)` etc.\n\n- `conditionals` (default: `true`) -- apply optimizations for `if`-s and conditional\n  expressions\n\n- `dead_code` (default: `true`) -- remove unreachable code\n\n- `directives` (default: `true`) -- remove redundant or non-standard directives\n\n- `drop_console` (default: `false`) -- Pass `true` to discard calls to\n  `console.*` functions. If you wish to drop a specific function call\n  such as `console.info` and/or retain side effects from function arguments\n  after dropping the function call then use `pure_funcs` instead.\n\n- `drop_debugger` (default: `true`) -- remove `debugger;` statements\n\n- `evaluate` (default: `true`) -- Evaluate expression for shorter constant\n  representation. Pass `\"eager\"` to always replace function calls whenever\n  possible, or a positive integer to specify an upper bound for each individual\n  evaluation in number of characters.\n\n- `expression` (default: `false`) -- Pass `true` to preserve completion values\n  from terminal statements without `return`, e.g. in bookmarklets.\n\n- `functions` (default: `true`) -- convert declarations from `var`to `function`\n  whenever possible.\n\n- `global_defs` (default: `{}`) -- see [conditional compilation](#conditional-compilation)\n\n- `hoist_funs` (default: `false`) -- hoist function declarations\n\n- `hoist_props` (default: `true`) -- hoist properties from constant object and\n  array literals into regular variables subject to a set of constraints. For example:\n  `var o={p:1, q:2}; f(o.p, o.q);` is converted to `f(1, 2);`. Note: `hoist_props`\n  works best with `mangle` enabled, the `compress` option `passes` set to `2` or higher,\n  and the `compress` option `toplevel` enabled.\n\n- `hoist_vars` (default: `false`) -- hoist `var` declarations (this is `false`\n  by default because it seems to increase the size of the output in general)\n\n- `if_return` (default: `true`) -- optimizations for if/return and if/continue\n\n- `inline` (default: `true`) -- inline calls to function with simple/`return` statement:\n  - `false` -- same as `0`\n  - `0` -- disabled inlining\n  - `1` -- inline simple functions\n  - `2` -- inline functions with arguments\n  - `3` -- inline functions with arguments and variables\n  - `true` -- same as `3`\n\n- `join_vars` (default: `true`) -- join consecutive `var` statements\n\n- `keep_fargs` (default: `strict`) -- Discard unused function arguments. Code\n  which relies on `Function.length` will break if this is done indiscriminately,\n  i.e. when passing `true`. Pass `false` to always retain function arguments.\n\n- `keep_fnames` (default: `false`) -- Pass `true` to prevent the\n  compressor from discarding function names.  Useful for code relying on\n  `Function.prototype.name`. See also: the `keep_fnames` [mangle option](#mangle-options).\n\n- `keep_infinity` (default: `false`) -- Pass `true` to prevent `Infinity` from\n  being compressed into `1/0`, which may cause performance issues on Chrome.\n\n- `loops` (default: `true`) -- optimizations for `do`, `while` and `for` loops\n  when we can statically determine the condition.\n\n- `negate_iife` (default: `true`) -- negate \"Immediately-Called Function Expressions\"\n  where the return value is discarded, to avoid the parens that the\n  code generator would insert.\n\n- `objects` (default: `true`) -- compact duplicate keys in object literals.\n\n- `passes` (default: `1`) -- The maximum number of times to run compress.\n  In some cases more than one pass leads to further compressed code.  Keep in\n  mind more passes will take more time.\n\n- `properties` (default: `true`) -- rewrite property access using the dot notation, for\n  example `foo[\"bar\"] \u2192 foo.bar`\n\n- `pure_funcs` (default: `null`) -- You can pass an array of names and\n  UglifyJS will assume that those functions do not produce side\n  effects.  DANGER: will not check if the name is redefined in scope.\n  An example case here, for instance `var q = Math.floor(a/b)`.  If\n  variable `q` is not used elsewhere, UglifyJS will drop it, but will\n  still keep the `Math.floor(a/b)`, not knowing what it does.  You can\n  pass `pure_funcs: [ 'Math.floor' ]` to let it know that this\n  function won't produce any side effect, in which case the whole\n  statement would get discarded.  The current implementation adds some\n  overhead (compression will be slower). Make sure symbols under `pure_funcs`\n  are also under `mangle.reserved` to avoid mangling.\n\n- `pure_getters` (default: `\"strict\"`) -- If you pass `true` for\n  this, UglifyJS will assume that object property access\n  (e.g. `foo.bar` or `foo[\"bar\"]`) doesn't have any side effects.\n  Specify `\"strict\"` to treat `foo.bar` as side-effect-free only when\n  `foo` is certain to not throw, i.e. not `null` or `undefined`.\n\n- `reduce_funcs` (default: `true`) -- Allows single-use functions to be\n  inlined as function expressions when permissible allowing further\n  optimization.  Enabled by default.  Option depends on `reduce_vars`\n  being enabled.  Some code runs faster in the Chrome V8 engine if this\n  option is disabled.  Does not negatively impact other major browsers.\n\n- `reduce_vars` (default: `true`) -- Improve optimization on variables assigned with and\n  used as constant values.\n\n- `sequences` (default: `true`) -- join consecutive simple statements using the\n  comma operator.  May be set to a positive integer to specify the maximum number\n  of consecutive comma sequences that will be generated. If this option is set to\n  `true` then the default `sequences` limit is `200`. Set option to `false` or `0`\n  to disable. The smallest `sequences` length is `2`. A `sequences` value of `1`\n  is grandfathered to be equivalent to `true` and as such means `200`. On rare\n  occasions the default sequences limit leads to very slow compress times in which\n  case a value of `20` or less is recommended.\n\n- `side_effects` (default: `true`) -- Pass `false` to disable potentially dropping\n  functions marked as \"pure\".  A function call is marked as \"pure\" if a comment\n  annotation `/*@__PURE__*/` or `/*#__PURE__*/` immediately precedes the call. For\n  example: `/*@__PURE__*/foo();`\n\n- `strings` (default: `true`) -- compact string concatenations.\n\n- `switches` (default: `true`) -- de-duplicate and remove unreachable `switch` branches\n\n- `toplevel` (default: `false`) -- drop unreferenced functions (`\"funcs\"`) and/or\n  variables (`\"vars\"`) in the top level scope (`false` by default, `true` to drop\n  both unreferenced functions and variables)\n\n- `top_retain` (default: `null`) -- prevent specific toplevel functions and\n  variables from `unused` removal (can be array, comma-separated, RegExp or\n  function. Implies `toplevel`)\n\n- `typeofs` (default: `true`) -- Transforms `typeof foo == \"undefined\"` into\n  `foo === void 0`.  Note: recommend to set this value to `false` for IE10 and\n  earlier versions due to known issues.\n\n- `unsafe` (default: `false`) -- apply \"unsafe\" transformations (discussion below)\n\n- `unsafe_comps` (default: `false`) -- compress expressions like `a <= b` assuming\n  none of the operands can be (coerced to) `NaN`.\n\n- `unsafe_Function` (default: `false`) -- compress and mangle `Function(args, code)`\n  when both `args` and `code` are string literals.\n\n- `unsafe_math` (default: `false`) -- optimize numerical expressions like\n  `2 * x * 3` into `6 * x`, which may give imprecise floating point results.\n\n- `unsafe_proto` (default: `false`) -- optimize expressions like\n  `Array.prototype.slice.call(a)` into `[].slice.call(a)`\n\n- `unsafe_regexp` (default: `false`) -- enable substitutions of variables with\n  `RegExp` values the same way as if they are constants.\n\n- `unsafe_undefined` (default: `false`) -- substitute `void 0` if there is a\n  variable named `undefined` in scope (variable name will be mangled, typically\n  reduced to a single character)\n\n- `unused` (default: `true`) -- drop unreferenced functions and variables (simple\n  direct variable assignments do not count as references unless set to `\"keep_assign\"`)\n\n## Mangle options\n\n- `eval` (default `false`) -- Pass `true` to mangle names visible in scopes\n  where `eval` or `with` are used.\n\n- `keep_fnames` (default `false`) -- Pass `true` to not mangle function names.\n  Useful for code relying on `Function.prototype.name`. See also: the `keep_fnames`\n  [compress option](#compress-options).\n\n- `reserved` (default `[]`) -- Pass an array of identifiers that should be\n  excluded from mangling. Example: `[\"foo\", \"bar\"]`.\n\n- `toplevel` (default `false`) -- Pass `true` to mangle names declared in the\n  top level scope.\n\nExamples:\n\n```javascript\n// test.js\nvar globalVar;\nfunction funcName(firstLongName, anotherLongName) {\n    var myVariable = firstLongName +  anotherLongName;\n}\n```\n```javascript\nvar code = fs.readFileSync(\"test.js\", \"utf8\");\n\nUglifyJS.minify(code).code;\n// 'function funcName(a,n){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { reserved: ['firstLongName'] } }).code;\n// 'function funcName(firstLongName,a){}var globalVar;'\n\nUglifyJS.minify(code, { mangle: { toplevel: true } }).code;\n// 'function n(n,a){}var a;'\n```\n\n### Mangle properties options\n\n- `builtins` (default: `false`) -- Use `true` to allow the mangling of builtin\n  DOM properties. Not recommended to override this setting.\n\n- `debug` (default: `false`) -\u2014 Mangle names with the original name still present.\n  Pass an empty string `\"\"` to enable, or a non-empty string to set the debug suffix.\n\n- `keep_quoted` (default: `false`) -\u2014 Only mangle unquoted property names.\n\n- `regex` (default: `null`) -\u2014 Pass a RegExp literal to only mangle property\n  names matching the regular expression.\n\n- `reserved` (default: `[]`) -- Do not mangle property names listed in the\n  `reserved` array.\n\n## Output options\n\nThe code generator tries to output shortest code possible by default.  In\ncase you want beautified output, pass `--beautify` (`-b`).  Optionally you\ncan pass additional arguments that control the code output:\n\n- `ascii_only` (default `false`) -- escape Unicode characters in strings and\n  regexps (affects directives with non-ascii characters becoming invalid)\n\n- `beautify` (default `true`) -- whether to actually beautify the output.\n  Passing `-b` will set this to true, but you might need to pass `-b` even\n  when you want to generate minified code, in order to specify additional\n  arguments, so you can use `-b beautify=false` to override it.\n\n- `braces` (default `false`) -- always insert braces in `if`, `for`,\n  `do`, `while` or `with` statements, even if their body is a single\n  statement.\n\n- `comments` (default `false`) -- pass `true` or `\"all\"` to preserve all\n  comments, `\"some\"` to preserve multi-line comments that contain `@cc_on`,\n  `@license`, or `@preserve` (case-insensitive), a regular expression string\n  (e.g. `/^!/`), or a function which returns `boolean`, e.g.\n  ```js\n  function(node, comment) {\n      return comment.value.indexOf(\"@type \" + node.TYPE) >= 0;\n  }\n  ```\n\n- `indent_level` (default `4`)\n\n- `indent_start` (default `0`) -- prefix all lines by that many spaces\n\n- `inline_script` (default `true`) -- escape HTML comments and the slash in\n  occurrences of `</script>` in strings\n\n- `keep_quoted_props` (default `false`) -- when turned on, prevents stripping\n  quotes from property names in object literals.\n\n- `max_line_len` (default `false`) -- maximum line length (for uglified code)\n\n- `preamble` (default `null`) -- when passed it must be a string and\n  it will be prepended to the output literally.  The source map will\n  adjust for this text.  Can be used to insert a comment containing\n  licensing information, for example.\n\n- `preserve_line` (default `false`) -- pass `true` to retain line numbering on\n  a best effort basis.\n\n- `quote_keys` (default `false`) -- pass `true` to quote all keys in literal\n  objects\n\n- `quote_style` (default `0`) -- preferred quote style for strings (affects\n  quoted property names and directives as well):\n  - `0` -- prefers double quotes, switches to single quotes when there are\n    more double quotes in the string itself. `0` is best for gzip size.\n  - `1` -- always use single quotes\n  - `2` -- always use double quotes\n  - `3` -- always use the original quotes\n\n- `semicolons` (default `true`) -- separate statements with semicolons.  If\n  you pass `false` then whenever possible we will use a newline instead of a\n  semicolon, leading to more readable output of uglified code (size before\n  gzip could be smaller; size after gzip insignificantly larger).\n\n- `shebang` (default `true`) -- preserve shebang `#!` in preamble (bash scripts)\n\n- `webkit` (default `false`) -- enable workarounds for WebKit bugs.\n  PhantomJS users should set this option to `true`.\n\n- `width` (default `80`) -- only takes effect when beautification is on, this\n  specifies an (orientative) line width that the beautifier will try to\n  obey.  It refers to the width of the line text (excluding indentation).\n  It doesn't work very well currently, but it does make the code generated\n  by UglifyJS more readable.\n\n- `wrap_iife` (default `false`) -- pass `true` to wrap immediately invoked\n  function expressions. See\n  [#640](https://github.com/mishoo/UglifyJS/issues/640) for more details.\n\n# Miscellaneous\n\n### Keeping copyright notices or other comments\n\nYou can pass `--comments` to retain certain comments in the output.  By\ndefault it will keep JSDoc-style comments that contain \"@preserve\",\n\"@license\" or \"@cc_on\" (conditional compilation for IE).  You can pass\n`--comments all` to keep all the comments, or a valid JavaScript regexp to\nkeep only comments that match this regexp.  For example `--comments /^!/`\nwill keep comments like `/*! Copyright Notice */`.\n\nNote, however, that there might be situations where comments are lost.  For\nexample:\n```javascript\nfunction f() {\n    /** @preserve Foo Bar */\n    function g() {\n        // this function is never called\n    }\n    return something();\n}\n```\n\nEven though it has \"@preserve\", the comment will be lost because the inner\nfunction `g` (which is the AST node to which the comment is attached to) is\ndiscarded by the compressor as not referenced.\n\nThe safest comments where to place copyright information (or other info that\nneeds to be kept in the output) are comments attached to toplevel nodes.\n\n### The `unsafe` `compress` option\n\nIt enables some transformations that *might* break code logic in certain\ncontrived cases, but should be fine for most code.  You might want to try it\non your own code, it should reduce the minified size.  Here's what happens\nwhen this flag is on:\n\n- `new Array(1, 2, 3)` or `Array(1, 2, 3)` \u2192 `[ 1, 2, 3 ]`\n- `new Object()` \u2192 `{}`\n- `String(exp)` or `exp.toString()` \u2192 `\"\" + exp`\n- `new Object/RegExp/Function/Error/Array (...)` \u2192 we discard the `new`\n\n### Conditional compilation\n\nYou can use the `--define` (`-d`) switch in order to declare global\nvariables that UglifyJS will assume to be constants (unless defined in\nscope).  For example if you pass `--define DEBUG=false` then, coupled with\ndead code removal UglifyJS will discard the following from the output:\n```javascript\nif (DEBUG) {\n    console.log(\"debug stuff\");\n}\n```\n\nYou can specify nested constants in the form of `--define env.DEBUG=false`.\n\nUglifyJS will warn about the condition being always false and about dropping\nunreachable code; for now there is no option to turn off only this specific\nwarning, you can pass `warnings=false` to turn off *all* warnings.\n\nAnother way of doing that is to declare your globals as constants in a\nseparate file and include it into the build.  For example you can have a\n`build/defines.js` file with the following:\n```javascript\nvar DEBUG = false;\nvar PRODUCTION = true;\n// etc.\n```\n\nand build your code like this:\n\n    uglifyjs build/defines.js js/foo.js js/bar.js... -c\n\nUglifyJS will notice the constants and, since they cannot be altered, it\nwill evaluate references to them to the value itself and drop unreachable\ncode as usual.  The build will contain the `const` declarations if you use\nthem. If you are targeting < ES6 environments which does not support `const`,\nusing `var` with `reduce_vars` (enabled by default) should suffice.\n\n### Conditional compilation API\n\nYou can also use conditional compilation via the programmatic API. With the difference that the\nproperty name is `global_defs` and is a compressor property:\n\n```javascript\nvar result = UglifyJS.minify(fs.readFileSync(\"input.js\", \"utf8\"), {\n    compress: {\n        dead_code: true,\n        global_defs: {\n            DEBUG: false\n        }\n    }\n});\n```\n\nTo replace an identifier with an arbitrary non-constant expression it is\nnecessary to prefix the `global_defs` key with `\"@\"` to instruct UglifyJS\nto parse the value as an expression:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"@alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: 'console.log(\"hello\");'\n```\n\nOtherwise it would be replaced as string literal:\n```javascript\nUglifyJS.minify(\"alert('hello');\", {\n    compress: {\n        global_defs: {\n            \"alert\": \"console.log\"\n        }\n    }\n}).code;\n// returns: '\"console.log\"(\"hello\");'\n```\n\n### Using native Uglify AST with `minify()`\n```javascript\n// example: parse only, produce native Uglify AST\n\nvar result = UglifyJS.minify(code, {\n    parse: {},\n    compress: false,\n    mangle: false,\n    output: {\n        ast: true,\n        code: false  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n```\n```javascript\n// example: accept native Uglify AST input and then compress and mangle\n//          to produce both code and native AST.\n\nvar result = UglifyJS.minify(ast, {\n    compress: {},\n    mangle: {},\n    output: {\n        ast: true,\n        code: true  // optional - faster if false\n    }\n});\n\n// result.ast contains native Uglify AST\n// result.code contains the minified code in string form.\n```\n\n### Working with Uglify AST\n\nTransversal and transformation of the native AST can be performed through\n[`TreeWalker`](https://github.com/mishoo/UglifyJS/blob/master/lib/ast.js) and\n[`TreeTransformer`](https://github.com/mishoo/UglifyJS/blob/master/lib/transform.js)\nrespectively.\n\n### ESTree / SpiderMonkey AST\n\nUglifyJS has its own abstract syntax tree format; for\n[practical reasons](http://lisperator.net/blog/uglifyjs-why-not-switching-to-spidermonkey-ast/)\nwe can't easily change to using the SpiderMonkey AST internally.  However,\nUglifyJS now has a converter which can import a SpiderMonkey AST.\n\nFor example [Acorn][acorn] is a super-fast parser that produces a\nSpiderMonkey AST.  It has a small CLI utility that parses one file and dumps\nthe AST in JSON on the standard output.  To use UglifyJS to mangle and\ncompress that:\n\n    acorn file.js | uglifyjs -p spidermonkey -m -c\n\nThe `-p spidermonkey` option tells UglifyJS that all input files are not\nJavaScript, but JS code described in SpiderMonkey AST in JSON.  Therefore we\ndon't use our own parser in this case, but just transform that AST into our\ninternal AST.\n\n### Use Acorn for parsing\n\nMore for fun, I added the `-p acorn` option which will use Acorn to do all\nthe parsing.  If you pass this option, UglifyJS will `require(\"acorn\")`.\n\nAcorn is really fast (e.g. 250ms instead of 380ms on some 650K code), but\nconverting the SpiderMonkey tree that Acorn produces takes another 150ms so\nin total it's a bit more than just using UglifyJS's own parser.\n\n[acorn]: https://github.com/ternjs/acorn\n[sm-spec]: https://docs.google.com/document/d/1U1RGAehQwRypUTovF1KRlpiOFze0b-_2gc6fAH0KY0k\n\n### Uglify Fast Minify Mode\n\nIt's not well known, but whitespace removal and symbol mangling accounts\nfor 95% of the size reduction in minified code for most JavaScript - not\nelaborate code transforms. One can simply disable `compress` to speed up\nUglify builds by 3 to 4 times. In this fast `mangle`-only mode Uglify has\ncomparable minify speeds and gzip sizes to\n[`butternut`](https://www.npmjs.com/package/butternut):\n\n| d3.js | minify size | gzip size | minify time (seconds) |\n| --- | ---: | ---: | ---: |\n| original | 451,131 | 108,733 | - |\n| uglify-js@3.0.24 mangle=false, compress=false | 316,600 | 85,245 | 0.70 |\n| uglify-js@3.0.24 mangle=true, compress=false | 220,216 | 72,730 | 1.13 |\n| butternut@0.4.6 | 217,568 | 72,738 | 1.41 |\n| uglify-js@3.0.24 mangle=true, compress=true | 212,511 | 71,560 | 3.36 |\n| babili@0.1.4 | 210,713 | 72,140 | 12.64 |\n\nTo enable fast minify mode from the CLI use:\n```\nuglifyjs file.js -m\n```\nTo enable fast minify mode with the API use:\n```js\nUglifyJS.minify(code, { compress: false, mangle: true });\n```\n\n#### Source maps and debugging\n\nVarious `compress` transforms that simplify, rearrange, inline and remove code\nare known to have an adverse effect on debugging with source maps. This is\nexpected as code is optimized and mappings are often simply not possible as\nsome code no longer exists. For highest fidelity in source map debugging\ndisable the Uglify `compress` option and just use `mangle`.\n\n### Compiler assumptions\n\nTo allow for better optimizations, the compiler makes various assumptions:\n\n- `.toString()` and `.valueOf()` don't have side effects, and for built-in\n  objects they have not been overridden.\n- `undefined`, `NaN` and `Infinity` have not been externally redefined.\n- `arguments.callee`, `arguments.caller` and `Function.prototype.caller` are not used.\n- The code doesn't expect the contents of `Function.prototype.toString()` or\n  `Error.prototype.stack` to be anything in particular.\n- Getting and setting properties on a plain object does not cause other side effects\n  (using `.watch()` or `Proxy`).\n- Object properties can be added, removed and modified (not prevented with\n  `Object.defineProperty()`, `Object.defineProperties()`, `Object.freeze()`,\n  `Object.preventExtensions()` or `Object.seal()`)."}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2760479}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 14471033}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 63934957}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 190215839}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 369151452}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 730295957}], "dependentsCount": 3232, "starsCount": 267}, "github": {"homepage": "http://lisperator.net/uglifyjs/", "starsCount": 10774, "forksCount": 1130, "subscribersCount": 284, "issues": {"count": 3940, "openCount": 57, "distribution": {"3600": 748, "10800": 818, "32400": 586, "97200": 452, "291600": 237, "874800": 203, "2624400": 174, "7873200": 152, "23619600": 183, "70858800": 220, "212576400": 167}, "isDisabled": false}, "contributors": [{"username": "alexlamsl", "commitsCount": 1187}, {"username": "mishoo", "commitsCount": 517}, {"username": "kzc", "commitsCount": 114}, {"username": "rvanvelzen", "commitsCount": 52}, {"username": "avdg", "commitsCount": 48}, {"username": "RReverser", "commitsCount": 9}, {"username": "Skalman", "commitsCount": 8}, {"username": "justin-lau", "commitsCount": 6}, {"username": "STRML", "commitsCount": 5}, {"username": "TalAter", "commitsCount": 4}, {"username": "arty-name", "commitsCount": 4}, {"username": "michaelficarra", "commitsCount": 4}, {"username": "Arnavion", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "OndrejSpanel", "commitsCount": 3}, {"username": "fabiosantoscode", "commitsCount": 3}, {"username": "glasser", "commitsCount": 3}, {"username": "jcxplorer", "commitsCount": 3}, {"username": "lautis", "commitsCount": 3}, {"username": "mattrobenolt", "commitsCount": 3}, {"username": "olsonpm", "commitsCount": 3}, {"username": "wnr", "commitsCount": 3}, {"username": "BenoitZugmeyer", "commitsCount": 2}, {"username": "Dazix", "commitsCount": 2}, {"username": "Macil", "commitsCount": 2}, {"username": "XhmikosR", "commitsCount": 2}, {"username": "candid82", "commitsCount": 2}, {"username": "futurist", "commitsCount": 2}, {"username": "nschonni", "commitsCount": 2}, {"username": "papandreou", "commitsCount": 2}, {"username": "pirxpilot", "commitsCount": 2}, {"username": "qfox", "commitsCount": 2}, {"username": "xqdoo00o", "commitsCount": 2}, {"username": "AlbertoGP", "commitsCount": 1}, {"username": "Andarist", "commitsCount": 1}, {"username": "AshleyScirra", "commitsCount": 1}, {"username": "Bobris", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "CMTegner", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "DrewML", "commitsCount": 1}, {"username": "Icidis", "commitsCount": 1}, {"username": "Jiavan", "commitsCount": 1}, {"username": "Jolg42", "commitsCount": 1}, {"username": "Mottie", "commitsCount": 1}, {"username": "OiNutter", "commitsCount": 1}, {"username": "OmgImAlexis", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "ReadmeCritic", "commitsCount": 1}, {"username": "RobLoach", "commitsCount": 1}, {"username": "SampsonCrowley", "commitsCount": 1}, {"username": "SebastienDaniel", "commitsCount": 1}, {"username": "Surgo", "commitsCount": 1}, {"username": "TimothyGu", "commitsCount": 1}, {"username": "Zzzen", "commitsCount": 1}, {"username": "achingbrain", "commitsCount": 1}, {"username": "asia-t", "commitsCount": 1}, {"username": "b-fuze", "commitsCount": 1}, {"username": "bryanerayner", "commitsCount": 1}, {"username": "caldwell", "commitsCount": 1}, {"username": "caridy", "commitsCount": 1}, {"username": "clyfish", "commitsCount": 1}, {"username": "cs09g", "commitsCount": 1}, {"username": "davidbau", "commitsCount": 1}, {"username": "dwickern", "commitsCount": 1}, {"username": "edg2s", "commitsCount": 1}, {"username": "edwardcasbon", "commitsCount": 1}, {"username": "erikdesjardins", "commitsCount": 1}, {"username": "exvisory", "commitsCount": 1}, {"username": "gdw2", "commitsCount": 1}, {"username": "geraintluff", "commitsCount": 1}, {"username": "homuler", "commitsCount": 1}, {"username": "istr", "commitsCount": 1}, {"username": "jacobk", "commitsCount": 1}, {"username": "kara", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "lahmatiy", "commitsCount": 1}, {"username": "larpo", "commitsCount": 1}, {"username": "ljharb", "commitsCount": 1}, {"username": "marcogrcr", "commitsCount": 1}, {"username": "michaelmior", "commitsCount": 1}, {"username": "micschro", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "philippsimon", "commitsCount": 1}, {"username": "plievone", "commitsCount": 1}, {"username": "qyoz", "commitsCount": 1}, {"username": "rogpeppe", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "silverwind", "commitsCount": 1}, {"username": "startswithaj", "commitsCount": 1}, {"username": "tdmalone", "commitsCount": 1}, {"username": "thataustin", "commitsCount": 1}, {"username": "thejh", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "truiken", "commitsCount": 1}, {"username": "vjeux", "commitsCount": 1}, {"username": "wiktor-k", "commitsCount": 1}, {"username": "zaygraveyard", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 133}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 210}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 335}]}, "source": {"files": {"readmeSize": 46690, "testsSize": 1438856}, "outdatedDependencies": {"commander": {"required": "~2.20.3", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.6, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 12554, "downloadsCount": 63405279.666666664, "downloadsAcceleration": 45096.23778538813, "dependentsCount": 3232}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.1925143809506069}}, "score": {"final": 0.8214434094273031, "detail": {"quality": 0.8082861678267477, "popularity": 0.8015240659031391, "maintenance": 0.8526403886090861}}}}, {"less": {"analyzedAt": "2020-06-05T19:08:00.410Z", "collected": {"metadata": {"name": "less", "scope": "unscoped", "version": "3.11.3", "description": "Leaner CSS", "keywords": ["compile less", "css nesting", "css variable", "css", "gradients css", "gradients css3", "less compiler", "less css", "less mixins", "less", "less.js", "lesscss", "mixins", "nested css", "parser", "preprocessor", "bootstrap css", "bootstrap less", "style", "styles", "stylesheet", "variables in css", "css less"], "date": "2020-06-05T18:47:08.418Z", "author": {"name": "Alexis Sellier", "email": "self@cloudhead.net", "username": "cloudhead"}, "publisher": {"username": "matthew-dean", "email": "matthewdean.me@gmail.com"}, "maintainers": [{"username": "calvinjuarez", "email": "calvin.juarez+npm@gmail.com"}, {"username": "cloudhead", "email": "self@cloudhead.net"}, {"username": "lukeapage", "email": "luke.a.page@gmail.com"}, {"username": "matthew-dean", "email": "matthewdean.me@gmail.com"}, {"username": "matthew-dean2", "email": "matthewdean.me@gmail.com"}, {"username": "meri", "email": "sommeridevel@gmail.com"}, {"username": "seven-phases-max", "email": "seven.phases.max@gmail.com"}], "contributors": [{"name": "The Core Less Team"}], "repository": {"type": "git", "url": "git+https://github.com/less/less.js.git"}, "links": {"npm": "https://www.npmjs.com/package/less", "homepage": "http://lesscss.org", "repository": "https://github.com/less/less.js", "bugs": "https://github.com/less/less.js/issues"}, "license": "Apache-2.0", "dependencies": {"clone": "^2.1.2", "tslib": "^1.10.0", "errno": "^0.1.1", "graceful-fs": "^4.1.2", "image-size": "~0.5.0", "make-dir": "^2.1.0", "mime": "^1.4.1", "promise": "^7.1.1", "request": "^2.83.0", "source-map": "~0.6.0"}, "devDependencies": {"@typescript-eslint/eslint-plugin": "^2.3.3", "@typescript-eslint/parser": "^2.3.3", "benny": "^3.6.12", "bootstrap-less-port": "0.3.0", "chai": "^4.2.0", "diff": "^3.2.0", "fs-extra": "^8.1.0", "git-rev": "^0.2.1", "github-changes": "^1.1.2", "globby": "^10.0.1", "grunt": "^1.0.4", "grunt-cli": "^1.3.2", "grunt-contrib-clean": "^1.0.0", "grunt-contrib-connect": "^1.0.2", "grunt-eslint": "^21.1.0", "grunt-saucelabs": "^9.0.1", "grunt-shell": "^1.3.0", "html-template-tag": "^3.2.0", "import-module": "file:test/import-module", "jit-grunt": "^0.10.0", "less-plugin-autoprefix": "^1.5.1", "less-plugin-clean-css": "^1.5.1", "minimist": "^1.2.0", "mocha": "^6.2.1", "mocha-headless-chrome": "^2.0.3", "mocha-teamcity-reporter": "^3.0.0", "performance-now": "^0.2.0", "phin": "^2.2.3", "promise": "^7.1.1", "read-glob": "^3.0.0", "rollup": "^1.17.0", "rollup-plugin-commonjs": "^10.0.1", "rollup-plugin-node-resolve": "^5.2.0", "rollup-plugin-terser": "^5.1.1", "rollup-plugin-typescript2": "^0.24.3", "semver": "^6.3.0", "time-grunt": "^1.3.0", "ts-node": "^8.4.1", "typescript": "^3.6.3", "uikit": "2.27.4"}, "optionalDependencies": {"errno": "^0.1.1", "graceful-fs": "^4.1.2", "image-size": "~0.5.0", "make-dir": "^2.1.0", "mime": "^1.4.1", "promise": "^7.1.1", "request": "^2.83.0", "source-map": "~0.6.0"}, "releases": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 3}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 9}, {"from": "2018-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 26}], "hasTestScript": true, "readme": "<p align=\"center\"><img src=\"http://lesscss.org/public/img/less_logo.png\" width=\"264\" height=\"117\">\n\n<p align=\"center\"><a href=\"http://badge.fury.io/js/less\"><a href=\"https://opencollective.com/less\" alt=\"Financial Contributors on Open Collective\"><img src=\"https://opencollective.com/less/all/badge.svg?label=financial+contributors\" /></a> <img src=\"https://badge.fury.io/js/less.svg\"></a> <a href=\"https://travis-ci.org/less/less.js\"><img src=\"https://travis-ci.org/less/less.js.svg?branch=master\" style=\"max-width:100%;\"></a> <a href=\"https://ci.appveyor.com/project/lukeapage/less-js/branch/master\"><img src=\"https://ci.appveyor.com/api/projects/status/bx2qspy3qbuxpl9q/branch/master?svg=true\" style=\"max-width:100%;\"></a> <a href=\"https://david-dm.org/less/less.js\"><img src=\"https://david-dm.org/less/less.js.svg\" style=\"max-width:100%;\"></a> <a href=\"https://david-dm.org/less/less.js#info=devDependencies\"><img src=\"https://david-dm.org/less/less.js/dev-status.svg\" style=\"max-width:100%;\"></a> <a href=\"https://twitter.com/lesstocss\"><img alt=\"Twitter Follow\" src=\"https://img.shields.io/twitter/follow/lesstocss.svg?style=flat-square\" style=\"max-width:100%;\"></a></p>\n\n<p align=\"center\"><a href=\"https://gitter.im/less/less.js?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" style=\"max-width:100%;\"></a> <br><sup class=\"rich-diff-level-one\">Chat with Less.js users and contributors</sup></p>\n\n# [Less.js](http://lesscss.org)\n\n> The **dynamic** stylesheet language. [http://lesscss.org](http://lesscss.org).\n\nThis is the JavaScript, official, stable version of Less.\n\n\n## Getting Started\n\nOptions for adding Less.js to your project:\n\n* Install with [npm](https://npmjs.org): `npm install less`\n* [Download the latest release][download]\n* Clone the repo: `git clone https://github.com/less/less.js.git`\n\n## More information\n\nFor general information on the language, configuration options or usage visit [lesscss.org](http://lesscss.org).\n\nHere are other resources for using Less.js:\n\n* [stackoverflow.com][so] is a great place to get answers about Less.\n* [Less.js Issues][issues] for reporting bugs\n\n\n## Contributing\nPlease read [CONTRIBUTING.md](CONTRIBUTING.md). Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com).\n\n### Reporting Issues\n\nBefore opening any issue, please search for existing issues and read the [Issue Guidelines](https://github.com/necolas/issue-guidelines), written by [Nicolas Gallagher](https://github.com/necolas). After that if you find a bug or would like to make feature request, [please open a new issue][issues].\n\nPlease report documentation issues in [the documentation project](https://github.com/less/less-docs).\n\n### Development\n\nRead [Developing Less](http://lesscss.org/usage/#developing-less).\n\n## Release History\nSee the [changelog](CHANGELOG.md)\n\n## Contributors\n\n### Code Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/less/less.js/graphs/contributors\"><img src=\"https://opencollective.com/less/contributors.svg?width=890&button=false\" /></a>\n\n### Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/less/contribute)]\n\n#### Individuals\n\n<a href=\"https://opencollective.com/less\"><img src=\"https://opencollective.com/less/individuals.svg?width=890\"></a>\n\n#### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/less/contribute)]\n\n<a href=\"https://opencollective.com/less/organization/0/website\"><img src=\"https://opencollective.com/less/organization/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/1/website\"><img src=\"https://opencollective.com/less/organization/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/2/website\"><img src=\"https://opencollective.com/less/organization/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/3/website\"><img src=\"https://opencollective.com/less/organization/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/4/website\"><img src=\"https://opencollective.com/less/organization/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/5/website\"><img src=\"https://opencollective.com/less/organization/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/6/website\"><img src=\"https://opencollective.com/less/organization/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/7/website\"><img src=\"https://opencollective.com/less/organization/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/8/website\"><img src=\"https://opencollective.com/less/organization/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/less/organization/9/website\"><img src=\"https://opencollective.com/less/organization/9/avatar.svg\"></a>\n\n## [License](LICENSE)\n\nCopyright (c) 2009-2017 [Alexis Sellier](http://cloudhead.io) & The Core Less Team\nLicensed under the [Apache License](LICENSE).\n\n\n[so]: http://stackoverflow.com/questions/tagged/less \"StackOverflow.com\"\n[issues]: https://github.com/less/less.js/issues \"GitHub Issues for Less.js\"\n[download]: https://github.com/less/less.js/zipball/master \"Download Less.js\""}, "npm": {"downloads": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 501366}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 2561339}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 11073103}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 32287297}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 58684095}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 110177074}], "dependentsCount": 4974, "starsCount": 327}, "github": {"homepage": "http://lesscss.org", "starsCount": 16322, "forksCount": 3455, "subscribersCount": 698, "issues": {"count": 3510, "openCount": 157, "distribution": {"3600": 337, "10800": 197, "32400": 253, "97200": 299, "291600": 258, "874800": 285, "2624400": 322, "7873200": 332, "23619600": 510, "70858800": 468, "212576400": 249}, "isDisabled": false}, "contributors": [{"username": "lukeapage", "commitsCount": 836}, {"username": "cloudhead", "commitsCount": 139}, {"username": "matthew-dean", "commitsCount": 134}, {"username": "seven-phases-max", "commitsCount": 86}, {"username": "bassjobsen", "commitsCount": 22}, {"username": "jonschlinkert", "commitsCount": 17}, {"username": "evocateur", "commitsCount": 16}, {"username": "rjgotten", "commitsCount": 16}, {"username": "obecker", "commitsCount": 14}, {"username": "simonedeponti", "commitsCount": 11}, {"username": "Synchro", "commitsCount": 10}, {"username": "dmcass", "commitsCount": 10}, {"username": "deviprsd", "commitsCount": 9}, {"username": "dhaber", "commitsCount": 8}, {"username": "calvinjuarez", "commitsCount": 7}, {"username": "fat", "commitsCount": 7}, {"username": "greenkeeperio-bot", "commitsCount": 7}, {"username": "jamesfoster", "commitsCount": 7}, {"username": "oyejorge", "commitsCount": 7}, {"username": "spocke", "commitsCount": 7}, {"username": "Justineo", "commitsCount": 5}, {"username": "hokaccha", "commitsCount": 5}, {"username": "joscha", "commitsCount": 5}, {"username": "lejenome", "commitsCount": 5}, {"username": "levithomason", "commitsCount": 5}, {"username": "revolunet", "commitsCount": 5}, {"username": "roelvanduijnhoven", "commitsCount": 5}, {"username": "ttfkam", "commitsCount": 5}, {"username": "ForbesLindesay", "commitsCount": 4}, {"username": "am11", "commitsCount": 4}, {"username": "erwan", "commitsCount": 4}, {"username": "feelepxyz", "commitsCount": 4}, {"username": "jacobwarduk", "commitsCount": 4}, {"username": "DotNetSparky", "commitsCount": 3}, {"username": "Glench", "commitsCount": 3}, {"username": "SalimBensiali", "commitsCount": 3}, {"username": "SeMeKh", "commitsCount": 3}, {"username": "XhmikosR", "commitsCount": 3}, {"username": "abrobston", "commitsCount": 3}, {"username": "akkumar", "commitsCount": 3}, {"username": "andrewjstone", "commitsCount": 3}, {"username": "barnabycolby", "commitsCount": 3}, {"username": "bcluca", "commitsCount": 3}, {"username": "extemporalgenome", "commitsCount": 3}, {"username": "felixge", "commitsCount": 3}, {"username": "jakebellacera", "commitsCount": 3}, {"username": "jneen", "commitsCount": 3}, {"username": "mbertram", "commitsCount": 3}, {"username": "mtscout6", "commitsCount": 3}, {"username": "peruginni", "commitsCount": 3}, {"username": "wahuneke", "commitsCount": 3}, {"username": "MSamman", "commitsCount": 2}, {"username": "Pindar", "commitsCount": 2}, {"username": "SomMeri", "commitsCount": 2}, {"username": "Taritsyn", "commitsCount": 2}, {"username": "andjo", "commitsCount": 2}, {"username": "anthony-redFox", "commitsCount": 2}, {"username": "bdsomer", "commitsCount": 2}, {"username": "bennyschudel", "commitsCount": 2}, {"username": "brenmar", "commitsCount": 2}, {"username": "chipx86", "commitsCount": 2}, {"username": "chromice", "commitsCount": 2}, {"username": "danielkatz", "commitsCount": 2}, {"username": "dbergey", "commitsCount": 2}, {"username": "ddprrt", "commitsCount": 2}, {"username": "dexif", "commitsCount": 2}, {"username": "fgnass", "commitsCount": 2}, {"username": "guybedford", "commitsCount": 2}, {"username": "imcotton", "commitsCount": 2}, {"username": "jackwanders", "commitsCount": 2}, {"username": "joshuaspence", "commitsCount": 2}, {"username": "jreading", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "kirillrogovoy", "commitsCount": 2}, {"username": "kmchugh", "commitsCount": 2}, {"username": "losnir", "commitsCount": 2}, {"username": "maxbrunsfeld", "commitsCount": 2}, {"username": "mishal", "commitsCount": 2}, {"username": "neonstalwart", "commitsCount": 2}, {"username": "onecrayon", "commitsCount": 2}, {"username": "owiber", "commitsCount": 2}, {"username": "paladox", "commitsCount": 2}, {"username": "pdehaan", "commitsCount": 2}, {"username": "rgroothuijsen", "commitsCount": 2}, {"username": "ryysud", "commitsCount": 2}, {"username": "vsn4ik", "commitsCount": 2}, {"username": "willscott", "commitsCount": 2}, {"username": "5UtJAjiRWj1q", "commitsCount": 1}, {"username": "balpha", "commitsCount": 1}, {"username": "batchunag", "commitsCount": 1}, {"username": "cthrax", "commitsCount": 1}, {"username": "eps1lon", "commitsCount": 1}, {"username": "g3rv4", "commitsCount": 1}, {"username": "gabrielschulhof", "commitsCount": 1}, {"username": "gaiazov", "commitsCount": 1}, {"username": "legu2009", "commitsCount": 1}, {"username": "life777", "commitsCount": 1}, {"username": "lmartorella", "commitsCount": 1}, {"username": "monkeywithacupcake", "commitsCount": 1}, {"username": "thorn0", "commitsCount": 1}], "commits": [{"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 5}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 5}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 9}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 15}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 28}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 5474, "testsSize": 834920, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/less/less.js.svg?branch=master", "service": "https://api.travis-ci.org/less/less.js.svg?branch=master", "shields": "https://img.shields.io/travis/less/less.js/master.svg", "content": "https://img.shields.io/travis/less/less.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/bx2qspy3qbuxpl9q/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/bx2qspy3qbuxpl9q/branch/master", "shields": "https://img.shields.io/appveyor/ci/bx2qspy3qbuxpl9q/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/bx2qspy3qbuxpl9q/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://david-dm.org/less/less.js.svg", "service": "https://david-dm.org/less/less.js.svg", "shields": "https://img.shields.io/david/less/less.js.svg", "content": "https://img.shields.io/david/less/less.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/less/less.js/dev-status.svg", "service": "https://david-dm.org/less/less.js/dev-status.svg", "shields": "https://img.shields.io/david/dev/less/less.js.svg", "content": "https://img.shields.io/david/dev/less/less.js.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"tslib": {"required": "^1.10.0", "stable": "2.0.0", "latest": "2.0.0"}, "make-dir": {"required": "^2.1.0", "stable": "3.1.0", "latest": "3.1.0"}, "promise": {"required": "^7.1.1", "stable": "8.1.0", "latest": "8.1.0"}, "mime": {"required": "^1.4.1", "stable": "2.4.6", "latest": "2.4.6"}, "image-size": {"required": "~0.5.0", "stable": "0.8.3", "latest": "0.8.3"}, "source-map": {"required": "~0.6.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.725, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 20902, "downloadsCount": 10762432.333333334, "downloadsAcceleration": 22854.047203196358, "dependentsCount": 4974}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.816763698630137, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.769986844855558, "detail": {"quality": 0.9018461327768684, "popularity": 0.7603758284051818, "maintenance": 0.6665756145162398}}}}, {"webpack-merge": {"analyzedAt": "2020-06-06T13:16:09.090Z", "collected": {"metadata": {"name": "webpack-merge", "scope": "unscoped", "version": "4.2.2", "description": "Variant of merge that's useful for webpack configuration", "keywords": ["webpack", "merge"], "date": "2019-08-27T15:59:03.872Z", "author": {"name": "Juho Vepsalainen", "email": "bebraw@gmail.com", "username": "bebraw"}, "publisher": {"username": "bebraw", "email": "bebraw@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/survivejs/webpack-merge.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-merge", "homepage": "https://github.com/survivejs/webpack-merge", "repository": "https://github.com/survivejs/webpack-merge", "bugs": "https://github.com/survivejs/webpack-merge/issues"}, "license": "MIT", "dependencies": {"lodash": "^4.17.15"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-plugin-lodash": "^3.3.2", "babel-preset-es2015": "^6.24.1", "copy-webpack-plugin": "^4.4.1", "eslint": "^3.19.0", "eslint-config-airbnb": "^14.1.0", "eslint-plugin-import": "^2.9.0", "eslint-plugin-jsx-a11y": "^3.0.2", "eslint-plugin-react": "^6.10.3", "git-prepush-hook": "^1.0.2", "istanbul": "^0.4.5", "mocha": "^3.5.3", "npm-watch": "^0.1.9", "webpack": "^1.15.0"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 2}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![build status](https://secure.travis-ci.org/survivejs/webpack-merge.svg)](http://travis-ci.org/survivejs/webpack-merge) [![codecov](https://codecov.io/gh/survivejs/webpack-merge/branch/master/graph/badge.svg)](https://codecov.io/gh/survivejs/webpack-merge)\n\n# webpack-merge - Merge designed for Webpack\n\n**webpack-merge** provides a `merge` function that concatenates arrays and merges objects creating a new object. If functions are encountered, it will execute them, run the results through the algorithm, and then wrap the returned values within a function again.\n\nThis behavior is particularly useful in configuring webpack although it has uses beyond it. Whenever you need to merge configuration objects, **webpack-merge** can come in handy.\n\nThere's also a webpack specific merge variant known as `merge.smart` that's able to take webpack specifics into account (i.e., it can flatten loader definitions).\n\n## Standard Merging\n\n### **`merge(...configuration |\u00a0[...configuration])`**\n\n`merge` is the core, and the most important idea, of the API. Often this is all you need unless you want further customization.\n\n```javascript\n// Default API\nvar output = merge(object1, object2, object3, ...);\n\n// You can pass an array of objects directly.\n// This works with all available functions.\nvar output = merge([object1, object2, object3]);\n\n// Please note that where keys match,\n// the objects to the right take precedence:\nvar output = merge(\n  { fruit: \"apple\", color: \"red\" },\n  { fruit: \"strawberries\" }\n);\nconsole.log(output);\n// { color: \"red\", fruit: \"strawberries\"}\n```\n\n### **`merge({ customizeArray, customizeObject })(...configuration |\u00a0[...configuration])`**\n\n`merge` behavior can be customized per field through a curried customization API.\n\n```javascript\n// Customizing array/object behavior\nvar output = merge(\n  {\n    customizeArray(a, b, key) {\n      if (key === 'extensions') {\n        return _.uniq([...a, ...b]);\n      }\n\n      // Fall back to default merging\n      return undefined;\n    },\n    customizeObject(a, b, key) {\n      if (key === 'module') {\n        // Custom merging\n        return _.merge({}, a, b);\n      }\n\n      // Fall back to default merging\n      return undefined;\n    }\n  }\n)(object1, object2, object3, ...);\n```\nFor example, if the previous code was invoked with only `object1` and `object2`\nwith `object1` as:\n```\n{\n    foo1: ['object1'],\n    foo2: ['object1'],\n    bar1: { object1: {} },\n    bar2: { object1: {} },\n}\n```\nand `object2` as:\n```\n{\n    foo1: ['object2'],\n    foo2: ['object2'],\n    bar1: { object2: {} },\n    bar2: { object2: {} },\n}\n```\nthen `customizeArray` will be invoked for each property of `Array` type, i.e:\n```\ncustomizeArray(['object1'], ['object2'], 'foo1');\ncustomizeArray(['object1'], ['object2'], 'foo2');\n```\nand `customizeObject` will be invoked for each property of `Object` type, i.e:\n```\ncustomizeObject({ object1: {} }, { object2: {} }, bar1);\ncustomizeObject({ object1: {} }, { object2: {} }, bar2);\n```\n\n### **`merge.unique(<field>, <fields>, field => field)`**\n\nThe first <field> is the config property to look through for duplicates.\n\n<fields> represents the values that should be unique when you run the field => field function on each duplicate.\n\n```javascript\nconst output = merge({\n  customizeArray: merge.unique(\n    'plugins',\n    ['HotModuleReplacementPlugin'],\n    plugin => plugin.constructor && plugin.constructor.name\n  )\n})({\n  plugins: [\n    new webpack.HotModuleReplacementPlugin()\n  ]\n}, {\n  plugins: [\n    new webpack.HotModuleReplacementPlugin()\n  ]\n});\n\n// Output contains only single HotModuleReplacementPlugin now.\n```\n\n## Merging with Strategies\n\n### **`merge.strategy({ <field>: '<prepend|append|replace>''})(...configuration |\u00a0[...configuration])`**\n\nGiven you may want to configure merging behavior per field, there's a strategy variant:\n\n```javascript\n// Merging with a specific merge strategy\nvar output = merge.strategy(\n  {\n    entry: 'prepend', // or 'replace', defaults to 'append'\n    'module.rules': 'prepend'\n  }\n)(object1, object2, object3, ...);\n```\n\n### **`merge.smartStrategy({ <key>: '<prepend|append|replace>''})(...configuration |\u00a0[...configuration])`**\n\nThe same idea works with smart merging too (described below in greater detail).\n\n```javascript\nvar output = merge.smartStrategy(\n  {\n    entry: 'prepend', // or 'replace'\n    'module.rules': 'prepend'\n  }\n)(object1, object2, object3, ...);\n```\n\n## Smart Merging\n\n### **`merge.smart(...configuration |\u00a0[...configuration])`**\n\n*webpack-merge* tries to be smart about merging loaders when `merge.smart` is used. Loaders with matching tests will be merged into a single loader value.\n\nNote that the logic picks up webpack 2 `rules` kind of syntax as well. The examples below have been written in webpack 1 syntax.\n\n**package.json**\n\n```json5\n{\n  \"scripts\": {\n    \"start\": \"webpack-dev-server\",\n    \"build\": \"webpack\"\n  },\n  // ...\n}\n```\n\n**webpack.config.js**\n\n```javascript\nvar path = require('path');\nvar merge = require('webpack-merge');\n\nvar TARGET = process.env.npm_lifecycle_event;\n\nvar common = {\n  entry: path.join(__dirname, 'app'),\n  ...\n  module: {\n    loaders: [\n      {\n        test: /\\.css$/,\n        loaders: ['style', 'css'],\n      },\n    ],\n  },\n};\n\nif(TARGET === 'start') {\n  module.exports = merge(common, {\n    module: {\n      // loaders will get concatenated!\n      loaders: [\n        {\n          test: /\\.jsx?$/,\n          loader: 'babel?stage=1',\n          include: path.join(ROOT_PATH, 'app'),\n        },\n      ],\n    },\n    ...\n  });\n}\n\nif(TARGET === 'build') {\n  module.exports = merge(common, {\n    ...\n  });\n}\n\n...\n```\n\n**Loader string values `loader: 'babel'` override each other.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'babel'\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'coffee'\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'coffee'\n  }]\n}\n```\n\n**Loader array values `loaders: ['babel']` will be merged, without duplication.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel']\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['coffee']\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    // appended because Webpack evaluated these from right to left\n    // this way you can specialize behavior and build the loader chain\n    loaders: ['babel', 'coffee']\n  }]\n}\n```\n\n**Loader array values `loaders: ['babel']` can be reordered by including\noriginal loaders.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel']\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['react-hot', 'babel']\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    // order of second argument is respected\n    loaders: ['react-hot', 'babel']\n  }]\n}\n```\n\nThis also works in reverse - the existing order will be maintained if possible:\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'css-loader', options: { myOptions: true } },\n      { loader: 'style-loader' }\n    ]\n  }]\n}, {\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'style-loader', options: { someSetting: true } }\n    ]\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'css-loader', options: { myOptions: true } },\n      { loader: 'style-loader', options: { someSetting: true } }\n    ]\n  }]\n}\n```\n\nIn the case of an order conflict, the second order wins:\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'css-loader' },\n      { loader: 'style-loader' }\n    ]\n  }]\n}, {\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'style-loader' },\n      { loader: 'css-loader' }\n    ]\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.css$/,\n    use: [\n      { loader: 'style-loader' }\n      { loader: 'css-loader' },\n    ]\n  }]\n}\n```\n\n\n**Loader query strings `loaders: ['babel?plugins[]=object-assign']` will be overridden.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel?plugins[]=object-assign']\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel', 'coffee']\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel', 'coffee']\n  }]\n}\n```\n\n**Loader arrays in source values will have loader strings merged into them.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'babel'\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['coffee']\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    // appended because Webpack evaluated these from right to left!\n    loaders: ['babel', 'coffee']\n  }]\n}\n```\n\n**Loader strings in source values will always override.**\n\n```javascript\nmerge.smart({\n  loaders: [{\n    test: /\\.js$/,\n    loaders: ['babel']\n  }]\n}, {\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'coffee'\n  }]\n});\n// will become\n{\n  loaders: [{\n    test: /\\.js$/,\n    loader: 'coffee'\n  }]\n}\n```\n\n## Multiple Merging\n\n### **`merge.multiple(...configuration |\u00a0[...configuration])`**\n\nSometimes you may need to support multiple targets, *webpack-merge* will accept an object where each key represents the target configuration. The output becomes an *array* of configurations where matching keys are merged and non-matching keys are added.\n\n```javascript\nvar path = require('path');\nvar baseConfig = {\n    server: {\n      target: 'node',\n      output: {\n        path: path.resolve(__dirname, 'dist'),\n        filename: 'lib.node.js'\n      }\n    },\n    client: {\n      output: {\n        path: path.resolve(__dirname, 'dist'),\n        filename: 'lib.js'\n      }\n    }\n  };\n\n// specialized configuration\nvar production = {\n    client: {\n      output: {\n        path: path.resolve(__dirname, 'dist'),\n        filename: '[name].[hash].js'\n      }\n    }\n  }\n\nmodule.exports = merge.multiple(baseConfig, production)\n```\n\n> Check out [SurviveJS - Webpack and React](http://survivejs.com/) to dig deeper into the topic.\n\n## Development\n\n1. `npm i`\n1. `npm run build`\n1. `npm run watch`\n\nBefore contributing, please open an issue where to discuss.\n\n## License\n\n*webpack-merge* is available under MIT. See LICENSE for more details."}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 668361}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 3895662}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 16833026}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 50389381}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 90853125}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 164291354}], "dependentsCount": 2471, "starsCount": 81}, "github": {"homepage": "https://www.npmjs.com/package/webpack-merge", "starsCount": 2084, "forksCount": 114, "subscribersCount": 16, "issues": {"count": 127, "openCount": 34, "distribution": {"3600": 19, "10800": 12, "32400": 4, "97200": 12, "291600": 11, "874800": 12, "2624400": 12, "7873200": 6, "23619600": 11, "70858800": 9, "212576400": 19}, "isDisabled": false}, "contributors": [{"username": "bebraw", "commitsCount": 223}, {"username": "GreenGremlin", "commitsCount": 16}, {"username": "kherock", "commitsCount": 7}, {"username": "blackrabbit99", "commitsCount": 4}, {"username": "herecydev", "commitsCount": 4}, {"username": "davegomez", "commitsCount": 3}, {"username": "siready", "commitsCount": 3}, {"username": "Lucretiel", "commitsCount": 2}, {"username": "montogeek", "commitsCount": 2}, {"username": "Amy-Lynn", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Whoaa512", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adrienharnay", "commitsCount": 1}, {"username": "choffmeister", "commitsCount": 1}, {"username": "desfero", "commitsCount": 1}, {"username": "escapedcat", "commitsCount": 1}, {"username": "greenkeeper[bot]", "commitsCount": 1}, {"username": "knpwrs", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 10191, "testsSize": 47920, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/survivejs/webpack-merge.svg", "service": "https://api.travis-ci.org/survivejs/webpack-merge.svg", "shields": "https://img.shields.io/travis/survivejs/webpack-merge.svg", "content": "https://img.shields.io/travis/survivejs/webpack-merge.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 2315, "downloadsCount": 16796460.333333332, "downloadsAcceleration": 41403.463184931505, "dependentsCount": 2471}, "maintenance": {"releasesFrequency": 0.1726027397260274, "commitsFrequency": 0.06904109589041096, "openIssues": 0.8871391076115486, "issuesDistribution": 0}}, "score": {"final": 0.6686651422587759, "detail": {"quality": 0.9844554415075204, "popularity": 0.671852044370172, "maintenance": 0.39480084079131317}}}}, {"body-parser": {"analyzedAt": "2020-06-13T15:44:44.865Z", "collected": {"metadata": {"name": "body-parser", "scope": "unscoped", "version": "1.19.0", "description": "Node.js body parsing middleware", "date": "2019-04-26T03:31:23.981Z", "publisher": {"username": "dougwilson", "email": "doug@somethingdoug.com"}, "maintainers": [{"username": "dougwilson", "email": "doug@somethingdoug.com"}], "contributors": [{"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Jonathan Ong", "email": "me@jongleberry.com", "url": "http://jongleberry.com"}], "repository": {"type": "git", "url": "git+https://github.com/expressjs/body-parser.git"}, "links": {"npm": "https://www.npmjs.com/package/body-parser", "homepage": "https://github.com/expressjs/body-parser#readme", "repository": "https://github.com/expressjs/body-parser", "bugs": "https://github.com/expressjs/body-parser/issues"}, "license": "MIT", "dependencies": {"bytes": "3.1.0", "content-type": "~1.0.4", "debug": "2.6.9", "depd": "~1.1.2", "http-errors": "1.7.2", "iconv-lite": "0.4.24", "on-finished": "~2.3.0", "qs": "6.7.0", "raw-body": "2.4.0", "type-is": "~1.6.17"}, "devDependencies": {"eslint": "5.16.0", "eslint-config-standard": "12.0.0", "eslint-plugin-import": "2.17.2", "eslint-plugin-markdown": "1.0.0", "eslint-plugin-node": "8.0.1", "eslint-plugin-promise": "4.1.1", "eslint-plugin-standard": "4.0.0", "istanbul": "0.4.5", "methods": "1.1.2", "mocha": "6.1.4", "safe-buffer": "5.1.2", "supertest": "4.0.2"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# body-parser\n\n[![NPM Version][npm-image]][npm-url]\n[![NPM Downloads][downloads-image]][downloads-url]\n[![Build Status][travis-image]][travis-url]\n[![Test Coverage][coveralls-image]][coveralls-url]\n\nNode.js body parsing middleware.\n\nParse incoming request bodies in a middleware before your handlers, available\nunder the `req.body` property.\n\n**Note** As `req.body`'s shape is based on user-controlled input, all\nproperties and values in this object are untrusted and should be validated\nbefore trusting. For example, `req.body.foo.toString()` may fail in multiple\nways, for example the `foo` property may not be there or may not be a string,\nand `toString` may not be a function and instead a string or other user input.\n\n[Learn about the anatomy of an HTTP transaction in Node.js](https://nodejs.org/en/docs/guides/anatomy-of-an-http-transaction/).\n\n_This does not handle multipart bodies_, due to their complex and typically\nlarge nature. For multipart bodies, you may be interested in the following\nmodules:\n\n  * [busboy](https://www.npmjs.org/package/busboy#readme) and\n    [connect-busboy](https://www.npmjs.org/package/connect-busboy#readme)\n  * [multiparty](https://www.npmjs.org/package/multiparty#readme) and\n    [connect-multiparty](https://www.npmjs.org/package/connect-multiparty#readme)\n  * [formidable](https://www.npmjs.org/package/formidable#readme)\n  * [multer](https://www.npmjs.org/package/multer#readme)\n\nThis module provides the following parsers:\n\n  * [JSON body parser](#bodyparserjsonoptions)\n  * [Raw body parser](#bodyparserrawoptions)\n  * [Text body parser](#bodyparsertextoptions)\n  * [URL-encoded form body parser](#bodyparserurlencodedoptions)\n\nOther body parsers you might be interested in:\n\n- [body](https://www.npmjs.org/package/body#readme)\n- [co-body](https://www.npmjs.org/package/co-body#readme)\n\n## Installation\n\n```sh\n$ npm install body-parser\n```\n\n## API\n\n<!-- eslint-disable no-unused-vars -->\n\n```js\nvar bodyParser = require('body-parser')\n```\n\nThe `bodyParser` object exposes various factories to create middlewares. All\nmiddlewares will populate the `req.body` property with the parsed body when\nthe `Content-Type` request header matches the `type` option, or an empty\nobject (`{}`) if there was no body to parse, the `Content-Type` was not matched,\nor an error occurred.\n\nThe various errors returned by this module are described in the\n[errors section](#errors).\n\n### bodyParser.json([options])\n\nReturns middleware that only parses `json` and only looks at requests where\nthe `Content-Type` header matches the `type` option. This parser accepts any\nUnicode encoding of the body and supports automatic inflation of `gzip` and\n`deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`).\n\n#### Options\n\nThe `json` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### reviver\n\nThe `reviver` option is passed directly to `JSON.parse` as the second\nargument. You can find more information on this argument\n[in the MDN documentation about JSON.parse](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse#Example.3A_Using_the_reviver_parameter).\n\n##### strict\n\nWhen set to `true`, will only accept arrays and objects; when `false` will\naccept anything `JSON.parse` accepts. Defaults to `true`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not a\nfunction, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `json`), a mime type (like `application/json`), or\na mime type with a wildcard (like `*/*` or `*/json`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a truthy\nvalue. Defaults to `application/json`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.raw([options])\n\nReturns middleware that parses all bodies as a `Buffer` and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a `Buffer` object\nof the body.\n\n#### Options\n\nThe `raw` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function.\nIf not a function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this\ncan be an extension name (like `bin`), a mime type (like\n`application/octet-stream`), or a mime type with a wildcard (like `*/*` or\n`application/*`). If a function, the `type` option is called as `fn(req)`\nand the request is parsed if it returns a truthy value. Defaults to\n`application/octet-stream`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.text([options])\n\nReturns middleware that parses all bodies as a string and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser supports automatic inflation of `gzip` and `deflate` encodings.\n\nA new `body` string containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This will be a string of the\nbody.\n\n#### Options\n\nThe `text` function takes an optional `options` object that may contain any of\nthe following keys:\n\n##### defaultCharset\n\nSpecify the default character set for the text content if the charset is not\nspecified in the `Content-Type` header of the request. Defaults to `utf-8`.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `txt`), a mime type (like `text/plain`), or a mime\ntype with a wildcard (like `*/*` or `text/*`). If a function, the `type`\noption is called as `fn(req)` and the request is parsed if it returns a\ntruthy value. Defaults to `text/plain`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n### bodyParser.urlencoded([options])\n\nReturns middleware that only parses `urlencoded` bodies and only looks at\nrequests where the `Content-Type` header matches the `type` option. This\nparser accepts only UTF-8 encoding of the body and supports automatic\ninflation of `gzip` and `deflate` encodings.\n\nA new `body` object containing the parsed data is populated on the `request`\nobject after the middleware (i.e. `req.body`). This object will contain\nkey-value pairs, where the value can be a string or array (when `extended` is\n`false`), or any type (when `extended` is `true`).\n\n#### Options\n\nThe `urlencoded` function takes an optional `options` object that may contain\nany of the following keys:\n\n##### extended\n\nThe `extended` option allows to choose between parsing the URL-encoded data\nwith the `querystring` library (when `false`) or the `qs` library (when\n`true`). The \"extended\" syntax allows for rich objects and arrays to be\nencoded into the URL-encoded format, allowing for a JSON-like experience\nwith URL-encoded. For more information, please\n[see the qs library](https://www.npmjs.org/package/qs#readme).\n\nDefaults to `true`, but using the default has been deprecated. Please\nresearch into the difference between `qs` and `querystring` and choose the\nappropriate setting.\n\n##### inflate\n\nWhen set to `true`, then deflated (compressed) bodies will be inflated; when\n`false`, deflated bodies are rejected. Defaults to `true`.\n\n##### limit\n\nControls the maximum request body size. If this is a number, then the value\nspecifies the number of bytes; if it is a string, the value is passed to the\n[bytes](https://www.npmjs.com/package/bytes) library for parsing. Defaults\nto `'100kb'`.\n\n##### parameterLimit\n\nThe `parameterLimit` option controls the maximum number of parameters that\nare allowed in the URL-encoded data. If a request contains more parameters\nthan this value, a 413 will be returned to the client. Defaults to `1000`.\n\n##### type\n\nThe `type` option is used to determine what media type the middleware will\nparse. This option can be a string, array of strings, or a function. If not\na function, `type` option is passed directly to the\n[type-is](https://www.npmjs.org/package/type-is#readme) library and this can\nbe an extension name (like `urlencoded`), a mime type (like\n`application/x-www-form-urlencoded`), or a mime type with a wildcard (like\n`*/x-www-form-urlencoded`). If a function, the `type` option is called as\n`fn(req)` and the request is parsed if it returns a truthy value. Defaults\nto `application/x-www-form-urlencoded`.\n\n##### verify\n\nThe `verify` option, if supplied, is called as `verify(req, res, buf, encoding)`,\nwhere `buf` is a `Buffer` of the raw request body and `encoding` is the\nencoding of the request. The parsing can be aborted by throwing an error.\n\n## Errors\n\nThe middlewares provided by this module create errors depending on the error\ncondition during parsing. The errors will typically have a `status`/`statusCode`\nproperty that contains the suggested HTTP response code, an `expose` property\nto determine if the `message` property should be displayed to the client, a\n`type` property to determine the type of error without matching against the\n`message`, and a `body` property containing the read body, if available.\n\nThe following are the common errors emitted, though any error can come through\nfor various reasons.\n\n### content encoding unsupported\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an encoding but the \"inflation\" option was set to `false`. The\n`status` property is set to `415`, the `type` property is set to\n`'encoding.unsupported'`, and the `charset` property will be set to the\nencoding that is unsupported.\n\n### request aborted\n\nThis error will occur when the request is aborted by the client before reading\nthe body has finished. The `received` property will be set to the number of\nbytes received before the request was aborted and the `expected` property is\nset to the number of expected bytes. The `status` property is set to `400`\nand `type` property is set to `'request.aborted'`.\n\n### request entity too large\n\nThis error will occur when the request body's size is larger than the \"limit\"\noption. The `limit` property will be set to the byte limit and the `length`\nproperty will be set to the request body's length. The `status` property is\nset to `413` and the `type` property is set to `'entity.too.large'`.\n\n### request size did not match content length\n\nThis error will occur when the request's length did not match the length from\nthe `Content-Length` header. This typically occurs when the request is malformed,\ntypically when the `Content-Length` header was calculated based on characters\ninstead of bytes. The `status` property is set to `400` and the `type` property\nis set to `'request.size.invalid'`.\n\n### stream encoding should not be set\n\nThis error will occur when something called the `req.setEncoding` method prior\nto this middleware. This module operates directly on bytes only and you cannot\ncall `req.setEncoding` when using this module. The `status` property is set to\n`500` and the `type` property is set to `'stream.encoding.set'`.\n\n### too many parameters\n\nThis error will occur when the content of the request exceeds the configured\n`parameterLimit` for the `urlencoded` parser. The `status` property is set to\n`413` and the `type` property is set to `'parameters.too.many'`.\n\n### unsupported charset \"BOGUS\"\n\nThis error will occur when the request had a charset parameter in the\n`Content-Type` header, but the `iconv-lite` module does not support it OR the\nparser does not support it. The charset is contained in the message as well\nas in the `charset` property. The `status` property is set to `415`, the\n`type` property is set to `'charset.unsupported'`, and the `charset` property\nis set to the charset that is unsupported.\n\n### unsupported content encoding \"bogus\"\n\nThis error will occur when the request had a `Content-Encoding` header that\ncontained an unsupported encoding. The encoding is contained in the message\nas well as in the `encoding` property. The `status` property is set to `415`,\nthe `type` property is set to `'encoding.unsupported'`, and the `encoding`\nproperty is set to the encoding that is unsupported.\n\n## Examples\n\n### Express/Connect top-level generic\n\nThis example demonstrates adding a generic JSON and URL-encoded parser as a\ntop-level middleware, which will parse the bodies of all incoming requests.\nThis is the simplest setup.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse application/x-www-form-urlencoded\napp.use(bodyParser.urlencoded({ extended: false }))\n\n// parse application/json\napp.use(bodyParser.json())\n\napp.use(function (req, res) {\n  res.setHeader('Content-Type', 'text/plain')\n  res.write('you posted:\\n')\n  res.end(JSON.stringify(req.body, null, 2))\n})\n```\n\n### Express route-specific\n\nThis example demonstrates adding body parsers specifically to the routes that\nneed them. In general, this is the most recommended way to use body-parser with\nExpress.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// create application/json parser\nvar jsonParser = bodyParser.json()\n\n// create application/x-www-form-urlencoded parser\nvar urlencodedParser = bodyParser.urlencoded({ extended: false })\n\n// POST /login gets urlencoded bodies\napp.post('/login', urlencodedParser, function (req, res) {\n  res.send('welcome, ' + req.body.username)\n})\n\n// POST /api/users gets JSON bodies\napp.post('/api/users', jsonParser, function (req, res) {\n  // create user in req.body\n})\n```\n\n### Change accepted type for parsers\n\nAll the parsers accept a `type` option which allows you to change the\n`Content-Type` that the middleware will parse.\n\n```js\nvar express = require('express')\nvar bodyParser = require('body-parser')\n\nvar app = express()\n\n// parse various different custom JSON types as JSON\napp.use(bodyParser.json({ type: 'application/*+json' }))\n\n// parse some custom thing into a Buffer\napp.use(bodyParser.raw({ type: 'application/vnd.custom-type' }))\n\n// parse an HTML body into a string\napp.use(bodyParser.text({ type: 'text/html' }))\n```\n\n## License\n\n[MIT](LICENSE)\n\n[npm-image]: https://img.shields.io/npm/v/body-parser.svg\n[npm-url]: https://npmjs.org/package/body-parser\n[travis-image]: https://img.shields.io/travis/expressjs/body-parser/master.svg\n[travis-url]: https://travis-ci.org/expressjs/body-parser\n[coveralls-image]: https://img.shields.io/coveralls/expressjs/body-parser/master.svg\n[coveralls-url]: https://coveralls.io/r/expressjs/body-parser?branch=master\n[downloads-image]: https://img.shields.io/npm/dm/body-parser.svg\n[downloads-url]: https://npmjs.org/package/body-parser"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2103296}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13484463}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 57686242}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 170044446}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 311529617}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 587838383}], "dependentsCount": 12951, "starsCount": 616}, "github": {"starsCount": 4507, "forksCount": 530, "subscribersCount": 105, "issues": {"count": 396, "openCount": 22, "distribution": {"3600": 136, "10800": 43, "32400": 54, "97200": 29, "291600": 21, "874800": 25, "2624400": 31, "7873200": 23, "23619600": 8, "70858800": 5, "212576400": 21}, "isDisabled": false}, "contributors": [{"username": "dougwilson", "commitsCount": 510}, {"username": "jonathanong", "commitsCount": 6}, {"username": "Fishrock123", "commitsCount": 2}, {"username": "HopefulLlama", "commitsCount": 1}, {"username": "Timokasse", "commitsCount": 1}, {"username": "TomK32", "commitsCount": 1}, {"username": "azhao12345", "commitsCount": 1}, {"username": "beeman", "commitsCount": 1}, {"username": "djchie", "commitsCount": 1}, {"username": "govindrai", "commitsCount": 1}, {"username": "jdspugh", "commitsCount": 1}, {"username": "lazywithclass", "commitsCount": 1}, {"username": "mscdex", "commitsCount": 1}, {"username": "msemtd", "commitsCount": 1}, {"username": "sehrope", "commitsCount": 1}, {"username": "shawninder", "commitsCount": 1}, {"username": "thethp", "commitsCount": 1}, {"username": "tlhunter", "commitsCount": 1}, {"username": "yanxyz", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 7}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 16}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 44}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 17100, "testsSize": 76560, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/body-parser.svg", "shields": "https://img.shields.io/npm/v/body-parser.svg", "content": "https://img.shields.io/npm/v/body-parser.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/expressjs/body-parser/master.svg", "service": "https://api.travis-ci.org/expressjs/body-parser.svg?branch=master", "shields": "https://img.shields.io/travis/expressjs/body-parser/master.svg", "content": "https://img.shields.io/travis/expressjs/body-parser/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/expressjs/body-parser/master.svg", "service": "https://coveralls.io/repos/expressjs/body-parser/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/expressjs/body-parser/master.svg", "content": "https://img.shields.io/coveralls/expressjs/body-parser/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/body-parser.svg", "shields": "https://img.shields.io/npm/dm/body-parser.svg", "content": "https://img.shields.io/npm/dm/body-parser.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint"], "coverage": 1, "outdatedDependencies": {"http-errors": {"required": "1.7.2", "stable": "1.7.3", "latest": "1.7.3"}, "raw-body": {"required": "2.4.0", "stable": "2.4.1", "latest": "2.4.1"}, "depd": {"required": "~1.1.2", "stable": "2.0.0", "latest": "2.0.0"}, "iconv-lite": {"required": "0.4.24", "stable": "0.6.0", "latest": "0.6.0"}, "debug": {"required": "2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "qs": {"required": "6.7.0", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 5777, "downloadsCount": 56681482, "downloadsAcceleration": 108140.64804033481, "dependentsCount": 12951}, "maintenance": {"releasesFrequency": 0.07397260273972603, "commitsFrequency": 0.7461643835616438, "openIssues": 1, "issuesDistribution": 0.26688245798419813}}, "score": {"final": 0.801926066364032, "detail": {"quality": 0.9387218697653392, "popularity": 0.8372125578719104, "maintenance": 0.649386029083605}}}}, {"babel": {"analyzedAt": "2020-06-10T01:12:24.623Z", "collected": {"metadata": {"name": "babel", "scope": "unscoped", "version": "6.23.0", "description": "Turn ES6 code into readable vanilla ES5 with source maps", "date": "2017-02-13T23:04:30.620Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "deprecated": "In 6.x, the babel package has been deprecated in favor of babel-cli. Check https://opencollective.com/babel to support the Babel maintainers", "hasTestScript": true, "readme": "# babel"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 26286}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 138256}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 588568}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1638912}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3339555}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 8969632}], "dependentsCount": 1438, "starsCount": 181}, "github": {"homepage": "https://babel.dev", "starsCount": 36753, "forksCount": 4312, "subscribersCount": 868, "issues": {"count": 11621, "openCount": 786, "distribution": {"3600": 2464, "10800": 917, "32400": 1067, "97200": 1242, "291600": 1058, "874800": 1003, "2624400": 853, "7873200": 811, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 56}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 203}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 411}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 790}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324572, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.9864999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42212, "downloadsCount": 546304, "downloadsAcceleration": -2744.162956621004, "dependentsCount": 1438}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24127613984248625}}, "score": {"final": 0.5786573144524562, "detail": {"quality": 0.6458373076980479, "popularity": 0.5296877989152551, "maintenance": 0.570043978636293}}}}, {"@babel/runtime": {"analyzedAt": "2020-06-04T02:49:30.054Z", "collected": {"metadata": {"name": "@babel/runtime", "scope": "babel", "version": "7.10.2", "description": "babel's modular runtime helpers", "date": "2020-05-30T19:25:15.863Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-runtime"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fruntime", "homepage": "https://babeljs.io/docs/en/next/babel-runtime", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"regenerator-runtime": "^0.13.4"}, "devDependencies": {"@babel/helpers": "^7.10.1"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 13}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 27}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}], "readme": "# @babel/runtime\n\n> babel's modular runtime helpers\n\nSee our website [@babel/runtime](https://babeljs.io/docs/en/next/babel-runtime.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save @babel/runtime\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/runtime \n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3843743}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 20168345}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 85089787}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 241678012}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 411965096}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 688492732}], "dependentsCount": 10519, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36698, "forksCount": 4307, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1239, "291600": 1052, "874800": 1008, "2624400": 848, "7873200": 806, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 281, "testsSize": 12288156, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.88695, "tests": 0.6865000000000001, "health": 1, "branding": 1}, "popularity": {"communityInterest": 41972, "downloadsCount": 80559337.33333333, "downloadsAcceleration": 338114.57401065447, "dependentsCount": 10519}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23983827984614398}}, "score": {"final": 0.9201197971216493, "detail": {"quality": 0.9429330616224981, "popularity": 0.9308645693458438, "maintenance": 0.8898207981824414}}}}, {"npm-run-all": {"analyzedAt": "2020-06-13T15:44:35.369Z", "collected": {"metadata": {"name": "npm-run-all", "scope": "unscoped", "version": "4.1.5", "description": "A CLI tool to run multiple npm-scripts in parallel or sequential.", "keywords": ["cli", "command", "commandline", "tool", "npm", "npm-scripts", "run", "sequential", "serial", "parallel", "task"], "date": "2018-11-24T13:52:41.635Z", "author": {"name": "Toru Nagashima"}, "publisher": {"username": "mysticatea", "email": "star.ctor@gmail.com"}, "maintainers": [{"username": "mysticatea", "email": "star.ctor@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mysticatea/npm-run-all.git"}, "links": {"npm": "https://www.npmjs.com/package/npm-run-all", "homepage": "https://github.com/mysticatea/npm-run-all", "repository": "https://github.com/mysticatea/npm-run-all", "bugs": "https://github.com/mysticatea/npm-run-all/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^3.2.1", "chalk": "^2.4.1", "cross-spawn": "^6.0.5", "memorystream": "^0.3.1", "minimatch": "^3.0.4", "pidtree": "^0.3.0", "read-pkg": "^3.0.0", "shell-quote": "^1.6.1", "string.prototype.padend": "^3.0.0"}, "devDependencies": {"@types/node": "^4.9.1", "babel-plugin-transform-async-to-generator": "^6.24.1", "babel-preset-power-assert": "^2.0.0", "babel-register": "^6.26.0", "codecov": "^3.1.0", "eslint": "^4.19.1", "eslint-config-mysticatea": "^12.0.0", "fs-extra": "^7.0.1", "mocha": "^5.2.0", "nyc": "^11.9.0", "p-queue": "^2.4.2", "power-assert": "^1.6.1", "rimraf": "^2.6.2", "yarn": "^1.12.3"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "| index | [npm-run-all] | [run-s] | [run-p] | [Node API] |\n|-------|---------------|---------|---------|------------|\n\n# npm-run-all\n\n[![npm version](https://img.shields.io/npm/v/npm-run-all.svg)](https://www.npmjs.com/package/npm-run-all)\n[![Downloads/month](https://img.shields.io/npm/dm/npm-run-all.svg)](http://www.npmtrends.com/npm-run-all)\n[![Build Status](https://travis-ci.org/mysticatea/npm-run-all.svg?branch=master)](https://travis-ci.org/mysticatea/npm-run-all)\n[![Build status](https://ci.appveyor.com/api/projects/status/v0owd44q1r7hceir/branch/master?svg=true)](https://ci.appveyor.com/project/mysticatea/npm-run-all/branch/master)\n[![Coverage Status](https://codecov.io/gh/mysticatea/eslint-plugin-node/branch/master/graph/badge.svg)](https://codecov.io/gh/mysticatea/npm-run-all)\n[![Dependency Status](https://david-dm.org/mysticatea/npm-run-all.svg)](https://david-dm.org/mysticatea/npm-run-all)\n\nA CLI tool to run multiple npm-scripts in parallel or sequential.\n\n## \u2934\ufe0f Motivation\n\n- **Simplify.** The official `npm run-script` command cannot run multiple scripts, so if we want to run multiple scripts, it's redundant a bit. Let's shorten it by glob-like patterns.<br>\n  Before: `npm run clean && npm run build:css && npm run build:js && npm run build:html`<br>\n  After: `npm-run-all clean build:*`\n- **Cross platform.** We sometimes use `&` to run multiple command in parallel, but `cmd.exe` (`npm run-script` uses it by default) does not support the `&`. Half of Node.js users are using it on Windows, so the use of `&` might block contributions. `npm-run-all --parallel` works well on Windows as well.\n\n## \ud83d\udcbf Installation\n\n```bash\n$ npm install npm-run-all --save-dev\n# or\n$ yarn add npm-run-all --dev\n```\n\n- It requires `Node@>=4`.\n\n## \ud83d\udcd6 Usage\n\n### CLI Commands\n\nThis `npm-run-all` package provides 3 CLI commands.\n\n- [npm-run-all]\n- [run-s]\n- [run-p]\n\nThe main command is [npm-run-all].\nWe can make complex plans with [npm-run-all] command.\n\nBoth [run-s] and [run-p] are shorthand commands.\n[run-s] is for sequential, [run-p] is for parallel.\nWe can make simple plans with those commands.\n\n#### Yarn Compatibility\n\nIf a script is invoked with Yarn, `npm-run-all` will correctly use Yarn to execute the plan's child scripts.\n\n### Node API\n\nThis `npm-run-all` package provides Node API.\n\n- [Node API]\n\n## \ud83d\udcf0 Changelog\n\n- https://github.com/mysticatea/npm-run-all/releases\n\n## \ud83c\udf7b Contributing\n\nWelcome\u2661\n\n### Bug Reports or Feature Requests\n\nPlease use GitHub Issues.\n\n### Correct Documents\n\nPlease use GitHub Pull Requests.\n\nI'm not familiar with English, so I especially thank you for documents' corrections.\n\n### Implementing\n\nPlease use GitHub Pull Requests.\n\nThere are some npm-scripts to help developments.\n\n- **npm test** - Run tests and collect coverage.\n- **npm run clean** - Delete temporary files.\n- **npm run lint** - Run ESLint.\n- **npm run watch** - Run tests (not collect coverage) on every file change.\n\n[npm-run-all]: docs/npm-run-all.md\n[run-s]: docs/run-s.md\n[run-p]: docs/run-p.md\n[Node API]: docs/node-api.md"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 209863}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1309049}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5600134}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 16457921}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 29130362}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 50236938}], "dependentsCount": 664, "starsCount": 197}, "github": {"starsCount": 3543, "forksCount": 200, "subscribersCount": 24, "issues": {"count": 188, "openCount": 56, "distribution": {"3600": 22, "10800": 6, "32400": 14, "97200": 22, "291600": 18, "874800": 16, "2624400": 17, "7873200": 13, "23619600": 9, "70858800": 24, "212576400": 27}, "isDisabled": false}, "contributors": [{"username": "mysticatea", "commitsCount": 217}, {"username": "k88hudson", "commitsCount": 6}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "joscha", "commitsCount": 2}, {"username": "ntwb", "commitsCount": 2}, {"username": "robario", "commitsCount": 2}, {"username": "BarryThePenguin", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "bmarcaur", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "fatso83", "commitsCount": 1}, {"username": "goto-bus-stop", "commitsCount": 1}, {"username": "jlopezxs", "commitsCount": 1}, {"username": "koba04", "commitsCount": 1}, {"username": "lewiscowper", "commitsCount": 1}, {"username": "lostfictions", "commitsCount": 1}, {"username": "nickcharles", "commitsCount": 1}, {"username": "nulltask", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "vinkla", "commitsCount": 1}, {"username": "wyattjoh", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 3065, "testsSize": 89711}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/npm-run-all.svg", "shields": "https://img.shields.io/npm/v/npm-run-all.svg", "content": "https://img.shields.io/npm/v/npm-run-all.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/npm-run-all.svg", "shields": "https://img.shields.io/npm/dm/npm-run-all.svg", "content": "https://img.shields.io/npm/dm/npm-run-all.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://travis-ci.org/mysticatea/npm-run-all.svg?branch=master", "service": "https://api.travis-ci.org/mysticatea/npm-run-all.svg?branch=master", "shields": "https://img.shields.io/travis/mysticatea/npm-run-all/master.svg", "content": "https://img.shields.io/travis/mysticatea/npm-run-all/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/v0owd44q1r7hceir/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/v0owd44q1r7hceir/branch/master", "shields": "https://img.shields.io/appveyor/ci/v0owd44q1r7hceir/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/v0owd44q1r7hceir/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://david-dm.org/mysticatea/npm-run-all.svg", "service": "https://david-dm.org/mysticatea/npm-run-all.svg", "shields": "https://img.shields.io/david/mysticatea/npm-run-all.svg", "content": "https://img.shields.io/david/mysticatea/npm-run-all.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["eslint"], "coverage": 0.92, "outdatedDependencies": {"chalk": {"required": "^2.4.1", "stable": "4.1.0", "latest": "4.1.0"}, "cross-spawn": {"required": "^6.0.5", "stable": "7.0.3", "latest": "7.0.3"}, "pidtree": {"required": "^0.3.0", "stable": "0.5.0", "latest": "0.5.0"}, "ansi-styles": {"required": "^3.2.1", "stable": "4.2.1", "latest": "4.2.1"}, "read-pkg": {"required": "^3.0.0", "stable": "5.2.0", "latest": "5.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 3986, "downloadsCount": 5485973.666666667, "downloadsAcceleration": 18308.896156773204, "dependentsCount": 664}, "maintenance": {"releasesFrequency": 0.0863013698630137, "commitsFrequency": 0.011506849315068493, "openIssues": 0.8368794326241136, "issuesDistribution": 0}}, "score": {"final": 0.5723025417348575, "detail": {"quality": 0.9270613780073649, "popularity": 0.5767884636148932, "maintenance": 0.2637376173355297}}}}, {"minimist": {"analyzedAt": "2020-06-16T04:12:58.291Z", "collected": {"metadata": {"name": "minimist", "scope": "unscoped", "version": "1.2.5", "description": "parse argument options", "keywords": ["argv", "getopt", "parser", "optimist"], "date": "2020-03-12T22:16:19.463Z", "author": {"name": "James Halliday", "email": "mail@substack.net", "url": "http://substack.net"}, "publisher": {"username": "substack", "email": "substack@gmail.com"}, "maintainers": [{"username": "emilbayes", "email": "github@tixz.dk"}, {"username": "substack", "email": "substack@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/substack/minimist.git"}, "links": {"npm": "https://www.npmjs.com/package/minimist", "homepage": "https://github.com/substack/minimist", "repository": "https://github.com/substack/minimist", "bugs": "https://github.com/substack/minimist/issues"}, "license": "MIT", "devDependencies": {"covert": "^1.0.0", "tap": "~0.4.0", "tape": "^3.5.0"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 6}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 6}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# minimist\n\nparse argument options\n\nThis module is the guts of optimist's argument parser without all the\nfanciful decoration.\n\n# example\n\n``` js\nvar argv = require('minimist')(process.argv.slice(2));\nconsole.log(argv);\n```\n\n```\n$ node example/parse.js -a beep -b boop\n{ _: [], a: 'beep', b: 'boop' }\n```\n\n```\n$ node example/parse.js -x 3 -y 4 -n5 -abc --beep=boop foo bar baz\n{ _: [ 'foo', 'bar', 'baz' ],\n  x: 3,\n  y: 4,\n  n: 5,\n  a: true,\n  b: true,\n  c: true,\n  beep: 'boop' }\n```\n\n# security\n\nPrevious versions had a prototype pollution bug that could cause privilege\nescalation in some circumstances when handling untrusted user input.\n\nPlease use version 1.2.3 or later: https://snyk.io/vuln/SNYK-JS-MINIMIST-559764\n\n# methods\n\n``` js\nvar parseArgs = require('minimist')\n```\n\n## var argv = parseArgs(args, opts={})\n\nReturn an argument object `argv` populated with the array arguments from `args`.\n\n`argv._` contains all the arguments that didn't have an option associated with\nthem.\n\nNumeric-looking arguments will be returned as numbers unless `opts.string` or\n`opts.boolean` is set for that argument name.\n\nAny arguments after `'--'` will not be parsed and will end up in `argv._`.\n\noptions can be:\n\n* `opts.string` - a string or array of strings argument names to always treat as\nstrings\n* `opts.boolean` - a boolean, string or array of strings to always treat as\nbooleans. if `true` will treat all double hyphenated arguments without equal signs\nas boolean (e.g. affects `--foo`, not `-f` or `--foo=bar`)\n* `opts.alias` - an object mapping string names to strings or arrays of string\nargument names to use as aliases\n* `opts.default` - an object mapping string argument names to default values\n* `opts.stopEarly` - when true, populate `argv._` with everything after the\nfirst non-option\n* `opts['--']` - when true, populate `argv._` with everything before the `--`\nand `argv['--']` with everything after the `--`. Here's an example:\n\n  ```\n  > require('./')('one two three -- four five --six'.split(' '), { '--': true })\n  { _: [ 'one', 'two', 'three' ],\n    '--': [ 'four', 'five', '--six' ] }\n  ```\n\n  Note that with `opts['--']` set, parsing for arguments still stops after the\n  `--`.\n\n* `opts.unknown` - a function which is invoked with a command line parameter not\ndefined in the `opts` configuration object. If the function returns `false`, the\nunknown option is not added to `argv`.\n\n# install\n\nWith [npm](https://npmjs.org) do:\n\n```\nnpm install minimist\n```\n\n# license\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 6476559}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 35724827}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 150215577}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 481631655}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 905323743}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1715396626}], "dependentsCount": 12875, "starsCount": 433}, "github": {"starsCount": 4210, "forksCount": 234, "subscribersCount": 53, "issues": {"count": 152, "openCount": 64, "distribution": {"3600": 15, "10800": 7, "32400": 5, "97200": 6, "291600": 11, "874800": 3, "2624400": 10, "7873200": 16, "23619600": 9, "70858800": 14, "212576400": 56}, "isDisabled": false}, "contributors": [{"username": "substack", "commitsCount": 62}, {"username": "dominictarr", "commitsCount": 3}, {"username": "ELLIOTTCABLE", "commitsCount": 2}, {"username": "jeffbski", "commitsCount": 2}, {"username": "joaomoreno", "commitsCount": 2}, {"username": "SanjoSolutions", "commitsCount": 1}, {"username": "caitp", "commitsCount": 1}, {"username": "coleste", "commitsCount": 1}, {"username": "jdiamond", "commitsCount": 1}, {"username": "lydell", "commitsCount": 1}, {"username": "m1kc", "commitsCount": 1}, {"username": "maxogden", "commitsCount": 1}, {"username": "okdistribute", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 13}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 15}]}, "source": {"files": {"readmeSize": 2494, "testsSize": 20097}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 4943, "downloadsCount": 160543885, "downloadsAcceleration": 159332.17071917793, "dependentsCount": 12875}, "maintenance": {"releasesFrequency": 0.9299657534246576, "commitsFrequency": 0.7110787671232877, "openIssues": 0.631578947368421, "issuesDistribution": 0}}, "score": {"final": 0.77312553952364, "detail": {"quality": 0.8059119885709578, "popularity": 0.8546751512179716, "maintenance": 0.663473257217322}}}}, {"@types/chai": {"analyzedAt": "2018-06-02T04:27:21.336Z", "collected": {"metadata": {"name": "@types/chai", "scope": "types", "version": "4.1.3", "description": "TypeScript definitions for chai", "date": "2018-04-20T17:41:47.132Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Jed Mao", "url": "https://github.com/jedmao"}, {"name": "Bart van der Schoor", "url": "https://github.com/Bartvds"}, {"name": "Andrew Brown", "url": "https://github.com/AGBrown"}, {"name": "Olivier Chevet", "url": "https://github.com/olivr70"}, {"name": "Matt Wistrand", "url": "https://github.com/mwistrand"}, {"name": "Josh Goldberg", "url": "https://github.com/joshuakgoldberg"}, {"name": "Shaun Luttin", "url": "https://github.com/shaunluttin"}, {"name": "Gintautas Miselis", "url": "https://github.com/Naktibalda"}, {"name": "Satana Charuwichitratana", "url": "https://github.com/micksatana"}, {"name": "Erik Schierboom", "url": "https://github.com/ErikSchierboom"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fchai"}, "license": "MIT", "releases": [{"from": "2018-05-03T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 1}, {"from": "2018-03-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 2}, {"from": "2017-12-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 8}, {"from": "2017-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 15}, {"from": "2016-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 34}], "readme": "# Installation\r\n> `npm install --save @types/chai`\r\n\r\n# Summary\r\nThis package contains type definitions for chai (http://chaijs.com/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/chai\r\n\r\nAdditional Details\r\n * Last updated: Fri, 20 Apr 2018 17:40:51 GMT\r\n * Dependencies: none\r\n * Global values: Chai, chai\r\n\r\n# Credits\r\nThese definitions were written by Jed Mao <https://github.com/jedmao>, Bart van der Schoor <https://github.com/Bartvds>, Andrew Brown <https://github.com/AGBrown>, Olivier Chevet <https://github.com/olivr70>, Matt Wistrand <https://github.com/mwistrand>, Josh Goldberg <https://github.com/joshuakgoldberg>, Shaun Luttin <https://github.com/shaunluttin>, Gintautas Miselis <https://github.com/Naktibalda>, Satana Charuwichitratana <https://github.com/micksatana>, Erik Schierboom <https://github.com/ErikSchierboom>."}, "npm": {"downloads": [{"from": "2018-06-01T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 0}, {"from": "2018-05-26T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 65509}, {"from": "2018-05-03T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 1359281}, {"from": "2018-03-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 4330781}, {"from": "2017-12-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 7451121}, {"from": "2017-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 11846522}], "dependentsCount": 178, "starsCount": 3}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 3, "downloadsCount": 1443593.6666666667, "downloadsAcceleration": 5448.008504566211, "dependentsCount": 178}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-chai-68snyhj0n3l/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-04-29T23:07:22.101Z"}, "score": {"final": 0.3430877319319374, "detail": {"quality": 0.398969320144589, "popularity": 0.30494362634826877, "maintenance": 0.3333333333333333}}}}, {"@angular/common": {"analyzedAt": "2020-06-15T21:20:08.738Z", "collected": {"metadata": {"name": "@angular/common", "scope": "angular", "version": "9.1.11", "description": "Angular - commonly needed directives and services", "date": "2020-06-10T18:23:44.890Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/common"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fcommon", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"rxjs": "^6.5.3", "@angular/core": "9.1.11", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 54}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 104}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 193}]}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 73424}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1532144}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 6164008}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19550245}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 35783499}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 67350802}], "dependentsCount": 7782, "starsCount": 13}, "source": {"files": {"readmeSize": 0, "testsSize": 253268, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.3, "health": 1, "branding": 0}, "popularity": {"communityInterest": 13, "downloadsCount": 6516748.333333333, "downloadsAcceleration": 8804.664897260278, "dependentsCount": 7782}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.514606382541895, "detail": {"quality": 0.7106483682760691, "popularity": 0.5278434439783073, "maintenance": 0.3333333333333333}}}}, {"ts-loader": {"analyzedAt": "2020-06-04T00:06:28.844Z", "collected": {"metadata": {"name": "ts-loader", "scope": "unscoped", "version": "7.0.5", "description": "TypeScript loader for webpack", "keywords": ["ts-loader", "typescript-loader", "webpack", "loader", "typescript", "ts"], "date": "2020-05-24T13:07:06.890Z", "author": {"name": "John Reilly", "email": "johnny_reilly@hotmail.com", "url": "https://blog.johnnyreilly.com", "username": "johnnyreilly"}, "publisher": {"username": "johnnyreilly", "email": "johnny_reilly@hotmail.com"}, "maintainers": [{"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "jbrantly", "email": "james@jbrantly.com"}, {"username": "johnnyreilly", "email": "johnny_reilly@hotmail.com"}], "contributors": [{"name": "John Reilly", "email": "johnny_reilly@hotmail.com", "url": "https://blog.johnnyreilly.com"}, {"name": "James Brantly", "email": "james@jbrantly.com", "url": "http://www.jbrantly.com/"}], "repository": {"type": "git", "url": "git+https://github.com/TypeStrong/ts-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-loader", "homepage": "https://github.com/TypeStrong/ts-loader", "repository": "https://github.com/TypeStrong/ts-loader", "bugs": "https://github.com/TypeStrong/ts-loader/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.3.0", "enhanced-resolve": "^4.0.0", "loader-utils": "^1.0.2", "micromatch": "^4.0.0", "semver": "^6.0.0"}, "devDependencies": {"@types/micromatch": "^3.1.0", "@types/node": "*", "@types/semver": "^6.0.0", "@types/webpack": "^4.4.30", "babel": "^6.0.0", "babel-core": "^6.0.0", "babel-loader": "^7.0.0", "babel-polyfill": "^6.16.0", "babel-preset-es2015": "^6.0.0", "babel-preset-es2016": "^6.16.0", "babel-preset-react": "^6.0.0", "escape-string-regexp": "^2.0.0", "fs-extra": "^7.0.0", "glob": "^7.1.1", "html-webpack-plugin": "^3.2.0", "husky": "^2.0.0", "jasmine-core": "^3.0.0", "karma": "^4.0.0", "karma-chrome-launcher": "^2.2.0", "karma-jasmine": "^2.0.0", "karma-mocha-reporter": "^2.0.0", "karma-sourcemap-loader": "^0.3.6", "karma-webpack": "^4.0.0-rc.5", "lint-staged": "^8.0.0", "markdown-toc": "^1.2.0", "mkdirp": "^0.5.1", "mocha": "^6.0.0", "prettier": "^1.11.1", "rimraf": "^2.6.2", "tslint": "^5.11.0", "tslint-config-prettier": "^1.15.0", "typescript": "^3.6.2", "webpack": "^4.5.0", "webpack-cli": "^3.1.1"}, "peerDependencies": {"typescript": "*"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 15}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 38}], "hasTestScript": true, "readme": "# TypeScript loader for webpack\n\n[![npm version](https://img.shields.io/npm/v/ts-loader.svg)](https://www.npmjs.com/package/ts-loader)\n[![Linux Build Status](https://travis-ci.org/TypeStrong/ts-loader.svg?branch=master)](https://travis-ci.org/TypeStrong/ts-loader)\n[![Windows Build Status](https://ci.appveyor.com/api/projects/status/bjh0r0d4ckspgkh9/branch/master?svg=true)](https://ci.appveyor.com/project/JohnReilly/ts-loader/branch/master)\n[![Downloads](http://img.shields.io/npm/dm/ts-loader.svg)](https://npmjs.org/package/ts-loader)\n[![node version](https://img.shields.io/node/v/ts-loader.svg)](https://www.npmjs.com/package/ts-loader)\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg)](https://github.com/prettier/prettier)\n[![Join the chat at https://gitter.im/TypeStrong/ts-loader](https://img.shields.io/badge/gitter-join%20chat-brightgreen.svg)](https://gitter.im/TypeStrong/ts-loader)\n\n<br />\n<p align=\"center\">\n  <h3 align=\"center\">ts-loader</h3>\n\n  <p align=\"center\">\n    This is the TypeScript loader for webpack.\n    <br />\n    <br />\n    <a href=\"https://github.com/TypeStrong/ts-loader/issues\">Installation</a>\n    \u00b7\n    <a href=\"https://github.com/TypeStrong/ts-loader/issues\">Report Bug</a>\n    \u00b7\n    <a href=\"https://github.com/TypeStrong/ts-loader/issues\">Request Feature</a>\n  </p>\n</p>\n\n## Table of Contents\n\n<!-- toc -->\n\n- [Getting Started](#getting-started)\n  * [Installation](#installation)\n  * [Running](#running)\n  * [Examples](#examples)\n  * [Faster Builds](#faster-builds)\n  * [Yarn Plug\u2019n\u2019Play](#yarn-plugnplay)\n  * [Babel](#babel)\n  * [Parallelising Builds](#parallelising-builds)\n  * [Compatibility](#compatibility)\n  * [Configuration](#configuration)\n    + [`devtool` / sourcemaps](#devtool--sourcemaps)\n  * [Code Splitting and Loading Other Resources](#code-splitting-and-loading-other-resources)\n  * [Declarations (.d.ts)](#declarations-dts)\n  * [Failing the build on TypeScript compilation error](#failing-the-build-on-typescript-compilation-error)\n  * [`baseUrl` / `paths` module resolution](#baseurl--paths-module-resolution)\n  * [Options](#options)\n  * [Loader Options](#loader-options)\n    + [transpileOnly](#transpileonly)\n    + [happyPackMode](#happypackmode)\n    + [resolveModuleName and resolveTypeReferenceDirective](#resolvemodulename-and-resolvetypereferencedirective)\n    + [getCustomTransformers](#getcustomtransformers)\n    + [logInfoToStdOut](#loginfotostdout)\n    + [logLevel](#loglevel)\n    + [silent](#silent)\n    + [ignoreDiagnostics](#ignorediagnostics)\n    + [reportFiles](#reportfiles)\n    + [compiler](#compiler)\n    + [configFile](#configfile)\n    + [colors](#colors)\n    + [errorFormatter](#errorformatter)\n    + [compilerOptions](#compileroptions)\n    + [instance](#instance)\n    + [appendTsSuffixTo](#appendtssuffixto)\n    + [appendTsxSuffixTo](#appendtsxsuffixto)\n    + [onlyCompileBundledFiles](#onlycompilebundledfiles)\n    + [allowTsInNodeModules](#allowtsinnodemodules)\n    + [context](#context)\n    + [experimentalFileCaching](#experimentalfilecaching)\n    + [projectReferences](#projectreferences)\n  * [Usage with webpack watch](#usage-with-webpack-watch)\n  * [Hot Module replacement](#hot-module-replacement)\n- [Contributing](#contributing)\n- [License](#license)\n\n<!-- tocstop -->\n\n## Getting Started\n\n### Installation\n\n```\nyarn add ts-loader --dev\n```\n\nor\n\n```\nnpm install ts-loader --save-dev\n```\n\nYou will also need to install TypeScript if you have not already.\n\n```\nyarn add typescript --dev\n```\n\nor\n\n```\nnpm install typescript --save-dev\n```\n\n### Running\n\nUse webpack like normal, including `webpack --watch` and `webpack-dev-server`, or through another\nbuild system using the [Node.js API](http://webpack.github.io/docs/node.js-api.html).\n\n### Examples\n\nWe have a number of example setups to accommodate different workflows. Our examples can be found [here](examples/).\n\nWe probably have more examples than we need.  That said, here's a good way to get started:\n\n- I want the simplest setup going.  Use \"[vanilla](examples/vanilla)\" `ts-loader`\n- I want the fastest compilation that's available.  Use [fork-ts-checker-webpack-plugin](https://github.com/Realytics/fork-ts-checker-webpack-plugin).  It performs type checking in a separate process with `ts-loader` just handling transpilation.\n\n### Faster Builds\n\nAs your project becomes bigger, compilation time increases linearly. It's because typescript's semantic checker has to inspect all files on every rebuild. The simple solution is to disable it by using the `transpileOnly: true` option, but doing so leaves you without type checking and *will not output declaration files*.\n\nYou probably don't want to give up type checking; that's rather the point of TypeScript. So what you can do is use the [fork-ts-checker-webpack-plugin](https://github.com/Realytics/fork-ts-checker-webpack-plugin). It runs the type checker on a separate process, so your build remains fast thanks to `transpileOnly: true` but you still have the type checking. Also, the plugin has several optimizations to make incremental type checking faster (AST cache, multiple workers).\n\nIf you'd like to see a simple setup take a look at [our simple example](examples/fork-ts-checker-webpack-plugin/). For a more complex setup take a look at our [more involved example](examples/react-babel-karma-gulp).\n\n### Yarn Plug\u2019n\u2019Play\n\n`ts-loader` supports [Yarn Plug\u2019n\u2019Play](https://yarnpkg.com/en/docs/pnp).  The recommended way to integrate is using the [pnp-webpack-plugin](https://github.com/arcanis/pnp-webpack-plugin#ts-loader-integration).\n\n### Babel\n\n`ts-loader` works very well in combination with [babel](https://babeljs.io/) and [babel-loader](https://github.com/babel/babel-loader). There is an [example](https://github.com/Microsoft/TypeScriptSamples/tree/master/react-flux-babel-karma) of this in the official [TypeScript Samples](https://github.com/Microsoft/TypeScriptSamples). Alternatively take a look at our own [example](examples/react-babel-karma-gulp).\n\n### Parallelising Builds\n\nIt's possible to parallelise your builds. Historically this was useful from a performance perspective with webpack 2 / 3.  [With webpack 4+ there appears to be significantly less benefit and perhaps even cost.](https://blog.johnnyreilly.com/2018/12/you-might-not-need-thread-loader.html)\n\nBut if that's what you want to do, there's two ways to achieve this: [happypack](https://github.com/amireh/happypack) and [thread-loader](https://github.com/webpack-contrib/thread-loader). Both should be used in combination with [fork-ts-checker-webpack-plugin](https://github.com/Realytics/fork-ts-checker-webpack-plugin) for typechecking.)\n\nTo read more, look at [this post](https://medium.com/webpack/typescript-webpack-super-pursuit-mode-83cc568dea79) by [@johnny_reilly](https://twitter.com/johnny_reilly) on the webpack publication channel.\n\nIf you'd like find out further ways to improve your build using the watch API then take a look at [this post](https://medium.com/@kenneth_chau/speeding-up-webpack-typescript-incremental-builds-by-7x-3912ba4c1d15) by [@kenneth_chau](https://twitter.com/kenneth_chau).\n\n### Compatibility\n\n* TypeScript: 2.4.1+\n* webpack: 4.x+ (please use `ts-loader` 3.x if you need webpack 2 or 3 support)\n* node: 6.11.5 minimum (aligned with webpack 4)\n\nA full test suite runs each night (and on each pull request). It runs both on [Linux](https://travis-ci.org/TypeStrong/ts-loader) and [Windows](https://ci.appveyor.com/project/JohnReilly/ts-loader), testing `ts-loader` against major releases of TypeScript. The test suite also runs against TypeScript@next (because we want to use it as much as you do).\n\nIf you become aware of issues not caught by the test suite then please let us know. Better yet, write a test and submit it in a PR!\n\n### Configuration\n\n1. Create or update `webpack.config.js` like so:\n\n   ```javascript\n   module.exports = {\n     mode: \"development\",\n     devtool: \"inline-source-map\",\n     entry: \"./app.ts\",\n     output: {\n       filename: \"bundle.js\"\n     },\n     resolve: {\n       // Add `.ts` and `.tsx` as a resolvable extension.\n       extensions: [\".ts\", \".tsx\", \".js\"]\n     },\n     module: {\n       rules: [\n         // all files with a `.ts` or `.tsx` extension will be handled by `ts-loader`\n         { test: /\\.tsx?$/, loader: \"ts-loader\" }\n       ]\n     }\n   };\n   ```\n\n2. Add a [`tsconfig.json`](https://www.typescriptlang.org/docs/handbook/tsconfig-json.html) file. (The one below is super simple; but you can tweak this to your hearts desire)\n\n   ```json\n   {\n     \"compilerOptions\": {\n       \"sourceMap\": true\n     }\n   }\n   ```\n\nThe [tsconfig.json](http://www.typescriptlang.org/docs/handbook/tsconfig-json.html) file controls\nTypeScript-related options so that your IDE, the `tsc` command, and this loader all share the\nsame options.\n\n#### `devtool` / sourcemaps\n\nIf you want to be able to debug your original source then you can thanks to the magic of sourcemaps. There are 2 steps to getting this set up with `ts-loader` and webpack.\n\nFirst, for `ts-loader` to produce **sourcemaps**, you will need to set the [tsconfig.json](http://www.typescriptlang.org/docs/handbook/tsconfig-json.html) option as `\"sourceMap\": true`.\n\nSecond, you need to set the `devtool` option in your `webpack.config.js` to support the type of sourcemaps you want. To make your choice have a read of the [`devtool` webpack docs](https://webpack.js.org/configuration/devtool/). You may be somewhat daunted by the choice available. You may also want to vary the sourcemap strategy depending on your build environment. Here are some example strategies for different environments:\n\n* `devtool: 'inline-source-map'` - Solid sourcemap support; the best \"all-rounder\". Works well with karma-webpack (not all strategies do)\n* `devtool: 'cheap-module-eval-source-map'` - Best support for sourcemaps whilst debugging.\n* `devtool: 'source-map'` - Approach that plays well with UglifyJsPlugin; typically you might use this in Production\n\n### Code Splitting and Loading Other Resources\n\nLoading css and other resources is possible but you will need to make sure that\nyou have defined the `require` function in a [declaration file](https://www.typescriptlang.org/docs/handbook/writing-declaration-files.html).\n\n```typescript\ndeclare var require: {\n  <T>(path: string): T;\n  (paths: string[], callback: (...modules: any[]) => void): void;\n  ensure: (\n    paths: string[],\n    callback: (require: <T>(path: string) => T) => void\n  ) => void;\n};\n```\n\nThen you can simply require assets or chunks per the [webpack documentation](https://webpack.js.org/guides/code-splitting/).\n\n```javascript\nrequire(\"!style!css!./style.css\");\n```\n\nThe same basic process is required for code splitting. In this case, you `import` modules you need but you\ndon't directly use them. Instead you require them at [split points](http://webpack.github.io/docs/code-splitting.html#defining-a-split-point). See [this example](test/comparison-tests/codeSplitting) and [this example](test/comparison-tests/es6codeSplitting) for more details.\n\n[TypeScript 2.4 provides support for ECMAScript's new `import()` calls. These calls import a module and return a promise to that module.](https://blogs.msdn.microsoft.com/typescript/2017/06/12/announcing-typescript-2-4-rc/) This is also supported in webpack - details on usage can be found [here](https://webpack.js.org/guides/code-splitting-async/#dynamic-import-import-). Happy code splitting!\n\n### Declarations (.d.ts)\n\nTo output a built .d.ts file, you can set `\"declaration\": true` in your tsconfig, and use the [DeclarationBundlerPlugin](https://www.npmjs.com/package/declaration-bundler-webpack-plugin) in your webpack config.\n\n### Failing the build on TypeScript compilation error\n\nThe build **should** fail on TypeScript compilation errors as of webpack 2. If for some reason it does not, you can use the [webpack-fail-plugin](https://www.npmjs.com/package/webpack-fail-plugin).\n\nFor more background have a read of [this issue](https://github.com/TypeStrong/ts-loader/issues/108).\n\n### `baseUrl` / `paths` module resolution\n\nIf you want to resolve modules according to `baseUrl` and `paths` in your `tsconfig.json` then you can use the [tsconfig-paths-webpack-plugin](https://www.npmjs.com/package/tsconfig-paths-webpack-plugin) package. For details about this functionality, see the [module resolution documentation](https://www.typescriptlang.org/docs/handbook/module-resolution.html#base-url).\n\nThis feature requires webpack 2.1+ and TypeScript 2.0+. Use the config below or check the [package](https://github.com/dividab/tsconfig-paths-webpack-plugin/blob/master/README.md) for more information on usage.\n\n```javascript\nconst TsconfigPathsPlugin = require('tsconfig-paths-webpack-plugin');\n\nmodule.exports = {\n  ...\n  resolve: {\n    plugins: [new TsconfigPathsPlugin({ /*configFile: \"./path/to/tsconfig.json\" */ })]\n  }\n  ...\n}\n```\n\n### Options\n\nThere are two types of options: TypeScript options (aka \"compiler options\") and loader options. TypeScript options should be set using a tsconfig.json file. Loader options can be specified through the `options` property in the webpack configuration:\n\n```javascript\nmodule.exports = {\n  ...\n  module: {\n    rules: [\n      {\n        test: /\\.tsx?$/,\n        use: [\n          {\n            loader: 'ts-loader',\n            options: {\n              transpileOnly: true\n            }\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\n### Loader Options\n\n#### transpileOnly\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nIf you want to speed up compilation significantly you can set this flag.\nHowever, many of the benefits you get from static type checking between\ndifferent dependencies in your application will be lost.\n\nIt's advisable to use `transpileOnly` alongside the [fork-ts-checker-webpack-plugin](https://github.com/Realytics/fork-ts-checker-webpack-plugin) to get full type checking again. To see what this looks like in practice then either take a look at [our simple example](examples/fork-ts-checker-webpack-plugin). For a more complex setup take a look at our [more involved example](examples/react-babel-karma-gulp).\n\nIf you enable this option, webpack 4 will give you \"export not found\" warnings any time you re-export a type:\n\n```\nWARNING in ./src/bar.ts\n1:0-34 \"export 'IFoo' was not found in './foo'\n @ ./src/bar.ts\n @ ./src/index.ts\n```\n\nThe reason this happens is that when typescript doesn't do a full type check, it does not have enough information to determine whether an imported name is a type or not, so when the name is then exported, typescript has no choice but to emit the export. Fortunately, the extraneous export should not be harmful, so you can just suppress these warnings:\n\n```javascript\nmodule.exports = {\n  ...\n  stats: {\n    warningsFilter: /export .* was not found in/\n  }\n}\n```\n\n#### happyPackMode\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nIf you're using [HappyPack](https://github.com/amireh/happypack) or [thread-loader](https://github.com/webpack-contrib/thread-loader) to parallise your builds then you'll need to set this to `true`. This implicitly sets `*transpileOnly*` to `true` and **WARNING!** stops registering **_all_** errors to webpack.\n\nIt's advisable to use this with the [fork-ts-checker-webpack-plugin](https://github.com/Realytics/fork-ts-checker-webpack-plugin) to get full type checking again. To see what this looks like in practice then either take a look at [our simple thread-loader example](examples/thread-loader). **_IMPORTANT_**: If you are using fork-ts-checker-webpack-plugin alongside HappyPack or thread-loader then ensure you set the `checkSyntacticErrors` option like so:\n\n```javascript\n        new ForkTsCheckerWebpackPlugin({ checkSyntacticErrors: true })\n```\n\nThis will ensure that the plugin checks for both syntactic errors (eg `const array = [{} {}];`) and semantic errors (eg `const x: number = '1';`). By default the plugin only checks for semantic errors (as when used with `ts-loader` in `transpileOnly` mode, `ts-loader` will still report syntactic errors).\n\nAlso, if you are using `thread-loader` in watch mode, remember to set `poolTimeout: Infinity` so workers don't die.\n\n#### resolveModuleName and resolveTypeReferenceDirective\n\nThese options should be functions which will be used to resolve the import statements and the `<reference types=\"...\">` directives instead of the default TypeScript implementation. It's not intended that these will typically be used by a user of `ts-loader` - they exist to facilitate functionality such as [Yarn Plug\u2019n\u2019Play](https://yarnpkg.com/en/docs/pnp).\n\n#### getCustomTransformers\n| Type |\n|------|\n| ` (program: Program) => { before?: TransformerFactory<SourceFile>[]; after?: TransformerFactory<SourceFile>[]; } ` |\n\nProvide custom transformers - only compatible with TypeScript 2.3+ (and 2.4 if using `transpileOnly` mode). For example usage take a look at [typescript-plugin-styled-components](https://github.com/Igorbek/typescript-plugin-styled-components) or our [test](test/comparison-tests/customTransformer).\n\nYou can also pass a path string to locate a js module file which exports the function described above, this useful especially in `happyPackMode`. (Because forked processes cannot serialize functions see more at [related issue](https://github.com/Igorbek/typescript-plugin-styled-components/issues/6#issue-303387183))\n\n#### logInfoToStdOut\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nThis is important if you read from stdout or stderr and for proper error handling.\nThe default value ensures that you can read from stdout e.g. via pipes or you use webpack -j to generate json output.\n\n#### logLevel\n| Type | Default Value |\n|------|--------------|\n| `string` | `warn` |\n\nCan be `info`, `warn` or `error` which limits the log output to the specified log level.\nBeware of the fact that errors are written to stderr and everything else is written to stderr (or stdout if logInfoToStdOut is true).\n\n#### silent\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nIf `true`, no console.log messages will be emitted. Note that most error\nmessages are emitted via webpack which is not affected by this flag.\n\n#### ignoreDiagnostics\n| Type | Default Value |\n|------|--------------|\n| `number[]` | `[]`|\n\nYou can squelch certain TypeScript errors by specifying an array of diagnostic\ncodes to ignore.\n\n#### reportFiles\n| Type | Default Value |\n|------|--------------|\n| `string[]` | `[]`|\n\nOnly report errors on files matching these glob patterns.\n\n```javascript\n  // in webpack.config.js\n  {\n    test: /\\.ts$/,\n    loader: 'ts-loader',\n    options: { reportFiles: ['src/**/*.{ts,tsx}', '!src/skip.ts'] }\n  }\n```\n\nThis can be useful when certain types definitions have errors that are not fatal to your application.\n\n#### compiler\n| Type | Default Value |\n|------|--------------|\n| `string` | `'typescript'`|\n\nAllows use of TypeScript compilers other than the official one. Should be\nset to the NPM name of the compiler, eg [`ntypescript`](https://github.com/basarat/ntypescript).\n\n#### configFile\n| Type | Default Value |\n|------|--------------|\n| `string` | `'tsconfig.json'`|\n\nAllows you to specify where to find the TypeScript configuration file.\n\nYou may provide\n\n* just a file name. The loader then will search for the config file of each entry point in the respective entry point's containing folder. If a config file cannot be found there, it will travel up the parent directory chain and look for the config file in those folders.\n* a relative path to the configuration file. It will be resolved relative to the respective `.ts` entry file.\n* an absolute path to the configuration file.\n\nPlease note, that if the configuration file is outside of your project directory, you might need to set the `context` option to avoid TypeScript issues (like TS18003).\nIn this case the `configFile` should point to the `tsconfig.json` and `context` to the project root.\n\n#### colors\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `true`|\n\nIf `false`, disables built-in colors in logger messages.\n\n#### errorFormatter\n| Type | Default Value |\n|------|--------------|\n| `(message: ErrorInfo, colors: boolean) => string` | `undefined`|\n\nBy default `ts-loader` formats TypeScript compiler output for an error or a warning in the style:\n\n```\n[tsl] ERROR in myFile.ts(3,14)\n      TS4711: you did something very wrong\n```\n\nIf that format is not to your taste you can supply your own formatter using the `errorFormatter` option. Below is a template for a custom error formatter. Please note that the `colors` parameter is an instance of [`chalk`](https://github.com/chalk/chalk) which you can use to color your output. (This instance will respect the `colors` option.)\n\n```javascript\nfunction customErrorFormatter(error, colors) {\n  const messageColor =\n    error.severity === \"warning\" ? colors.bold.yellow : colors.bold.red;\n  return (\n    \"Does not compute.... \" +\n    messageColor(Object.keys(error).map(key => `${key}: ${error[key]}`))\n  );\n}\n```\n\nIf the above formatter received an error like this:\n\n```json\n{\n  \"code\":2307,\n  \"severity\": \"error\",\n  \"content\": \"Cannot find module 'components/myComponent2'.\",\n  \"file\":\"/.test/errorFormatter/app.ts\",\n  \"line\":2,\n  \"character\":31\n}\n```\n\nIt would produce an error message that said:\n\n```\nDoes not compute.... code: 2307,severity: error,content: Cannot find module 'components/myComponent2'.,file: /.test/errorFormatter/app.ts,line: 2,character: 31\n```\n\nAnd the bit after \"Does not compute.... \" would be red.\n\n#### compilerOptions\n| Type | Default Value |\n|------|--------------|\n| `object` | `{}`|\n\nAllows overriding TypeScript options. Should be specified in the same format\nas you would do for the `compilerOptions` property in tsconfig.json.\n\n#### instance\n| Type | Default Value |\n|------|--------------|\n| `string` | `TODO`|\n\nAdvanced option to force files to go through different instances of the\nTypeScript compiler. Can be used to force segregation between different parts\nof your code.\n\n#### appendTsSuffixTo\n| Type | Default Value |\n|------|--------------|\n| `RegExp[]` | `[]`|\n\n#### appendTsxSuffixTo\n| Type | Default Value |\n|------|--------------|\n| `RegExp[]` | `[]`|\n\nA list of regular expressions to be matched against filename. If filename matches one of the regular expressions, a `.ts` or `.tsx` suffix will be appended to that filename.\n\nThis is useful for `*.vue` [file format](https://vuejs.org/v2/guide/single-file-components.html) for now. (Probably will benefit from the new single file format in the future.)\n\nExample:\n\nwebpack.config.js:\n\n```javascript\nmodule.exports = {\n  entry: \"./index.vue\",\n  output: { filename: \"bundle.js\" },\n  resolve: {\n    extensions: [\".ts\", \".vue\"]\n  },\n  module: {\n    rules: [\n      { test: /\\.vue$/, loader: \"vue-loader\" },\n      {\n        test: /\\.ts$/,\n        loader: \"ts-loader\",\n        options: { appendTsSuffixTo: [/\\.vue$/] }\n      }\n    ]\n  }\n};\n```\n\nindex.vue\n\n```vue\n<template><p>hello {{msg}}</p></template>\n<script lang=\"ts\">\nexport default {\n  data(): Object {\n    return {\n      msg: \"world\"\n    };\n  }\n};\n</script>\n```\n\nWe can handle `.tsx` by quite similar way:\n\nwebpack.config.js:\n\n```javascript\nmodule.exports = {\n    entry: './index.vue',\n    output: { filename: 'bundle.js' },\n    resolve: {\n        extensions: ['.ts', '.tsx', '.vue', '.vuex']\n    },\n    module: {\n        rules: [\n            { test: /\\.vue$/, loader: 'vue-loader',\n              options: {\n                loaders: {\n                  ts: 'ts-loader',\n                  tsx: 'babel-loader!ts-loader',\n                }\n              }\n            },\n            { test: /\\.ts$/, loader: 'ts-loader', options: { appendTsSuffixTo: [/TS\\.vue$/] } }\n            { test: /\\.tsx$/, loader: 'babel-loader!ts-loader', options: { appendTsxSuffixTo: [/TSX\\.vue$/] } }\n        ]\n    }\n}\n```\n\ntsconfig.json (set `jsx` option to `preserve` to let babel handle jsx)\n\n```json\n{\n  \"compilerOptions\": {\n    \"jsx\": \"preserve\"\n  }\n}\n```\n\nindex.vue\n\n```vue\n<script lang=\"tsx\">\nexport default {\n  functional: true,\n  render(h, c) {\n    return (<div>Content</div>);\n  }\n}\n</script>\n```\n\nOr if you want to use only tsx, just use the `appendTsxSuffixTo` option only:\n\n```javascript\n            { test: /\\.ts$/, loader: 'ts-loader' }\n            { test: /\\.tsx$/, loader: 'babel-loader!ts-loader', options: { appendTsxSuffixTo: [/\\.vue$/] } }\n```\n\n#### onlyCompileBundledFiles\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nThe default behavior of `ts-loader` is to act as a drop-in replacement for the `tsc` command,\nso it respects the `include`, `files`, and `exclude` options in your `tsconfig.json`, loading\nany files specified by those options. The `onlyCompileBundledFiles` option modifies this behavior,\nloading only those files that are actually bundled by webpack, as well as any `.d.ts` files included\nby the `tsconfig.json` settings. `.d.ts` files are still included because they may be needed for\ncompilation without being explicitly imported, and therefore not picked up by webpack.\n\n#### allowTsInNodeModules\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nBy default, `ts-loader` will not compile `.ts` files in `node_modules`.\nYou should not need to recompile `.ts` files there, but if you really want to, use this option.\nNote that this option acts as a *whitelist* - any modules you desire to import must be included in\nthe `\"files\"` or `\"include\"` block of your project's `tsconfig.json`.\n\nSee: [https://github.com/Microsoft/TypeScript/issues/12358](https://github.com/Microsoft/TypeScript/issues/12358)\n\n```javascript\n  // in webpack.config.js\n  {\n    test: /\\.ts$/,\n    loader: 'ts-loader',\n    options: { allowTsInNodeModules: true }\n  }\n```\n\nAnd in your `tsconfig.json`:\n\n```json\n  {\n    \"include\": [\n      \"node_modules/whitelisted_module.ts\"\n    ],\n    \"files\": [\n      \"node_modules/my_module/whitelisted_file.ts\"\n    ]\n  }\n```\n\n#### context\n| Type | Default Value |\n|------|--------------|\n| `string` | `undefined`|\n\nIf set, will parse the TypeScript configuration file with given **absolute path** as base path.\nPer default the directory of the configuration file is used as base path. Relative paths in the configuration\nfile are resolved with respect to the base path when parsed. Option `context` allows to set option\n`configFile` to a path other than the project root (e.g. a NPM package), while the base path for `ts-loader`\ncan remain the project root.\n\nKeep in mind that **not** having a `tsconfig.json` in your project root can cause different behaviour between `ts-loader` and `tsc`.\nWhen using editors like `VS Code` it is advised to add a `tsconfig.json` file to the root of the project and extend the config file\nreferenced in option `configFile`. For more information please [read the PR](https://github.com/TypeStrong/ts-loader/pull/681) that\nis the base and [read the PR](https://github.com/TypeStrong/ts-loader/pull/688) that contributed this option.\n\nwebpack:\n\n```javascript\n{\n  loader: require.resolve('ts-loader'),\n  options: {\n    context: __dirname,\n    configFile: require.resolve('ts-config-react-app')\n  }\n}\n```\n\nExtending `tsconfig.json`:\n\n```json\n{ \"extends\": \"./node_modules/ts-config-react-app/index\" }\n```\n\nNote that changes in the extending file while not be respected by `ts-loader`. Its purpose is to satisfy the code editor.\n\n#### experimentalFileCaching\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `true`|\n\nBy default whenever the TypeScript compiler needs to check that a file/directory exists or resolve symlinks it makes syscalls. It does not cache the result of these operations and this may result in many syscalls with the same arguments ([see comment](https://github.com/TypeStrong/ts-loader/issues/825#issue-354725524) with example).\nIn some cases it may produce performance degradation.\n\nThis flag enables caching for some FS-functions like `fileExists`, `realpath` and `directoryExists` for TypeScript compiler. Note that caches are cleared between compilations.\n\n#### projectReferences\n| Type | Default Value |\n|------|--------------|\n| `boolean` | `false`|\n\nts-loader has opt-in support for [project references](https://www.typescriptlang.org/docs/handbook/project-references.html). With this configuration option enabled, `ts-loader` will incrementally rebuild upstream projects the same way `tsc --build` does. Otherwise, source files in referenced projects will be treated as if they\u2019re part of the root project.\n\n### Usage with webpack watch\n\nBecause TS will generate .js and .d.ts files, you should ignore these files, otherwise watchers may go into an infinite watch loop. For example, when using webpack, you may wish to add this to your webpack.conf.js file:\n\n```javascript\n plugins: [\n   new webpack.WatchIgnorePlugin([\n     /\\.js$/,\n     /\\.d\\.ts$/\n   ])\n ],\n```\n\nIt's worth noting that use of the `LoaderOptionsPlugin` is [only supposed to be a stopgap measure](https://webpack.js.org/plugins/loader-options-plugin/). You may want to look at removing it entirely.\n\n### Hot Module replacement\n\nWe do not support HMR as we did not yet work out a reliable way how to set it up.\n\nIf you want to give `webpack-dev-server` HMR a try, follow the official [webpack HMR guide](https://webpack.js.org/guides/hot-module-replacement/), then tweak a few config options for `ts-loader`:\n\n1. Set `transpileOnly` to `true` (see [transpileOnly](#transpileonly) for config details and recommendations above).\n2. Inside your HMR acceptance callback function, maybe re-require the module that was replaced.\n\n## Contributing\n\nThis is your TypeScript loader! We want you to help make it even better. Please feel free to contribute; see the [contributor's guide](CONTRIBUTING.md) to get started.\n\n## License\n\nMIT License"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1803318}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 9223863}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26905082}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 46313674}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 77888223}], "dependentsCount": 1951, "starsCount": 29}, "github": {"starsCount": 2623, "forksCount": 334, "subscribersCount": 43, "issues": {"count": 1127, "openCount": 46, "distribution": {"3600": 144, "10800": 76, "32400": 109, "97200": 119, "291600": 93, "874800": 118, "2624400": 110, "7873200": 128, "23619600": 106, "70858800": 78, "212576400": 46}, "isDisabled": false}, "contributors": [{"username": "johnnyreilly", "commitsCount": 466}, {"username": "jbrantly", "commitsCount": 237}, {"username": "andrewbranch", "commitsCount": 46}, {"username": "sheetalkamat", "commitsCount": 22}, {"username": "christiantinauer", "commitsCount": 8}, {"username": "HerringtonDarkholme", "commitsCount": 6}, {"username": "freeman", "commitsCount": 6}, {"username": "smphhh", "commitsCount": 6}, {"username": "loilo", "commitsCount": 5}, {"username": "timocov", "commitsCount": 5}, {"username": "greenkeeper[bot]", "commitsCount": 4}, {"username": "use-strict", "commitsCount": 4}, {"username": "Brooooooklyn", "commitsCount": 3}, {"username": "JonWallsten", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "greenkeeperio-bot", "commitsCount": 3}, {"username": "jsjoeio", "commitsCount": 3}, {"username": "maier49", "commitsCount": 3}, {"username": "trodrigues", "commitsCount": 3}, {"username": "Hotell", "commitsCount": 2}, {"username": "WearyMonkey", "commitsCount": 2}, {"username": "appzuka", "commitsCount": 2}, {"username": "arcanis", "commitsCount": 2}, {"username": "basarat", "commitsCount": 2}, {"username": "cspotcode", "commitsCount": 2}, {"username": "mblandfo", "commitsCount": 2}, {"username": "opichals", "commitsCount": 2}, {"username": "ybiquitous", "commitsCount": 2}, {"username": "17cupsofcoffee", "commitsCount": 1}, {"username": "Alan-Cha", "commitsCount": 1}, {"username": "Blechhirn", "commitsCount": 1}, {"username": "FLGMwt", "commitsCount": 1}, {"username": "Kinrany", "commitsCount": 1}, {"username": "LukeSheard", "commitsCount": 1}, {"username": "MLoughry", "commitsCount": 1}, {"username": "NTARelix", "commitsCount": 1}, {"username": "ORESoftware", "commitsCount": 1}, {"username": "Pajn", "commitsCount": 1}, {"username": "Strate", "commitsCount": 1}, {"username": "ThYpHo0n", "commitsCount": 1}, {"username": "WillMartin", "commitsCount": 1}, {"username": "Zn4rK", "commitsCount": 1}, {"username": "abergs", "commitsCount": 1}, {"username": "aelawson", "commitsCount": 1}, {"username": "andersekdahl", "commitsCount": 1}, {"username": "apfelbox", "commitsCount": 1}, {"username": "arusakov", "commitsCount": 1}, {"username": "bancek", "commitsCount": 1}, {"username": "berickson1", "commitsCount": 1}, {"username": "bestseob93", "commitsCount": 1}, {"username": "blakeembrey", "commitsCount": 1}, {"username": "datenreisender", "commitsCount": 1}, {"username": "davazp", "commitsCount": 1}, {"username": "davidshepherd7", "commitsCount": 1}, {"username": "develar", "commitsCount": 1}, {"username": "dizel3d", "commitsCount": 1}, {"username": "dmwyatt", "commitsCount": 1}, {"username": "donaldpipowitch", "commitsCount": 1}, {"username": "elyalvarado", "commitsCount": 1}, {"username": "fa93hws", "commitsCount": 1}, {"username": "gamli", "commitsCount": 1}, {"username": "gsteacy", "commitsCount": 1}, {"username": "gustavderdrache", "commitsCount": 1}, {"username": "gvinaccia", "commitsCount": 1}, {"username": "hawkrives", "commitsCount": 1}, {"username": "herschel666", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "iorate", "commitsCount": 1}, {"username": "jonaskello", "commitsCount": 1}, {"username": "jraller", "commitsCount": 1}, {"username": "jtribble", "commitsCount": 1}, {"username": "kenotron", "commitsCount": 1}, {"username": "konpikwastaken", "commitsCount": 1}, {"username": "longlho", "commitsCount": 1}, {"username": "magetron", "commitsCount": 1}, {"username": "malash", "commitsCount": 1}, {"username": "mengxy", "commitsCount": 1}, {"username": "meyer", "commitsCount": 1}, {"username": "nil4", "commitsCount": 1}, {"username": "nojvek", "commitsCount": 1}, {"username": "onigoetz", "commitsCount": 1}, {"username": "originalhat", "commitsCount": 1}, {"username": "piotr-oles", "commitsCount": 1}, {"username": "reinholdk", "commitsCount": 1}, {"username": "rob-bateman", "commitsCount": 1}, {"username": "sajadtorkamani", "commitsCount": 1}, {"username": "samal84", "commitsCount": 1}, {"username": "schmuli", "commitsCount": 1}, {"username": "schneiderl", "commitsCount": 1}, {"username": "stoneChen", "commitsCount": 1}, {"username": "thomasguillory", "commitsCount": 1}, {"username": "tomcumming", "commitsCount": 1}, {"username": "toolness", "commitsCount": 1}, {"username": "univerio", "commitsCount": 1}, {"username": "vagusX", "commitsCount": 1}, {"username": "vhqtvn", "commitsCount": 1}, {"username": "wowczarczyk", "commitsCount": 1}, {"username": "xbtsw", "commitsCount": 1}, {"username": "yyx990803", "commitsCount": 1}, {"username": "zinserjan", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 11}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 15}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 58}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 29931, "testsSize": 11770008, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/ts-loader.svg", "shields": "https://img.shields.io/npm/v/ts-loader.svg", "content": "https://img.shields.io/npm/v/ts-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/TypeStrong/ts-loader.svg?branch=master", "service": "https://api.travis-ci.org/TypeStrong/ts-loader.svg?branch=master", "shields": "https://img.shields.io/travis/TypeStrong/ts-loader/master.svg", "content": "https://img.shields.io/travis/TypeStrong/ts-loader/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/bjh0r0d4ckspgkh9/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/bjh0r0d4ckspgkh9/branch/master", "shields": "https://img.shields.io/appveyor/ci/bjh0r0d4ckspgkh9/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/bjh0r0d4ckspgkh9/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "http://img.shields.io/npm/dm/ts-loader.svg", "shields": "https://img.shields.io/npm/dm/ts-loader.svg", "content": "https://img.shields.io/npm/dm/ts-loader.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["prettier", "tslint"], "coverage": 0.31, "outdatedDependencies": {"chalk": {"required": "^2.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "semver": {"required": "^6.0.0", "stable": "7.3.2", "latest": "7.3.2"}, "loader-utils": {"required": "^1.0.2", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7715, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 3129, "downloadsCount": 8968360.666666666, "downloadsAcceleration": 34493.876331811254, "dependentsCount": 1951}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8414212328767123, "openIssues": 1, "issuesDistribution": 0.08591016783854533}}, "score": {"final": 0.7611661925754074, "detail": {"quality": 0.9078386063695532, "popularity": 0.643496255219395, "maintenance": 0.7531169181078662}}}}, {"zone.js": {"analyzedAt": "2020-05-03T05:49:32.904Z", "collected": {"metadata": {"name": "zone.js", "scope": "unscoped", "version": "0.10.3", "description": "Zones for JavaScript", "date": "2020-03-17T16:16:28.816Z", "author": {"name": "Brian Ford"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angularcore", "email": "angular-core+npm@google.com"}, {"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git://github.com/angular/angular.git", "directory": "packages/zone.js"}, "links": {"npm": "https://www.npmjs.com/package/zone.js", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "devDependencies": {"@types/node": "^10.9.4", "domino": "2.1.2", "jest": "^25.1.0", "mocha": "^3.1.2", "mock-require": "3.0.3", "promises-aplus-tests": "^2.1.2", "typescript": "~3.4.2"}, "releases": [{"from": "2020-04-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 0}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 2}, {"from": "2019-11-05T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 2}, {"from": "2019-05-04T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 5}, {"from": "2018-05-04T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 10}], "hasSelectiveFiles": true, "readme": "# Zone.js\n\n[![CDNJS](https://img.shields.io/cdnjs/v/zone.js.svg)](https://cdnjs.com/libraries/zone.js)\n\nImplements _Zones_ for JavaScript, inspired by [Dart](https://dart.dev/articles/archive/zones).\n\n> If you're using zone.js via unpkg (i.e. using `https://unpkg.com/zone.js`)\n> and you're using any of the following libraries, make sure you import them first\n\n> * 'newrelic' as it patches global.Promise before zone.js does\n> * 'async-listener' as it patches global.setTimeout, global.setInterval before zone.js does\n> * 'continuation-local-storage' as it uses async-listener\n\n# NEW Zone.js POST-v0.6.0\n\nSee the new API [here](./lib/zone.ts).\n\nRead up on [Zone Primer](https://docs.google.com/document/d/1F5Ug0jcrm031vhSMJEOgp1l-Is-Vf0UCNDY-LsQtAIY).\n\n## What's a Zone?\n\nA Zone is an execution context that persists across async tasks.\nYou can think of it as [thread-local storage](http://en.wikipedia.org/wiki/Thread-local_storage) for JavaScript VMs.\n\nSee this video from ng-conf 2014 for a detailed explanation:\n\n[![screenshot of the zone.js presentation and ng-conf 2014](./presentation.png)](//www.youtube.com/watch?v=3IqtmUscE_U&t=150)\n\n## See also\n* [async-listener](https://github.com/othiym23/async-listener) - a similar library for node\n* [Async stack traces in Chrome](http://www.html5rocks.com/en/tutorials/developertools/async-call-stack/)\n* [strongloop/zone](https://github.com/strongloop/zone) (Deprecated)\n* [vizone](https://github.com/gilbox/vizone) - control flow visualizer that uses zone.js\n\n## Standard API support\n\nzone.js patched most standard web APIs (such as DOM events, `XMLHttpRequest`, ...) and nodejs APIs\n(`EventEmitter`, `fs`, ...), for more details, please see [STANDARD-APIS.md](STANDARD-APIS.md).\n\n## Nonstandard API support\n\nWe are adding support to some nonstandard APIs, such as MediaQuery and\nNotification. Please see [NON-STANDARD-APIS.md](NON-STANDARD-APIS.md) for more details.\n\n## Examples\n\nYou can find some samples to describe how to use zone.js in [SAMPLE.md](SAMPLE.md).\n\n## Modules\n\nzone.js patches the async APIs described above, but those patches will have some overhead.\nStarting from zone.js v0.8.9, you can choose which web API module you want to patch.\nFor more details, please\nsee [MODULE.md](MODULE.md).\n\n## Bundles\nThere are several bundles under `dist` folder.\n\n|Bundle|Summary|\n|---|---|\n|zone.js|the default bundle, contains the most used APIs such as `setTimeout/Promise/EventTarget...`, also this bundle supports all evergreen and legacy (IE/Legacy Firefox/Legacy Safari) Browsers|\n|zone-evergreen.js|the bundle for evergreen browsers, doesn't include the `patch` for `legacy` browsers such as `IE` or old versions of `Firefox/Safari`|\n|zone-legacy.js|the patch bundle for legacy browsers, only includes the `patch` for `legacy` browsers such as `IE` or old versions of `Firefox/Safari`. This bundle must be loaded after `zone-evergreen.js`, **`zone.js`=`zone-evergreen.js` + `zone-legacy.js`**|\n|zone-testing.js|the bundle for zone testing support, including `jasmine/mocha` support and `async/fakeAsync/sync` test utilities|\n|zone-externs.js|the API definitions for `closure compiler`|\n\nAnd here are the additional optional patches not included in the main zone.js bundles\n\n|Patch|Summary|\n|---|---|\n|webapis-media-query.js|patch for `MediaQuery APIs`|\n|webapis-notification.js|patch for `Notification APIs`|\n|webapis-rtc-peer-connection.js|patch for `RTCPeerConnection APIs`|\n|webapis-shadydom.js|patch for `Shady DOM APIs`|\n|zone-bluebird.js|patch for `Bluebird APIs`|\n|zone-error.js|patch for `Error Global Object`, supports remove `Zone StackTrace`|\n|zone-patch-canvas.js|patch for `Canvas API`|\n|zone-patch-cordova.js|patch for `Cordova API`|\n|zone-patch-electron.js|patch for `Electron API`|\n|zone-patch-fetch.js|patch for `Fetch API`|\n|zone-patch-jsonp.js|utility for `jsonp API`|\n|zone-patch-resize-observer.js|patch for `ResizeObserver API`|\n|zone-patch-rxjs.js|patch for `rxjs API`|\n|zone-patch-rxjs-fake-async.js|patch for `rxjs fakeasync test`|\n|zone-patch-socket-io.js|patch for `socket-io`|\n|zone-patch-user-media.js|patch for `UserMedia API`|\n\n## Promise A+ test passed\n[![Promises/A+ 1.1 compliant](https://promisesaplus.com/assets/logo-small.png)](https://promisesaplus.com/)\n\n## License\nMIT"}, "npm": {"downloads": [{"from": "2020-05-02T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 74554}, {"from": "2020-04-26T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 1454970}, {"from": "2020-04-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 6219332}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 19184455}, {"from": "2019-11-05T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 34296526}, {"from": "2019-05-04T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 62317720}], "dependentsCount": 7558, "starsCount": 25}, "github": {"homepage": "https://angular.io", "starsCount": 60570, "forksCount": 16531, "subscribersCount": 3182, "issues": {"count": 36584, "openCount": 3437, "distribution": {"3600": 3707, "10800": 2561, "32400": 3079, "97200": 4438, "291600": 4418, "874800": 4653, "2624400": 3584, "7873200": 3102, "23619600": 3058, "70858800": 2507, "212576400": 1477}, "isDisabled": false}, "contributors": [{"username": "petebacondarwin", "commitsCount": 1357}, {"username": "gkalpak", "commitsCount": 1217}, {"username": "vsavkin", "commitsCount": 952}, {"username": "IgorMinar", "commitsCount": 917}, {"username": "vicb", "commitsCount": 916}, {"username": "tbosch", "commitsCount": 788}, {"username": "mhevery", "commitsCount": 665}, {"username": "alxhub", "commitsCount": 560}, {"username": "pkozlowski-opensource", "commitsCount": 540}, {"username": "kara", "commitsCount": 501}, {"username": "matsko", "commitsCount": 475}, {"username": "devversion", "commitsCount": 349}, {"username": "chuckjaz", "commitsCount": 336}, {"username": "marclaval", "commitsCount": 310}, {"username": "gregmagolan", "commitsCount": 289}, {"username": "AndrewKushnir", "commitsCount": 240}, {"username": "kyliau", "commitsCount": 214}, {"username": "crisbeto", "commitsCount": 202}, {"username": "jasonaden", "commitsCount": 191}, {"username": "ocombe", "commitsCount": 191}, {"username": "alan-agius4", "commitsCount": 180}, {"username": "jbogarthyde", "commitsCount": 173}, {"username": "JoostK", "commitsCount": 165}, {"username": "josephperrott", "commitsCount": 162}, {"username": "btford", "commitsCount": 152}, {"username": "brandonroberts", "commitsCount": 151}, {"username": "wardbell", "commitsCount": 149}, {"username": "alexeagle", "commitsCount": 147}, {"username": "yjbanov", "commitsCount": 145}, {"username": "filipesilva", "commitsCount": 137}, {"username": "rkirov", "commitsCount": 123}, {"username": "mprobst", "commitsCount": 120}, {"username": "jeffbcross", "commitsCount": 118}, {"username": "benlesh", "commitsCount": 112}, {"username": "kapunahelewong", "commitsCount": 112}, {"username": "sjtrimble", "commitsCount": 112}, {"username": "Foxandxss", "commitsCount": 85}, {"username": "JiaLiPassion", "commitsCount": 85}, {"username": "juliemr", "commitsCount": 79}, {"username": "vikerman", "commitsCount": 79}, {"username": "cexbrayat", "commitsCount": 75}, {"username": "robwormald", "commitsCount": 75}, {"username": "atscott", "commitsCount": 74}, {"username": "ayazhafiz", "commitsCount": 74}, {"username": "PatrickJS", "commitsCount": 73}, {"username": "jelbourn", "commitsCount": 58}, {"username": "sonukapoor", "commitsCount": 48}, {"username": "trotyl", "commitsCount": 44}, {"username": "kevmoo", "commitsCount": 43}, {"username": "naomiblack", "commitsCount": 42}, {"username": "jteplitz", "commitsCount": 41}, {"username": "ajitsinghkaler", "commitsCount": 38}, {"username": "caitp", "commitsCount": 37}, {"username": "StephenFluin", "commitsCount": 34}, {"username": "hansl", "commitsCount": 33}, {"username": "jenniferfell", "commitsCount": 33}, {"username": "chembu", "commitsCount": 32}, {"username": "mgechev", "commitsCount": 31}, {"username": "tinayuangao", "commitsCount": 29}, {"username": "wKoza", "commitsCount": 29}, {"username": "andrewseguin", "commitsCount": 28}, {"username": "alfaproject", "commitsCount": 24}, {"username": "jakemac53", "commitsCount": 24}, {"username": "ivanwonder", "commitsCount": 22}, {"username": "santoshyadav198613", "commitsCount": 21}, {"username": "vojtajina", "commitsCount": 21}, {"username": "Toxicable", "commitsCount": 20}, {"username": "lacolaco", "commitsCount": 20}, {"username": "ttowncompiled", "commitsCount": 20}, {"username": "CaerusKaru", "commitsCount": 19}, {"username": "wagnermaciel", "commitsCount": 19}, {"username": "PascalPrecht", "commitsCount": 17}, {"username": "danielsogl", "commitsCount": 17}, {"username": "kwalrath", "commitsCount": 17}, {"username": "TedSander", "commitsCount": 14}, {"username": "bowenni", "commitsCount": 13}, {"username": "Splaktar", "commitsCount": 12}, {"username": "alfonso-presa", "commitsCount": 12}, {"username": "chalin", "commitsCount": 12}, {"username": "FrederikSchlemmer", "commitsCount": 11}, {"username": "ahasall", "commitsCount": 11}, {"username": "goderbauer", "commitsCount": 11}, {"username": "SekibOmazic", "commitsCount": 10}, {"username": "clydin", "commitsCount": 10}, {"username": "hankduan", "commitsCount": 10}, {"username": "joostme", "commitsCount": 10}, {"username": "manekinekko", "commitsCount": 10}, {"username": "Potapy4", "commitsCount": 9}, {"username": "hterkelsen", "commitsCount": 9}, {"username": "obenbrahim", "commitsCount": 9}, {"username": "Goodwine", "commitsCount": 8}, {"username": "asnowwolf", "commitsCount": 8}, {"username": "chirayuk", "commitsCount": 8}, {"username": "juleskremer", "commitsCount": 8}, {"username": "laskoviymishka", "commitsCount": 8}, {"username": "sarunint", "commitsCount": 8}, {"username": "DanielRuf", "commitsCount": 7}, {"username": "arturovt", "commitsCount": 7}, {"username": "dgp1130", "commitsCount": 7}, {"username": "martinsik", "commitsCount": 7}], "commits": [{"from": "2020-04-26T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 35}, {"from": "2020-04-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 187}, {"from": "2020-02-03T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 673}, {"from": "2019-11-05T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 1604}, {"from": "2019-05-04T00:00:00.000Z", "to": "2020-05-03T00:00:00.000Z", "count": 3497}], "statuses": [{"context": "ci/circleci: saucelabs_view_engine", "state": "success"}, {"context": "ci/circleci: aio_monitoring_next", "state": "success"}, {"context": "ci/circleci: aio_monitoring_stable", "state": "success"}, {"context": "ci/circleci: saucelabs_ivy", "state": "failure"}, {"context": "ci/circleci: setup", "state": "success"}, {"context": "ci/circleci: test_win", "state": "success"}, {"context": "ci/circleci: publish_snapshot", "state": "success"}, {"context": "ci/circleci: deploy_aio", "state": "success"}, {"context": "ci/circleci: test_ivy_aot_win", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: components-repo-unit-tests", "state": "success"}, {"context": "ci/circleci: test_aio_local", "state": "success"}, {"context": "ci/circleci: test_aio", "state": "success"}, {"context": "ci/circleci: test_aio_local_viewengine", "state": "success"}]}, "source": {"files": {"readmeSize": 4275, "testsSize": 732284, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/angular/angular/tree/master.svg?style=shield", "service": "https://circleci.com/gh/angular/angular/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/angular/angular/master.svg", "content": "https://img.shields.io/circleci/project/github/angular/angular/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.532142857142857, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 80408, "downloadsCount": 6394818.333333333, "downloadsAcceleration": 14095.090829528155, "dependentsCount": 7558}, "maintenance": {"releasesFrequency": 0.6599315068493151, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.11096582539670719}}, "score": {"final": 0.7967499810749208, "detail": {"quality": 0.836751330593285, "popularity": 0.7843914087220275, "maintenance": 0.7748216824120734}}}}, {"gulp-uglify": {"analyzedAt": "2020-05-10T08:39:29.393Z", "collected": {"metadata": {"name": "gulp-uglify", "scope": "unscoped", "version": "3.0.2", "description": "Minify files with UglifyJS.", "keywords": ["gulpplugin"], "date": "2019-03-01T19:21:24.904Z", "author": {"name": "Terin Stock", "email": "terinjokes@gmail.com", "username": "terinjokes"}, "publisher": {"username": "terinjokes", "email": "terinjokes@gmail.com"}, "maintainers": [{"username": "terinjokes", "email": "terinjokes@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/terinjokes/gulp-uglify.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-uglify", "homepage": "https://github.com/terinjokes/gulp-uglify/", "repository": "https://github.com/terinjokes/gulp-uglify", "bugs": "https://github.com/terinjokes/gulp-uglify/issues"}, "license": "MIT", "dependencies": {"array-each": "^1.0.1", "extend-shallow": "^3.0.2", "gulplog": "^1.0.0", "has-gulplog": "^0.1.0", "isobject": "^3.0.1", "make-error-cause": "^1.1.1", "safe-buffer": "^5.1.2", "through2": "^2.0.0", "uglify-js": "^3.0.5", "vinyl-sourcemaps-apply": "^0.2.0"}, "devDependencies": {"eslint": "^3.18.0", "eslint-config-prettier": "^2.1.0", "eslint-config-xo": "^0.18.1", "eslint-plugin-no-use-extend-native": "^0.3.12", "eslint-plugin-prettier": "^2.0.1", "eslint-plugin-unicorn": "^2.1.0", "power-assert": "^1.4.1", "prettier": "^1.1.0", "source-list-map": "^1.1.2", "tape": "^4.9.1", "tape-catch": "^1.0.6", "testdouble": "^2.1.2", "vinyl": "^2.0.0"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gulp-uglify [![][travis-shield-img]][travis-shield][![][appveyor-shield-img]][appveyor-shield][![][npm-dl-shield-img]][npm-shield][![][npm-v-shield-img]][npm-shield][![][coveralls-shield-img]][coveralls-shield]\n\n> Minify JavaScript with UglifyJS3.\n\n## Installation\n\nInstall package with NPM and add it to your development dependencies:\n\n`npm install --save-dev gulp-uglify`\n\n## Usage\n\n```javascript\nvar gulp = require('gulp');\nvar uglify = require('gulp-uglify');\nvar pipeline = require('readable-stream').pipeline;\n\ngulp.task('compress', function () {\n  return pipeline(\n        gulp.src('lib/*.js'),\n        uglify(),\n        gulp.dest('dist')\n  );\n});\n```\n\nTo help properly handle error conditions with Node streams, this project\nrecommends the use of\n[`pipeline`](https://nodejs.org/docs/latest/api/stream.html#stream_stream_pipeline_streams_callback),\nfrom [`readable-stream`](https://github.com/nodejs/readable-stream).\n\n## Options\n\nMost of the [minify options](https://github.com/mishoo/UglifyJS2#minify-options) from\nthe UglifyJS API are supported. There are a few exceptions:\n\n1. The `sourceMap` option must not be set, as it will be automatically configured\n   based on your Gulp configuration. See the documentation for [Gulp sourcemaps][gulp-sm].\n\n[gulp-sm]: https://github.com/gulp-sourcemaps/gulp-sourcemaps#usage\n\n## Errors\n\n`gulp-uglify` emits an 'error' event if it is unable to minify a specific file.\nThe GulpUglifyError constructor is exported by this plugin for `instanceof` checks.\nIt contains the following properties:\n\n- `fileName`: The full file path for the file being minified.\n- `cause`: The original UglifyJS error, if available.\n\nMost UglifyJS error messages have the following properties:\n\n- `message` (or `msg`)\n- `filename`\n- `line`\n\nTo see useful error messages, see [Why Use Pipeline?](docs/why-use-pipeline/README.md#why-use-pipeline).\n\n## Using a Different UglifyJS\n\nBy default, `gulp-uglify` uses the version of UglifyJS installed as a dependency.\nIt's possible to configure the use of a different version using the \"composer\" entry point.\n\n```javascript\nvar uglifyjs = require('uglify-js'); // can be a git checkout\n                                     // or another module (such as `uglify-es` for ES6 support)\nvar composer = require('gulp-uglify/composer');\nvar pump = require('pump');\n\nvar minify = composer(uglifyjs, console);\n\ngulp.task('compress', function (cb) {\n  // the same options as described above\n  var options = {};\n\n  pump([\n      gulp.src('lib/*.js'),\n      minify(options),\n      gulp.dest('dist')\n    ],\n    cb\n  );\n});\n```\n\n[travis-shield-img]: https://img.shields.io/travis/terinjokes/gulp-uglify/master.svg?label=Travis%20CI&style=flat-square\n[travis-shield]: https://travis-ci.org/terinjokes/gulp-uglify\n[appveyor-shield-img]: https://img.shields.io/appveyor/ci/terinjokes/gulp-uglify/master.svg?label=AppVeyor&style=flat-square\n[appveyor-shield]: https://ci.appveyor.com/project/terinjokes/gulp-uglify\n[npm-dl-shield-img]: https://img.shields.io/npm/dm/gulp-uglify.svg?style=flat-square\n[npm-shield]: https://yarnpkg.com/en/package/gulp-uglify\n[npm-v-shield-img]: https://img.shields.io/npm/v/gulp-uglify.svg?style=flat-square\n[coveralls-shield-img]: https://img.shields.io/coveralls/terinjokes/gulp-uglify/master.svg?style=flat-square\n[coveralls-shield]: https://coveralls.io/github/terinjokes/gulp-uglify"}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 16841}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 397916}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1656350}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 5275406}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 9946763}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 20911688}], "dependentsCount": 1863, "starsCount": 546}, "github": {"starsCount": 1221, "forksCount": 167, "subscribersCount": 32, "issues": {"count": 361, "openCount": 15, "distribution": {"3600": 66, "10800": 18, "32400": 31, "97200": 37, "291600": 21, "874800": 46, "2624400": 45, "7873200": 51, "23619600": 29, "70858800": 11, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "terinjokes", "commitsCount": 137}, {"username": "greenkeeperio-bot", "commitsCount": 19}, {"username": "floridoo", "commitsCount": 2}, {"username": "zaygraveyard", "commitsCount": 2}, {"username": "HenryGau", "commitsCount": 1}, {"username": "RikHeijdens", "commitsCount": 1}, {"username": "amksd", "commitsCount": 1}, {"username": "ciceropablo", "commitsCount": 1}, {"username": "eowino", "commitsCount": 1}, {"username": "ilkome", "commitsCount": 1}, {"username": "jgoz", "commitsCount": 1}, {"username": "jordansexton", "commitsCount": 1}, {"username": "marcamos", "commitsCount": 1}, {"username": "mems", "commitsCount": 1}, {"username": "odino", "commitsCount": 1}, {"username": "oltodo", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "robrich", "commitsCount": 1}, {"username": "rpalmer57", "commitsCount": 1}, {"username": "tschaub", "commitsCount": 1}, {"username": "vladimirmartsul", "commitsCount": 1}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 3372, "testsSize": 13849, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/terinjokes/gulp-uglify/master.svg?label=Travis%20CI&style=flat-square", "service": "https://api.travis-ci.org/terinjokes/gulp-uglify.svg?branch=master", "shields": "https://img.shields.io/travis/terinjokes/gulp-uglify/master.svg", "content": "https://img.shields.io/travis/terinjokes/gulp-uglify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/terinjokes/gulp-uglify/master.svg?label=AppVeyor&style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/terinjokes/gulp-uglify/branch/master", "shields": "https://img.shields.io/appveyor/ci/terinjokes/gulp-uglify/master.svg", "content": "https://img.shields.io/appveyor/ci/terinjokes/gulp-uglify/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/gulp-uglify.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/gulp-uglify.svg", "content": "https://img.shields.io/npm/dm/gulp-uglify.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/gulp-uglify.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/gulp-uglify.svg", "content": "https://img.shields.io/npm/v/gulp-uglify.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/coveralls/terinjokes/gulp-uglify/master.svg?style=flat-square", "service": "https://coveralls.io/repos/terinjokes/gulp-uglify/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/terinjokes/gulp-uglify/master.svg", "content": "https://img.shields.io/coveralls/terinjokes/gulp-uglify/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"], "coverage": 0.96, "outdatedDependencies": {"isobject": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}, "through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "make-error-cause": {"required": "^1.1.1", "stable": "2.3.0", "latest": "2.3.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 1987, "downloadsCount": 1758468.6666666667, "downloadsAcceleration": -1028.282667427704, "dependentsCount": 1863}, "maintenance": {"releasesFrequency": 0.03698630136986302, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0.5799520454501734}}, "score": {"final": 0.6270373624416256, "detail": {"quality": 0.9379181476162357, "popularity": 0.4568580413852981, "maintenance": 0.5307474390625729}}}}, {"dotenv": {"analyzedAt": "2020-06-13T05:16:13.412Z", "collected": {"metadata": {"name": "dotenv", "scope": "unscoped", "version": "8.2.0", "description": "Loads environment variables from .env file", "keywords": ["dotenv", "env", ".env", "environment", "variables", "config", "settings"], "date": "2019-10-16T01:50:46.096Z", "publisher": {"username": "maxbeatty", "email": "npm@maxbeatty.com"}, "maintainers": [{"username": "~jcblw", "email": "jacoblowe2.0@gmail.com"}, {"username": "maxbeatty", "email": "npm@maxbeatty.com"}, {"username": "motdotla", "email": "mot@mot.la"}, {"username": "scottmotte", "email": "scott@scottmotte.com"}], "repository": {"type": "git", "url": "git://github.com/motdotla/dotenv.git"}, "links": {"npm": "https://www.npmjs.com/package/dotenv", "homepage": "https://github.com/motdotla/dotenv#readme", "repository": "https://github.com/motdotla/dotenv", "bugs": "https://github.com/motdotla/dotenv/issues"}, "license": "BSD-2-Clause", "devDependencies": {"decache": "^4.5.1", "dtslint": "^0.9.8", "flow-bin": "^0.109.0", "sinon": "^7.5.0", "standard": "^13.1.0", "standard-markdown": "^5.1.0", "standard-version": "^7.0.0", "tap": "^14.7.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}], "hasTestScript": true, "readme": "# dotenv\n\n<img src=\"https://raw.githubusercontent.com/motdotla/dotenv/master/dotenv.png\" alt=\"dotenv\" align=\"right\" />\n\nDotenv is a zero-dependency module that loads environment variables from a `.env` file into [`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env). Storing configuration in the environment separate from code is based on [The Twelve-Factor App](http://12factor.net/config) methodology.\n\n[![BuildStatus](https://img.shields.io/travis/motdotla/dotenv/master.svg?style=flat-square)](https://travis-ci.org/motdotla/dotenv)\n[![Build status](https://ci.appveyor.com/api/projects/status/github/motdotla/dotenv?svg=true)](https://ci.appveyor.com/project/motdotla/dotenv/branch/master)\n[![NPM version](https://img.shields.io/npm/v/dotenv.svg?style=flat-square)](https://www.npmjs.com/package/dotenv)\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/feross/standard)\n[![Coverage Status](https://img.shields.io/coveralls/motdotla/dotenv/master.svg?style=flat-square)](https://coveralls.io/github/motdotla/dotenv?branch=coverall-intergration)\n[![LICENSE](https://img.shields.io/github/license/motdotla/dotenv.svg)](LICENSE)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n\n## Install\n\n```bash\n# with npm\nnpm install dotenv\n\n# or with Yarn\nyarn add dotenv\n```\n\n## Usage\n\nAs early as possible in your application, require and configure dotenv.\n\n```javascript\nrequire('dotenv').config()\n```\n\nCreate a `.env` file in the root directory of your project. Add\nenvironment-specific variables on new lines in the form of `NAME=VALUE`.\nFor example:\n\n```dosini\nDB_HOST=localhost\nDB_USER=root\nDB_PASS=s1mpl3\n```\n\n`process.env` now has the keys and values you defined in your `.env` file.\n\n```javascript\nconst db = require('db')\ndb.connect({\n  host: process.env.DB_HOST,\n  username: process.env.DB_USER,\n  password: process.env.DB_PASS\n})\n```\n\n### Preload\n\nYou can use the `--require` (`-r`) [command line option](https://nodejs.org/api/cli.html#cli_r_require_module) to preload dotenv. By doing this, you do not need to require and load dotenv in your application code. This is the preferred approach when using `import` instead of `require`.\n\n```bash\n$ node -r dotenv/config your_script.js\n```\n\nThe configuration options below are supported as command line arguments in the format `dotenv_config_<option>=value`\n\n```bash\n$ node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/your/env/vars\n```\n\nAdditionally, you can use environment variables to set configuration options. Command line arguments will precede these.\n\n```bash\n$ DOTENV_CONFIG_<OPTION>=value node -r dotenv/config your_script.js\n```\n\n```bash\n$ DOTENV_CONFIG_ENCODING=latin1 node -r dotenv/config your_script.js dotenv_config_path=/custom/path/to/.env\n```\n\n## Config\n\n`config` will read your `.env` file, parse the contents, assign it to\n[`process.env`](https://nodejs.org/docs/latest/api/process.html#process_process_env),\nand return an Object with a `parsed` key containing the loaded content or an `error` key if it failed.\n\n```js\nconst result = dotenv.config()\n\nif (result.error) {\n  throw result.error\n}\n\nconsole.log(result.parsed)\n```\n\nYou can additionally, pass options to `config`.\n\n### Options\n\n#### Path\n\nDefault: `path.resolve(process.cwd(), '.env')`\n\nYou may specify a custom path if your file containing environment variables is located elsewhere.\n\n```js\nrequire('dotenv').config({ path: '/full/custom/path/to/your/env/vars' })\n```\n\n#### Encoding\n\nDefault: `utf8`\n\nYou may specify the encoding of your file containing environment variables.\n\n```js\nrequire('dotenv').config({ encoding: 'latin1' })\n```\n\n#### Debug\n\nDefault: `false`\n\nYou may turn on logging to help debug why certain keys or values are not being set as you expect.\n\n```js\nrequire('dotenv').config({ debug: process.env.DEBUG })\n```\n\n## Parse\n\nThe engine which parses the contents of your file containing environment\nvariables is available to use. It accepts a String or Buffer and will return\nan Object with the parsed keys and values.\n\n```js\nconst dotenv = require('dotenv')\nconst buf = Buffer.from('BASIC=basic')\nconst config = dotenv.parse(buf) // will return an object\nconsole.log(typeof config, config) // object { BASIC : 'basic' }\n```\n\n### Options\n\n#### Debug\n\nDefault: `false`\n\nYou may turn on logging to help debug why certain keys or values are not being set as you expect.\n\n```js\nconst dotenv = require('dotenv')\nconst buf = Buffer.from('hello world')\nconst opt = { debug: true }\nconst config = dotenv.parse(buf, opt)\n// expect a debug message because the buffer is not in KEY=VAL form\n```\n\n### Rules\n\nThe parsing engine currently supports the following rules:\n\n- `BASIC=basic` becomes `{BASIC: 'basic'}`\n- empty lines are skipped\n- lines beginning with `#` are treated as comments\n- empty values become empty strings (`EMPTY=` becomes `{EMPTY: ''}`)\n- inner quotes are maintained (think JSON) (`JSON={\"foo\": \"bar\"}` becomes `{JSON:\"{\\\"foo\\\": \\\"bar\\\"}\"`)\n- whitespace is removed from both ends of unquoted values (see more on [`trim`](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String/Trim)) (`FOO=  some value  ` becomes `{FOO: 'some value'}`)\n- single and double quoted values are escaped (`SINGLE_QUOTE='quoted'` becomes `{SINGLE_QUOTE: \"quoted\"}`)\n- single and double quoted values maintain whitespace from both ends (`FOO=\"  some value  \"` becomes `{FOO: '  some value  '}`)\n- double quoted values expand new lines (`MULTILINE=\"new\\nline\"` becomes\n\n```\n{MULTILINE: 'new\nline'}\n```\n\n## FAQ\n\n### Should I commit my `.env` file?\n\nNo. We **strongly** recommend against committing your `.env` file to version\ncontrol. It should only include environment-specific values such as database\npasswords or API keys. Your production database should have a different\npassword than your development database.\n\n### Should I have multiple `.env` files?\n\nNo. We **strongly** recommend against having a \"main\" `.env` file and an \"environment\" `.env` file like `.env.test`. Your config should vary between deploys, and you should not be sharing values between environments.\n\n> In a twelve-factor app, env vars are granular controls, each fully orthogonal to other env vars. They are never grouped together as \u201cenvironments\u201d, but instead are independently managed for each deploy. This is a model that scales up smoothly as the app naturally expands into more deploys over its lifetime.\n>\n> \u2013 [The Twelve-Factor App](http://12factor.net/config)\n\n### What happens to environment variables that were already set?\n\nWe will never modify any environment variables that have already been set. In particular, if there is a variable in your `.env` file which collides with one that already exists in your environment, then that variable will be skipped. This behavior allows you to override all `.env` configurations with a machine-specific environment, although it is not recommended.\n\nIf you want to override `process.env` you can do something like this:\n\n```javascript\nconst fs = require('fs')\nconst dotenv = require('dotenv')\nconst envConfig = dotenv.parse(fs.readFileSync('.env.override'))\nfor (const k in envConfig) {\n  process.env[k] = envConfig[k]\n}\n```\n\n### Can I customize/write plugins for dotenv?\n\nFor `dotenv@2.x.x`: Yes. `dotenv.config()` now returns an object representing\nthe parsed `.env` file. This gives you everything you need to continue\nsetting values on `process.env`. For example:\n\n```js\nconst dotenv = require('dotenv')\nconst variableExpansion = require('dotenv-expand')\nconst myEnv = dotenv.config()\nvariableExpansion(myEnv)\n```\n\n### What about variable expansion?\n\nTry [dotenv-expand](https://github.com/motdotla/dotenv-expand)\n\n### How do I use dotenv with `import`?\n\nES2015 and beyond offers modules that allow you to `export` any top-level `function`, `class`, `var`, `let`, or `const`.\n\n> When you run a module containing an `import` declaration, the modules it imports are loaded first, then each module body is executed in a depth-first traversal of the dependency graph, avoiding cycles by skipping anything already executed.\n>\n> \u2013 [ES6 In Depth: Modules](https://hacks.mozilla.org/2015/08/es6-in-depth-modules/)\n\nYou must run `dotenv.config()` before referencing any environment variables. Here's an example of problematic code:\n\n`errorReporter.js`:\n\n```js\nimport { Client } from 'best-error-reporting-service'\n\nexport const client = new Client(process.env.BEST_API_KEY)\n```\n\n`index.js`:\n\n```js\nimport dotenv from 'dotenv'\nimport errorReporter from './errorReporter'\n\ndotenv.config()\nerrorReporter.client.report(new Error('faq example'))\n```\n\n`client` will not be configured correctly because it was constructed before `dotenv.config()` was executed. There are (at least) 3 ways to make this work.\n\n1. Preload dotenv: `node --require dotenv/config index.js` (_Note: you do not need to `import` dotenv with this approach_)\n2. Import `dotenv/config` instead of `dotenv` (_Note: you do not need to call `dotenv.config()` and must pass options via the command line or environment variables with this approach_)\n3. Create a separate file that will execute `config` first as outlined in [this comment on #133](https://github.com/motdotla/dotenv/issues/133#issuecomment-255298822)\n\n## Contributing Guide\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)\n\n## Change Log\n\nSee [CHANGELOG.md](CHANGELOG.md)\n\n## Who's using dotenv?\n\n[These npm modules depend on it.](https://www.npmjs.com/browse/depended/dotenv)\n\nProjects that expand it often use the [keyword \"dotenv\" on npm](https://www.npmjs.com/search?q=keywords:dotenv)."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1735868}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 10864961}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 46254254}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 135164613}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 236462967}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 399136923}], "dependentsCount": 10390, "starsCount": 444}, "github": {"starsCount": 11611, "forksCount": 541, "subscribersCount": 103, "issues": {"count": 474, "openCount": 23, "distribution": {"3600": 56, "10800": 33, "32400": 73, "97200": 74, "291600": 72, "874800": 55, "2624400": 47, "7873200": 35, "23619600": 26, "70858800": 3, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "motdotla", "commitsCount": 77}, {"username": "maxbeatty", "commitsCount": 29}, {"username": "jcblw", "commitsCount": 8}, {"username": "LinusU", "commitsCount": 3}, {"username": "jessefulton", "commitsCount": 3}, {"username": "MetCoder95", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "AlexanderGranhof", "commitsCount": 1}, {"username": "CodingFu", "commitsCount": 1}, {"username": "Glavin001", "commitsCount": 1}, {"username": "IOAyman", "commitsCount": 1}, {"username": "RodrigoEspinosa", "commitsCount": 1}, {"username": "SpainTrain", "commitsCount": 1}, {"username": "af", "commitsCount": 1}, {"username": "anandkumarpatel", "commitsCount": 1}, {"username": "benrei", "commitsCount": 1}, {"username": "bjoshuanoah", "commitsCount": 1}, {"username": "calleerlandsson", "commitsCount": 1}, {"username": "davidvermeir", "commitsCount": 1}, {"username": "djds23", "commitsCount": 1}, {"username": "feross", "commitsCount": 1}, {"username": "galenandrew", "commitsCount": 1}, {"username": "hong4rc", "commitsCount": 1}, {"username": "jonathanmv", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "marcoow", "commitsCount": 1}, {"username": "matiassingers", "commitsCount": 1}, {"username": "nquinlan", "commitsCount": 1}, {"username": "palanik", "commitsCount": 1}, {"username": "qodesmith", "commitsCount": 1}, {"username": "rolodato", "commitsCount": 1}, {"username": "sandfox", "commitsCount": 1}, {"username": "silhouettes", "commitsCount": 1}, {"username": "srt32", "commitsCount": 1}, {"username": "sudodoki", "commitsCount": 1}, {"username": "undirectlookable", "commitsCount": 1}, {"username": "vlad-shatskyi", "commitsCount": 1}, {"username": "yTakkar", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9718, "testsSize": 8967, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/motdotla/dotenv/master.svg?style=flat-square", "service": "https://api.travis-ci.org/motdotla/dotenv.svg?branch=master", "shields": "https://img.shields.io/travis/motdotla/dotenv/master.svg", "content": "https://img.shields.io/travis/motdotla/dotenv/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/github/motdotla/dotenv?svg=true", "service": "https://ci.appveyor.com/api/projects/status/github/motdotla/dotenv", "shields": "https://img.shields.io/appveyor/ci/github/motdotla/dotenv.svg", "content": "https://img.shields.io/appveyor/ci/github/motdotla/dotenv.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/v/dotenv.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/dotenv.svg", "content": "https://img.shields.io/npm/v/dotenv.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/coveralls/motdotla/dotenv/master.svg?style=flat-square", "service": "https://coveralls.io/repos/motdotla/dotenv/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/motdotla/dotenv/master.svg", "content": "https://img.shields.io/coveralls/motdotla/dotenv/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "standard"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 12737, "downloadsCount": 45054871, "downloadsAcceleration": 167109.99594748853, "dependentsCount": 10390}, "maintenance": {"releasesFrequency": 0.4839041095890411, "commitsFrequency": 0.27256849315068493, "openIssues": 1, "issuesDistribution": 0.9494793327716586}}, "score": {"final": 0.9393524727200694, "detail": {"quality": 0.9995207154630612, "popularity": 0.8632470144245833, "maintenance": 0.9638851515215625}}}}, {"@angular/compiler": {"analyzedAt": "2020-06-10T18:33:54.497Z", "collected": {"metadata": {"name": "@angular/compiler", "scope": "angular", "version": "9.1.11", "description": "Angular - the compiler library", "date": "2020-06-10T18:23:28.706Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/compiler"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fcompiler", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"tslib": "^1.10.0"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 10}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 30}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 51}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 103}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 192}], "readme": "Angular\n=======\n\nThe sources for this package are in the main [Angular](https://github.com/angular/angular) repo. Please file issues and pull requests against that repo.\n\nUsage information and reference details can be found in [Angular documentation](https://angular.io/docs).\n\nLicense: MIT"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 306844}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1636439}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 6963656}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 20513902}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 37383645}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 70212324}], "dependentsCount": 6946, "starsCount": 9}, "github": {"homepage": "https://angular.io", "starsCount": 61990, "forksCount": 16862, "subscribersCount": 3170, "issues": {"count": 37186, "openCount": 3314, "distribution": {"3600": 3771, "10800": 2596, "32400": 3128, "97200": 4501, "291600": 4488, "874800": 4704, "2624400": 3641, "7873200": 3123, "23619600": 3184, "70858800": 2481, "212576400": 1569}, "isDisabled": false}, "contributors": [{"username": "petebacondarwin", "commitsCount": 1408}, {"username": "gkalpak", "commitsCount": 1254}, {"username": "vsavkin", "commitsCount": 952}, {"username": "IgorMinar", "commitsCount": 930}, {"username": "vicb", "commitsCount": 916}, {"username": "tbosch", "commitsCount": 788}, {"username": "mhevery", "commitsCount": 670}, {"username": "alxhub", "commitsCount": 571}, {"username": "alexeagle", "commitsCount": 561}, {"username": "pkozlowski-opensource", "commitsCount": 542}, {"username": "kara", "commitsCount": 516}, {"username": "matsko", "commitsCount": 479}, {"username": "devversion", "commitsCount": 379}, {"username": "chuckjaz", "commitsCount": 336}, {"username": "marclaval", "commitsCount": 310}, {"username": "gregmagolan", "commitsCount": 290}, {"username": "AndrewKushnir", "commitsCount": 246}, {"username": "kyliau", "commitsCount": 237}, {"username": "josephperrott", "commitsCount": 213}, {"username": "crisbeto", "commitsCount": 207}, {"username": "alan-agius4", "commitsCount": 196}, {"username": "jasonaden", "commitsCount": 191}, {"username": "ocombe", "commitsCount": 191}, {"username": "jbogarthyde", "commitsCount": 180}, {"username": "JoostK", "commitsCount": 165}, {"username": "btford", "commitsCount": 152}, {"username": "brandonroberts", "commitsCount": 151}, {"username": "wardbell", "commitsCount": 149}, {"username": "yjbanov", "commitsCount": 145}, {"username": "filipesilva", "commitsCount": 137}, {"username": "rkirov", "commitsCount": 123}, {"username": "mprobst", "commitsCount": 120}, {"username": "jeffbcross", "commitsCount": 118}, {"username": "kapunahelewong", "commitsCount": 113}, {"username": "benlesh", "commitsCount": 112}, {"username": "sjtrimble", "commitsCount": 112}, {"username": "atscott", "commitsCount": 97}, {"username": "JiaLiPassion", "commitsCount": 86}, {"username": "Foxandxss", "commitsCount": 85}, {"username": "juliemr", "commitsCount": 79}, {"username": "vikerman", "commitsCount": 79}, {"username": "ayazhafiz", "commitsCount": 77}, {"username": "cexbrayat", "commitsCount": 77}, {"username": "robwormald", "commitsCount": 75}, {"username": "PatrickJS", "commitsCount": 73}, {"username": "sonukapoor", "commitsCount": 62}, {"username": "jelbourn", "commitsCount": 58}, {"username": "ajitsinghkaler", "commitsCount": 47}, {"username": "trotyl", "commitsCount": 44}, {"username": "kevmoo", "commitsCount": 43}, {"username": "naomiblack", "commitsCount": 42}, {"username": "jteplitz", "commitsCount": 41}, {"username": "caitp", "commitsCount": 37}, {"username": "StephenFluin", "commitsCount": 34}, {"username": "hansl", "commitsCount": 33}, {"username": "jenniferfell", "commitsCount": 33}, {"username": "chembu", "commitsCount": 32}, {"username": "mgechev", "commitsCount": 31}, {"username": "tinayuangao", "commitsCount": 29}, {"username": "wKoza", "commitsCount": 29}, {"username": "andrewseguin", "commitsCount": 28}, {"username": "alfaproject", "commitsCount": 24}, {"username": "jakemac53", "commitsCount": 24}, {"username": "wagnermaciel", "commitsCount": 24}, {"username": "CaerusKaru", "commitsCount": 23}, {"username": "santoshyadav198613", "commitsCount": 23}, {"username": "ivanwonder", "commitsCount": 22}, {"username": "vojtajina", "commitsCount": 21}, {"username": "Toxicable", "commitsCount": 20}, {"username": "lacolaco", "commitsCount": 20}, {"username": "ttowncompiled", "commitsCount": 20}, {"username": "PascalPrecht", "commitsCount": 17}, {"username": "danielsogl", "commitsCount": 17}, {"username": "kwalrath", "commitsCount": 17}, {"username": "TedSander", "commitsCount": 14}, {"username": "bowenni", "commitsCount": 13}, {"username": "Splaktar", "commitsCount": 12}, {"username": "ahasall", "commitsCount": 12}, {"username": "alfonso-presa", "commitsCount": 12}, {"username": "chalin", "commitsCount": 12}, {"username": "FrederikSchlemmer", "commitsCount": 11}, {"username": "goderbauer", "commitsCount": 11}, {"username": "SekibOmazic", "commitsCount": 10}, {"username": "clydin", "commitsCount": 10}, {"username": "hankduan", "commitsCount": 10}, {"username": "joostme", "commitsCount": 10}, {"username": "manekinekko", "commitsCount": 10}, {"username": "LayZeeDK", "commitsCount": 9}, {"username": "Potapy4", "commitsCount": 9}, {"username": "benbraou", "commitsCount": 9}, {"username": "hterkelsen", "commitsCount": 9}, {"username": "Goodwine", "commitsCount": 8}, {"username": "asnowwolf", "commitsCount": 8}, {"username": "chirayuk", "commitsCount": 8}, {"username": "juleskremer", "commitsCount": 8}, {"username": "laskoviymishka", "commitsCount": 8}, {"username": "martinsik", "commitsCount": 8}, {"username": "sarunint", "commitsCount": 8}, {"username": "arturovt", "commitsCount": 7}, {"username": "dgp1130", "commitsCount": 7}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 8}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 133}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 697}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1532}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3508}], "statuses": [{"context": "ci/circleci: setup", "state": "pending"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1022978, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/angular/angular/tree/master.svg?style=shield", "service": "https://circleci.com/gh/angular/angular/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/angular/angular/master.svg", "content": "https://img.shields.io/circleci/project/github/angular/angular/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.375, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 82131, "downloadsCount": 6837967.333333333, "downloadsAcceleration": 13770.930079908678, "dependentsCount": 6946}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.09291804756864497}}, "error": {"name": "TimeoutError", "code": "ETIMEDOUT", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/angular/angular/issues?state=all&per_page=100&page=121", "protocol": "https:", "url": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=121", "gotOptions": {"path": "/repos/angular/angular/issues?state=all&per_page=100&page=121", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=121", "pathname": "/repos/angular/angular/issues", "href": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=121", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token 80684e4388380fda517a5f4413734975f64dbef0", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET", "forceRefresh": true}, "event": "request", "message": "Timeout awaiting 'request' for 15000ms", "stack": "TimeoutError: Timeout awaiting 'request' for 15000ms\n    at ClientRequest.request.once.error (/home/analyzer/npms-analyzer/source/node_modules/got/source/request-as-event-emitter.js:176:14)\n    at Object.onceWrapper (events.js:281:20)\n    at ClientRequest.emit (events.js:198:15)\n    at ClientRequest.origin.emit.args (/home/analyzer/npms-analyzer/source/node_modules/@szmarczak/http-timer/source/index.js:37:11)\n    at Immediate.timeoutHandler (/home/analyzer/npms-analyzer/source/node_modules/got/source/utils/timed-out.js:63:11)\n    at Immediate.args.(anonymous function) [as _onImmediate] (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:445:19)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\n    at Promise.resolve.then.then.val (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:51:6)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:47:5)\n    at Promise (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:61:3)\nFrom previous event:\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:2:46)\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:38)\n    at doRequest.then (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:134:16)\nFrom previous event:\n    at ghIssueStats (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:124:6)\n    at fetchIssuesStats (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:125:12)\n    at Object.github (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:199:22)\n    at checkRepositoryOwnership.then (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:95:53)\nFrom previous event:\n    at collect (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:89:6)\n    at download.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:163:13)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:162:10)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\n    at Object.onceWrapper (events.js:281:20)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-15T21:29:40.587Z"}, "score": {"final": 0.7854098551335369, "detail": {"quality": 0.8168556112317158, "popularity": 0.7837608817576517, "maintenance": 0.7601053232824116}}}}, {"jasmine-core": {"analyzedAt": "2020-06-13T14:31:53.683Z", "collected": {"metadata": {"name": "jasmine-core", "scope": "unscoped", "version": "3.5.0", "description": "Official packaging of Jasmine's core files for use by Node.js projects.", "keywords": ["test", "jasmine", "tdd", "bdd"], "date": "2019-09-21T00:16:24.482Z", "publisher": {"username": "slackersoft", "email": "gregg@slackersoft.net"}, "maintainers": [{"username": "dwfrank", "email": "dwfrank@pivotallabs.com"}, {"username": "slackersoft", "email": "gregg@slackersoft.net"}], "repository": {"type": "git", "url": "git+https://github.com/jasmine/jasmine.git"}, "links": {"npm": "https://www.npmjs.com/package/jasmine-core", "homepage": "https://jasmine.github.io", "repository": "https://github.com/jasmine/jasmine", "bugs": "https://github.com/jasmine/jasmine/issues"}, "license": "MIT", "devDependencies": {"acorn": "^6.0.0", "ejs": "^2.5.5", "eslint": "^5.16.0", "express": "^4.16.4", "fast-glob": "^2.2.6", "grunt": "^1.0.4", "grunt-cli": "^1.3.2", "grunt-contrib-compress": "^1.3.0", "grunt-contrib-concat": "^1.0.1", "grunt-css-url-embed": "^1.11.1", "grunt-sass": "^3.0.2", "jasmine": "^3.4.0", "jasmine-browser-runner": "0.3.0", "jsdom": "^15.0.0", "load-grunt-tasks": "^4.0.0", "node-sass": "^4.11.0", "prettier": "1.17.1", "selenium-webdriver": "^3.6.0", "shelljs": "^0.8.3", "temp": "^0.9.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "<a name=\"README\">[<img src=\"https://rawgithub.com/jasmine/jasmine/master/images/jasmine-horizontal.svg\" width=\"400px\" />](http://jasmine.github.io)</a>\n\n[![Build Status](https://travis-ci.org/jasmine/jasmine.svg?branch=master)](https://travis-ci.org/jasmine/jasmine)\n[![Open Source Helpers](https://www.codetriage.com/jasmine/jasmine/badges/users.svg)](https://www.codetriage.com/jasmine/jasmine)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine?ref=badge_shield)\n\n# A JavaScript Testing Framework\n\nJasmine is a Behavior Driven Development testing framework for JavaScript. It does not rely on browsers, DOM, or any JavaScript framework. Thus it's suited for websites, [Node.js](http://nodejs.org) projects, or anywhere that JavaScript can run.\n\nDocumentation & guides live here: [http://jasmine.github.io](http://jasmine.github.io/)\nFor a quick start guide of Jasmine, see the beginning of [http://jasmine.github.io/edge/introduction.html](http://jasmine.github.io/edge/introduction.html)\n\nUpgrading from Jasmine 2.x? Check out the [3.0 release notes](https://github.com/jasmine/jasmine/blob/v3.0.0/release_notes/3.0.md) for a list of what's new (including breaking changes).\n\n## Contributing\n\nPlease read the [contributors' guide](https://github.com/jasmine/jasmine/blob/master/.github/CONTRIBUTING.md)\n\n## Installation\n\nFor the Jasmine NPM module:<br>\n[https://github.com/jasmine/jasmine-npm](https://github.com/jasmine/jasmine-npm)\n\nFor the Jasmine Ruby Gem:<br>\n[https://github.com/jasmine/jasmine-gem](https://github.com/jasmine/jasmine-gem)\n\nFor the Jasmine Python Egg:<br>\n[https://github.com/jasmine/jasmine-py](https://github.com/jasmine/jasmine-py)\n\nFor the Jasmine headless browser gulp plugin:<br>\n[https://github.com/jasmine/gulp-jasmine-browser](https://github.com/jasmine/gulp-jasmine-browser)\n\nTo install Jasmine standalone on your local box (where **_{#.#.#}_** below is substituted by the release number downloaded):\n\n* Download the standalone distribution for your desired release from the [releases page](https://github.com/jasmine/jasmine/releases)\n* Create a Jasmine directory in your project - `mkdir my-project/jasmine`\n* Move the dist to your project directory - `mv jasmine/dist/jasmine-standalone-{#.#.#}.zip my-project/jasmine`\n* Change directory - `cd my-project/jasmine`\n* Unzip the dist - `unzip jasmine-standalone-{#.#.#}.zip`\n\nAdd the following to your HTML file:\n\n```html\n<link rel=\"shortcut icon\" type=\"image/png\" href=\"jasmine/lib/jasmine-{#.#.#}/jasmine_favicon.png\">\n<link rel=\"stylesheet\" type=\"text/css\" href=\"jasmine/lib/jasmine-{#.#.#}/jasmine.css\">\n\n<script type=\"text/javascript\" src=\"jasmine/lib/jasmine-{#.#.#}/jasmine.js\"></script>\n<script type=\"text/javascript\" src=\"jasmine/lib/jasmine-{#.#.#}/jasmine-html.js\"></script>\n<script type=\"text/javascript\" src=\"jasmine/lib/jasmine-{#.#.#}/boot.js\"></script>\n```\n\n## Supported environments\n\nJasmine tests itself across many browsers (Safari, Chrome, Firefox, Microsoft Edge, and new Internet Explorer) as well as nodejs. To see the exact version tests are run against look at our [.travis.yml](https://github.com/jasmine/jasmine/blob/master/.travis.yml)\n\n[![Sauce Test Status](https://saucelabs.com/browser-matrix/jasmine-js.svg)](https://saucelabs.com/u/jasmine-js)\n\n## Support\n\n* Search past discussions: [http://groups.google.com/group/jasmine-js](http://groups.google.com/group/jasmine-js)\n* Send an email to the list: [jasmine-js@googlegroups.com](mailto:jasmine-js@googlegroups.com)\n* View the project backlog at Pivotal Tracker: [http://www.pivotaltracker.com/projects/10606](http://www.pivotaltracker.com/projects/10606)\n* Follow us on Twitter: [@JasmineBDD](http://twitter.com/JasmineBDD)\n\n## Maintainers\n\n* [Gregg Van Hove](mailto:gvanhove@pivotal.io), Pivotal Labs\n\n### Maintainers Emeritus\n\n* [Davis W. Frank](mailto:dwfrank@pivotal.io), Pivotal Labs\n* [Rajan Agaskar](mailto:rajan@pivotal.io), Pivotal Labs\n* [Greg Cobb](mailto:gcobb@pivotal.io), Pivotal Labs\n* [Chris Amavisca](mailto:camavisca@pivotal.io), Pivotal Labs\n* [Christian Williams](mailto:antixian666@gmail.com), Cloud Foundry\n* Sheel Choksi\n\nCopyright (c) 2008-2018 Pivotal Labs. This software is licensed under the MIT License.\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 483866}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3031245}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 12949548}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 39026715}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 72698081}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 135283659}], "dependentsCount": 383, "starsCount": 21}, "github": {"homepage": "http://jasmine.github.io/", "starsCount": 14823, "forksCount": 2188, "subscribersCount": 486, "issues": {"count": 1820, "openCount": 80, "distribution": {"3600": 126, "10800": 66, "32400": 136, "97200": 182, "291600": 174, "874800": 188, "2624400": 206, "7873200": 226, "23619600": 287, "70858800": 188, "212576400": 41}, "isDisabled": false}, "contributors": [{"username": "slackersoft", "commitsCount": 345}, {"username": "sgravrock", "commitsCount": 141}, {"username": "ragaskar", "commitsCount": 102}, {"username": "xian", "commitsCount": 100}, {"username": "sheelc", "commitsCount": 99}, {"username": "pivotalops", "commitsCount": 39}, {"username": "sconover", "commitsCount": 29}, {"username": "Gerg", "commitsCount": 26}, {"username": "elliot-nelson", "commitsCount": 24}, {"username": "infews", "commitsCount": 21}, {"username": "tjarratt", "commitsCount": 9}, {"username": "johnjbarton", "commitsCount": 8}, {"username": "ksvitkovsky", "commitsCount": 8}, {"username": "UziTech", "commitsCount": 7}, {"username": "voithos", "commitsCount": 7}, {"username": "pimterry", "commitsCount": 6}, {"username": "pivotalangellist", "commitsCount": 6}, {"username": "yopefonic", "commitsCount": 6}, {"username": "prantlf", "commitsCount": 5}, {"username": "vhermannitk", "commitsCount": 5}, {"username": "amavisca", "commitsCount": 4}, {"username": "jbunton-atlassian", "commitsCount": 4}, {"username": "maxbrunsfeld", "commitsCount": 4}, {"username": "moonmaster9000", "commitsCount": 4}, {"username": "nitobuendia", "commitsCount": 4}, {"username": "prather-mcs", "commitsCount": 4}, {"username": "rgould", "commitsCount": 4}, {"username": "DCtheTall", "commitsCount": 3}, {"username": "Havunen", "commitsCount": 3}, {"username": "elenorebastian", "commitsCount": 3}, {"username": "jsoref", "commitsCount": 3}, {"username": "kapke", "commitsCount": 3}, {"username": "leahciMic", "commitsCount": 3}, {"username": "mrlannigan", "commitsCount": 3}, {"username": "robinboehm", "commitsCount": 3}, {"username": "rohit", "commitsCount": 3}, {"username": "seanparmelee", "commitsCount": 3}, {"username": "ChrisTM", "commitsCount": 2}, {"username": "DamienCassou", "commitsCount": 2}, {"username": "Olical", "commitsCount": 2}, {"username": "a-r-d", "commitsCount": 2}, {"username": "albertandrejev", "commitsCount": 2}, {"username": "anseki", "commitsCount": 2}, {"username": "bengrunfeld", "commitsCount": 2}, {"username": "bjornblomqvist", "commitsCount": 2}, {"username": "btakita", "commitsCount": 2}, {"username": "caiotoon", "commitsCount": 2}, {"username": "charleshansen", "commitsCount": 2}, {"username": "chivesrs", "commitsCount": 2}, {"username": "codymikol", "commitsCount": 2}, {"username": "d-reinhold", "commitsCount": 2}, {"username": "dburt", "commitsCount": 2}, {"username": "deadlyicon", "commitsCount": 2}, {"username": "doochik", "commitsCount": 2}, {"username": "fabiomcosta", "commitsCount": 2}, {"username": "grosser", "commitsCount": 2}, {"username": "gunnarahlberg", "commitsCount": 2}, {"username": "javenwang", "commitsCount": 2}, {"username": "jboyens", "commitsCount": 2}, {"username": "jcracknell", "commitsCount": 2}, {"username": "jhamon", "commitsCount": 2}, {"username": "kevinoid", "commitsCount": 2}, {"username": "lee101", "commitsCount": 2}, {"username": "lpww", "commitsCount": 2}, {"username": "maciej-filip-sz", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "marneborn", "commitsCount": 2}, {"username": "mauricioborges", "commitsCount": 2}, {"username": "megahertz", "commitsCount": 2}, {"username": "minhyeong-kim", "commitsCount": 2}, {"username": "plukevdh", "commitsCount": 2}, {"username": "ptomato", "commitsCount": 2}, {"username": "rupurt", "commitsCount": 2}, {"username": "shprink", "commitsCount": 2}, {"username": "tgirardi", "commitsCount": 2}, {"username": "thewoolleyman", "commitsCount": 2}, {"username": "thodorisbais", "commitsCount": 2}, {"username": "tidoust", "commitsCount": 2}, {"username": "unrulydevelopers", "commitsCount": 2}, {"username": "acinader", "commitsCount": 1}, {"username": "aeisenberg", "commitsCount": 1}, {"username": "apla", "commitsCount": 1}, {"username": "codetriage-readme-bot", "commitsCount": 1}, {"username": "dtychshenko", "commitsCount": 1}, {"username": "dubzzz", "commitsCount": 1}, {"username": "eventlistener", "commitsCount": 1}, {"username": "fossabot", "commitsCount": 1}, {"username": "ikonst", "commitsCount": 1}, {"username": "johnlinp", "commitsCount": 1}, {"username": "limonte", "commitsCount": 1}, {"username": "m1010j", "commitsCount": 1}, {"username": "majidmade", "commitsCount": 1}, {"username": "olleolleolle", "commitsCount": 1}, {"username": "parloti", "commitsCount": 1}, {"username": "paulvanbrenk", "commitsCount": 1}, {"username": "riophae", "commitsCount": 1}, {"username": "sylhare", "commitsCount": 1}, {"username": "tdurtschi", "commitsCount": 1}, {"username": "yinm", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 10}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 38}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 90}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "License Compliance", "state": "error"}]}, "source": {"files": {"readmeSize": 4527, "testsSize": 657957, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/jasmine/jasmine.svg?branch=master", "service": "https://api.travis-ci.org/jasmine/jasmine.svg?branch=master", "shields": "https://img.shields.io/travis/jasmine/jasmine/master.svg", "content": "https://img.shields.io/travis/jasmine/jasmine/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.725, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 17617, "downloadsCount": 13008905, "downloadsAcceleration": 23562.376122526635, "dependentsCount": 383}, "maintenance": {"releasesFrequency": 0.1726027397260274, "commitsFrequency": 0.866472602739726, "openIssues": 1, "issuesDistribution": 0.10185165539755392}}, "score": {"final": 0.7285460060026573, "detail": {"quality": 0.9518503727774057, "popularity": 0.6611438078052247, "maintenance": 0.6045444612503056}}}}, {"sinon-chai": {"analyzedAt": "2020-06-13T01:47:42.239Z", "collected": {"metadata": {"name": "sinon-chai", "scope": "unscoped", "version": "3.5.0", "description": "Extends Chai with assertions for the Sinon.JS mocking framework.", "keywords": ["chai", "chai-plugin", "browser", "vendor", "mocks-and-spies", "sinon", "testing", "spies", "stubs", "mocks"], "date": "2020-02-20T16:44:56.254Z", "author": {"name": "Domenic Denicola", "email": "d@domenic.me", "url": "https://domenic.me/"}, "publisher": {"username": "simondel", "email": "simondelang@gmail.com"}, "maintainers": [{"username": "domenic", "email": "domenic@domenicdenicola.com"}], "contributors": [{"name": "Simon de Lang", "email": "simondelang@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/domenic/sinon-chai.git"}, "links": {"npm": "https://www.npmjs.com/package/sinon-chai", "homepage": "https://github.com/domenic/sinon-chai#readme", "repository": "https://github.com/domenic/sinon-chai", "bugs": "https://github.com/domenic/sinon-chai/issues"}, "license": "(BSD-2-Clause OR WTFPL)", "devDependencies": {"chai": "^4.2.0", "eslint": "^6.8.0", "mocha": "^7.0.1", "nyc": "^15.0.0", "opener": "^1.5.1", "sinon": "^9.0.0"}, "peerDependencies": {"chai": "^4.0.0", "sinon": ">=4.0.0 <10.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Sinon.JS Assertions for Chai\r\n\r\n**Sinon\u2013Chai** provides a set of custom assertions for using the [Sinon.JS][] spy, stub, and mocking framework with the\r\n[Chai][] assertion library. You get all the benefits of Chai with all the powerful tools of Sinon.JS.\r\n\r\nInstead of using Sinon.JS's assertions:\r\n\r\n```javascript\r\nsinon.assert.calledWith(mySpy, \"foo\");\r\n```\r\n\r\nor awkwardly trying to use Chai's `should` or `expect` interfaces on spy properties:\r\n\r\n```javascript\r\nmySpy.calledWith(\"foo\").should.be.ok;\r\nexpect(mySpy.calledWith(\"foo\")).to.be.ok;\r\n```\r\n\r\nyou can say\r\n\r\n```javascript\r\nmySpy.should.have.been.calledWith(\"foo\");\r\nexpect(mySpy).to.have.been.calledWith(\"foo\");\r\n```\r\n\r\n## Assertions\r\n\r\nAll of your favorite Sinon.JS assertions made their way into Sinon\u2013Chai. We show the `should` syntax here; the `expect`\r\nequivalent is also available.\r\n\r\n| Sinon.JS property/method | Sinon\u2013Chai assertion                                              |\r\n|--------------------------|-------------------------------------------------------------------|\r\n| called                   | spy.should.have.been.called                                       |\r\n| callCount                | spy.should.have.callCount(n)                                      |\r\n| calledOnce               | spy.should.have.been.calledOnce                                   |\r\n| calledTwice              | spy.should.have.been.calledTwice                                  |\r\n| calledThrice             | spy.should.have.been.calledThrice                                 |\r\n| calledBefore             | spy1.should.have.been.calledBefore(spy2)                          |\r\n| calledAfter              | spy1.should.have.been.calledAfter(spy2)                           |\r\n| calledImmediatelyBefore  | spy.should.have.been.calledImmediatelyBefore(spy2)                |\r\n| calledImmediatelyAfter   | spy.should.have.been.calledImmediatelyAfter(spy2)                 |\r\n| calledWithNew            | spy.should.have.been.calledWithNew                                |\r\n| alwaysCalledWithNew      | spy.should.always.have.been.calledWithNew                         |\r\n| calledOn                 | spy.should.have.been.calledOn(context)                            |\r\n| alwaysCalledOn           | spy.should.always.have.been.calledOn(context)                     |\r\n| calledWith               | spy.should.have.been.calledWith(...args)                          |\r\n| alwaysCalledWith         | spy.should.always.have.been.calledWith(...args)                   |\r\n| calledOnceWith           | spy.should.always.have.been.calledOnceWith(...args)               |\r\n| calledWithExactly        | spy.should.have.been.calledWithExactly(...args)                   |\r\n| alwaysCalledWithExactly  | spy.should.always.have.been.calledWithExactly(...args)            |\r\n| calledOnceWithExactly    | spy.should.always.have.been.calledOnceWithExactly(...args)        |\r\n| calledWithMatch          | spy.should.have.been.calledWithMatch(...args)                     |\r\n| alwaysCalledWithMatch    | spy.should.always.have.been.calledWithMatch(...args)              |\r\n| returned                 | spy.should.have.returned(returnVal)                               |\r\n| alwaysReturned           | spy.should.have.always.returned(returnVal)                        |\r\n| threw                    | spy.should.have.thrown(errorObjOrErrorTypeStringOrNothing)        |\r\n| alwaysThrew              | spy.should.have.always.thrown(errorObjOrErrorTypeStringOrNothing) |\r\n\r\nFor more information on the behavior of each assertion, see\r\n[the documentation for the corresponding spy methods][spymethods]. These of course work on not only spies, but\r\nindividual spy calls, stubs, and mocks as well.\r\n\r\nNote that you can negate any assertion with Chai's `.not`. E. g. for `notCalled` use `spy.should.have.not.been.called`.\r\n\r\nFor `assert` interface there is no need for this library. You can install [Sinon.JS assertions][sinonassertions] right into Chai's `assert` object with `expose`:\r\n\r\n```javascript\r\nvar chai = require(\"chai\");\r\nvar sinon = require(\"sinon\");\r\n\r\nsinon.assert.expose(chai.assert, { prefix: \"\" });\r\n```\r\n\r\n## Examples\r\n\r\nUsing Chai's `should`:\r\n\r\n```javascript\r\n\"use strict\";\r\nvar chai = require(\"chai\");\r\nvar sinon = require(\"sinon\");\r\nvar sinonChai = require(\"sinon-chai\");\r\nchai.should();\r\nchai.use(sinonChai);\r\n\r\nfunction hello(name, cb) {\r\n    cb(\"hello \" + name);\r\n}\r\n\r\ndescribe(\"hello\", function () {\r\n    it(\"should call callback with correct greeting\", function () {\r\n        var cb = sinon.spy();\r\n\r\n        hello(\"foo\", cb);\r\n\r\n        cb.should.have.been.calledWith(\"hello foo\");\r\n    });\r\n});\r\n```\r\n\r\nUsing Chai's `expect`:\r\n\r\n```javascript\r\n\"use strict\";\r\nvar chai = require(\"chai\");\r\nvar sinon = require(\"sinon\");\r\nvar sinonChai = require(\"sinon-chai\");\r\nvar expect = chai.expect;\r\nchai.use(sinonChai);\r\n\r\nfunction hello(name, cb) {\r\n    cb(\"hello \" + name);\r\n}\r\n\r\ndescribe(\"hello\", function () {\r\n    it(\"should call callback with correct greeting\", function () {\r\n        var cb = sinon.spy();\r\n\r\n        hello(\"foo\", cb);\r\n\r\n        expect(cb).to.have.been.calledWith(\"hello foo\");\r\n    });\r\n});\r\n```\r\n\r\n## Installation and Usage\r\n\r\n### Node\r\n\r\nDo an `npm install --save-dev sinon-chai` to get up and running. Then:\r\n\r\n```javascript\r\nvar chai = require(\"chai\");\r\nvar sinonChai = require(\"sinon-chai\");\r\n\r\nchai.use(sinonChai);\r\n```\r\n\r\nYou can of course put this code in a common test fixture file; for an example using [Mocha][], see\r\n[the Sinon\u2013Chai tests themselves][fixturedemo].\r\n\r\n### AMD\r\n\r\nSinon\u2013Chai supports being used as an [AMD][] module, registering itself anonymously (just like Chai). So, assuming you\r\nhave configured your loader to map the Chai and Sinon\u2013Chai files to the respective module IDs `\"chai\"` and\r\n`\"sinon-chai\"`, you can use them as follows:\r\n\r\n```javascript\r\ndefine(function (require, exports, module) {\r\n    var chai = require(\"chai\");\r\n    var sinonChai = require(\"sinon-chai\");\r\n\r\n    chai.use(sinonChai);\r\n});\r\n```\r\n\r\n### `<script>` tag\r\n\r\nIf you include Sinon\u2013Chai directly with a `<script>` tag, after the one for Chai itself, then it will automatically plug\r\nin to Chai and be ready for use. Note that you'll want to get the latest browser build of Sinon.JS as well:\r\n\r\n```html\r\n<script src=\"chai.js\"></script>\r\n<script src=\"sinon-chai.js\"></script>\r\n<script src=\"sinon.js\"></script>\r\n```\r\n\r\n### Ruby on Rails\r\n\r\nThanks to [Cymen Vig][], there's now [a Ruby gem][] of Sinon\u2013Chai that integrates it with the Rails asset pipeline!\r\n\r\n\r\n[Sinon.JS]: http://sinonjs.org/\r\n[Chai]: http://chaijs.com/\r\n[spymethods]: http://sinonjs.org/docs/#spies-api\r\n[sinonassertions]: http://sinonjs.org/docs/#assertions\r\n[Mocha]: https://mochajs.org/\r\n[fixturedemo]: https://github.com/domenic/sinon-chai/tree/master/test/\r\n[AMD]: https://github.com/amdjs/amdjs-api/wiki/AMD\r\n[Cymen Vig]: https://github.com/cymen\r\n[a Ruby gem]: https://github.com/cymen/sinon-chai-rails"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 80505}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 510541}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2166058}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6499812}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 12090939}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 23142473}], "dependentsCount": 380, "starsCount": 35}, "github": {"starsCount": 1043, "forksCount": 101, "subscribersCount": 20, "issues": {"count": 147, "openCount": 12, "distribution": {"3600": 30, "10800": 5, "32400": 15, "97200": 12, "291600": 19, "874800": 17, "2624400": 12, "7873200": 9, "23619600": 10, "70858800": 13, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "domenic", "commitsCount": 111}, {"username": "simondel", "commitsCount": 5}, {"username": "AviVahl", "commitsCount": 2}, {"username": "JayAndCatchFire", "commitsCount": 1}, {"username": "Yeti-or", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "anton-rudeshko", "commitsCount": 1}, {"username": "charlierudolph", "commitsCount": 1}, {"username": "crookedneighbor", "commitsCount": 1}, {"username": "daffl", "commitsCount": 1}, {"username": "dostu", "commitsCount": 1}, {"username": "gingermusketeer", "commitsCount": 1}, {"username": "jimboslicethat", "commitsCount": 1}, {"username": "keithamus", "commitsCount": 1}, {"username": "kmiyashiro", "commitsCount": 1}, {"username": "laggingreflex", "commitsCount": 1}, {"username": "lolmaus", "commitsCount": 1}, {"username": "mattbaileyuk", "commitsCount": 1}, {"username": "mikelovesrobots", "commitsCount": 1}, {"username": "mroderick", "commitsCount": 1}, {"username": "nicolashery", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "obmarg", "commitsCount": 1}, {"username": "tinganho", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}]}, "source": {"files": {"readmeSize": 6784, "testsSize": 81078, "hasChangelog": true}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 1223, "downloadsCount": 2166604, "downloadsAcceleration": 3141.4363584474886, "dependentsCount": 380}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7584638885484645, "detail": {"quality": 0.8444062032634065, "popularity": 0.443371470097571, "maintenance": 0.9998914658151222}}}}, {"react-test-renderer": {"analyzedAt": "2020-05-08T07:03:52.768Z", "collected": {"metadata": {"name": "react-test-renderer", "scope": "unscoped", "version": "16.13.1", "description": "React package for snapshot testing.", "keywords": ["react", "react-native", "react-testing"], "date": "2020-03-19T19:53:41.821Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react-test-renderer"}, "links": {"npm": "https://www.npmjs.com/package/react-test-renderer", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"object-assign": "^4.1.1", "prop-types": "^15.6.2", "react-is": "^16.8.6", "scheduler": "^0.19.1"}, "peerDependencies": {"react": "^16.13.1"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 22}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 34}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 67}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 124}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 658274}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3201683}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 14268273}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 41243513}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 72261996}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 133309168}], "dependentsCount": 725, "starsCount": 25}, "github": {"homepage": "https://reactjs.org", "starsCount": 148227, "forksCount": 28696, "subscribersCount": 6649, "issues": {"count": 18658, "openCount": 586, "distribution": {"3600": 3786, "10800": 1805, "32400": 1847, "97200": 2314, "291600": 1780, "874800": 1671, "2624400": 1361, "7873200": 1138, "23619600": 1446, "70858800": 1156, "212576400": 354}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1371}, {"username": "bvaughn", "commitsCount": 1202}, {"username": "sophiebits", "commitsCount": 873}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 679}, {"username": "acdlite", "commitsCount": 674}, {"username": "trueadm", "commitsCount": 384}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "aweary", "commitsCount": 61}, {"username": "koba04", "commitsCount": 60}, {"username": "cpojer", "commitsCount": 55}, {"username": "threepointone", "commitsCount": 48}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 27}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "eps1lon", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "rickhanlonii", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "bl00mber", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 26}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 116}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 415}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 617}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1535}], "statuses": [{"context": "ci/circleci: setup", "state": "pending"}, {"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_build", "state": "success"}, {"context": "ci/circleci: build_devtools_and_process_artifacts", "state": "success"}, {"context": "ci/circleci: yarn_test_build", "state": "success"}, {"context": "ci/circleci: yarn_test_www_variant", "state": "success"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_dom_fixtures", "state": "success"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_build_prod", "state": "success"}, {"context": "ci/circleci: sizebot_experimental", "state": "success"}, {"context": "ci/circleci: yarn_test_build_prod", "state": "success"}, {"context": "ci/circleci: process_artifacts_experimental", "state": "success"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_persistent", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 150582, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.6644166666666667, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 183697, "downloadsCount": 13747837.666666666, "downloadsAcceleration": 36650.85970319633, "dependentsCount": 725}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4309545214711261}}, "score": {"final": 0.8720353636562354, "detail": {"quality": 0.897891902336939, "popularity": 0.7475398254565623, "maintenance": 0.9743681544153054}}}}, {"jshint": {"analyzedAt": "2020-05-14T04:40:46.425Z", "collected": {"metadata": {"name": "jshint", "scope": "unscoped", "version": "2.11.1", "description": "Static analysis tool for JavaScript", "date": "2020-05-14T04:39:12.732Z", "author": {"name": "Anton Kovalyov", "email": "anton@kovalyov.net", "url": "http://anton.kovalyov.net/", "username": "antonkovalyov"}, "publisher": {"username": "jugglinmike", "email": "mike@mikepennisi.com"}, "maintainers": [{"username": "antonkovalyov", "email": "anton@kovalyov.net"}, {"username": "jugglinmike", "email": "mike@mikepennisi.com"}, {"username": "rwaldron", "email": "waldron.rick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jshint/jshint.git"}, "links": {"npm": "https://www.npmjs.com/package/jshint", "homepage": "http://jshint.com/", "repository": "https://github.com/jshint/jshint", "bugs": "https://github.com/jshint/jshint/issues"}, "license": "(MIT AND JSON)", "dependencies": {"cli": "~1.0.0", "console-browserify": "1.1.x", "exit": "0.1.x", "htmlparser2": "3.8.x", "lodash": "~4.17.11", "minimatch": "~3.0.2", "shelljs": "0.3.x", "strip-json-comments": "1.0.x"}, "devDependencies": {"async": "~2.1.2", "browserify": "9.x", "conventional-changelog": "0.4.x", "conventional-github-releaser": "0.4.x", "coveralls": "2.11.x", "istanbul": "0.3.x", "jscs": "1.11.x", "mock-stdin": "0.3.x", "nodeunit": "0.9.x", "puppeteer": "1.20.0", "regenerate": "1.2.x", "results-interpreter": "~1.0.0", "sinon": "1.12.x", "test262-stream": "~1.2.1", "unicode-5.2.0": "^0.7.5", "unicode-11.0.0": "0.7.x"}, "releases": [{"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 0}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 2}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 3}, {"from": "2018-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# JSHint, A Static Code Analysis Tool for JavaScript\n\n\\[ [Use it online](http://jshint.com/) \u2022\n[Docs](http://jshint.com/docs/) \u2022 [FAQ](http://jshint.com/docs/faq) \u2022\n[Install](http://jshint.com/install/) \u2022\n[Contribute](http://jshint.com/contribute/) \u2022\n[Blog](http://jshint.com/blog/) \u2022 [Twitter](https://twitter.com/jshint/) \\]\n\n[![NPM version](https://img.shields.io/npm/v/jshint.svg?style=flat)](https://www.npmjs.com/package/jshint)\n[![Linux Build Status](https://img.shields.io/travis/jshint/jshint/master.svg?style=flat&label=Linux%20build)](https://travis-ci.org/jshint/jshint)\n[![Windows Build status](https://img.shields.io/appveyor/ci/jshint/jshint/master.svg?style=flat&label=Windows%20build)](https://ci.appveyor.com/project/jshint/jshint/branch/master)\n[![Dependency Status](https://img.shields.io/david/jshint/jshint.svg?style=flat)](https://david-dm.org/jshint/jshint)\n[![devDependency Status](https://img.shields.io/david/dev/jshint/jshint.svg?style=flat)](https://david-dm.org/jshint/jshint#info=devDependencies)\n[![Coverage Status](https://img.shields.io/coveralls/jshint/jshint.svg?style=flat)](https://coveralls.io/r/jshint/jshint?branch=master)\n\nJSHint is a community-driven tool that detects errors and potential problems in\nJavaScript code. Since JSHint is so flexible, you can easily adjust it in \nthe environment you expect your code to execute. JSHint is publicly available\nand will always stay this way.\n\n## Our goal\n\nThe project aims to help JavaScript developers write complex programs\nwithout worrying about typos and language gotchas.\n\nAny code base eventually becomes huge at some point, so simple mistakes \u2014 that\nwould not show themselves when written \u2014 can become show stoppers and add \nextra hours of debugging. So, static code analysis tools come into play\nand help developers spot such problems. JSHint scans a program written in\nJavaScript and reports about commonly made mistakes and potential bugs. The\npotential problem could be a syntax error, a bug due to an implicit type\nconversion, a leaking variable, or something else entirely.\n\nOnly 15% of all programs linted on [jshint.com](http://jshint.com) pass the\nJSHint checks. In all other cases, JSHint finds some red flags that could've\nbeen bugs or potential problems.\n\nPlease note, that while static code analysis tools can spot many different kind\nof mistakes, it can't detect if your program is correct, fast or has memory\nleaks. You should always combine tools like JSHint with unit and functional\ntests as well as with code reviews.\n\n## Reporting a bug\n\nTo report a bug simply create a\n[new GitHub Issue](https://github.com/jshint/jshint/issues/new) and describe\nyour problem or suggestion. We welcome all kinds of feedback regarding\nJSHint including but not limited to:\n\n * When JSHint doesn't work as expected\n * When JSHint complains about valid JavaScript code that works in all browsers\n * When you simply want a new option or feature\n\nBefore reporting a bug, please look around to see if there are any open or closed tickets\nthat discuss your issue, and remember the wisdom: pull request > bug report > tweet.\n\n## Who uses JSHint?\n\nEngineers from these companies and projects use JSHint:\n\n* [Mozilla](https://www.mozilla.org/)\n* [Wikipedia](https://wikipedia.org/)\n* [Facebook](https://facebook.com/)\n* [Twitter](https://twitter.com/)\n* [Disqus](https://disqus.com/)\n* [Medium](https://medium.com/)\n* [Yahoo!](https://yahoo.com/)\n* [SmugMug](http://smugmug.com/)\n* [jQuery UI](https://jqueryui.com/) ([Source](https://github.com/jquery/jquery-ui/blob/master/package.json))\n* [jQuery Mobile](https://jquerymobile.com/) ([Source](https://github.com/jquery/jquery-mobile/blob/master/package.json#))\n* [Coursera](http://coursera.com/)\n* [RedHat](http://redhat.com/)\n* [SoundCloud](http://soundcloud.com/)\n* [Nodejitsu](http://nodejitsu.com/)\n* [Yelp](https://yelp.com/)\n* [Voxer](http://voxer.com/)\n* [EnyoJS](http://enyojs.com/)\n* [QuickenLoans](http://quickenloans.com/)\n* [Cloud9](http://c9.io/)\n* [CodeClimate](https://codeclimate.com/)\n* [Zendesk](http://zendesk.com/)\n* [Google](https://www.google.com/)\n* [Codacy](https://www.codacy.com) [ref](https://support.codacy.com/hc/en-us/articles/207995005-Special-Thanks)\n* [Spotify](https://www.spotify.com)\n\nAnd many more!\n\n## License\n\nMost files are published using [the standard MIT Expat\nlicense](https://www.gnu.org/licenses/license-list.html#Expat). One file,\nhowever, is provided under a slightly modified version of that license. The\nso-called [JSON license](https://www.gnu.org/licenses/license-list.html#JSON)\nis a non-free license, and unfortunately, we can't change it due to historical\nreasons. This license is included as an in-line within the file it concerns.\n\n## The JSHint Team\n\nJSHint is currently maintained by [Rick Waldron](https://github.com/rwaldron/),\n[Caitlin Potter](https://github.com/caitp/), [Mike\nPennisi](https://github.com/jugglinmike/), and [Luke\nPage](https://github.com/lukeapage). You can reach them via admin@jshint.org.\n\n## Previous Maintainers\n\nOriginating from the JSLint project in 2010, JSHint has been maintained by a\nnumber of dedicated individuals. In chronological order, they are: Douglas\nCrockford, Anton Kovalyov, and Mike Sherov. We appreciate their long-term\ncommitment!\n\n## Thank you!\n\nWe really appreciate all kinds of feedback and contributions. Thanks for using and supporting JSHint!"}, "npm": {"downloads": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 101300}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 536859}, {"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 2301303}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 6847605}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 12581329}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 26314713}], "dependentsCount": 685, "starsCount": 209}, "github": {"homepage": "http://jshint.com", "starsCount": 8375, "forksCount": 1697, "subscribersCount": 308, "issues": {"count": 3452, "openCount": 431, "distribution": {"3600": 265, "10800": 145, "32400": 185, "97200": 235, "291600": 302, "874800": 469, "2624400": 536, "7873200": 387, "23619600": 316, "70858800": 198, "212576400": 414}, "isDisabled": false}, "contributors": [{"username": "valueof", "commitsCount": 493}, {"username": "jugglinmike", "commitsCount": 354}, {"username": "guyzmo", "commitsCount": 99}, {"username": "lukeapage", "commitsCount": 59}, {"username": "nicolo-ribaudo", "commitsCount": 52}, {"username": "usrbincc", "commitsCount": 52}, {"username": "rwaldron", "commitsCount": 51}, {"username": "caitp", "commitsCount": 44}, {"username": "goatslacker", "commitsCount": 44}, {"username": "WolfgangKluge", "commitsCount": 43}, {"username": "jshaptic", "commitsCount": 33}, {"username": "paul-wade", "commitsCount": 31}, {"username": "douglascrockford", "commitsCount": 27}, {"username": "XhmikosR", "commitsCount": 23}, {"username": "leebyron", "commitsCount": 18}, {"username": "benblank", "commitsCount": 11}, {"username": "jamesallardice", "commitsCount": 9}, {"username": "founddrama", "commitsCount": 7}, {"username": "nschonni", "commitsCount": 7}, {"username": "TheJosh", "commitsCount": 6}, {"username": "bkw", "commitsCount": 6}, {"username": "julienw", "commitsCount": 6}, {"username": "kevinoid", "commitsCount": 6}, {"username": "leamingrad", "commitsCount": 6}, {"username": "Raynos", "commitsCount": 5}, {"username": "Rob--W", "commitsCount": 5}, {"username": "mattfysh", "commitsCount": 5}, {"username": "mbildner", "commitsCount": 5}, {"username": "shybyte", "commitsCount": 5}, {"username": "xiemaisi", "commitsCount": 5}, {"username": "am11", "commitsCount": 4}, {"username": "arai-a", "commitsCount": 4}, {"username": "arikon", "commitsCount": 4}, {"username": "david-gang", "commitsCount": 4}, {"username": "denis-sokolov", "commitsCount": 4}, {"username": "joelrbrandt", "commitsCount": 4}, {"username": "mathiasbynens", "commitsCount": 4}, {"username": "mikesherov", "commitsCount": 4}, {"username": "stevemao", "commitsCount": 4}, {"username": "stevenbenner", "commitsCount": 4}, {"username": "J-Griffin", "commitsCount": 3}, {"username": "cburgmer", "commitsCount": 3}, {"username": "domenic", "commitsCount": 3}, {"username": "erawk", "commitsCount": 3}, {"username": "hpshelton", "commitsCount": 3}, {"username": "mgol", "commitsCount": 3}, {"username": "niedzielski", "commitsCount": 3}, {"username": "ossdev07", "commitsCount": 3}, {"username": "pracj3am", "commitsCount": 3}, {"username": "samuelcole", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "thomasboyt", "commitsCount": 3}, {"username": "victor-homyakov", "commitsCount": 3}, {"username": "zpao", "commitsCount": 3}, {"username": "DimitarChristoff", "commitsCount": 2}, {"username": "Famlam", "commitsCount": 2}, {"username": "RReverser", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "TPei", "commitsCount": 2}, {"username": "Wizek", "commitsCount": 2}, {"username": "ajakaja", "commitsCount": 2}, {"username": "artnez", "commitsCount": 2}, {"username": "charmander", "commitsCount": 2}, {"username": "croensch", "commitsCount": 2}, {"username": "danvk", "commitsCount": 2}, {"username": "fabiomcosta", "commitsCount": 2}, {"username": "jamiebuilds", "commitsCount": 2}, {"username": "kangax", "commitsCount": 2}, {"username": "lukx", "commitsCount": 2}, {"username": "mbulman", "commitsCount": 2}, {"username": "michaelhogg", "commitsCount": 2}, {"username": "mrjoelkemp", "commitsCount": 2}, {"username": "pamelafox", "commitsCount": 2}, {"username": "phadej", "commitsCount": 2}, {"username": "rixth", "commitsCount": 2}, {"username": "robrich", "commitsCount": 2}, {"username": "sconover", "commitsCount": 2}, {"username": "smozely", "commitsCount": 2}, {"username": "solmsted", "commitsCount": 2}, {"username": "spudly", "commitsCount": 2}, {"username": "sstern6", "commitsCount": 2}, {"username": "stephenmathieson", "commitsCount": 2}, {"username": "timendum", "commitsCount": 2}, {"username": "ypresto", "commitsCount": 2}, {"username": "Flarp", "commitsCount": 1}, {"username": "bih", "commitsCount": 1}, {"username": "code-tree", "commitsCount": 1}, {"username": "ebullient", "commitsCount": 1}, {"username": "flaviojs", "commitsCount": 1}, {"username": "iamlikeme-x", "commitsCount": 1}, {"username": "jackschmidt", "commitsCount": 1}, {"username": "kawanet", "commitsCount": 1}, {"username": "kpiotr", "commitsCount": 1}, {"username": "patrickdark", "commitsCount": 1}, {"username": "pcmanik", "commitsCount": 1}, {"username": "plr108", "commitsCount": 1}, {"username": "stvcisco", "commitsCount": 1}, {"username": "sunilkumarc", "commitsCount": 1}, {"username": "thetric", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}], "commits": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 1}, {"from": "2020-04-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 9}, {"from": "2020-02-14T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 14}, {"from": "2019-11-16T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 23}, {"from": "2019-05-15T00:00:00.000Z", "to": "2020-05-14T00:00:00.000Z", "count": 44}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5407, "testsSize": 2512939, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/jshint.svg?style=flat", "shields": "https://img.shields.io/npm/v/jshint.svg", "content": "https://img.shields.io/npm/v/jshint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/jshint/jshint/master.svg?label=Linux%20build", "service": "https://api.travis-ci.org/jshint/jshint.svg?branch=master", "shields": "https://img.shields.io/travis/jshint/jshint/master.svg", "content": "https://img.shields.io/travis/jshint/jshint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/jshint/jshint/master.svg?label=Windows%20build", "service": "https://ci.appveyor.com/api/projects/status/jshint/jshint/branch/master", "shields": "https://img.shields.io/appveyor/ci/jshint/jshint/master.svg", "content": "https://img.shields.io/appveyor/ci/jshint/jshint/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/jshint/jshint.svg?style=flat", "service": "https://david-dm.org/jshint/jshint.svg", "shields": "https://img.shields.io/david/jshint/jshint.svg", "content": "https://img.shields.io/david/jshint/jshint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/jshint/jshint.svg?style=flat", "service": "https://david-dm.org/jshint/jshint/dev-status.svg", "shields": "https://img.shields.io/david/dev/jshint/jshint.svg", "content": "https://img.shields.io/david/dev/jshint/jshint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://img.shields.io/coveralls/jshint/jshint.svg?style=flat", "service": "https://coveralls.io/repos/jshint/jshint/badge.svg", "shields": "https://img.shields.io/coveralls/jshint/jshint.svg", "content": "https://img.shields.io/coveralls/jshint/jshint.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["jscs", "jshint"], "coverage": 1, "outdatedDependencies": {"strip-json-comments": {"required": "1.0.x", "stable": "3.1.0", "latest": "3.1.0"}, "console-browserify": {"required": "1.1.x", "stable": "1.2.0", "latest": "1.2.0"}, "htmlparser2": {"required": "3.8.x", "stable": "4.1.0", "latest": "4.1.0"}, "shelljs": {"required": "0.3.x", "stable": "0.8.4", "latest": "0.8.4"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 10689, "downloadsCount": 2282535, "downloadsAcceleration": 604.0410007610371, "dependentsCount": 685}, "maintenance": {"releasesFrequency": 0.5982876712328767, "commitsFrequency": 0.9119657534246576, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6987624585869118, "detail": {"quality": 0.9392011543022779, "popularity": 0.5304265344290521, "maintenance": 0.6610080721316004}}}}, {"@types/react-dom": {"analyzedAt": "2018-06-02T04:59:00.892Z", "collected": {"metadata": {"name": "@types/react-dom", "scope": "types", "version": "16.0.5", "description": "TypeScript definitions for React (react-dom)", "date": "2018-04-10T17:50:02.517Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "AssureSign", "url": "http://www.assuresign.com"}, {"name": "Microsoft", "url": "https://microsoft.com"}, {"name": "MartynasZilinskas", "url": "https://github.com/MartynasZilinskas"}, {"name": "Josh Rutherford", "url": "https://github.com/theruther4d"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Freact-dom"}, "license": "MIT", "dependencies": {"@types/react": "*", "@types/node": "*"}, "releases": [{"from": "2018-05-03T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 1}, {"from": "2018-03-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 2}, {"from": "2017-12-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 4}, {"from": "2017-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 14}, {"from": "2016-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 30}], "readme": "# Installation\r\n> `npm install --save @types/react-dom`\r\n\r\n# Summary\r\nThis package contains type definitions for React (react-dom) (http://facebook.github.io/react/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/react-dom\r\n\r\nAdditional Details\r\n * Last updated: Tue, 10 Apr 2018 17:48:29 GMT\r\n * Dependencies: react, node\r\n * Global values: ReactDOM, ReactDOMNodeStream, ReactDOMServer\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, AssureSign <http://www.assuresign.com>, Microsoft <https://microsoft.com>, MartynasZilinskas <https://github.com/MartynasZilinskas>, Josh Rutherford <https://github.com/theruther4d>."}, "npm": {"downloads": [{"from": "2018-06-01T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 0}, {"from": "2018-05-26T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 57249}, {"from": "2018-05-03T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 1112244}, {"from": "2018-03-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 3836970}, {"from": "2017-12-04T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 6678332}, {"from": "2017-06-02T00:00:00.000Z", "to": "2018-06-02T00:00:00.000Z", "count": 10499888}], "dependentsCount": 393, "starsCount": 4}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0.3333333333333333, "branding": 0}, "popularity": {"communityInterest": 4, "downloadsCount": 1278990, "downloadsAcceleration": 4160.752891933031, "dependentsCount": 393}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-react-dom-lziir8cwes/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-05-19T22:10:52.678Z"}, "score": {"final": 0.3176103181780889, "detail": {"quality": 0.2931573641208691, "popularity": 0.32284697792903283, "maintenance": 0.3333333333333333}}}}, {"gulp-util": {"analyzedAt": "2020-05-11T12:01:23.022Z", "collected": {"metadata": {"name": "gulp-util", "scope": "unscoped", "version": "3.0.8", "description": "Utility functions for gulp plugins", "date": "2016-12-26T23:11:10.645Z", "author": {"name": "Fractal", "email": "contact@wearefractal.com", "url": "http://wearefractal.com/"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/gulpjs/gulp-util.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-util", "homepage": "https://github.com/gulpjs/gulp-util#readme", "repository": "https://github.com/gulpjs/gulp-util", "bugs": "https://github.com/gulpjs/gulp-util/issues"}, "license": "MIT", "dependencies": {"array-differ": "^1.0.0", "array-uniq": "^1.0.2", "beeper": "^1.0.0", "chalk": "^1.0.0", "dateformat": "^2.0.0", "fancy-log": "^1.1.0", "gulplog": "^1.0.0", "has-gulplog": "^0.1.0", "lodash._reescape": "^3.0.0", "lodash._reevaluate": "^3.0.0", "lodash._reinterpolate": "^3.0.0", "lodash.template": "^3.0.0", "minimist": "^1.1.0", "multipipe": "^0.1.2", "object-assign": "^3.0.0", "replace-ext": "0.0.1", "through2": "^2.0.0", "vinyl": "^0.5.0"}, "devDependencies": {"buffer-equal": "^0.0.1", "coveralls": "^2.11.2", "event-stream": "^3.1.7", "istanbul": "^0.3.5", "istanbul-coveralls": "^1.0.1", "jshint": "^2.5.11", "lodash.templatesettings": "^3.0.0", "mocha": "^2.0.1", "rimraf": "^2.2.8", "should": "^7.0.1"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}], "deprecated": "gulp-util is deprecated - replace it, following the guidelines at https://medium.com/gulpjs/gulp-util-ca3b1f9f9ac5", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gulp-util [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![Dependency Status][depstat-image]][depstat-url]\n\n## Information\n\n<table>\n<tr> \n<td>Package</td><td>gulp-util</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Utility functions for gulp plugins</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.10</td>\n</tr>\n</table>\n\n## Usage\n\n```javascript\nvar gutil = require('gulp-util');\n\ngutil.log('stuff happened', 'Really it did', gutil.colors.magenta('123'));\n\ngutil.replaceExtension('file.coffee', '.js'); // file.js\n\nvar opt = {\n  name: 'todd',\n  file: someGulpFile\n};\ngutil.template('test <%= name %> <%= file.path %>', opt) // test todd /js/hi.js\n```\n\n### log(msg...)\n\nLogs stuff. Already prefixed with [gulp] and all that. If you pass in multiple arguments it will join them by a space.\n\nThe default gulp coloring using gutil.colors.<color>:\n```\nvalues (files, module names, etc.) = cyan\nnumbers (times, counts, etc) = magenta\n```\n\n### colors\n\nIs an instance of [chalk](https://github.com/sindresorhus/chalk).\n\n### replaceExtension(path, newExtension)\n\nReplaces a file extension in a path. Returns the new path.\n\n### isStream(obj)\n\nReturns true or false if an object is a stream.\n\n### isBuffer(obj)\n\nReturns true or false if an object is a Buffer.\n\n### template(string[, data])\n\nThis is a lodash.template function wrapper. You must pass in a valid gulp file object so it is available to the user or it will error. You can not configure any of the delimiters. Look at the [lodash docs](http://lodash.com/docs#template) for more info.\n\n## new File(obj)\n\nThis is just [vinyl](https://github.com/wearefractal/vinyl)\n\n```javascript\nvar file = new gutil.File({\n  base: path.join(__dirname, './fixtures/'),\n  cwd: __dirname,\n  path: path.join(__dirname, './fixtures/test.coffee')\n});\n```\n\n## noop()\n\nReturns a stream that does nothing but pass data straight through.\n\n```javascript\n// gulp should be called like this :\n// $ gulp --type production\ngulp.task('scripts', function() {\n  gulp.src('src/**/*.js')\n    .pipe(concat('script.js'))\n    .pipe(gutil.env.type === 'production' ? uglify() : gutil.noop())\n    .pipe(gulp.dest('dist/'));\n});\n```\n\n## buffer(cb)\n\nThis is similar to es.wait but instead of buffering text into one string it buffers anything into an array (so very useful for file objects).\n\nReturns a stream that can be piped to.\n\nThe stream will emit one data event after the stream piped to it has ended. The data will be the same array passed to the callback.\n\nCallback is optional and receives two arguments: error and data\n\n```javascript\ngulp.src('stuff/*.js')\n  .pipe(gutil.buffer(function(err, files) {\n  \n  }));\n```\n\n## new PluginError(pluginName, message[, options])\n\n- pluginName should be the module name of your plugin\n- message can be a string or an existing error\n- By default the stack will not be shown. Set `options.showStack` to true if you think the stack is important for your error.\n- If you pass an error in as the message the stack will be pulled from that, otherwise one will be created.\n- Note that if you pass in a custom stack string you need to include the message along with that.\n- Error properties will be included in `err.toString()`. Can be omitted by including `{showProperties: false}` in the options.\n\nThese are all acceptable forms of instantiation:\n\n```javascript\nvar err = new gutil.PluginError('test', {\n  message: 'something broke'\n});\n\nvar err = new gutil.PluginError({\n  plugin: 'test',\n  message: 'something broke'\n});\n\nvar err = new gutil.PluginError('test', 'something broke');\n\nvar err = new gutil.PluginError('test', 'something broke', {showStack: true});\n\nvar existingError = new Error('OMG');\nvar err = new gutil.PluginError('test', existingError, {showStack: true});\n```\n\n[npm-url]: https://www.npmjs.com/package/gulp-util\n[npm-image]: https://badge.fury.io/js/gulp-util.svg\n[travis-url]: https://travis-ci.org/gulpjs/gulp-util\n[travis-image]: https://img.shields.io/travis/gulpjs/gulp-util.svg?branch=master\n[coveralls-url]: https://coveralls.io/r/gulpjs/gulp-util\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp-util.svg\n[depstat-url]: https://david-dm.org/gulpjs/gulp-util\n[depstat-image]: https://david-dm.org/gulpjs/gulp-util.svg"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 54717}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1320219}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 5475712}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 17849504}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 34236225}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 73209691}], "dependentsCount": 6121, "starsCount": 221}, "github": {"starsCount": 848, "forksCount": 103, "subscribersCount": 24, "issues": {"count": 165, "openCount": 3, "distribution": {"3600": 49, "10800": 20, "32400": 26, "97200": 18, "291600": 9, "874800": 6, "2624400": 5, "7873200": 16, "23619600": 5, "70858800": 7, "212576400": 4}, "isDisabled": false}, "contributors": [{"username": "contra", "commitsCount": 87}, {"username": "mtscout6", "commitsCount": 16}, {"username": "sindresorhus", "commitsCount": 9}, {"username": "phated", "commitsCount": 8}, {"username": "shinnn", "commitsCount": 8}, {"username": "milang", "commitsCount": 4}, {"username": "stringparser", "commitsCount": 4}, {"username": "ben-eb", "commitsCount": 3}, {"username": "floatdrop", "commitsCount": 3}, {"username": "sttk", "commitsCount": 3}, {"username": "makky3939", "commitsCount": 2}, {"username": "CaleyD", "commitsCount": 1}, {"username": "Kingdutch", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "RR2DO2", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "arthurvr", "commitsCount": 1}, {"username": "avevlad", "commitsCount": 1}, {"username": "bumbu", "commitsCount": 1}, {"username": "dashed", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "ft-arnout", "commitsCount": 1}, {"username": "funkytek", "commitsCount": 1}, {"username": "hughsk", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "jdalton", "commitsCount": 1}, {"username": "jonschlinkert", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "lazd", "commitsCount": 1}, {"username": "pascalduez", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "safareli", "commitsCount": 1}, {"username": "saschagehlich", "commitsCount": 1}, {"username": "saturation", "commitsCount": 1}, {"username": "stevelacy", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4294, "testsSize": 18683}, "badges": [{"urls": {"original": "https://img.shields.io/travis/gulpjs/gulp-util.svg?branch=master", "service": "https://api.travis-ci.org/gulpjs/gulp-util.svg", "shields": "https://img.shields.io/travis/gulpjs/gulp-util.svg", "content": "https://img.shields.io/travis/gulpjs/gulp-util.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulpjs/gulp-util.svg", "service": "https://coveralls.io/repos/gulpjs/gulp-util/badge.svg", "shields": "https://img.shields.io/coveralls/gulpjs/gulp-util.svg", "content": "https://img.shields.io/coveralls/gulpjs/gulp-util.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://david-dm.org/gulpjs/gulp-util.svg", "service": "https://david-dm.org/gulpjs/gulp-util.svg", "shields": "https://img.shields.io/david/gulpjs/gulp-util.svg", "content": "https://img.shields.io/david/gulpjs/gulp-util.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["jshint"], "coverage": 0.98, "outdatedDependencies": {"dateformat": {"required": "^2.0.0", "stable": "3.0.3", "latest": "3.0.3"}, "beeper": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}, "array-uniq": {"required": "^1.0.2", "stable": "2.1.0", "latest": "2.1.0"}, "array-differ": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "object-assign": {"required": "^3.0.0", "stable": "4.1.1", "latest": "4.1.1"}, "multipipe": {"required": "^0.1.2", "stable": "4.0.0", "latest": "4.0.0"}, "lodash.template": {"required": "^3.0.0", "stable": "4.5.0", "latest": "4.5.0"}, "vinyl": {"required": "^0.5.0", "stable": "2.2.0", "latest": "2.2.0"}, "replace-ext": {"required": "0.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "chalk": {"required": "^1.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.997, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1232, "downloadsCount": 5949834.666666667, "downloadsAcceleration": -7106.002111872149, "dependentsCount": 6121}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0.13952054794520546, "openIssues": 1, "issuesDistribution": 0.4967077091942147}}, "score": {"final": 0.5710536224475835, "detail": {"quality": 0.587168068123524, "popularity": 0.5366238038594658, "maintenance": 0.5916710590277523}}}}, {"nodemon": {"analyzedAt": "2020-06-04T01:41:27.597Z", "collected": {"metadata": {"name": "nodemon", "scope": "unscoped", "version": "2.0.4", "description": "Simple monitor script for use during development of a node.js app.", "keywords": ["monitor", "development", "restart", "autoload", "reload", "terminal"], "date": "2020-05-14T11:33:05.837Z", "author": {"name": "Remy Sharp", "url": "http://github.com/remy"}, "publisher": {"username": "remy", "email": "remy@leftlogic.com"}, "maintainers": [{"username": "remy", "email": "remy@leftlogic.com"}], "repository": {"type": "git", "url": "git+https://github.com/remy/nodemon.git"}, "links": {"npm": "https://www.npmjs.com/package/nodemon", "homepage": "http://nodemon.io", "repository": "https://github.com/remy/nodemon", "bugs": "https://github.com/remy/nodemon/issues"}, "license": "MIT", "dependencies": {"chokidar": "^3.2.2", "debug": "^3.2.6", "ignore-by-default": "^1.0.1", "minimatch": "^3.0.4", "pstree.remy": "^1.1.7", "semver": "^5.7.1", "supports-color": "^5.5.0", "touch": "^3.1.0", "undefsafe": "^2.0.2", "update-notifier": "^4.0.0"}, "devDependencies": {"@commitlint/cli": "^3.1.3", "@commitlint/config-angular": "^3.1.1", "async": "1.4.2", "coffee-script": "~1.7.1", "husky": "^0.14.3", "istanbul": "^0.4.5", "jscs": "^3.0.7", "mocha": "^2.5.3", "proxyquire": "^1.8.0", "semantic-release": "^8.2.3", "should": "~4.0.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 29}], "hasTestScript": true, "readme": "<p align=\"center\">\n  <img src=\"https://user-images.githubusercontent.com/13700/35731649-652807e8-080e-11e8-88fd-1b2f6d553b2d.png\" alt=\"Nodemon Logo\">\n</p>\n\n# nodemon\n\nnodemon is a tool that helps develop node.js based applications by automatically restarting the node application when file changes in the directory are detected.\n\nnodemon does **not** require *any* additional changes to your code or method of development. nodemon is a replacement wrapper for `node`. To use `nodemon`, replace the word `node` on the command line when executing your script.\n\n[![NPM version](https://badge.fury.io/js/nodemon.svg)](https://npmjs.org/package/nodemon)\n[![Travis Status](https://travis-ci.org/remy/nodemon.svg?branch=master)](https://travis-ci.org/remy/nodemon) [![Backers on Open Collective](https://opencollective.com/nodemon/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/nodemon/sponsors/badge.svg)](#sponsors)\n\n# Installation\n\nEither through cloning with git or by using [npm](http://npmjs.org) (the recommended way):\n\n```bash\nnpm install -g nodemon\n```\n\nAnd nodemon will be installed globally to your system path.\n\nYou can also install nodemon as a development dependency:\n\n```bash\nnpm install --save-dev nodemon\n```\n\nWith a local installation, nodemon will not be available in your system path. Instead, the local installation of nodemon can be run by calling it from within an npm script (such as `npm start`) or using `npx nodemon`.\n\n# Usage\n\nnodemon wraps your application, so you can pass all the arguments you would normally pass to your app:\n\n```bash\nnodemon [your node app]\n```\n\nFor CLI options, use the `-h` (or `--help`) argument:\n\n```bash\nnodemon -h\n```\n\nUsing nodemon is simple, if my application accepted a host and port as the arguments, I would start it as so:\n\n```bash\nnodemon ./server.js localhost 8080\n```\n\nAny output from this script is prefixed with `[nodemon]`, otherwise all output from your application, errors included, will be echoed out as expected.\n\nIf no script is given, nodemon will test for a `package.json` file and if found, will run the file associated with the *main* property ([ref](https://github.com/remy/nodemon/issues/14)).\n\nYou can also pass the `inspect` flag to node through the command line as you would normally:\n\n```bash\nnodemon --inspect ./server.js 80\n```\n\nIf you have a `package.json` file for your app, you can omit the main script entirely and nodemon will read the `package.json` for the `main` property and use that value as the app.\n\nnodemon will also search for the `scripts.start` property in `package.json` (as of nodemon 1.1.x).\n\nAlso check out the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) or [issues](https://github.com/remy/nodemon/issues) for nodemon.\n\n## Automatic re-running\n\nnodemon was originally written to restart hanging processes such as web servers, but now supports apps that cleanly exit. If your script exits cleanly, nodemon will continue to monitor the directory (or directories) and restart the script if there are any changes.\n\n## Manual restarting\n\nWhilst nodemon is running, if you need to manually restart your application, instead of stopping and restart nodemon, you can type `rs` with a carriage return, and nodemon will restart your process.\n\n## Config files\n\nnodemon supports local and global configuration files. These are usually named `nodemon.json` and can be located in the current working directory or in your home directory. An alternative local configuration file can be specified with the `--config <file>` option.\n\nThe specificity is as follows, so that a command line argument will always override the config file settings:\n\n- command line arguments\n- local config\n- global config\n\nA config file can take any of the command line arguments as JSON key values, for example:\n\n```json\n{\n  \"verbose\": true,\n  \"ignore\": [\"*.test.js\", \"fixtures/*\"],\n  \"execMap\": {\n    \"rb\": \"ruby\",\n    \"pde\": \"processing --sketch={{pwd}} --run\"\n  }\n}\n```\n\nThe above `nodemon.json` file might be my global config so that I have support for ruby files and processing files, and I can run `nodemon demo.pde` and nodemon will automatically know how to run the script even though out of the box support for processing scripts.\n\nA further example of options can be seen in [sample-nodemon.md](https://github.com/remy/nodemon/blob/master/doc/sample-nodemon.md)\n\n### package.json\n\nIf you want to keep all your package configurations in one place, nodemon supports using `package.json` for configuration.\nSpecify the config in the same format as you would for a config file but under `nodemonConfig` in the `package.json` file, for example, take the following `package.json`:\n\n```json\n{\n  \"name\": \"nodemon\",\n  \"homepage\": \"http://nodemon.io\",\n  \"...\": \"... other standard package.json values\",\n  \"nodemonConfig\": {\n    \"ignore\": [\"test/*\", \"docs/*\"],\n    \"delay\": \"2500\"\n  }\n}\n```\n\nNote that if you specify a `--config` file or provide a local `nodemon.json` any `package.json` config is ignored.\n\n*This section needs better documentation, but for now you can also see `nodemon --help config` ([also here](https://github.com/remy/nodemon/blob/master/doc/cli/config.txt))*.\n\n## Using nodemon as a module\n\nPlease see [doc/requireable.md](doc/requireable.md)\n\n## Using nodemon as child process\n\nPlease see [doc/events.md](doc/events.md#Using_nodemon_as_child_process)\n\n## Running non-node scripts\n\nnodemon can also be used to execute and monitor other programs. nodemon will read the file extension of the script being run and monitor that extension instead of `.js` if there's no `nodemon.json`:\n\n```bash\nnodemon --exec \"python -v\" ./app.py\n```\n\nNow nodemon will run `app.py` with python in verbose mode (note that if you're not passing args to the exec program, you don't need the quotes), and look for new or modified files with the `.py` extension.\n\n### Default executables\n\nUsing the `nodemon.json` config file, you can define your own default executables using the `execMap` property. This is particularly useful if you're working with a language that isn't supported by default by nodemon.\n\nTo add support for nodemon to know about the `.pl` extension (for Perl), the `nodemon.json` file would add:\n\n```json\n{\n  \"execMap\": {\n    \"pl\": \"perl\"\n  }\n}\n```\n\nNow running the following, nodemon will know to use `perl` as the executable:\n\n```bash\nnodemon script.pl\n```\n\nIt's generally recommended to use the global `nodemon.json` to add your own `execMap` options. However, if there's a common default that's missing, this can be merged in to the project so that nodemon supports it by default, by changing [default.js](https://github.com/remy/nodemon/blob/master/lib/config/defaults.js) and sending a pull request.\n\n## Monitoring multiple directories\n\nBy default nodemon monitors the current working directory. If you want to take control of that option, use the `--watch` option to add specific paths:\n\n```bash\nnodemon --watch app --watch libs app/server.js\n```\n\nNow nodemon will only restart if there are changes in the `./app` or `./libs` directory. By default nodemon will traverse sub-directories, so there's no need in explicitly including sub-directories.\n\nDon't use unix globbing to pass multiple directories, e.g `--watch ./lib/*`, it won't work. You need a `--watch` flag per directory watched.\n\n## Specifying extension watch list\n\nBy default, nodemon looks for files with the `.js`, `.mjs`, `.coffee`, `.litcoffee`, and `.json` extensions. If you use the `--exec` option and monitor `app.py` nodemon will monitor files with the extension of `.py`. However, you can specify your own list with the `-e` (or `--ext`) switch like so:\n\n```bash\nnodemon -e js,pug\n```\n\nNow nodemon will restart on any changes to files in the directory (or subdirectories) with the extensions `.js`, `.pug`.\n\n## Ignoring files\n\nBy default, nodemon will only restart when a `.js` JavaScript file changes. In some cases you will want to ignore some specific files, directories or file patterns, to prevent nodemon from prematurely restarting your application.\n\nThis can be done via the command line:\n\n```bash\nnodemon --ignore lib/ --ignore tests/\n```\n\nOr specific files can be ignored:\n\n```bash\nnodemon --ignore lib/app.js\n```\n\nPatterns can also be ignored (but be sure to quote the arguments):\n\n```bash\nnodemon --ignore 'lib/*.js'\n```\n\nNote that by default, nodemon will ignore the `.git`, `node_modules`, `bower_components`, `.nyc_output`, `coverage` and `.sass-cache` directories and *add* your ignored patterns to the list. If you want to indeed watch a directory like `node_modules`, you need to [override the underlying default ignore rules](https://github.com/remy/nodemon/blob/master/faq.md#overriding-the-underlying-default-ignore-rules).\n\n## Application isn't restarting\n\nIn some networked environments (such as a container running nodemon reading across a mounted drive), you will need to use the `legacyWatch: true` which enables Chokidar's polling.\n\nVia the CLI, use either `--legacy-watch` or `-L` for short:\n\n```bash\nnodemon -L\n```\n\nThough this should be a last resort as it will poll every file it can find.\n\n## Delaying restarting\n\nIn some situations, you may want to wait until a number of files have changed. The timeout before checking for new file changes is 1 second. If you're uploading a number of files and it's taking some number of seconds, this could cause your app to restart multiple times unnecessarily.\n\nTo add an extra throttle, or delay restarting, use the `--delay` command:\n\n```bash\nnodemon --delay 10 server.js\n```\n\nFor more precision, milliseconds can be specified.  Either as a float:\n\n```bash\nnodemon --delay 2.5 server.js\n```\n\nOr using the time specifier (ms):\n\n```bash\nnodemon --delay 2500ms server.js\n```\n\nThe delay figure is number of seconds (or milliseconds, if specified) to delay before restarting. So nodemon will only restart your app the given number of seconds after the *last* file change.\n\nIf you are setting this value in `nodemon.json`, the value will always be interpreted in milliseconds. E.g., the following are equivalent:\n\n```bash\nnodemon --delay 2.5\n\n{\n  \"delay\": \"2500\"\n}\n```\n\n## Gracefully reloading down your script\n\nIt is possible to have nodemon send any signal that you specify to your application.\n\n```bash\nnodemon --signal SIGHUP server.js\n```\n\nYour application can handle the signal as follows.\n\n```js\nprocess.once(\"SIGHUP\", function () {\n  reloadSomeConfiguration();\n})\n```\n\nPlease note that nodemon will send this signal to every process in the process tree.\n\nIf you are using `cluster`, then each workers (as well as the master) will receive the signal. If you wish to terminate all workers on receiving a `SIGHUP`, a common pattern is to catch the `SIGHUP` in the master, and forward `SIGTERM` to all workers, while ensuring that all workers ignore `SIGHUP`.\n\n```js\nif (cluster.isMaster) {\n  process.on(\"SIGHUP\", function () {\n    for (const worker of Object.values(cluster.workers)) {\n      worker.process.kill(\"SIGTERM\");\n    }\n  });\n} else {\n  process.on(\"SIGHUP\", function() {})\n}\n```\n\n## Controlling shutdown of your script\n\nnodemon sends a kill signal to your application when it sees a file update. If you need to clean up on shutdown inside your script you can capture the kill signal and handle it yourself.\n\nThe following example will listen once for the `SIGUSR2` signal (used by nodemon to restart), run the clean up process and then kill itself for nodemon to continue control:\n\n```js\nprocess.once('SIGUSR2', function () {\n  gracefulShutdown(function () {\n    process.kill(process.pid, 'SIGUSR2');\n  });\n});\n```\n\nNote that the `process.kill` is *only* called once your shutdown jobs are complete. Hat tip to [Benjie Gillam](http://www.benjiegillam.com/2011/08/node-js-clean-restart-and-faster-development-with-nodemon/) for writing this technique up.\n\n## Triggering events when nodemon state changes\n\nIf you want growl like notifications when nodemon restarts or to trigger an action when an event happens, then you can either `require` nodemon or add event actions to your `nodemon.json` file.\n\nFor example, to trigger a notification on a Mac when nodemon restarts, `nodemon.json` looks like this:\n\n```json\n{\n  \"events\": {\n    \"restart\": \"osascript -e 'display notification \\\"app restarted\\\" with title \\\"nodemon\\\"'\"\n  }\n}\n```\n\nA full list of available events is listed on the [event states wiki](https://github.com/remy/nodemon/wiki/Events#states). Note that you can bind to both states and messages.\n\n## Pipe output to somewhere else\n\n```js\nnodemon({\n  script: ...,\n  stdout: false // important: this tells nodemon not to output to console\n}).on('readable', function() { // the `readable` event indicates that data is ready to pick up\n  this.stdout.pipe(fs.createWriteStream('output.txt'));\n  this.stderr.pipe(fs.createWriteStream('err.txt'));\n});\n```\n\n## Using nodemon in your gulp workflow\n\nCheck out the [gulp-nodemon](https://github.com/JacksonGariety/gulp-nodemon) plugin to integrate nodemon with the rest of your project's gulp workflow.\n\n## Using nodemon in your Grunt workflow\n\nCheck out the [grunt-nodemon](https://github.com/ChrisWren/grunt-nodemon) plugin to integrate nodemon with the rest of your project's grunt workflow.\n\n## Pronunciation\n\n> nodemon, is it pronounced: node-mon, no-demon or node-e-mon (like pok\u00e9mon)?\n\nWell...I've been asked this many times before. I like that I've been asked this before. There's been bets as to which one it actually is.\n\nThe answer is simple, but possibly frustrating. I'm not saying (how I pronounce it). It's up to you to call it as you like. All answers are correct :)\n\n## Design principles\n\n- Fewer flags is better\n- Works across all platforms\n- Fewer features\n- Let individuals build on top of nodemon\n- Offer all CLI functionality as an API\n- Contributions must have and pass tests\n\nNodemon is not perfect, and CLI arguments has sprawled beyond where I'm completely happy, but perhaps it can be reduced a little one day.\n\n## FAQ\n\nSee the [FAQ](https://github.com/remy/nodemon/blob/master/faq.md) and please add your own questions if you think they would help others.\n\n## Backers\n\nThank you to all [our backers](https://opencollective.com/nodemon#backer)! \ud83d\ude4f\n\n[![nodemon backers](https://opencollective.com/nodemon/backers.svg?width=890)](https://opencollective.com/nodemon#backers)\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [Sponsor this project today \u2764\ufe0f](https://opencollective.com/nodemon#sponsor)\n\n[<img src=\"https://user-images.githubusercontent.com/13700/35731651-677aa3fc-080e-11e8-8580-75fa92db56ec.png\" width=\"200\">](https://sparkpo.st/nodemon)\n\n[<img src=\"https://user-images.githubusercontent.com/13700/35731622-421d4466-080e-11e8-8ddc-11c70e1cd79e.png\" width=\"200\">](https://mixmax.com)\n\n# License\n\nMIT [http://rem.mit-license.org](http://rem.mit-license.org)"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 506504}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2687600}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 11499179}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 32738059}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 58329165}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 105330956}], "dependentsCount": 1721, "starsCount": 624}, "github": {"homepage": "http://nodemon.io/", "starsCount": 20686, "forksCount": 1335, "subscribersCount": 259, "issues": {"count": 1722, "openCount": 9, "distribution": {"3600": 181, "10800": 103, "32400": 118, "97200": 134, "291600": 137, "874800": 165, "2624400": 232, "7873200": 200, "23619600": 152, "70858800": 213, "212576400": 87}, "isDisabled": false}, "contributors": [{"username": "remy", "commitsCount": 714}, {"username": "ChrisWren", "commitsCount": 16}, {"username": "dominykas", "commitsCount": 10}, {"username": "dylanmcd", "commitsCount": 10}, {"username": "fearphage", "commitsCount": 8}, {"username": "edi9999", "commitsCount": 5}, {"username": "novemberborn", "commitsCount": 5}, {"username": "pasindud", "commitsCount": 5}, {"username": "pensierinmusica", "commitsCount": 4}, {"username": "albertnetymk", "commitsCount": 3}, {"username": "coen-hyde", "commitsCount": 3}, {"username": "dpatti", "commitsCount": 3}, {"username": "forivall", "commitsCount": 3}, {"username": "heisian", "commitsCount": 3}, {"username": "shawncplus", "commitsCount": 3}, {"username": "AverageMarcus", "commitsCount": 2}, {"username": "aivopaas", "commitsCount": 2}, {"username": "arty-name", "commitsCount": 2}, {"username": "binarykitchen", "commitsCount": 2}, {"username": "dguo", "commitsCount": 2}, {"username": "dnohales", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "haircuttedfreak", "commitsCount": 2}, {"username": "hgwood", "commitsCount": 2}, {"username": "jdavis", "commitsCount": 2}, {"username": "kevinawoo", "commitsCount": 2}, {"username": "kuba-kubula", "commitsCount": 2}, {"username": "lewiscowper", "commitsCount": 2}, {"username": "mattlyons0", "commitsCount": 2}, {"username": "mshick", "commitsCount": 2}, {"username": "nwinkler", "commitsCount": 2}, {"username": "riginoommen", "commitsCount": 2}, {"username": "rjmunro", "commitsCount": 2}, {"username": "sebdeckers", "commitsCount": 2}, {"username": "seldo", "commitsCount": 2}, {"username": "vadimi", "commitsCount": 2}, {"username": "JamesBie", "commitsCount": 1}, {"username": "JayBeavers", "commitsCount": 1}, {"username": "MajorBreakfast", "commitsCount": 1}, {"username": "MarvinJWendt", "commitsCount": 1}, {"username": "MiLeung", "commitsCount": 1}, {"username": "Noyabronok", "commitsCount": 1}, {"username": "TomHoss", "commitsCount": 1}, {"username": "Zolmeister", "commitsCount": 1}, {"username": "aalexgabi", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "alyssais", "commitsCount": 1}, {"username": "andiwinata", "commitsCount": 1}, {"username": "asfktz", "commitsCount": 1}, {"username": "aurium", "commitsCount": 1}, {"username": "axxie", "commitsCount": 1}, {"username": "bdentino", "commitsCount": 1}, {"username": "bdsomer", "commitsCount": 1}, {"username": "bleadof", "commitsCount": 1}, {"username": "coderberry", "commitsCount": 1}, {"username": "concision", "commitsCount": 1}, {"username": "contra", "commitsCount": 1}, {"username": "dandv", "commitsCount": 1}, {"username": "dlmr", "commitsCount": 1}, {"username": "drewdotpro", "commitsCount": 1}, {"username": "drtz", "commitsCount": 1}, {"username": "eilgin", "commitsCount": 1}, {"username": "faergeek", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "fvgs", "commitsCount": 1}, {"username": "garthk", "commitsCount": 1}, {"username": "giorni", "commitsCount": 1}, {"username": "gja", "commitsCount": 1}, {"username": "janders223", "commitsCount": 1}, {"username": "joeytwiddle", "commitsCount": 1}, {"username": "jwickens", "commitsCount": 1}, {"username": "kant", "commitsCount": 1}, {"username": "kjirou", "commitsCount": 1}, {"username": "knksmith57", "commitsCount": 1}, {"username": "lennym", "commitsCount": 1}, {"username": "leonardodino", "commitsCount": 1}, {"username": "lpgera", "commitsCount": 1}, {"username": "madbence", "commitsCount": 1}, {"username": "madeiras", "commitsCount": 1}, {"username": "marcelkottmann", "commitsCount": 1}, {"username": "markokajzer", "commitsCount": 1}, {"username": "matanshukry", "commitsCount": 1}, {"username": "mef", "commitsCount": 1}, {"username": "mgcrea", "commitsCount": 1}, {"username": "mikeifomin", "commitsCount": 1}, {"username": "mortonfox", "commitsCount": 1}, {"username": "naholyr", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "radum", "commitsCount": 1}, {"username": "rhodgkins", "commitsCount": 1}, {"username": "sabrehagen", "commitsCount": 1}, {"username": "sascha53", "commitsCount": 1}, {"username": "snyk-bot", "commitsCount": 1}, {"username": "stelcheck", "commitsCount": 1}, {"username": "timothykang", "commitsCount": 1}, {"username": "timruffles", "commitsCount": 1}, {"username": "victor-perez", "commitsCount": 1}, {"username": "woodyrew", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 23}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 14909, "testsSize": 1102353, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/remy/nodemon.svg?branch=master", "service": "https://api.travis-ci.org/remy/nodemon.svg?branch=master", "shields": "https://img.shields.io/travis/remy/nodemon/master.svg", "content": "https://img.shields.io/travis/remy/nodemon/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["jscs", "jshint"], "outdatedDependencies": {"semver": {"required": "^5.7.1", "stable": "7.3.2", "latest": "7.3.2"}, "debug": {"required": "^3.2.6", "stable": "4.1.1", "latest": "4.2.0"}, "supports-color": {"required": "^5.5.0", "stable": "7.1.0", "latest": "7.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.55}, "popularity": {"communityInterest": 23003, "downloadsCount": 10912686.333333334, "downloadsAcceleration": 32550.240011415546, "dependentsCount": 1721}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8770783913349334, "detail": {"quality": 0.9082446924470509, "popularity": 0.727503731041317, "maintenance": 0.9999390792467349}}}}, {"@types/jasmine": {"analyzedAt": "2018-05-18T00:18:19.710Z", "collected": {"metadata": {"name": "@types/jasmine", "scope": "types", "version": "2.8.7", "description": "TypeScript definitions for Jasmine", "date": "2018-05-03T16:12:28.979Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Boris Yankov", "url": "https://github.com/borisyankov"}, {"name": "Theodore Brown", "url": "https://github.com/theodorejb"}, {"name": "David P\u00e4rsson", "url": "https://github.com/davidparsson"}, {"name": "Gabe Moothart", "url": "https://github.com/gmoothart"}, {"name": "Lukas Zech", "url": "https://github.com/lukas-zech-software"}, {"name": "Boris Breuer", "url": "https://github.com/Engineer2B"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fjasmine"}, "license": "MIT", "releases": [{"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 5}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 19}, {"from": "2016-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 50}], "readme": "# Installation\r\n> `npm install --save @types/jasmine`\r\n\r\n# Summary\r\nThis package contains type definitions for Jasmine (http://jasmine.github.io/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jasmine\r\n\r\nAdditional Details\r\n * Last updated: Thu, 03 May 2018 16:11:29 GMT\r\n * Dependencies: none\r\n * Global values: afterAll, afterEach, beforeAll, beforeEach, describe, expect, fail, fdescribe, fit, it, jasmine, pending, runs, spyOn, spyOnProperty, waits, waitsFor, xdescribe, xit\r\n\r\n# Credits\r\nThese definitions were written by Boris Yankov <https://github.com/borisyankov>, Theodore Brown <https://github.com/theodorejb>, David P\u00e4rsson <https://github.com/davidparsson>, Gabe Moothart <https://github.com/gmoothart>, Lukas Zech <https://github.com/lukas-zech-software>, Boris Breuer <https://github.com/Engineer2B>."}, "npm": {"downloads": [{"from": "2018-05-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 530984}, {"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 2475090}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 7116776}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 13215285}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 22850873}], "dependentsCount": 197, "starsCount": 4}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 4, "downloadsCount": 2372258.6666666665, "downloadsAcceleration": 7677.746746575343, "dependentsCount": 197}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-jasmine-rtuupcpoqqd/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-04-29T23:32:43.715Z"}, "score": {"final": 0.3532829355446831, "detail": {"quality": 0.398969320144589, "popularity": 0.33407277952754216, "maintenance": 0.3333333333333333}}}}, {"@angular/platform-browser": {"analyzedAt": "2020-06-15T21:16:12.840Z", "collected": {"metadata": {"name": "@angular/platform-browser", "scope": "angular", "version": "9.1.11", "description": "Angular - library for using Angular in a web browser", "date": "2020-06-10T18:21:52.170Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/platform-browser"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fplatform-browser", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"@angular/animations": "9.1.11", "@angular/core": "9.1.11", "@angular/common": "9.1.11", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 54}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 104}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 193}]}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 71112}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1497192}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 6021642}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19115357}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 35069604}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 65803146}], "dependentsCount": 7170, "starsCount": 7}, "source": {"files": {"readmeSize": 0, "testsSize": 147730, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.3, "health": 1, "branding": 0}, "popularity": {"communityInterest": 7, "downloadsCount": 6371785.666666667, "downloadsAcceleration": 8746.837442922377, "dependentsCount": 7170}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5108952106238612, "detail": {"quality": 0.7106483682760691, "popularity": 0.5172400956410681, "maintenance": 0.3333333333333333}}}}, {"jsdom": {"analyzedAt": "2020-05-11T04:32:48.407Z", "collected": {"metadata": {"name": "jsdom", "scope": "unscoped", "version": "16.2.2", "description": "A JavaScript implementation of many web standards", "keywords": ["dom", "html", "whatwg", "w3c"], "date": "2020-03-30T01:31:41.451Z", "publisher": {"username": "domenic", "email": "d@domenic.me"}, "maintainers": [{"username": "domenic", "email": "d@domenic.me"}, {"username": "joris-van-der-wel", "email": "joris@jorisvanderwel.com"}, {"username": "sebmaster", "email": "sebmaster16@gmail.com"}, {"username": "timothygu", "email": "timothygu99@gmail.com"}, {"username": "tmpvar", "email": "tmpvar@gmail.com"}, {"username": "zirro", "email": "code@zirro.se"}], "repository": {"type": "git", "url": "git+https://github.com/jsdom/jsdom.git"}, "links": {"npm": "https://www.npmjs.com/package/jsdom", "homepage": "https://github.com/jsdom/jsdom#readme", "repository": "https://github.com/jsdom/jsdom", "bugs": "https://github.com/jsdom/jsdom/issues"}, "license": "MIT", "dependencies": {"abab": "^2.0.3", "acorn": "^7.1.1", "acorn-globals": "^6.0.0", "cssom": "^0.4.4", "cssstyle": "^2.2.0", "data-urls": "^2.0.0", "decimal.js": "^10.2.0", "domexception": "^2.0.1", "escodegen": "^1.14.1", "html-encoding-sniffer": "^2.0.1", "is-potential-custom-element-name": "^1.0.0", "nwsapi": "^2.2.0", "parse5": "5.1.1", "request": "^2.88.2", "request-promise-native": "^1.0.8", "saxes": "^5.0.0", "symbol-tree": "^3.2.4", "tough-cookie": "^3.0.1", "w3c-hr-time": "^1.0.2", "w3c-xmlserializer": "^2.0.0", "webidl-conversions": "^6.0.0", "whatwg-encoding": "^1.0.5", "whatwg-mimetype": "^2.3.0", "whatwg-url": "^8.0.0", "ws": "^7.2.3", "xml-name-validator": "^3.0.0"}, "devDependencies": {"benchmark": "^2.1.4", "browserify": "^16.5.0", "chai": "^4.2.0", "eslint": "^6.8.0", "eslint-find-rules": "^3.4.0", "eslint-plugin-html": "^6.0.0", "eslint-plugin-jsdom-internal": "link:./scripts/eslint-plugin", "js-yaml": "^3.13.1", "karma": "^4.4.1", "karma-browserify": "^7.0.0", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-webworker": "^1.3.0", "minimatch": "^3.0.4", "mocha": "^7.1.1", "mocha-sugar-free": "^1.4.0", "optimist": "0.6.1", "portfinder": "^1.0.25", "rimraf": "^3.0.2", "server-destroy": "^1.0.1", "st": "^2.0.0", "watchify": "^3.11.1", "wd": "^1.12.1", "webidl2js": "^15.1.0"}, "peerDependencies": {"canvas": "^2.5.0"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 7}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 11}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 22}], "hasTestScript": true, "readme": "<h1 align=\"center\">\n    <img width=\"100\" height=\"100\" src=\"logo.svg\" alt=\"\"><br>\n    jsdom\n</h1>\n\njsdom is a pure-JavaScript implementation of many web standards, notably the WHATWG [DOM](https://dom.spec.whatwg.org/) and [HTML](https://html.spec.whatwg.org/multipage/) Standards, for use with Node.js. In general, the goal of the project is to emulate enough of a subset of a web browser to be useful for testing and scraping real-world web applications.\n\nThe latest versions of jsdom require Node.js v10 or newer. (Versions of jsdom below v16 still work with previous Node.js versions, but are unsupported.)\n\n## Basic usage\n\n```js\nconst jsdom = require(\"jsdom\");\nconst { JSDOM } = jsdom;\n```\n\nTo use jsdom, you will primarily use the `JSDOM` constructor, which is a named export of the jsdom main module. Pass the constructor a string. You will get back a `JSDOM` object, which has a number of useful properties, notably `window`:\n\n```js\nconst dom = new JSDOM(`<!DOCTYPE html><p>Hello world</p>`);\nconsole.log(dom.window.document.querySelector(\"p\").textContent); // \"Hello world\"\n```\n\n(Note that jsdom will parse the HTML you pass it just like a browser does, including implied `<html>`, `<head>`, and `<body>` tags.)\n\nThe resulting object is an instance of the `JSDOM` class, which contains a number of useful properties and methods besides `window`. In general, it can be used to act on the jsdom from the \"outside,\" doing things that are not possible with the normal DOM APIs. For simple cases, where you don't need any of this functionality, we recommend a coding pattern like\n\n```js\nconst { window } = new JSDOM(`...`);\n// or even\nconst { document } = (new JSDOM(`...`)).window;\n```\n\nFull documentation on everything you can do with the `JSDOM` class is below, in the section \"`JSDOM` Object API\".\n\n## Customizing jsdom\n\nThe `JSDOM` constructor accepts a second parameter which can be used to customize your jsdom in the following ways.\n\n### Simple options\n\n```js\nconst dom = new JSDOM(``, {\n  url: \"https://example.org/\",\n  referrer: \"https://example.com/\",\n  contentType: \"text/html\",\n  includeNodeLocations: true,\n  storageQuota: 10000000\n});\n```\n\n- `url` sets the value returned by `window.location`, `document.URL`, and `document.documentURI`, and affects things like resolution of relative URLs within the document and the same-origin restrictions and referrer used while fetching subresources. It defaults to `\"about:blank\"`.\n- `referrer` just affects the value read from `document.referrer`. It defaults to no referrer (which reflects as the empty string).\n- `contentType` affects the value read from `document.contentType`, as well as how the document is parsed: as HTML or as XML. Values that are not a [HTML mime type](https://mimesniff.spec.whatwg.org/#html-mime-type) or an [XML mime type](https://mimesniff.spec.whatwg.org/#xml-mime-type) will throw. It defaults to `\"text/html\"`. If a `charset` parameter is present, it can affect [binary data processing](#encoding-sniffing).\n- `includeNodeLocations` preserves the location info produced by the HTML parser, allowing you to retrieve it with the `nodeLocation()` method (described below). It also ensures that line numbers reported in exception stack traces for code running inside `<script>` elements are correct. It defaults to `false` to give the best performance, and cannot be used with an XML content type since our XML parser does not support location info.\n- `storageQuota` is the maximum size in code units for the separate storage areas used by `localStorage` and `sessionStorage`. Attempts to store data larger than this limit will cause a `DOMException` to be thrown. By default, it is set to 5,000,000 code units per origin, as inspired by the HTML specification.\n\nNote that both `url` and `referrer` are canonicalized before they're used, so e.g. if you pass in `\"https:example.com\"`, jsdom will interpret that as if you had given `\"https://example.com/\"`. If you pass an unparseable URL, the call will throw. (URLs are parsed and serialized according to the [URL Standard](http://url.spec.whatwg.org/).)\n\n### Executing scripts\n\njsdom's most powerful ability is that it can execute scripts inside the jsdom. These scripts can modify the content of the page and access all the web platform APIs jsdom implements.\n\nHowever, this is also highly dangerous when dealing with untrusted content. The jsdom sandbox is not foolproof, and code running inside the DOM's `<script>`s can, if it tries hard enough, get access to the Node.js environment, and thus to your machine. As such, the ability to execute scripts embedded in the HTML is disabled by default:\n\n```js\nconst dom = new JSDOM(`<body>\n  <script>document.body.appendChild(document.createElement(\"hr\"));</script>\n</body>`);\n\n// The script will not be executed, by default:\ndom.window.document.body.children.length === 1;\n```\n\nTo enable executing scripts inside the page, you can use the `runScripts: \"dangerously\"` option:\n\n```js\nconst dom = new JSDOM(`<body>\n  <script>document.body.appendChild(document.createElement(\"hr\"));</script>\n</body>`, { runScripts: \"dangerously\" });\n\n// The script will be executed and modify the DOM:\ndom.window.document.body.children.length === 2;\n```\n\nAgain we emphasize to only use this when feeding jsdom code you know is safe. If you use it on arbitrary user-supplied code, or code from the Internet, you are effectively running untrusted Node.js code, and your machine could be compromised.\n\nIf you want to execute _external_ scripts, included via `<script src=\"\">`, you'll also need to ensure that they load them. To do this, add the option `resources: \"usable\"` [as described below](#loading-subresources).\n\nEvent handler attributes, like `<div onclick=\"\">`, are also governed by this setting; they will not function unless `runScripts` is set to `\"dangerously\"`. (However, event handler _properties_, like `div.onclick = ...`, will function regardless of `runScripts`.)\n\nIf you are simply trying to execute script \"from the outside\", instead of letting `<script>` elements and event handlers attributes run \"from the inside\", you can use the `runScripts: \"outside-only\"` option, which enables fresh copies of all the JavaScript spec-provided globals to be installed on `window`. This includes things like `window.Array`, `window.Promise`, etc. It also, notably, includes `window.eval`, which allows running scripts, but with the jsdom `window` as the global:\n\n```js\nconst { window } = new JSDOM(``, { runScripts: \"outside-only\" });\n\nwindow.eval(`document.body.innerHTML = \"<p>Hello, world!</p>\";`);\nwindow.document.body.children.length === 1;\n```\n\nThis is turned off by default for performance reasons, but is safe to enable.\n\n(Note that in the default configuration, without setting `runScripts`, the values of `window.Array`, `window.eval`, etc. will be the same as those provided by the outer Node.js environment. That is, `window.eval === eval` will hold, so `window.eval` will not run scripts in a useful way.)\n\nWe strongly advise against trying to \"execute scripts\" by mashing together the jsdom and Node global environments (e.g. by doing `global.window = dom.window`), and then executing scripts or test code inside the Node global environment. Instead, you should treat jsdom like you would a browser, and run all scripts and tests that need access to a DOM inside the jsdom environment, using `window.eval` or `runScripts: \"dangerously\"`. This might require, for example, creating a browserify bundle to execute as a `<script>` element\u2014just like you would in a browser.\n\nFinally, for advanced use cases you can use the `dom.getInternalVMContext()` method, documented below.\n\n### Pretending to be a visual browser\n\njsdom does not have the capability to render visual content, and will act like a headless browser by default. It provides hints to web pages through APIs such as `document.hidden` that their content is not visible.\n\nWhen the `pretendToBeVisual` option is set to `true`, jsdom will pretend that it is rendering and displaying content. It does this by:\n\n* Changing `document.hidden` to return `false` instead of `true`\n* Changing `document.visibilityState` to return `\"visible\"` instead of `\"prerender\"`\n* Enabling `window.requestAnimationFrame()` and `window.cancelAnimationFrame()` methods, which otherwise do not exist\n\n```js\nconst window = (new JSDOM(``, { pretendToBeVisual: true })).window;\n\nwindow.requestAnimationFrame(timestamp => {\n  console.log(timestamp > 0);\n});\n```\n\nNote that jsdom still [does not do any layout or rendering](#unimplemented-parts-of-the-web-platform), so this is really just about _pretending_ to be visual, not about implementing the parts of the platform a real, visual web browser would implement.\n\n### Loading subresources\n\n#### Basic options\n\nBy default, jsdom will not load any subresources such as scripts, stylesheets, images, or iframes. If you'd like jsdom to load such resources, you can pass the `resources: \"usable\"` option, which will load all usable resources. Those are:\n\n* Frames and iframes, via `<frame>` and `<iframe>`\n* Stylesheets, via `<link rel=\"stylesheet\">`\n* Scripts, via `<script>`, but only if `runScripts: \"dangerously\"` is also set\n* Images, via `<img>`, but only if the `canvas` npm package is also installed (see \"[Canvas Support](#canvas-support)\" below)\n\n#### Advanced configuration\n\n_This resource loader system is new as of jsdom v12.0.0, and we'd love your feedback on whether it meets your needs and how easy it is to use. Please file an issue to discuss!_\n\nTo more fully customize jsdom's resource-loading behavior, you can pass an instance of the `ResourceLoader` class as the `resources` option value:\n\n```js\nconst resourceLoader = new jsdom.ResourceLoader({\n  proxy: \"http://127.0.0.1:9001\",\n  strictSSL: false,\n  userAgent: \"Mellblomenator/9000\",\n});\nconst dom = new JSDOM(``, { resources: resourceLoader });\n```\n\nThe three options to the `ResourceLoader` constructor are:\n\n- `proxy` is the address of an HTTP proxy to be used.\n- `strictSSL` can be set to false to disable the requirement that SSL certificates be valid.\n- `userAgent` affects the `User-Agent` header sent, and thus the resulting value for `navigator.userAgent`. It defaults to <code>\\`Mozilla/5.0 (${process.platform || \"unknown OS\"}) AppleWebKit/537.36 (KHTML, like Gecko) jsdom/${jsdomVersion}\\`</code>.\n\nYou can further customize resource fetching by subclassing `ResourceLoader` and overriding the `fetch()` method. For example, here is a version that only returns results for requests to a trusted origin:\n\n```js\nclass CustomResourceLoader extends jsdom.ResourceLoader {\n  fetch(url, options) {\n    // Override the contents of this script to do something unusual.\n    if (url === \"https://example.com/some-specific-script.js\") {\n      return Promise.resolve(Buffer.from(\"window.someGlobal = 5;\"));\n    }\n\n    return super.fetch(url, options);\n  }\n}\n```\n\njsdom will call your custom resource loader's `fetch()` method whenever it encounters a \"usable\" resource, per the above section. The method takes a URL string, as well as a few options which you should pass through unmodified if calling `super.fetch()`. It must return a promise for a Node.js `Buffer` object, or return `null` if the resource is intentionally not to be loaded. In general, most cases will want to delegate to `super.fetch()`, as shown.\n\nOne of the options you will receive in `fetch()` will be the element (if applicable) that is fetching a resource.\n\n```js\nclass CustomResourceLoader extends jsdom.ResourceLoader {\n  fetch(url, options) {\n    if (options.element) {\n      console.log(`Element ${options.element.localName} is requesting the url ${url}`);\n    }\n\n    return super.fetch(url, options);\n  }\n}\n```\n\n### Virtual consoles\n\nLike web browsers, jsdom has the concept of a \"console\". This records both information directly sent from the page, via scripts executing inside the document, as well as information from the jsdom implementation itself. We call the user-controllable console a \"virtual console\", to distinguish it from the Node.js `console` API and from the inside-the-page `window.console` API.\n\nBy default, the `JSDOM` constructor will return an instance with a virtual console that forwards all its output to the Node.js console. To create your own virtual console and pass it to jsdom, you can override this default by doing\n\n```js\nconst virtualConsole = new jsdom.VirtualConsole();\nconst dom = new JSDOM(``, { virtualConsole });\n```\n\nCode like this will create a virtual console with no behavior. You can give it behavior by adding event listeners for all the possible console methods:\n\n```js\nvirtualConsole.on(\"error\", () => { ... });\nvirtualConsole.on(\"warn\", () => { ... });\nvirtualConsole.on(\"info\", () => { ... });\nvirtualConsole.on(\"dir\", () => { ... });\n// ... etc. See https://console.spec.whatwg.org/#logging\n```\n\n(Note that it is probably best to set up these event listeners *before* calling `new JSDOM()`, since errors or console-invoking script might occur during parsing.)\n\nIf you simply want to redirect the virtual console output to another console, like the default Node.js one, you can do\n\n```js\nvirtualConsole.sendTo(console);\n```\n\nThere is also a special event, `\"jsdomError\"`, which will fire with error objects to report errors from jsdom itself. This is similar to how error messages often show up in web browser consoles, even if they are not initiated by `console.error`. So far, the following errors are output this way:\n\n- Errors loading or parsing subresources (scripts, stylesheets, frames, and iframes)\n- Script execution errors that are not handled by a window `onerror` event handler that returns `true` or calls `event.preventDefault()`\n- Not-implemented errors resulting from calls to methods, like `window.alert`, which jsdom does not implement, but installs anyway for web compatibility\n\nIf you're using `sendTo(c)` to send errors to `c`, by default it will call `c.error(errorStack[, errorDetail])` with information from `\"jsdomError\"` events. If you'd prefer to maintain a strict one-to-one mapping of events to method calls, and perhaps handle `\"jsdomError\"`s yourself, then you can do\n\n```js\nvirtualConsole.sendTo(c, { omitJSDOMErrors: true });\n```\n\n### Cookie jars\n\nLike web browsers, jsdom has the concept of a cookie jar, storing HTTP cookies. Cookies that have a URL on the same domain as the document, and are not marked HTTP-only, are accessible via the `document.cookie` API. Additionally, all cookies in the cookie jar will impact the fetching of subresources.\n\nBy default, the `JSDOM` constructor will return an instance with an empty cookie jar. To create your own cookie jar and pass it to jsdom, you can override this default by doing\n\n```js\nconst cookieJar = new jsdom.CookieJar(store, options);\nconst dom = new JSDOM(``, { cookieJar });\n```\n\nThis is mostly useful if you want to share the same cookie jar among multiple jsdoms, or prime the cookie jar with certain values ahead of time.\n\nCookie jars are provided by the [tough-cookie](https://www.npmjs.com/package/tough-cookie) package. The `jsdom.CookieJar` constructor is a subclass of the tough-cookie cookie jar which by default sets the `looseMode: true` option, since that [matches better how browsers behave](https://github.com/whatwg/html/issues/804). If you want to use tough-cookie's utilities and classes yourself, you can use the `jsdom.toughCookie` module export to get access to the tough-cookie module instance packaged with jsdom.\n\n### Intervening before parsing\n\njsdom allows you to intervene in the creation of a jsdom very early: after the `Window` and `Document` objects are created, but before any HTML is parsed to populate the document with nodes:\n\n```js\nconst dom = new JSDOM(`<p>Hello</p>`, {\n  beforeParse(window) {\n    window.document.childNodes.length === 0;\n    window.someCoolAPI = () => { /* ... */ };\n  }\n});\n```\n\nThis is especially useful if you are wanting to modify the environment in some way, for example adding shims for web platform APIs jsdom does not support.\n\n## `JSDOM` object API\n\nOnce you have constructed a `JSDOM` object, it will have the following useful capabilities:\n\n### Properties\n\nThe property `window` retrieves the `Window` object that was created for you.\n\nThe properties `virtualConsole` and `cookieJar` reflect the options you pass in, or the defaults created for you if nothing was passed in for those options.\n\n### Serializing the document with `serialize()`\n\nThe `serialize()` method will return the [HTML serialization](https://html.spec.whatwg.org/#html-fragment-serialisation-algorithm) of the document, including the doctype:\n\n```js\nconst dom = new JSDOM(`<!DOCTYPE html>hello`);\n\ndom.serialize() === \"<!DOCTYPE html><html><head></head><body>hello</body></html>\";\n\n// Contrast with:\ndom.window.document.documentElement.outerHTML === \"<html><head></head><body>hello</body></html>\";\n```\n\n### Getting the source location of a node with `nodeLocation(node)`\n\nThe `nodeLocation()` method will find where a DOM node is within the source document, returning the [parse5 location info](https://www.npmjs.com/package/parse5#options-locationinfo) for the node:\n\n```js\nconst dom = new JSDOM(\n  `<p>Hello\n    <img src=\"foo.jpg\">\n  </p>`,\n  { includeNodeLocations: true }\n);\n\nconst document = dom.window.document;\nconst bodyEl = document.body; // implicitly created\nconst pEl = document.querySelector(\"p\");\nconst textNode = pEl.firstChild;\nconst imgEl = document.querySelector(\"img\");\n\nconsole.log(dom.nodeLocation(bodyEl));   // null; it's not in the source\nconsole.log(dom.nodeLocation(pEl));      // { startOffset: 0, endOffset: 39, startTag: ..., endTag: ... }\nconsole.log(dom.nodeLocation(textNode)); // { startOffset: 3, endOffset: 13 }\nconsole.log(dom.nodeLocation(imgEl));    // { startOffset: 13, endOffset: 32 }\n```\n\nNote that this feature only works if you have set the `includeNodeLocations` option; node locations are off by default for performance reasons.\n\n### Interfacing with the Node.js `vm` module using `getInternalVMContext()`\n\nThe built-in [`vm`](https://nodejs.org/api/vm.html) module of Node.js is what underpins jsdom's script-running magic. Some advanced use cases, like pre-compiling a script and then running it multiple times, benefit from using the `vm` module directly with a jsdom-created `Window`.\n\nTo get access to the [contextified global object](https://nodejs.org/api/vm.html#vm_what_does_it_mean_to_contextify_an_object), suitable for use with the `vm` APIs, you can use the `getInternalVMContext()` method:\n\n```js\nconst { Script } = require(\"vm\");\n\nconst dom = new JSDOM(``, { runScripts: \"outside-only\" });\nconst script = new Script(`\n  if (!this.ran) {\n    this.ran = 0;\n  }\n\n  ++this.ran;\n`);\n\nconst vmContext = dom.getInternalVMContext();\n\nscript.runInContext(vmContext);\nscript.runInContext(vmContext);\nscript.runInContext(vmContext);\n\nconsole.assert(dom.window.ran === 3);\n```\n\nThis is somewhat-advanced functionality, and we advise sticking to normal DOM APIs (such as `window.eval()` or `document.createElement(\"script\")`) unless you have very specific needs.\n\nNote that this method will throw an exception if the `JSDOM` instance was created without `runScripts` set, or if you are [using jsdom in a web browser](#running-jsdom-inside-a-web-browser).\n\n### Reconfiguring the jsdom with `reconfigure(settings)`\n\nThe `top` property on `window` is marked `[Unforgeable]` in the spec, meaning it is a non-configurable own property and thus cannot be overridden or shadowed by normal code running inside the jsdom, even using `Object.defineProperty`.\n\nSimilarly, at present jsdom does not handle navigation (such as setting `window.location.href = \"https://example.com/\"`); doing so will cause the virtual console to emit a `\"jsdomError\"` explaining that this feature is not implemented, and nothing will change: there will be no new `Window` or `Document` object, and the existing `window`'s `location` object will still have all the same property values.\n\nHowever, if you're acting from outside the window, e.g. in some test framework that creates jsdoms, you can override one or both of these using the special `reconfigure()` method:\n\n```js\nconst dom = new JSDOM();\n\ndom.window.top === dom.window;\ndom.window.location.href === \"about:blank\";\n\ndom.reconfigure({ windowTop: myFakeTopForTesting, url: \"https://example.com/\" });\n\ndom.window.top === myFakeTopForTesting;\ndom.window.location.href === \"https://example.com/\";\n```\n\nNote that changing the jsdom's URL will impact all APIs that return the current document URL, such as `window.location`, `document.URL`, and `document.documentURI`, as well as the resolution of relative URLs within the document, and the same-origin checks and referrer used while fetching subresources. It will not, however, perform navigation to the contents of that URL; the contents of the DOM will remain unchanged, and no new instances of `Window`, `Document`, etc. will be created.\n\n## Convenience APIs\n\n### `fromURL()`\n\nIn addition to the `JSDOM` constructor itself, jsdom provides a promise-returning factory method for constructing a jsdom from a URL:\n\n```js\nJSDOM.fromURL(\"https://example.com/\", options).then(dom => {\n  console.log(dom.serialize());\n});\n```\n\nThe returned promise will fulfill with a `JSDOM` instance if the URL is valid and the request is successful. Any redirects will be followed to their ultimate destination.\n\nThe options provided to `fromURL()` are similar to those provided to the `JSDOM` constructor, with the following additional restrictions and consequences:\n\n- The `url` and `contentType` options cannot be provided.\n- The `referrer` option is used as the HTTP `Referer` request header of the initial request.\n- The `resources` option also affects the initial request; this is useful if you want to, for example, configure a proxy (see above).\n- The resulting jsdom's URL, content type, and referrer are determined from the response.\n- Any cookies set via HTTP `Set-Cookie` response headers are stored in the jsdom's cookie jar. Similarly, any cookies already in a supplied cookie jar are sent as HTTP `Cookie` request headers.\n\n### `fromFile()`\n\nSimilar to `fromURL()`, jsdom also provides a `fromFile()` factory method for constructing a jsdom from a filename:\n\n```js\nJSDOM.fromFile(\"stuff.html\", options).then(dom => {\n  console.log(dom.serialize());\n});\n```\n\nThe returned promise will fulfill with a `JSDOM` instance if the given file can be opened. As usual in Node.js APIs, the filename is given relative to the current working directory.\n\nThe options provided to `fromFile()` are similar to those provided to the `JSDOM` constructor, with the following additional defaults:\n\n- The `url` option will default to a file URL corresponding to the given filename, instead of to `\"about:blank\"`.\n- The `contentType` option will default to `\"application/xhtml+xml\"` if the given filename ends in `.xht`, `.xhtml`, or `.xml`; otherwise it will continue to default to `\"text/html\"`.\n\n### `fragment()`\n\nFor the very simplest of cases, you might not need a whole `JSDOM` instance with all its associated power. You might not even need a `Window` or `Document`! Instead, you just need to parse some HTML, and get a DOM object you can manipulate. For that, we have `fragment()`, which creates a `DocumentFragment` from a given string:\n\n```js\nconst frag = JSDOM.fragment(`<p>Hello</p><p><strong>Hi!</strong>`);\n\nfrag.childNodes.length === 2;\nfrag.querySelector(\"strong\").textContent === \"Hi!\";\n// etc.\n```\n\nHere `frag` is a [`DocumentFragment`](https://developer.mozilla.org/en-US/docs/Web/API/DocumentFragment) instance, whose contents are created by parsing the provided string. The parsing is done using a `<template>` element, so you can include any element there (including ones with weird parsing rules like `<td>`). It's also important to note that the resulting `DocumentFragment` will not have [an associated browsing context](https://html.spec.whatwg.org/multipage/#concept-document-bc): that is, elements' `ownerDocument` will have a null `defaultView` property, resources will not load, etc.\n\nAll invocations of the `fragment()` factory result in `DocumentFragment`s that share the same template owner `Document`. This allows many calls to `fragment()` with no extra overhead. But it also means that calls to `fragment()` cannot be customized with any options.\n\nNote that serialization is not as easy with `DocumentFragment`s as it is with full `JSDOM` objects. If you need to serialize your DOM, you should probably use the `JSDOM` constructor more directly. But for the special case of a fragment containing a single element, it's pretty easy to do through normal means:\n\n```js\nconst frag = JSDOM.fragment(`<p>Hello</p>`);\nconsole.log(frag.firstChild.outerHTML); // logs \"<p>Hello</p>\"\n```\n\n## Other noteworthy features\n\n### Canvas support\n\njsdom includes support for using the [`canvas`](https://www.npmjs.com/package/canvas) package to extend any `<canvas>` elements with the canvas API. To make this work, you need to include `canvas` as a dependency in your project, as a peer of `jsdom`. If jsdom can find the `canvas` package, it will use it, but if it's not present, then `<canvas>` elements will behave like `<div>`s. Since jsdom v13, version 2.x of `canvas` is required; version 1.x is no longer supported.\n\n### Encoding sniffing\n\nIn addition to supplying a string, the `JSDOM` constructor can also be supplied binary data, in the form of a Node.js [`Buffer`](https://nodejs.org/docs/latest/api/buffer.html) or a standard JavaScript binary data type like `ArrayBuffer`, `Uint8Array`, `DataView`, etc. When this is done, jsdom will [sniff the encoding](https://html.spec.whatwg.org/multipage/syntax.html#encoding-sniffing-algorithm) from the supplied bytes, scanning for `<meta charset>` tags just like a browser does.\n\nIf the supplied `contentType` option contains a `charset` parameter, that encoding will override the sniffed encoding\u2014unless a UTF-8 or UTF-16 BOM is present, in which case those take precedence. (Again, this is just like a browser.)\n\nThis encoding sniffing also applies to `JSDOM.fromFile()` and `JSDOM.fromURL()`. In the latter case, any `Content-Type` headers sent with the response will take priority, in the same fashion as the constructor's `contentType` option.\n\nNote that in many cases supplying bytes in this fashion can be better than supplying a string. For example, if you attempt to use Node.js's `buffer.toString(\"utf-8\")` API, Node.js will not strip any leading BOMs. If you then give this string to jsdom, it will interpret it verbatim, leaving the BOM intact. But jsdom's binary data decoding code will strip leading BOMs, just like a browser; in such cases, supplying `buffer` directly will give the desired result.\n\n### Closing down a jsdom\n\nTimers in the jsdom (set by `window.setTimeout()` or `window.setInterval()`) will, by definition, execute code in the future in the context of the window. Since there is no way to execute code in the future without keeping the process alive, outstanding jsdom timers will keep your Node.js process alive. Similarly, since there is no way to execute code in the context of an object without keeping that object alive, outstanding jsdom timers will prevent garbage collection of the window on which they are scheduled.\n\nIf you want to be sure to shut down a jsdom window, use `window.close()`, which will terminate all running timers (and also remove any event listeners on the window and document).\n\n### Running jsdom inside a web browser\n\njsdom has some support for being run inside a web browser, using [browserify](https://browserify.org/). That is, inside a web browser, you can use a browserified jsdom to create an entirely self-contained set of plain JavaScript objects which look and act much like the browser's existing DOM objects, while being entirely independent of them. \"Virtual DOM\", indeed!\n\njsdom's primary target is still Node.js, and so we use language features that are only present in recent Node.js versions (namely, Node.js v8+). Thus, older browsers will likely not work. (Even transpilation will not help: we use `Proxy`s extensively throughout the jsdom codebase.)\n\nNotably, jsdom works well inside a web worker. The original contributor, [@lawnsea](https://github.com/lawnsea/), who made this possible, has [published a paper](https://pdfs.semanticscholar.org/47f0/6bb6607a975500a30e9e52d7c9fbc0034e27.pdf) about his project which uses this capability.\n\nNot everything works perfectly when running jsdom inside a web browser. Sometimes that is because of fundamental limitations (such as not having filesystem access), but sometimes it is simply because we haven't spent enough time making the appropriate small tweaks. Bug reports are certainly welcome.\n\n### Debugging the DOM using Chrome Devtools\n\nAs of Node.js v6 you can debug programs using Chrome Devtools. See the [official documentation](https://nodejs.org/en/docs/inspector/) for how to get started.\n\nBy default jsdom elements are formatted as plain old JS objects in the console. To make it easier to debug, you can use [jsdom-devtools-formatter](https://github.com/viddo/jsdom-devtools-formatter), which lets you inspect them like real DOM elements.\n\n## Caveats\n\n### Asynchronous script loading\n\nPeople often have trouble with asynchronous script loading when using jsdom. Many pages load scripts asynchronously, but there is no way to tell when they're done doing so, and thus when it's a good time to run your code and inspect the resulting DOM structure. This is a fundamental limitation; we cannot predict what scripts on the web page will do, and so cannot tell you when they are done loading more scripts.\n\nThis can be worked around in a few ways. The best way, if you control the page in question, is to use whatever mechanisms are given by the script loader to detect when loading is done. For example, if you're using a module loader like RequireJS, the code could look like:\n\n```js\n// On the Node.js side:\nconst window = (new JSDOM(...)).window;\nwindow.onModulesLoaded = () => {\n  console.log(\"ready to roll!\");\n};\n```\n\n```html\n<!-- Inside the HTML you supply to jsdom -->\n<script>\nrequirejs([\"entry-module\"], () => {\n  window.onModulesLoaded();\n});\n</script>\n```\n\nIf you do not control the page, you could try workarounds such as polling for the presence of a specific element.\n\nFor more details, see the discussion in [#640](https://github.com/jsdom/jsdom/issues/640), especially [@matthewkastor](https://github.com/matthewkastor)'s [insightful comment](https://github.com/jsdom/jsdom/issues/640#issuecomment-22216965).\n\n### Unimplemented parts of the web platform\n\nAlthough we enjoy adding new features to jsdom and keeping it up to date with the latest web specs, it has many missing APIs. Please feel free to file an issue for anything missing, but we're a small and busy team, so a pull request might work even better.\n\nBeyond just features that we haven't gotten to yet, there are two major features that are currently outside the scope of jsdom. These are:\n\n- **Navigation**: the ability to change the global object, and all other objects, when clicking a link or assigning `location.href` or similar.\n- **Layout**: the ability to calculate where elements will be visually laid out as a result of CSS, which impacts methods like `getBoundingClientRects()` or properties like `offsetTop`.\n\nCurrently jsdom has dummy behaviors for some aspects of these features, such as sending a \"not implemented\" `\"jsdomError\"` to the virtual console for navigation, or returning zeros for many layout-related properties. Often you can work around these limitations in your code, e.g. by creating new `JSDOM` instances for each page you \"navigate\" to during a crawl, or using `Object.defineProperty()` to change what various layout-related getters and methods return.\n\nNote that other tools in the same space, such as PhantomJS, do support these features. On the wiki, we have a more complete writeup about [jsdom vs. PhantomJS](https://github.com/jsdom/jsdom/wiki/jsdom-vs.-PhantomJS).\n\n## Supporting jsdom\n\njsdom is a community-driven project maintained by a team of [volunteers](https://github.com/orgs/jsdom/people). You could support jsdom by:\n\n- [Getting professional support for jsdom](https://tidelift.com/subscription/pkg/npm-jsdom?utm_source=npm-jsdom&utm_medium=referral&utm_campaign=readme) as part of a Tidelift subscription. Tidelift helps making open source sustainable for us while giving teams assurances for maintenance, licensing, and security.\n- [Contributing](https://github.com/jsdom/jsdom/blob/master/Contributing.md) directly to the project.\n\n## Getting help\n\nIf you need help with jsdom, please feel free to use any of the following venues:\n\n- The [mailing list](http://groups.google.com/group/jsdom) (best for \"how do I\" questions)\n- The [issue tracker](https://github.com/jsdom/jsdom/issues) (best for bug reports)\n- The IRC channel: [#jsdom on freenode](irc://irc.freenode.net/jsdom)"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 507407}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 10982095}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 43868068}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 132298274}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 223754473}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 387709824}], "dependentsCount": 2866, "starsCount": 231}, "github": {"starsCount": 14067, "forksCount": 1258, "subscribersCount": 263, "issues": {"count": 2943, "openCount": 324, "distribution": {"3600": 341, "10800": 147, "32400": 193, "97200": 218, "291600": 302, "874800": 335, "2624400": 372, "7873200": 313, "23619600": 229, "70858800": 253, "212576400": 240}, "isDisabled": false}, "contributors": [{"username": "domenic", "commitsCount": 825}, {"username": "tmpvar", "commitsCount": 560}, {"username": "Sebmaster", "commitsCount": 202}, {"username": "Zirro", "commitsCount": 198}, {"username": "waslogic", "commitsCount": 164}, {"username": "Joris-van-der-Wel", "commitsCount": 100}, {"username": "TimothyGu", "commitsCount": 97}, {"username": "davglass", "commitsCount": 57}, {"username": "fgnass", "commitsCount": 56}, {"username": "djcsdy", "commitsCount": 48}, {"username": "papandreou", "commitsCount": 34}, {"username": "Swizec", "commitsCount": 28}, {"username": "karunasagark", "commitsCount": 26}, {"username": "brianmcd", "commitsCount": 23}, {"username": "aredridel", "commitsCount": 22}, {"username": "jeffcarp", "commitsCount": 19}, {"username": "pmdartus", "commitsCount": 19}, {"username": "adrianheine", "commitsCount": 16}, {"username": "ExE-Boss", "commitsCount": 15}, {"username": "yonran", "commitsCount": 15}, {"username": "lddubeau", "commitsCount": 14}, {"username": "lawnsea", "commitsCount": 13}, {"username": "jasondavies", "commitsCount": 11}, {"username": "chad3814", "commitsCount": 10}, {"username": "ejones", "commitsCount": 10}, {"username": "aflatter", "commitsCount": 8}, {"username": "deitch", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "nicolashenry", "commitsCount": 8}, {"username": "indexzero", "commitsCount": 7}, {"username": "kapouer", "commitsCount": 6}, {"username": "dai-shi", "commitsCount": 5}, {"username": "fhemberger", "commitsCount": 5}, {"username": "liucougar", "commitsCount": 5}, {"username": "xavi-", "commitsCount": 5}, {"username": "d-ash", "commitsCount": 4}, {"username": "eps1lon", "commitsCount": 4}, {"username": "iizukanao", "commitsCount": 4}, {"username": "inikulin", "commitsCount": 4}, {"username": "joshmarshall", "commitsCount": 4}, {"username": "jsievert", "commitsCount": 4}, {"username": "kontomondo", "commitsCount": 4}, {"username": "lbdremy", "commitsCount": 4}, {"username": "sinegar", "commitsCount": 4}, {"username": "trodrigues", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 3}, {"username": "arrix", "commitsCount": 3}, {"username": "brandon-bethke-neudesic", "commitsCount": 3}, {"username": "caub", "commitsCount": 3}, {"username": "dmethvin", "commitsCount": 3}, {"username": "elfsternberg", "commitsCount": 3}, {"username": "fbzhong", "commitsCount": 3}, {"username": "flaviut", "commitsCount": 3}, {"username": "godmar", "commitsCount": 3}, {"username": "i8-pi", "commitsCount": 3}, {"username": "marcandre", "commitsCount": 3}, {"username": "matthewp", "commitsCount": 3}, {"username": "medikoo", "commitsCount": 3}, {"username": "paton", "commitsCount": 3}, {"username": "rubys", "commitsCount": 3}, {"username": "sarvaje", "commitsCount": 3}, {"username": "vsiao", "commitsCount": 3}, {"username": "BehindTheMath", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "FrecksterGIT", "commitsCount": 2}, {"username": "beatgammit", "commitsCount": 2}, {"username": "broql", "commitsCount": 2}, {"username": "cjroebuck", "commitsCount": 2}, {"username": "cpojer", "commitsCount": 2}, {"username": "drewish", "commitsCount": 2}, {"username": "fb55", "commitsCount": 2}, {"username": "fgalassi", "commitsCount": 2}, {"username": "fluffybunnies", "commitsCount": 2}, {"username": "gtanner", "commitsCount": 2}, {"username": "gtzilla", "commitsCount": 2}, {"username": "iangreenleaf", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jakutis", "commitsCount": 2}, {"username": "jorendorff", "commitsCount": 2}, {"username": "juggy", "commitsCount": 2}, {"username": "kraynel", "commitsCount": 2}, {"username": "lheiskan", "commitsCount": 2}, {"username": "mbostock", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "myabc", "commitsCount": 2}, {"username": "nickstenning", "commitsCount": 2}, {"username": "rgrove", "commitsCount": 2}, {"username": "selam", "commitsCount": 2}, {"username": "shimondoodkin", "commitsCount": 2}, {"username": "shinuza", "commitsCount": 2}, {"username": "snuggs", "commitsCount": 2}, {"username": "thiagohirata", "commitsCount": 2}, {"username": "tobie", "commitsCount": 2}, {"username": "tomtaylor", "commitsCount": 2}, {"username": "ulteriorlife", "commitsCount": 2}, {"username": "yefremov", "commitsCount": 2}, {"username": "zbjornson", "commitsCount": 2}, {"username": "AviVahl", "commitsCount": 1}, {"username": "dcwarwick", "commitsCount": 1}, {"username": "jamieliu386", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 30}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 99}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 138}]}, "source": {"files": {"readmeSize": 33005, "testsSize": 17408294, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"parse5": {"required": "5.1.1", "stable": "6.0.0", "latest": "6.0.0"}, "tough-cookie": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8461538461538461, "branding": 0}, "popularity": {"communityInterest": 15919, "downloadsCount": 44099424.666666664, "downloadsAcceleration": 145227.98677701672, "dependentsCount": 2866}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.772351478804853, "detail": {"quality": 0.8426747850352643, "popularity": 0.8177591713169726, "maintenance": 0.6666666666666666}}}}, {"eslint-plugin-vue": {"analyzedAt": "2020-06-07T10:36:26.550Z", "collected": {"metadata": {"name": "eslint-plugin-vue", "scope": "unscoped", "version": "6.2.2", "description": "Official ESLint plugin for Vue.js", "keywords": ["eslint", "eslint-plugin", "eslint-config", "vue", "vuejs", "rules"], "date": "2020-03-08T09:35:25.610Z", "author": {"name": "Toru Nagashima", "url": "https://github.com/mysticatea"}, "publisher": {"username": "ota-meshi", "email": "otameshiyo23@gmail.com"}, "maintainers": [{"username": "chrisvfritz", "email": "chrisvfritz@gmail.com"}, {"username": "michalsnik", "email": "msajnog93@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "ota-meshi", "email": "otameshiyo23@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "contributors": [{"name": "Micha\u0142 Sajn\u00f3g", "email": "msajnog93@gmail.com", "url": "https://github.com/michalsnik"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/eslint-plugin-vue.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-vue", "homepage": "https://eslint.vuejs.org", "repository": "https://github.com/vuejs/eslint-plugin-vue", "bugs": "https://github.com/vuejs/eslint-plugin-vue/issues"}, "license": "MIT", "dependencies": {"natural-compare": "^1.4.0", "vue-eslint-parser": "^7.0.0", "semver": "^5.6.0"}, "devDependencies": {"@types/node": "^4.2.16", "@typescript-eslint/parser": "^2.6.1", "acorn": "^7.1.0", "babel-eslint": "^10.0.2", "chai": "^4.1.0", "eslint": "^6.0.0", "eslint-plugin-eslint-plugin": "^2.0.1", "eslint-plugin-import": "^2.18.2", "eslint-plugin-vue": "file:.", "eslint-plugin-vue-libs": "^4.0.0", "eslint4b": "^6.6.0", "lodash": "^4.17.4", "mocha": "^5.2.0", "nyc": "^12.0.2", "typescript": "^3.5.2", "vue-eslint-editor": "^0.1.4", "vuepress": "^0.14.5"}, "peerDependencies": {"eslint": "^5.0.0 || ^6.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 31}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 66812}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1255445}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5185447}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15348668}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 26841566}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 47673936}], "dependentsCount": 708, "starsCount": 16}, "github": {"homepage": "https://eslint.vuejs.org/", "starsCount": 3088, "forksCount": 440, "subscribersCount": 58, "issues": {"count": 1198, "openCount": 87, "distribution": {"3600": 97, "10800": 51, "32400": 67, "97200": 119, "291600": 144, "874800": 166, "2624400": 167, "7873200": 134, "23619600": 128, "70858800": 110, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "ota-meshi", "commitsCount": 176}, {"username": "michalsnik", "commitsCount": 122}, {"username": "mysticatea", "commitsCount": 72}, {"username": "armano2", "commitsCount": 60}, {"username": "chrisvfritz", "commitsCount": 15}, {"username": "yoyo930021", "commitsCount": 5}, {"username": "privatenumber", "commitsCount": 4}, {"username": "maoberlehner", "commitsCount": 3}, {"username": "przemkow", "commitsCount": 3}, {"username": "yyx990803", "commitsCount": 3}, {"username": "719media", "commitsCount": 2}, {"username": "HerringtonDarkholme", "commitsCount": 2}, {"username": "IWANABETHATGUY", "commitsCount": 2}, {"username": "aladdin-add", "commitsCount": 2}, {"username": "cjpearson", "commitsCount": 2}, {"username": "fisker", "commitsCount": 2}, {"username": "gabrielboliveira", "commitsCount": 2}, {"username": "manniL", "commitsCount": 2}, {"username": "patrickabkarian", "commitsCount": 2}, {"username": "posva", "commitsCount": 2}, {"username": "rodrigopedra", "commitsCount": 2}, {"username": "sosukesuzuki", "commitsCount": 2}, {"username": "st-sloth", "commitsCount": 2}, {"username": "termosa", "commitsCount": 2}, {"username": "3santiago3", "commitsCount": 1}, {"username": "Arcanemagus", "commitsCount": 1}, {"username": "Archer70", "commitsCount": 1}, {"username": "Cheddah", "commitsCount": 1}, {"username": "GufNZ", "commitsCount": 1}, {"username": "Hornet-Wing", "commitsCount": 1}, {"username": "Lucidiot", "commitsCount": 1}, {"username": "LukeShu", "commitsCount": 1}, {"username": "LukeeeeBennett", "commitsCount": 1}, {"username": "MechJosh0", "commitsCount": 1}, {"username": "MichaelFoss", "commitsCount": 1}, {"username": "Morgul", "commitsCount": 1}, {"username": "RohanTalip", "commitsCount": 1}, {"username": "SergiiKudriashov", "commitsCount": 1}, {"username": "SketchBookkeeper", "commitsCount": 1}, {"username": "TheJaredWilcurt", "commitsCount": 1}, {"username": "ThomasR", "commitsCount": 1}, {"username": "adi518", "commitsCount": 1}, {"username": "akoidan", "commitsCount": 1}, {"username": "andrew-humu", "commitsCount": 1}, {"username": "anteriovieira", "commitsCount": 1}, {"username": "aorel", "commitsCount": 1}, {"username": "barraponto", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "cwiller", "commitsCount": 1}, {"username": "danyadev", "commitsCount": 1}, {"username": "darrenjennings", "commitsCount": 1}, {"username": "deckar01", "commitsCount": 1}, {"username": "dougalg", "commitsCount": 1}, {"username": "enthrops", "commitsCount": 1}, {"username": "erindepew", "commitsCount": 1}, {"username": "exarus", "commitsCount": 1}, {"username": "filipalacerda", "commitsCount": 1}, {"username": "flyerhzm", "commitsCount": 1}, {"username": "frenchrabbit", "commitsCount": 1}, {"username": "gebeuhler", "commitsCount": 1}, {"username": "gnclmorais", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "guillaumebriday", "commitsCount": 1}, {"username": "isnifer", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jaredhobbs", "commitsCount": 1}, {"username": "jastkand", "commitsCount": 1}, {"username": "jesusgn90", "commitsCount": 1}, {"username": "jmosul", "commitsCount": 1}, {"username": "lilywang711", "commitsCount": 1}, {"username": "loren138", "commitsCount": 1}, {"username": "luxaritas", "commitsCount": 1}, {"username": "mariolamacchia", "commitsCount": 1}, {"username": "mchmurski-rms", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "micnncim", "commitsCount": 1}, {"username": "mokkabonna", "commitsCount": 1}, {"username": "n-zeplo", "commitsCount": 1}, {"username": "philippbosch", "commitsCount": 1}, {"username": "pranavjindal999", "commitsCount": 1}, {"username": "preom", "commitsCount": 1}, {"username": "qkdreyer", "commitsCount": 1}, {"username": "rchl", "commitsCount": 1}, {"username": "romansp", "commitsCount": 1}, {"username": "ryanjbonnell", "commitsCount": 1}, {"username": "samturrell", "commitsCount": 1}, {"username": "sawa-zen", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "shadskii", "commitsCount": 1}, {"username": "shroudedcode", "commitsCount": 1}, {"username": "shuuji3", "commitsCount": 1}, {"username": "sinchang", "commitsCount": 1}, {"username": "tinymins", "commitsCount": 1}, {"username": "tomquirk", "commitsCount": 1}, {"username": "tristansokol", "commitsCount": 1}, {"username": "tyllo", "commitsCount": 1}, {"username": "ydfzgyj", "commitsCount": 1}, {"username": "znck", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 66}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 86}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 150}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 170}], "statuses": [{"context": "ci/circleci: node-v8", "state": "success"}, {"context": "ci/circleci: node-v12", "state": "success"}, {"context": "ci/circleci: node-v10", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 686144}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"semver": {"required": "^5.6.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.85, "health": 0.75, "branding": 0.4}, "popularity": {"communityInterest": 3700, "downloadsCount": 5116222.666666667, "downloadsAcceleration": 15185.249467275491, "dependentsCount": 708}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.34071497315470006}}, "score": {"final": 0.7998228824395998, "detail": {"quality": 0.8971347931173049, "popularity": 0.5693967115849357, "maintenance": 0.9468388441419453}}}}, {"ora": {"analyzedAt": "2020-06-07T20:54:24.690Z", "collected": {"metadata": {"name": "ora", "scope": "unscoped", "version": "4.0.4", "description": "Elegant terminal spinner", "keywords": ["cli", "spinner", "spinners", "terminal", "term", "console", "ascii", "unicode", "loading", "indicator", "progress", "busy", "wait", "idle"], "date": "2020-04-21T15:03:10.722Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "https://sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/ora.git"}, "links": {"npm": "https://www.npmjs.com/package/ora", "homepage": "https://github.com/sindresorhus/ora#readme", "repository": "https://github.com/sindresorhus/ora", "bugs": "https://github.com/sindresorhus/ora/issues"}, "license": "MIT", "dependencies": {"chalk": "^3.0.0", "cli-cursor": "^3.1.0", "cli-spinners": "^2.2.0", "is-interactive": "^1.0.0", "log-symbols": "^3.0.0", "mute-stream": "0.0.8", "strip-ansi": "^6.0.0", "wcwidth": "^1.0.1"}, "devDependencies": {"@types/node": "^12.7.5", "ava": "^2.4.0", "get-stream": "^5.1.0", "tsd": "^0.10.0", "xo": "^0.25.3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 6}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# ora [![Build Status](https://travis-ci.com/sindresorhus/ora.svg?branch=master)](https://travis-ci.com/sindresorhus/ora)\n\n> Elegant terminal spinner\n\n<p align=\"center\">\n\t<br>\n\t<img src=\"screenshot.svg\" width=\"500\">\n\t<br>\n</p>\n\n## Install\n\n```\n$ npm install ora\n```\n\n## Usage\n\n```js\nconst ora = require('ora');\n\nconst spinner = ora('Loading unicorns').start();\n\nsetTimeout(() => {\n\tspinner.color = 'yellow';\n\tspinner.text = 'Loading rainbows';\n}, 1000);\n```\n\n## API\n\n### ora(text)\n### ora(options)\n\nIf a string is provided, it is treated as a shortcut for [`options.text`](#text).\n\n#### options\n\nType: `object`\n\n##### text\n\nType: `string`\n\nText to display after the spinner.\n\n##### prefixText\n\nType: `string`\n\nText to display before the spinner. No prefix text will be displayed if set to an empty string.\n\n##### spinner\n\nType: `string | object`\\\nDefault: `'dots'` <img src=\"screenshot-spinner.gif\" width=\"14\">\n\nName of one of the [provided spinners](https://github.com/sindresorhus/cli-spinners/blob/master/spinners.json). See `example.js` in this repo if you want to test out different spinners. On Windows, it will always use the `line` spinner as the Windows command-line doesn't have proper Unicode support.\n\nOr an object like:\n\n```js\n{\n\tinterval: 80, // Optional\n\tframes: ['-', '+', '-']\n}\n```\n\n##### color\n\nType: `string`\\\nDefault: `'cyan'`\\\nValues: `'black' | 'red' | 'green' | 'yellow' | 'blue' | 'magenta' | 'cyan' | 'white' | 'gray'`\n\nColor of the spinner.\n\n##### hideCursor\n\nType: `boolean`\\\nDefault: `true`\n\nSet to `false` to stop Ora from hiding the cursor.\n\n##### indent\n\nType: `number`\\\nDefault: `0`\n\nIndent the spinner with the given number of spaces.\n\n##### interval\n\nType: `number`\\\nDefault: Provided by the spinner or `100`\n\nInterval between each frame.\n\nSpinners provide their own recommended interval, so you don't really need to specify this.\n\n##### stream\n\nType: `stream.Writable`\\\nDefault: `process.stderr`\n\nStream to write the output.\n\nYou could for example set this to `process.stdout` instead.\n\n##### isEnabled\n\nType: `boolean`\n\nForce enable/disable the spinner. If not specified, the spinner will be enabled if the `stream` is being run inside a TTY context (not spawned or piped) and/or not in a CI environment.\n\nNote that `{isEnabled: false}` doesn't mean it won't output anything. It just means it won't output the spinner, colors, and other ansi escape codes. It will still log text.\n\n##### discardStdin\n\nType: `boolean`\\\nDefault: `true`\n\nDiscard stdin input (except Ctrl+C) while running if it's TTY. This prevents the spinner from twitching on input, outputting broken lines on <kbd>Enter</kbd> key presses, and prevents buffering of input while the spinner is running.\n\nThis has no effect on Windows as there's no good way to implement discarding stdin properly there.\n\n### Instance\n\n#### .start(text?)\n\nStart the spinner. Returns the instance. Set the current text if `text` is provided.\n\n#### .stop()\n\nStop and clear the spinner. Returns the instance.\n\n#### .succeed(text?)\n\nStop the spinner, change it to a green `\u2714` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .fail(text?)\n\nStop the spinner, change it to a red `\u2716` and persist the current text, or `text` if provided. Returns the instance. See the GIF below.\n\n#### .warn(text?)\n\nStop the spinner, change it to a yellow `\u26a0` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .info(text?)\n\nStop the spinner, change it to a blue `\u2139` and persist the current text, or `text` if provided. Returns the instance.\n\n#### .isSpinning\n\nA boolean of whether the instance is currently spinning.\n\n#### .stopAndPersist(options?)\n\nStop the spinner and change the symbol or text. Returns the instance. See the GIF below.\n\n##### options\n\nType: `object`\n\n###### symbol\n\nType: `string`\\\nDefault: `' '`\n\nSymbol to replace the spinner with.\n\n###### text\n\nType: `string`\\\nDefault: Current `'text'`\n\nText to be persisted after the symbol\n\n###### prefixText\n\nType: `string`\\\nDefault: Current `prefixText`\n\nText to be persisted before the symbol. No prefix text will be displayed if set to an empty string.\n\n<img src=\"screenshot-2.gif\" width=\"480\">\n\n#### .clear()\n\nClear the spinner. Returns the instance.\n\n#### .render()\n\nManually render a new frame. Returns the instance.\n\n#### .frame()\n\nGet a new frame.\n\n#### .text\n\nChange the text after the spinner.\n\n#### .prefixText\n\nChange the text before the spinner. No prefix text will be displayed if set to an empty string.\n\n#### .color\n\nChange the spinner color.\n\n#### .spinner\n\nChange the spinner.\n\n#### .indent\n\nChange the spinner indent.\n\n### ora.promise(action, text)\n### ora.promise(action, options)\n\nStarts a spinner for a promise. The spinner is stopped with `.succeed()` if the promise fulfills or with `.fail()` if it rejects. Returns the spinner instance.\n\n#### action\n\nType: `Promise`\n\n## FAQ\n\n### How do I change the color of the text?\n\nUse [Chalk](https://github.com/chalk/chalk):\n\n```js\nconst ora = require('ora');\nconst chalk = require('chalk');\n\nconst spinner = ora(`Loading ${chalk.red('unicorns')}`).start();\n```\n\n### Why does the spinner freeze?\n\nJavaScript is single-threaded, so synchronous operations blocks the thread, including the spinner animation. Prefer asynchronous operations whenever possible.\n\n## Related\n\n- [cli-spinners](https://github.com/sindresorhus/cli-spinners) - Spinners for use in the terminal\n- [listr](https://github.com/SamVerschueren/listr) - Terminal task list\n- [CLISpinner](https://github.com/kiliankoe/CLISpinner) - Terminal spinner library for Swift\n- [halo](https://github.com/ManrajGrover/halo) - Python port\n- [spinners](https://github.com/FGRibreau/spinners) - Terminal spinners for Rust\n- [marquee-ora](https://github.com/joeycozza/marquee-ora) - Scrolling marquee spinner for Ora\n- [briandowns/spinner](https://github.com/briandowns/spinner) - Terminal spinner/progress indicator for Go\n- [tj/go-spin](https://github.com/tj/go-spin) - Terminal spinner package for Go\n- [observablehq.com/@victordidenko/ora](https://observablehq.com/@victordidenko/ora) - Ora port to Observable notebooks\n- [spinnies](https://github.com/jcarpanelli/spinnies) - Terminal multi-spinner library for Node.js"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 272618}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5026344}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 20954297}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 63379110}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 108539566}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 181235939}], "dependentsCount": 9109, "starsCount": 144}, "github": {"starsCount": 6037, "forksCount": 218, "subscribersCount": 48, "issues": {"count": 147, "openCount": 11, "distribution": {"3600": 21, "10800": 7, "32400": 12, "97200": 13, "291600": 12, "874800": 15, "2624400": 13, "7873200": 23, "23619600": 15, "70858800": 14, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 68}, {"username": "stroncium", "commitsCount": 6}, {"username": "SamVerschueren", "commitsCount": 3}, {"username": "jeetiss", "commitsCount": 3}, {"username": "BendingBender", "commitsCount": 2}, {"username": "1999", "commitsCount": 1}, {"username": "AlphaHydrae", "commitsCount": 1}, {"username": "FGRibreau", "commitsCount": 1}, {"username": "Fonger", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "RyanThomas73", "commitsCount": 1}, {"username": "andygrunwald", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "forresst", "commitsCount": 1}, {"username": "gobengo", "commitsCount": 1}, {"username": "guybedford", "commitsCount": 1}, {"username": "hoducha", "commitsCount": 1}, {"username": "insin", "commitsCount": 1}, {"username": "jcarpanelli", "commitsCount": 1}, {"username": "joeycozza", "commitsCount": 1}, {"username": "josmardias", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "kiliankoe", "commitsCount": 1}, {"username": "manrajgrover", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "matheuss", "commitsCount": 1}, {"username": "michael-ciniawsky", "commitsCount": 1}, {"username": "novemberborn", "commitsCount": 1}, {"username": "nuintun", "commitsCount": 1}, {"username": "parro-it", "commitsCount": 1}, {"username": "pionl", "commitsCount": 1}, {"username": "rfreebern", "commitsCount": 1}, {"username": "victordidenko", "commitsCount": 1}, {"username": "vvanelslande", "commitsCount": 1}, {"username": "xavdid", "commitsCount": 1}, {"username": "yaodingyd", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 20}]}, "source": {"files": {"readmeSize": 6247, "testsSize": 7939}, "linters": ["editorconfig", "xo"], "outdatedDependencies": {"log-symbols": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "chalk": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 6483, "downloadsCount": 21126370, "downloadsAcceleration": 77100.12929984782, "dependentsCount": 9109}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8582005077461528, "detail": {"quality": 0.773554332027732, "popularity": 0.7890634145786871, "maintenance": 0.9998914658151222}}}}, {"@angular/compiler-cli": {"analyzedAt": "2020-06-15T21:20:06.566Z", "collected": {"metadata": {"name": "@angular/compiler-cli", "scope": "angular", "version": "9.1.11", "description": "Angular - the compiler CLI for Node.js", "keywords": ["angular", "compiler"], "date": "2020-06-10T18:23:06.322Z", "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/compiler-cli"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fcompiler-cli", "homepage": "https://github.com/angular/angular/tree/master/packages/compiler-cli", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"reflect-metadata": "^0.1.2", "minimist": "^1.2.0", "canonical-path": "1.0.0", "chokidar": "^3.0.0", "convert-source-map": "^1.5.1", "dependency-graph": "^0.7.2", "fs-extra": "4.0.2", "magic-string": "^0.25.0", "semver": "^6.3.0", "source-map": "^0.6.1", "sourcemap-codec": "^1.4.8", "yargs": "15.3.0"}, "peerDependencies": {"@angular/compiler": "9.1.11", "tslib": "^1.10.0", "typescript": ">=3.6 <3.9"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 54}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 104}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 193}]}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 66991}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1430830}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 5762289}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 18271186}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33304805}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 62432715}], "dependentsCount": 623, "starsCount": 8}, "source": {"files": {"readmeSize": 0, "testsSize": 3080104, "hasChangelog": true}, "linters": ["editorconfig", "tslint"], "outdatedDependencies": {"dependency-graph": {"required": "^0.7.2", "stable": "0.9.0", "latest": "0.9.0"}, "fs-extra": {"required": "4.0.2", "stable": "9.0.1", "latest": "9.0.1"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "yargs": {"required": "15.3.0", "stable": "15.3.1", "latest": "15.4.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.3, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 8, "downloadsCount": 6090395.333333333, "downloadsAcceleration": 8751.481487823432, "dependentsCount": 623}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.4577877298963791, "detail": {"quality": 0.6498495225783472, "popularity": 0.41761773273202385, "maintenance": 0.3333333333333333}}}}, {"uglifyjs-webpack-plugin": {"analyzedAt": "2020-06-11T01:40:43.468Z", "collected": {"metadata": {"name": "uglifyjs-webpack-plugin", "scope": "unscoped", "version": "2.2.0", "description": "UglifyJS plugin for webpack", "keywords": ["uglify", "uglify-js", "uglify-es", "webpack", "webpack-plugin"], "date": "2019-07-31T12:24:49.593Z", "author": {"name": "webpack Contrib Team"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/uglifyjs-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/uglifyjs-webpack-plugin", "homepage": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin", "repository": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin", "bugs": "https://github.com/webpack-contrib/uglifyjs-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"cacache": "^12.0.2", "find-cache-dir": "^2.1.0", "is-wsl": "^1.1.0", "schema-utils": "^1.0.0", "serialize-javascript": "^1.7.0", "source-map": "^0.6.1", "uglify-js": "^3.6.0", "webpack-sources": "^1.4.0", "worker-farm": "^1.7.0"}, "devDependencies": {"@babel/cli": "^7.5.5", "@babel/core": "^7.5.5", "@babel/preset-env": "^7.5.5", "@commitlint/cli": "^8.1.0", "@commitlint/config-conventional": "^8.1.0", "@webpack-contrib/defaults": "^5.0.2", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.8.0", "commitlint-azure-pipelines-cli": "^1.0.2", "cross-env": "^5.2.0", "del": "^4.1.1", "del-cli": "^1.1.0", "eslint": "^6.1.0", "eslint-config-prettier": "^6.0.0", "eslint-plugin-import": "^2.18.2", "husky": "^3.0.2", "jest": "^24.8.0", "jest-junit": "^7.0.0", "lint-staged": "^9.2.1", "memory-fs": "^0.4.1", "npm-run-all": "^4.1.5", "prettier": "^1.18.2", "standard-version": "^7.0.0", "terser": "^4.1.2", "webpack": "^4.38.0"}, "peerDependencies": {"webpack": "^4.0.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# UglifyJS Webpack Plugin\n\nThis plugin uses [uglify-js](https://github.com/mishoo/UglifyJS2) to minify your JavaScript.\n\n## Requirements\n\nThis module requires a minimum of Node v6.9.0 and Webpack v4.0.0.\n\n## Getting Started\n\nTo begin, you'll need to install `uglifyjs-webpack-plugin`:\n\n```console\n$ npm install uglifyjs-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nconst UglifyJsPlugin = require('uglifyjs-webpack-plugin');\n\nmodule.exports = {\n  optimization: {\n    minimizer: [new UglifyJsPlugin()],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n### `test`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `/\\.js(\\?.*)?$/i`\n\nTest to match files against.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        test: /\\.js(\\?.*)?$/i,\n      }),\n    ],\n  },\n};\n```\n\n### `include`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to include.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        include: /\\/includes/,\n      }),\n    ],\n  },\n};\n```\n\n### `exclude`\n\nType: `String|RegExp|Array<String|RegExp>`\nDefault: `undefined`\n\nFiles to exclude.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        exclude: /\\/excludes/,\n      }),\n    ],\n  },\n};\n```\n\n### `chunkFilter`\n\nType: `Function<(chunk) -> boolean>`\nDefault: `() => true`\n\nAllowing to filter which chunks should be uglified (by default all chunks are uglified).\nReturn `true` to uglify the chunk, `false` otherwise.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        chunkFilter: (chunk) => {\n          // Exclude uglification for the `vendor` chunk\n          if (chunk.name === 'vendor') {\n            return false;\n          }\n\n          return true;\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `cache`\n\nType: `Boolean|String`\nDefault: `false`\n\nEnable file caching.\nDefault path to cache directory: `node_modules/.cache/uglifyjs-webpack-plugin`.\n\n> \u2139\ufe0f If you use your own `minify` function please read the `minify` section for cache invalidation correctly.\n\n#### `Boolean`\n\nEnable/disable file caching.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `String`\n\nEnable file caching and set path to cache directory.\n\n**webpack.config.js**\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: 'path/to/cache',\n      }),\n    ],\n  },\n};\n```\n\n### `cacheKeys`\n\nType: `Function<(defaultCacheKeys, file) -> Object>`\nDefault: `defaultCacheKeys => defaultCacheKeys`\n\nAllows you to override default cache keys.\n\nDefault cache keys:\n\n```js\n({\n  'uglify-js': require('uglify-js/package.json').version, // uglify version\n  'uglifyjs-webpack-plugin': require('../package.json').version, // plugin version\n  'uglifyjs-webpack-plugin-options': this.options, // plugin options\n  path: compiler.outputPath ? `${compiler.outputPath}/${file}` : file, // asset path\n  hash: crypto\n    .createHash('md4')\n    .update(input)\n    .digest('hex'), // source file hash\n});\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        cacheKeys: (defaultCacheKeys, file) => {\n          defaultCacheKeys.myCacheKey = 'myCacheKeyValue';\n\n          return defaultCacheKeys;\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `parallel`\n\nType: `Boolean|Number`\nDefault: `false`\n\nUse multi-process parallel running to improve the build speed.\nDefault number of concurrent runs: `os.cpus().length - 1`.\n\n> \u2139\ufe0f Parallelization can speedup your build significantly and is therefore **highly recommended**.\n\n#### `Boolean`\n\nEnable/disable multi-process parallel running.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        parallel: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `Number`\n\nEnable multi-process parallel running and set number of concurrent runs.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        parallel: 4,\n      }),\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: `false`\n\nUse source maps to map error message locations to modules (this slows down the compilation).\nIf you use your own `minify` function please read the `minify` section for handling source maps correctly.\n\n> \u26a0\ufe0f **`cheap-source-map` options don't work with this plugin**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        sourceMap: true,\n      }),\n    ],\n  },\n};\n```\n\n### `minify`\n\nType: `Function`\nDefault: `undefined`\n\nAllows you to override default minify function.\nBy default plugin uses [uglify-js](https://github.com/mishoo/UglifyJS2) package.\nUseful for using and testing unpublished versions or forks.\n\n> \u26a0\ufe0f **Always use `require` inside `minify` function when `parallel` option enabled**.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        minify(file, sourceMap) {\n          const extractedComments = [];\n\n          // Custom logic for extract comments\n\n          const { error, map, code, warnings } = require('uglify-module') // Or require('./path/to/uglify-module')\n            .minify(file, {\n              /* Your options for minification */\n            });\n\n          return { error, map, code, warnings, extractedComments };\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `uglifyOptions`\n\nType: `Object`\nDefault: [default](https://github.com/mishoo/UglifyJS2#minify-options)\n\nUglifyJS minify [options](https://github.com/mishoo/UglifyJS2#minify-options).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        uglifyOptions: {\n          warnings: false,\n          parse: {},\n          compress: {},\n          mangle: true, // Note `mangle.properties` is `false` by default.\n          output: null,\n          toplevel: false,\n          nameCache: null,\n          ie8: false,\n          keep_fnames: false,\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `extractComments`\n\nType: `Boolean|String|RegExp|Function<(node, comment) -> Boolean|Object>`\nDefault: `false`\n\nWhether comments shall be extracted to a separate file, (see [details](https://github.com/webpack/webpack/commit/71933e979e51c533b432658d5e37917f9e71595a)).\nBy default extract only comments using `/^\\**!|@preserve|@license|@cc_on/i` regexp condition and remove remaining comments.\nIf the original file is named `foo.js`, then the comments will be stored to `foo.js.LICENSE`.\nThe `uglifyOptions.output.comments` option specifies whether the comment will be preserved, i.e. it is possible to preserve some comments (e.g. annotations) while extracting others or even preserving comments that have been extracted.\n\n#### `Boolean`\n\nEnable/disable extracting comments.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: true,\n      }),\n    ],\n  },\n};\n```\n\n#### `String`\n\nExtract `all` or `some` (use `/^\\**!|@preserve|@license|@cc_on/i` RegExp) comments.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: 'all',\n      }),\n    ],\n  },\n};\n```\n\n#### `RegExp`\n\nAll comments that match the given expression will be extracted to the separate file.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: /@extract/i,\n      }),\n    ],\n  },\n};\n```\n\n#### `Function<(node, comment) -> Boolean>`\n\nAll comments that match the given expression will be extracted to the separate file.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: function(astNode, comment) {\n          if (/@extract/i.test(comment.value)) {\n            return true;\n          }\n\n          return false;\n        },\n      }),\n    ],\n  },\n};\n```\n\n#### `Object`\n\nAllow to customize condition for extract comments, specify extracted file name and banner.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: {\n          condition: /^\\**!|@preserve|@license|@cc_on/i,\n          filename(file) {\n            return `${file}.LICENSE`;\n          },\n          banner(licenseFile) {\n            return `License information can be found in ${licenseFile}`;\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n##### `condition`\n\nType: `Boolean|String|RegExp|Function<(node, comment) -> Boolean|Object>`\n\nCondition what comments you need extract.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: {\n          condition: 'some',\n          filename(file) {\n            return `${file}.LICENSE`;\n          },\n          banner(licenseFile) {\n            return `License information can be found in ${licenseFile}`;\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n##### `filename`\n\nType: `Regex|Function<(string) -> String>`\nDefault: `${file}.LICENSE`\n\nThe file where the extracted comments will be stored.\nDefault is to append the suffix `.LICENSE` to the original filename.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: {\n          condition: /^\\**!|@preserve|@license|@cc_on/i,\n          filename: 'extracted-comments.js',\n          banner(licenseFile) {\n            return `License information can be found in ${licenseFile}`;\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n##### `banner`\n\nType: `Boolean|String|Function<(string) -> String>`\nDefault: `/*! For license information please see ${commentsFile} */`\n\nThe banner text that points to the extracted file and will be added on top of the original file.\nCan be `false` (no banner), a `String`, or a `Function<(string) -> String>` that will be called with the filename where extracted comments have been stored.\nWill be wrapped into comment.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        extractComments: {\n          condition: true,\n          filename(file) {\n            return `${file}.LICENSE`;\n          },\n          banner(commentsFile) {\n            return `My custom banner about license information ${commentsFile}`;\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n### `warningsFilter`\n\nType: `Function<(warning, source) -> Boolean>`\nDefault: `() => true`\n\nAllow to filter [uglify-js](https://github.com/mishoo/UglifyJS2) warnings.\nReturn `true` to keep the warning, `false` otherwise.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        warningsFilter: (warning, source) => {\n          if (/Dropping unreachable code/i.test(warning)) {\n            return true;\n          }\n\n          if (/filename\\.js/i.test(source)) {\n            return true;\n          }\n\n          return false;\n        },\n      }),\n    ],\n  },\n};\n```\n\n## Examples\n\n### Cache And Parallel\n\nEnable cache and multi-process parallel running.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        cache: true,\n        parallel: true,\n      }),\n    ],\n  },\n};\n```\n\n### Preserve Comments\n\nExtract all legal comments (i.e. `/^\\**!|@preserve|@license|@cc_on/i`) and preserve `/@license/i` comments.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        uglifyOptions: {\n          output: {\n            comments: /@license/i,\n          },\n        },\n        extractComments: true,\n      }),\n    ],\n  },\n};\n```\n\n### Remove Comments\n\nIf you avoid building with comments, set **uglifyOptions.output.comments** to **false** as in this config:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        uglifyOptions: {\n          output: {\n            comments: false,\n          },\n        },\n      }),\n    ],\n  },\n};\n```\n\n### Custom Minify Function\n\nOverride default minify function - use [terser](https://github.com/fabiosantoscode/terser) for minification.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  optimization: {\n    minimizer: [\n      new UglifyJsPlugin({\n        // Uncomment lines below for cache invalidation correctly\n        // cache: true,\n        // cacheKeys(defaultCacheKeys) {\n        //   delete defaultCacheKeys['uglify-js'];\n        //\n        //   return Object.assign(\n        //     {},\n        //     defaultCacheKeys,\n        //     { 'uglify-js': require('uglify-js/package.json').version },\n        //   );\n        // },\n        minify(file, sourceMap) {\n          // https://github.com/mishoo/UglifyJS2#minify-options\n          const uglifyJsOptions = {\n            /* your `uglify-js` package options */\n          };\n\n          if (sourceMap) {\n            uglifyJsOptions.sourceMap = {\n              content: sourceMap,\n            };\n          }\n\n          return require('terser').minify(file, uglifyJsOptions);\n        },\n      }),\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/uglifyjs-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/uglifyjs-webpack-plugin\n[node]: https://img.shields.io/node/v/uglifyjs-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin\n[tests]: https://dev.azure.com/webpack-contrib/uglifyjs-webpack-plugin/_apis/build/status/webpack-contrib.uglifyjs-webpack-plugin?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/uglifyjs-webpack-plugin/_build/latest?definitionId=8&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/uglifyjs-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=uglifyjs-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=uglifyjs-webpack-plugin"}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 380192}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2019860}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 8647679}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 26516149}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 52923031}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 123802518}], "dependentsCount": 1597, "starsCount": 17}, "github": {"starsCount": 1323, "forksCount": 194, "subscribersCount": 27, "issues": {"count": 409, "openCount": 4, "distribution": {"3600": 91, "10800": 30, "32400": 41, "97200": 51, "291600": 40, "874800": 45, "2624400": 43, "7873200": 39, "23619600": 24, "70858800": 3, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 63}, {"username": "bebraw", "commitsCount": 52}, {"username": "d3viant0ne", "commitsCount": 26}, {"username": "michael-ciniawsky", "commitsCount": 21}, {"username": "SebastianS90", "commitsCount": 4}, {"username": "TheLarkInn", "commitsCount": 4}, {"username": "hulkish", "commitsCount": 4}, {"username": "ai", "commitsCount": 2}, {"username": "Dru89", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "Hartorn", "commitsCount": 1}, {"username": "JemarJones", "commitsCount": 1}, {"username": "Kitanotori", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "SuperManEver", "commitsCount": 1}, {"username": "VadimBrodsky", "commitsCount": 1}, {"username": "arunoda", "commitsCount": 1}, {"username": "aui", "commitsCount": 1}, {"username": "backjo", "commitsCount": 1}, {"username": "bennybauer", "commitsCount": 1}, {"username": "brentwilton", "commitsCount": 1}, {"username": "davilima6", "commitsCount": 1}, {"username": "fa93hws", "commitsCount": 1}, {"username": "filipesilva", "commitsCount": 1}, {"username": "hedgepigdaniel", "commitsCount": 1}, {"username": "hontas", "commitsCount": 1}, {"username": "howdy39", "commitsCount": 1}, {"username": "iulo", "commitsCount": 1}, {"username": "jdubois", "commitsCount": 1}, {"username": "jharris4", "commitsCount": 1}, {"username": "julmot", "commitsCount": 1}, {"username": "jumoel", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "mkarajohn", "commitsCount": 1}, {"username": "mlazowik", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "rafaesc", "commitsCount": 1}, {"username": "rszewczyk", "commitsCount": 1}, {"username": "ryanclark", "commitsCount": 1}, {"username": "simon04", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "wesm87", "commitsCount": 1}, {"username": "xhlwill", "commitsCount": 1}, {"username": "zkat", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 4}]}, "source": {"files": {"readmeSize": 15316, "testsSize": 515575, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/uglifyjs-webpack-plugin.svg", "shields": "https://img.shields.io/npm/v/uglifyjs-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/uglifyjs-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin.svg", "service": "https://david-dm.org/webpack-contrib/uglifyjs-webpack-plugin.svg", "shields": "https://img.shields.io/david/webpack-contrib/uglifyjs-webpack-plugin.svg", "content": "https://img.shields.io/david/webpack-contrib/uglifyjs-webpack-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98, "outdatedDependencies": {"find-cache-dir": {"required": "^2.1.0", "stable": "3.3.1", "latest": "3.3.1"}, "is-wsl": {"required": "^1.1.0", "stable": "2.2.0", "latest": "2.2.0"}, "serialize-javascript": {"required": "^1.7.0", "stable": "4.0.0", "latest": "4.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "cacache": {"required": "^12.0.2", "stable": "15.0.4", "latest": "15.0.4"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.747, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 1609, "downloadsCount": 8838716.333333334, "downloadsAcceleration": -24024.28902207002, "dependentsCount": 1597}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7972893887141661, "detail": {"quality": 0.9001310050976798, "popularity": 0.5065373547130552, "maintenance": 0.9998914658151222}}}}, {"@babel/plugin-transform-runtime": {"analyzedAt": "2020-06-03T02:45:29.336Z", "collected": {"metadata": {"name": "@babel/plugin-transform-runtime", "scope": "babel", "version": "7.10.1", "description": "Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals", "keywords": ["babel-plugin"], "date": "2020-05-27T22:08:02.524Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-plugin-transform-runtime"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fplugin-transform-runtime", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-module-imports": "^7.10.1", "@babel/helper-plugin-utils": "^7.10.1", "resolve": "^1.8.1", "semver": "^5.5.1"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1", "@babel/helpers": "^7.10.1", "@babel/plugin-transform-typeof-symbol": "^7.10.1", "@babel/preset-env": "^7.10.1", "@babel/runtime": "^7.10.1", "@babel/template": "^7.10.1", "@babel/types": "^7.10.1"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 14}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 33}], "readme": "# @babel/plugin-transform-runtime\n\n> Externalise references to helpers and builtins, automatically polyfilling your code without polluting globals\n\nSee our website [@babel/plugin-transform-runtime](https://babeljs.io/docs/en/next/babel-plugin-transform-runtime.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/plugin-transform-runtime\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/plugin-transform-runtime --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5545443}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 27993656}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 81521402}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 143735345}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 250880400}], "dependentsCount": 1973, "starsCount": 2}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36685, "forksCount": 4305, "subscribersCount": 867, "issues": {"count": 11589, "openCount": 779, "distribution": {"3600": 2459, "10800": 915, "32400": 1063, "97200": 1239, "291600": 1049, "874800": 1009, "2624400": 846, "7873200": 808, "23619600": 842, "70858800": 1090, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 155}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 51}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 210}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 414}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 783}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 453, "testsSize": 80317, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.5.1", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 41958, "downloadsCount": 27173800.666666668, "downloadsAcceleration": 89241.10945585999, "dependentsCount": 1973}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24014814858394973}}, "score": {"final": 0.8797569374429035, "detail": {"quality": 0.947575878848091, "popularity": 0.8113393633394184, "maintenance": 0.8900439903419423}}}}, {"optimize-css-assets-webpack-plugin": {"analyzedAt": "2020-06-10T02:41:56.446Z", "collected": {"metadata": {"name": "optimize-css-assets-webpack-plugin", "scope": "unscoped", "version": "5.0.3", "description": "A Webpack plugin to optimize \\ minimize CSS assets.", "keywords": ["CSS", "duplicate", "extract-text-webpack-plugin", "minimize", "optimize", "remove", "webpack"], "date": "2019-06-28T23:15:51.591Z", "author": {"name": "Nuno Rodrigues"}, "publisher": {"username": "nmfr", "email": "nunomr@gmail.com"}, "maintainers": [{"username": "nmfr", "email": "nunomr@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/NMFR/optimize-css-assets-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/optimize-css-assets-webpack-plugin", "homepage": "http://github.com/NMFR/optimize-css-assets-webpack-plugin", "repository": "https://github.com/NMFR/optimize-css-assets-webpack-plugin", "bugs": "https://github.com/NMFR/optimize-css-assets-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"cssnano": "^4.1.10", "last-call-webpack-plugin": "^3.0.0"}, "devDependencies": {"babel-core": "^6.26.3", "babel-jest": "^22.1.0", "babel-plugin-transform-object-rest-spread": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-preset-env": "^1.7.0", "css-loader": "^3.0.0", "extract-text-webpack-plugin": "next", "jest": "^24.8.0", "style-loader": "^0.20.1", "webpack": "^4.9.1"}, "peerDependencies": {"webpack": "^4.0.0"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "# Optimize CSS Assets Webpack Plugin\n\nA Webpack plugin to optimize \\ minimize CSS assets.\n\n## What does the plugin do?\n\nIt will search for CSS assets during the Webpack build and will optimize \\ minimize the CSS (by default it uses [cssnano](http://github.com/ben-eb/cssnano) but a custom CSS processor can be specified).\n\n### Solves [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) CSS duplication problem:\n\nSince [extract-text-webpack-plugin](http://github.com/webpack/extract-text-webpack-plugin) only bundles (merges) text chunks, if it's used to bundle CSS, the bundle might have duplicate entries (chunks can be duplicate free but when merged, duplicate CSS can be created).\n\n## Installation:\n\nUsing npm:\n```shell\n$ npm install --save-dev optimize-css-assets-webpack-plugin\n```\n\n> :warning: For webpack v3 or below please use `optimize-css-assets-webpack-plugin@3.2.0`. The `optimize-css-assets-webpack-plugin@4.0.0` version and above supports webpack v4.\n\n## Configuration:\n\nThe plugin can receive the following options (all of them are optional):\n* `assetNameRegExp`: A regular expression that indicates the names of the assets that should be optimized \\ minimized. The regular expression provided is run against the filenames of the files exported by the `ExtractTextPlugin` instances in your configuration, not the filenames of your source CSS files. Defaults to `/\\.css$/g`\n* `cssProcessor`: The CSS processor used to optimize \\ minimize the CSS, defaults to [`cssnano`](http://github.com/ben-eb/cssnano). This should be a function that follows `cssnano.process` interface (receives a CSS and options parameters and returns a Promise).\n* `cssProcessorOptions`: The options passed to the `cssProcessor`, defaults to `{}`\n* `cssProcessorPluginOptions`: The plugin options passed to the `cssProcessor`, defaults to `{}`\n* `canPrint`: A boolean indicating if the plugin can print messages to the console, defaults to `true`\n\n## Example:\n\n``` javascript\nvar OptimizeCssAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        loader: ExtractTextPlugin.extract('style-loader', 'css-loader')\n      }\n    ]\n  },\n  plugins: [\n    new ExtractTextPlugin('styles.css'),\n    new OptimizeCssAssetsPlugin({\n      assetNameRegExp: /\\.optimize\\.css$/g,\n      cssProcessor: require('cssnano'),\n      cssProcessorPluginOptions: {\n        preset: ['default', { discardComments: { removeAll: true } }],\n      },\n      canPrint: true\n    })\n  ]\n};\n```\n\n## License\n\nMIT (http://www.opensource.org/licenses/mit-license.php)"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 737023}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4049333}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 16493145}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 46882490}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 82370501}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 147087675}], "dependentsCount": 3037, "starsCount": 24}, "github": {"starsCount": 996, "forksCount": 54, "subscribersCount": 12, "issues": {"count": 127, "openCount": 35, "distribution": {"3600": 13, "10800": 8, "32400": 15, "97200": 10, "291600": 5, "874800": 13, "2624400": 16, "7873200": 10, "23619600": 10, "70858800": 27, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "NMFR", "commitsCount": 39}, {"username": "MDSLKTR", "commitsCount": 1}, {"username": "digital-flowers", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "dwschrashun", "commitsCount": 1}, {"username": "frenzzy", "commitsCount": 1}, {"username": "jimvandervoort", "commitsCount": 1}, {"username": "lmk123", "commitsCount": 1}, {"username": "parties", "commitsCount": 1}, {"username": "prime-time", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "tommytroylin", "commitsCount": 1}, {"username": "ycycwx", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4}]}, "source": {"files": {"readmeSize": 2637, "testsSize": 9355}}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0}, "popularity": {"communityInterest": 1099, "downloadsCount": 15627496.666666666, "downloadsAcceleration": 50356.38285768646, "dependentsCount": 3037}, "maintenance": {"releasesFrequency": 0.28356164383561644, "commitsFrequency": 0.046027397260273974, "openIssues": 0.8740157480314961, "issuesDistribution": 0.017332646096794635}}, "score": {"final": 0.6376594211970009, "detail": {"quality": 0.8059119885709578, "popularity": 0.6547546727456437, "maintenance": 0.4763476833278237}}}}, {"coffee-script": {"analyzedAt": "2020-06-14T19:31:07.458Z", "collected": {"metadata": {"name": "coffee-script", "scope": "unscoped", "version": "1.12.7", "description": "Unfancy JavaScript", "keywords": ["javascript", "language", "coffeescript", "compiler"], "date": "2017-07-17T06:55:16.236Z", "author": {"name": "Jeremy Ashkenas"}, "publisher": {"username": "geoffreybooth", "email": "computing+npm@geoffreybooth.com"}, "maintainers": [{"username": "geoffreybooth", "email": "computing+npm@geoffreybooth.com"}, {"username": "jashkenas", "email": "jashkenas@gmail.com"}, {"username": "lydell", "email": "simon.lydell@gmail.com"}, {"username": "michaelficarra", "email": "npm@michael.ficarra.me"}], "repository": {"type": "git", "url": "git://github.com/jashkenas/coffeescript.git"}, "links": {"npm": "https://www.npmjs.com/package/coffee-script", "homepage": "http://coffeescript.org", "repository": "https://github.com/jashkenas/coffeescript", "bugs": "https://github.com/jashkenas/coffeescript/issues"}, "license": "MIT", "devDependencies": {"docco": "~0.7.0", "google-closure-compiler-js": "^20170626.0.0", "highlight.js": "~9.12.0", "jison": ">=0.4.17", "markdown-it": "^8.3.1", "underscore": "~1.8.3"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "deprecated": "CoffeeScript on NPM has moved to \"coffeescript\" (no hyphen)", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "## CoffeeScript has moved!\n\nCoffeeScript on NPM has moved to `coffeescript` (no hyphen). Please update references to `coffee-script` to use `coffeescript` instead.\n\nAlso, a new major version has been released under the `coffeescript` name. This new release targets modern JavaScript, with minimal breaking changes. Learn more at [http://coffeescript.org](http://coffeescript.org)."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 62843}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1023488}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4208333}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 13002670}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 24359876}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 50082309}], "dependentsCount": 4830, "starsCount": 333}, "github": {"homepage": "https://coffeescript.org/", "starsCount": 15562, "forksCount": 2010, "subscribersCount": 542, "issues": {"count": 5254, "openCount": 44, "distribution": {"3600": 1190, "10800": 399, "32400": 559, "97200": 622, "291600": 576, "874800": 472, "2624400": 342, "7873200": 272, "23619600": 246, "70858800": 283, "212576400": 293}, "isDisabled": false}, "contributors": [{"username": "jashkenas", "commitsCount": 1962}, {"username": "GeoffreyBooth", "commitsCount": 352}, {"username": "michaelficarra", "commitsCount": 312}, {"username": "satyr", "commitsCount": 163}, {"username": "helixbass", "commitsCount": 108}, {"username": "lydell", "commitsCount": 88}, {"username": "TrevorBurnham", "commitsCount": 59}, {"username": "geraldalewis", "commitsCount": 51}, {"username": "StanAngeloff", "commitsCount": 48}, {"username": "xixixao", "commitsCount": 46}, {"username": "epidemian", "commitsCount": 45}, {"username": "zdenko", "commitsCount": 43}, {"username": "jwalton", "commitsCount": 39}, {"username": "alubbe", "commitsCount": 36}, {"username": "cehoffman", "commitsCount": 26}, {"username": "matehat", "commitsCount": 24}, {"username": "thejh", "commitsCount": 18}, {"username": "hden", "commitsCount": 15}, {"username": "timbertson", "commitsCount": 15}, {"username": "vendethiel", "commitsCount": 15}, {"username": "zmthy", "commitsCount": 15}, {"username": "breckinloggins", "commitsCount": 11}, {"username": "connec", "commitsCount": 11}, {"username": "alangpierce", "commitsCount": 10}, {"username": "danielgtaylor", "commitsCount": 10}, {"username": "sgentle", "commitsCount": 10}, {"username": "jeremyBanks", "commitsCount": 8}, {"username": "ysmood", "commitsCount": 8}, {"username": "imcotton", "commitsCount": 7}, {"username": "josh", "commitsCount": 7}, {"username": "sstephenson", "commitsCount": 7}, {"username": "asalant", "commitsCount": 6}, {"username": "codelahoma", "commitsCount": 6}, {"username": "davidchambers", "commitsCount": 6}, {"username": "maxtaco", "commitsCount": 6}, {"username": "mklement0", "commitsCount": 6}, {"username": "sparecycles", "commitsCount": 6}, {"username": "spinda", "commitsCount": 6}, {"username": "tim-smart", "commitsCount": 6}, {"username": "troels", "commitsCount": 6}, {"username": "jawj", "commitsCount": 5}, {"username": "mrmowgli", "commitsCount": 5}, {"username": "revence27", "commitsCount": 5}, {"username": "alexgorbatchev", "commitsCount": 4}, {"username": "chrislloyd", "commitsCount": 4}, {"username": "olsonjeffery", "commitsCount": 4}, {"username": "rdeforest", "commitsCount": 4}, {"username": "roryokane", "commitsCount": 4}, {"username": "GabrielRatener", "commitsCount": 3}, {"username": "brodyberg", "commitsCount": 3}, {"username": "disnet", "commitsCount": 3}, {"username": "drnic", "commitsCount": 3}, {"username": "fahad19", "commitsCount": 3}, {"username": "gabehollombe", "commitsCount": 3}, {"username": "greghuc", "commitsCount": 3}, {"username": "hmaurer", "commitsCount": 3}, {"username": "joliss", "commitsCount": 3}, {"username": "mattly", "commitsCount": 3}, {"username": "minodisk", "commitsCount": 3}, {"username": "ngn", "commitsCount": 3}, {"username": "willmoffat", "commitsCount": 3}, {"username": "Artazor", "commitsCount": 2}, {"username": "BridgeAR", "commitsCount": 2}, {"username": "CaseyLeask", "commitsCount": 2}, {"username": "DylanPiercey", "commitsCount": 2}, {"username": "FredyC", "commitsCount": 2}, {"username": "aeosynth", "commitsCount": 2}, {"username": "agnoster", "commitsCount": 2}, {"username": "aroben", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "aviflax", "commitsCount": 2}, {"username": "banyan", "commitsCount": 2}, {"username": "bigtunacan", "commitsCount": 2}, {"username": "billymoon", "commitsCount": 2}, {"username": "blmarket", "commitsCount": 2}, {"username": "charliesome", "commitsCount": 2}, {"username": "chetan51", "commitsCount": 2}, {"username": "cosmicexplorer", "commitsCount": 2}, {"username": "danielbayley", "commitsCount": 2}, {"username": "dannguyen", "commitsCount": 2}, {"username": "domenic", "commitsCount": 2}, {"username": "edemaine", "commitsCount": 2}, {"username": "eelco", "commitsCount": 2}, {"username": "fortes", "commitsCount": 2}, {"username": "grayrest", "commitsCount": 2}, {"username": "hickford", "commitsCount": 2}, {"username": "johnyanarella", "commitsCount": 2}, {"username": "jordimassaguerpla", "commitsCount": 2}, {"username": "kengregson", "commitsCount": 2}, {"username": "lbeschastny", "commitsCount": 2}, {"username": "mal", "commitsCount": 2}, {"username": "marijnh", "commitsCount": 2}, {"username": "matthewwithanm", "commitsCount": 2}, {"username": "murrayju", "commitsCount": 2}, {"username": "philikon", "commitsCount": 2}, {"username": "samcday", "commitsCount": 2}, {"username": "sixmen", "commitsCount": 2}, {"username": "toots", "commitsCount": 2}, {"username": "yyyc514", "commitsCount": 2}, {"username": "zhanzhenzhen", "commitsCount": 2}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 23}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 55}]}, "source": {"files": {"readmeSize": 1840, "testsSize": 838339}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.6, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 18547, "downloadsCount": 4334223.333333333, "downloadsAcceleration": 296.70003805175656, "dependentsCount": 4830}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0.8339554794520547, "openIssues": 1, "issuesDistribution": 0.022621256970398407}}, "score": {"final": 0.5343461959867526, "detail": {"quality": 0.5920519192515759, "popularity": 0.6505150868217816, "maintenance": 0.36871525663901794}}}}, {"semantic-release": {"analyzedAt": "2020-06-04T00:17:23.549Z", "collected": {"metadata": {"name": "semantic-release", "scope": "unscoped", "version": "17.0.8", "description": "Automated semver compliant package publishing", "keywords": ["author", "automation", "changelog", "module", "package", "publish", "release", "semver", "version"], "date": "2020-05-24T18:57:41.334Z", "author": {"name": "Stephan B\u00f6nnemann", "email": "stephan@boennemann.me", "url": "http://boennemann.me", "username": "boennemann"}, "publisher": {"username": "semantic-release-bot", "email": "semantic-release@martynus.net"}, "maintainers": [{"username": "boennemann", "email": "stephan@boennemann.me"}, {"username": "christophwitzko", "email": "npm@christophwitzko.com"}, {"username": "gr2m", "email": "gregor@martynus.net"}, {"username": "pvdlg", "email": "pierre.denis.vanduynslager@gmail.com"}, {"username": "semantic-release-bot", "email": "semantic-release@boennemann.me"}], "contributors": [{"name": "Gregor Martynus", "url": "https://twitter.com/gr2m"}, {"name": "Pierre Vanduynslager", "url": "https://twitter.com/@pvdlg_"}], "repository": {"type": "git", "url": "git+https://github.com/semantic-release/semantic-release.git"}, "links": {"npm": "https://www.npmjs.com/package/semantic-release", "homepage": "https://github.com/semantic-release/semantic-release#readme", "repository": "https://github.com/semantic-release/semantic-release", "bugs": "https://github.com/semantic-release/semantic-release/issues"}, "license": "MIT", "dependencies": {"@semantic-release/commit-analyzer": "^8.0.0", "@semantic-release/error": "^2.2.0", "@semantic-release/github": "^7.0.0", "@semantic-release/npm": "^7.0.0", "@semantic-release/release-notes-generator": "^9.0.0", "aggregate-error": "^3.0.0", "cosmiconfig": "^6.0.0", "debug": "^4.0.0", "env-ci": "^5.0.0", "execa": "^4.0.0", "figures": "^3.0.0", "find-versions": "^3.0.0", "get-stream": "^5.0.0", "git-log-parser": "^1.2.0", "hook-std": "^2.0.0", "hosted-git-info": "^3.0.0", "lodash": "^4.17.15", "marked": "^1.0.0", "marked-terminal": "^4.0.0", "micromatch": "^4.0.2", "p-each-series": "^2.1.0", "p-reduce": "^2.0.0", "read-pkg-up": "^7.0.0", "resolve-from": "^5.0.0", "semver": "^7.3.2", "semver-diff": "^3.1.1", "signale": "^1.2.1", "yargs": "^15.0.1"}, "devDependencies": {"ava": "^3.1.0", "clear-module": "^4.0.0", "codecov": "^3.0.0", "delay": "^4.0.0", "dockerode": "^3.0.0", "file-url": "^3.0.0", "fs-extra": "^9.0.0", "got": "^11.0.0", "js-yaml": "^3.10.0", "mockserver-client": "^5.1.1", "nock": "^12.0.0", "nyc": "^15.0.0", "p-retry": "^4.0.0", "proxyquire": "^2.0.0", "sinon": "^9.0.0", "stream-buffers": "^3.0.2", "tempy": "^0.5.0", "xo": "^0.29.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 21}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 62}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 147}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\" style=\"border-bottom: none;\">\ud83d\udce6\ud83d\ude80 semantic-release</h1>\n<h3 align=\"center\">Fully automated version management and package publishing</h3>\n<p align=\"center\">\n  <a href=\"https://spectrum.chat/semantic-release\">\n    <img alt=\"Join the community on Spectrum\" src=\"https://withspectrum.github.io/badge/badge.svg\">\n  </a>\n  <a href=\"https://travis-ci.org/semantic-release/semantic-release\">\n    <img alt=\"Travis\" src=\"https://img.shields.io/travis/semantic-release/semantic-release/master.svg\">\n  </a>\n  <a href=\"https://codecov.io/gh/semantic-release/semantic-release\">\n    <img alt=\"Codecov\" src=\"https://img.shields.io/codecov/c/github/semantic-release/semantic-release/master.svg\">\n  </a>\n  <a href=\"https://greenkeeper.io\">\n    <img alt=\"Greenkeeper\" src=\"https://badges.greenkeeper.io/semantic-release/semantic-release.svg\">\n  </a>\n  <a href=\"#badge\">\n    <img alt=\"semantic-release\" src=\"https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg\">\n  </a>\n</p>\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/semantic-release\">\n    <img alt=\"npm latest version\" src=\"https://img.shields.io/npm/v/semantic-release/latest.svg\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/semantic-release\">\n    <img alt=\"npm next version\" src=\"https://img.shields.io/npm/v/semantic-release/next.svg\">\n  </a>\n  <a href=\"https://www.npmjs.com/package/semantic-release\">\n    <img alt=\"npm beta version\" src=\"https://img.shields.io/npm/v/semantic-release/beta.svg\">\n  </a>\n</p>\n\n**semantic-release** automates the whole package release workflow including: determining the next version number, generating the release notes and publishing the package.\n\nThis removes the immediate connection between human emotions and version numbers, strictly following the [Semantic Versioning](http://semver.org) specification.\n\n> Trust us, this will change your workflow for the better. \u2013 [egghead.io](https://egghead.io/lessons/javascript-how-to-write-a-javascript-library-automating-releases-with-semantic-release)\n\n## Highlights\n\n- Fully automated release\n- Enforce [Semantic Versioning](https://semver.org) specification\n- New features and fixes are immediately available to users\n- Notify maintainers and users of new releases\n- Use formalized commit message convention to document changes in the codebase\n- Publish on different distribution channels (such as [npm dist-tags](https://docs.npmjs.com/cli/dist-tag)) based on git merges\n- Integrate with your [continuous integration workflow](docs/recipes/README.md#ci-configurations)\n- Avoid potential errors associated with manual releases\n- Support any [package managers and languages](docs/recipes/README.md#package-managers-and-languages) via [plugins](docs/usage/plugins.md)\n- Simple and reusable configuration via [shareable configurations](docs/usage/shareable-configurations.md)\n\n## How does it work?\n\n### Commit message format\n\n**semantic-release** uses the commit messages to determine the type of changes in the codebase. Following formalized conventions for commit messages, **semantic-release** automatically determines the next [semantic version](https://semver.org) number, generates a changelog and publishes the release.\n\nBy default **semantic-release** uses [Angular Commit Message Conventions](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines). The commit message format can be changed with the [`preset` or `config` options](docs/usage/configuration.md#options) of the [@semantic-release/commit-analyzer](https://github.com/semantic-release/commit-analyzer#options) and [@semantic-release/release-notes-generator](https://github.com/semantic-release/release-notes-generator#options) plugins.\n\nTools such as [commitizen](https://github.com/commitizen/cz-cli) or [commitlint](https://github.com/conventional-changelog/commitlint) can be used to help contributors and enforce valid commit messages.\n\nHere is an example of the release type that will be done based on a commit messages:\n\n| Commit message                                                                                                                                                                                   | Release type               |\n|--------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------------|----------------------------|\n| `fix(pencil): stop graphite breaking when too much pressure applied`                                                                                                                             | Patch Release              |\n| `feat(pencil): add 'graphiteWidth' option`                                                                                                                                                       | ~~Minor~~ Feature Release  |\n| `perf(pencil): remove graphiteWidth option`<br><br>`BREAKING CHANGE: The graphiteWidth option has been removed.`<br>`The default graphite width of 10mm is always used for performance reasons.` | ~~Major~~ Breaking Release |\n\n### Automation with CI\n\n**semantic-release** is meant to be executed on the CI environment after every successful build on the release branch. This way no human is directly involved in the release process and the releases are guaranteed to be [unromantic and unsentimental](http://sentimentalversioning.org).\n\n### Triggering a release\n\nFor each new commits added to one of the release branches (for example `master`, `next`, `beta`), with `git push` or by merging a pull request or merging from another branch, a CI build is triggered and runs the `semantic-release` command to make a release if there are codebase changes since the last release that affect the package functionalities.\n\n**semantic-release** offers various ways to control the timing, the content and the audience of published releases. See example workflows in the following recipes:\n- [Using distribution channels](docs/recipes/distribution-channels.md#publishing-on-distribution-channels)\n- [Maintenance releases](docs/recipes/maintenance-releases.md#publishing-maintenance-releases)\n- [Pre-releases](docs/recipes/pre-releases.md#publishing-pre-releases)\n\n### Release steps\n\nAfter running the tests, the command `semantic-release` will execute the following steps:\n\n| Step              | Description                                                                                                                     |\n|-------------------|---------------------------------------------------------------------------------------------------------------------------------|\n| Verify Conditions | Verify all the conditions to proceed with the release.                                                                          |\n| Get last release  | Obtain the commit corresponding to the last release by analyzing [Git tags](https://git-scm.com/book/en/v2/Git-Basics-Tagging). |\n| Analyze commits   | Determine the type of release based on the commits added since the last release.                                                |\n| Verify release    | Verify the release conformity.                                                                                                  |\n| Generate notes    | Generate release notes for the commits added since the last release.                                                            |\n| Create Git tag    | Create a Git tag corresponding to the new release version.                                                                      |\n| Prepare           | Prepare the release.                                                                                                            |\n| Publish           | Publish the release.                                                                                                            |\n| Notify            | Notify of new releases or errors.                                                                                               |\n\n## Requirements\n\nIn order to use **semantic-release** you need:\n- To host your code in a [Git repository](https://git-scm.com)\n- Use a Continuous Integration service that allows you to [securely set up credentials](docs/usage/ci-configuration.md#authentication)\n- Git CLI version [2.7.1 or higher](docs/support/FAQ.md#why-does-semantic-release-require-git-version--271) installed in your Continuous Integration environment\n- [Node.js](https://nodejs.org) version [10.18 or higher](docs/support/FAQ.md#why-does-semantic-release-require-node-version--1018) installed in your Continuous Integration environment\n\n## Documentation\n\n- Usage\n  - [Getting started](docs/usage/getting-started.md#getting-started)\n  - [Installation](docs/usage/installation.md#installation)\n  - [CI Configuration](docs/usage/ci-configuration.md#ci-configuration)\n  - [Configuration](docs/usage/configuration.md#configuration)\n  - [Plugins](docs/usage/plugins.md)\n  - [Workflow configuration](docs/usage/workflow-configuration.md)\n  - [Shareable configurations](docs/usage/shareable-configurations.md)\n- Extending\n  - [Plugins](docs/extending/plugins-list.md)\n  - [Shareable configuration](docs/extending/shareable-configurations-list.md)\n- Recipes\n  - [CI configurations](docs/recipes/README.md)\n  - [Git hosted services](docs/recipes/README.md)\n  - [Release workflow](docs/recipes/README.md)\n  - [Package managers and languages](docs/recipes/README.md)\n- Developer guide\n  - [JavaScript API](docs/developer-guide/js-api.md)\n  - [Plugins development](docs/developer-guide/plugin.md)\n  - [Shareable configuration development](docs/developer-guide/shareable-configuration.md)\n- Support\n  - [Resources](docs/support/resources.md)\n  - [Frequently Asked Questions](docs/support/FAQ.md)\n  - [Troubleshooting](docs/support/troubleshooting.md)\n  - [Node version requirement](docs/support/node-version.md)\n  - [Node Support Policy](docs/support/node-support-policy.md)\n\n## Get help\n\n- [Stack Overflow](https://stackoverflow.com/questions/tagged/semantic-release)\n- [Spectrum community](https://spectrum.chat/semantic-release)\n- [Twitter](https://twitter.com/SemanticRelease)\n\n## Badge\n\nLet people know that your package is published using **semantic-release** by including this badge in your readme.\n\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n\n```md\n[![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg)](https://github.com/semantic-release/semantic-release)\n```\n\n## Team\n\n| [![Stephan B\u00f6nnemann](https://github.com/boennemann.png?size=100)](https://github.com/boennemann) | [![Rolf Erik Lekang](https://github.com/relekang.png?size=100)](https://github.com/relekang) | [![Johannes J\u00f6rg Schmidt](https://github.com/jo.png?size=100)](https://github.com/jo) | [![Gregor Martynus](https://github.com/gr2m.png?size=100)](https://github.com/gr2m) | [![Pierre Vanduynslager](https://github.com/finnp.png?size=100)](https://github.com/finnp) | [![Pierre Vanduynslager](https://github.com/pvdlg.png?size=100)](https://github.com/pvdlg) | [![Christoph Witzko](https://github.com/christophwitzko.png?size=100)](https://github.com/christophwitzko) |\n|---------------------------------------------------------------------------------------------------|----------------------------------------------------------------------------------------------|---------------------------------------------------------------------------------------|-------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|--------------------------------------------------------------------------------------------|------------------------------------------------------------------------------------------------------------|\n| [Stephan B\u00f6nnemann](https://github.com/boennemann)                                                | [Rolf Erik Lekang](https://github.com/relekang)                                              | [Johannes J\u00f6rg Schmidt](https://github.com/jo)                                        | [Gregor Martynus](https://github.com/gr2m)                                          | [Finn Pauls](https://github.com/finnp)                                                     | [Pierre Vanduynslager](https://github.com/pvdlg)                                           | [Christoph Witzko](https://github.com/christophwitzko)                                                     |\n\n<p align=\"center\">\n  <img alt=\"Kill all humans\" src=\"media/bender.png\">\n</p>"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 199317}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1003469}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2944132}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5168074}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8670904}], "dependentsCount": 259, "starsCount": 83}, "github": {"homepage": "https://semantic-release.gitbook.io", "starsCount": 9904, "forksCount": 805, "subscribersCount": 17, "issues": {"count": 1536, "openCount": 65, "distribution": {"3600": 316, "10800": 150, "32400": 133, "97200": 190, "291600": 147, "874800": 139, "2624400": 121, "7873200": 157, "23619600": 92, "70858800": 72, "212576400": 19}, "isDisabled": false}, "contributors": [{"username": "pvdlg", "commitsCount": 375}, {"username": "greenkeeper[bot]", "commitsCount": 99}, {"username": "boennemann", "commitsCount": 98}, {"username": "greenkeeperio-bot", "commitsCount": 28}, {"username": "gr2m", "commitsCount": 21}, {"username": "esciara", "commitsCount": 9}, {"username": "Aghassi", "commitsCount": 5}, {"username": "activescott", "commitsCount": 3}, {"username": "christophwitzko", "commitsCount": 3}, {"username": "felixfbecker", "commitsCount": 3}, {"username": "umireon", "commitsCount": 3}, {"username": "RichardLitt", "commitsCount": 2}, {"username": "austince", "commitsCount": 2}, {"username": "develar", "commitsCount": 2}, {"username": "evansiroky", "commitsCount": 2}, {"username": "joh-klein", "commitsCount": 2}, {"username": "lluchmk", "commitsCount": 2}, {"username": "piercus", "commitsCount": 2}, {"username": "swashcap", "commitsCount": 2}, {"username": "tlvince", "commitsCount": 2}, {"username": "whosford", "commitsCount": 2}, {"username": "DanielHabenicht", "commitsCount": 1}, {"username": "GabrielDuarteM", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "JoA-MoS", "commitsCount": 1}, {"username": "KengoTODA", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "NoxHarmonium", "commitsCount": 1}, {"username": "Oupsla", "commitsCount": 1}, {"username": "PAkerstrand", "commitsCount": 1}, {"username": "Relequestual", "commitsCount": 1}, {"username": "TehShrike", "commitsCount": 1}, {"username": "abatilo", "commitsCount": 1}, {"username": "alexandr-g", "commitsCount": 1}, {"username": "alissonperez", "commitsCount": 1}, {"username": "alvaropinot", "commitsCount": 1}, {"username": "antongolub", "commitsCount": 1}, {"username": "bengummer", "commitsCount": 1}, {"username": "bertho-zero", "commitsCount": 1}, {"username": "botcheddevil", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "byCedric", "commitsCount": 1}, {"username": "carlos-cubas", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "crash7", "commitsCount": 1}, {"username": "crhistianramirez", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "dbasilio", "commitsCount": 1}, {"username": "detj", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "gaurav-nelson", "commitsCount": 1}, {"username": "guilhermejcgois", "commitsCount": 1}, {"username": "hannesrabo", "commitsCount": 1}, {"username": "hazcod", "commitsCount": 1}, {"username": "hershmire", "commitsCount": 1}, {"username": "honzajavorek", "commitsCount": 1}, {"username": "hutson", "commitsCount": 1}, {"username": "janpio", "commitsCount": 1}, {"username": "jedmao", "commitsCount": 1}, {"username": "jedwards1211", "commitsCount": 1}, {"username": "jmodjeski75", "commitsCount": 1}, {"username": "joscha", "commitsCount": 1}, {"username": "jozefcipa", "commitsCount": 1}, {"username": "jpoehnelt", "commitsCount": 1}, {"username": "kleinfreund", "commitsCount": 1}, {"username": "knidarkness", "commitsCount": 1}, {"username": "kostis-codefresh", "commitsCount": 1}, {"username": "lshadler", "commitsCount": 1}, {"username": "markdalgleish", "commitsCount": 1}, {"username": "matt-oakes", "commitsCount": 1}, {"username": "mchao409", "commitsCount": 1}, {"username": "mehrad-rafigh", "commitsCount": 1}, {"username": "mpuels", "commitsCount": 1}, {"username": "mr-wildcard", "commitsCount": 1}, {"username": "mziemer21", "commitsCount": 1}, {"username": "newyork-anthonyng", "commitsCount": 1}, {"username": "nickshine", "commitsCount": 1}, {"username": "notrab", "commitsCount": 1}, {"username": "oatkiller", "commitsCount": 1}, {"username": "oleg-koval", "commitsCount": 1}, {"username": "pascalMN", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "pmowrer", "commitsCount": 1}, {"username": "prokopsimek", "commitsCount": 1}, {"username": "rap2hpoutre", "commitsCount": 1}, {"username": "robcresswell", "commitsCount": 1}, {"username": "ryan-kimber", "commitsCount": 1}, {"username": "ryaninvents", "commitsCount": 1}, {"username": "sadsa", "commitsCount": 1}, {"username": "saitho", "commitsCount": 1}, {"username": "schalkneethling", "commitsCount": 1}, {"username": "simlu", "commitsCount": 1}, {"username": "solidnerd", "commitsCount": 1}, {"username": "travi", "commitsCount": 1}, {"username": "trevtrich", "commitsCount": 1}, {"username": "tsirlucas", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}, {"username": "wejendorp", "commitsCount": 1}, {"username": "zcei", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 57}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 168}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 12767, "testsSize": 279091}, "badges": [{"urls": {"original": "https://img.shields.io/travis/semantic-release/semantic-release/master.svg", "service": "https://api.travis-ci.org/semantic-release/semantic-release.svg?branch=master", "shields": "https://img.shields.io/travis/semantic-release/semantic-release/master.svg", "content": "https://img.shields.io/travis/semantic-release/semantic-release/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/semantic-release/semantic-release/master.svg", "service": "https://codecov.io/github/semantic-release/semantic-release/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/semantic-release/semantic-release/master.svg", "content": "https://img.shields.io/codecov/c/github/semantic-release/semantic-release/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/semantic-release/latest.svg", "shields": "https://img.shields.io/npm/v/semantic-release/latest.svg", "content": "https://img.shields.io/npm/v/semantic-release/latest.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v/semantic-release"}}}, {"urls": {"original": "https://img.shields.io/npm/v/semantic-release/next.svg", "shields": "https://img.shields.io/npm/v/semantic-release/next.svg", "content": "https://img.shields.io/npm/v/semantic-release/next.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v/semantic-release"}}}, {"urls": {"original": "https://img.shields.io/npm/v/semantic-release/beta.svg", "shields": "https://img.shields.io/npm/v/semantic-release/beta.svg", "content": "https://img.shields.io/npm/v/semantic-release/beta.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v/semantic-release"}}}], "linters": ["prettier", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 10909, "downloadsCount": 981377.3333333334, "downloadsAcceleration": 3662.1715372907147, "dependentsCount": 259}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9617328767123288, "openIssues": 1, "issuesDistribution": 0.5955326527296895}}, "score": {"final": 0.817626447601166, "detail": {"quality": 0.9894676899251087, "popularity": 0.4937892578598473, "maintenance": 0.9941711439219625}}}}, {"@angular/platform-browser-dynamic": {"analyzedAt": "2020-06-11T23:26:12.047Z", "collected": {"metadata": {"name": "@angular/platform-browser-dynamic", "scope": "angular", "version": "9.1.11", "description": "Angular - library for using Angular in a web browser with JIT compilation", "date": "2020-06-10T18:21:42.531Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/platform-browser-dynamic"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fplatform-browser-dynamic", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"@angular/core": "9.1.11", "@angular/common": "9.1.11", "@angular/compiler": "9.1.11", "@angular/platform-browser": "9.1.11", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 12}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 32}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 53}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 105}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 194}]}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 290480}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1510914}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 6404696}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 18777603}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 34349697}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 64525225}], "dependentsCount": 6679, "starsCount": 9}, "github": {"homepage": "https://angular.io", "starsCount": 62026, "forksCount": 16872, "subscribersCount": 3166, "issues": {"count": 37198, "openCount": 3305, "distribution": {"3600": 3771, "10800": 2600, "32400": 3131, "97200": 4498, "291600": 4493, "874800": 4708, "2624400": 3637, "7873200": 3122, "23619600": 3184, "70858800": 2477, "212576400": 1577}, "isDisabled": false}, "contributors": [{"username": "petebacondarwin", "commitsCount": 1409}, {"username": "gkalpak", "commitsCount": 1254}, {"username": "vsavkin", "commitsCount": 952}, {"username": "IgorMinar", "commitsCount": 930}, {"username": "vicb", "commitsCount": 916}, {"username": "tbosch", "commitsCount": 788}, {"username": "mhevery", "commitsCount": 671}, {"username": "alxhub", "commitsCount": 571}, {"username": "alexeagle", "commitsCount": 561}, {"username": "pkozlowski-opensource", "commitsCount": 542}, {"username": "kara", "commitsCount": 516}, {"username": "matsko", "commitsCount": 479}, {"username": "devversion", "commitsCount": 381}, {"username": "chuckjaz", "commitsCount": 336}, {"username": "marclaval", "commitsCount": 310}, {"username": "gregmagolan", "commitsCount": 290}, {"username": "AndrewKushnir", "commitsCount": 246}, {"username": "kyliau", "commitsCount": 238}, {"username": "josephperrott", "commitsCount": 214}, {"username": "crisbeto", "commitsCount": 207}, {"username": "alan-agius4", "commitsCount": 200}, {"username": "jasonaden", "commitsCount": 191}, {"username": "ocombe", "commitsCount": 191}, {"username": "jbogarthyde", "commitsCount": 180}, {"username": "JoostK", "commitsCount": 165}, {"username": "btford", "commitsCount": 152}, {"username": "brandonroberts", "commitsCount": 151}, {"username": "wardbell", "commitsCount": 149}, {"username": "yjbanov", "commitsCount": 145}, {"username": "filipesilva", "commitsCount": 137}, {"username": "rkirov", "commitsCount": 123}, {"username": "mprobst", "commitsCount": 120}, {"username": "jeffbcross", "commitsCount": 118}, {"username": "kapunahelewong", "commitsCount": 113}, {"username": "benlesh", "commitsCount": 112}, {"username": "sjtrimble", "commitsCount": 112}, {"username": "atscott", "commitsCount": 98}, {"username": "JiaLiPassion", "commitsCount": 88}, {"username": "Foxandxss", "commitsCount": 85}, {"username": "juliemr", "commitsCount": 79}, {"username": "vikerman", "commitsCount": 79}, {"username": "ayazhafiz", "commitsCount": 77}, {"username": "cexbrayat", "commitsCount": 77}, {"username": "robwormald", "commitsCount": 75}, {"username": "PatrickJS", "commitsCount": 73}, {"username": "sonukapoor", "commitsCount": 62}, {"username": "jelbourn", "commitsCount": 58}, {"username": "ajitsinghkaler", "commitsCount": 49}, {"username": "trotyl", "commitsCount": 44}, {"username": "kevmoo", "commitsCount": 43}, {"username": "naomiblack", "commitsCount": 42}, {"username": "jteplitz", "commitsCount": 41}, {"username": "caitp", "commitsCount": 37}, {"username": "StephenFluin", "commitsCount": 35}, {"username": "hansl", "commitsCount": 33}, {"username": "jenniferfell", "commitsCount": 33}, {"username": "chembu", "commitsCount": 32}, {"username": "mgechev", "commitsCount": 31}, {"username": "tinayuangao", "commitsCount": 29}, {"username": "wKoza", "commitsCount": 29}, {"username": "andrewseguin", "commitsCount": 28}, {"username": "alfaproject", "commitsCount": 24}, {"username": "jakemac53", "commitsCount": 24}, {"username": "wagnermaciel", "commitsCount": 24}, {"username": "CaerusKaru", "commitsCount": 23}, {"username": "santoshyadav198613", "commitsCount": 23}, {"username": "ivanwonder", "commitsCount": 22}, {"username": "vojtajina", "commitsCount": 21}, {"username": "Toxicable", "commitsCount": 20}, {"username": "lacolaco", "commitsCount": 20}, {"username": "ttowncompiled", "commitsCount": 20}, {"username": "PascalPrecht", "commitsCount": 17}, {"username": "danielsogl", "commitsCount": 17}, {"username": "kwalrath", "commitsCount": 17}, {"username": "TedSander", "commitsCount": 14}, {"username": "bowenni", "commitsCount": 13}, {"username": "Splaktar", "commitsCount": 12}, {"username": "ahasall", "commitsCount": 12}, {"username": "alfonso-presa", "commitsCount": 12}, {"username": "chalin", "commitsCount": 12}, {"username": "FrederikSchlemmer", "commitsCount": 11}, {"username": "clydin", "commitsCount": 11}, {"username": "goderbauer", "commitsCount": 11}, {"username": "SekibOmazic", "commitsCount": 10}, {"username": "hankduan", "commitsCount": 10}, {"username": "joostme", "commitsCount": 10}, {"username": "manekinekko", "commitsCount": 10}, {"username": "LayZeeDK", "commitsCount": 9}, {"username": "Potapy4", "commitsCount": 9}, {"username": "benbraou", "commitsCount": 9}, {"username": "hterkelsen", "commitsCount": 9}, {"username": "Goodwine", "commitsCount": 8}, {"username": "asnowwolf", "commitsCount": 8}, {"username": "chirayuk", "commitsCount": 8}, {"username": "juleskremer", "commitsCount": 8}, {"username": "laskoviymishka", "commitsCount": 8}, {"username": "martinsik", "commitsCount": 8}, {"username": "sarunint", "commitsCount": 8}, {"username": "arturovt", "commitsCount": 7}, {"username": "dgp1130", "commitsCount": 7}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 15}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 147}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 717}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1552}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3528}], "statuses": [{"context": "ci/circleci: publish_packages_as_artifacts", "state": "success"}, {"context": "ci/circleci: test_aio_tools", "state": "pending"}, {"context": "ci/circleci: test_aio_local", "state": "pending"}, {"context": "ci/circleci: test_docs_examples", "state": "pending"}, {"context": "ci/circleci: test_aio_local_viewengine", "state": "pending"}, {"context": "ci/circleci: components-repo-unit-tests", "state": "pending"}, {"context": "ci/circleci: test_docs_examples_viewengine", "state": "pending"}, {"context": "ci/circleci: test_ivy_aot_win", "state": "pending"}, {"context": "ci/circleci: build-npm-packages", "state": "success"}, {"context": "ci/angular: size", "state": "success"}, {"context": "ci/circleci: test_ivy_aot", "state": "success"}, {"context": "ci/circleci: build-ivy-npm-packages", "state": "success"}, {"context": "ci/circleci: test_win", "state": "pending"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: test_zonejs", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: test_aio", "state": "pending"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 17279, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.45735294117647063, "health": 1, "branding": 0}, "popularity": {"communityInterest": 82173, "downloadsCount": 6259201, "downloadsAcceleration": 12689.659988584477, "dependentsCount": 6679}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.09089486358443866}}, "error": {"name": "ParseError", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/angular/angular/issues?state=all&per_page=100&page=343", "protocol": "https:", "url": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=343", "gotOptions": {"path": "/repos/angular/angular/issues?state=all&per_page=100&page=343", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=343", "pathname": "/repos/angular/angular/issues", "href": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=343", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token c7fc8a30c56bc3114686a91c8fd324ac0f702669", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET"}, "statusCode": 200, "statusMessage": "OK", "message": "Unexpected end of JSON input in \"https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=343\": \n[{\"url\":\"https://api.github.com/repos/angular/angular/issues/3044\",\"repositor...", "stack": "ParseError: Unexpected end of JSON input in \"https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=343\": \n[{\"url\":\"https://api.github.com/repos/angular/angular/issues/3044\",\"repositor...\n    at EventEmitter.emitter.on (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:65:26)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\n    at Promise.resolve.then.then.val (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:51:6)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)", "caughtAt": "2020-06-15T21:32:09.830Z"}, "score": {"final": 0.7619797020869226, "detail": {"quality": 0.7491159126499489, "popularity": 0.7768779770578198, "maintenance": 0.7581075323477173}}}}, {"copy-webpack-plugin": {"analyzedAt": "2020-06-04T07:14:13.646Z", "collected": {"metadata": {"name": "copy-webpack-plugin", "scope": "unscoped", "version": "6.0.2", "description": "Copy files && directories with webpack", "keywords": ["webpack", "plugin", "transfer", "move", "copy"], "date": "2020-06-03T15:35:05.788Z", "author": {"name": "Len Boyette"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "kevlened", "email": "boyettel@gmail.com"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/copy-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/copy-webpack-plugin", "homepage": "https://github.com/webpack-contrib/copy-webpack-plugin", "repository": "https://github.com/webpack-contrib/copy-webpack-plugin", "bugs": "https://github.com/webpack-contrib/copy-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"cacache": "^15.0.4", "fast-glob": "^3.2.2", "find-cache-dir": "^3.3.1", "glob-parent": "^5.1.1", "globby": "^11.0.1", "loader-utils": "^2.0.0", "normalize-path": "^3.0.0", "p-limit": "^2.3.0", "schema-utils": "^2.7.0", "serialize-javascript": "^3.1.0", "webpack-sources": "^1.4.3"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/preset-env": "^7.10.2", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^26.0.1", "chokidar": "^3.4.0", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.1", "enhanced-resolve": "^4.1.1", "eslint": "^7.1.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "husky": "^4.2.5", "is-gzip": "^2.0.0", "jest": "^26.0.1", "lint-staged": "^10.2.8", "memfs": "^3.2.0", "mkdirp": "^1.0.4", "npm-run-all": "^4.1.5", "prettier": "^2.0.5", "standard-version": "^8.0.0", "webpack": "^4.43.0"}, "peerDependencies": {"webpack": "^4.37.0 || ^5.0.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# copy-webpack-plugin\n\nCopies individual files or entire directories, which already exist, to the build directory.\n\n## Getting Started\n\nTo begin, you'll need to install `copy-webpack-plugin`:\n\n```console\n$ npm install copy-webpack-plugin --save-dev\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nconst CopyPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        { from: 'source', to: 'dest' },\n        { from: 'other', to: 'public' },\n      ],\n    }),\n  ],\n};\n```\n\n> \u2139\ufe0f `webpack-copy-plugin` is not designed to copy files generated from the build process; rather, it is to copy files that already exist in the source tree, as part of the build process.\n\n> \u2139\ufe0f If you want `webpack-dev-server` to write files to the output directory during development, you can force it with the [`writeToDisk`](https://github.com/webpack/webpack-dev-middleware#writetodisk) option or the [`write-file-webpack-plugin`](https://github.com/gajus/write-file-webpack-plugin).\n\n## Options\n\nThe plugin's signature:\n\n**webpack.config.js**\n\n```js\nconst CopyPlugin = require('copy-webpack-plugin');\n\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        { from: 'source', to: 'dest' },\n        { from: 'other', to: 'public' },\n      ],\n      options: {\n        concurrency: 100,\n      },\n    }),\n  ],\n};\n```\n\n### Patterns\n\n|                  Name                   |            Type             |                     Default                     | Description                                                                                           |\n| :-------------------------------------: | :-------------------------: | :---------------------------------------------: | :---------------------------------------------------------------------------------------------------- |\n|             [`from`](#from)             |         `{String}`          |                   `undefined`                   | Glob or path from where we \u0441opy files.                                                                |\n|               [`to`](#to)               |         `{String}`          |            `compiler.options.output`            | Output path.                                                                                          |\n|          [`context`](#context)          |         `{String}`          | `options.context \\|\\| compiler.options.context` | A path that determines how to interpret the `from` path.                                              |\n|      [`globOptions`](#globoptions)      |         `{Object}`          |                   `undefined`                   | [Options][glob-options] passed to the glob pattern matching library including `ignore` option.        |\n|           [`toType`](#totype)           |         `{String}`          |                   `undefined`                   | Determinate what is `to` option - directory, file or template.                                        |\n|            [`force`](#force)            |         `{Boolean}`         |                     `false`                     | Overwrites files already in `compilation.assets` (usually added by other plugins/loaders).            |\n|          [`flatten`](#flatten)          |         `{Boolean}`         |                     `false`                     | Removes all directory references and only copies file names.                                          |\n|        [`transform`](#transform)        |        `{Function}`         |                   `undefined`                   | Allows to modify the file contents.                                                                   |\n|   [`cacheTransform`](#cacheTransform)   | `{Boolean\\|String\\|Object}` |                     `false`                     | Enable `transform` caching. You can use `{ cache: { key: 'my-cache-key' } }` to invalidate the cache. |\n|    [`transformPath`](#transformpath)    |        `{Function}`         |                   `undefined`                   | Allows to modify the writing path.                                                                    |\n| [`noErrorOnMissing`](#noerroronmissing) |         `{Boolean}`         |                     `false`                     | Doesn't generate an error on missing file(s).                                                         |\n\n#### `from`\n\nType: `String`\nDefault: `undefined`\n\nGlob or path from where we \u0441opy files.\nGlobs accept [fast-glob pattern-syntax](https://github.com/mrmlnc/fast-glob#pattern-syntax).\nGlob can only be a `string`.\n\n> \u26a0\ufe0f Don't use directly `\\\\` in `from` option if it is a `glob` (i.e `path\\to\\file.ext`) option because on UNIX the backslash is a valid character inside a path component, i.e., it's not a separator.\n> On Windows, the forward slash and the backward slash are both separators.\n> Instead please use `/`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        'relative/path/to/file.ext',\n        'relative/path/to/dir',\n        path.resolve(__dirname, 'src', 'file.ext'),\n        path.resolve(__dirname, 'src', 'dir'),\n        '**/*',\n        {\n          from: '**/*',\n        },\n        // If absolute path is a `glob` we replace backslashes with forward slashes, because only forward slashes can be used in the `glob`\n        path.posix.join(\n          path.resolve(__dirname, 'src').replace(/\\\\/g, '/'),\n          '*.txt'\n        ),\n      ],\n    }),\n  ],\n};\n```\n\n##### `For windows`\n\nIf you define `from` as absolute file path or absolute folder path on `Windows`, you can use windows path segment (`\\\\`)\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: path.resolve(__dirname, 'file.txt'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nBut you should always use forward-slashes in `glob` expressions\nSee [fast-glob manual](https://github.com/mrmlnc/fast-glob#how-to-write-patterns-on-windows).\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          // If absolute path is a `glob` we replace backslashes with forward slashes, because only forward slashes can be used in the `glob`\n          from: path.posix.join(\n            path.resolve(__dirname, 'fixtures').replace(/\\\\/g, '/'),\n            '*.txt'\n          ),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nThe `context` behaves differently depending on what the `from` is (`glob`, `file` or `dir`).\nMore [`examples`](#examples)\n\n#### `to`\n\nType: `String`\nDefault: `compiler.options.output`\n\nOutput path.\n\n> \u26a0\ufe0f Don't use directly `\\\\` in `to` (i.e `path\\to\\dest`) option because on UNIX the backslash is a valid character inside a path component, i.e., it's not a separator.\n> On Windows, the forward slash and the backward slash are both separators.\n> Instead please use `/` or `path` methods.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: '**/*',\n          to: 'relative/path/to/dest/',\n        },\n        {\n          from: '**/*',\n          to: '/absolute/path/to/dest/',\n        },\n        {\n          from: '**/*',\n          to: '[path][name].[contenthash].[ext]',\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `context`\n\nType: `String`\nDefault: `options.context|compiler.options.context`\n\nA path that determines how to interpret the `from` path.\n\n> \u26a0\ufe0f Don't use directly `\\\\` in `context` (i.e `path\\to\\context`) option because on UNIX the backslash is a valid character inside a path component, i.e., it's not a separator.\n> On Windows, the forward slash and the backward slash are both separators.\n> Instead please use `/` or `path` methods.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.txt',\n          to: 'dest/',\n          context: 'app/',\n        },\n      ],\n    }),\n  ],\n};\n```\n\nThe `context` option can be an absolute or relative path. If `context` is a relative, then it is converted to absolute based to `compiler.options.context`\n\nAlso, `context` indicates how to interpret the search results. Further, he is considered in this role.\n\nTo determine the structure from which the found resources will be copied to the destination folder, the `context` option is used.\n\nIf `from` is a file, then `context` is equal to the directory in which this file is located. Accordingly, the result will be only the file name.\n\nIf `from` is a directory, then `context` is the same as `from` and is equal to the directory itself. In this case, the result will be a hierarchical structure of the found folders and files relative to the specified directory.\n\nIf `from` is a glob, then regardless of the `context` option, the result will be the structure specified in the `from` option\n\nMore [`examples`](#examples)\n\n#### `globOptions`\n\nType: `Object`\nDefault: `undefined`\n\nAllows to configute the glob pattern matching library used by the plugin. [See the list of supported options][glob-options]\nTo exclude files from the selection, you should use [globOptions.ignore option](https://github.com/mrmlnc/fast-glob#ignore)\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'public/**/*',\n          globOptions: {\n            dot: true,\n            gitignore: true,\n            ignore: ['**/file.*', '**/ignored-directory/**'],\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `toType`\n\nType: `String`\nDefault: `undefined`\n\nDeterminate what is `to` option - directory, file or template.\nSometimes it is hard to say what is `to`, example `path/to/dir-with.ext`.\nIf you want to copy files in directory you need use `dir` option.\nWe try to automatically determine the `type` so you most likely do not need this option.\n\n|       Name       |    Type    |   Default   | Description                                                                                        |\n| :--------------: | :--------: | :---------: | :------------------------------------------------------------------------------------------------- |\n|   **`'dir'`**    | `{String}` | `undefined` | If `to` has no extension or ends on `'/'`                                                          |\n|   **`'file'`**   | `{String}` | `undefined` | If `to` is not a directory and is not a template                                                   |\n| **`'template'`** | `{String}` | `undefined` | If `to` contains [a template pattern](https://github.com/webpack-contrib/file-loader#placeholders) |\n\n##### `'dir'`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'path/to/file.txt',\n          to: 'directory/with/extension.ext',\n          toType: 'dir',\n        },\n      ],\n    }),\n  ],\n};\n```\n\n##### `'file'`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'path/to/file.txt',\n          to: 'file/without/extension',\n          toType: 'file',\n        },\n      ],\n    }),\n  ],\n};\n```\n\n##### `'template'`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/',\n          to: 'dest/[name].[hash].[ext]',\n          toType: 'template',\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `force`\n\nType: `Boolean`\nDefault: `false`\n\nOverwrites files already in `compilation.assets` (usually added by other plugins/loaders).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/**/*',\n          to: 'dest/',\n          force: true,\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `flatten`\n\nType: `Boolean`\nDefault: `false`\n\nRemoves all directory references and only copies file names.\n\n> \u26a0\ufe0f If files have the same name, the result is non-deterministic.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/**/*',\n          to: 'dest/',\n          flatten: true,\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `transform`\n\nType: `Function`\nDefault: `undefined`\n\nAllows to modify the file contents.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          // The `content` argument is a [`Buffer`](https://nodejs.org/api/buffer.html) object, it could be converted to a `String` to be processed using `content.toString()`\n          // The `absoluteFrom` argument is a `String`, it is absolute path from where the file is being copied\n          transform(content, absoluteFrom) {\n            return optimize(content);\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return Promise.resolve(optimize(content));\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `cacheTransform`\n\nType: `Boolean|String|Object`\nDefault: `false`\n\nEnable/disable and configure caching.\nDefault path to cache directory: `node_modules/.cache/copy-webpack-plugin`.\n\n##### `Boolean`\n\nEnables/Disable `transform` caching.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return optimize(content);\n          },\n          cacheTransform: true,\n        },\n      ],\n    }),\n  ],\n};\n```\n\n##### `String`\n\nEnables `transform` caching and setup cache directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return optimize(content);\n          },\n          // Should be absolute\n          cacheTransform: path.resolve(__dirname, 'cache-directory'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\n##### `Object`\n\nEnables `transform` caching and setup cache directory and invalidation keys.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return optimize(content);\n          },\n          cacheTransform: {\n            directory: path.resolve(__dirname, 'cache-directory'),\n            keys: {\n              // May be useful for invalidating cache based on external values\n              // For example, you can invalid cache based on `process.version` - { node: process.version }\n              key: 'value',\n            },\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\nYou can setup invalidation keys using a function.\n\nSimple function:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return optimize(content);\n          },\n          cacheTransform: {\n            directory: path.resolve(__dirname, 'cache-directory'),\n            keys: (defaultCacheKeys, absoluteFrom) => {\n              const keys = getCustomCacheInvalidationKeysSync();\n\n              return {\n                ...defaultCacheKeys,\n                keys,\n              };\n            },\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\nAsync function:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transform(content, path) {\n            return optimize(content);\n          },\n          cacheTransform: {\n            directory: path.resolve(__dirname, 'cache-directory'),\n            keys: async (defaultCacheKeys, absoluteFrom) => {\n              const keys = await getCustomCacheInvalidationKeysAsync();\n\n              return {\n                ...defaultCacheKeys,\n                keys,\n              };\n            },\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n#### `transformPath`\n\nType: `Function`\nDefault: `undefined`\n\nAllows to modify the writing path.\n\n> \u26a0\ufe0f Don't return directly `\\\\` in `transformPath` (i.e `path\\to\\newFile`) option because on UNIX the backslash is a valid character inside a path component, i.e., it's not a separator.\n> On Windows, the forward slash and the backward slash are both separators.\n> Instead please use `/` or `path` methods.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transformPath(targetPath, absolutePath) {\n            return 'newPath';\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/*.png',\n          to: 'dest/',\n          transformPath(targetPath, absolutePath) {\n            return Promise.resolve('newPath');\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n### `noErrorOnMissing`\n\nType: `Boolean`\nDefault: `false`\n\nDoesn't generate an error on missing file(s);\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: path.resolve(__dirname, 'missing-file.txt'),\n          noErrorOnMissing: true,\n        },\n      ],\n    }),\n  ],\n};\n```\n\n### Options\n\n|             Name              |    Type    | Default | Description                                      |\n| :---------------------------: | :--------: | :-----: | :----------------------------------------------- |\n| [`concurrency`](#concurrency) | `{Number}` |  `100`  | Limits the number of simultaneous requests to fs |\n\n#### `concurrency`\n\nlimits the number of simultaneous requests to fs\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [...patterns],\n      options: { concurrency: 50 },\n    }),\n  ],\n};\n```\n\n### Examples\n\n#### Different variants `from` (`glob`, `file` or `dir`).\n\nTake for example the following file structure:\n\n```\nsrc/directory-nested/deep-nested/deepnested-file.txt\nsrc/directory-nested/nested-file.txt\n```\n\n##### From is a Glob\n\nEverything that you specify in `from` will be included in the result:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'src/directory-nested/**/*',\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\nsrc/directory-nested/deep-nested/deepnested-file.txt,\nsrc/directory-nested/nested-file.txt\n```\n\nIf you want only content `src/directory-nested/`, you should only indicate `glob` in `from`. The path to the folder in which the search should take place, should be moved to `context`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: '**/*',\n          context: path.resolve(__dirname, 'src', 'directory-nested'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\ndeep-nested/deepnested-file.txt,\nnested-file.txt\n```\n\n##### From is a Dir\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: path.resolve(__dirname, 'src', 'directory-nested'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\ndeep-nested/deepnested-file.txt,\nnested-file.txt\n```\n\nTechnically, this is `**/*` with a predefined context equal to the specified directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: '**/*',\n          context: path.resolve(__dirname, 'src', 'directory-nested'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\ndeep-nested/deepnested-file.txt,\nnested-file.txt\n```\n\n##### From is a File\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: path.resolve(\n            __dirname,\n            'src',\n            'directory-nested',\n            'nested-file.txt'\n          ),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\nnested-file.txt\n```\n\nTechnically, this is a filename with a predefined context equal to `path.dirname(pathToFile)`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: 'nested-file.txt',\n          context: path.resolve(__dirname, 'src', 'directory-nested'),\n        },\n      ],\n    }),\n  ],\n};\n```\n\nResult:\n\n```txt\nnested-file.txt\n```\n\n#### Ignoring files\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  plugins: [\n    new CopyPlugin({\n      patterns: [\n        {\n          from: path.posix.join(\n            path.resolve(__dirname, 'src').replace(/\\\\/g, '/'),\n            '**/*'\n          ),\n          globOptions: {\n            ignore: [\n              // Ignore all `txt` files\n              '**/*.txt',\n              // Ignore all files in all subdirectories\n              '**/subdir/**',\n            ],\n          },\n        },\n      ],\n    }),\n  ],\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/copy-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/copy-webpack-plugin\n[node]: https://img.shields.io/node/v/copy-webpack-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/copy-webpack-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/copy-webpack-plugin\n[tests]: https://github.com/webpack-contrib/copy-webpack-plugin/workflows/copy-webpack-plugin/badge.svg\n[tests-url]: https://github.com/webpack-contrib/copy-webpack-plugin/actions\n[cover]: https://codecov.io/gh/webpack-contrib/copy-webpack-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/copy-webpack-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=copy-webpack-plugin\n[size-url]: https://packagephobia.now.sh/result?p=copy-webpack-plugin\n[glob-options]: https://github.com/sindresorhus/globby#options"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 666509}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3412123}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 14874640}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 42739307}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 77455641}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 140118650}], "dependentsCount": 1780, "starsCount": 50}, "github": {"starsCount": 2432, "forksCount": 234, "subscribersCount": 25, "issues": {"count": 499, "openCount": 14, "distribution": {"3600": 138, "10800": 12, "32400": 14, "97200": 44, "291600": 27, "874800": 46, "2624400": 47, "7873200": 48, "23619600": 62, "70858800": 51, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 101}, {"username": "kevlened", "commitsCount": 78}, {"username": "d3viant0ne", "commitsCount": 20}, {"username": "cap-Bernardito", "commitsCount": 14}, {"username": "michael-ciniawsky", "commitsCount": 14}, {"username": "gajus", "commitsCount": 4}, {"username": "alan-agius4", "commitsCount": 3}, {"username": "cletusw", "commitsCount": 3}, {"username": "Munter", "commitsCount": 2}, {"username": "clydin", "commitsCount": 2}, {"username": "tommytroylin", "commitsCount": 2}, {"username": "AndersDJohnson", "commitsCount": 1}, {"username": "Deliaz", "commitsCount": 1}, {"username": "ExNG", "commitsCount": 1}, {"username": "Fetz", "commitsCount": 1}, {"username": "Jiahao01121", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "Perlmint", "commitsCount": 1}, {"username": "WinterCore", "commitsCount": 1}, {"username": "adgllorente", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "apolishch", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "esphas", "commitsCount": 1}, {"username": "filipesilva", "commitsCount": 1}, {"username": "grgur", "commitsCount": 1}, {"username": "gribnoysup", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jcfranco", "commitsCount": 1}, {"username": "jeffin143", "commitsCount": 1}, {"username": "jkrems", "commitsCount": 1}, {"username": "larsthorup", "commitsCount": 1}, {"username": "loveky", "commitsCount": 1}, {"username": "mderazon", "commitsCount": 1}, {"username": "mgcrea", "commitsCount": 1}, {"username": "mikesherov", "commitsCount": 1}, {"username": "ream88", "commitsCount": 1}, {"username": "sokra", "commitsCount": 1}, {"username": "thijstriemstra", "commitsCount": 1}, {"username": "wuct", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 39}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 53}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 66}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 22936, "testsSize": 126870, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/copy-webpack-plugin.svg", "shields": "https://img.shields.io/npm/v/copy-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/copy-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/copy-webpack-plugin.svg", "service": "https://david-dm.org/webpack-contrib/copy-webpack-plugin.svg", "shields": "https://img.shields.io/david/webpack-contrib/copy-webpack-plugin.svg", "content": "https://img.shields.io/david/webpack-contrib/copy-webpack-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9954999999999999, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 2781, "downloadsCount": 14246435.666666666, "downloadsAcceleration": 39589.25633561643, "dependentsCount": 1780}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8784736145374352, "detail": {"quality": 0.9946057734748726, "popularity": 0.6574531432560574, "maintenance": 0.9999522353010099}}}}, {"babel-plugin-transform-class-properties": {"analyzedAt": "2020-06-06T19:23:43.490Z", "collected": {"metadata": {"name": "babel-plugin-transform-class-properties", "scope": "unscoped", "version": "6.24.1", "description": "This plugin transforms static class properties as well as properties declared with the property initializer syntax", "keywords": ["babel-plugin"], "date": "2017-04-07T15:19:33.202Z", "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-class-properties", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-helper-function-name": "^6.24.1", "babel-plugin-syntax-class-properties": "^6.8.0", "babel-runtime": "^6.22.0", "babel-template": "^6.24.1"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.24.1"}, "releases": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 0}, {"from": "2018-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-plugin-transform-class-properties\n\n> This plugin transforms es2015 static class properties as well as properties declared with the es2016 property initializer syntax.\n\n## Example\n\nBelow is a class with four class properties which will be transformed.\n\n```js\n  class Bork {\n    //Property initializer syntax\n    instanceProperty = \"bork\";\n    boundFunction = () => {\n      return this.instanceProperty;\n    }\n\n    //Static class properties\n    static staticProperty = \"babelIsCool\";\n    static staticFunction = function() {\n      return Bork.staticProperty;\n    }\n  }\n\n  let myBork = new Bork;\n\n  //Property initializers are not on the prototype.\n  console.log(myBork.prototype.boundFunction); // > undefined\n\n  //Bound functions are bound to the class instance.\n  console.log(myBork.boundFunction.call(undefined)); // > \"bork\"\n\n  //Static function exists on the class.\n  console.log(Bork.staticFunction()); // > \"babelIsCool\"\n```\n\n\n## Installation\n\n```sh\nnpm install --save-dev babel-plugin-transform-class-properties\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n// without options\n{\n  \"plugins\": [\"transform-class-properties\"]\n}\n\n// with options\n{\n  \"plugins\": [\n    [\"transform-class-properties\", { \"spec\": true }]\n  ]\n}\n```\n\n### Via CLI\n\n```sh\nbabel --plugins transform-class-properties script.js\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  plugins: [\"transform-class-properties\"]\n});\n```\n\n## Options\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nClass properties are compiled to use `Object.defineProperty`. Static fields are now defined even if they are not initialized.\n\n## References\n\n* [Proposal: ES Class Fields & Static Properties](https://github.com/jeffmo/es-class-static-properties-and-fields)"}, "npm": {"downloads": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 219665}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 1276199}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 5741148}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 17855936}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 34580738}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 76153008}], "dependentsCount": 1361, "starsCount": 12}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36728, "forksCount": 4309, "subscribersCount": 866, "issues": {"count": 11607, "openCount": 777, "distribution": {"3600": 2462, "10800": 917, "32400": 1066, "97200": 1241, "291600": 1053, "874800": 1002, "2624400": 852, "7873200": 808, "23619600": 846, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 13}, {"from": "2020-05-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 59}, {"from": "2020-03-08T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 218}, {"from": "2019-12-09T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 410}, {"from": "2019-06-07T00:00:00.000Z", "to": "2020-06-06T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324664, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 42014, "downloadsCount": 5951978.666666667, "downloadsAcceleration": -8447.486263318111, "dependentsCount": 1361}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2406266636422707}}, "score": {"final": 0.6797647080514309, "detail": {"quality": 0.8881385661719261, "popularity": 0.6113452413267126, "maintenance": 0.5695780106728676}}}}, {"@types/lodash": {"analyzedAt": "2018-05-18T00:23:20.572Z", "collected": {"metadata": {"name": "@types/lodash", "scope": "types", "version": "4.14.108", "description": "TypeScript definitions for Lo-Dash", "date": "2018-04-24T23:34:41.566Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Brian Zengel", "url": "https://github.com/bczengel"}, {"name": "Ilya Mochalov", "url": "https://github.com/chrootsu"}, {"name": "Stepan Mikhaylyuk", "url": "https://github.com/stepancar"}, {"name": "AJ Richardson", "url": "https://github.com/aj-r"}, {"name": "Junyoung Clare Jang", "url": "https://github.com/ailrun"}, {"name": "e-cloud", "url": "https://github.com/e-cloud"}, {"name": "Georgii Dolzhykov", "url": "https://github.com/thorn0"}, {"name": "Jack Moore", "url": "https://github.com/jtmthf"}, {"name": "Dominique Rau", "url": "https://github.com/DomiR"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Flodash"}, "license": "MIT", "releases": [{"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 4}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 23}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 45}, {"from": "2016-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 95}], "readme": "# Installation\r\n> `npm install --save @types/lodash`\r\n\r\n# Summary\r\nThis package contains type definitions for Lo-Dash (http://lodash.com/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/lodash\r\n\r\nAdditional Details\r\n * Last updated: Tue, 24 Apr 2018 23:31:18 GMT\r\n * Dependencies: none\r\n * Global values: _\r\n\r\n# Credits\r\nThese definitions were written by Brian Zengel <https://github.com/bczengel>, Ilya Mochalov <https://github.com/chrootsu>, Stepan Mikhaylyuk <https://github.com/stepancar>, AJ Richardson <https://github.com/aj-r>, Junyoung Clare Jang <https://github.com/ailrun>, e-cloud <https://github.com/e-cloud>, Georgii Dolzhykov <https://github.com/thorn0>, Jack Moore <https://github.com/jtmthf>, Dominique Rau <https://github.com/DomiR>."}, "npm": {"downloads": [{"from": "2018-05-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 609061}, {"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 3216589}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 8883721}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 15331161}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 23715636}], "dependentsCount": 1215, "starsCount": 4}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 4, "downloadsCount": 2961240.3333333335, "downloadsAcceleration": 15611.014897260273, "dependentsCount": 1215}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-lodash-wv115xo3d7o/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-04T07:11:51.448Z"}, "score": {"final": 0.3831513673639873, "detail": {"quality": 0.398969320144589, "popularity": 0.41941115615412566, "maintenance": 0.3333333333333333}}}}, {"grunt-contrib-watch": {"analyzedAt": "2020-05-18T10:28:59.886Z", "collected": {"metadata": {"name": "grunt-contrib-watch", "scope": "unscoped", "version": "1.1.0", "description": "Run predefined tasks whenever watched file patterns are added, changed or deleted", "keywords": ["gruntplugin", "watch", "livereload"], "date": "2018-05-13T04:15:58.979Z", "author": {"name": "Grunt Team", "url": "http://gruntjs.com/"}, "publisher": {"username": "shama", "email": "kyle@dontkry.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "jmeas", "email": "jellyes2@gmail.com"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "Kyle Robinson Young", "url": "http://dontkry.com"}, {"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com"}, {"name": "Gong Hao"}, {"name": "Jaime Pillora"}, {"name": "Chris Danford"}, {"name": "Jason San Jose"}, {"name": "Oleg Seletsky"}, {"name": "Jamie Stackhouse"}, {"name": "Chris Talkington"}, {"name": "Oliver Joseph Ash"}, {"name": "Iskren Chernev"}, {"name": "Joey Baker"}, {"name": "John K. Paul"}, {"name": "Jurie-Jan Botha"}, {"name": "Micha\u0142 Go\u0142\u0119biowski"}, {"name": "Willie V"}, {"name": "cfddream"}, {"name": "Chris Wren"}, {"name": "Daniel Steigerwald"}, {"name": "Rich Trott"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt-contrib-watch.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt-contrib-watch", "homepage": "https://github.com/gruntjs/grunt-contrib-watch#readme", "repository": "https://github.com/gruntjs/grunt-contrib-watch", "bugs": "https://github.com/gruntjs/grunt-contrib-watch/issues"}, "license": "MIT", "dependencies": {"async": "^2.6.0", "gaze": "^1.1.0", "lodash": "^4.17.10", "tiny-lr": "^1.1.1"}, "devDependencies": {"grunt": "^1.0.2", "grunt-cli": "^1.2.0", "grunt-contrib-internal": "^2.0.0", "grunt-contrib-jshint": "^1.0.0", "grunt-contrib-nodeunit": "^1.0.0", "grunt-jscs": "^3.0.0", "underscore.string": "^3.2.2"}, "releases": [{"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# grunt-contrib-watch v1.1.0 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-watch.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-watch) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/olyu3uhcq59avm8v/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-watch/branch/master)\n\n> Run predefined tasks whenever watched file patterns are added, changed or deleted\n\n\n\n## Getting Started\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-watch --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-watch');\n```\n\n\n\n\n## Watch task\n_Run this task with the `grunt watch` command._\n\n\n### Settings\n\nThere are a number of options available. Please review the [minimatch options here](https://github.com/isaacs/minimatch#options). As well as some additional options as follows:\n\n#### files\nType: `String|Array`\n\nThis defines what file patterns this task will watch. It can be a string or an array of files and/or minimatch patterns.\n\n#### tasks\nType: `String|Array`\n\nThis defines which tasks to run when a watched file event occurs.\n\n#### options.spawn\nType: `Boolean`  \nDefault: `true`\n\nWhether to spawn task runs in a child process. Setting this option to `false` speeds up the reaction time of the watch (usually 500ms faster for most) and allows subsequent task runs to share the same context. Not spawning task runs can make the watch more prone to failing so please use as needed.\n\nExample:\n```js\nwatch: {\n  scripts: {\n    files: ['**/*.js'],\n    tasks: ['jshint'],\n    options: {\n      spawn: false,\n    },\n  },\n},\n```\n\n*For backwards compatibility the option `nospawn` is still available and will do the opposite of `spawn`.*\n\n#### options.interrupt\nType: `Boolean`  \nDefault: `false`\n\nAs files are modified this watch task will spawn tasks in child processes. The default behavior will only spawn a new child process per target when the previous process has finished. Set the `interrupt` option to true to terminate the previous process and spawn a new one upon later changes.\n\nExample:\n```js\nwatch: {\n  scripts: {\n    files: '**/*.js',\n    tasks: ['jshint'],\n    options: {\n      interrupt: true,\n    },\n  },\n},\n```\n\n#### options.debounceDelay\nType: `Integer`  \nDefault: `500`\n\nHow long to wait before emitting events in succession for the same filepath and status. For example if your `Gruntfile.js` file was `changed`, a `changed` event will only fire again after the given milliseconds.\n\nExample:\n```js\nwatch: {\n  scripts: {\n    files: '**/*.js',\n    tasks: ['jshint'],\n    options: {\n      debounceDelay: 250,\n    },\n  },\n},\n```\n\n#### options.interval\nType: `Integer`  \nDefault: `100`\n\nThe `interval` is passed to `fs.watchFile`. Since `interval` is only used by `fs.watchFile` and this watcher also uses `fs.watch`; it is recommended to ignore this option. *Default is 100ms*.\n\n#### options.event\nType: `String|Array`  \nDefault: `'all'`\n\nSpecify the type of watch events that triggers the specified task. This option can be one or many of: `'all'`, `'changed'`, `'added'` and `'deleted'`.\n\nExample:\n```js\nwatch: {\n  scripts: {\n    files: '**/*.js',\n    tasks: ['generateFileManifest'],\n    options: {\n      event: ['added', 'deleted'],\n    },\n  },\n},\n```\n\n#### options.reload\nType: `Boolean`  \nDefault: `false`\n\nBy default, if `Gruntfile.js` is being watched, then changes to it will trigger the watch task to restart, and reload the `Gruntfile.js` changes.\nWhen `reload` is set to `true`, changes to *any* of the watched files will trigger the watch task to restart.\nThis is especially useful if your `Gruntfile.js` is dependent on other files.\n\n```js\nwatch: {\n  configFiles: {\n    files: [ 'Gruntfile.js', 'config/*.js' ],\n    options: {\n      reload: true\n    }\n  }\n}\n```\n\n\n#### options.forever\nType: `Boolean`  \nDefault: `true`\n\nThis is *only a task level option* and cannot be configured per target. By default the watch task will duck punch `grunt.fatal` and `grunt.warn` to try and prevent them from exiting the watch process. If you don't want `grunt.fatal` and `grunt.warn` to be overridden set the `forever` option to `false`.\n\n#### options.dateFormat\nType: `Function`\n\nThis is *only a task level option* and cannot be configured per target. By default when the watch has finished running tasks it will display the message `Completed in 1.301s at Thu Jul 18 2013 14:58:21 GMT-0700 (PDT) - Waiting...`. You can override this message by supplying your own function:\n\n```js\nwatch: {\n  options: {\n    dateFormat: function(time) {\n      grunt.log.writeln('The watch finished in ' + time + 'ms at' + (new Date()).toString());\n      grunt.log.writeln('Waiting for more changes...');\n    },\n  },\n  scripts: {\n    files: '**/*.js',\n    tasks: 'jshint',\n  },\n},\n```\n\n#### options.atBegin\nType: `Boolean`  \nDefault: `false`\n\nThis option will trigger the run of each specified task at startup of the watcher.\n\n#### options.livereload\nType: `Boolean|Number|Object`  \nDefault: `false`\n\nSet to `true` or set `livereload: 1337` to a port number to enable live reloading. Default and recommended port is `35729`.\n\nIf enabled a live reload server will be started with the watch task per target. Then after the indicated tasks have run, the live reload server will be triggered with the modified files.\n\nSee also how to [enable livereload on your HTML](https://github.com/gruntjs/grunt-contrib-watch/blob/master/docs/watch-examples.md#enabling-live-reload-in-your-html).\n\nExample:\n```js\nwatch: {\n  css: {\n    files: '**/*.sass',\n    tasks: ['sass'],\n    options: {\n      livereload: true,\n    },\n  },\n},\n```\n\nPassing an object to `livereload` allows listening on a specific port and hostname/IP or over https connections (by specifying `key` and `cert` paths).\n\nExample:\n```js\nwatch: {\n  css: {\n    files: '**/*.sass',\n    tasks: ['sass'],\n    options: {\n      livereload: {\n        host: 'localhost',\n        port: 9000,\n        key: grunt.file.read('path/to/ssl.key'),\n        cert: grunt.file.read('path/to/ssl.crt')\n        // you can pass in any other options you'd like to the https server, as listed here: http://nodejs.org/api/tls.html#tls_tls_createserver_options_secureconnectionlistener\n      }\n    },\n  },\n},\n```\n\n\n#### options.cwd\nType: `String|Object`  \nDefault: `process.cwd()`\n\nAbility to set the current working directory. Defaults to `process.cwd()`. Can either be a string to set the cwd to match files and spawn tasks or an object to set each independently. Such as:\n```js\noptions: {\n  cwd: {\n    files: 'match/files/from/here',\n    spawn: 'but/spawn/files/from/here'\n  }\n}\n```\n\nTo strip off a path before emitting events:\n```js\noptions: {\n  cwd: {\n    files: 'a/path',\n    event: 'a/path'\n  }\n}\n```\nThis will strip off `a/path` before emitting events. This option is useful for specifying the base directory to use with livereload.\n\n\n#### options.livereloadOnError\nType: `Boolean`  \nDefault: `true`  \n\nOption to prevent the livereload if the executed tasks encountered an error. If set to `false`, the livereload will only be triggered if all tasks completed successfully.\n\n### Examples\n\n```js\n// Simple config to run jshint any time a file is added, changed or deleted\ngrunt.initConfig({\n  watch: {\n    files: ['**/*'],\n    tasks: ['jshint'],\n  },\n});\n```\n\n```js\n// Advanced config. Run specific tasks when specific files are added, changed or deleted.\ngrunt.initConfig({\n  watch: {\n    gruntfile: {\n      files: 'Gruntfile.js',\n      tasks: ['jshint:gruntfile'],\n    },\n    src: {\n      files: ['lib/*.js', 'css/**/*.scss', '!lib/dontwatch.js'],\n      tasks: ['default'],\n    },\n    test: {\n      files: '<%= jshint.test.src %>',\n      tasks: ['jshint:test', 'qunit'],\n    },\n  },\n});\n```\n\n#### Using the `watch` event\nThis task will emit a `watch` event when watched files are modified. This is useful if you would like a simple notification when files are edited or if you're using this task in tandem with another task. Here is a simple example using the `watch` event:\n\n```js\ngrunt.initConfig({\n  watch: {\n    scripts: {\n      files: ['lib/*.js'],\n    },\n  },\n});\ngrunt.event.on('watch', function(action, filepath, target) {\n  grunt.log.writeln(target + ': ' + filepath + ' has ' + action);\n});\n```\n\n**The `watch` event is not intended for replacing the standard Grunt API for configuring and running tasks. If you're trying to run tasks from within the `watch` event you're more than likely doing it wrong. Please read [configuring tasks](http://gruntjs.com/configuring-tasks).**\n\n##### Compiling Files As Needed\nA very common request is to only compile files as needed. Here is an example that will only lint changed files with the `jshint` task:\n\n```js\ngrunt.initConfig({\n  watch: {\n    scripts: {\n      files: ['lib/*.js'],\n      tasks: ['jshint'],\n      options: {\n        spawn: false,\n      },\n    },\n  },\n  jshint: {\n    all: {\n      src: ['lib/*.js'],\n    },\n  },\n});\n\n// On watch events configure jshint:all to only run on changed file\ngrunt.event.on('watch', function(action, filepath) {\n  grunt.config('jshint.all.src', filepath);\n});\n```\n\nIf you need to dynamically modify your config, the `spawn` option must be disabled to keep the watch running under the same context.\n\nIf you save multiple files simultaneously you may opt for a more robust method:\n\n```js\nvar changedFiles = Object.create(null);\nvar onChange = grunt.util._.debounce(function() {\n  grunt.config('jshint.all.src', Object.keys(changedFiles));\n  changedFiles = Object.create(null);\n}, 200);\ngrunt.event.on('watch', function(action, filepath) {\n  changedFiles[filepath] = action;\n  onChange();\n});\n```\n\n#### Live Reloading\nLive reloading is built into the watch task. Set the option `livereload` to `true` to enable on the default port `35729` or set to a custom port: `livereload: 1337`.\n\nThe simplest way to add live reloading to all your watch targets is by setting `livereload` to `true` at the task level. This will run a single live reload server and trigger the live reload for all your watch targets:\n\n```js\ngrunt.initConfig({\n  watch: {\n    options: {\n      livereload: true,\n    },\n    css: {\n      files: ['public/scss/*.scss'],\n      tasks: ['compass'],\n    },\n  },\n});\n```\n\nYou can also configure live reload for individual watch targets or run multiple live reload servers. Just be sure if you're starting multiple servers they operate on different ports:\n\n```js\ngrunt.initConfig({\n  watch: {\n    css: {\n      files: ['public/scss/*.scss'],\n      tasks: ['compass'],\n      options: {\n        // Start a live reload server on the default port 35729\n        livereload: true,\n      },\n    },\n    another: {\n      files: ['lib/*.js'],\n      tasks: ['anothertask'],\n      options: {\n        // Start another live reload server on port 1337\n        livereload: 1337,\n      },\n    },\n    dont: {\n      files: ['other/stuff/*'],\n      tasks: ['dostuff'],\n    },\n  },\n});\n```\n\n##### Enabling Live Reload in Your HTML\nOnce you've started a live reload server you'll be able to access the live reload script. To enable live reload on your page, add a script tag before your closing `</body>` tag pointing to the `livereload.js` script:\n\n```html\n<script src=\"//localhost:35729/livereload.js\"></script>\n```\n\nFeel free to add this script to your template situation and toggle with some sort of `dev` flag.\n\n##### Using Live Reload with the Browser Extension\nInstead of adding a script tag to your page, you can live reload your page by installing a browser extension. Please visit [how do I install and use the browser extensions](http://feedback.livereload.com/knowledgebase/articles/86242-how-do-i-install-and-use-the-browser-extensions-) for help installing an extension for your browser.\n\nOnce installed please use the default live reload port `35729` and the browser extension will automatically reload your page without needing the `<script>` tag.\n\n##### Using Connect Middleware\nSince live reloading is used when developing, you may want to disable building for production (and are not using the browser extension). One method is to use Connect middleware to inject the script tag into your page. Try the [connect-livereload](https://github.com/intesso/connect-livereload) middleware for injecting the live reload script into your page.\n\n##### Rolling Your Own Live Reload\nLive reloading is made easy by the library [tiny-lr](https://github.com/mklabs/tiny-lr). It is encouraged to read the documentation for `tiny-lr`. If you would like to trigger the live reload server yourself, simply POST files to the URL: `http://localhost:35729/changed`. Or if you rather roll your own live reload implementation use the following example:\n\n```js\n// Create a live reload server instance\nvar lrserver = require('tiny-lr')();\n\n// Listen on port 35729\nlrserver.listen(35729, function(err) { console.log('LR Server Started'); });\n\n// Then later trigger files or POST to localhost:35729/changed\nlrserver.changed({body:{files:['public/css/changed.css']}});\n```\n\n##### Live Reload with Preprocessors\nAny time a watched file is edited with the `livereload` option enabled, the file will be sent to the live reload server. Some edited files you may desire to have sent to the live reload server, such as when preprocessing (`sass`, `less`, `coffeescript`, etc). As any file not recognized will reload the entire page as opposed to just the `css` or `javascript`.\n\nThe solution is to point a `livereload` watch target to your destination files:\n\n```js\ngrunt.initConfig({\n  sass: {\n    dev: {\n      src: ['src/sass/*.sass'],\n      dest: 'dest/css/index.css',\n    },\n  },\n  watch: {\n    sass: {\n      // We watch and compile sass files as normal but don't live reload here\n      files: ['src/sass/*.sass'],\n      tasks: ['sass'],\n    },\n    livereload: {\n      // Here we watch the files the sass task will compile to\n      // These files are sent to the live reload server after sass compiles to them\n      options: { livereload: true },\n      files: ['dest/**/*'],\n    },\n  },\n});\n```\n\n### FAQs\n\n#### How do I fix the error `EMFILE: Too many opened files.`?\nThis is because of your system's max opened file limit. For OSX the default is very low (256). Temporarily increase your limit with `ulimit -n 10480`, the number being the new max limit.\n\nIn some versions of OSX the above solution doesn't work. In that case try `launchctl limit maxfiles 10480 10480 ` and restart your terminal. See [here](http://superuser.com/questions/261023/how-to-change-default-ulimit-values-in-mac-os-x-10-6).\n\n#### Can I use this with Grunt v0.3?\n`grunt-contrib-watch@0.1.x` is compatible with Grunt v0.3 but it is highly recommended to upgrade Grunt instead.\n\n#### Why is the watch devouring all my memory/cpu?\nLikely because of an enthusiastic pattern trying to watch thousands of files. Such as `'**/*.js'` but forgetting to exclude the `node_modules` folder with `'!**/node_modules/**'`. Try grouping your files within a subfolder or be more explicit with your file matching pattern.\n\nAnother reason if you're watching a large number of files could be the low default `interval`. Try increasing with `options: { interval: 5007 }`. Please see issues [#35](https://github.com/gruntjs/grunt-contrib-watch/issues/35) and [#145](https://github.com/gruntjs/grunt-contrib-watch/issues/145) for more information.\n\n#### Why spawn as child processes as a default?\nThe goal of this watch task is as files are changed, run tasks as if they were triggered by the user himself or herself. Each time a user runs `grunt` a process is spawned and tasks are ran in succession. In an effort to keep the experience consistent and continually produce expected results, this watch task spawns tasks as child processes by default.\n\nSandboxing task runs also allows this watch task to run more stable over long periods of time. As well as more efficiently with more complex tasks and file structures.\n\nSpawning does cause a performance hit (usually 500ms for most environments). It also cripples tasks that rely on the watch task to share the context with each subsequent run (i.e., reload tasks). If you would like a faster watch task or need to share the context please set the `spawn` option to `false`. Just be aware that with this option enabled, the watch task is more prone to failure.\n\n#### How can I have the browser reload for files listed in a task?\nInstead of restarting your server each time a static file is changed, start a static web server using (grunt-contrib-connect)[https://github.com/gruntjs/grunt-contrib-connect].\n\nYou'll have the `connect` web server on seperate port ex: port 9000 from your main server. When the 'livereload' option is enabled for 'watch' tasks, it will handle triggerring the live reload server for each tasks and when files are modified, which then server back to main server ex: 3000. The main server must include a script tag or a browser extension to the livereload server in order for the browser automatically.\n\n\n## Release History\n\n * 2018-05-12\u2003\u2003\u2003v1.1.0\u2003\u2003\u2003Update to `tiny-lr@1.1.1`, `lodash@4.17.10`, `async@2.6.0`\n * 2018-04-20\u2003\u2003\u2003v1.0.1\u2003\u2003\u2003Update to `gaze@1.1`, `lodash@4`\n * 2016-03-12\u2003\u2003\u2003v1.0.0\u2003\u2003\u2003Updated tiny-lr, gaze, async and lodash dependencies. Fix endless loop issue with `atBegin`/`nospawn`. Expose hostname parameter of tiny-lr. Support `cwd.event` to emit events relative to path. Removed peerDependencies setting.\n * 2014-03-19\u2003\u2003\u2003v0.6.1\u2003\u2003\u2003Fix for watch targets named \"default\".\n * 2014-03-11\u2003\u2003\u2003v0.6.0\u2003\u2003\u2003Clear changed files after triggering live reload to ensure they're only triggered once. `cwd` option now accepts separate settings for files and spawn. Fix to make interrupt work more than once. Enable live reload over HTTPS. Print newline after initial 'Waiting...'. Remove deprecated `grunt.util` libs. Add reload option to specify files other than Gruntfile files to reload. Update to gaze@0.5.1. Use a fork of tiny-lr (which has quiter operation, support for HTTPS and Windows path fixes). Add `livereloadOnError`, which if set to `false` will not trigger live reload if there is an error.\n * 2013-08-25\u2003\u2003\u2003v0.5.3\u2003\u2003\u2003Fixed for live reload missing files.\n * 2013-08-16\u2003\u2003\u2003v0.5.2\u2003\u2003\u2003Fixed issue running tasks after gruntfile is reloaded. Ignores empty file paths.\n * 2013-07-20\u2003\u2003\u2003v0.5.1\u2003\u2003\u2003Fixed issue with options resetting.\n * 2013-07-18\u2003\u2003\u2003v0.5.0\u2003\u2003\u2003Added target name to watch event. Added `atBegin` option to run tasks when watcher starts. Changed `nospawn` option to `spawn` (`nospawn` still available for backwards compatibility). Moved libs/vars into top scope to prevent re-init. Bumped Gaze version to ~0.4. Re-grab task/target options upon each task run. Add dateFormat option to override the date/time output upon completion.\n * 2013-05-27\u2003\u2003\u2003v0.4.4\u2003\u2003\u2003Remove gracefully closing SIGINT. Not needed and causes problems for Windows. Ensure tasks are an array to not conflict with `cliArgs`.\n * 2013-05-11\u2003\u2003\u2003v0.4.3\u2003\u2003\u2003Only group changed files per target to send correct files to live reload.\n * 2013-05-09\u2003\u2003\u2003v0.4.2\u2003\u2003\u2003Fix for closing watchers.\n * 2013-05-09\u2003\u2003\u2003v0.4.1\u2003\u2003\u2003Removed \"beep\" notification. Tasks now optional with livereload option. Reverted \"run again\" with interrupt off to fix infinite recursion issue. Watchers now close more properly on task run.\n * 2013-05-03\u2003\u2003\u2003v0.4.0\u2003\u2003\u2003Option `livereload` to start live reload servers. Will reload a Gruntfile before running tasks if Gruntfile is modified. Option event to only trigger watch on certain events. Refactor watch task into separate task runs per target. Option `forever` to override `grunt.fatal`/`warn` to help keeping the watch alive with `nospawn` enabled. Emit a beep upon complete. Logs all watched files with verbose flag set. If interrupt is off, will run the tasks once more if watch triggered during a previous task run. tasks property is optional for use with watch event. Watchers properly closed when exiting.\n * 2013-02-28\u2003\u2003\u2003v0.3.1\u2003\u2003\u2003Fix for top level options.\n * 2013-02-27\u2003\u2003\u2003v0.3.0\u2003\u2003\u2003`nospawn` option added to run tasks without spawning as child processes. Watch emits 'watch' events upon files being triggered with `grunt.event`. Completion time in seconds and date/time shown after tasks ran. Negate file patterns fixed. Tasks debounced individually to handle simultaneous triggering for multiple targets. Errors handled better and viewable with `--stack` CLI option. Code complexity reduced making the watch task code easier to read.\n * 2013-02-15\u2003\u2003\u2003v0.2.0\u2003\u2003\u2003First official release for Grunt 0.4.0.\n * 2013-01-18\u2003\u2003\u2003v0.2.0rc7\u2003\u2003\u2003Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09\u2003\u2003\u2003v0.2.0rc5\u2003\u2003\u2003Updating to work with grunt v0.4.0rc5.\n * 2012-12-15\u2003\u2003\u2003v0.2.0a\u2003\u2003\u2003Conversion to grunt v0.4 conventions. Remove Node.js v0.6 and grunt v0.3 support. Allow watch task to be renamed. Use `grunt.util.spawn` \"grunt\" option. Updated to gaze@0.3.0, `forceWatchMethod` option removed.\n * 2012-11-01\u2003\u2003\u2003v0.1.4\u2003\u2003\u2003Prevent watch from spawning duplicate watch tasks.\n * 2012-10-28\u2003\u2003\u2003v0.1.3\u2003\u2003\u2003Better method to spawn the grunt bin. Bump gaze to v0.2.0. Better handles some events and new option `forceWatchMethod`. Only support Node.js >= v0.8.\n * 2012-10-17\u2003\u2003\u2003v0.1.2\u2003\u2003\u2003Only spawn a process per task one at a time. Add `interrupt` option to cancel previous spawned process. Grunt v0.3 compatibility changes.\n * 2012-10-16\u2003\u2003\u2003v0.1.1\u2003\u2003\u2003Fallback to global grunt bin if local doesn't exist. Fatal if bin cannot be found. Update to gaze 0.1.6.\n * 2012-10-08\u2003\u2003\u2003v0.1.0\u2003\u2003\u2003Release watch task. Remove spawn from helper. Run on Grunt v0.4.\n\n---\n\nTask submitted by [Kyle Robinson Young](http://dontkry.com)\n\n*This file was generated on Sat May 12 2018 21:15:02.*"}, "npm": {"downloads": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 16008}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 335507}, {"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 1341062}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 4030871}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 7307614}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 15032008}], "dependentsCount": 563, "starsCount": 175}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 1997, "forksCount": 367, "subscribersCount": 60, "issues": {"count": 565, "openCount": 132, "distribution": {"3600": 100, "10800": 46, "32400": 60, "97200": 31, "291600": 34, "874800": 27, "2624400": 36, "7873200": 46, "23619600": 30, "70858800": 25, "212576400": 130}, "isDisabled": false}, "contributors": [{"username": "shama", "commitsCount": 171}, {"username": "tkellen", "commitsCount": 16}, {"username": "XhmikosR", "commitsCount": 14}, {"username": "joeybaker", "commitsCount": 5}, {"username": "timothykang", "commitsCount": 5}, {"username": "Trott", "commitsCount": 2}, {"username": "go-oleg", "commitsCount": 2}, {"username": "jpillora", "commitsCount": 2}, {"username": "sindresorhus", "commitsCount": 2}, {"username": "vladikoff", "commitsCount": 2}, {"username": "Ariel-Isaacm", "commitsCount": 1}, {"username": "CaryLandholt", "commitsCount": 1}, {"username": "ChrisWren", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "ansman", "commitsCount": 1}, {"username": "blai", "commitsCount": 1}, {"username": "cepko33", "commitsCount": 1}, {"username": "cletusw", "commitsCount": 1}, {"username": "copasetickid", "commitsCount": 1}, {"username": "ctalkington", "commitsCount": 1}, {"username": "eddiemonge", "commitsCount": 1}, {"username": "fundon", "commitsCount": 1}, {"username": "gonghao", "commitsCount": 1}, {"username": "ichernev", "commitsCount": 1}, {"username": "jakub-g", "commitsCount": 1}, {"username": "jasonsanjose", "commitsCount": 1}, {"username": "johnkpaul", "commitsCount": 1}, {"username": "jonmunson", "commitsCount": 1}, {"username": "juriejan", "commitsCount": 1}, {"username": "leobalter", "commitsCount": 1}, {"username": "manuelcabral", "commitsCount": 1}, {"username": "marcelometal", "commitsCount": 1}, {"username": "mattcollier", "commitsCount": 1}, {"username": "mgol", "commitsCount": 1}, {"username": "mrjoelkemp", "commitsCount": 1}, {"username": "nackjicholson", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "radkodinev", "commitsCount": 1}, {"username": "steida", "commitsCount": 1}], "commits": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 22375, "testsSize": 43280, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt-contrib-watch.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt-contrib-watch.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt-contrib-watch/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt-contrib-watch/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/olyu3uhcq59avm8v/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/olyu3uhcq59avm8v/branch/master", "shields": "https://img.shields.io/appveyor/ci/olyu3uhcq59avm8v/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/olyu3uhcq59avm8v/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "jscs", "jshint"], "outdatedDependencies": {"async": {"required": "^2.6.0", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.725, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 2639, "downloadsCount": 1343623.6666666667, "downloadsAcceleration": 733.1887747336386, "dependentsCount": 563}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0.011506849315068493, "openIssues": 0.943952802359882, "issuesDistribution": 0}}, "score": {"final": 0.5035814526859576, "detail": {"quality": 0.9487240105891386, "popularity": 0.448796678564926, "maintenance": 0.17681546288997696}}}}, {"less-loader": {"analyzedAt": "2020-06-11T16:18:20.267Z", "collected": {"metadata": {"name": "less-loader", "scope": "unscoped", "version": "6.1.1", "description": "A Less loader for webpack. Compiles Less to CSS.", "keywords": ["webpack", "loader", "less", "lesscss", "less.js", "css", "preprocessor"], "date": "2020-06-11T16:05:15.878Z", "author": {"name": "Johannes Ewald @jhnns"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/less-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/less-loader", "homepage": "https://github.com/webpack-contrib/less-loader", "repository": "https://github.com/webpack-contrib/less-loader", "bugs": "https://github.com/webpack-contrib/less-loader/issues"}, "license": "MIT", "dependencies": {"clone": "^2.1.2", "less": "^3.11.3", "loader-utils": "^2.0.0", "schema-utils": "^2.7.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/preset-env": "^7.10.2", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^26.0.1", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.1", "eslint": "^7.2.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.21.2", "eslint-plugin-prettier": "^3.1.3", "husky": "^4.2.5", "inspect-loader": "^1.0.0", "jest": "^26.0.1", "lint-staged": "^10.2.9", "memfs": "^3.2.0", "npm-run-all": "^4.1.5", "prettier": "^2.0.5", "standard-version": "^8.0.0", "strip-ansi": "^6.0.0", "webpack": "^4.43.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![cover][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# less-loader\n\nA Less loader for webpack. Compiles Less to CSS.\n\n## Getting Started\n\nTo begin, you'll need to install `less-loader`:\n\n```console\n$ npm install less-loader --save-dev\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        loader: 'less-loader', // compiles Less to CSS\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|                  Name                   |         Type         |         Default          | Description                                      |\n| :-------------------------------------: | :------------------: | :----------------------: | :----------------------------------------------- |\n|    **[`lessOptions`](#lessoptions)**    | `{Object\\|Function}` | `{ relativeUrls: true }` | Options for Less.                                |\n|    **[`prependData`](#prependdata)**    | `{String\\|Function}` |       `undefined`        | Prepends Less code before the actual entry file. |\n|     **[`appendData`](#appenddata)**     | `{String\\|Function}` |       `undefined`        | Prepends Less code after the actual entry file.  |\n|      **[`sourceMap`](#sourcemap)**      |     `{Boolean}`      |    `compiler.devtool`    | Enables/Disables generation of source maps.      |\n| **[`implementation`](#implementation)** |      `{Object}`      |          `less`          | Setup Less implementation to use.                |\n\n### `lessOptions`\n\nType: `Object|Function`\nDefault: `{ relativeUrls: true }`\n\nYou can pass any Less specific options to the `less-loader` through the `lessOptions` property in the [loader options](https://webpack.js.org/configuration/module/#rule-options-rule-query). See the [Less documentation](http://lesscss.org/usage/#command-line-usage-options) for all available options in dash-case. Since we're passing these options to Less programmatically, you need to pass them in camelCase here:\n\n#### `Object`\n\nUse an object to pass options through to Less.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              lessOptions: {\n                strictMath: true,\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllows setting the options passed through to Less based off of the loader context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              lessOptions: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.less') {\n                  return {\n                    paths: ['absolute/path/c', 'absolute/path/d'],\n                  };\n                }\n\n                return {\n                  paths: ['absolute/path/a', 'absolute/path/b'],\n                };\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `prependData`\n\nType: `String|Function`\nDefault: `undefined`\n\nPrepends `Less` code before the actual entry file.\n\nThis is especially useful when some of your Less variables depend on the environment:\n\n> \u2139 Since you're injecting code, this will break the source mappings in your entry file. Often there's a simpler solution than this, like multiple Less entry files.\n\n#### `String`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              prependData: `@env: ${process.env.NODE_ENV};`,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              prependData: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.less') {\n                  return '@value: 100px;';\n                }\n\n                return '@value: 200px;';\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `appendData`\n\nType: `String|Function`\nDefault: `undefined`\n\nAppendData `Less` code after the actual entry file.\n\nThis can be useful when you need to rewrite some of your Less variables.:\n\n> \u2139 Since you're injecting code, this will break the source mappings in your entry file. Often there's a simpler solution than this, like multiple Less entry files.\n\n#### `String`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              appendData: `@env: ${process.env.NODE_ENV};`,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              appendData: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.less') {\n                  return '@value: 100px;';\n                }\n\n                return '@value: 200px;';\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: depends on the `compiler.devtool` value\n\nBy default generation of source maps depends on the [`devtool`](https://webpack.js.org/configuration/devtool/) option. All values enable source map generation except `eval` and `false` value.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `implementation`\n\nType: `Object`\nDefault: `less`\n\n> \u26a0 less-loader compatible with Less version 3 only\n\nThe special `implementation` option determines which implementation of Less to use.\nThe `implementation` options either accepts `less` as a module.\nThis is useful if you want to use Less with a smaller version. Do not forget that then you must install your own version of Less.\n\nFor example, to use custom Less implementation, you'd pass:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'less-loader',\n            options: {\n              implementation: require('less'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Normal usage\n\nChain the `less-loader` with the [`css-loader`](https://github.com/webpack-contrib/css-loader) and the [`style-loader`](https://github.com/webpack-contrib/style-loader) to immediately apply all styles to the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader', // creates style nodes from JS strings\n          },\n          {\n            loader: 'css-loader', // translates CSS into CommonJS\n          },\n          {\n            loader: 'less-loader', // compiles Less to CSS\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nUnfortunately, Less doesn't map all options 1-by-1 to camelCase. When in doubt, [check their executable](https://github.com/less/less.js/blob/3.x/bin/lessc) and search for the dash-case option.\n\n### Source maps\n\nTo enable sourcemaps for CSS, you'll need to pass the `sourceMap` property in the loader's options. If this is not passed, the loader will respect the setting for webpack source maps, set in `devtool`.\n\n**webpack.config.js**\n\n```javascript\nmodule.exports = {\n  devtool: 'source-map', // any \"source-map\"-like devtool is possible\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nIf you want to edit the original Less files inside Chrome, [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). The blog post is about Sass but it also works for Less.\n\n### In production\n\nUsually, it's recommended to extract the style sheets into a dedicated file in production using the [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin). This way your styles are not dependent on JavaScript.\n\n### Imports\n\nStarting with `less-loader` 4, you can now choose between Less' builtin resolver and webpack's resolver. By default, webpack's resolver is used.\n\n#### webpack resolver\n\nwebpack provides an [advanced mechanism to resolve files](https://webpack.js.org/configuration/resolve/). The `less-loader` applies a Less plugin that passes all queries to the webpack resolver. Thus you can import your Less modules from `node_modules`. Just prepend them with a `~` which tells webpack to look up the [`modules`](https://webpack.js.org/configuration/resolve/#resolve-modules).\n\n```css\n@import '~bootstrap/less/bootstrap';\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home-directory. webpack needs to distinguish between `bootstrap` and `~bootstrap`, because CSS and Less files have no special syntax for importing relative files. Writing `@import \"file\"` is the same as `@import \"./file\";`\n\n##### Non-Less imports\n\nUsing webpack's resolver, you can import any file type. You just need a loader that exports valid Less code. Often, you will also want to set the `issuer` condition to ensure that this rule is only applied on imports originating from Less files:\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.js$/,\n        issuer: /\\.less$/,\n        use: [\n          {\n            loader: 'js-to-less-loader',\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Less resolver\n\nIf you specify the `paths` option, modules will be searched in the given `paths`. This is Less' default behavior. `paths` should be an array with absolute paths:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.less$/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n          },\n          {\n            loader: 'less-loader',\n            options: {\n              lessOptions: {\n                paths: [path.resolve(__dirname, 'node_modules')],\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Plugins\n\nIn order to use [plugins](http://lesscss.org/usage/#plugins), simply set the\n`plugins` option like this:\n\n```js\n// webpack.config.js\nconst CleanCSSPlugin = require('less-plugin-clean-css');\n\nmodule.exports = {\n  ...\n    {\n      loader: 'less-loader',\n      options: {\n        lessOptions: {\n          plugins: [\n            new CleanCSSPlugin({ advanced: true }),\n          ],\n        },\n      },\n    },\n  ...\n};\n```\n\n### Extracting style sheets\n\nBundling CSS with webpack has some nice advantages like referencing images and fonts with hashed urls or [hot module replacement](https://webpack.js.org/concepts/hot-module-replacement/) in development. In production, on the other hand, it's not a good idea to apply your style sheets depending on JS execution. Rendering may be delayed or even a [FOUC](https://en.wikipedia.org/wiki/Flash_of_unstyled_content) might be visible. Thus it's often still better to have them as separate files in your final production build.\n\nThere are two possibilities to extract a style sheet from the bundle:\n\n- [`extract-loader`](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n- [MiniCssExtractPlugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (more complex, but works in all use-cases)\n\n### CSS modules gotcha\n\nThere is a known problem with Less and [CSS modules](https://github.com/css-modules/css-modules) regarding relative file paths in `url(...)` statements. [See this issue for an explanation](https://github.com/webpack-contrib/less-loader/issues/109#issuecomment-253797335).\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/less-loader.svg\n[npm-url]: https://npmjs.com/package/less-loader\n[node]: https://img.shields.io/node/v/less-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/less-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/less-loader\n[tests]: https://github.com/webpack-contrib/less-loader/workflows/less-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/less-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/less-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/less-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=less-loader\n[size-url]: https://packagephobia.now.sh/result?p=less-loader"}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 365607}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1953988}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 8185282}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 23497334}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 42398201}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 80045254}], "dependentsCount": 3211, "starsCount": 13}, "github": {"starsCount": 816, "forksCount": 163, "subscribersCount": 18, "issues": {"count": 358, "openCount": 0, "distribution": {"3600": 76, "10800": 15, "32400": 18, "97200": 25, "291600": 17, "874800": 17, "2624400": 22, "7873200": 26, "23619600": 42, "70858800": 76, "212576400": 24}, "isDisabled": false}, "contributors": [{"username": "jhnns", "commitsCount": 96}, {"username": "sokra", "commitsCount": 40}, {"username": "cap-Bernardito", "commitsCount": 16}, {"username": "evilebottnawi", "commitsCount": 12}, {"username": "ryanclark", "commitsCount": 10}, {"username": "d3viant0ne", "commitsCount": 8}, {"username": "SpaceK33z", "commitsCount": 5}, {"username": "hasPatrickC", "commitsCount": 4}, {"username": "mistic", "commitsCount": 4}, {"username": "michael-ciniawsky", "commitsCount": 3}, {"username": "wolever", "commitsCount": 3}, {"username": "mattlewis92", "commitsCount": 2}, {"username": "mtscout6", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "sophiebits", "commitsCount": 2}, {"username": "ztamizzen", "commitsCount": 2}, {"username": "BANOnotIT", "commitsCount": 1}, {"username": "HQidea", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "adi-pjackson", "commitsCount": 1}, {"username": "amazingandyyy", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "dthielman", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "gunta", "commitsCount": 1}, {"username": "hiyuki", "commitsCount": 1}, {"username": "jakwuh", "commitsCount": 1}, {"username": "jpvanhal", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "mfellner", "commitsCount": 1}, {"username": "n1ru4l", "commitsCount": 1}, {"username": "next0", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "sliwey", "commitsCount": 1}, {"username": "spalger", "commitsCount": 1}, {"username": "thorn0", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 32}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 34}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 35}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 15279, "testsSize": 58866, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/less-loader.svg", "shields": "https://img.shields.io/npm/v/less-loader.svg", "content": "https://img.shields.io/npm/v/less-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/less-loader.svg", "service": "https://david-dm.org/webpack-contrib/less-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/less-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/less-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9954999999999999, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 1046, "downloadsCount": 7832444.666666667, "downloadsAcceleration": 17446.040734398783, "dependentsCount": 3211}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8597650881022698, "detail": {"quality": 0.9946057734748726, "popularity": 0.6040609800700435, "maintenance": 0.9998914658151222}}}}, {"redux": {"analyzedAt": "2020-06-14T08:49:03.117Z", "collected": {"metadata": {"name": "redux", "scope": "unscoped", "version": "4.0.5", "description": "Predictable state container for JavaScript apps", "keywords": ["redux", "reducer", "state", "predictable", "functional", "immutable", "hot", "live", "replay", "flux", "elm"], "date": "2019-12-24T02:23:00.903Z", "publisher": {"username": "timdorr", "email": "timdorr@timdorr.com"}, "maintainers": [{"username": "acdlite", "email": "acdlite@me.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "timdorr", "email": "timdorr@timdorr.com"}], "repository": {"type": "git", "url": "git+https://github.com/reduxjs/redux.git"}, "links": {"npm": "https://www.npmjs.com/package/redux", "homepage": "http://redux.js.org", "repository": "https://github.com/reduxjs/redux", "bugs": "https://github.com/reduxjs/redux/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.4.0", "symbol-observable": "^1.2.0"}, "devDependencies": {"@babel/cli": "^7.5.0", "@babel/core": "^7.5.4", "@babel/node": "^7.5.0", "@babel/plugin-external-helpers": "^7.2.0", "@babel/plugin-proposal-object-rest-spread": "^7.5.4", "@babel/preset-env": "^7.5.4", "@babel/preset-flow": "^7.0.0", "@babel/register": "^7.4.4", "@typescript-eslint/eslint-plugin": "^1.11.0", "@typescript-eslint/parser": "^1.11.0", "babel-core": "^7.0.0-bridge.0", "babel-eslint": "^10.0.2", "babel-jest": "^24.8.0", "cross-env": "^5.2.0", "eslint": "^5.16.0", "eslint-config-react-app": "^4.0.1", "eslint-plugin-flowtype": "^2.50.3", "eslint-plugin-import": "^2.18.0", "eslint-plugin-jsx-a11y": "^6.2.3", "eslint-plugin-react": "^7.14.2", "eslint-plugin-react-hooks": "^1.6.1", "glob": "^7.1.4", "jest": "^24.8.0", "prettier": "^1.18.2", "rimraf": "^2.6.3", "rollup": "^1.16.7", "rollup-plugin-babel": "^4.3.3", "rollup-plugin-node-resolve": "^5.2.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.1.1", "rxjs": "^6.5.2", "typescript": "^3.5.3", "typings-tester": "^0.3.2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# <a href='http://redux.js.org'><img src='https://camo.githubusercontent.com/f28b5bc7822f1b7bb28a96d8d09e7d79169248fc/687474703a2f2f692e696d6775722e636f6d2f4a65567164514d2e706e67' height='60' alt='Redux Logo' aria-label='redux.js.org' /></a>\n\nRedux is a predictable state container for JavaScript apps.  \n(Not to be confused with a WordPress framework \u2013\u00a0[Redux Framework](https://reduxframework.com/).)\n\nIt helps you write applications that behave consistently, run in different environments (client, server, and native), and are easy to test. On top of that, it provides a great developer experience, such as [live code editing combined with a time traveling debugger](https://github.com/reduxjs/redux-devtools).\n\nYou can use Redux together with [React](https://reactjs.org), or with any other view library.  \nIt is tiny (2kB, including dependencies).\n\n> **Note**: We are currently planning a rewrite of the Redux docs. Please take some time to **[fill out this survey on what content is most important in a docs site](https://docs.google.com/forms/d/e/1FAIpQLSfzIkY3fXZ8PrQKScYMK0YoEgALfAK2qQ0mOj1_ibKv2qDTuQ/viewform)**. Thanks!\n\n[![build status](https://img.shields.io/travis/reduxjs/redux/master.svg?style=flat-square)](https://travis-ci.org/reduxjs/redux)\n[![npm version](https://img.shields.io/npm/v/redux.svg?style=flat-square)](https://www.npmjs.com/package/redux)\n[![npm downloads](https://img.shields.io/npm/dm/redux.svg?style=flat-square)](https://www.npmjs.com/package/redux)\n[![redux channel on discord](https://img.shields.io/badge/discord-%23redux%20%40%20reactiflux-61dafb.svg?style=flat-square)](https://discord.gg/0ZcbPKXt5bZ6au5t)\n[![Changelog #187](https://img.shields.io/badge/changelog-%23187-lightgrey.svg?style=flat-square)](https://changelog.com/187)\n\n## Learn Redux\n\nWe have a variety of resources available to help you learn Redux, no matter what your background or learning style is.\n\n### Just the Basics\n\nIf you're brand new to Redux and want to understand the basic concepts, see:\n\n- The **[Motivation](https://redux.js.org/introduction/motivation)** behind building Redux, the **[Core Concepts](https://redux.js.org/introduction/coreconcepts)**, and the **[Three Principles](https://redux.js.org/introduction/threeprinciples)**.\n- The **[basic tutorial in the Redux docs](https://redux.js.org/basics)**\n- Redux creator Dan Abramov's **free [\"Getting Started with Redux\" video series](https://egghead.io/series/getting-started-with-redux)** on Egghead.io\n- Redux co-maintainer Mark Erikson's **[\"Redux Fundamentals\" slideshow](http://blog.isquaredsoftware.com/2018/03/presentation-reactathon-redux-fundamentals/)** and **[list of suggested resources for learning Redux](http://blog.isquaredsoftware.com/2017/12/blogged-answers-learn-redux/)**\n- If you learn best by looking at code and playing with it, check out our list of **[Redux example applications](https://redux.js.org/introduction/examples)**, available as separate projects in the Redux repo, and also as interactive online examples on CodeSandbox.\n- The **[Redux Tutorials](https://github.com/markerikson/react-redux-links/blob/master/redux-tutorials.md)** section of the **[React/Redux links list](https://github.com/markerikson/react-redux-links)**. Here's a top list of our recommended tutorials:\n  - Dave Ceddia's posts [What Does Redux Do? (and when should you use it?)](https://daveceddia.com/what-does-redux-do/) and [How Redux Works: A Counter-Example](https://daveceddia.com/how-does-redux-work/) are a great intro to the basics of Redux and how to use it with React, as is this post on [React and Redux: An Introduction](http://jakesidsmith.com/blog/post/2017-11-18-redux-and-react-an-introduction/).\n  - Valentino Gagliardi's post [React Redux Tutorial for Beginners: Learning Redux in 2018](https://www.valentinog.com/blog/react-redux-tutorial-beginners/) is an excellent extended introduction to many aspects of using Redux.\n  - The CSS Tricks article [Leveling Up with React: Redux](https://css-tricks.com/learning-react-redux/) covers the Redux basics well.\n  - This [DevGuides: Introduction to Redux](http://devguides.io/redux/) tutorial covers several aspects of Redux, including actions, reducers, usage with React, and middleware.\n\n### Intermediate Concepts\n\nOnce you've picked up the basics of working with actions, reducers, and the store, you may have questions about topics like working with asynchronous logic and AJAX requests, connecting a UI framework like React to your Redux store, and setting up an application to use Redux:\n\n- The **[\"Advanced\" docs section](https://redux.js.org/advanced)** covers working with async logic, middleware, routing.\n- The Redux docs **[\"Learning Resources\"](https://redux.js.org/introduction/learning-resources)** page points to recommended articles on a variety of Redux-related topics.\n- Sophie DeBenedetto's 8-part **[Building a Simple CRUD App with React + Redux](http://www.thegreatcodeadventure.com/building-a-simple-crud-app-with-react-redux-part-1/)** series shows how to put together a basic CRUD app from scratch.\n\n### Real-World Usage\n\nGoing from a TodoMVC app to a real production application can be a big jump, but we've got plenty of resources to help:\n\n- Redux creator Dan Abramov's **[free \"Building React Applications with Idiomatic Redux\" video series](https://egghead.io/courses/building-react-applications-with-idiomatic-redux)** builds on his first video series and covers topics like middleware, routing, and persistence.\n- The **[Redux FAQ](https://redux.js.org/faq)** answers many common questions about how to use Redux, and the **[\"Recipes\" docs section](https://redux.js.org/recipes)** has information on handling derived data, testing, structuring reducer logic, and reducing boilerplate.\n- Redux co-maintainer Mark Erikson's **[\"Practical Redux\" tutorial series](http://blog.isquaredsoftware.com/series/practical-redux/)** demonstrates real-world intermediate and advanced techniques for working with React and Redux (also available as **[an interactive course on Educative.io](https://www.educative.io/collection/5687753853370368/5707702298738688)**).\n- The **[React/Redux links list](https://github.com/markerikson/react-redux-links)** has categorized articles on working with [reducers and selectors](https://github.com/markerikson/react-redux-links/blob/master/redux-reducers-selectors.md), [managing side effects](https://github.com/markerikson/react-redux-links/blob/master/redux-side-effects.md), [Redux architecture and best practices](https://github.com/markerikson/react-redux-links/blob/master/redux-architecture.md), and more.\n- Our community has created thousands of Redux-related libraries, addons, and tools. The **[\"Ecosystem\" docs page](https://redux.js.org/introduction/ecosystem)** lists our recommendations, and there's a complete listing available in the **[Redux addons catalog](https://github.com/markerikson/redux-ecosystem-links)**.\n- If you're looking to learn from actual application codebases, the addons catalog also has a list of **[purpose-built examples and real-world applications](https://github.com/markerikson/redux-ecosystem-links/blob/master/apps-and-examples.md)**.\n\nFinally, Mark Erikson is teaching a series of **[Redux workshops through Workshop.me](#redux-workshops)**. Check the [workshop schedule](https://workshop.me/?a=mark) for upcoming dates and locations.\n\n### Help and Discussion\n\nThe **[#redux channel](https://discord.gg/0ZcbPKXt5bZ6au5t)** of the **[Reactiflux Discord community](http://www.reactiflux.com)** is our official resource for all questions related to learning and using Redux. Reactiflux is a great place to hang out, ask questions, and learn - come join us!\n\n## Before Proceeding Further\n\nRedux is a valuable tool for organizing your state, but you should also consider whether it's appropriate for your situation. Don't use Redux just because someone said you should - take some time to understand the potential benefits and tradeoffs of using it.\n\nHere are some suggestions on when it makes sense to use Redux:\n\n- You have reasonable amounts of data changing over time\n- You need a single source of truth for your state\n- You find that keeping all your state in a top-level component is no longer sufficient\n\nYes, these guidelines are subjective and vague, but this is for good reason. The point at which you should integrate Redux into your application is different for every user and different for every application.\n\n> **For more thoughts on how Redux is meant to be used, see:**<br>\n>\n> - **[You Might Not Need Redux](https://medium.com/@dan_abramov/you-might-not-need-redux-be46360cf367)**<br>\n> - **[The Tao of Redux, Part 1 - Implementation and Intent](http://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-1/)**<br>\n> - **[The Tao of Redux, Part 2 - Practice and Philosophy](http://blog.isquaredsoftware.com/2017/05/idiomatic-redux-tao-of-redux-part-2/)**\n> - **[Redux FAQ](https://redux.js.org/faq)**\n\n## Developer Experience\n\nDan Abramov (author of Redux) wrote Redux while working on his React Europe talk called [\u201cHot Reloading with Time Travel\u201d](https://www.youtube.com/watch?v=xsSnOQynTHs). His goal was to create a state management library with a minimal API but completely predictable behavior. Redux makes it possible to implement logging, hot reloading, time travel, universal apps, record and replay, without any buy-in from the developer.\n\n## Influences\n\nRedux evolves the ideas of [Flux](http://facebook.github.io/flux/), but avoids its complexity by taking cues from [Elm](https://github.com/evancz/elm-architecture-tutorial/).  \nEven if you haven't used Flux or Elm, Redux only takes a few minutes to get started with.\n\n## Installation\n\nTo install the stable version:\n\n```sh\nnpm install --save redux\n```\n\nThis assumes you are using [npm](https://www.npmjs.com/) as your package manager.\n\nIf you're not, you can [access these files on unpkg](https://unpkg.com/redux/), download them, or point your package manager to them.\n\nMost commonly, people consume Redux as a collection of [CommonJS](https://github.com/webpack/docs/wiki/commonjs) modules. These modules are what you get when you import `redux` in a [Webpack](https://webpack.js.org/), [Browserify](http://browserify.org/), or a Node environment. If you like to live on the edge and use [Rollup](https://rollupjs.org), we support that as well.\n\nIf you don't use a module bundler, it's also fine. The `redux` npm package includes precompiled production and development [UMD](https://github.com/umdjs/umd) builds in the [`dist` folder](https://unpkg.com/redux/dist/). They can be used directly without a bundler and are thus compatible with many popular JavaScript module loaders and environments. For example, you can drop a UMD build as a [`<script>` tag](https://unpkg.com/redux/dist/redux.js) on the page, or [tell Bower to install it](https://github.com/reduxjs/redux/pull/1181#issuecomment-167361975). The UMD builds make Redux available as a `window.Redux` global variable.\n\nThe Redux source code is written in ES2015 but we precompile both CommonJS and UMD builds to ES5 so they work in [any modern browser](http://caniuse.com/#feat=es5). You don't need to use Babel or a module bundler to [get started with Redux](https://github.com/reduxjs/redux/blob/master/examples/counter-vanilla/index.html). You can even use the ES module build that's available at [`es/redux.mjs`](https://unpkg.com/redux/es/) which can be referenced using `type=\"module\"` in your `script` tag or as a standard `import`.\n\n### Complementary Packages\n\nMost likely, you'll also need [the React bindings](https://github.com/reduxjs/react-redux) and [the developer tools](https://github.com/reduxjs/redux-devtools).\n\n```sh\nnpm install --save react-redux\nnpm install --save-dev redux-devtools\n```\n\nNote that unlike Redux itself, many packages in the Redux ecosystem don't provide UMD builds, so we recommend using CommonJS module bundlers like [Webpack](https://webpack.js.org/) and [Browserify](http://browserify.org/) for the most comfortable development experience.\n\n## The Gist\n\nThe whole state of your app is stored in an object tree inside a single _store_.  \nThe only way to change the state tree is to emit an _action_, an object describing what happened.  \nTo specify how the actions transform the state tree, you write pure _reducers_.\n\nThat's it!\n\n```js\nimport { createStore } from 'redux'\n\n/**\n * This is a reducer, a pure function with (state, action) => state signature.\n * It describes how an action transforms the state into the next state.\n *\n * The shape of the state is up to you: it can be a primitive, an array, an object,\n * or even an Immutable.js data structure. The only important part is that you should\n * not mutate the state object, but return a new object if the state changes.\n *\n * In this example, we use a `switch` statement and strings, but you can use a helper that\n * follows a different convention (such as function maps) if it makes sense for your\n * project.\n */\nfunction counter(state = 0, action) {\n  switch (action.type) {\n    case 'INCREMENT':\n      return state + 1\n    case 'DECREMENT':\n      return state - 1\n    default:\n      return state\n  }\n}\n\n// Create a Redux store holding the state of your app.\n// Its API is { subscribe, dispatch, getState }.\nlet store = createStore(counter)\n\n// You can use subscribe() to update the UI in response to state changes.\n// Normally you'd use a view binding library (e.g. React Redux) rather than subscribe() directly.\n// However it can also be handy to persist the current state in the localStorage.\n\nstore.subscribe(() => console.log(store.getState()))\n\n// The only way to mutate the internal state is to dispatch an action.\n// The actions can be serialized, logged or stored and later replayed.\nstore.dispatch({ type: 'INCREMENT' })\n// 1\nstore.dispatch({ type: 'INCREMENT' })\n// 2\nstore.dispatch({ type: 'DECREMENT' })\n// 1\n```\n\nInstead of mutating the state directly, you specify the mutations you want to happen with plain objects called _actions_. Then you write a special function called a _reducer_ to decide how every action transforms the entire application's state.\n\nIf you're coming from Flux, there is a single important difference you need to understand. Redux doesn't have a Dispatcher or support many stores. Instead, there is just a single store with a single root reducing function. As your app grows, instead of adding stores, you split the root reducer into smaller reducers independently operating on the different parts of the state tree. This is exactly like how there is just one root component in a React app, but it is composed out of many small components.\n\nThis architecture might seem like an overkill for a counter app, but the beauty of this pattern is how well it scales to large and complex apps. It also enables very powerful developer tools, because it is possible to trace every mutation to the action that caused it. You can record user sessions and reproduce them just by replaying every action.\n\n## Learn Redux from Its Authors\n\n### Redux Video Tutorials by Dan Abramov\n\n#### Getting Started with Redux\n\n**[Getting Started with Redux](https://egghead.io/series/getting-started-with-redux)** is a video course consisting of 30 videos narrated by [Dan Abramov](https://twitter.com/dan_abramov), author of Redux. It is designed to complement the \u201cBasics\u201d part of the docs while bringing additional insights about immutability, testing, Redux best practices, and using Redux with React. **This course is free and will always be.**\n\n> [\u201cGreat course on egghead.io by @dan_abramov - instead of just showing you how to use #redux, it also shows how and why redux was built!\u201d](https://twitter.com/sandrinodm/status/670548531422326785)  \n> Sandrino Di Mattia\n\n> [\u201cPlowing through @dan_abramov 'Getting Started with Redux' - its amazing how much simpler concepts get with video.\u201d](https://twitter.com/chrisdhanaraj/status/670328025553219584)  \n> Chris Dhanaraj\n\n> [\u201cThis video series on Redux by @dan_abramov on @eggheadio is spectacular!\u201d](https://twitter.com/eddiezane/status/670333133242408960)  \n> Eddie Zaneski\n\n> [\u201cCome for the name hype. Stay for the rock solid fundamentals. (Thanks, and great job @dan_abramov and @eggheadio!)\u201d](https://twitter.com/danott/status/669909126554607617)  \n> Dan\n\n> [\u201cThis series of videos on Redux by @dan_abramov is repeatedly blowing my mind - gunna do some serious refactoring\u201d](https://twitter.com/gelatindesign/status/669658358643892224)  \n> Laurence Roberts\n\nSo, what are you waiting for?\n\n#### [Watch the free \"Getting Started with Redux\" video series](https://egghead.io/series/getting-started-with-redux)\n\n> Note: If you enjoyed Dan's course, consider supporting Egghead by [buying a subscription](https://egghead.io/pricing). Subscribers have access to the source code of every example in my videos and tons of advanced lessons on other topics, including JavaScript in depth, React, Angular, and more. Many [Egghead instructors](https://egghead.io/instructors) are also open source library authors, so buying a subscription is a nice way to thank them for the work that they've done.\n\n#### Building React Applications with Idiomatic Redux\n\nThe **[Building React Applications with Idiomatic Redux](https://egghead.io/courses/building-react-applications-with-idiomatic-redux)** course is a second free video series by Dan Abramov. It picks up where the first series left off, and covers practical production ready techniques for building your React and Redux applications: advanced state management, middleware, React Router integration, and other common problems you are likely to encounter while building applications for your clients and customers. As with the first series, **this course will always be free**.\n\n#### [Watch the free \"Idiomatic Redux\" video series](https://egghead.io/courses/building-react-applications-with-idiomatic-redux)\n\n### Practical Redux course\n\n**[Practical Redux](https://www.educative.io/collection/5687753853370368/5707702298738688/)** is a paid interactive course by Redux co-maintainer [Mark Erikson](https://twitter.com/acemarke). The course is designed to show how to apply the basic concepts of Redux to building something larger than a TodoMVC application. It includes real-world topics like:\n\n- Adding Redux to a new Create-React-App project and configuring Hot Module Replacement for faster development\n- Controlling your UI behavior with Redux\n- Using the Redux-ORM library to manage relational data in your Redux store\n- Building a master/detail view to display and edit data\n- Writing custom advanced Redux reducer logic to solve specific problems\n- Optimizing performance of Redux-connected form inputs\n\nAnd much more!\n\nThe course is based on Mark's original free **[\"Practical Redux\" blog tutorial series](http://blog.isquaredsoftware.com/series/practical-redux/)**, but with updated and improved content.\n\n### Redux Fundamentals Workshop\n\nRedux co-maintainer [Mark Erikson](https://twitter.com/acemarke) has put together a [**Redux Fundamentals workshop**, and slides are available here](https://blog.isquaredsoftware.com/2018/06/redux-fundamentals-workshop-slides/). They cover:\n\n- The history and purpose of Redux\n- Reducers and actions, and working with a Redux store\n- Using Redux with React\n- Using and writing Redux middleware\n- Working with AJAX calls and other side effects\n- Unit testing Redux apps\n- Real-world Redux app structure and development\n\n## Documentation\n\n- [Introduction](http://redux.js.org/introduction)\n- [Basics](http://redux.js.org/basics)\n- [Advanced](http://redux.js.org/advanced)\n- [Recipes](http://redux.js.org/recipes)\n- [FAQ](http://redux.js.org/faq)\n- [Troubleshooting](http://redux.js.org/troubleshooting)\n- [Glossary](http://redux.js.org/glossary)\n- [API Reference](http://redux.js.org/api)\n\nFor PDF, ePub, and MOBI exports for offline reading, and instructions on how to create them, please see: [paulkogel/redux-offline-docs](https://github.com/paulkogel/redux-offline-docs).\n\nFor Offline docs, please see: [devdocs](http://devdocs.io/redux/)\n\n## Examples\n\nAlmost all examples have a corresponding CodeSandbox sandbox. This is an interactive version of the code that you can play with online.\n\n- [**Counter Vanilla**](https://redux.js.org/introduction/examples#counter-vanilla): [Source](https://github.com/reduxjs/redux/tree/master/examples/counter-vanilla)\n- [**Counter**](https://redux.js.org/introduction/examples#counter): [Source](https://github.com/reduxjs/redux/tree/master/examples/counter) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/counter)\n- [**Todos**](https://redux.js.org/introduction/examples#todos): [Source](https://github.com/reduxjs/redux/tree/master/examples/todos) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/todos)\n- [**Todos with Undo**](https://redux.js.org/introduction/examples#todos-with-undo): [Source](https://github.com/reduxjs/redux/tree/master/examples/todos-with-undo) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/todos-with-undo)\n- [**Todos w/ Flow**](https://redux.js.org/introduction/examples#todos-flow): [Source](https://github.com/reduxjs/redux/tree/master/examples/todos-flow)\n- [**TodoMVC**](https://redux.js.org/introduction/examples#todomvc): [Source](https://github.com/reduxjs/redux/tree/master/examples/todomvc) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/todomvc)\n- [**Shopping Cart**](https://redux.js.org/introduction/examples#shopping-cart): [Source](https://github.com/reduxjs/redux/tree/master/examples/shopping-cart) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/shopping-cart)\n- [**Tree View**](https://redux.js.org/introduction/examples#tree-view): [Source](https://github.com/reduxjs/redux/tree/master/examples/tree-view) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/tree-view)\n- [**Async**](https://redux.js.org/introduction/examples#async): [Source](https://github.com/reduxjs/redux/tree/master/examples/async) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/async)\n- [**Universal**](https://redux.js.org/introduction/examples#universal): [Source](https://github.com/reduxjs/redux/tree/master/examples/universal)\n- [**Real World**](https://redux.js.org/introduction/examples#real-world): [Source](https://github.com/reduxjs/redux/tree/master/examples/real-world) | [Sandbox](https://codesandbox.io/s/github/reduxjs/redux/tree/master/examples/real-world)\n\nIf you're new to the NPM ecosystem and have troubles getting a project up and running, or aren't sure where to paste the gist above, check out [simplest-redux-example](https://github.com/jackielii/simplest-redux-example) that uses Redux together with React and Browserify.\n\n## Testimonials\n\n> [\u201cLove what you're doing with Redux\u201d](https://twitter.com/jingc/status/616608251463909376)  \n> Jing Chen, creator of Flux\n\n> [\u201cI asked for comments on Redux in FB's internal JS discussion group, and it was universally praised. Really awesome work.\u201d](https://twitter.com/fisherwebdev/status/616286955693682688)  \n> Bill Fisher, author of Flux documentation\n\n> [\u201cIt's cool that you are inventing a better Flux by not doing Flux at all.\u201d](https://twitter.com/andrestaltz/status/616271392930201604)  \n> Andr\u00e9 Staltz, creator of Cycle\n\n## Thanks\n\n- [The Elm Architecture](https://github.com/evancz/elm-architecture-tutorial) for a great intro to modeling state updates with reducers;\n- [Turning the database inside-out](https://www.confluent.io/blog/turning-the-database-inside-out-with-apache-samza/) for blowing my mind;\n- [Developing ClojureScript with Figwheel](https://www.youtube.com/watch?v=j-kj2qwJa_E) for convincing me that re-evaluation should \u201cjust work\u201d;\n- [Webpack](https://webpack.js.org/concepts/hot-module-replacement/) for Hot Module Replacement;\n- [Flummox](https://github.com/acdlite/flummox) for teaching me to approach Flux without boilerplate or singletons;\n- [disto](https://github.com/threepointone/disto) for a proof of concept of hot reloadable Stores;\n- [NuclearJS](https://github.com/optimizely/nuclear-js) for proving this architecture can be performant;\n- [Om](https://github.com/omcljs/om) for popularizing the idea of a single state atom;\n- [Cycle](https://github.com/cyclejs/cycle-core) for showing how often a function is the best tool;\n- [React](https://github.com/facebook/react) for the pragmatic innovation.\n\nSpecial thanks to [Jamie Paton](http://jdpaton.github.io) for handing over the `redux` NPM package name.\n\n## Logo\n\nYou can find the official logo [on GitHub](https://github.com/reduxjs/redux/tree/master/logo).\n\n## Change Log\n\nThis project adheres to [Semantic Versioning](http://semver.org/).  \nEvery release, along with the migration instructions, is documented on the GitHub [Releases](https://github.com/reduxjs/redux/releases) page.\n\n## Patrons\n\nThe work on Redux was [funded by the community](https://www.patreon.com/reactdx).  \nMeet some of the outstanding companies that made it possible:\n\n- [Webflow](https://github.com/webflow)\n- [Ximedes](https://www.ximedes.com/)\n\n[See the full list of Redux patrons](PATRONS.md), as well as the always-growing list of [people and companies that use Redux](https://github.com/reduxjs/redux/issues/310).\n\n## License\n\n[MIT](LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 176722}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4742884}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 20143967}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 62549594}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 111522311}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 199827307}], "dependentsCount": 8038, "starsCount": 248}, "github": {"homepage": "https://redux.js.org", "starsCount": 53491, "forksCount": 14057, "subscribersCount": 1469, "issues": {"count": 3759, "openCount": 46, "distribution": {"3600": 1162, "10800": 507, "32400": 632, "97200": 439, "291600": 267, "874800": 210, "2624400": 194, "7873200": 146, "23619600": 112, "70858800": 80, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 618}, {"username": "timdorr", "commitsCount": 167}, {"username": "markerikson", "commitsCount": 117}, {"username": "cellog", "commitsCount": 42}, {"username": "ellbee", "commitsCount": 39}, {"username": "acdlite", "commitsCount": 32}, {"username": "emmenko", "commitsCount": 25}, {"username": "omnidan", "commitsCount": 23}, {"username": "mindjuice", "commitsCount": 22}, {"username": "chentsulin", "commitsCount": 21}, {"username": "hedgerh", "commitsCount": 21}, {"username": "aikoven", "commitsCount": 16}, {"username": "maxhallinan", "commitsCount": 13}, {"username": "mikekidder", "commitsCount": 13}, {"username": "Andarist", "commitsCount": 9}, {"username": "coryhouse", "commitsCount": 9}, {"username": "frankychung", "commitsCount": 9}, {"username": "ChrisJamesC", "commitsCount": 8}, {"username": "vramana", "commitsCount": 8}, {"username": "CodinCat", "commitsCount": 7}, {"username": "danmartinez101", "commitsCount": 7}, {"username": "davezuko", "commitsCount": 7}, {"username": "ghengeveld", "commitsCount": 7}, {"username": "knowbody", "commitsCount": 7}, {"username": "webpro", "commitsCount": 7}, {"username": "Igorbek", "commitsCount": 6}, {"username": "danmaz74", "commitsCount": 6}, {"username": "dariocravero", "commitsCount": 6}, {"username": "mjethani", "commitsCount": 6}, {"username": "nickmccurdy", "commitsCount": 6}, {"username": "pierrickouw", "commitsCount": 6}, {"username": "tonyspiro", "commitsCount": 6}, {"username": "urbanvikingr", "commitsCount": 6}, {"username": "vslinko", "commitsCount": 6}, {"username": "JamieDixon", "commitsCount": 5}, {"username": "camsong", "commitsCount": 5}, {"username": "johanneslumpe", "commitsCount": 5}, {"username": "just-boris", "commitsCount": 5}, {"username": "michaelwilcox", "commitsCount": 5}, {"username": "moroshko", "commitsCount": 5}, {"username": "pedrottimark", "commitsCount": 5}, {"username": "sbakkila", "commitsCount": 5}, {"username": "Bjvanminnen", "commitsCount": 4}, {"username": "JoeCortopassi", "commitsCount": 4}, {"username": "aaronjensen", "commitsCount": 4}, {"username": "aweary", "commitsCount": 4}, {"username": "erweixin", "commitsCount": 4}, {"username": "gcanti", "commitsCount": 4}, {"username": "kolodny", "commitsCount": 4}, {"username": "ooflorent", "commitsCount": 4}, {"username": "rwillrich", "commitsCount": 4}, {"username": "slorber", "commitsCount": 4}, {"username": "SamyPesse", "commitsCount": 3}, {"username": "SimenB", "commitsCount": 3}, {"username": "TrySound", "commitsCount": 3}, {"username": "benlesh", "commitsCount": 3}, {"username": "brigand", "commitsCount": 3}, {"username": "dbrans", "commitsCount": 3}, {"username": "djhojd", "commitsCount": 3}, {"username": "fshowalter", "commitsCount": 3}, {"username": "gbezyuk", "commitsCount": 3}, {"username": "glifchits", "commitsCount": 3}, {"username": "jridgewell", "commitsCount": 3}, {"username": "jzlxiaohei", "commitsCount": 3}, {"username": "kmerhi", "commitsCount": 3}, {"username": "krawaller", "commitsCount": 3}, {"username": "markfinger", "commitsCount": 3}, {"username": "matiasleidemer", "commitsCount": 3}, {"username": "matthew-gerstman", "commitsCount": 3}, {"username": "michalkvasnicak", "commitsCount": 3}, {"username": "moismat", "commitsCount": 3}, {"username": "muhajirdev", "commitsCount": 3}, {"username": "nielsbom", "commitsCount": 3}, {"username": "numb86", "commitsCount": 3}, {"username": "quicksnap", "commitsCount": 3}, {"username": "raunofreiberg", "commitsCount": 3}, {"username": "ream88", "commitsCount": 3}, {"username": "stoikerty", "commitsCount": 3}, {"username": "sveinpg", "commitsCount": 3}, {"username": "tappleby", "commitsCount": 3}, {"username": "voter101", "commitsCount": 3}, {"username": "wbreakell", "commitsCount": 3}, {"username": "wmertens", "commitsCount": 3}, {"username": "xphong", "commitsCount": 3}, {"username": "Alexsey", "commitsCount": 2}, {"username": "ChrisAckerman", "commitsCount": 2}, {"username": "OliverJAsh", "commitsCount": 2}, {"username": "chrisself", "commitsCount": 2}, {"username": "colesimmons", "commitsCount": 2}, {"username": "douglasnaphas", "commitsCount": 2}, {"username": "frank-yoon", "commitsCount": 2}, {"username": "haveyaseen", "commitsCount": 2}, {"username": "ivandevp", "commitsCount": 2}, {"username": "jedmao", "commitsCount": 2}, {"username": "joshburgess", "commitsCount": 2}, {"username": "lex111", "commitsCount": 2}, {"username": "r3dm1ke", "commitsCount": 2}, {"username": "resource11", "commitsCount": 2}, {"username": "wgao19", "commitsCount": 2}, {"username": "yangshun", "commitsCount": 2}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 19}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 55}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 172}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 25484, "testsSize": 126004, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/reduxjs/redux/master.svg?style=flat-square", "service": "https://api.travis-ci.org/reduxjs/redux.svg?branch=master", "shields": "https://img.shields.io/travis/reduxjs/redux/master.svg", "content": "https://img.shields.io/travis/reduxjs/redux/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/redux.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/redux.svg", "content": "https://img.shields.io/npm/v/redux.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/redux.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/redux.svg", "content": "https://img.shields.io/npm/dm/redux.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 69365, "downloadsCount": 20849864.666666668, "downloadsAcceleration": 49022.45329147641, "dependentsCount": 8038}, "maintenance": {"releasesFrequency": 0.6352739726027398, "commitsFrequency": 0.9670479452054794, "openIssues": 1, "issuesDistribution": 0.884748531446606}}, "score": {"final": 0.943420777909129, "detail": {"quality": 0.9798202880076723, "popularity": 0.8595895364159772, "maintenance": 0.9960524393178154}}}}, {"karma-mocha": {"analyzedAt": "2020-06-07T23:22:26.294Z", "collected": {"metadata": {"name": "karma-mocha", "scope": "unscoped", "version": "2.0.1", "description": "A Karma plugin. Adapter for Mocha testing framework.", "keywords": ["karma-plugin", "karma-adapter", "mocha"], "date": "2020-04-29T14:38:36.900Z", "author": {"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, {"username": "maksimr", "email": "rv.maksim@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "Maksim Ryzhikov", "email": "rv.maksim@gmail.com"}, {"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "dignifiedquire", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "Jordan Klassen", "email": "jordan@vidigami.com"}, {"name": "Martin Hansen", "email": "martin@martinhansen.no"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Dave Geddes", "email": "davidcgeddes@gmail.com"}, {"name": "Aliaksei Shytkin", "email": "e79eas@gmail.com"}, {"name": "Pawel Kozlowski", "email": "pkozlowski.opensource@gmail.com"}, {"name": "Christopher Hiller", "email": "boneskull@boneskull.com"}, {"name": "Lukasz Bandzarewicz", "email": "lucassus@gmail.com"}, {"name": "Jonathan Knapp", "email": "jon@coffeeandcode.com"}, {"name": "Karolis Narkevicius", "email": "karolis.n@gmail.com"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Peter Halliday", "email": "pghalliday@gmail.com"}, {"name": "Raphael Luba", "email": "raphael@leanbyte.com"}, {"name": "Sahat Yalkabov", "email": "sakhat@gmail.com"}, {"name": "Tim Macfarlane", "email": "timmacfarlane@gmail.com"}, {"name": "Vova Bilonenko", "email": "bilonenko.v@gmail.com"}, {"name": "dej611", "email": "marco@terraling.com"}, {"name": "eiriksm", "email": "eirik@morland.no"}, {"name": "patrick kettner", "email": "patrickkettner@gmail.com"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "Christian Schlensker", "email": "christian@cswebartisan.com"}, {"name": "Christian Schulze", "email": "christian.schulze@mywave.me"}, {"name": "Ciro S. Costa", "email": "ciro.costa@usp.br"}, {"name": "Dan Thareja", "email": "danthareja@gmail.com"}, {"name": "Darryl Pogue", "email": "darryl@dpogue.ca"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "JONATHAN PARK", "email": "jonathan@silvenstudios.com"}, {"name": "James Morris", "email": "jamie@maloric.com"}, {"name": "Jason Divock", "email": "jdivock@gmail.com"}, {"name": "Jeff Jagoda", "email": "jeffrey.jagoda@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-mocha.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-mocha", "homepage": "https://github.com/karma-runner/karma-mocha#readme", "repository": "https://github.com/karma-runner/karma-mocha", "bugs": "https://github.com/karma-runner/karma-mocha/issues"}, "license": "MIT", "dependencies": {"minimist": "^1.2.3"}, "devDependencies": {"chai": "^3.4.1", "eslint": "^4.18.2", "eslint-config-standard": "^5.1.0", "eslint-plugin-promise": "^1.0.8", "eslint-plugin-react": "^5.2.2", "eslint-plugin-standard": "^1.3.2", "grunt": "~1.0", "grunt-auto-release": "~0.0.2", "grunt-bump": "~0.8.0", "grunt-conventional-changelog": "^6.0.1", "grunt-eslint": "^18.0.0", "grunt-karma": "2.x", "grunt-npm": "~0.0.2", "karma": "^1.0.0", "karma-chai": "^0.1.0", "karma-chrome-launcher": "^1.0.0", "karma-firefox-launcher": "^1.0.0", "karma-sinon": "^1.0.3", "load-grunt-tasks": "^3.2.0", "mocha": "^3.0.0", "mock-fs": "^4.10.1", "shared-karma-files": "git://github.com/karma-runner/shared-karma-files.git#82ae8d02", "sinon": "^1.17.2", "@semantic-release/changelog": "^3.0.6", "@semantic-release/git": "^7.0.18", "semantic-release": "^15.14.0", "@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "husky": "^4.0.3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# karma-mocha\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-mocha)\n [![npm version](https://img.shields.io/npm/v/karma-mocha.svg?style=flat-square)](https://www.npmjs.com/package/karma-mocha) [![npm downloads](https://img.shields.io/npm/dm/karma-mocha.svg?style=flat-square)](https://www.npmjs.com/package/karma-mocha)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-mocha/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-mocha) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-mocha.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-mocha) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-mocha.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-mocha#info=devDependencies)\n\n> Adapter for the [Mocha](http://mochajs.org/) testing framework.\n\n## Installation\n\nInstall `karma-mocha` and `mocha` into to your project via `npm`:\n\n```shell\n$ npm install karma-mocha mocha --save-dev\n```\n\n`karma-mocha` should work with any version of `mocha`.\n\nSince `karma-mocha` is an adapter for [Karma](http://karma-runner.github.io), you likely have it installed already, but in case you don't:  \n\n```shell\n$ npm install karma --save-dev\n```\n\nIf you're having trouble, Karma provides [detailed instructions](http://karma-runner.github.io/1.0/intro/installation.html) on installation. \n\n## Configuration\nFollowing code shows the default configuration...\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['mocha'],\n\n    files: [\n      '*.js'\n    ]\n  });\n};\n```\n\nIf you want to pass configuration options directly to mocha you can\ndo this in the following way\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    frameworks: ['mocha'],\n\n    files: [\n      '*.js'\n    ],\n\n    client: {\n      mocha: {\n        // change Karma's debug.html to the mocha web reporter\n        reporter: 'html',\n\n        // require specific files after Mocha is initialized\n        require: [require.resolve('bdd-lazy-var/bdd_lazy_var_global')],\n\n        // custom ui, defined in required file above\n        ui: 'bdd-lazy-var/global',\n      }\n    }\n  });\n};\n```\n\nIf you want run only some tests matching a given pattern you can\ndo this in the following way\n\n```sh\nkarma start &\nkarma run -- --grep=<pattern>\n```\n\nor\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        grep: '<pattern>', // passed directly to mocha\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\nIf you want to expose test properties specific to `mocha`, you can use the `expose` option:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        expose: ['body'] // This will be exposed in a reporter as `result.mocha.body`\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\nIf you already have a configuration for Mocha in an opts file, you can use the `opts` option:\n\n```js\nmodule.exports = function(config) {\n  config.set({\n    ...\n    client: {\n      mocha: {\n        opts: 'test/mocha.opts' // You can set opts to equal true then plugin will load opts from default location 'test/mocha.opts'\n        ...\n      }\n      ...\n    }\n  });\n};\n```\n\n## Internals\n\nOn the end of each test `karma-mocha` passes to `karma` result object with fields:\n\n* `description` Test title.\n* `suite` List of titles of test suites.\n* `success` True if test is succeed, false otherwise.\n* `skipped` True if test is skipped.\n* `time` Test duration.\n* `log` List of errors.\n* `startTime` Milliseconds since epoch that the test started\n* `endTime` Milliseconds since epoch that the test ended\n* `assertionErrors` List of additional error info: \n    * `name` Error name.\n    * `message` Error message.\n    * `actual` Actual data in assertion, serialized to string.\n    * `expected` Expected data in assertion, serialized to string.\n    * `showDiff` True if it is configured by assertion to show diff.\n* `mocha` An optional object listed if you use the `expose` option\n\nThis object will be passed to test reporter.\n\nNB. the start and end times are added by the adapter whereas the duration is calculated by Mocha - as such they probably will not match arithmetically. Ie. `endTime - startTime !== duration`. These fields have been added so that timestamped reports can be matched up with other timestamped reports from the target device (eg. memory profiling data collected outside the browser)\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11714}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 244268}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1037909}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3138640}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5934786}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11886989}], "dependentsCount": 371, "starsCount": 31}, "github": {"starsCount": 372, "forksCount": 99, "subscribersCount": 13, "issues": {"count": 225, "openCount": 61, "distribution": {"3600": 20, "10800": 10, "32400": 20, "97200": 17, "291600": 13, "874800": 9, "2624400": 15, "7873200": 21, "23619600": 20, "70858800": 6, "212576400": 74}, "isDisabled": false}, "contributors": [{"username": "vojtajina", "commitsCount": 36}, {"username": "dignifiedquire", "commitsCount": 27}, {"username": "maksimr", "commitsCount": 19}, {"username": "zzo", "commitsCount": 4}, {"username": "franktopel", "commitsCount": 3}, {"username": "boneskull", "commitsCount": 2}, {"username": "dpogue", "commitsCount": 2}, {"username": "elpddev", "commitsCount": 2}, {"username": "geddski", "commitsCount": 2}, {"username": "johnjbarton", "commitsCount": 2}, {"username": "lucassus", "commitsCount": 2}, {"username": "mbaumgartl", "commitsCount": 2}, {"username": "mokkabonna", "commitsCount": 2}, {"username": "pkozlowski-opensource", "commitsCount": 2}, {"username": "roadhump", "commitsCount": 2}, {"username": "semantic-release-bot", "commitsCount": 2}, {"username": "KidkArolis", "commitsCount": 1}, {"username": "Maloric", "commitsCount": 1}, {"username": "aymericbeaumet", "commitsCount": 1}, {"username": "danthareja", "commitsCount": 1}, {"username": "dej611", "commitsCount": 1}, {"username": "delfrrr", "commitsCount": 1}, {"username": "eiriksm", "commitsCount": 1}, {"username": "foxyblocks", "commitsCount": 1}, {"username": "gdmfilippov", "commitsCount": 1}, {"username": "jagoda", "commitsCount": 1}, {"username": "jdivock", "commitsCount": 1}, {"username": "jonknapp", "commitsCount": 1}, {"username": "patrickkettner", "commitsCount": 1}, {"username": "pghalliday", "commitsCount": 1}, {"username": "refractalize", "commitsCount": 1}, {"username": "rluba", "commitsCount": 1}, {"username": "sahat", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13}]}, "source": {"files": {"readmeSize": 4682, "testsSize": 23980, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-mocha.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-mocha.svg", "content": "https://img.shields.io/npm/v/karma-mocha.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-mocha.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-mocha.svg", "content": "https://img.shields.io/npm/dm/karma-mocha.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-mocha/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-mocha.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-mocha/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-mocha/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-mocha.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-mocha.svg", "shields": "https://img.shields.io/david/karma-runner/karma-mocha.svg", "content": "https://img.shields.io/david/karma-runner/karma-mocha.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-mocha.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-mocha/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-mocha.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-mocha.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 548, "downloadsCount": 1046213.3333333334, "downloadsAcceleration": 608.4534246575349, "dependentsCount": 371}, "maintenance": {"releasesFrequency": 0.6799657534246576, "commitsFrequency": 0.7019349315068493, "openIssues": 0.8814814814814814, "issuesDistribution": 0}}, "score": {"final": 0.6451127189344518, "detail": {"quality": 0.9439269187264678, "popularity": 0.37032205155754006, "maintenance": 0.6637769293467783}}}}, {"eslint-plugin-flowtype": {"analyzedAt": "2020-06-04T02:40:04.650Z", "collected": {"metadata": {"name": "eslint-plugin-flowtype", "scope": "unscoped", "version": "5.1.3", "description": "Flowtype linting rules for ESLint.", "keywords": ["eslint", "plugin", "flowtype"], "date": "2020-05-27T18:36:11.882Z", "author": {"name": "Gajus Kuizinas", "email": "gajus@gajus.com", "url": "http://gajus.com", "username": "gajus"}, "publisher": {"username": "gajus", "email": "gajus@gajus.com"}, "maintainers": [{"username": "gajus", "email": "gajus@gajus.com"}], "repository": {"type": "git", "url": "git+https://github.com/gajus/eslint-plugin-flowtype.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-flowtype", "homepage": "https://github.com/gajus/eslint-plugin-flowtype#readme", "repository": "https://github.com/gajus/eslint-plugin-flowtype", "bugs": "https://github.com/gajus/eslint-plugin-flowtype/issues"}, "license": "BSD-3-Clause", "dependencies": {"lodash": "^4.17.15", "string-natural-compare": "^3.0.1"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/node": "^7.8.7", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/register": "^7.9.0", "ajv": "^6.12.2", "babel-eslint": "^10.1.0", "babel-plugin-add-module-exports": "^1.0.2", "chai": "^4.2.0", "eclint": "^2.8.1", "eslint": "^7.1.0", "eslint-config-canonical": "^20.0.4", "gitdown": "^3.1.3", "glob": "^7.1.6", "husky": "^4.2.5", "jsonlint": "^1.6.3", "mocha": "^7.2.0", "rimraf": "^3.0.2", "semantic-release": "^17.0.8"}, "peerDependencies": {"eslint": "^7.1.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 9}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 34}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 62}], "hasTestScript": true, "readme": "<a name=\"eslint-plugin-flowtype\"></a>\n# eslint-plugin-flowtype\n\n[![GitSpo Mentions](https://gitspo.com/badges/mentions/gajus/eslint-plugin-flowtype?style=flat-square)](https://gitspo.com/mentions/gajus/eslint-plugin-flowtype)\n[![NPM version](http://img.shields.io/npm/v/eslint-plugin-flowtype.svg?style=flat-square)](https://www.npmjs.org/package/eslint-plugin-flowtype)\n[![Travis build status](http://img.shields.io/travis/gajus/eslint-plugin-flowtype/master.svg?style=flat-square)](https://travis-ci.org/gajus/eslint-plugin-flowtype)\n[![js-canonical-style](https://img.shields.io/badge/code%20style-canonical-blue.svg?style=flat-square)](https://github.com/gajus/canonical)\n\n[Flow type](http://flowtype.org/) linting rules for ESLint.\n\n* [eslint-plugin-flowtype](#eslint-plugin-flowtype)\n    * [Installation](#eslint-plugin-flowtype-installation)\n    * [Configuration](#eslint-plugin-flowtype-configuration)\n        * [Shareable configurations](#eslint-plugin-flowtype-configuration-shareable-configurations)\n        * [Community maintained configurations](#eslint-plugin-flowtype-configuration-community-maintained-configurations)\n    * [Settings](#eslint-plugin-flowtype-settings)\n        * [`onlyFilesWithFlowAnnotation`](#eslint-plugin-flowtype-settings-onlyfileswithflowannotation)\n    * [Rules](#eslint-plugin-flowtype-rules)\n        * [`array-style-complex-type`](#eslint-plugin-flowtype-rules-array-style-complex-type)\n        * [`array-style-simple-type`](#eslint-plugin-flowtype-rules-array-style-simple-type)\n        * [`arrow-parens`](#eslint-plugin-flowtype-rules-arrow-parens)\n        * [`boolean-style`](#eslint-plugin-flowtype-rules-boolean-style)\n        * [`define-flow-type`](#eslint-plugin-flowtype-rules-define-flow-type)\n        * [`delimiter-dangle`](#eslint-plugin-flowtype-rules-delimiter-dangle)\n        * [`generic-spacing`](#eslint-plugin-flowtype-rules-generic-spacing)\n        * [`newline-after-flow-annotation`](#eslint-plugin-flowtype-rules-newline-after-flow-annotation)\n        * [`no-dupe-keys`](#eslint-plugin-flowtype-rules-no-dupe-keys)\n        * [`no-existential-type`](#eslint-plugin-flowtype-rules-no-existential-type)\n        * [`no-flow-fix-me-comments`](#eslint-plugin-flowtype-rules-no-flow-fix-me-comments)\n        * [`no-mixed`](#eslint-plugin-flowtype-rules-no-mixed)\n        * [`no-mutable-array`](#eslint-plugin-flowtype-rules-no-mutable-array)\n        * [`no-primitive-constructor-types`](#eslint-plugin-flowtype-rules-no-primitive-constructor-types)\n        * [`no-types-missing-file-annotation`](#eslint-plugin-flowtype-rules-no-types-missing-file-annotation)\n        * [`no-unused-expressions`](#eslint-plugin-flowtype-rules-no-unused-expressions)\n        * [`no-weak-types`](#eslint-plugin-flowtype-rules-no-weak-types)\n        * [`object-type-delimiter`](#eslint-plugin-flowtype-rules-object-type-delimiter)\n        * [`require-compound-type-alias`](#eslint-plugin-flowtype-rules-require-compound-type-alias)\n        * [`require-exact-type`](#eslint-plugin-flowtype-rules-require-exact-type)\n        * [`require-indexer-name`](#eslint-plugin-flowtype-rules-require-indexer-name)\n        * [`require-inexact-type`](#eslint-plugin-flowtype-rules-require-inexact-type)\n        * [`require-parameter-type`](#eslint-plugin-flowtype-rules-require-parameter-type)\n        * [`require-readonly-react-props`](#eslint-plugin-flowtype-rules-require-readonly-react-props)\n        * [`require-return-type`](#eslint-plugin-flowtype-rules-require-return-type)\n        * [`require-types-at-top`](#eslint-plugin-flowtype-rules-require-types-at-top)\n        * [`require-valid-file-annotation`](#eslint-plugin-flowtype-rules-require-valid-file-annotation)\n        * [`require-variable-type`](#eslint-plugin-flowtype-rules-require-variable-type)\n        * [`semi`](#eslint-plugin-flowtype-rules-semi)\n        * [`sort-keys`](#eslint-plugin-flowtype-rules-sort-keys)\n        * [`space-after-type-colon`](#eslint-plugin-flowtype-rules-space-after-type-colon)\n        * [`space-before-generic-bracket`](#eslint-plugin-flowtype-rules-space-before-generic-bracket)\n        * [`space-before-type-colon`](#eslint-plugin-flowtype-rules-space-before-type-colon)\n        * [`spread-exact-type`](#eslint-plugin-flowtype-rules-spread-exact-type)\n        * [`type-id-match`](#eslint-plugin-flowtype-rules-type-id-match)\n        * [`type-import-style`](#eslint-plugin-flowtype-rules-type-import-style)\n        * [`union-intersection-spacing`](#eslint-plugin-flowtype-rules-union-intersection-spacing)\n        * [`use-flow-type`](#eslint-plugin-flowtype-rules-use-flow-type)\n        * [`valid-syntax`](#eslint-plugin-flowtype-rules-valid-syntax)\n\n\n<a name=\"eslint-plugin-flowtype-installation\"></a>\n## Installation\n\n1. Install [ESLint](https://www.github.com/eslint/eslint).\n1. Install [`babel-eslint`](https://github.com/babel/babel-eslint) parser (ESLint parser [does not support type annotations](https://github.com/eslint/eslint/issues/2157)).\n1. Install [`eslint-plugin-flowtype`](https://github.com/gajus/eslint-plugin-flowtype) plugin.\n\n<!-- -->\n\n```sh\nnpm install eslint --save-dev\nnpm install babel-eslint --save-dev\nnpm install eslint-plugin-flowtype --save-dev\n\n# Or all at once:\nnpm install eslint babel-eslint eslint-plugin-flowtype --save-dev\n```\n\n<a name=\"eslint-plugin-flowtype-configuration\"></a>\n## Configuration\n\n1. Set `parser` property to `babel-eslint`.\n1. Add `plugins` section and specify `eslint-plugin-flowtype` as a plugin.\n1. Enable rules.\n\n<!-- -->\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"plugins\": [\n    \"flowtype\"\n  ],\n  \"rules\": {\n    \"flowtype/boolean-style\": [\n      2,\n      \"boolean\"\n    ],\n    \"flowtype/define-flow-type\": 1,\n    \"flowtype/delimiter-dangle\": [\n      2,\n      \"never\"\n    ],\n    \"flowtype/generic-spacing\": [\n      2,\n      \"never\"\n    ],\n    \"flowtype/no-mixed\": 2,\n    \"flowtype/no-primitive-constructor-types\": 2,\n    \"flowtype/no-types-missing-file-annotation\": 2,\n    \"flowtype/no-weak-types\": 2,\n    \"flowtype/object-type-delimiter\": [\n      2,\n      \"comma\"\n    ],\n    \"flowtype/require-parameter-type\": 2,\n    \"flowtype/require-readonly-react-props\": 0,\n    \"flowtype/require-return-type\": [\n      2,\n      \"always\",\n      {\n        \"annotateUndefined\": \"never\"\n      }\n    ],\n    \"flowtype/require-valid-file-annotation\": 2,\n    \"flowtype/semi\": [\n      2,\n      \"always\"\n    ],\n    \"flowtype/space-after-type-colon\": [\n      2,\n      \"always\"\n    ],\n    \"flowtype/space-before-generic-bracket\": [\n      2,\n      \"never\"\n    ],\n    \"flowtype/space-before-type-colon\": [\n      2,\n      \"never\"\n    ],\n    \"flowtype/type-id-match\": [\n      2,\n      \"^([A-Z][a-z0-9]+)+Type$\"\n    ],\n    \"flowtype/union-intersection-spacing\": [\n      2,\n      \"always\"\n    ],\n    \"flowtype/use-flow-type\": 1,\n    \"flowtype/valid-syntax\": 1\n  },\n  \"settings\": {\n    \"flowtype\": {\n      \"onlyFilesWithFlowAnnotation\": false\n    }\n  }\n}\n```\n\n<a name=\"eslint-plugin-flowtype-configuration-shareable-configurations\"></a>\n### Shareable configurations\n\n<a name=\"eslint-plugin-flowtype-configuration-shareable-configurations-recommended\"></a>\n#### Recommended\n\nThis plugin exports a [recommended configuration](./src/configs/recommended.json) that enforces Flow type good practices.\n\nTo enable this configuration use the extends property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\n    \"plugin:flowtype/recommended\"\n  ],\n  \"plugins\": [\n    \"flowtype\"\n  ]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\n<a name=\"eslint-plugin-flowtype-configuration-community-maintained-configurations\"></a>\n### Community maintained configurations\n\nThe following are third-party submitted/ maintained configurations of `eslint-plugin-flowtype`:\n\n* https://github.com/wemake-services/eslint-config-flowtype-essential\n\n<a name=\"eslint-plugin-flowtype-settings\"></a>\n## Settings\n\n<a name=\"eslint-plugin-flowtype-settings-onlyfileswithflowannotation\"></a>\n### <code>onlyFilesWithFlowAnnotation</code>\n\nWhen `true`, only checks files with a [`@flow` annotation](http://flowtype.org/docs/about-flow.html#gradual) in the first comment.\n\n```js\n{\n  \"settings\": {\n    \"flowtype\": {\n      \"onlyFilesWithFlowAnnotation\": true\n    }\n  }\n}\n```\n\n<a name=\"eslint-plugin-flowtype-rules\"></a>\n## Rules\n\n<!-- Rules are sorted alphabetically. -->\n\n<a name=\"eslint-plugin-flowtype-rules-array-style-complex-type\"></a>\n### <code>array-style-complex-type</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces a particular annotation style of complex types.\n\nType is considered complex in these cases:\n\n* [Maybe type](https://flow.org/en/docs/types/maybe/)\n* [Function type](https://flow.org/en/docs/types/functions/)\n* [Object type](https://flow.org/en/docs/types/objects/)\n* [Tuple type](https://flow.org/en/docs/types/tuples/)\n* [Union type](https://flow.org/en/docs/types/unions/)\n* [Intersection type](https://flow.org/en/docs/types/intersections/)\n\nThis rule takes one argument.\n\nIf it is `'verbose'` then a problem is raised when using `Type[]` instead of `Array<Type>`.\n\nIf it is `'shorthand'` then a problem is raised when using `Array<Type>` instead of `Type[]`.\n\nThe default value is `'verbose'`.\n\nThe following patterns are considered problems:\n\n```js\ntype X = (?string)[]\n// Message: Use \"Array<?string>\", not \"(?string)[]\"\n\n// Options: [\"verbose\"]\ntype X = (?string)[]\n// Message: Use \"Array<?string>\", not \"(?string)[]\"\n\n// Options: [\"shorthand\"]\ntype X = Array<?string>\n// Message: Use \"(?string)[]\", not \"Array<?string>\"\n\n// Options: [\"shorthand\"]\ntype X = Array<{foo: string}>\n// Message: Use \"{foo: string}[]\", not \"Array<{foo: string}>\"\n\ntype X = (string | number)[]\n// Message: Use \"Array<string | number>\", not \"(string | number)[]\"\n\ntype X = (string & number)[]\n// Message: Use \"Array<string & number>\", not \"(string & number)[]\"\n\ntype X = [string, number][]\n// Message: Use \"Array<[string, number]>\", not \"[string, number][]\"\n\ntype X = {foo: string}[]\n// Message: Use \"Array<{foo: string}>\", not \"{foo: string}[]\"\n\ntype X = (string => number)[]\n// Message: Use \"Array<string => number>\", not \"(string => number)[]\"\n\ntype X = {\n    foo: string,\n    bar: number\n}[]\n// Message: Use \"Array<{ foo: string, bar: number }>\", not \"{ foo: string, bar: number }[]\"\n\ntype X = {\n    foo: string,\n    bar: number,\n    quo: boolean,\n    hey: Date\n}[]\n// Message: Use \"Array<Type>\", not \"Type[]\"\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = Array<?string>\n\n// Options: [\"verbose\"]\ntype X = Array<?string>\n\n// Options: [\"shorthand\"]\ntype X = (?string)[]\n\n// Options: [\"shorthand\"]\ntype X = Array<string>\n\n// Options: [\"shorthand\"]\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\ntype X = Array<?string>\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-array-style-simple-type\"></a>\n### <code>array-style-simple-type</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces a particular array type annotation style of simple types.\n\nType is considered simple in these cases:\n\n* [Primitive types](https://flow.org/en/docs/types/primitives/)\n* [Literal types](https://flow.org/en/docs/types/literals/)\n* [Mixed type](https://flow.org/en/docs/types/mixed/)\n* [Any type](https://flow.org/en/docs/types/any/)\n* [Class type](https://flow.org/en/docs/types/classes/)\n* [Generic type](https://flow.org/en/docs/types/generics/)\n* Array type [shorthand notation](https://flow.org/en/docs/types/arrays/#toc-array-type-shorthand-syntax)\n\nThis rule takes one argument.\n\nIf it is `'verbose'` then a problem is raised when using `Type[]` instead of `Array<Type>`.\n\nIf it is `'shorthand'` then a problem is raised when using `Array<Type>` instead of `Type[]`.\n\nThe default value is `'verbose'`.\n\nThe following patterns are considered problems:\n\n```js\ntype X = string[]\n// Message: Use \"Array<string>\", not \"string[]\"\n\n// Options: [\"verbose\"]\ntype X = string[]\n// Message: Use \"Array<string>\", not \"string[]\"\n\n// Options: [\"shorthand\"]\ntype X = Array<string>\n// Message: Use \"string[]\", not \"Array<string>\"\n\ntype X = Date[]\n// Message: Use \"Array<Date>\", not \"Date[]\"\n\ntype X = Promise<string>[]\n// Message: Use \"Array<Promise<string>>\", not \"Promise<string>[]\"\n\ntype X = $Keys<{foo: string}>[]\n// Message: Use \"Array<$Keys<{foo: string}>>\", not \"$Keys<{foo: string}>[]\"\n\ntype X = any[]\n// Message: Use \"Array<any>\", not \"any[]\"\n\ntype X = mixed[]\n// Message: Use \"Array<mixed>\", not \"mixed[]\"\n\ntype X = void[]\n// Message: Use \"Array<void>\", not \"void[]\"\n\ntype X = null[]\n// Message: Use \"Array<null>\", not \"null[]\"\n\ntype X = string[][]\n// Message: Use \"Array<string[]>\", not \"string[][]\"\n// Message: Use \"Array<string>\", not \"string[]\"\n\ntype X = Promise<{\n    foo: string,\n    bar: number\n}>[]\n// Message: Use \"Array<Promise<{ foo: string, bar: number }>>\", not \"Promise<{ foo: string, bar: number }>[]\"\n\ntype X = Promise<{\n    foo: string,\n    bar: number,\n    quo: boolean\n}>[]\n// Message: Use \"Array<Type>\", not \"Type[]\"\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = Array<string>\n\n// Options: [\"verbose\"]\ntype X = Array<string>\n\n// Options: [\"shorthand\"]\ntype X = string[]\n\ntype X = Array<Array<string>>\n\n// Options: [\"verbose\"]\ntype X = (?string)[]\n\n// Options: [\"verbose\"]\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\ntype X = string[]\n\ntype X = Array\n\ntype X = typeof Array\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-arrow-parens\"></a>\n### <code>arrow-parens</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces the consistent use of parentheses in arrow functions.\n\nThis rule has a string option and an object one.\n\nString options are:\n\n- `\"always\"` (default) requires parens around arguments in all cases.\n- `\"as-needed\"` enforces no braces where they can be omitted.\n\nObject properties for variants of the `\"as-needed\"` option:\n\n- `\"requireForBlockBody\": true` modifies the as-needed rule in order to require parens if the function body is in an instructions block (surrounded by braces).\n\nThe following patterns are considered problems:\n\n```js\na => {}\n// Message: undefined\n\na => a\n// Message: undefined\n\na => {\n}\n// Message: undefined\n\na.then(foo => {});\n// Message: undefined\n\na.then(foo => a);\n// Message: undefined\n\na(foo => { if (true) {}; });\n// Message: undefined\n\na(async foo => { if (true) {}; });\n// Message: undefined\n\n// Options: [\"as-needed\"]\n(a) => a\n// Message: undefined\n\n// Options: [\"as-needed\"]\n(a,) => a\n// Message: undefined\n\n// Options: [\"as-needed\"]\nasync (a) => a\n// Message: undefined\n\n// Options: [\"as-needed\"]\nasync(a) => a\n// Message: undefined\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\na => {}\n// Message: undefined\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a) => a\n// Message: undefined\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\nasync a => {}\n// Message: undefined\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\nasync (a) => a\n// Message: undefined\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\nasync(a) => a\n// Message: undefined\n```\n\nThe following patterns are not considered problems:\n\n```js\n() => {}\n\n(a) => {}\n\n(a) => a\n\n(a) => {\n}\n\na.then((foo) => {});\n\na.then((foo) => { if (true) {}; });\n\na.then(async (foo) => { if (true) {}; });\n\n// Options: [\"always\"]\n() => {}\n\n// Options: [\"always\"]\n(a) => {}\n\n// Options: [\"always\"]\n(a) => a\n\n// Options: [\"always\"]\n(a) => {\n}\n\n// Options: [\"always\"]\na.then((foo) => {});\n\n// Options: [\"always\"]\na.then((foo) => { if (true) {}; });\n\n// Options: [\"always\"]\na.then(async (foo) => { if (true) {}; });\n\n// Options: [\"as-needed\"]\n() => {}\n\n// Options: [\"as-needed\"]\na => {}\n\n// Options: [\"as-needed\"]\na => a\n\n// Options: [\"as-needed\"]\n([a, b]) => {}\n\n// Options: [\"as-needed\"]\n({ a, b }) => {}\n\n// Options: [\"as-needed\"]\n(a = 10) => {}\n\n// Options: [\"as-needed\"]\n(...a) => a[0]\n\n// Options: [\"as-needed\"]\n(a, b) => {}\n\n// Options: [\"as-needed\"]\nasync ([a, b]) => {}\n\n// Options: [\"as-needed\"]\nasync (a, b) => {}\n\n// Options: [\"as-needed\"]\n(a: T) => a\n\n// Options: [\"as-needed\"]\n(a): T => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n() => {}\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\na => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n([a, b]) => {}\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n([a, b]) => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n({ a, b }) => {}\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n({ a, b }) => a + b\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a = 10) => {}\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(...a) => a[0]\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a, b) => {}\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\na => ({})\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\nasync a => ({})\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\nasync a => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a: T) => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a): T => a\n\n// Options: [\"always\",{\"requireForBlockBody\":true}]\n<T>(a: T) => a\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":false}]\n<T>(a: T) => { return a; }\n\n// Options: [\"always\",{\"requireForBlockBody\":true}]\n<T>(a: T) => { return a; }\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n<T>(a: T) => { return a; }\n\n// Options: [\"as-needed\",{\"requireForBlockBody\":true}]\n(a): %checks => typeof a === \"number\"\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-boolean-style\"></a>\n### <code>boolean-style</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces a particular style for boolean type annotations. This rule takes one argument.\n\nIf it is `'boolean'` then a problem is raised when using `bool` instead of `boolean`.\n\nIf it is `'bool'` then a problem is raised when using `boolean` instead of `bool`.\n\nThe default value is `'boolean'`.\n\nThe following patterns are considered problems:\n\n```js\ntype X = bool\n// Message: Use \"boolean\", not \"bool\"\n\n// Options: [\"boolean\"]\ntype X = bool\n// Message: Use \"boolean\", not \"bool\"\n\n// Options: [\"bool\"]\ntype X = boolean\n// Message: Use \"bool\", not \"boolean\"\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = boolean\n\n// Options: [\"boolean\"]\ntype X = boolean\n\n// Options: [\"bool\"]\ntype X = bool\n\n// Options: [\"boolean\"]\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\ntype X = bool\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-define-flow-type\"></a>\n### <code>define-flow-type</code>\n\nMarks Flow type identifiers as defined.\n\nUsed to suppress [`no-undef`](http://eslint.org/docs/rules/no-undef) reporting of type identifiers.\n\nThe following patterns are not considered problems:\n\n```js\nvar a: AType\n// Additional rules: {\"no-undef\":2}\n\nvar a: AType; var b: AType\n// Additional rules: {\"no-undef\":2}\n\nvar a; (a: AType)\n// Additional rules: {\"no-undef\":2}\n\nvar a: AType<BType>\n// Additional rules: {\"no-undef\":2}\n\ntype A = AType\n// Additional rules: {\"no-undef\":2}\n\ndeclare type A = number\n// Additional rules: {\"no-undef\":2}\n\nopaque type A = AType\n// Additional rules: {\"no-undef\":2}\n\nfunction f(a: AType) {}\n// Additional rules: {\"no-undef\":2}\n\nfunction f(a: AType.a) {}\n// Additional rules: {\"no-undef\":2}\n\nfunction f(a: AType.a.b) {}\n// Additional rules: {\"no-undef\":2}\n\nfunction f(a): AType {}; var a: AType\n// Additional rules: {\"no-undef\":2}\n\nfunction f(a): AType {}\n// Additional rules: {\"no-undef\":2}\n\nclass C { a: AType }\n// Additional rules: {\"no-undef\":2}\n\nclass C { a: AType.a }\n// Additional rules: {\"no-undef\":2}\n\nclass C { a: AType.a.b }\n// Additional rules: {\"no-undef\":2}\n\nclass C implements AType {}\n// Additional rules: {\"no-undef\":2}\n\ndeclare interface A {}\n// Additional rules: {\"no-undef\":2}\n\n({ a: ({b() {}}: AType) })\n// Additional rules: {\"no-undef\":2}\n\ntype X = {Y<AType>(): BType}\n// Additional rules: {\"no-undef\":2}\n\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\n\n/**\n* Copyright 2019 no corp\n* @flow\n*/\ntype Foo = $ReadOnly<{}>\n// Additional rules: {\"no-undef\":2}\n\nvar a: AType\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nvar a: AType; var b: AType\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nvar a; (a: AType)\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nvar a: AType<BType>\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\ntype A = AType\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\ndeclare type A = number\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nopaque type A = AType\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nfunction f(a: AType) {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nfunction f(a: AType.a) {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nfunction f(a: AType.a.b) {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nfunction f(a): AType {}; var a: AType\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nfunction f(a): AType {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nclass C { a: AType }\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nclass C { a: AType.a }\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nclass C { a: AType.a.b }\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\nclass C implements AType {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\ndeclare interface A {}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\n({ a: ({b() {}}: AType) })\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\ntype X = {Y<AType>(): BType}\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\n\n/**\n* Copyright 2019 no corp\n* @flow\n*/\ntype Foo = $ReadOnly<{}>\n// Additional rules: {\"no-undef\":2,\"no-use-before-define\":[2,\"nofunc\"]}\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-delimiter-dangle\"></a>\n### <code>delimiter-dangle</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces consistent use of trailing commas in Object and Tuple annotations.\n\nThis rule takes three arguments where the possible values are the same as ESLint's default `comma-dangle` rule:\n\n1. The first argument is for Object and Tuple annotations. The default value is `'never'`.\n2. The second argument is used for Interface annotations. This defaults to the value of the first argument.\n3. The third argument is used for inexact object notation (trailing `...`). The default value is `'never'`.\n\nIf it is `'never'` then a problem is raised when there is a trailing comma.\n\nIf it is `'always'` then a problem is raised when there is no trailing comma.\n\nIf it is `'always-multiline'` then a problem is raised when there is no trailing comma on a multi-line definition, or there _is_ a trailing comma on a single-line definition.\n\nIf it is `'only-multiline'` then a problem is raised when there is a trailing comma on a single-line definition. It allows, but does not enforce, trailing commas on multi-line definitions.\n\nThe following patterns are considered problems:\n\n```js\ntype X = { foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = { foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = { foo: string; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = {\nfoo: string,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\"]\ntype X = { foo: string }\n// Message: Missing trailing delimiter\n\n// Options: [\"always\"]\ntype X = {\nfoo: string\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = { foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = {\nfoo: string\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"only-multiline\"]\ntype X = { foo: string; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\",\"never\"]\ninterface X { foo: string; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = { [key: string]: number, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\"]\ntype X = { [key: string]: number }\n// Message: Missing trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = { [key: string]: number, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = {\n[key: string]: number\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"only-multiline\"]\ntype X = { [key: string]: number; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = { [key: string]: number, foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = {\n[key: string]: number,\nfoo: string,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = {\n[key: string]: number,\naReallyLongPropertyNameHere: string,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\"]\ntype X = { [key: string]: number, foo: string }\n// Message: Missing trailing delimiter\n\n// Options: [\"always\"]\ntype X = {\n[key: string]: number;\nfoo: string\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = { [key: string]: number, foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = {\n[key: string]: number,\nfoo: string\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"only-multiline\"]\ntype X = { [key: string]: number, foo: string, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = { foo: string, [key: string]: number, }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = {\nfoo: string,\n[key: string]: number,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = {\naReallyLongPropertyNameHere: string,\n[key: string]: number,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\"]\ntype X = { foo: string, [key: string]: number }\n// Message: Missing trailing delimiter\n\n// Options: [\"always\"]\ntype X = { foo: string; [key: string]: number }\n// Message: Missing trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = { foo: string, [key: string]: number; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = {\nfoo: string,\n[key: string]: number\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"only-multiline\"]\ntype X = { foo: string, [key: string]: number; }\n// Message: Unexpected trailing delimiter\n\ntype X = { ..., }\n// Message: Unexpected trailing delimiter\n\ntype X = { ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { ... }\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { ...; }\n// Message: Unexpected trailing delimiter\n\ntype X = {\n...,\n}\n// Message: Unexpected trailing delimiter\n\ntype X = {\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n...,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n...\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n...\n}\n// Message: Missing trailing delimiter\n\ntype X = { foo: string, ..., }\n// Message: Unexpected trailing delimiter\n\ntype X = { foo: string; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { foo: string, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { foo: string; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { foo: string, ... }\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { foo: string, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { foo: string; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { foo: string, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { foo: string; ...; }\n// Message: Unexpected trailing delimiter\n\ntype X = {\nfoo: string,\n...,\n}\n// Message: Unexpected trailing delimiter\n\ntype X = {\nfoo: string;\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\nfoo: string,\n...,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\nfoo: string;\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\nfoo: string,\n...\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\nfoo: string,\n...\n}\n// Message: Missing trailing delimiter\n\ntype X = { [key: string]: number, ..., }\n// Message: Unexpected trailing delimiter\n\ntype X = { [key: string]: number; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { [key: string]: number, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { [key: string]: number; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { [key: string]: number, ... }\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { [key: string]: number, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { [key: string]: number; ...; }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { [key: string]: number, ..., }\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { [key: string]: number; ...; }\n// Message: Unexpected trailing delimiter\n\ntype X = {\n[key: string]: number,\n...,\n}\n// Message: Unexpected trailing delimiter\n\ntype X = {\n[key: string]: number;\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n[key: string]: number,\n...,\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n[key: string]: number;\n...;\n}\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n[key: string]: number,\n...\n}\n// Message: Missing trailing delimiter\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n[key: string]: number,\n...\n}\n// Message: Missing trailing delimiter\n\ntype X = [string, number,]\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = [string, number,]\n// Message: Unexpected trailing delimiter\n\n// Options: [\"never\"]\ntype X = [\nstring,\nnumber,\n]\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always\"]\ntype X = [string, number]\n// Message: Missing trailing delimiter\n\n// Options: [\"always\"]\ntype X = [\nstring,\nnumber\n]\n// Message: Missing trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = [string, number,]\n// Message: Unexpected trailing delimiter\n\n// Options: [\"always-multiline\"]\ntype X = [\nfoo, string\n]\n// Message: Missing trailing delimiter\n\n// Options: [\"only-multiline\"]\ntype X = [ number, string, ]\n// Message: Unexpected trailing delimiter\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = { foo: string }\n\n// Options: [\"never\"]\ntype X = { foo: string }\n\n// Options: [\"always\"]\ntype X = { foo: string, }\n\n// Options: [\"always\"]\ntype X = { foo: string; }\n\n// Options: [\"never\"]\ntype X = {\nfoo: string\n}\n\n// Options: [\"always\"]\ntype X = {\nfoo: string,\n}\n\n// Options: [\"always-multiline\"]\ntype X = { foo: string }\n\n// Options: [\"always-multiline\"]\ntype X = {\nfoo: string,\n}\n\n// Options: [\"always-multiline\"]\ntype X = {\nfoo: string;\n}\n\n// Options: [\"only-multiline\"]\ntype X = { foo: string }\n\n// Options: [\"only-multiline\"]\ntype X = {\nfoo: string\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\nfoo: string,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\nfoo: string;\n}\n\n// Options: [\"never\",\"always\"]\ninterface X { foo: string; }\n\n// Options: [\"never\"]\ntype X = {}\n\n// Options: [\"always\"]\ntype X = {}\n\n// Options: [\"always-multiline\"]\ntype X = {}\n\n// Options: [\"only-multiline\"]\ntype X = {}\n\n// Options: [\"never\"]\ntype X = { [key: string]: number }\n\n// Options: [\"always\"]\ntype X = { [key: string]: number, }\n\n// Options: [\"always\"]\ntype X = { [key: string]: number; }\n\n// Options: [\"always-multiline\"]\ntype X = { [key: string]: number }\n\n// Options: [\"always-multiline\"]\ntype X = {\n[key: string]: number,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\n[key: string]: number,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\n[key: string]: number\n}\n\n// Options: [\"only-multiline\"]\ntype X = { [key: string]: number }\n\n// Options: [\"never\"]\ntype X = { [key: string]: number, foo: string }\n\n// Options: [\"always\"]\ntype X = { [key: string]: number, foo: string, }\n\n// Options: [\"always\"]\ntype X = { [key: string]: number; foo: string; }\n\n// Options: [\"always-multiline\"]\ntype X = { [key: string]: number, foo: string }\n\n// Options: [\"always-multiline\"]\ntype X = {\n[key: string]: number,\nfoo: string,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\n[key: string]: number,\nfoo: string,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\n[key: string]: number;\nfoo: string\n}\n\n// Options: [\"only-multiline\"]\ntype X = { [key: string]: number, foo: string }\n\n// Options: [\"never\"]\ntype X = { foo: string, [key: string]: number }\n\n// Options: [\"always\"]\ntype X = { foo: string, [key: string]: number, }\n\n// Options: [\"always\"]\ntype X = { foo: string; [key: string]: number; }\n\n// Options: [\"always-multiline\"]\ntype X = { foo: string, [key: string]: number }\n\n// Options: [\"always-multiline\"]\ntype X = {\nfoo: string,\n[key: string]: number,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\nfoo: string,\n[key: string]: number,\n}\n\n// Options: [\"only-multiline\"]\ntype X = {\nfoo: string;\n[key: string]: number\n}\n\n// Options: [\"only-multiline\"]\ntype X = { foo: string, [key: string]: number }\n\ntype X = { ... }\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { ... }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { ..., }\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { ... }\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { ... }\n\ntype X = {\n...\n}\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n...\n}\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n...,\n }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n...;\n }\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n...,\n}\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n...;\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n...\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n...,\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n...;\n}\n\ntype X = { foo: string, ... }\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { foo: string, ... }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { foo: string, ..., }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { foo: string; ...; }\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { foo: string, ... }\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { foo: string, ... }\n\ntype X = {\nfoo: string,\n...\n}\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\nfoo: string,\n...\n}\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\nfoo: string,\n...,\n}\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\nfoo: string;\n...;\n}\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\nfoo: string,\n...,\n}\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\nfoo: string;\n...;\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\nfoo: string,\n...\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\nfoo: string,\n...,\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\nfoo: string,\n...;\n}\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = { [key: string]: number, ... }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { [key: string]: number, ..., }\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = { [key: string]: number; ...; }\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = { [key: string]: number, ... }\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = { [key: string]: number, ... }\n\n// Options: [\"never\",\"never\",\"never\"]\ntype X = {\n[key: string]: number,\n...\n}\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n[key: string]: number,\n...,\n}\n\n// Options: [\"never\",\"never\",\"always\"]\ntype X = {\n[key: string]: number;\n...;\n}\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n[key: string]: number,\n...,\n}\n\n// Options: [\"never\",\"never\",\"always-multiline\"]\ntype X = {\n[key: string]: number;\n...;\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n[key: string]: number,\n...\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n[key: string]: number,\n...,\n}\n\n// Options: [\"never\",\"never\",\"only-multiline\"]\ntype X = {\n[key: string]: number;\n...;\n}\n\ntype X = [string, number]\n\n// Options: [\"never\"]\ntype X = [string, number]\n\n// Options: [\"never\"]\ntype X = [\nstring,\nnumber\n]\n\n// Options: [\"always\"]\ntype X = [string, number,]\n\n// Options: [\"always\"]\ntype X = [\nstring,\nnumber,\n]\n\n// Options: [\"always-multiline\"]\ntype X = [ foo, string ]\n\n// Options: [\"always-multiline\"]\ntype X = [\nfoo, string,\n]\n\n// Options: [\"only-multiline\"]\ntype X = [ number, string ]\n\n// Options: [\"only-multiline\"]\ntype X = [\nnumber,\nstring\n]\n\n// Options: [\"only-multiline\"]\ntype X = [\nnumber,\nstring,\n]\n\n// Options: [\"never\"]\ntype X = []\n\n// Options: [\"always\"]\ntype X = []\n\n// Options: [\"always-multiline\"]\ntype X = []\n\n// Options: [\"only-multiline\"]\ntype X = []\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-generic-spacing\"></a>\n### <code>generic-spacing</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces consistent spacing within generic type annotation parameters.\n\nThis rule takes one argument. If it is `'never'` then a problem is raised when there is a space surrounding the generic type parameters. If it is `'always'` then a problem is raised when there is no space surrounding the generic type parameters.\n\nThe default value is `'never'`.\n\nThe following patterns are considered problems:\n\n```js\ntype X = Promise< string>\n// Message: There must be no space at start of \"Promise\" generic type annotation\n\n// Options: [\"never\"]\ntype X = Promise<  string>\n// Message: There must be no space at start of \"Promise\" generic type annotation\n\ntype X = FooBar<string >\n// Message: There must be no space at end of \"FooBar\" generic type annotation\n\ntype X = Promise< string >\n// Message: There must be no space at start of \"Promise\" generic type annotation\n// Message: There must be no space at end of \"Promise\" generic type annotation\n\ntype X = Promise< (foo), bar, (((baz))) >\n// Message: There must be no space at start of \"Promise\" generic type annotation\n// Message: There must be no space at end of \"Promise\" generic type annotation\n\n// Options: [\"always\"]\ntype X = Promise<string >\n// Message: There must be a space at start of \"Promise\" generic type annotation\n\n// Options: [\"always\"]\ntype X = FooBar< string>\n// Message: There must be a space at end of \"FooBar\" generic type annotation\n\n// Options: [\"always\"]\ntype X = Promise<string>\n// Message: There must be a space at start of \"Promise\" generic type annotation\n// Message: There must be a space at end of \"Promise\" generic type annotation\n\n// Options: [\"always\"]\ntype X = Promise<(foo), bar, (((baz)))>\n// Message: There must be a space at start of \"Promise\" generic type annotation\n// Message: There must be a space at end of \"Promise\" generic type annotation\n\n// Options: [\"always\"]\ntype X = FooBar<  string >\n// Message: There must be one space at start of \"FooBar\" generic type annotation\n\n// Options: [\"always\"]\ntype X = FooBar< string  >\n// Message: There must be one space at end of \"FooBar\" generic type annotation\n\n// Options: [\"always\"]\ntype X = Promise<  (foo), bar, (((baz)))  >\n// Message: There must be one space at start of \"Promise\" generic type annotation\n// Message: There must be one space at end of \"Promise\" generic type annotation\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = Promise<string>\n\ntype X = Promise<(string)>\n\ntype X = Promise<(foo), bar, (((baz)))>\n\ntype X = Promise<\n  (foo),\n  bar,\n  (((baz))),\n>\n\n// Options: [\"always\"]\ntype X = Promise< string >\n\n// Options: [\"always\"]\ntype X = Promise< (string) >\n\n// Options: [\"always\"]\ntype X = Promise< (foo), bar, (((baz))) >\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-newline-after-flow-annotation\"></a>\n### <code>newline-after-flow-annotation</code>\n\nThis rule requires an empty line after the Flow annotation.\n\n<a name=\"eslint-plugin-flowtype-rules-newline-after-flow-annotation-options\"></a>\n#### Options\n\nThe rule has a string option:\n\n* `\"always\"` (default): Enforces that `@flow` annotations be followed by an empty line, separated by newline (LF)\n* `\"always-windows\"`: Identical to \"always\", but will use a CRLF when autofixing\n* `\"never\"`: Enforces that `@flow` annotations are not followed by empty lines\n\n```js\n{\n  \"rules\": {\n    \"flowtype/newline-after-flow-annotation\": [\n      2,\n      \"always\"\n    ]\n  }\n}\n```\n\n\nThe following patterns are considered problems:\n\n```js\n// @flow\nimport Foo from './foo';\n// Message: Expected newline after flow annotation\n\n// Options: [\"always\"]\n// @flow\nimport Foo from './foo';\n// Message: Expected newline after flow annotation\n\n// Options: [\"always-windows\"]\n// @flow\r\nimport Foo from './foo';\n// Message: Expected newline after flow annotation\n\n// Options: [\"never\"]\n// @flow\n\n\n// Message: Expected no newline after flow annotation\n```\n\nThe following patterns are not considered problems:\n\n```js\n// Options: [\"always\"]\n// @flow\n\nimport Foo from './foo';\n\n// Options: [\"always-windows\"]\n// @flow\r\n\r\nimport Foo from './foo';\n\n// Options: [\"never\"]\n// @flow\nimport Foo from './foo';\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-dupe-keys\"></a>\n### <code>no-dupe-keys</code>\n\nChecks for duplicate properties in Object annotations.\n\nThis rule mirrors ESLint's [no-dupe-keys](http://eslint.org/docs/rules/no-dupe-keys) rule.\n\n```js\n{\n    \"rules\": {\n        \"flowtype/no-dupe-keys\": 2\n    }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\ntype f = { a: number, b: string, a: number }\n// Message: Duplicate property.\n\ntype f = { a: number, b: string, a: string }\n// Message: Duplicate property.\n\ntype f = { get(key: \"a\"): string, get(key: \"a\"): string }\n// Message: Duplicate property.\n\ntype f = { get(key: 1): string, get(key: 1): string }\n// Message: Duplicate property.\n\ntype f = { get(key: 1.1): string, get(key: 1.1): string }\n// Message: Duplicate property.\n\ntype f = { get(key: true): string, get(key: true): string }\n// Message: Duplicate property.\n\ntype f = { get(key: {a: 1}): string, get(key: {a: 1}):string }\n// Message: Duplicate property.\n\nvar a = \"a\"; type f = { get(key: a): string, get(key: a): string }\n// Message: Duplicate property.\n\nvar b = 1; type f = { get(key: b): string, get(key: b): string }\n// Message: Duplicate property.\n\nvar c = true; type f = { get(key: c): string, get(key: c): string }\n// Message: Duplicate property.\n\nvar d = {}; type f = { get(key: d): string, get(key: d): string }\n// Message: Duplicate property.\n\nvar e = []; type f = { get(key: e): string, get(key: e): string }\n// Message: Duplicate property.\n\nvar e = [1, \"a\"]; type f = { get(key: e): string, get(key: e): string }\n// Message: Duplicate property.\n\nfunction fn() {}; type f = { get(key: fn): string, get(key: fn): string }\n// Message: Duplicate property.\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype FooType = { a: number, b: string, c: number }\n\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\ntype FooType = { a: number, b: string, a: number }\n\ntype f = { get(key: \"a\"): string, get(key: \"b\"): string }\n\ntype f = { get(key: 1): string, get(key: 2): string }\n\ntype f = { get(key: 1.1): string, get(key: 1.2): string }\n\ntype f = { get(key: true): string, get(key: false): string }\n\ntype f = { get(key: [\"a\", 1]): string, get(key: [\"a\", 2]): string }\n\ntype f = { get(key: [\"a\", [\"b\", 1]]): string, get(key: [\"a\", [\"b\", 2]]): string }\n\ntype f = { a: number, b: string, c: number }\n\ntype f = { get(key: \"a\"): string, get(key: \"b\"): string }\n\ntype f = { get(key: \"a\"): string, get(key: \"a\", key2: \"b\"): string }\n\ntype f = { get(key: \"a\"): string, get(key: 1): string }\n\ntype f = { get(key: { a: 1 }): string, get(key: { a: 2 }): string}\n\nvar a = {}; var b = {}; type f = { get(key: a): string, get(key: b): string }\n\nvar a = 1; var b = 1; type f = { get(key: a): string, get(key: b): string }\n\ntype a = { b: <C>(config: { ...C, key: string}) => C }\n\nexport interface Foo { get foo(): boolean; get bar(): string; }\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-existential-type\"></a>\n### <code>no-existential-type</code>\n\nDisallows use of the existential type (*). [See more](https://flow.org/en/docs/types/utilities/#toc-existential-type)\n\n```js\n{\n  \"rules\": {\n    \"flowtype/no-existential-type\": 2\n  }\n}\n```\n\n\nThe following patterns are considered problems:\n\n```js\ntype T = *;\n// Message: Unexpected use of existential type (*).\n\ntype T = U<*, *>;\n// Message: Unexpected use of existential type (*).\n// Message: Unexpected use of existential type (*).\n\nconst f: (*) => null = () => null;\n// Message: Unexpected use of existential type (*).\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype T = string | null\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-flow-fix-me-comments\"></a>\n### <code>no-flow-fix-me-comments</code>\n\nDisallows `$FlowFixMe` comment suppressions.\n\nThis is especially useful as a warning to ensure instances of `$FlowFixMe` in your codebase get fixed over time.\n\n<a name=\"eslint-plugin-flowtype-rules-no-flow-fix-me-comments-options-1\"></a>\n#### Options\n\nThis rule takes an optional RegExp that comments a text RegExp that makes the supression valid.\n\n```js\n{\n    \"rules\": {\n        \"flowtype/no-flow-fix-me-comments\": [\n            1,\n            \"TODO\\s+[0-9]+\"\n        ]\n    }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\n// $FlowFixMe I am doing something evil here\nconst text = 'HELLO';\n// Message: $FlowFixMe is treated as `any` and should be fixed.\n\n// Options: [\"TODO [0-9]+\"]\n// $FlowFixMe I am doing something evil here\nconst text = 'HELLO';\n// Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/TODO [0-9]+/`.\n\n// Options: [\"TODO [0-9]+\"]\n// $FlowFixMe TODO abc 47 I am doing something evil here\nconst text = 'HELLO';\n// Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/TODO [0-9]+/`.\n\n// $$FlowFixMeProps I am doing something evil here\nconst text = 'HELLO';\n// Message: $FlowFixMe is treated as `any` and should be fixed.\n\n// Options: [\"TODO [0-9]+\"]\n// $FlowFixMeProps I am doing something evil here\nconst text = 'HELLO';\n// Message: $FlowFixMe is treated as `any` and should be fixed. Fix it or match `/TODO [0-9]+/`.\n```\n\nThe following patterns are not considered problems:\n\n```js\nconst text = 'HELLO';\n\n// Options: [\"TODO [0-9]+\"]\n// $FlowFixMe TODO 48\nconst text = 'HELLO';\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-mixed\"></a>\n### <code>no-mixed</code>\n\nWarns against \"mixed\" type annotations.\nThese types are not strict enough and could often be made more specific.\n\nThe following patterns are considered problems:\n\nThe following patterns are considered problems:\n\n```js\nfunction foo(thing): mixed {}\n// Message: Unexpected use of mixed type\n\nfunction foo(thing): Promise<mixed> {}\n// Message: Unexpected use of mixed type\n\nfunction foo(thing): Promise<Promise<mixed>> {}\n// Message: Unexpected use of mixed type\n```\n\nThe following patterns are not considered problems:\n\n```js\nfunction foo(thing): string {}\n\nfunction foo(thing): Promise<string> {}\n\nfunction foo(thing): Promise<Promise<string>> {}\n\n(foo?: string) => {}\n\n(foo: ?string) => {}\n\n(foo: { a: string }) => {}\n\n(foo: { a: ?string }) => {}\n\n(foo: string[]) => {}\n\ntype Foo = string\n\ntype Foo = { a: string }\n\ntype Foo = { (a: string): string }\n\nfunction foo(thing: string) {}\n\nvar foo: string\n\nclass Foo { props: string }\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-mutable-array\"></a>\n### <code>no-mutable-array</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nRequires use of [`$ReadOnlyArray`](https://github.com/facebook/flow/blob/v0.46.0/lib/core.js#L185) instead of just `Array` or array [shorthand notation](https://flow.org/en/docs/types/arrays/#toc-array-type-shorthand-syntax). `$ReadOnlyArray` is immutable array collection type and the superclass of Array and tuple types in Flow. Use of `$ReadOnlyArray` instead of `Array` can solve some \"problems\" in typing with Flow (e.g., [1](https://github.com/facebook/flow/issues/3425), [2](https://github.com/facebook/flow/issues/4251)).\n\nGeneral reasons for using immutable data structures:\n\n* They are simpler to construct, test, and use\n* They help to avoid temporal coupling\n* Their usage is side-effect free (no defensive copies)\n* Identity mutability problem is avoided\n* They always have failure atomicity\n* They are much easier to cache\n\nNote that initialization of a variable with an empty array is considered valid (e.g., `const values: Array<string> = [];`). This behavior resembles the behavior of Flow's [unsealed objects](https://flow.org/en/docs/types/objects/#toc-unsealed-objects), as it is assumed that empty array is intended to be mutated.\n\nThe following patterns are considered problems:\n\n```js\ntype X = Array<string>\n// Message: Use \"$ReadOnlyArray\" instead of \"Array\"\n\ntype X = string[]\n// Message: Use \"$ReadOnlyArray\" instead of array shorthand notation\n\nconst values: Array<Array<string>> = [];\n// Message: Use \"$ReadOnlyArray\" instead of \"Array\"\n\nlet values: Array<Array<string>>;\n// Message: Use \"$ReadOnlyArray\" instead of \"Array\"\n// Message: Use \"$ReadOnlyArray\" instead of \"Array\"\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype X = $ReadOnlyArray<string>\n\nconst values: Array<$ReadOnlyArray<string>> = [];\n\nconst values: $ReadOnlyArray<string>[] = [];\n\nconst values: Array<$ReadOnlyArray<string>> = new Array();\n\nconst values: Array<$ReadOnlyArray<string>> = Array();\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-primitive-constructor-types\"></a>\n### <code>no-primitive-constructor-types</code>\n\nDisallows use of primitive constructors as types, such as `Boolean`, `Number` and `String`. [See more](https://flowtype.org/docs/builtins.html).\n\n```js\n{\n    \"rules\": {\n        \"flowtype/no-primitive-constructor-types\": 2\n    }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\ntype x = Number\n// Message: Unexpected use of Number constructor type.\n\ntype x = String\n// Message: Unexpected use of String constructor type.\n\ntype x = Boolean\n// Message: Unexpected use of Boolean constructor type.\n\ntype x = { a: Number }\n// Message: Unexpected use of Number constructor type.\n\ntype x = { a: String }\n// Message: Unexpected use of String constructor type.\n\ntype x = { a: Boolean }\n// Message: Unexpected use of Boolean constructor type.\n\n(x: Number) => {}\n// Message: Unexpected use of Number constructor type.\n\n(x: String) => {}\n// Message: Unexpected use of String constructor type.\n\n(x: Boolean) => {}\n// Message: Unexpected use of Boolean constructor type.\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype x = number\n\ntype x = string\n\ntype x = boolean\n\ntype x = { a: number }\n\ntype x = { a: string }\n\ntype x = { a: boolean }\n\n(x: number) => {}\n\n(x: string) => {}\n\n(x: boolean) => {}\n\ntype x = MyNumber\n\ntype x = MyString\n\ntype x = MyBoolean\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-types-missing-file-annotation\"></a>\n### <code>no-types-missing-file-annotation</code>\n\nDisallows Flow type imports, aliases, and annotations in files missing a valid Flow file declaration (or a @noflow annotation).\n\n```js\n{\n    \"rules\": {\n        \"flowtype/no-types-missing-file-annotation\": 2\n    }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\nconst x: number = 42;\n// Message: Type annotations require valid Flow declaration.\n\ntype FooType = number;\n// Message: Type aliases require valid Flow declaration.\n\nimport type A from \"a\"\n// Message: Type imports require valid Flow declaration.\n\nimport type {A} from \"a\"\n// Message: Type imports require valid Flow declaration.\n\nimport {type A} from \"a\"\n// Message: Type imports require valid Flow declaration.\n\nexport type {A} from \"a\"\n// Message: Type exports require valid Flow declaration.\n\nfunction t<T>(): T{}\n// Message: Type annotations require valid Flow declaration.\n\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\nconst x: number = 42;\n// Message: Type annotations require valid Flow declaration.\n```\n\nThe following patterns are not considered problems:\n\n```js\n// @flow\nconst x: number = 42;\n\n/* @flow weak */\ntype FooType = number;\n\n/* @noflow */\ntype FooType = number;\n\n/* @noflow */\nimport type A from \"a\"\n\n/* @noflow */\nimport {type A} from \"a\"\n\n/* @noflow */\nexport type {A} from \"a\"\n\n// an unrelated comment\n// @flow\nexport type {A} from \"a\"\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-unused-expressions\"></a>\n### <code>no-unused-expressions</code>\n\nAn extension of [ESLint's `no-unused-expressions`](https://eslint.org/docs/rules/no-unused-expressions).\nThis rule ignores type cast expressions, but otherwise behaves the same as ESLint's\n`no-unused-expressions`.\n\nBare type casts are useful, for example to assert the exhaustiveness of a `switch`:\n\n```js\ntype Action\n  = { type: 'FOO', doFoo: (_: number) => void }\n  | { type: 'BAR', doBar: (_: string) => void };\n\ntype State = { foo: number, bar: string };\n\nfunction runFooBar(action: Action, state: State): void {\n  switch (action.type) {\n    case 'FOO':\n      doFoo(state.foo);\n      break;\n    case 'BAR':\n      doBar(state.bar);\n      break;\n    default:\n      (action: empty);  // type error when `Action` is extended with new types\n      console.error(`Impossible action: ${action.toString()}`);\n  }\n}\n```\n\nThis rule takes the same arguments as ESLint's `no-unused-expressions`. See\n[that rule's documentation](https://eslint.org/docs/rules/no-unused-expressions) for details.\n\nThe following patterns are considered problems:\n\n```js\nfoo + 1\n// Message: Expected an assignment or function call and instead saw an expression.\n```\n\nThe following patterns are not considered problems:\n\n```js\n(foo: number)\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-no-weak-types\"></a>\n### <code>no-weak-types</code>\n\nWarns against weak type annotations *any*, *Object* and *Function*.\nThese types can cause flow to silently skip over portions of your code,\nwhich would have otherwise caused type errors.\n\nThis rule optionally takes one argument, an object to configure which type warnings to enable. By default, all of the\nwarnings are enabled. e.g. to disable the `any` warning (allowing it to exist in your code), while continuing to warn\nabout `Object` and `Function`:\n\n```js\n{\n    \"rules\": {\n        \"flowtype/no-weak-types\": [2, {\n            \"any\": false,\n            \"Object\": true,\n            \"Function\": true\n        }]\n    }\n}\n\n// or, the following is equivalent as default is true:\n\n{\n    \"rules\": {\n        \"flowtype/no-weak-types\": [2, {\n            \"any\": false\n        }]\n    }\n}\n```\n\nThe following patterns are considered problems:\n\n```js\nfunction foo(thing): any {}\n// Message: Unexpected use of weak type \"any\"\n\nfunction foo(thing): Promise<any> {}\n// Message: Unexpected use of weak type \"any\"\n\nfunction foo(thing): Promise<Promise<any>> {}\n// Message: Unexpected use of weak type \"any\"\n\nfunction foo(thing): Object {}\n// Message: Unexpected use of weak type \"Object\"\n\nfunction foo(thing): Promise<Object> {}\n// Message: Unexpected use of weak type \"Object\"\n\nfunction foo(thing): Promise<Promise<Object>> {}\n// Message: Unexpected use of weak type \"Object\"\n\nfunction foo(thing): Function {}\n// Message: Unexpected use of weak type \"Function\"\n\nfunction foo(thing): Promise<Function> {}\n// Message: Unexpected use of weak type \"Function\"\n\nfunction foo(thing): Promise<Promise<Function>> {}\n// Message: Unexpected use of weak type \"Function\"\n\n(foo: any) => {}\n// Message: Unexpected use of weak type \"any\"\n\n(foo: Function) => {}\n// Message: Unexpected use of weak type \"Function\"\n\n(foo?: any) => {}\n// Message: Unexpected use of weak type \"any\"\n\n(foo?: Function) => {}\n// Message: Unexpected use of weak type \"Function\"\n\n(foo: { a: any }) => {}\n// Message: Unexpected use of weak type \"any\"\n\n(foo: { a: Object }) => {}\n// Message: Unexpected use of weak type \"Object\"\n\n(foo: any[]) => {}\n// Message: Unexpected use of weak type \"any\"\n\ntype Foo = any\n// Message: Unexpected use of weak type \"any\"\n\ntype Foo = Function\n// Message: Unexpected use of weak type \"Function\"\n\ntype Foo = { a: any }\n// Message: Unexpected use of weak type \"any\"\n\ntype Foo = { a: Object }\n// Message: Unexpected use of weak type \"Object\"\n\ntype Foo = { (a: Object): string }\n// Message: Unexpected use of weak type \"Object\"\n\ntype Foo = { (a: string): Function }\n// Message: Unexpected use of weak type \"Function\"\n\nfunction foo(thing: any) {}\n// Message: Unexpected use of weak type \"any\"\n\nfunction foo(thing: Object) {}\n// Message: Unexpected use of weak type \"Object\"\n\nvar foo: Function\n// Message: Unexpected use of weak type \"Function\"\n\nvar foo: Object\n// Message: Unexpected use of weak type \"Object\"\n\nclass Foo { props: any }\n// Message: Unexpected use of weak type \"any\"\n\nclass Foo { props: Object }\n// Message: Unexpected use of weak type \"Object\"\n\nvar foo: any\n// Message: Unexpected use of weak type \"any\"\n\n// Options: [{\"Function\":false}]\ntype X = any; type Y = Function; type Z = Object\n// Message: Unexpected use of weak type \"any\"\n// Message: Unexpected use of weak type \"Object\"\n\n// Options: [{\"any\":false,\"Object\":false}]\ntype X = any; type Y = Function; type Z = Object\n// Message: Unexpected use of weak type \"Function\"\n```\n\nThe following patterns are not considered problems:\n\n```js\nfunction foo(thing): string {}\n\nfunction foo(thing): Promise<string> {}\n\nfunction foo(thing): Promise<Promise<string>> {}\n\n(foo?: string) => {}\n\n(foo: ?string) => {}\n\n(foo: { a: string }) => {}\n\n(foo: { a: ?string }) => {}\n\n(foo: string[]) => {}\n\ntype Foo = string\n\ntype Foo = { a: string }\n\ntype Foo = { (a: string): string }\n\nfunction foo(thing: string) {}\n\nvar foo: string\n\nclass Foo { props: string }\n\n// Options: [{\"any\":false,\"Object\":false}]\ntype X = any; type Y = Object\n\n// Options: [{\"Function\":false}]\ntype X = Function\n\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\nfunction foo(thing): Function {}\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-object-type-delimiter\"></a>\n### <code>object-type-delimiter</code>\n\n_The `--fix` option on the command line automatically fixes problems reported by this rule._\n\nEnforces consistent separators between properties in Flow object types.\n\nThis rule takes one argument.\n\nIf it is `'comma'` then a problem is raised when using `;` as a separator.\n\nIf it is `'semicolon'` then a problem is raised when using `,` as a separator.\n\nThe default value is `'comma'`.\n\n_This rule is ported from `babel/flow-object-type`, however the default option was changed._\n\nThe following patterns are considered problems:\n\n```js\n// Options: [\"semicolon\"]\ntype Foo = { a: Foo, b: Bar }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ntype Foo = { a: Foo; b: Bar }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ntype Foo = { [a: string]: Foo, [b: string]: Bar }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ntype Foo = { [a: string]: Foo; [b: string]: Bar }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ntype Foo = { (): Foo, (): Bar }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ntype Foo = { (): Foo; (): Bar }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ndeclare class Foo { a: Foo, }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ndeclare class Foo { a: Foo; }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ndeclare class Foo { [a: string]: Foo, }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ndeclare class Foo { a: Foo; }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ndeclare class Foo { (): Foo, }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ndeclare class Foo { (): Foo; }\n// Message: Prefer commas to semicolons in object and class types\n\n// Options: [\"semicolon\"]\ndeclare class Foo { static (): Foo, }\n// Message: Prefer semicolons to commas in object and class types\n\n// Options: [\"comma\"]\ndeclare class Foo { static (): Foo; }\n// Message: Prefer commas to semicolons in object and class types\n```\n\nThe following patterns are not considered problems:\n\n```js\n// Options: [\"semicolon\"]\ntype Foo = { a: Foo; b: Bar }\n\n// Options: [\"comma\"]\ntype Foo = { a: Foo, b: Bar }\n\n// Options: [\"semicolon\"]\ntype Foo = { [a: string]: Foo; [b: string]: Bar }\n\n// Options: [\"comma\"]\ntype Foo = { [a: string]: Foo, [b: string]: Bar }\n\n// Options: [\"semicolon\"]\ntype Foo = { (): Foo; (): Bar }\n\n// Options: [\"comma\"]\ntype Foo = { (): Foo, (): Bar }\n\ntype Foo = { a: Foo, b: Bar }\n\ntype Foo = { [a: string]: Foo, [b: string]: Bar }\n\ntype Foo = { (): Foo, (): Bar }\n\n// Options: [\"semicolon\"]\ndeclare class Foo { a: Foo; }\n\n// Options: [\"comma\"]\ndeclare class Foo { a: Foo, }\n\n// Options: [\"semicolon\"]\ndeclare class Foo { [a: string]: Foo; }\n\n// Options: [\"comma\"]\ndeclare class Foo { [a: string]: Foo, }\n\n// Options: [\"semicolon\"]\ndeclare class Foo { (): Foo; }\n\n// Options: [\"comma\"]\ndeclare class Foo { (): Foo, }\n\n// Options: [\"semicolon\"]\n// Settings: {\"flowtype\":{\"onlyFilesWithFlowAnnotation\":true}}\ntype Foo = { a: Foo, b: Bar }\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-require-compound-type-alias\"></a>\n### <code>require-compound-type-alias</code>\n\nRequires to make a type alias for all [union](https://flow.org/en/docs/types/unions/) and [intersection](https://flow.org/en/docs/types/intersections/) types. If these are used in \"raw\" forms it might be tempting to just copy&paste them around the code. However, this brings sort of a source code pollution and unnecessary changes on several parts when these compound types need to be changed.\n\n<a name=\"eslint-plugin-flowtype-rules-require-compound-type-alias-options-2\"></a>\n#### Options\n\nThe rule has a string option:\n\n* `\"never\"`\n* `\"always\"`\n\nThe default value is `\"always\"`.\n\nThe following patterns are considered problems:\n\n```js\nfunction foo(bar: \"A\" | \"B\") {}\n// Message: All union types must be declared with named type alias.\n\nconst foo: \"A\" | \"B\" = \"A\";\n// Message: All union types must be declared with named type alias.\n\ntype Foo = { bar: \"A\" | \"B\" };\n// Message: All union types must be declared with named type alias.\n\nfunction foo(bar: { n: number } | { s: string }) {}\n// Message: All union types must be declared with named type alias.\n\nfunction foo(bar: { n: number } & { s: string }) {}\n// Message: All intersection types must be declared with named type alias.\n\nconst foo: { n: number } & { s: string } = { n: 0, s: \"\" };\n// Message: All intersection types must be declared with named type alias.\n\ntype Foo = { bar: { n: number } & { s: string } };\n// Message: All intersection types must be declared with named type alias.\n\nfunction foo(bar: { n: number } & { s: string }) {}\n// Message: All intersection types must be declared with named type alias.\n```\n\nThe following patterns are not considered problems:\n\n```js\ntype Foo = \"A\" | \"B\";\n\ntype Bar = \"A\" | \"B\"; function foo(bar: Bar) {}\n\ntype Foo = { disjoint: \"A\", n: number } | { disjoint: \"B\", s: string };\n\ntype Foo = { n: number } & { s: string };\n\ntype Bar = { n: number } & { s: string }; function foo(bar: Bar) {}\n\n// Options: [\"never\"]\nfunction foo(bar: \"A\" | \"B\") {}\n\n// Options: [\"never\"]\nfunction foo(bar: { n: number } & { s: string }) {}\n```\n\n\n\n<a name=\"eslint-plugin-flowtype-rules-require-exact-type\"></a>\n### <code>require-exact-type</code>\n\n_The `--fix` option on the command"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 545770}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2844115}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 13089931}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 38707021}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 66398537}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 117693091}], "dependentsCount": 3644, "starsCount": 17}, "github": {"starsCount": 1053, "forksCount": 136, "subscribersCount": 9, "issues": {"count": 447, "openCount": 16, "distribution": {"3600": 73, "10800": 25, "32400": 36, "97200": 45, "291600": 37, "874800": 42, "2624400": 19, "7873200": 30, "23619600": 38, "70858800": 38, "212576400": 64}, "isDisabled": false}, "contributors": [{"username": "gajus", "commitsCount": 203}, {"username": "danharper", "commitsCount": 64}, {"username": "pnevyk", "commitsCount": 17}, {"username": "goodmind", "commitsCount": 6}, {"username": "MichaelDeBoey", "commitsCount": 5}, {"username": "deecewan", "commitsCount": 5}, {"username": "zertosh", "commitsCount": 5}, {"username": "HsuTing", "commitsCount": 4}, {"username": "ahstro", "commitsCount": 4}, {"username": "danwang", "commitsCount": 4}, {"username": "justinanastos", "commitsCount": 4}, {"username": "kangax", "commitsCount": 4}, {"username": "grit96", "commitsCount": 3}, {"username": "jedwards1211", "commitsCount": 3}, {"username": "vhf", "commitsCount": 3}, {"username": "Marcosld", "commitsCount": 2}, {"username": "SebastienGllmt", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "cloudkite", "commitsCount": 2}, {"username": "dikmax", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "lyleunderwood", "commitsCount": 2}, {"username": "micaste", "commitsCount": 2}, {"username": "pascalduez", "commitsCount": 2}, {"username": "xunuoi", "commitsCount": 2}, {"username": "zpao", "commitsCount": 2}, {"username": "AmauryLiet", "commitsCount": 1}, {"username": "BenoitZugmeyer", "commitsCount": 1}, {"username": "KevinGrandon", "commitsCount": 1}, {"username": "Kiwka", "commitsCount": 1}, {"username": "MarkyMarkMcDonald", "commitsCount": 1}, {"username": "Robdel12", "commitsCount": 1}, {"username": "STRML", "commitsCount": 1}, {"username": "SamirTalwar", "commitsCount": 1}, {"username": "TheSavior", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaron-harvey", "commitsCount": 1}, {"username": "ffxsam", "commitsCount": 1}, {"username": "frodosamoa", "commitsCount": 1}, {"username": "glennreyes", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "jez", "commitsCount": 1}, {"username": "joonhocho", "commitsCount": 1}, {"username": "leoselig", "commitsCount": 1}, {"username": "mkscrg", "commitsCount": 1}, {"username": "mkwtys", "commitsCount": 1}, {"username": "mwiencek", "commitsCount": 1}, {"username": "nwoltman", "commitsCount": 1}, {"username": "object88", "commitsCount": 1}, {"username": "scott-silver", "commitsCount": 1}, {"username": "sobolevn", "commitsCount": 1}, {"username": "sompylasar", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "strutcode", "commitsCount": 1}, {"username": "trygveaa", "commitsCount": 1}, {"username": "uforic", "commitsCount": 1}, {"username": "unRob", "commitsCount": 1}, {"username": "valscion", "commitsCount": 1}, {"username": "wKich", "commitsCount": 1}, {"username": "wyze", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 21}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 25}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 27}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 62}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 152628, "testsSize": 236282, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/eslint-plugin-flowtype.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/eslint-plugin-flowtype.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-flowtype.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/gajus/eslint-plugin-flowtype/master.svg?style=flat-square", "service": "https://api.travis-ci.org/gajus/eslint-plugin-flowtype.svg?branch=master", "shields": "https://img.shields.io/travis/gajus/eslint-plugin-flowtype/master.svg", "content": "https://img.shields.io/travis/gajus/eslint-plugin-flowtype/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 1275, "downloadsCount": 12902340.333333334, "downloadsAcceleration": 40079.53628234398, "dependentsCount": 3644}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7519979544509319, "detail": {"quality": 0.9649936822011835, "popularity": 0.6547614755921246, "maintenance": 0.6666666666666666}}}}, {"@vue/cli-service": {"analyzedAt": "2020-06-12T13:14:11.304Z", "collected": {"metadata": {"name": "@vue/cli-service", "scope": "vue", "version": "4.4.4", "description": "local service for vue-cli projects", "keywords": ["vue", "cli"], "date": "2020-06-12T13:01:21.440Z", "author": {"name": "Evan You"}, "publisher": {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, "maintainers": [{"username": "akryum", "email": "guillaume.b.chau@gmail.com"}, {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue-cli.git", "directory": "packages/@vue/cli-service"}, "links": {"npm": "https://www.npmjs.com/package/%40vue%2Fcli-service", "homepage": "https://cli.vuejs.org/", "repository": "https://github.com/vuejs/vue-cli", "bugs": "https://github.com/vuejs/vue-cli/issues"}, "license": "MIT", "dependencies": {"@intervolga/optimize-cssnano-plugin": "^1.0.5", "@soda/friendly-errors-webpack-plugin": "^1.7.1", "@soda/get-current-script": "^1.0.0", "@vue/cli-overlay": "^4.4.4", "@vue/cli-plugin-router": "^4.4.4", "@vue/cli-plugin-vuex": "^4.4.4", "@vue/cli-shared-utils": "^4.4.4", "@vue/component-compiler-utils": "^3.1.2", "@vue/preload-webpack-plugin": "^1.1.0", "@vue/web-component-wrapper": "^1.2.0", "acorn": "^7.2.0", "acorn-walk": "^7.1.1", "address": "^1.1.2", "autoprefixer": "^9.8.0", "browserslist": "^4.12.0", "cache-loader": "^4.1.0", "case-sensitive-paths-webpack-plugin": "^2.3.0", "cli-highlight": "^2.1.4", "clipboardy": "^2.3.0", "cliui": "^6.0.0", "copy-webpack-plugin": "^5.1.1", "css-loader": "^3.5.3", "cssnano": "^4.1.10", "debug": "^4.1.1", "default-gateway": "^5.0.5", "dotenv": "^8.2.0", "dotenv-expand": "^5.1.0", "file-loader": "^4.2.0", "fs-extra": "^7.0.1", "globby": "^9.2.0", "hash-sum": "^2.0.0", "html-webpack-plugin": "^3.2.0", "launch-editor-middleware": "^2.2.1", "lodash.defaultsdeep": "^4.6.1", "lodash.mapvalues": "^4.6.0", "lodash.transform": "^4.6.0", "mini-css-extract-plugin": "^0.9.0", "minimist": "^1.2.5", "pnp-webpack-plugin": "^1.6.4", "portfinder": "^1.0.26", "postcss-loader": "^3.0.0", "ssri": "^7.1.0", "terser-webpack-plugin": "^2.3.6", "thread-loader": "^2.1.3", "url-loader": "^2.2.0", "vue-loader": "^15.9.2", "vue-style-loader": "^4.1.2", "webpack": "^4.0.0", "webpack-bundle-analyzer": "^3.8.0", "webpack-chain": "^6.4.0", "webpack-dev-server": "^3.11.0", "webpack-merge": "^4.2.2"}, "devDependencies": {"fibers": ">= 3.1.1 <5.0.0", "sass": "^1.26.5", "sass-loader": "^8.0.2", "vue": "^2.6.11", "vue-router": "^3.2.0", "vue-template-compiler": "^2.6.11", "vuex": "^3.4.0"}, "peerDependencies": {"vue-template-compiler": "^2.0.0"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 9}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 43}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 82}], "readme": "# @vue/cli-service\n\n> service for vue-cli\n\n[Full Docs](https://cli.vuejs.org/)"}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 100945}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 591710}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2492800}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6888940}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 12065774}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 20756659}], "dependentsCount": 137, "starsCount": 0}, "github": {"homepage": "https://cli.vuejs.org/", "starsCount": 25540, "forksCount": 4785, "subscribersCount": 665, "issues": {"count": 5558, "openCount": 536, "distribution": {"3600": 1483, "10800": 466, "32400": 537, "97200": 586, "291600": 496, "874800": 456, "2624400": 442, "7873200": 363, "23619600": 335, "70858800": 389, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 914}, {"username": "sodatea", "commitsCount": 727}, {"username": "Akryum", "commitsCount": 51}, {"username": "LinusBorg", "commitsCount": 32}, {"username": "Alex-Sokolov", "commitsCount": 22}, {"username": "cexbrayat", "commitsCount": 11}, {"username": "dhensche", "commitsCount": 11}, {"username": "elevatebart", "commitsCount": 11}, {"username": "jkzing", "commitsCount": 11}, {"username": "zyy7259", "commitsCount": 10}, {"username": "NataliaTepluhina", "commitsCount": 9}, {"username": "pksunkara", "commitsCount": 9}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "kazupon", "commitsCount": 8}, {"username": "Jinjiang", "commitsCount": 7}, {"username": "zigomir", "commitsCount": 7}, {"username": "zhrivodkin", "commitsCount": 6}, {"username": "arcanis", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "morrislaptop", "commitsCount": 4}, {"username": "pburdette", "commitsCount": 4}, {"username": "Haroenv", "commitsCount": 3}, {"username": "KuangPF", "commitsCount": 3}, {"username": "NoelDeMartin", "commitsCount": 3}, {"username": "Turbo87", "commitsCount": 3}, {"username": "arthurdenner", "commitsCount": 3}, {"username": "diogosalazar", "commitsCount": 3}, {"username": "ivansieder", "commitsCount": 3}, {"username": "javoski", "commitsCount": 3}, {"username": "ky-is", "commitsCount": 3}, {"username": "mactanxin", "commitsCount": 3}, {"username": "michalsnik", "commitsCount": 3}, {"username": "rigor789", "commitsCount": 3}, {"username": "sickp", "commitsCount": 3}, {"username": "ulivz", "commitsCount": 3}, {"username": "visualfanatic", "commitsCount": 3}, {"username": "DRBragg", "commitsCount": 2}, {"username": "FrankFang", "commitsCount": 2}, {"username": "Kocal", "commitsCount": 2}, {"username": "PanJiaChen", "commitsCount": 2}, {"username": "SevenOutman", "commitsCount": 2}, {"username": "TheJaredWilcurt", "commitsCount": 2}, {"username": "WilsonLiu95", "commitsCount": 2}, {"username": "YuJianrong", "commitsCount": 2}, {"username": "aberonni", "commitsCount": 2}, {"username": "betweenbrain", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "chiaweilee", "commitsCount": 2}, {"username": "chrisvfritz", "commitsCount": 2}, {"username": "clorichel", "commitsCount": 2}, {"username": "defead", "commitsCount": 2}, {"username": "hsxfjames", "commitsCount": 2}, {"username": "jamessouth", "commitsCount": 2}, {"username": "jbruni", "commitsCount": 2}, {"username": "jeneser", "commitsCount": 2}, {"username": "kidonng", "commitsCount": 2}, {"username": "ktsn", "commitsCount": 2}, {"username": "llccing", "commitsCount": 2}, {"username": "nanomad", "commitsCount": 2}, {"username": "ntnyq", "commitsCount": 2}, {"username": "phanan", "commitsCount": 2}, {"username": "remote-star", "commitsCount": 2}, {"username": "shadow-light", "commitsCount": 2}, {"username": "tkint", "commitsCount": 2}, {"username": "toBeTheLight", "commitsCount": 2}, {"username": "trickstival", "commitsCount": 2}, {"username": "troy351", "commitsCount": 2}, {"username": "whoisjorge", "commitsCount": 2}, {"username": "xiaohp", "commitsCount": 2}, {"username": "xsbchen", "commitsCount": 2}, {"username": "zrh122", "commitsCount": 2}, {"username": "374632897", "commitsCount": 1}, {"username": "Akenokoru", "commitsCount": 1}, {"username": "AlbertBrand", "commitsCount": 1}, {"username": "EzioKissshot", "commitsCount": 1}, {"username": "Rolanddoda", "commitsCount": 1}, {"username": "Timibadass", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "codeDebugTest", "commitsCount": 1}, {"username": "darrylkuhn", "commitsCount": 1}, {"username": "dtcz", "commitsCount": 1}, {"username": "epixian", "commitsCount": 1}, {"username": "fxxjdedd", "commitsCount": 1}, {"username": "godkun", "commitsCount": 1}, {"username": "gtsiolis", "commitsCount": 1}, {"username": "jaireina", "commitsCount": 1}, {"username": "janispritzkau", "commitsCount": 1}, {"username": "jinzhan", "commitsCount": 1}, {"username": "lucaswerkmeister", "commitsCount": 1}, {"username": "manico", "commitsCount": 1}, {"username": "megos", "commitsCount": 1}, {"username": "motla", "commitsCount": 1}, {"username": "qirh", "commitsCount": 1}, {"username": "simon300000", "commitsCount": 1}, {"username": "stefano-b", "commitsCount": 1}, {"username": "tommyo", "commitsCount": 1}, {"username": "yeyan1996", "commitsCount": 1}, {"username": "zapzqc", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 7}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 27}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 84}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 203}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 523}], "statuses": [{"context": "ci/circleci: group-4", "state": "pending"}, {"context": "ci/circleci: group-2", "state": "pending"}, {"context": "ci/circleci: group-3", "state": "pending"}, {"context": "ci/circleci: group-1", "state": "pending"}, {"context": "ci/circleci: cli-ui", "state": "pending"}, {"context": "ci/circleci: install", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}]}, "source": {"files": {"readmeSize": 79, "testsSize": 66920, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg?style=shield", "service": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev?svg=true", "service": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev", "shields": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.svg", "content": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "outdatedDependencies": {"globby": {"required": "^9.2.0", "stable": "11.0.1", "latest": "11.0.1"}, "ssri": {"required": "^7.1.0", "stable": "8.0.0", "latest": "8.0.0"}, "default-gateway": {"required": "^5.0.5", "stable": "6.0.1", "latest": "6.0.1"}, "url-loader": {"required": "^2.2.0", "stable": "4.1.0", "latest": "4.1.0"}, "file-loader": {"required": "^4.2.0", "stable": "6.0.0", "latest": "6.0.0"}, "copy-webpack-plugin": {"required": "^5.1.1", "stable": "6.0.2", "latest": "6.0.2"}, "fs-extra": {"required": "^7.0.1", "stable": "9.0.1", "latest": "9.0.1"}, "terser-webpack-plugin": {"required": "^2.3.6", "stable": "3.0.3", "latest": "3.0.3"}, "html-webpack-plugin": {"required": "^3.2.0", "stable": "4.3.0", "latest": "4.3.0"}}}}, "evaluation": {"quality": {"carefulness": 0.69505, "tests": 0.4, "health": 0.6538461538461539, "branding": 0.7}, "popularity": {"communityInterest": 31088, "downloadsCount": 2296313.3333333335, "downloadsAcceleration": 9097.573325722984, "dependentsCount": 137}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6505473928119354}}, "score": {"final": 0.7983698025195725, "detail": {"quality": 0.8428505005187275, "popularity": 0.5619141005099918, "maintenance": 0.9966991919584488}}}}, {"grunt-contrib-clean": {"analyzedAt": "2020-06-14T05:26:27.185Z", "collected": {"metadata": {"name": "grunt-contrib-clean", "scope": "unscoped", "version": "2.0.0", "description": "Clean files and folders", "keywords": ["gruntplugin", "clean", "cleanup", "remove", "delete", "del", "rm", "rmrf", "rimraf"], "date": "2018-09-10T15:08:10.954Z", "author": {"name": "Grunt Team", "url": "https://gruntjs.com/"}, "publisher": {"username": "vladikoff", "email": "vlad@vladikoff.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "jmeas", "email": "jellyes2@gmail.com"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "Tim Branyen", "url": "http://tbranyen.com/"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com/"}, {"name": "Chris Talkington", "url": "http://christalkington.com/"}, {"name": "Sebastian Golasch", "url": "http://www.asciidisco.com/"}, {"name": "Vlad Filippov", "url": "http://vf.io"}, {"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com/"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt-contrib-clean.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt-contrib-clean", "homepage": "https://github.com/gruntjs/grunt-contrib-clean#readme", "repository": "https://github.com/gruntjs/grunt-contrib-clean", "bugs": "https://github.com/gruntjs/grunt-contrib-clean/issues"}, "license": "MIT", "dependencies": {"async": "^2.6.1", "rimraf": "^2.6.2"}, "devDependencies": {"dir-compare": "^1.4.0", "grunt": "^1.0.3", "grunt-contrib-internal": "^3.1.0", "grunt-contrib-jshint": "^1.1.0", "grunt-contrib-nodeunit": "^2.0.0"}, "peerDependencies": {"grunt": ">=0.4.5"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# grunt-contrib-clean v2.0.0 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-clean.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-clean) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/li28411ceq3n833d/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-clean/branch/master)\n\n> Clean files and folders\n\n\n\n## Getting Started\n\nIf you haven't used [Grunt](https://gruntjs.com/) before, be sure to check out the [Getting Started](https://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](https://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-contrib-clean --save-dev\n```\n\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-contrib-clean');\n```\n\n*This plugin was designed to work with Grunt 0.4.x. If you're still using grunt v0.3.x it's strongly recommended that [you upgrade](https://gruntjs.com/upgrading-from-0.3-to-0.4), but in case you can't please use [v0.3.2](https://github.com/gruntjs/grunt-contrib-clean/tree/grunt-0.3-stable).*\n\n\n\n## Clean task\n_Run this task with the `grunt clean` command._\n\nTask targets, files and options may be specified according to the grunt [Configuring tasks](https://gruntjs.com/configuring-tasks) guide.\n\n*Due to the destructive nature of this task, always be cautious of the paths you clean.*\n### Options\n\n#### force\nType: `Boolean`  \nDefault: `false`\n\nThis overrides this task from blocking deletion of folders outside current working dir (CWD). Use with caution.\n\n#### no-write\nType: `Boolean`  \nDefault: `false`\n\nWill not actually delete any files or directories.\nIf the task is run with the `--verbose` flag, the task will log messages of what files would have be deleted.\n\n_Note: As this task property contains a hyphen, you will need to surround it with quotes._\n\n### Usage Examples\n\nThere are three formats you can use to run this task.\n\n#### Short\n\n```js\nclean: ['path/to/dir/one', 'path/to/dir/two']\n```\n\n#### Medium (specific targets with global options)\n\n```js\nclean: {\n  build: ['path/to/dir/one', 'path/to/dir/two'],\n  release: ['path/to/another/dir/one', 'path/to/another/dir/two']\n},\n```\n\n#### Long (specific targets with per target options)\n\n```js\nclean: {\n  build: {\n    src: ['path/to/dir/one', 'path/to/dir/two']\n  }\n}\n```\n\n\"Compact\" and \"Files Array\" formats support a few [additional properties](https://gruntjs.com/configuring-tasks#files)\nwhich help you deal with hidden files, process dynamic mappings and so on.\n\n#### Globbing Patterns\n\nAlthough documented [in the Grunt Docs](https://gruntjs.com/configuring-tasks#globbing-patterns), here are some globbing pattern examples to achieve some common tasks:\n\n```js\nclean: {\n  folder: ['path/to/dir/'],\n  folder_v2: ['path/to/dir/**'],\n  contents: ['path/to/dir/*'],\n  subfolders: ['path/to/dir/*/'],\n  css: ['path/to/dir/*.css'],\n  all_css: ['path/to/dir/**/*.css']\n}\n```\n\n* __`folder`:__ Deletes the `dir/` folder\n* __`folder_v2`:__ Deletes the `dir/` folder\n* __`contents`:__ Keeps the `dir/` folder, but deletes the contents\n* __`subfolders`:__ Keeps the files inside the `dir/` folder, but deletes all subfolders\n* __`css`:__ Deletes all `*.css` files inside the `dir/` folder, excluding subfolders\n* __`all_css`:__ Deletes all `*.css` files inside the `dir/` folder and its subfolders\n\n##### Skipping Files\n\n```js\n// Deletes all .js files, but skips min.js files\nclean: {\n  js: ['path/to/dir/*.js', '!path/to/dir/*.min.js']\n}\n```\n\n###### Options\n\nOptions can be specified for all `clean` tasks and for each `clean:target`.\n\n####### All tasks\n\n```js\n// Prevents all targets from deleting any files\nclean: {\n  options: {\n    'no-write': true\n  },\n  build: ['dev/build'],\n  release: ['dist']\n}\n```\n\n####### Per-target\n\n```js\n// Will delete files for `build` target\n// Will NOT delete files for `release` target\nclean: {\n  build: ['dev/build'],\n  release: {\n    options: {\n      'no-write': true\n    },\n    src: ['dist']\n  }\n}\n```\n\n\n## Release History\n\n * 2018-09-08\u2003\u2003\u2003v2.0.0\u2003\u2003\u2003Update all dependencies. Drop Node.js < 6 support.\n * 2017-04-12\u2003\u2003\u2003v1.1.0\u2003\u2003\u2003Update grunt to 1.0.0. Updates to docs and changelog. Update internal modules.\n * 2016-02-15\u2003\u2003\u2003v1.0.0\u2003\u2003\u2003Drop support for Node.js v0.8. Grunt peer dependency tagged `>= 0.4.5`. Dependency updates.\n * 2015-11-13\u2003\u2003\u2003v0.7.0\u2003\u2003\u2003Dependency updates.\n * 2014-07-27\u2003\u2003\u2003v0.6.0\u2003\u2003\u2003Less verbose output. README updates.\n * 2013-07-15\u2003\u2003\u2003v0.5.0\u2003\u2003\u2003Use rimraf directly, version 2.2.1 to fix issue on Windows. Add `no-write` option to mimic `grunt.file.delete` behavior.\n * 2013-04-16\u2003\u2003\u2003v0.4.1\u2003\u2003\u2003Check if file exists to avoid trying to delete a non-existent file.\n * 2013-02-15\u2003\u2003\u2003v0.4.0\u2003\u2003\u2003First official release for Grunt 0.4.0.\n * 2013-01-18\u2003\u2003\u2003v0.4.0rc6\u2003\u2003\u2003Updating grunt/gruntplugin dependencies to rc6. Changing in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\n * 2013-01-09\u2003\u2003\u2003v0.4.0rc5\u2003\u2003\u2003Updating to work with grunt v0.4.0rc5. Switching to `this.filesSrc` API.\n * 2012-12-07\u2003\u2003\u2003v0.4.0a\u2003\u2003\u2003Conversion to grunt v0.4 conventions. Remove Node.js v0.6 and grunt v0.3 support. Add `force` option to bypass CWD check.\n * 2012-09-23\u2003\u2003\u2003v0.3.0\u2003\u2003\u2003Options no longer accepted from global config key.\n * 2012-09-10\u2003\u2003\u2003v0.2.0\u2003\u2003\u2003Refactored from grunt-contrib into individual repo.\n\n---\n\nTask submitted by [Tim Branyen](http://tbranyen.com/)\n\n*This file was generated on Sat Sep 08 2018 11:53:35.*"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 17223}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 315164}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1304142}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4068655}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7484557}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14640786}], "dependentsCount": 558, "starsCount": 103}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 522, "forksCount": 66, "subscribersCount": 17, "issues": {"count": 106, "openCount": 16, "distribution": {"3600": 26, "10800": 8, "32400": 7, "97200": 3, "291600": 7, "874800": 9, "2624400": 8, "7873200": 9, "23619600": 11, "70858800": 5, "212576400": 13}, "isDisabled": false}, "contributors": [{"username": "tkellen", "commitsCount": 35}, {"username": "shama", "commitsCount": 27}, {"username": "XhmikosR", "commitsCount": 15}, {"username": "vladikoff", "commitsCount": 14}, {"username": "cowboy", "commitsCount": 10}, {"username": "JKVeganAbroad", "commitsCount": 4}, {"username": "adjohnson916", "commitsCount": 2}, {"username": "nlfurniss", "commitsCount": 2}, {"username": "asapach", "commitsCount": 1}, {"username": "ctalkington", "commitsCount": 1}, {"username": "evictor", "commitsCount": 1}, {"username": "mojoaxel", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5774, "testsSize": 931, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt-contrib-clean.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt-contrib-clean.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt-contrib-clean/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt-contrib-clean/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/li28411ceq3n833d/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/li28411ceq3n833d/branch/master", "shields": "https://img.shields.io/appveyor/ci/li28411ceq3n833d/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/li28411ceq3n833d/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["jshint"], "outdatedDependencies": {"rimraf": {"required": "^2.6.2", "stable": "3.0.2", "latest": "3.0.2"}, "async": {"required": "^2.6.1", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 722, "downloadsCount": 1356218.3333333333, "downloadsAcceleration": 1207.196822678845, "dependentsCount": 558}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.48813148260084205, "detail": {"quality": 0.9142478620414141, "popularity": 0.4091621300553234, "maintenance": 0.201858224197299}}}}, {"karma-webpack": {"analyzedAt": "2020-06-11T04:31:42.588Z", "collected": {"metadata": {"name": "karma-webpack", "scope": "unscoped", "version": "4.0.2", "description": "Use webpack with karma", "keywords": ["karma", "karma-plugin", "karma-preprocessor", "karma-webpack", "webpack"], "date": "2019-06-08T14:56:45.289Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "matthieu-foucault", "email": "foucault.matthieu@gmail.com"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "rynclark", "email": "ryan@ryanclark.me"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/karma-webpack.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-webpack", "homepage": "https://github.com/webpack-contrib/karma-webpack", "repository": "https://github.com/webpack-contrib/karma-webpack", "bugs": "https://github.com/webpack-contrib/karma-webpack/issues"}, "license": "MIT", "dependencies": {"neo-async": "^2.6.1", "clone-deep": "^4.0.1", "loader-utils": "^1.1.0", "schema-utils": "^1.0.0", "source-map": "^0.7.3", "webpack-dev-middleware": "^3.7.0"}, "devDependencies": {"@babel/cli": "^7.4.4", "@babel/core": "^7.4.5", "@babel/preset-env": "^7.4.5", "@commitlint/cli": "^8.0.0", "@commitlint/config-conventional": "^8.0.0", "@webpack-contrib/defaults": "^5.0.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.8.0", "chai": "^4.2.0", "chai-as-promised": "^7.1.1", "commitlint-azure-pipelines-cli": "^1.0.2", "cross-env": "^5.2.0", "del": "^4.1.1", "del-cli": "^2.0.0", "eslint": "^5.16.0", "eslint-config-prettier": "^4.3.0", "eslint-plugin-import": "^2.17.3", "husky": "^2.4.0", "istanbul": "^0.4.5", "jest": "^24.8.0", "jest-junit": "^6.4.0", "karma": "^4.1.0", "karma-chrome-launcher": "^2.2.0", "karma-mocha": "^1.3.0", "karma-spec-reporter": "^0.0.32", "lint-staged": "^8.2.0", "memory-fs": "^0.4.1", "mocha": "^6.1.4", "npm-run-all": "^4.1.5", "prettier": "^1.18.2", "standard-version": "^6.0.1", "webpack": "^4.33.0"}, "peerDependencies": {"webpack": "^4.0.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 20}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href='https://github.com/karma-runner/karma'>\n    <img width=\"180\" height=\"180\"\n      src=\"https://worldvectorlogo.com/logos/karma.svg\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# karma-webpack\n\nUse webpack to preprocess files in karma.\n\n## Getting Started\n\nTo begin, you'll need to install `karma-webpack`:\n\n```console\nnpm i --save-dev karma-webpack\n```\n\nThen add config:\n\n**karma.conf.js**\n\n```js\nmodule.exports = (config) => {\n  config.set({\n    // ... normal karma configuration\n    files: [\n      // all files ending in \"_test\"\n      { pattern: 'test/*_test.js', watched: false },\n      { pattern: 'test/**/*_test.js', watched: false },\n      // each file acts as entry point for the webpack configuration\n    ],\n\n    preprocessors: {\n      // add webpack as preprocessor\n      'test/*_test.js': ['webpack'],\n      'test/**/*_test.js': ['webpack'],\n    },\n\n    webpack: {\n      // karma watches the test entry points\n      // (you don't need to specify the entry option)\n      // webpack watches dependencies\n      // webpack configuration\n    },\n\n    webpackMiddleware: {\n      // webpack-dev-middleware configuration\n      // i. e.\n      stats: 'errors-only',\n    },\n  });\n};\n```\n\n### `Alternative Usage`\n\nThis configuration is more performant, but you cannot run single test anymore (only the complete suite).\n\nThe above configuration generates a `webpack` bundle for each test. For many test cases this can result in many big files. The alternative configuration creates a single bundle with all test cases.\n\n**karma.conf.js**\n\n```js\nfiles: [\n  // only specify one entry point\n  // and require all tests in there\n  'test/index_test.js'\n],\n\npreprocessors: {\n  // add webpack as preprocessor\n  'test/index_test.js': [ 'webpack' ]\n},\n```\n\n**test/index_test.js**\n\n```js\n// require all modules ending in \"_test\" from the\n// current directory and all subdirectories\nconst testsContext = require.context('.', true, /_test$/);\n\ntestsContext.keys().forEach(testsContext);\n```\n\nEvery test file is required using the [require.context](https://webpack.js.org/guides/dependency-management/#require-context) and compiled with webpack into one test bundle.\n\n### `Source Maps`\n\nYou can use the `karma-sourcemap-loader` to get the source maps generated for your test bundle.\n\n```bash\nnpm i -D karma-sourcemap-loader\n```\n\nAnd then add it to your preprocessors.\n\n**karma.conf.js**\n\n```js\npreprocessors: {\n  'test/test_index.js': [ 'webpack', 'sourcemap' ]\n}\n```\n\nAnd tell `webpack` to generate sourcemaps.\n\n**webpack.config.js**\n\n```js\nwebpack: {\n  // ...\n  devtool: 'inline-source-map';\n}\n```\n\n## Options\n\nThis is the full list of options you can specify in your `karma.conf.js`\n\n|                     Name                      |    Type    | Default | Description                                                                             |\n| :-------------------------------------------: | :--------: | :-----: | :-------------------------------------------------------------------------------------- |\n|           [**`webpack`**](#webpack)           | `{Object}` |  `{}`   | Pass `webpack.config.js` to `karma`                                                     |\n| [**`webpackMiddleware`**](#webpackmiddleware) | `{Object}` |  `{}`   | Pass `webpack-dev-middleware` configuration to `karma`                                  |\n|  [**`beforeMiddleware`**](#beforemiddleware)  | `{Object}` |  `{}`   | Pass custom middleware configuration to `karma`, **before** any `karma` middleware runs |\n\n### `webpack`\n\n`webpack` configuration (`webpack.config.js`).\n\n### `webpackMiddleware`\n\nConfiguration for `webpack-dev-middleware`.\n\n### `beforeMiddleware`\n\n`beforeMiddleware` is a `webpack` option that allows injecting middleware before\nkarma's own middleware runs. This loader provides a `webpackBlocker`\nmiddleware that will block tests from running until code recompiles. That is,\ngiven this scenario\n\n1. Have a browser open on the karma debug page (http://localhost:9876/debug.html)\n2. Make a code change\n3. Refresh\n\nWithout the `webpackBlocker` middleware karma will serve files from before\nthe code change. With the `webpackBlocker` middleware the loader will not serve\nthe files until the code has finished recompiling.\n\n> **\u26a0\ufe0f The `beforeMiddleware` option is only supported in `karma >= v1.0.0`**\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/karma-webpack.svg\n[npm-url]: https://npmjs.com/package/karma-webpack\n[node]: https://img.shields.io/node/v/karma-webpack.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/karma-webpack.svg\n[deps-url]: https://david-dm.org/webpack-contrib/karma-webpack\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[tests]: https://dev.azure.com/webpack-contrib/karma-webpack/_apis/build/status/webpack-contrib.karma-webpack?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/karma-webpack/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/karma-webpack/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/karma-webpack\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 78119}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 416979}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1746699}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 5118860}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 9733807}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 19271957}], "dependentsCount": 326, "starsCount": 13}, "github": {"starsCount": 815, "forksCount": 203, "subscribersCount": 29, "issues": {"count": 441, "openCount": 64, "distribution": {"3600": 67, "10800": 28, "32400": 24, "97200": 26, "291600": 22, "874800": 30, "2624400": 33, "7873200": 46, "23619600": 50, "70858800": 70, "212576400": 45}, "isDisabled": false}, "contributors": [{"username": "d3viant0ne", "commitsCount": 37}, {"username": "sokra", "commitsCount": 27}, {"username": "michael-ciniawsky", "commitsCount": 21}, {"username": "ryanclark", "commitsCount": 13}, {"username": "MikaAK", "commitsCount": 10}, {"username": "kpdecker", "commitsCount": 7}, {"username": "matthieu-foucault", "commitsCount": 7}, {"username": "evilebottnawi", "commitsCount": 6}, {"username": "ibash", "commitsCount": 4}, {"username": "goldhand", "commitsCount": 3}, {"username": "Lendar", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "Teamop", "commitsCount": 2}, {"username": "dignifiedquire", "commitsCount": 2}, {"username": "gyandeeps", "commitsCount": 2}, {"username": "jambonrose", "commitsCount": 2}, {"username": "samwalshnz", "commitsCount": 2}, {"username": "vinteo", "commitsCount": 2}, {"username": "8bitDesigner", "commitsCount": 1}, {"username": "Chalarangelo", "commitsCount": 1}, {"username": "JayAndCatchFire", "commitsCount": 1}, {"username": "KidkArolis", "commitsCount": 1}, {"username": "Pwntastic", "commitsCount": 1}, {"username": "Scrum", "commitsCount": 1}, {"username": "Silviu-Marian", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "ahmednuaman", "commitsCount": 1}, {"username": "alabbas-ali", "commitsCount": 1}, {"username": "ankeetmaini", "commitsCount": 1}, {"username": "appzuka", "commitsCount": 1}, {"username": "bryzaguy", "commitsCount": 1}, {"username": "c089", "commitsCount": 1}, {"username": "caseyWebb", "commitsCount": 1}, {"username": "coliff", "commitsCount": 1}, {"username": "darsee", "commitsCount": 1}, {"username": "dcneiner", "commitsCount": 1}, {"username": "hackeryarn", "commitsCount": 1}, {"username": "jakub-g", "commitsCount": 1}, {"username": "jonshaffer", "commitsCount": 1}, {"username": "limonte", "commitsCount": 1}, {"username": "mattlewis92", "commitsCount": 1}, {"username": "michaelanthonymain", "commitsCount": 1}, {"username": "mkawalec", "commitsCount": 1}, {"username": "mtsr", "commitsCount": 1}, {"username": "nemtsov", "commitsCount": 1}, {"username": "nickpape-msft", "commitsCount": 1}, {"username": "pat841", "commitsCount": 1}, {"username": "pine", "commitsCount": 1}, {"username": "rodmax", "commitsCount": 1}, {"username": "rogeriochaves", "commitsCount": 1}, {"username": "scottohara", "commitsCount": 1}, {"username": "spicalous", "commitsCount": 1}, {"username": "tb", "commitsCount": 1}, {"username": "tjenkinson", "commitsCount": 1}, {"username": "tschaub", "commitsCount": 1}, {"username": "zuzusik", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 0}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 5880, "testsSize": 686, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-webpack.svg", "shields": "https://img.shields.io/npm/v/karma-webpack.svg", "content": "https://img.shields.io/npm/v/karma-webpack.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/karma-webpack.svg", "service": "https://david-dm.org/webpack-contrib/karma-webpack.svg", "shields": "https://img.shields.io/david/webpack-contrib/karma-webpack.svg", "content": "https://img.shields.io/david/webpack-contrib/karma-webpack.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.42, "outdatedDependencies": {"schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.913, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1116, "downloadsCount": 1706286.6666666667, "downloadsAcceleration": 1675.060292998478, "dependentsCount": 326}, "maintenance": {"releasesFrequency": 0.24657534246575344, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5620631299548996, "detail": {"quality": 0.9259037271936824, "popularity": 0.41734612979454566, "maintenance": 0.39491676105343965}}}}, {"through2": {"analyzedAt": "2020-06-15T16:48:44.066Z", "collected": {"metadata": {"name": "through2", "scope": "unscoped", "version": "3.0.1", "description": "A tiny wrapper around Node.js streams.Transform (Streams2/3) to avoid explicit subclassing noise", "keywords": ["stream", "streams2", "through", "transform"], "date": "2019-03-01T00:53:12.565Z", "author": {"name": "Rod Vagg", "email": "r@va.gg", "url": "https://github.com/rvagg"}, "publisher": {"username": "rvagg", "email": "r@va.gg"}, "maintainers": [{"username": "bryce", "email": "bryce@ravenwall.com"}, {"username": "rvagg", "email": "rod@vagg.org"}], "repository": {"type": "git", "url": "git+https://github.com/rvagg/through2.git"}, "links": {"npm": "https://www.npmjs.com/package/through2", "homepage": "https://github.com/rvagg/through2#readme", "repository": "https://github.com/rvagg/through2", "bugs": "https://github.com/rvagg/through2/issues"}, "license": "MIT", "dependencies": {"readable-stream": "2 || 3"}, "devDependencies": {"bl": "~2.0.1", "faucet": "0.0.1", "nyc": "~13.1.0", "stream-spigot": "~3.0.6", "tape": "~4.9.1"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# through2\n\n[![NPM](https://nodei.co/npm/through2.png?downloads&downloadRank)](https://nodei.co/npm/through2/)\n\n**A tiny wrapper around Node.js streams.Transform (Streams2/3) to avoid explicit subclassing noise**\n\nInspired by [Dominic Tarr](https://github.com/dominictarr)'s [through](https://github.com/dominictarr/through) in that it's so much easier to make a stream out of a function than it is to set up the prototype chain properly: `through(function (chunk) { ... })`.\n\n***Note: Users of Node.js 0.10 and 0.12 should install `through2@2.x`. As of through2@3.x, readable-stream@3 is being used and is not compatible with older versions of Node.js.*** _v2.x support is being maintained on the [v2.x](https://github.com/rvagg/through2/tree/v2.x) branch._\n\n```js\nfs.createReadStream('ex.txt')\n  .pipe(through2(function (chunk, enc, callback) {\n    for (var i = 0; i < chunk.length; i++)\n      if (chunk[i] == 97)\n        chunk[i] = 122 // swap 'a' for 'z'\n\n    this.push(chunk)\n\n    callback()\n   }))\n  .pipe(fs.createWriteStream('out.txt'))\n  .on('finish', () => doSomethingSpecial())\n```\n\nOr object streams:\n\n```js\nvar all = []\n\nfs.createReadStream('data.csv')\n  .pipe(csv2())\n  .pipe(through2.obj(function (chunk, enc, callback) {\n    var data = {\n        name    : chunk[0]\n      , address : chunk[3]\n      , phone   : chunk[10]\n    }\n    this.push(data)\n\n    callback()\n  }))\n  .on('data', (data) => {\n    all.push(data)\n  })\n  .on('end', () => {\n    doSomethingSpecial(all)\n  })\n```\n\nNote that `through2.obj(fn)` is a convenience wrapper around `through2({ objectMode: true }, fn)`.\n\n## API\n\n<b><code>through2([ options, ] [ transformFunction ] [, flushFunction ])</code></b>\n\nConsult the **[stream.Transform](http://nodejs.org/docs/latest/api/stream.html#stream_class_stream_transform)** documentation for the exact rules of the `transformFunction` (i.e. `this._transform`) and the optional `flushFunction` (i.e. `this._flush`).\n\n### options\n\nThe options argument is optional and is passed straight through to `stream.Transform`. So you can use `objectMode:true` if you are processing non-binary streams (or just use `through2.obj()`).\n\nThe `options` argument is first, unlike standard convention, because if I'm passing in an anonymous function then I'd prefer for the options argument to not get lost at the end of the call:\n\n```js\nfs.createReadStream('/tmp/important.dat')\n  .pipe(through2({ objectMode: true, allowHalfOpen: false },\n    (chunk, enc, cb) => {\n      cb(null, 'wut?') // note we can use the second argument on the callback\n                       // to provide data as an alternative to this.push('wut?')\n    }\n  )\n  .pipe(fs.createWriteStream('/tmp/wut.txt'))\n```\n\n### transformFunction\n\nThe `transformFunction` must have the following signature: `function (chunk, encoding, callback) {}`. A minimal implementation should call the `callback` function to indicate that the transformation is done, even if that transformation means discarding the chunk.\n\nTo queue a new chunk, call `this.push(chunk)`&mdash;this can be called as many times as required before the `callback()` if you have multiple pieces to send on.\n\nAlternatively, you may use `callback(err, chunk)` as shorthand for emitting a single chunk or an error.\n\nIf you **do not provide a `transformFunction`** then you will get a simple pass-through stream.\n\n### flushFunction\n\nThe optional `flushFunction` is provided as the last argument (2nd or 3rd, depending on whether you've supplied options) is called just prior to the stream ending. Can be used to finish up any processing that may be in progress.\n\n```js\nfs.createReadStream('/tmp/important.dat')\n  .pipe(through2(\n    (chunk, enc, cb) => cb(null, chunk), // transform is a noop\n    function (cb) { // flush function\n      this.push('tacking on an extra buffer to the end');\n      cb();\n    }\n  ))\n  .pipe(fs.createWriteStream('/tmp/wut.txt'));\n```\n\n<b><code>through2.ctor([ options, ] transformFunction[, flushFunction ])</code></b>\n\nInstead of returning a `stream.Transform` instance, `through2.ctor()` returns a **constructor** for a custom Transform. This is useful when you want to use the same transform logic in multiple instances.\n\n```js\nvar FToC = through2.ctor({objectMode: true}, function (record, encoding, callback) {\n  if (record.temp != null && record.unit == \"F\") {\n    record.temp = ( ( record.temp - 32 ) * 5 ) / 9\n    record.unit = \"C\"\n  }\n  this.push(record)\n  callback()\n})\n\n// Create instances of FToC like so:\nvar converter = new FToC()\n// Or:\nvar converter = FToC()\n// Or specify/override options when you instantiate, if you prefer:\nvar converter = FToC({objectMode: true})\n```\n\n## See Also\n\n  - [through2-map](https://github.com/brycebaril/through2-map) - Array.prototype.map analog for streams.\n  - [through2-filter](https://github.com/brycebaril/through2-filter) - Array.prototype.filter analog for streams.\n  - [through2-reduce](https://github.com/brycebaril/through2-reduce) - Array.prototype.reduce analog for streams.\n  - [through2-spy](https://github.com/brycebaril/through2-spy) - Wrapper for simple stream.PassThrough spies.\n  - the [mississippi stream utility collection](https://github.com/maxogden/mississippi) includes `through2` as well as many more useful stream modules similar to this one\n\n## License\n\n**through2** is Copyright (c) Rod Vagg and additional contributors and licensed under the MIT license. All rights not explicitly granted in the MIT license are reserved. See the included LICENSE file for more details."}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1045198}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 19435829}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 78783466}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 244345171}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 449019845}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 831106179}], "dependentsCount": 9995, "starsCount": 205}, "github": {"starsCount": 1724, "forksCount": 121, "subscribersCount": 23, "issues": {"count": 101, "openCount": 0, "distribution": {"3600": 13, "10800": 9, "32400": 5, "97200": 16, "291600": 9, "874800": 5, "2624400": 8, "7873200": 7, "23619600": 5, "70858800": 9, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "rvagg", "commitsCount": 63}, {"username": "brycebaril", "commitsCount": 11}, {"username": "mafintosh", "commitsCount": 5}, {"username": "TakenPilot", "commitsCount": 3}, {"username": "contra", "commitsCount": 2}, {"username": "CaleyD", "commitsCount": 1}, {"username": "Delapouite", "commitsCount": 1}, {"username": "andre487", "commitsCount": 1}, {"username": "cvibhagool", "commitsCount": 1}, {"username": "felixrabe", "commitsCount": 1}, {"username": "jeromew", "commitsCount": 1}, {"username": "maxogden", "commitsCount": 1}, {"username": "oprogramador", "commitsCount": 1}, {"username": "scovetta", "commitsCount": 1}, {"username": "skyline-123", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}], "commits": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 2}]}, "source": {"files": {"readmeSize": 5508, "testsSize": 9246, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/through2.png?downloadRank", "shields": "https://img.shields.io/npm/v/through2.svg", "content": "https://img.shields.io/npm/v/through2.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 2090, "downloadsCount": 81448390.33333333, "downloadsAcceleration": 141665.94187595125, "dependentsCount": 9995}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9061280815856216, "detail": {"quality": 0.919612341382078, "popularity": 0.8008067603877297, "maintenance": 0.9998914658151222}}}}, {"react-scripts": {"analyzedAt": "2020-06-14T15:03:26.554Z", "collected": {"metadata": {"name": "react-scripts", "scope": "unscoped", "version": "3.4.1", "description": "Configuration and scripts for Create React App.", "date": "2020-03-21T00:00:30.559Z", "publisher": {"username": "iansu", "email": "ian@iansutherland.ca"}, "maintainers": [{"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "ianschmitz", "email": "ianschmitz@gmail.com"}, {"username": "iansu", "email": "ian@iansutherland.ca"}, {"username": "timer", "email": "timer150@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/create-react-app.git", "directory": "packages/react-scripts"}, "links": {"npm": "https://www.npmjs.com/package/react-scripts", "homepage": "https://github.com/facebook/create-react-app#readme", "repository": "https://github.com/facebook/create-react-app", "bugs": "https://github.com/facebook/create-react-app/issues"}, "license": "MIT", "dependencies": {"@babel/core": "7.9.0", "@svgr/webpack": "4.3.3", "@typescript-eslint/eslint-plugin": "^2.10.0", "@typescript-eslint/parser": "^2.10.0", "babel-eslint": "10.1.0", "babel-jest": "^24.9.0", "babel-loader": "8.1.0", "babel-plugin-named-asset-import": "^0.3.6", "babel-preset-react-app": "^9.1.2", "camelcase": "^5.3.1", "case-sensitive-paths-webpack-plugin": "2.3.0", "css-loader": "3.4.2", "dotenv": "8.2.0", "dotenv-expand": "5.1.0", "eslint": "^6.6.0", "eslint-config-react-app": "^5.2.1", "eslint-loader": "3.0.3", "eslint-plugin-flowtype": "4.6.0", "eslint-plugin-import": "2.20.1", "eslint-plugin-jsx-a11y": "6.2.3", "eslint-plugin-react": "7.19.0", "eslint-plugin-react-hooks": "^1.6.1", "file-loader": "4.3.0", "fs-extra": "^8.1.0", "html-webpack-plugin": "4.0.0-beta.11", "identity-obj-proxy": "3.0.0", "jest": "24.9.0", "jest-environment-jsdom-fourteen": "1.0.1", "jest-resolve": "24.9.0", "jest-watch-typeahead": "0.4.2", "mini-css-extract-plugin": "0.9.0", "optimize-css-assets-webpack-plugin": "5.0.3", "pnp-webpack-plugin": "1.6.4", "postcss-flexbugs-fixes": "4.1.0", "postcss-loader": "3.0.0", "postcss-normalize": "8.0.1", "postcss-preset-env": "6.7.0", "postcss-safe-parser": "4.0.1", "react-app-polyfill": "^1.0.6", "react-dev-utils": "^10.2.1", "resolve": "1.15.0", "resolve-url-loader": "3.1.1", "sass-loader": "8.0.2", "semver": "6.3.0", "style-loader": "0.23.1", "terser-webpack-plugin": "2.3.5", "ts-pnp": "1.1.6", "url-loader": "2.3.0", "webpack": "4.42.0", "webpack-dev-server": "3.10.3", "webpack-manifest-plugin": "2.2.0", "workbox-webpack-plugin": "4.3.1", "fsevents": "2.1.2"}, "devDependencies": {"react": "^16.12.0", "react-dom": "^16.12.0"}, "peerDependencies": {"typescript": "^3.2.1"}, "optionalDependencies": {"fsevents": "2.1.2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 13}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 40}], "hasSelectiveFiles": true, "readme": "# react-scripts\n\nThis package includes scripts and configuration used by [Create React App](https://github.com/facebook/create-react-app).<br>\nPlease refer to its documentation:\n\n- [Getting Started](https://facebook.github.io/create-react-app/docs/getting-started) \u2013 How to create a new app.\n- [User Guide](https://facebook.github.io/create-react-app/) \u2013 How to develop apps bootstrapped with Create React App."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 86464}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1650206}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 6650379}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 20109489}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 35197276}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 61922938}], "dependentsCount": 4263, "starsCount": 53}, "github": {"homepage": "https://create-react-app.dev", "starsCount": 79467, "forksCount": 19214, "subscribersCount": 1865, "issues": {"count": 9068, "openCount": 603, "distribution": {"3600": 1640, "10800": 693, "32400": 724, "97200": 884, "291600": 729, "874800": 747, "2624400": 795, "7873200": 1548, "23619600": 737, "70858800": 522, "212576400": 49}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 647}, {"username": "Timer", "commitsCount": 292}, {"username": "iansu", "commitsCount": 104}, {"username": "ianschmitz", "commitsCount": 75}, {"username": "selbekk", "commitsCount": 72}, {"username": "fson", "commitsCount": 49}, {"username": "vjeux", "commitsCount": 28}, {"username": "viankakrisna", "commitsCount": 23}, {"username": "andriijas", "commitsCount": 17}, {"username": "mrmckeb", "commitsCount": 14}, {"username": "mxstbr", "commitsCount": 13}, {"username": "tharakawj", "commitsCount": 10}, {"username": "brunolemos", "commitsCount": 9}, {"username": "jeffposnick", "commitsCount": 9}, {"username": "EnoahNetzach", "commitsCount": 8}, {"username": "arcanis", "commitsCount": 8}, {"username": "heyimalex", "commitsCount": 8}, {"username": "amyrlam", "commitsCount": 7}, {"username": "existentialism", "commitsCount": 7}, {"username": "ro-savage", "commitsCount": 7}, {"username": "xiaoxiangmoe", "commitsCount": 7}, {"username": "GreenGremlin", "commitsCount": 6}, {"username": "bondz", "commitsCount": 6}, {"username": "iamandrewluca", "commitsCount": 6}, {"username": "kentcdodds", "commitsCount": 6}, {"username": "ryansully", "commitsCount": 6}, {"username": "sidoshi", "commitsCount": 6}, {"username": "tuchk4", "commitsCount": 6}, {"username": "bradfordlemley", "commitsCount": 5}, {"username": "johann-sonntagbauer", "commitsCount": 5}, {"username": "lacker", "commitsCount": 5}, {"username": "mareksuscak", "commitsCount": 5}, {"username": "n3tr", "commitsCount": 5}, {"username": "ForbesLindesay", "commitsCount": 4}, {"username": "GAumala", "commitsCount": 4}, {"username": "MichaelDeBoey", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 4}, {"username": "dceddia", "commitsCount": 4}, {"username": "eanplatter", "commitsCount": 4}, {"username": "eliperelman", "commitsCount": 4}, {"username": "endiliey", "commitsCount": 4}, {"username": "gnapse", "commitsCount": 4}, {"username": "hnordt", "commitsCount": 4}, {"username": "insin", "commitsCount": 4}, {"username": "keyz", "commitsCount": 4}, {"username": "koistya", "commitsCount": 4}, {"username": "lewislbr", "commitsCount": 4}, {"username": "lixiaoyan", "commitsCount": 4}, {"username": "lukyth", "commitsCount": 4}, {"username": "marionebl", "commitsCount": 4}, {"username": "petetnt", "commitsCount": 4}, {"username": "sophiebits", "commitsCount": 4}, {"username": "tabrindle", "commitsCount": 4}, {"username": "xjlim", "commitsCount": 4}, {"username": "NShahri", "commitsCount": 3}, {"username": "RDIL", "commitsCount": 3}, {"username": "alexzherdev", "commitsCount": 3}, {"username": "anilreddykatta", "commitsCount": 3}, {"username": "bebbi", "commitsCount": 3}, {"username": "bmuenzenmeyer", "commitsCount": 3}, {"username": "bvaughn", "commitsCount": 3}, {"username": "coryhouse", "commitsCount": 3}, {"username": "dallonf", "commitsCount": 3}, {"username": "davidgilbertson", "commitsCount": 3}, {"username": "deftomat", "commitsCount": 3}, {"username": "dunglas", "commitsCount": 3}, {"username": "frontsideair", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 3}, {"username": "jasonLaster", "commitsCount": 3}, {"username": "jihchi", "commitsCount": 3}, {"username": "kripod", "commitsCount": 3}, {"username": "levrik", "commitsCount": 3}, {"username": "lpalmes", "commitsCount": 3}, {"username": "marcofugaro", "commitsCount": 3}, {"username": "miraage", "commitsCount": 3}, {"username": "nhajidin", "commitsCount": 3}, {"username": "orta", "commitsCount": 3}, {"username": "pd4d10", "commitsCount": 3}, {"username": "rovansteen", "commitsCount": 3}, {"username": "themre", "commitsCount": 3}, {"username": "valscion", "commitsCount": 3}, {"username": "Andarist", "commitsCount": 2}, {"username": "Fabianopb", "commitsCount": 2}, {"username": "FezVrasta", "commitsCount": 2}, {"username": "Kamahl19", "commitsCount": 2}, {"username": "MostafaNawara", "commitsCount": 2}, {"username": "NMinhNguyen", "commitsCount": 2}, {"username": "Vinnl", "commitsCount": 2}, {"username": "ai", "commitsCount": 2}, {"username": "alexbrazier", "commitsCount": 2}, {"username": "alexkrolick", "commitsCount": 2}, {"username": "awaseem", "commitsCount": 2}, {"username": "chybisov", "commitsCount": 2}, {"username": "donavon", "commitsCount": 2}, {"username": "haruelrovix", "commitsCount": 2}, {"username": "heygrady", "commitsCount": 2}, {"username": "jakeboone02", "commitsCount": 2}, {"username": "justingrant", "commitsCount": 2}, {"username": "vadzim", "commitsCount": 2}, {"username": "vince1995", "commitsCount": 2}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 48}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 105}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 309}], "statuses": [{"context": "netlify/create-react-app/deploy-preview", "state": "success"}]}, "source": {"files": {"readmeSize": 415, "testsSize": 33529, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint", "prettier"], "outdatedDependencies": {"fs-extra": {"required": "^8.1.0", "stable": "9.0.1", "latest": "9.0.1"}, "postcss-safe-parser": {"required": "4.0.1", "stable": "4.0.2", "latest": "4.0.2"}, "camelcase": {"required": "^5.3.1", "stable": "6.0.0", "latest": "6.0.0"}, "ts-pnp": {"required": "1.1.6", "stable": "1.2.0", "latest": "1.2.0"}, "postcss-flexbugs-fixes": {"required": "4.1.0", "stable": "4.2.1", "latest": "4.2.1"}, "jest-watch-typeahead": {"required": "0.4.2", "stable": "0.6.0", "latest": "0.6.0"}, "@svgr/webpack": {"required": "4.3.3", "stable": "5.4.0", "latest": "5.4.0"}, "postcss-normalize": {"required": "8.0.1", "stable": "9.0.0", "latest": "9.0.0"}, "url-loader": {"required": "2.3.0", "stable": "4.1.0", "latest": "4.1.0"}, "workbox-webpack-plugin": {"required": "4.3.1", "stable": "5.1.3", "latest": "5.1.3"}, "eslint-loader": {"required": "3.0.3", "stable": "4.0.2", "latest": "4.0.2"}, "@babel/core": {"required": "7.9.0", "stable": "7.10.2", "latest": "7.10.2"}, "fsevents": {"required": "2.1.2", "stable": "2.1.3", "latest": "1.2.13"}, "file-loader": {"required": "4.3.0", "stable": "6.0.0", "latest": "6.0.0"}, "style-loader": {"required": "0.23.1", "stable": "1.2.1", "latest": "1.2.1"}, "resolve": {"required": "1.15.0", "stable": "1.17.0", "latest": "2.0.0-next.1"}, "terser-webpack-plugin": {"required": "2.3.5", "stable": "3.0.4", "latest": "3.0.4"}, "semver": {"required": "6.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "css-loader": {"required": "3.4.2", "stable": "3.6.0", "latest": "3.6.0"}, "eslint-plugin-react": {"required": "7.19.0", "stable": "7.20.0", "latest": "7.20.0"}, "eslint-plugin-flowtype": {"required": "4.6.0", "stable": "5.1.3", "latest": "5.1.3"}, "eslint-plugin-import": {"required": "2.20.1", "stable": "2.21.2", "latest": "2.21.2"}, "babel-jest": {"required": "^24.9.0", "stable": "26.0.1", "latest": "26.0.1"}, "eslint-plugin-react-hooks": {"required": "^1.6.1", "stable": "4.0.4", "latest": "4.0.4"}, "webpack-dev-server": {"required": "3.10.3", "stable": "3.11.0", "latest": "3.11.0"}, "jest-resolve": {"required": "24.9.0", "stable": "26.0.1", "latest": "26.0.1"}, "jest": {"required": "24.9.0", "stable": "26.0.1", "latest": "26.0.1"}, "eslint": {"required": "^6.6.0", "stable": "7.2.0", "latest": "7.2.0"}, "html-webpack-plugin": {"required": "4.0.0-beta.11", "stable": "4.3.0", "latest": "4.3.0"}, "webpack": {"required": "4.42.0", "stable": "4.43.0", "latest": "5.0.0-beta.17"}, "@typescript-eslint/parser": {"required": "^2.10.0", "stable": "3.2.0", "latest": "3.2.1-alpha.2"}, "@typescript-eslint/eslint-plugin": {"required": "^2.10.0", "stable": "3.2.0", "latest": "3.2.1-alpha.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.55, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 100699, "downloadsCount": 6703163, "downloadsAcceleration": 19478.98808980213, "dependentsCount": 4263}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6040700525393436}}, "score": {"final": 0.8513593355863447, "detail": {"quality": 0.775736232581578, "popularity": 0.7728924995458886, "maintenance": 0.9946459742023155}}}}, {"@vue/cli-plugin-babel": {"analyzedAt": "2020-06-12T13:09:29.080Z", "collected": {"metadata": {"name": "@vue/cli-plugin-babel", "scope": "vue", "version": "4.4.4", "description": "babel plugin for vue-cli", "keywords": ["vue", "cli", "babel"], "date": "2020-06-12T13:01:31.646Z", "author": {"name": "Evan You"}, "publisher": {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, "maintainers": [{"username": "akryum", "email": "guillaume.b.chau@gmail.com"}, {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue-cli.git", "directory": "packages/@vue/cli-plugin-babel"}, "links": {"npm": "https://www.npmjs.com/package/%40vue%2Fcli-plugin-babel", "homepage": "https://github.com/vuejs/vue-cli/tree/dev/packages/@vue/cli-plugin-babel#readme", "repository": "https://github.com/vuejs/vue-cli", "bugs": "https://github.com/vuejs/vue-cli/issues"}, "license": "MIT", "dependencies": {"@babel/core": "^7.9.6", "@vue/babel-preset-app": "^4.4.4", "@vue/cli-shared-utils": "^4.4.4", "babel-loader": "^8.1.0", "cache-loader": "^4.1.0", "thread-loader": "^2.1.3", "webpack": "^4.0.0"}, "devDependencies": {"jscodeshift": "^0.9.0"}, "peerDependencies": {"@vue/cli-service": "^3.0.0 || ^4.0.0-0"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 9}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 40}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 75}], "readme": "# @vue/cli-plugin-babel\n\n> babel plugin for vue-cli\n\n## Configuration\n\nUses Babel 7 + `babel-loader` + [@vue/babel-preset-app](https://github.com/vuejs/vue-cli/tree/dev/packages/%40vue/babel-preset-app) by default, but can be configured via `babel.config.js` to use any other Babel presets or plugins.\n\nBy default, `babel-loader` excludes files inside `node_modules` dependencies. If you wish to explicitly transpile a dependency module, you will need to add it to the `transpileDependencies` option in `vue.config.js`:\n\n``` js\nmodule.exports = {\n  transpileDependencies: [\n    // can be string or regex\n    'my-dep',\n    /other-dep/\n  ]\n}\n```\n\n## Caching\n\n[cache-loader](https://github.com/webpack-contrib/cache-loader) is enabled by default and cache is stored in `<projectRoot>/node_modules/.cache/babel-loader`.\n\n## Parallelization\n\n[thread-loader](https://github.com/webpack-contrib/thread-loader) is enabled by default when the machine has more than 1 CPU cores. This can be turned off by setting `parallel: false` in `vue.config.js`.\n\n## Installing in an Already Created Project\n\n``` sh\nvue add babel\n```\n\n## Injected webpack-chain Rules\n\n- `config.rule('js')`\n- `config.rule('js').use('babel-loader')`\n- `config.rule('js').use('cache-loader')`"}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 95682}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 557062}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2338544}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6428169}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 11226785}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 19370036}], "dependentsCount": 73, "starsCount": 0}, "github": {"homepage": "https://cli.vuejs.org/", "starsCount": 25540, "forksCount": 4785, "subscribersCount": 665, "issues": {"count": 5558, "openCount": 536, "distribution": {"3600": 1483, "10800": 466, "32400": 537, "97200": 586, "291600": 496, "874800": 456, "2624400": 442, "7873200": 363, "23619600": 335, "70858800": 389, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 914}, {"username": "sodatea", "commitsCount": 727}, {"username": "Akryum", "commitsCount": 51}, {"username": "LinusBorg", "commitsCount": 32}, {"username": "Alex-Sokolov", "commitsCount": 22}, {"username": "cexbrayat", "commitsCount": 11}, {"username": "dhensche", "commitsCount": 11}, {"username": "elevatebart", "commitsCount": 11}, {"username": "jkzing", "commitsCount": 11}, {"username": "zyy7259", "commitsCount": 10}, {"username": "NataliaTepluhina", "commitsCount": 9}, {"username": "pksunkara", "commitsCount": 9}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "kazupon", "commitsCount": 8}, {"username": "Jinjiang", "commitsCount": 7}, {"username": "zigomir", "commitsCount": 7}, {"username": "zhrivodkin", "commitsCount": 6}, {"username": "arcanis", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "morrislaptop", "commitsCount": 4}, {"username": "pburdette", "commitsCount": 4}, {"username": "Haroenv", "commitsCount": 3}, {"username": "KuangPF", "commitsCount": 3}, {"username": "NoelDeMartin", "commitsCount": 3}, {"username": "Turbo87", "commitsCount": 3}, {"username": "arthurdenner", "commitsCount": 3}, {"username": "diogosalazar", "commitsCount": 3}, {"username": "ivansieder", "commitsCount": 3}, {"username": "javoski", "commitsCount": 3}, {"username": "ky-is", "commitsCount": 3}, {"username": "mactanxin", "commitsCount": 3}, {"username": "michalsnik", "commitsCount": 3}, {"username": "rigor789", "commitsCount": 3}, {"username": "sickp", "commitsCount": 3}, {"username": "ulivz", "commitsCount": 3}, {"username": "visualfanatic", "commitsCount": 3}, {"username": "DRBragg", "commitsCount": 2}, {"username": "FrankFang", "commitsCount": 2}, {"username": "Kocal", "commitsCount": 2}, {"username": "PanJiaChen", "commitsCount": 2}, {"username": "SevenOutman", "commitsCount": 2}, {"username": "TheJaredWilcurt", "commitsCount": 2}, {"username": "WilsonLiu95", "commitsCount": 2}, {"username": "YuJianrong", "commitsCount": 2}, {"username": "aberonni", "commitsCount": 2}, {"username": "betweenbrain", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "chiaweilee", "commitsCount": 2}, {"username": "chrisvfritz", "commitsCount": 2}, {"username": "clorichel", "commitsCount": 2}, {"username": "defead", "commitsCount": 2}, {"username": "hsxfjames", "commitsCount": 2}, {"username": "jamessouth", "commitsCount": 2}, {"username": "jbruni", "commitsCount": 2}, {"username": "jeneser", "commitsCount": 2}, {"username": "kidonng", "commitsCount": 2}, {"username": "ktsn", "commitsCount": 2}, {"username": "llccing", "commitsCount": 2}, {"username": "nanomad", "commitsCount": 2}, {"username": "ntnyq", "commitsCount": 2}, {"username": "phanan", "commitsCount": 2}, {"username": "remote-star", "commitsCount": 2}, {"username": "shadow-light", "commitsCount": 2}, {"username": "tkint", "commitsCount": 2}, {"username": "toBeTheLight", "commitsCount": 2}, {"username": "trickstival", "commitsCount": 2}, {"username": "troy351", "commitsCount": 2}, {"username": "whoisjorge", "commitsCount": 2}, {"username": "xiaohp", "commitsCount": 2}, {"username": "xsbchen", "commitsCount": 2}, {"username": "zrh122", "commitsCount": 2}, {"username": "374632897", "commitsCount": 1}, {"username": "Akenokoru", "commitsCount": 1}, {"username": "AlbertBrand", "commitsCount": 1}, {"username": "EzioKissshot", "commitsCount": 1}, {"username": "Rolanddoda", "commitsCount": 1}, {"username": "Timibadass", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "codeDebugTest", "commitsCount": 1}, {"username": "darrylkuhn", "commitsCount": 1}, {"username": "dtcz", "commitsCount": 1}, {"username": "epixian", "commitsCount": 1}, {"username": "fxxjdedd", "commitsCount": 1}, {"username": "godkun", "commitsCount": 1}, {"username": "gtsiolis", "commitsCount": 1}, {"username": "jaireina", "commitsCount": 1}, {"username": "janispritzkau", "commitsCount": 1}, {"username": "jinzhan", "commitsCount": 1}, {"username": "lucaswerkmeister", "commitsCount": 1}, {"username": "manico", "commitsCount": 1}, {"username": "megos", "commitsCount": 1}, {"username": "motla", "commitsCount": 1}, {"username": "qirh", "commitsCount": 1}, {"username": "simon300000", "commitsCount": 1}, {"username": "stefano-b", "commitsCount": 1}, {"username": "tommyo", "commitsCount": 1}, {"username": "yeyan1996", "commitsCount": 1}, {"username": "zapzqc", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 7}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 27}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 84}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 203}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 523}], "statuses": [{"context": "ci/circleci: group-3", "state": "pending"}, {"context": "ci/circleci: group-2", "state": "pending"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}, {"context": "ci/circleci: install", "state": "pending"}, {"context": "ci/circleci: cli-ui", "state": "pending"}, {"context": "ci/circleci: group-1", "state": "pending"}, {"context": "ci/circleci: group-4", "state": "pending"}]}, "source": {"files": {"readmeSize": 1252, "testsSize": 6956, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg?style=shield", "service": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev?svg=true", "service": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev", "shields": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.svg", "content": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.375, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 31088, "downloadsCount": 2142723, "downloadsAcceleration": 8546.327720700152, "dependentsCount": 73}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6505473928119354}}, "score": {"final": 0.8082356798817129, "detail": {"quality": 0.8980245464024619, "popularity": 0.5428102822157637, "maintenance": 0.9966991919584488}}}}, {"@angular/forms": {"analyzedAt": "2020-06-15T21:16:09.214Z", "collected": {"metadata": {"name": "@angular/forms", "scope": "angular", "version": "9.1.11", "description": "Angular - directives and services for creating forms", "date": "2020-06-10T18:22:22.921Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/forms"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fforms", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"@angular/core": "9.1.11", "@angular/common": "9.1.11", "@angular/platform-browser": "9.1.11", "rxjs": "^6.5.3", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 54}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 104}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 193}]}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 69799}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1482869}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 5964748}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 18902641}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 34625639}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 64805128}], "dependentsCount": 6770, "starsCount": 11}, "source": {"files": {"readmeSize": 0, "testsSize": 415828, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.3, "health": 1, "branding": 0}, "popularity": {"communityInterest": 11, "downloadsCount": 6300880.333333333, "downloadsAcceleration": 9023.25066590563, "dependentsCount": 6770}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5117376688741729, "detail": {"quality": 0.7106483682760691, "popularity": 0.5196471192133872, "maintenance": 0.3333333333333333}}}}, {"cz-conventional-changelog": {"analyzedAt": "2020-05-08T01:11:03.670Z", "collected": {"metadata": {"name": "cz-conventional-changelog", "scope": "unscoped", "version": "3.2.0", "description": "Commitizen adapter following the conventional-changelog format.", "date": "2020-05-04T21:09:58.398Z", "author": {"name": "Jim Cummins", "email": "jimthedev@gmail.com", "username": "jimthedev"}, "publisher": {"username": "commitizen-bot", "email": "jimthedev+commitizen-bot@gmail.com"}, "maintainers": [{"username": "commitizen-bot", "email": "kent+commitizen-bot@doddsfamily.us"}, {"username": "jimthedev", "email": "jimthedev@gmail.com"}, {"username": "kentcdodds", "email": "kent@doddsfamily.us"}, {"username": "linusu", "email": "linus@folkdatorn.se"}, {"username": "pgoodjohn", "email": "info@pietrobongiovanni.com"}], "repository": {"type": "git", "url": "git+https://github.com/commitizen/cz-conventional-changelog.git"}, "links": {"npm": "https://www.npmjs.com/package/cz-conventional-changelog", "homepage": "https://github.com/commitizen/cz-conventional-changelog", "repository": "https://github.com/commitizen/cz-conventional-changelog", "bugs": "https://github.com/commitizen/cz-conventional-changelog/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.1", "commitizen": "^4.0.3", "conventional-commit-types": "^3.0.0", "lodash.map": "^4.5.1", "longest": "^2.0.1", "word-wrap": "^1.0.3", "@commitlint/load": ">6.1.1"}, "devDependencies": {"@types/chai": "^4.1.7", "@types/mocha": "^5.2.7", "chai": "^4.2.0", "cosmiconfig": "^5.2.1", "mocha": "^6.2.0", "mock-require": "^3.0.3", "prettier": "^1.15.3", "semantic-release": "^15.13.3", "semver": "^6.2.0"}, "optionalDependencies": {"@commitlint/load": ">6.1.1"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "# cz-conventional-changelog\n\nStatus:\n[![npm version](https://img.shields.io/npm/v/cz-conventional-changelog.svg?style=flat-square)](https://www.npmjs.org/package/cz-conventional-changelog)\n[![npm downloads](https://img.shields.io/npm/dm/cz-conventional-changelog.svg?style=flat-square)](http://npm-stat.com/charts.html?package=cz-conventional-changelog&from=2015-08-01)\n[![Build Status](https://img.shields.io/travis/commitizen/cz-conventional-changelog.svg?style=flat-square)](https://travis-ci.org/commitizen/cz-conventional-changelog)\n\nPart of the [commitizen](https://github.com/commitizen/cz-cli) family. Prompts for [conventional changelog](https://github.com/conventional-changelog/conventional-changelog) standard.\n\n## Configuration\n\n### package.json\n\nLike commitizen, you specify the configuration of cz-conventional-changelog through the package.json's `config.commitizen` key.\n\n```json5\n{\n// ...  default values\n    \"config\": {\n        \"commitizen\": {\n            \"path\": \"./node_modules/cz-conventional-changelog\",\n            \"maxHeaderWidth\": 100,\n            \"maxLineWidth\": 100,\n            \"defaultType\": \"\",\n            \"defaultScope\": \"\",\n            \"defaultSubject\": \"\",\n            \"defaultBody\": \"\",\n            \"defaultIssues\": \"\",\n            \"types\": {\n              ...\n              \"feat\": {\n                \"description\": \"A new feature\",\n                \"title\": \"Features\"\n              },\n              ...\n            }\n        }\n    }\n// ...\n}\n```\n### Environment variables\n\nThe following environment varibles can be used to override any default configuration or package.json based configuration.\n\n* CZ_TYPE = defaultType\n* CZ_SCOPE = defaultScope\n* CZ_SUBJECT = defaultSubject\n* CZ_BODY = defaultBody\n* CZ_MAX_HEADER_WIDTH = maxHeaderWidth\n* CZ_MAX_LINE_WIDTH = maxLineWidth\n\n### Commitlint\n\nIf using the [commitlint](https://github.com/conventional-changelog/commitlint) js library, the \"maxHeaderWidth\" configuration property will default to the configuration of the \"header-max-length\" rule instead of the hard coded value of 100.  This can be ovewritten by setting the 'maxHeaderWidth' configuration in package.json or the CZ_MAX_HEADER_WIDTH environment variable."}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 68939}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 421876}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1779597}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4975375}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8474759}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 13438324}], "dependentsCount": 172, "starsCount": 13}, "github": {"starsCount": 367, "forksCount": 281, "subscribersCount": 6, "issues": {"count": 119, "openCount": 34, "distribution": {"3600": 20, "10800": 6, "32400": 5, "97200": 8, "291600": 6, "874800": 7, "2624400": 6, "7873200": 11, "23619600": 24, "70858800": 11, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "greenkeeper[bot]", "commitsCount": 8}, {"username": "jimthedev", "commitsCount": 5}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "iainjreid", "commitsCount": 2}, {"username": "kytwb", "commitsCount": 2}, {"username": "travi", "commitsCount": 2}, {"username": "AndersDJohnson", "commitsCount": 1}, {"username": "Den-dp", "commitsCount": 1}, {"username": "Rayman", "commitsCount": 1}, {"username": "adjohnson916", "commitsCount": 1}, {"username": "amaury-tobias", "commitsCount": 1}, {"username": "ivikash", "commitsCount": 1}, {"username": "jacobq", "commitsCount": 1}, {"username": "jlengstorf", "commitsCount": 1}, {"username": "markdalgleish", "commitsCount": 1}, {"username": "petermetz", "commitsCount": 1}, {"username": "smccollum-blurb", "commitsCount": 1}, {"username": "tomkaar", "commitsCount": 1}, {"username": "yinzara", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 10}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2206, "testsSize": 15325}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/cz-conventional-changelog.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/cz-conventional-changelog.svg", "content": "https://img.shields.io/npm/v/cz-conventional-changelog.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/cz-conventional-changelog.svg?from=2015-08-01", "shields": "https://img.shields.io/npm/dm/cz-conventional-changelog.svg", "content": "https://img.shields.io/npm/dm/cz-conventional-changelog.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/commitizen/cz-conventional-changelog.svg?style=flat-square", "service": "https://api.travis-ci.org/commitizen/cz-conventional-changelog.svg", "shields": "https://img.shields.io/travis/commitizen/cz-conventional-changelog.svg", "content": "https://img.shields.io/travis/commitizen/cz-conventional-changelog.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig", "prettier"], "outdatedDependencies": {"chalk": {"required": "^2.4.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.85, "health": 0.375, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 686, "downloadsCount": 1658458.3333333333, "downloadsAcceleration": 8191.810597412479, "dependentsCount": 172}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7507191780821918, "openIssues": 0.8571428571428572, "issuesDistribution": 0}}, "score": {"final": 0.6349145515146648, "detail": {"quality": 0.8635960162307337, "popularity": 0.40750148857599966, "maintenance": 0.6663149304109854}}}}, {"enzyme-adapter-react-16": {"analyzedAt": "2020-05-20T09:05:24.061Z", "collected": {"metadata": {"name": "enzyme-adapter-react-16", "scope": "unscoped", "version": "1.15.2", "description": "JavaScript Testing utilities for React", "keywords": ["javascript", "shallow rendering", "shallowRender", "test", "reactjs", "react", "flux", "testing", "test utils", "assertion helpers", "tdd", "mocha"], "date": "2019-12-19T23:16:25.577Z", "author": {"name": "Leland Richardson", "email": "leland.richardson@airbnb.com"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "noratarano", "email": "noratarano@gmail.com"}, {"username": "etienne_tripier", "email": "etienne.tripier@airbnb.com"}, {"username": "schleyfox", "email": "ben@pixelmachine.org"}, {"username": "milesj", "email": "mileswjohnson@gmail.com"}, {"username": "lencioni", "email": "joe.lencioni@gmail.com"}, {"username": "airbnbeng", "email": "opensource@airbnb.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "intelligibabble", "email": "leland.m.richardson@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/airbnb/enzyme.git", "directory": "packages/enzyme-adapter-react-16"}, "links": {"npm": "https://www.npmjs.com/package/enzyme-adapter-react-16", "homepage": "https://airbnb.io/enzyme/", "repository": "https://github.com/airbnb/enzyme", "bugs": "https://github.com/airbnb/enzyme/issues"}, "license": "MIT", "dependencies": {"enzyme-adapter-utils": "^1.13.0", "enzyme-shallow-equal": "^1.0.1", "has": "^1.0.3", "object.assign": "^4.1.0", "object.values": "^1.1.1", "prop-types": "^15.7.2", "react-is": "^16.12.0", "react-test-renderer": "^16.0.0-0", "semver": "^5.7.0"}, "devDependencies": {"babel-cli": "^6.26.0", "babel-plugin-transform-replace-object-assign": "^1.0.0", "babel-preset-airbnb": "^2.6.0", "enzyme": "^3.0.0", "eslint": "^6.7.2", "eslint-config-airbnb": "^18.0.1", "eslint-plugin-import": "^2.19.1", "eslint-plugin-jsx-a11y": "^6.2.3", "eslint-plugin-react": "^7.17.0", "in-publish": "^2.0.0", "rimraf": "^2.6.3", "safe-publish-latest": "^1.1.4"}, "peerDependencies": {"enzyme": "^3.0.0", "react": "^16.0.0-0", "react-dom": "^16.0.0-0"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 6}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 25}], "readme": "Enzyme\n=======\n\n[![Join the chat at https://gitter.im/airbnb/enzyme](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/airbnb/enzyme?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n[![npm Version](https://img.shields.io/npm/v/enzyme.svg)](https://www.npmjs.com/package/enzyme) [![License](https://img.shields.io/npm/l/enzyme.svg)](https://github.com/airbnb/enzyme/blob/master/LICENSE.md) [![Build Status](https://travis-ci.org/airbnb/enzyme.svg)](https://travis-ci.org/airbnb/enzyme) [![Coverage Status](https://coveralls.io/repos/airbnb/enzyme/badge.svg?branch=master&service=github)](https://coveralls.io/github/airbnb/enzyme?branch=master)\n\n\nEnzyme is a JavaScript Testing utility for React that makes it easier to test your React Components' output.\nYou can also manipulate, traverse, and in some ways simulate runtime given the output.\n\nEnzyme's API is meant to be intuitive and flexible by mimicking jQuery's API for DOM manipulation\nand traversal.\n\nUpgrading from Enzyme 2.x or React < 16\n===========\n\nAre you here to check whether or not Enzyme is compatible with React 16? Are you currently using\nEnzyme 2.x? Great! Check out our [migration guide](/docs/guides/migration-from-2-to-3.md) for help\nmoving on to Enzyme v3 where React 16 is supported.\n\n### [Installation](/docs/installation/README.md)\n\nTo get started with enzyme, you can simply install it via npm. You will need to install enzyme\nalong with an Adapter corresponding to the version of react (or other UI Component library) you\nare using. For instance, if you are using enzyme with React 16, you can run:\n\n```bash\nnpm i --save-dev enzyme enzyme-adapter-react-16\n```\n\nEach adapter may have additional peer dependencies which you will need to install as well. For instance,\n`enzyme-adapter-react-16` has peer dependencies on `react` and `react-dom`.\n\nAt the moment, Enzyme has adapters that provide compatibility with `React 16.x`, `React 15.x`,\n`React 0.14.x` and `React 0.13.x`.\n\nThe following adapters are officially provided by enzyme, and have the following compatibility with\nReact:\n\n| Enzyme Adapter Package | React semver compatibility |\n| --- | --- |\n| `enzyme-adapter-react-16` | `^16.4.0-0` |\n| `enzyme-adapter-react-16.3` | `~16.3.0-0` |\n| `enzyme-adapter-react-16.2` | `~16.2` |\n| `enzyme-adapter-react-16.1` | `~16.0.0-0 \\|\\| ~16.1` |\n| `enzyme-adapter-react-15` | `^15.5.0` |\n| `enzyme-adapter-react-15.4` | `15.0.0-0 - 15.4.x` |\n| `enzyme-adapter-react-14` | `^0.14.0` |\n| `enzyme-adapter-react-13` | `^0.13.0` |\n\nFinally, you need to configure enzyme to use the adapter you want it to use. To do this, you can use\nthe top level `configure(...)` API.\n\n```js\nimport Enzyme from 'enzyme';\nimport Adapter from 'enzyme-adapter-react-16';\n\nEnzyme.configure({ adapter: new Adapter() });\n```\n\n3rd Party Adapters\n=============\n\nIt is possible for the community to create additional (non-official) adapters that will make enzyme\nwork with other libraries. If you have made one and it's not included in the list below, feel free\nto make a PR to this README and add a link to it! The known 3rd party adapters are:\n\n| Adapter Package | For Library | Status |\n| --- | --- | --- |\n| [`enzyme-adapter-preact-pure`](https://github.com/preactjs/enzyme-adapter-preact-pure) | [`preact`](https://github.com/developit/preact) | (stable) |\n|[`enzyme-adapter-inferno`](https://github.com/bbc/enzyme-adapter-inferno)|[`inferno`](https://github.com/infernojs/inferno)|(work in progress)|\n\nRunning Enzyme Tests\n===========\n\nEnzyme is unopinionated regarding which test runner or assertion library you use, and should be\ncompatible with all major test runners and assertion libraries out there. The documentation and\nexamples for enzyme use [mocha](https://mochajs.org/) and [chai](http://chaijs.com/), but you\nshould be able to extrapolate to your framework of choice.\n\nIf you are interested in using enzyme with custom assertions and convenience functions for\ntesting your React components, you can consider using:\n\n* [`chai-enzyme`](https://github.com/producthunt/chai-enzyme) with Mocha/Chai.\n* [`jasmine-enzyme`](https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jasmine-enzyme) with Jasmine.\n* [`jest-enzyme`](https://github.com/FormidableLabs/enzyme-matchers/tree/master/packages/jest-enzyme) with Jest.\n* [`should-enzyme`](https://github.com/rkotze/should-enzyme) for should.js.\n* [`expect-enzyme`](https://github.com/PsychoLlama/expect-enzyme) for expect.\n\n\n[Using Enzyme with Mocha](/docs/guides/mocha.md)\n\n[Using Enzyme with Karma](/docs/guides/karma.md)\n\n[Using Enzyme with Browserify](/docs/guides/browserify.md)\n\n[Using Enzyme with SystemJS](/docs/guides/systemjs.md)\n\n[Using Enzyme with Webpack](/docs/guides/webpack.md)\n\n[Using Enzyme with JSDOM](/docs/guides/jsdom.md)\n\n[Using Enzyme with React Native](/docs/guides/react-native.md)\n\n[Using Enzyme with Jest](/docs/guides/jest.md)\n\n[Using Enzyme with Lab](/docs/guides/lab.md)\n\n[Using Enzyme with Tape and AVA](/docs/guides/tape-ava.md)\n\nBasic Usage\n===========\n\n## [Shallow Rendering](/docs/api/shallow.md)\n\n```javascript\nimport React from 'react';\nimport { expect } from 'chai';\nimport { shallow } from 'enzyme';\nimport sinon from 'sinon';\n\nimport MyComponent from './MyComponent';\nimport Foo from './Foo';\n\ndescribe('<MyComponent />', () => {\n  it('renders three <Foo /> components', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find(Foo)).to.have.lengthOf(3);\n  });\n\n  it('renders an `.icon-star`', () => {\n    const wrapper = shallow(<MyComponent />);\n    expect(wrapper.find('.icon-star')).to.have.lengthOf(1);\n  });\n\n  it('renders children when passed in', () => {\n    const wrapper = shallow((\n      <MyComponent>\n        <div className=\"unique\" />\n      </MyComponent>\n    ));\n    expect(wrapper.contains(<div className=\"unique\" />)).to.equal(true);\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = shallow(<Foo onButtonClick={onButtonClick} />);\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/shallow.md)\n\n\n\n## [Full DOM Rendering](/docs/api/mount.md)\n\n```javascript\nimport React from 'react';\nimport sinon from 'sinon';\nimport { expect } from 'chai';\nimport { mount } from 'enzyme';\n\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('allows us to set props', () => {\n    const wrapper = mount(<Foo bar=\"baz\" />);\n    expect(wrapper.props().bar).to.equal('baz');\n    wrapper.setProps({ bar: 'foo' });\n    expect(wrapper.props().bar).to.equal('foo');\n  });\n\n  it('simulates click events', () => {\n    const onButtonClick = sinon.spy();\n    const wrapper = mount((\n      <Foo onButtonClick={onButtonClick} />\n    ));\n    wrapper.find('button').simulate('click');\n    expect(onButtonClick).to.have.property('callCount', 1);\n  });\n\n  it('calls componentDidMount', () => {\n    sinon.spy(Foo.prototype, 'componentDidMount');\n    const wrapper = mount(<Foo />);\n    expect(Foo.prototype.componentDidMount).to.have.property('callCount', 1);\n    Foo.prototype.componentDidMount.restore();\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/mount.md)\n\n\n## [Static Rendered Markup](/docs/api/render.md)\n\n```javascript\nimport React from 'react';\nimport { expect } from 'chai';\nimport { render } from 'enzyme';\n\nimport Foo from './Foo';\n\ndescribe('<Foo />', () => {\n  it('renders three `.foo-bar`s', () => {\n    const wrapper = render(<Foo />);\n    expect(wrapper.find('.foo-bar')).to.have.lengthOf(3);\n  });\n\n  it('renders the title', () => {\n    const wrapper = render(<Foo title=\"unique\" />);\n    expect(wrapper.text()).to.contain('unique');\n  });\n});\n```\n\nRead the full [API Documentation](/docs/api/render.md)\n\n### React Hooks support\n\nEnzyme supports [react hooks](https://reactjs.org/docs/hooks-intro.html) with some limitations in [`.shallow()`](https://airbnb.io/enzyme/docs/api/shallow.html) due to upstream issues in React's shallow renderer:\n\n* `useEffect()` and `useLayoutEffect()` don't get called in the React shallow renderer. [Related issue](https://github.com/facebook/react/issues/15275)\n\n* `useCallback()` doesn't memoize callback in React shallow renderer. [Related issue](https://github.com/facebook/react/issues/15774)\n\n#### [`ReactTestUtils.act()`](https://reactjs.org/docs/test-utils.html#act) wrap\n\nIf you're using React 16.8+ and `.mount()`, Enzyme will wrap apis including [`.simulate()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/simulate.html), [`.setProps()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/setProps.html), [`.setContext()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/setContext.html), [`.invoke()`](https://airbnb.io/enzyme/docs/api/ReactWrapper/invoke.html) with [`ReactTestUtils.act()`](https://reactjs.org/docs/test-utils.html#act) so you don't need to manually wrap it.\n\nA common pattern to trigger handlers with `.act()` and assert is:\n\n```javascript\nconst wrapper = mount(<SomeComponent />);\nact(() => wrapper.prop('handler')());\nwrapper.update();\nexpect(/* ... */);\n```\n\nWe cannot wrap the result of `.prop()` (or `.props()`) with `.act()` in Enzyme internally since it will break the equality of the returned value.\nHowever, you could use `.invoke()` to simplify the code:\n\n```javascript\nconst wrapper = mount(<SomeComponent />);\nwrapper.invoke('handler')();\nexpect(/* ... */);\n```\n\n### Future\n\n[Enzyme Future](/docs/future.md)\n\n\n### Contributing\n\nSee the [Contributors Guide](/CONTRIBUTING.md)\n\n### In the wild\n\nOrganizations and projects using `enzyme` can list themselves [here](INTHEWILD.md).\n\n### License\n\n[MIT](/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 493855}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2422421}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 10284967}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 28553443}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 49241978}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 92700600}], "dependentsCount": 592, "starsCount": 2}, "github": {"homepage": "https://enzymejs.github.io/enzyme/", "starsCount": 18740, "forksCount": 2040, "subscribersCount": 282, "issues": {"count": 2397, "openCount": 248, "distribution": {"3600": 270, "10800": 175, "32400": 227, "97200": 244, "291600": 220, "874800": 232, "2624400": 193, "7873200": 222, "23619600": 238, "70858800": 293, "212576400": 83}, "isDisabled": false}, "contributors": [{"username": "ljharb", "commitsCount": 619}, {"username": "lelandrichardson", "commitsCount": 161}, {"username": "koba04", "commitsCount": 43}, {"username": "nfcampos", "commitsCount": 33}, {"username": "chenesan", "commitsCount": 22}, {"username": "jquense", "commitsCount": 20}, {"username": "jwbay", "commitsCount": 16}, {"username": "minznerjosh", "commitsCount": 15}, {"username": "aweary", "commitsCount": 13}, {"username": "jgzuke", "commitsCount": 13}, {"username": "lamhieu-vk", "commitsCount": 8}, {"username": "blainekasten", "commitsCount": 7}, {"username": "eddyerburgh", "commitsCount": 7}, {"username": "alecrobins", "commitsCount": 6}, {"username": "iancmyers", "commitsCount": 6}, {"username": "marlonbernardes", "commitsCount": 6}, {"username": "dferber90", "commitsCount": 5}, {"username": "madicap", "commitsCount": 5}, {"username": "mwilliamson", "commitsCount": 5}, {"username": "bdwain", "commitsCount": 4}, {"username": "cpojer", "commitsCount": 4}, {"username": "gregberge", "commitsCount": 4}, {"username": "idanilt", "commitsCount": 4}, {"username": "jackfranklin", "commitsCount": 4}, {"username": "jordwest", "commitsCount": 4}, {"username": "k3ithl1m", "commitsCount": 4}, {"username": "kmcq", "commitsCount": 4}, {"username": "peanutenthusiast", "commitsCount": 4}, {"username": "serut", "commitsCount": 4}, {"username": "silvenon", "commitsCount": 4}, {"username": "smacker", "commitsCount": 4}, {"username": "AndersDJohnson", "commitsCount": 3}, {"username": "SimenB", "commitsCount": 3}, {"username": "ahuth", "commitsCount": 3}, {"username": "brucewpaul", "commitsCount": 3}, {"username": "dompuiu", "commitsCount": 3}, {"username": "eps1lon", "commitsCount": 3}, {"username": "erikthedeveloper", "commitsCount": 3}, {"username": "finnigantime", "commitsCount": 3}, {"username": "graingert", "commitsCount": 3}, {"username": "griffinmichl", "commitsCount": 3}, {"username": "istarkov", "commitsCount": 3}, {"username": "krawaller", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "srph", "commitsCount": 3}, {"username": "Andarist", "commitsCount": 2}, {"username": "CurtisHumphrey", "commitsCount": 2}, {"username": "Danwhy", "commitsCount": 2}, {"username": "JoshuaKGoldberg", "commitsCount": 2}, {"username": "ReactiveRaven", "commitsCount": 2}, {"username": "Silviu-Marian", "commitsCount": 2}, {"username": "baldwmic", "commitsCount": 2}, {"username": "barmac", "commitsCount": 2}, {"username": "blackpost38", "commitsCount": 2}, {"username": "bvaughn", "commitsCount": 2}, {"username": "gaearon", "commitsCount": 2}, {"username": "ialexryan", "commitsCount": 2}, {"username": "jakubzitny", "commitsCount": 2}, {"username": "jstoebel", "commitsCount": 2}, {"username": "just-boris", "commitsCount": 2}, {"username": "kentcdodds", "commitsCount": 2}, {"username": "kevinzwhuang", "commitsCount": 2}, {"username": "manishdipankar1711", "commitsCount": 2}, {"username": "mauriciosoares", "commitsCount": 2}, {"username": "mykhailo-riabokon", "commitsCount": 2}, {"username": "ndresx", "commitsCount": 2}, {"username": "rnsloan", "commitsCount": 2}, {"username": "roadhump", "commitsCount": 2}, {"username": "samit4me", "commitsCount": 2}, {"username": "sdemjanenko", "commitsCount": 2}, {"username": "suchipi", "commitsCount": 2}, {"username": "thatjessicakelly", "commitsCount": 2}, {"username": "themouette", "commitsCount": 2}, {"username": "vslinko", "commitsCount": 2}, {"username": "Lukas-Kullmann", "commitsCount": 1}, {"username": "azhuologist", "commitsCount": 1}, {"username": "erickzhao", "commitsCount": 1}, {"username": "f2acode", "commitsCount": 1}, {"username": "fatso83", "commitsCount": 1}, {"username": "gustavovnicius", "commitsCount": 1}, {"username": "hitsuji-no-shippo", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "kingerez", "commitsCount": 1}, {"username": "levimeahan", "commitsCount": 1}, {"username": "mvasin", "commitsCount": 1}, {"username": "ooHmartY", "commitsCount": 1}, {"username": "ottosichert", "commitsCount": 1}, {"username": "pastelsky", "commitsCount": 1}, {"username": "paulvollmer", "commitsCount": 1}, {"username": "peter-mouland", "commitsCount": 1}, {"username": "petersendidit", "commitsCount": 1}, {"username": "robertknight", "commitsCount": 1}, {"username": "rvpanoz", "commitsCount": 1}, {"username": "sergsavoniuk", "commitsCount": 1}, {"username": "skyboyer", "commitsCount": 1}, {"username": "tilgovi", "commitsCount": 1}, {"username": "vnys", "commitsCount": 1}, {"username": "votemike", "commitsCount": 1}, {"username": "wannabefro", "commitsCount": 1}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 26}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 52}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 115}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 711976, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/enzyme.svg", "shields": "https://img.shields.io/npm/v/enzyme.svg", "content": "https://img.shields.io/npm/v/enzyme.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/enzyme.svg", "shields": "https://img.shields.io/npm/l/enzyme.svg", "content": "https://img.shields.io/npm/l/enzyme.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://travis-ci.org/airbnb/enzyme.svg", "service": "https://api.travis-ci.org/airbnb/enzyme.svg", "shields": "https://img.shields.io/travis/airbnb/enzyme.svg", "content": "https://img.shields.io/travis/airbnb/enzyme.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/airbnb/enzyme/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/airbnb/enzyme/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/airbnb/enzyme/master.svg", "content": "https://img.shields.io/coveralls/airbnb/enzyme/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "coverage": 0.95, "outdatedDependencies": {"semver": {"required": "^5.7.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.6925, "health": 0.7777777777777778, "branding": 1}, "popularity": {"communityInterest": 21163, "downloadsCount": 9517814.333333334, "downloadsAcceleration": 27112.57115677322, "dependentsCount": 592}, "maintenance": {"releasesFrequency": 0.7635273972602741, "commitsFrequency": 0.9158082191780822, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7380898245234565, "detail": {"quality": 0.8981361896112446, "popularity": 0.6731420283770264, "maintenance": 0.6658550220232111}}}}, {"node-fetch": {"analyzedAt": "2020-06-11T09:44:06.425Z", "collected": {"metadata": {"name": "node-fetch", "scope": "unscoped", "version": "2.6.0", "description": "A light-weight module that brings window.fetch to node.js", "keywords": ["fetch", "http", "promise"], "date": "2019-05-16T06:39:41.004Z", "author": {"name": "David Frank"}, "publisher": {"username": "bitinn", "email": "bitinn@gmail.com"}, "maintainers": [{"username": "akepinski", "email": "xxczaki@pm.me"}, {"username": "bitinn", "email": "bitinn@gmail.com"}, {"username": "endless", "email": "jimmy@warting.se"}, {"username": "timothygu", "email": "timothygu99@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/bitinn/node-fetch.git"}, "links": {"npm": "https://www.npmjs.com/package/node-fetch", "homepage": "https://github.com/bitinn/node-fetch", "repository": "https://github.com/bitinn/node-fetch", "bugs": "https://github.com/bitinn/node-fetch/issues"}, "license": "MIT", "devDependencies": {"@ungap/url-search-params": "^0.1.2", "abort-controller": "^1.1.0", "abortcontroller-polyfill": "^1.3.0", "babel-core": "^6.26.3", "babel-plugin-istanbul": "^4.1.6", "babel-preset-env": "^1.6.1", "babel-register": "^6.16.3", "chai": "^3.5.0", "chai-as-promised": "^7.1.1", "chai-iterator": "^1.1.1", "chai-string": "~1.3.0", "codecov": "^3.3.0", "cross-env": "^5.2.0", "form-data": "^2.3.3", "is-builtin-module": "^1.0.0", "mocha": "^5.0.0", "nyc": "11.9.0", "parted": "^0.1.1", "promise": "^8.0.3", "resumer": "0.0.0", "rollup": "^0.63.4", "rollup-plugin-babel": "^3.0.7", "string-to-arraybuffer": "^1.0.2", "whatwg-url": "^5.0.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 7}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 14}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 2901588}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 15954947}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 66188965}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 189154480}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 340358918}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 616633440}], "dependentsCount": 9285, "starsCount": 179}, "github": {"starsCount": 5169, "forksCount": 519, "subscribersCount": 63, "issues": {"count": 871, "openCount": 49, "distribution": {"3600": 134, "10800": 71, "32400": 54, "97200": 88, "291600": 78, "874800": 89, "2624400": 104, "7873200": 112, "23619600": 74, "70858800": 50, "212576400": 17}, "isDisabled": false}, "contributors": [{"username": "bitinn", "commitsCount": 175}, {"username": "TimothyGu", "commitsCount": 121}, {"username": "xxczaki", "commitsCount": 44}, {"username": "tinovyatkin", "commitsCount": 25}, {"username": "Richienb", "commitsCount": 19}, {"username": "NotMoni", "commitsCount": 11}, {"username": "jimmywarting", "commitsCount": 7}, {"username": "jkantr", "commitsCount": 7}, {"username": "JustinBeckwith", "commitsCount": 3}, {"username": "bkw", "commitsCount": 3}, {"username": "matthew-andrews", "commitsCount": 3}, {"username": "MarkHerhold", "commitsCount": 2}, {"username": "ahmadnassri", "commitsCount": 2}, {"username": "alextes", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "dmikis", "commitsCount": 2}, {"username": "jstewmon", "commitsCount": 2}, {"username": "kirill-konshin", "commitsCount": 2}, {"username": "m59peacemaker", "commitsCount": 2}, {"username": "wheresrhys", "commitsCount": 2}, {"username": "zkat", "commitsCount": 2}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "KnisterPeter", "commitsCount": 1}, {"username": "MattiSG", "commitsCount": 1}, {"username": "MoritzKn", "commitsCount": 1}, {"username": "ProgramComputer", "commitsCount": 1}, {"username": "Sesamestrong", "commitsCount": 1}, {"username": "SomaticIT", "commitsCount": 1}, {"username": "TooTallNate", "commitsCount": 1}, {"username": "aeosynth", "commitsCount": 1}, {"username": "arc298", "commitsCount": 1}, {"username": "artembykov", "commitsCount": 1}, {"username": "bbosiljcic", "commitsCount": 1}, {"username": "c-kruse", "commitsCount": 1}, {"username": "chrisveness", "commitsCount": 1}, {"username": "edgraaff", "commitsCount": 1}, {"username": "erdahuja", "commitsCount": 1}, {"username": "gajus", "commitsCount": 1}, {"username": "gr2m", "commitsCount": 1}, {"username": "gregory90", "commitsCount": 1}, {"username": "hlthi", "commitsCount": 1}, {"username": "item4", "commitsCount": 1}, {"username": "jdleesmiller", "commitsCount": 1}, {"username": "jmrog", "commitsCount": 1}, {"username": "jnields", "commitsCount": 1}, {"username": "kevinkassimo", "commitsCount": 1}, {"username": "macbre", "commitsCount": 1}, {"username": "maxdumas", "commitsCount": 1}, {"username": "mcuppi", "commitsCount": 1}, {"username": "nazar-pc", "commitsCount": 1}, {"username": "octet-stream", "commitsCount": 1}, {"username": "pekeler", "commitsCount": 1}, {"username": "pensierinmusica", "commitsCount": 1}, {"username": "puckey", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "terminal69", "commitsCount": 1}, {"username": "tricoder42", "commitsCount": 1}, {"username": "wmsmacdonald", "commitsCount": 1}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 8}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 65}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 94}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 107}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 117}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 92257, "hasChangelog": true}, "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.49000000000000005, "tests": 1, "health": 1, "branding": 0}, "popularity": {"communityInterest": 5990, "downloadsCount": 63051493.333333336, "downloadsAcceleration": 179592.0853120244, "dependentsCount": 9285}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4222338695327266}}, "score": {"final": 0.8781473723347234, "detail": {"quality": 0.8148862519458682, "popularity": 0.8380834143507649, "maintenance": 0.9724351477948434}}}}, {"karma-coverage": {"analyzedAt": "2020-06-07T07:24:04.990Z", "collected": {"metadata": {"name": "karma-coverage", "scope": "unscoped", "version": "2.0.2", "description": "A Karma plugin. Generate code coverage.", "keywords": ["karma-plugin", "karma-preprocessor", "karma-reporter", "coverage", "istanbul"], "date": "2020-04-13T16:14:11.632Z", "author": {"name": "SATO taichi", "email": "ryushi@gmail.com"}, "publisher": {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}, "maintainers": [{"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}], "contributors": [{"name": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"name": "Friedel Ziegelmayer", "email": "dignifiedquire@gmail.com"}, {"name": "Aymeric Beaumet", "email": "aymeric@beaumet.me"}, {"name": "johnjbarton", "email": "johnjbarton@johnjbarton.com"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Tim Kang", "email": "timkang@ucla.edu"}, {"name": "hicom150", "email": "hicom150@gmail.com"}, {"name": "Nick Malaguti", "email": "nmalaguti@palantir.com"}, {"name": "Maksim Ryzhikov", "email": "rv.maksim@gmail.com"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "nicojs", "email": "jansennico@gmail.com"}, {"name": "Tanguy Krotoff", "email": "tkrotoff@gmail.com"}, {"name": "Wei Kin Huang", "email": "weikin.huang04@gmail.com"}, {"name": "Douglas Duteil", "email": "douglasduteil@gmail.com"}, {"name": "Matt Winchester", "email": "m_winche@yahoo.com"}, {"name": "Julen Garcia Leunda", "email": "hicom150@gmail.com"}, {"name": "Allen Bierbaum", "email": "abierbaum@gmail.com"}, {"name": "Michael Noack", "email": "michael.noack@sealink.com.au"}, {"name": "Michael Stramel", "email": "m.stramel89@gmail.com"}, {"name": "Nick Matantsev", "email": "nick.matantsev@gmail.com"}, {"name": "Petar Manev", "email": "petar.manev2010@gmail.com"}, {"name": "Robin B\u00f6hm", "email": "robinboehm@googlemail.com"}, {"name": "Ron Derksen", "email": "ron.derksen@informaat.nl"}, {"name": "Ruben Bridgewater", "email": "ruben.bridgewater@fintura.de"}, {"name": "Sahat Yalkabov", "email": "sakhat@gmail.com"}, {"name": "Srinivas Dhanwada", "email": "dhanwada.dev@gmail.com"}, {"name": "Tanjo, Hiroyuki", "email": "expheno@gmail.com"}, {"name": "Taylor Hakes", "email": "taylor@taylorhakes.com"}, {"name": "Taylor McGann", "email": "tmcgann@users.noreply.github.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tom Kirkpatrick", "email": "tom@systemseed.com"}, {"name": "Tyler Waters", "email": "tyler.waters@gmail.com"}, {"name": "Vincent Lemeunier", "email": "vincent.lemeunier+git@gmail.com"}, {"name": "Yusuke Suzuki", "email": "utatane.tea@gmail.com"}, {"name": "aprooks", "email": "alexander.prooks@gmail.com"}, {"name": "carlos", "email": "cafesanu@gmail.com"}, {"name": "fbergr", "email": "fbergr@gmail.com"}, {"name": "piecyk", "email": "piecyk@gmail.com"}, {"name": "Adam Heath", "email": "adam-h@users.noreply.github.com"}, {"name": "terussell85", "email": "terussell85@gmail.com"}, {"name": "Andrew Lane", "email": "AndrewLane@users.noreply.github.com"}, {"name": "Chris Gladd", "email": "chris.m.gladd@gmail.com"}, {"name": "Clayton Watts", "email": "cletusw@gmail.com"}, {"name": "Dan Watling", "email": "dan@synaptik.com"}, {"name": "Diogo Nicoleti", "email": "diogo.nicoleti@gmail.com"}, {"name": "Dmitry Petrov", "email": "dpetroff@gmail.com"}, {"name": "Greg Varsanyi", "email": "gvarsanyi@gmail.com"}, {"name": "Ian Rufus", "email": "ian.j.rufus@gmail.com"}, {"name": "James Talmage", "email": "james@talmage.io"}, {"name": "Joseph Connolly", "email": "joec@avinetworks.com"}, {"name": "Joshua Appelman", "email": "jappelman@xebia.com"}, {"name": "Julie", "email": "ju.ralph@gmail.com"}, {"name": "Kyle Welsby", "email": "kyle@mekyle.com"}, {"name": "Lloyd Smith II", "email": "lloyd@trove.com"}, {"name": "Maciej Rzepin\u0301ski", "email": "maciej.rzepinski@gmail.com"}, {"name": "Marceli.no", "email": "me@marceli.no"}, {"name": "Matt Lewis", "email": "matthew.lewis@socialsignin.co.uk"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-coverage.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-coverage", "homepage": "https://github.com/karma-runner/karma-coverage#readme", "repository": "https://github.com/karma-runner/karma-coverage", "bugs": "https://github.com/karma-runner/karma-coverage/issues"}, "license": "MIT", "dependencies": {"istanbul-lib-coverage": "^3.0.0", "istanbul-lib-instrument": "^4.0.1", "istanbul-lib-report": "^3.0.0", "istanbul-lib-source-maps": "^4.0.0", "istanbul-reports": "^3.0.0", "minimatch": "^3.0.4"}, "devDependencies": {"@commitlint/cli": "^8.3.5", "@commitlint/travis-cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@semantic-release/changelog": "5.0.1", "@semantic-release/git": "9.0.0", "@semantic-release/npm": "7.0.5", "chai": "^4.2.0", "eslint": "^6.5.1", "eslint-config-standard": "^14.1.0", "eslint-plugin-import": "^2.18.2", "eslint-plugin-node": "^10.0.0", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "grunt": "^1.0.3", "grunt-bump": "^0.8.0", "grunt-cli": "^1.3.2", "grunt-conventional-changelog": "^6.1.0", "grunt-conventional-github-releaser": "^1.0.0", "grunt-karma": "^3.0.2", "grunt-npm": "^0.0.2", "grunt-simple-mocha": "^0.4.1", "husky": "^4.2.3", "ibrik": "^2.0.0", "karma": "^4.2.0", "karma-coffee-preprocessor": "1.x || ^0.3.0", "karma-firefox-launcher": "1.x || ^0.1.6", "karma-mocha": "1.x || ^0.2.0", "karma-requirejs": "1.x || ^0.2.2", "load-grunt-tasks": "^5.1.0", "mocha": "^6.0.2", "mocks": "0.0.15", "requirejs": "^2.1.20", "semantic-release": "17.0.4", "sinon": "^7.2.7", "sinon-chai": "^3.3.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# karma-coverage\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-coverage)\n [![npm version](https://img.shields.io/npm/v/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage) [![npm downloads](https://img.shields.io/npm/dm/karma-coverage.svg?style=flat-square)](https://www.npmjs.com/package/karma-coverage)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-coverage/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-coverage) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-coverage.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-coverage#info=devDependencies)\n\n> Generate code coverage using [Istanbul].\n\n## Installation\n\nThe easiest way is to install `karma-coverage` as a `devDependency`,\nby running\n\n```bash\nnpm install karma karma-coverage --save-dev\n```\n\n## Configuration\n\nFor configuration details see [docs/configuration](docs/configuration.md).\n\n## Examples\n\n### Basic\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n\n    // coverage reporter generates the coverage\n    reporters: ['progress', 'coverage'],\n\n    preprocessors: {\n      // source files, that you wanna generate coverage for\n      // do not include tests or libraries\n      // (these files will be instrumented by Istanbul)\n      'src/**/*.js': ['coverage']\n    },\n\n    // optionally, configure the reporter\n    coverageReporter: {\n      type : 'html',\n      dir : 'coverage/'\n    }\n  });\n};\n```\n### CoffeeScript\n\nFor an example on how to use with [CoffeeScript](http://coffeescript.org/)\nsee [examples/coffee](examples/coffee). For an example of how to use with\nCoffeeScript and the RequireJS module loader, see\n[examples/coffee-requirejs](examples/coffee-requirejs) (and also see\nthe `useJSExtensionForCoffeeScript` option in\n[docs/configuration.md](docs/configuration.md)).\n\n### Advanced, multiple reporters\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    files: [\n      'src/**/*.js',\n      'test/**/*.js'\n    ],\n    reporters: ['progress', 'coverage'],\n    preprocessors: {\n      'src/**/*.js': ['coverage']\n    },\n    coverageReporter: {\n      // specify a common output directory\n      dir: 'build/reports/coverage',\n      reporters: [\n        // reporters not supporting the `file` property\n        { type: 'html', subdir: 'report-html' },\n        { type: 'lcov', subdir: 'report-lcov' },\n        // reporters supporting the `file` property, use `subdir` to directly\n        // output them in the `dir` directory\n        { type: 'cobertura', subdir: '.', file: 'cobertura.txt' },\n        { type: 'lcovonly', subdir: '.', file: 'report-lcovonly.txt' },\n        { type: 'teamcity', subdir: '.', file: 'teamcity.txt' },\n        { type: 'text', subdir: '.', file: 'text.txt' },\n        { type: 'text-summary', subdir: '.', file: 'text-summary.txt' },\n      ]\n    }\n  });\n};\n```\n\n### FAQ\n\n#### Don't minify instrumenter output\n\nWhen using the istanbul instrumenter (default), you can disable code compaction by adding the following to your configuration.\n\n```javascript\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    coverageReporter: {\n      instrumenterOptions: {\n        istanbul: { noCompact: true }\n      }\n    }\n  });\n};\n```\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n[Istanbul]: https://istanbul.js.org"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17062}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 360803}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1533057}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4854140}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9141184}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17799514}], "dependentsCount": 310, "starsCount": 28}, "github": {"starsCount": 735, "forksCount": 238, "subscribersCount": 28, "issues": {"count": 415, "openCount": 97, "distribution": {"3600": 23, "10800": 11, "32400": 15, "97200": 17, "291600": 22, "874800": 22, "2624400": 42, "7873200": 64, "23619600": 66, "70858800": 41, "212576400": 92}, "isDisabled": false}, "contributors": [{"username": "vojtajina", "commitsCount": 48}, {"username": "dignifiedquire", "commitsCount": 42}, {"username": "anthony-redFox", "commitsCount": 13}, {"username": "hicom150", "commitsCount": 7}, {"username": "aymericbeaumet", "commitsCount": 6}, {"username": "johnjbarton", "commitsCount": 6}, {"username": "zzo", "commitsCount": 6}, {"username": "nmalaguti", "commitsCount": 4}, {"username": "nicojs", "commitsCount": 3}, {"username": "abierbaum", "commitsCount": 2}, {"username": "douglasduteil", "commitsCount": 2}, {"username": "pr1sm", "commitsCount": 2}, {"username": "timothykang", "commitsCount": 2}, {"username": "tkrotoff", "commitsCount": 2}, {"username": "weikinhuang", "commitsCount": 2}, {"username": "AndrewLane", "commitsCount": 1}, {"username": "Constellation", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "abbr", "commitsCount": 1}, {"username": "adam-h", "commitsCount": 1}, {"username": "aprooks", "commitsCount": 1}, {"username": "cafesanu", "commitsCount": 1}, {"username": "can3p", "commitsCount": 1}, {"username": "chrisgladd", "commitsCount": 1}, {"username": "cletusw", "commitsCount": 1}, {"username": "diogonicoleti", "commitsCount": 1}, {"username": "dpogue", "commitsCount": 1}, {"username": "dwatling", "commitsCount": 1}, {"username": "fbergr", "commitsCount": 1}, {"username": "gvarsanyi", "commitsCount": 1}, {"username": "htanjo", "commitsCount": 1}, {"username": "ianrufus", "commitsCount": 1}, {"username": "jamestalmage", "commitsCount": 1}, {"username": "joseph-connolly", "commitsCount": 1}, {"username": "juliemr", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "kylewelsby", "commitsCount": 1}, {"username": "les2", "commitsCount": 1}, {"username": "m-a-r-c-e-l-i-n-o", "commitsCount": 1}, {"username": "manevpe", "commitsCount": 1}, {"username": "mrzepinski", "commitsCount": 1}, {"username": "mwinche", "commitsCount": 1}, {"username": "piecyk", "commitsCount": 1}, {"username": "robinboehm", "commitsCount": 1}, {"username": "sahat", "commitsCount": 1}, {"username": "semantic-release-bot", "commitsCount": 1}, {"username": "stramel", "commitsCount": 1}, {"username": "tmcgann", "commitsCount": 1}, {"username": "tswaters", "commitsCount": 1}, {"username": "unframework", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25}]}, "source": {"files": {"readmeSize": 3776, "testsSize": 29931, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-coverage.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-coverage.svg", "content": "https://img.shields.io/npm/v/karma-coverage.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-coverage.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-coverage.svg", "content": "https://img.shields.io/npm/dm/karma-coverage.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-coverage/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-coverage.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-coverage/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-coverage/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-coverage.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-coverage.svg", "shields": "https://img.shields.io/david/karma-runner/karma-coverage.svg", "content": "https://img.shields.io/david/karma-runner/karma-coverage.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-coverage.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-coverage/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-coverage.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-coverage.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 1079, "downloadsCount": 1618046.6666666667, "downloadsAcceleration": 1088.6679984779294, "dependentsCount": 310}, "maintenance": {"releasesFrequency": 0.5982876712328767, "commitsFrequency": 0.7155479452054794, "openIssues": 0.9437751004016064, "issuesDistribution": 0}}, "score": {"final": 0.6568749547401856, "detail": {"quality": 0.9439269187264678, "popularity": 0.40709276642349435, "maintenance": 0.6606126024972067}}}}, {"gh-pages": {"analyzedAt": "2020-06-03T13:36:35.162Z", "collected": {"metadata": {"name": "gh-pages", "scope": "unscoped", "version": "3.0.0", "description": "Publish to a gh-pages branch on GitHub (or any other branch on any other remote)", "keywords": ["git", "gh-pages", "github"], "date": "2020-05-29T20:27:52.933Z", "author": {"name": "Tim Schaub", "url": "http://tschaub.net/"}, "publisher": {"username": "tschaub", "email": "tim.schaub@gmail.com"}, "maintainers": [{"username": "markdalgleish", "email": "mark.john.dalgleish@gmail.com"}, {"username": "tschaub", "email": "tim.schaub@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/tschaub/gh-pages.git"}, "links": {"npm": "https://www.npmjs.com/package/gh-pages", "homepage": "https://github.com/tschaub/gh-pages", "repository": "https://github.com/tschaub/gh-pages", "bugs": "https://github.com/tschaub/gh-pages/issues"}, "license": "MIT", "dependencies": {"async": "^2.6.1", "commander": "^2.18.0", "email-addresses": "^3.0.1", "filenamify-url": "^1.0.0", "fs-extra": "^8.1.0", "globby": "^6.1.0"}, "devDependencies": {"chai": "^4.2.0", "dir-compare": "^1.8.0", "eslint": "^7.1.0", "eslint-config-tschaub": "^13.1.0", "mocha": "^6.2.2", "sinon": "^8.0.4", "tmp": "^0.2.1"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gh-pages\n\nPublish files to a `gh-pages` branch on GitHub (or any other branch anywhere else).\n\n## Getting Started\n\n```shell\nnpm install gh-pages --save-dev\n```\n\nThis module requires Git `>=1.9`.\n\n## Basic Usage\n\n```js\nvar ghpages = require('gh-pages');\n\nghpages.publish('dist', function(err) {});\n```\n\n\n## `publish`\n\n```js\nghpages.publish(dir, callback);\n// or...\nghpages.publish(dir, options, callback);\n```\n\nCalling this function will create a temporary clone of the current repository, create a `gh-pages` branch if one doesn't already exist, copy over all files from the base path, or only those that match patterns from the optional `src` configuration, commit all changes, and push to the `origin` remote.\n\nIf a `gh-pages` branch already exists, it will be updated with all commits from the remote before adding any commits from the provided `src` files.\n\n**Note** that any files in the `gh-pages` branch that are *not* in the `src` files **will be removed**.  See the [`add` option](#optionsadd) if you don't want any of the existing files removed.\n\n\n### <a id=\"dir\">`dir`</a>\n* type: `string`\n\nThe base directory for all source files (those listed in the `src` config property).\n\nExample use:\n\n```js\n/**\n * Given the following directory structure:\n *\n *   dist/\n *     index.html\n *     js/\n *       site.js\n *\n * The usage below will create a `gh-pages` branch that looks like this:\n *\n *   index.html\n *   js/\n *     site.js\n *\n */\nghpages.publish('dist', callback);\n```\n\n\n### Options\n\nThe default options work for simple cases.  The options described below let you push to alternate branches, customize your commit messages, and more.\n\n\n#### <a id=\"optionssrc\">options.src</a>\n * type: `string|Array<string>`\n * default: `'**/*'`\n\nThe [minimatch](https://github.com/isaacs/minimatch) pattern or array of patterns used to select which files should be published.\n\n\n#### <a id=\"optionsbranch\">options.branch</a>\n * type: `string`\n * default: `'gh-pages'`\n * `-b | --branch <branch name>`\n\nThe name of the branch you'll be pushing to.  The default uses GitHub's `gh-pages` branch, but this can be configured to push to any branch on any remote.\n\nExample use of the `branch` option:\n\n```js\n/**\n * This task pushes to the `master` branch of the configured `repo`.\n */\nghpages.publish('dist', {\n  branch: 'master',\n  repo: 'https://example.com/other/repo.git'\n}, callback);\n```\n\n\n#### <a id=\"optionsdest\">options.dest</a>\n * type: `string`\n * default: `'.'`\n\nThe destination folder within the destination branch.  By default, all files are published to the root of the repository.\n\nExample use of the `dest` option:\n\n```js\n/**\n * Place content in the static/project subdirectory of the target\n * branch.\n */\nghpages.publish('dist', {\n  dest: 'static/project'\n}, callback);\n```\n\n#### <a id=\"optionsdotfiles\">options.dotfiles</a>\n * type: `boolean`\n * default: `false`\n\nInclude dotfiles.  By default, files starting with `.` are ignored unless they are explicitly provided in the `src` array.  If you want to also include dotfiles that otherwise match your `src` patterns, set `dotfiles: true` in your options.\n\nExample use of the `dotfiles` option:\n\n```js\n/**\n * The usage below will push dotfiles (directories and files)\n * that otherwise match the `src` pattern.\n */\nghpages.publish('dist', {dotfiles: true}, callback);\n```\n\n\n#### <a id=\"optionsadd\">options.add</a>\n * type: `boolean`\n * default: `false`\n\nOnly add, and never remove existing files.  By default, existing files in the target branch are removed before adding the ones from your `src` config.  If you want the task to add new `src` files but leave existing ones untouched, set `add: true` in your options.\n\nExample use of the `add` option:\n\n```js\n/**\n * The usage below will only add files to the `gh-pages` branch, never removing\n * any existing files (even if they don't exist in the `src` config).\n */\nghpages.publish('dist', {add: true}, callback);\n```\n\n\n#### <a id=\"optionsrepo\">options.repo</a>\n * type: `string`\n * default: url for the origin remote of the current dir (assumes a git repository)\n * `-r | --repo <repo url>`\n\nBy default, `gh-pages` assumes that the current working directory is a git repository, and that you want to push changes to the `origin` remote.\n\nIf instead your script is not in a git repository, or if you want to push to another repository, you can provide the repository URL in the `repo` option.\n\nExample use of the `repo` option:\n\n```js\n/**\n * If the current directory is not a clone of the repository you want to work\n * with, set the URL for the repository in the `repo` option.  This usage will\n * push all files in the `src` config to the `gh-pages` branch of the `repo`.\n */\nghpages.publish('dist', {\n  repo: 'https://example.com/other/repo.git'\n}, callback);\n```\n\n\n#### <a id=\"optionsremote\">options.remote</a>\n * type: `string`\n * default: `'origin'`\n\nThe name of the remote you'll be pushing to.  The default is your `'origin'` remote, but this can be configured to push to any remote.\n\nExample use of the `remote` option:\n\n```js\n/**\n * This task pushes to the `gh-pages` branch of of your `upstream` remote.\n */\nghpages.publish('dist', {\n  remote: 'upstream'\n}, callback);\n```\n\n\n#### <a id=\"optionstag\">options.tag</a>\n * type: `string`\n * default: `''`\n\nCreate a tag after committing changes on the target branch.  By default, no tag is created.  To create a tag, provide the tag name as the option value.\n\n\n#### <a id=\"optionsmessage\">options.message</a>\n * type: `string`\n * default: `'Updates'`\n\nThe commit message for all commits.\n\nExample use of the `message` option:\n\n```js\n/**\n * This adds commits with a custom message.\n */\nghpages.publish('dist', {\n  message: 'Auto-generated commit'\n}, callback);\n```\n\n\n#### <a id=\"optionsuser\">options.user</a>\n * type: `Object`\n * default: `null`\n\nIf you are running the `gh-pages` task in a repository without a `user.name` or `user.email` git config properties (or on a machine without these global config properties), you must provide user info before git allows you to commit.  The `options.user` object accepts `name` and `email` string values to identify the committer.\n\nExample use of the `user` option:\n\n```js\nghpages.publish('dist', {\n  user: {\n    name: 'Joe Code',\n    email: 'coder@example.com'\n  }\n}, callback);\n```\n\n#### <a id=\"optionsuser\">options.remove</a>\n * type: `string`\n * default: `'.'`\n\nRemoves files that match the given pattern (Ignored if used together with\n`--add`). By default, `gh-pages` removes everything inside the target branch\nauto-generated directory before copying the new files from `dir`.\n\nExample use of the `remove` option:\n\n```js\nghpages.publish('dist', {\n  remove: \"*.json\"\n}, callback);\n```\n\n\n#### <a id=\"optionspush\">options.push</a>\n * type: `boolean`\n * default: `true`\n\nPush branch to remote.  To commit only (with no push) set to `false`.\n\nExample use of the `push` option:\n\n```js\nghpages.publish('dist', {push: false}, callback);\n```\n\n\n#### <a id=\"optionshistory\">options.history</a>\n * type: `boolean`\n * default: `true`\n\nPush force new commit without parent history.\n\nExample use of the `history` option:\n\n```js\nghpages.publish('dist', {history: false}, callback);\n```\n\n\n#### <a id=\"optionssilent\">options.silent</a>\n * type: `boolean`\n * default: `false`\n\nAvoid showing repository URLs or other information in errors.\n\nExample use of the `silent` option:\n\n```js\n/**\n * This configuration will avoid logging the GH_TOKEN if there is an error.\n */\nghpages.publish('dist', {\n  repo: 'https://' + process.env.GH_TOKEN + '@github.com/user/private-repo.git',\n  silent: true\n}, callback);\n```\n\n\n#### <a id=\"optionsbeforeadd\">options.beforeAdd</a>\n * type: `function`\n * default: `null`\n\nCustom callback that is executed right before `git add`.\n\nThe CLI expects a file exporting the beforeAdd function\n\n```bash\ngh-pages --before-add ./cleanup.js\n```\n\nExample use of the `beforeAdd` option:\n\n```js\n/**\n * beforeAdd makes most sense when `add` option is active\n * Assuming we want to keep everything on the gh-pages branch\n * but remove just `some-outdated-file.txt`\n */\nghpages.publish('dist', {\n  add: true,\n  async beforeAdd(git) {\n    return git.rm('./some-outdated-file.txt');\n  }\n}, callback);\n```\n\n\n#### <a id=\"optionsgit\">options.git</a>\n * type: `string`\n * default: `'git'`\n\nYour `git` executable.\n\nExample use of the `git` option:\n\n```js\n/**\n * If `git` is not on your path, provide the path as shown below.\n */\nghpages.publish('dist', {\n  git: '/path/to/git'\n}, callback);\n```\n\n## Command Line Utility\n\nInstalling the package creates a `gh-pages` command line utility.  Run `gh-pages --help` to see a list of supported options.\n\nWith a local install of `gh-pages`, you can set up a package script with something like the following:\n\n```shell\n\"scripts\": {\n  \"deploy\": \"gh-pages -d dist\"\n}\n```\n\nAnd then to publish everything from your `dist` folder to your `gh-pages` branch, you'd run this:\n\n```shell\nnpm run deploy\n```\n\n## Debugging\n\nTo get additional output from the `gh-pages` script, set `NODE_DEBUG=gh-pages`.  For example:\n\n```shell\nNODE_DEBUG=gh-pages npm run deploy\n```\n\n## Dependencies\n\nNote that this plugin requires Git 1.9 or higher (because it uses the `--exit-code` option for `git ls-remote`).  If you'd like to see this working with earlier versions of Git, please [open an issue](https://github.com/tschaub/gh-pages/issues).\n\n![Test Status](https://github.com/tschaub/gh-pages/workflows/Test/badge.svg)\n\n## Tips\n\n### when get error `branch already exists`\n```\n{ ProcessError: fatal: A branch named 'gh-pages' already exists.\n\n    at ChildProcess.<anonymous> (~/node_modules/gh-pages/lib/git.js:42:16)\n    at ChildProcess.emit (events.js:180:13)\n    at maybeClose (internal/child_process.js:936:16)\n    at Process.ChildProcess._handle.onexit (internal/child_process.js:220:5)\n  code: 128,\n  message: 'fatal: A branch named \\'gh-pages\\' already exists.\\n',\n  name: 'ProcessError' }\n  ```\n\nWhen processing `gh-pages` module generate file in`.cache/` and if stuck some reason like wrong password\nit will not automatically cleanup\n\nRun `~node_modules/gh-pages/bin/gh-pages-clean`\nor remove `~node_modules/gh-pages/.cache`"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 27954}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 156725}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1134391}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3736062}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5719423}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8422375}], "dependentsCount": 518, "starsCount": 88}, "github": {"homepage": "https://www.npmjs.com/package/gh-pages", "starsCount": 2155, "forksCount": 151, "subscribersCount": 19, "issues": {"count": 359, "openCount": 83, "distribution": {"3600": 47, "10800": 5, "32400": 11, "97200": 11, "291600": 21, "874800": 23, "2624400": 44, "7873200": 50, "23619600": 55, "70858800": 51, "212576400": 41}, "isDisabled": false}, "contributors": [{"username": "tschaub", "commitsCount": 105}, {"username": "greenkeeper[bot]", "commitsCount": 18}, {"username": "greenkeeperio-bot", "commitsCount": 18}, {"username": "sunghwan2789", "commitsCount": 10}, {"username": "markdalgleish", "commitsCount": 7}, {"username": "timaschew", "commitsCount": 4}, {"username": "afc163", "commitsCount": 3}, {"username": "AviVahl", "commitsCount": 2}, {"username": "okuryu", "commitsCount": 2}, {"username": "tusharmath", "commitsCount": 2}, {"username": "Ambyjkl", "commitsCount": 1}, {"username": "JRJurman", "commitsCount": 1}, {"username": "MoOx", "commitsCount": 1}, {"username": "Sag-Dev", "commitsCount": 1}, {"username": "Victoire44", "commitsCount": 1}, {"username": "XhmikosR", "commitsCount": 1}, {"username": "Xiphe", "commitsCount": 1}, {"username": "amtrack", "commitsCount": 1}, {"username": "cvan", "commitsCount": 1}, {"username": "d-tsuji", "commitsCount": 1}, {"username": "donavon", "commitsCount": 1}, {"username": "dplusic", "commitsCount": 1}, {"username": "esarbanis", "commitsCount": 1}, {"username": "lelandmiller", "commitsCount": 1}, {"username": "mandeldl", "commitsCount": 1}, {"username": "n1k0", "commitsCount": 1}, {"username": "polyglotm", "commitsCount": 1}, {"username": "sobolevn", "commitsCount": 1}, {"username": "thekevinscott", "commitsCount": 1}, {"username": "thiagofelix", "commitsCount": 1}, {"username": "warmhug", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 24}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 37}]}, "source": {"files": {"readmeSize": 10153, "testsSize": 17136, "hasChangelog": true}, "linters": ["eslint"], "outdatedDependencies": {"fs-extra": {"required": "^8.1.0", "stable": "9.0.0", "latest": "9.0.0"}, "async": {"required": "^2.6.1", "stable": "3.2.0", "latest": "3.2.0"}, "globby": {"required": "^6.1.0", "stable": "11.0.1", "latest": "11.0.1"}, "filenamify-url": {"required": "^1.0.0", "stable": "2.1.1", "latest": "2.1.1"}, "commander": {"required": "^2.18.0", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 2444, "downloadsCount": 1245354, "downloadsAcceleration": 5859.4013888888885, "dependentsCount": 518}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8929109589041095, "openIssues": 0.9480037140204272, "issuesDistribution": 0}}, "score": {"final": 0.6330933444456681, "detail": {"quality": 0.7836073575656846, "popularity": 0.47052833766537794, "maintenance": 0.6666463399802298}}}}, {"vue-router": {"analyzedAt": "2020-06-13T09:07:36.009Z", "collected": {"metadata": {"name": "vue-router", "scope": "unscoped", "version": "3.3.4", "description": "Official router for Vue.js 2", "keywords": ["vue", "router", "routing"], "date": "2020-06-13T09:06:48.277Z", "author": {"name": "Evan You"}, "publisher": {"username": "posva", "email": "posva13@gmail.com"}, "maintainers": [{"username": "posva", "email": "posva13@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue-router.git"}, "links": {"npm": "https://www.npmjs.com/package/vue-router", "homepage": "https://github.com/vuejs/vue-router#readme", "repository": "https://github.com/vuejs/vue-router", "bugs": "https://github.com/vuejs/vue-router/issues"}, "license": "MIT", "devDependencies": {"axios": "^0.19.0", "babel-core": "^6.24.1", "babel-eslint": "^10.0.2", "babel-loader": "^7.1.3", "babel-plugin-syntax-dynamic-import": "^6.18.0", "babel-preset-env": "^1.6.1", "babel-preset-flow-vue": "^1.0.0", "browserstack-local": "^1.4.0", "buble": "^0.19.8", "chromedriver": "^83.0.0", "conventional-changelog-cli": "^2.0.11", "cross-spawn": "^6.0.5", "css-loader": "^2.1.1", "dotenv": "^8.0.0", "es6-promise": "^4.2.8", "eslint": "^4.19.1", "eslint-plugin-flowtype": "^2.46.1", "eslint-plugin-jasmine": "^2.10.1", "eslint-plugin-vue-libs": "^2.1.0", "express": "^4.17.1", "express-urlrewrite": "^1.2.0", "flow-bin": "^0.66.0", "geckodriver": "^1.19.1", "jasmine": "2.8.0", "lint-staged": "^8.2.0", "nightwatch": "^1.3.6", "nightwatch-helpers": "^1.0.0", "path-to-regexp": "^1.8.0", "rollup": "^1.20.1", "rollup-plugin-buble": "^0.19.8", "rollup-plugin-commonjs": "^10.0.2", "rollup-plugin-flow-no-whitespace": "^1.0.0", "rollup-plugin-node-resolve": "^5.2.0", "rollup-plugin-replace": "^2.0.0", "rollup-watch": "^4.0.0", "selenium-server": "^3.141.59", "terser": "^4.2.0", "typescript": "^3.5.2", "vue": "^2.5.16", "vue-loader": "^15.2.1", "vue-template-compiler": "^2.5.16", "vuepress": "^0.14.11", "vuepress-theme-vue": "^1.1.0", "webpack": "^4.35.2", "webpack-dev-middleware": "^3.7.0", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 14}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 21}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 31}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# vue-router [![Build Status](https://img.shields.io/circleci/project/github/vuejs/vue-router/dev.svg)](https://circleci.com/gh/vuejs/vue-router)\n\n> This is vue-router 3.0 which works only with Vue 2.0. For the 1.x router see the [1.0 branch](https://github.com/vuejs/vue-router/tree/1.0).\n\n### Introduction\n\n`vue-router` is the official router for [Vue.js](http://vuejs.org). It deeply integrates with Vue.js core to make building Single Page Applications with Vue.js a breeze. Features include:\n\n- Nested route/view mapping\n- Modular, component-based router configuration\n- Route params, query, wildcards\n- View transition effects powered by Vue.js' transition system\n- Fine-grained navigation control\n- Links with automatic active CSS classes\n- HTML5 history mode or hash mode, with auto-fallback in IE9\n- Customizable Scroll Behavior\n\nGet started with the [documentation](http://router.vuejs.org), or play with the [examples](https://github.com/vuejs/vue-router/tree/dev/examples) (see how to run them below).\n\n### Development Setup\n\n``` bash\n# install deps\nnpm install\n\n# build dist files\nnpm run build\n\n# serve examples at localhost:8080\nnpm run dev\n\n# lint & run all tests\nnpm test\n\n# serve docs at localhost:8080\nnpm run docs\n```\n\n## Releasing\n\n- `yarn run release`\n  - Ensure tests are passing `yarn run test`\n  - Build dist files `VERSION=<the_version> yarn run build`\n  - Build changelog `yarn run changelog`\n  - Commit dist files `git add dist CHANGELOG.md && git commit -m \"[build $VERSION]\"`\n  - Publish a new version `npm version $VERSION --message \"[release] $VERSION\"\n  - Push tags `git push origin refs/tags/v$VERSION && git push`\n  - Publish to npm `npm publish`\n\n## Questions\n\nFor questions and support please use the [Discord chat server](https://chat.vuejs.org) or [the official forum](http://forum.vuejs.org). The issue list of this repo is **exclusively** for bug reports and feature requests.\n\n## Issues\n\nPlease make sure to read the [Issue Reporting Checklist](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md#issue-reporting-guidelines) before opening an issue. Issues not conforming to the guidelines may be closed immediately.\n\n## Contribution\n\nPlease make sure to read the [Contributing Guide](https://github.com/vuejs/vue/blob/dev/.github/CONTRIBUTING.md) before making a pull request.\n\n## Changelog\n\nDetails changes for each release are documented in the [release notes](https://github.com/vuejs/vue-router/releases).\n\n## Stay In Touch\n\n- For latest releases and announcements, follow on Twitter: [@vuejs](https://twitter.com/vuejs)\n\n## License\n\n[MIT](http://opensource.org/licenses/MIT)\n\nCopyright (c) 2013-present Evan You\n\n## Special Thanks\n\n<a href=\"https://www.browserstack.com\">\n  <img src=\"/assets/browserstack-logo-600x315.png\" height=\"80\" title=\"BrowserStack Logo\" alt=\"BrowserStack Logo\" />\n</a>\n\nSpecial thanks to [BrowserStack](https://www.browserstack.com) for letting the maintainers use their service to debug browser specific issues."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 194025}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1224596}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5231658}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 14724561}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 26352703}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 46217643}], "dependentsCount": 7127, "starsCount": 40}, "github": {"homepage": "http://router.vuejs.org/", "starsCount": 16499, "forksCount": 4500, "subscribersCount": 554, "issues": {"count": 3180, "openCount": 155, "distribution": {"3600": 1065, "10800": 333, "32400": 358, "97200": 330, "291600": 183, "874800": 201, "2624400": 187, "7873200": 172, "23619600": 129, "70858800": 127, "212576400": 95}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 418}, {"username": "posva", "commitsCount": 280}, {"username": "fnlctrl", "commitsCount": 30}, {"username": "Alex-Sokolov", "commitsCount": 27}, {"username": "Haeresis", "commitsCount": 25}, {"username": "Jinjiang", "commitsCount": 17}, {"username": "kazupon", "commitsCount": 17}, {"username": "ChangJoo-Park", "commitsCount": 10}, {"username": "LinusBorg", "commitsCount": 9}, {"username": "zrh122", "commitsCount": 9}, {"username": "gbezyuk", "commitsCount": 8}, {"username": "javoski", "commitsCount": 5}, {"username": "ktsn", "commitsCount": 5}, {"username": "JounQin", "commitsCount": 3}, {"username": "PascalAOMS", "commitsCount": 3}, {"username": "iWader", "commitsCount": 3}, {"username": "termosa", "commitsCount": 3}, {"username": "zeratulmdq", "commitsCount": 3}, {"username": "Domino9697", "commitsCount": 2}, {"username": "PeachScript", "commitsCount": 2}, {"username": "akoumjian", "commitsCount": 2}, {"username": "crossjs", "commitsCount": 2}, {"username": "dear-lizhihua", "commitsCount": 2}, {"username": "dharik", "commitsCount": 2}, {"username": "emanuelmutschlechner", "commitsCount": 2}, {"username": "homerjam", "commitsCount": 2}, {"username": "lmichelin", "commitsCount": 2}, {"username": "pearofducks", "commitsCount": 2}, {"username": "shika358", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "wiiikiii", "commitsCount": 2}, {"username": "wjmao88", "commitsCount": 2}, {"username": "zaccharles", "commitsCount": 2}, {"username": "zigomir", "commitsCount": 2}, {"username": "znck", "commitsCount": 2}, {"username": "15238381693", "commitsCount": 1}, {"username": "AVGP", "commitsCount": 1}, {"username": "Astray-git", "commitsCount": 1}, {"username": "BARNZ", "commitsCount": 1}, {"username": "CoolCyberBrain", "commitsCount": 1}, {"username": "CroMarmot", "commitsCount": 1}, {"username": "Dzinlife", "commitsCount": 1}, {"username": "Haroenv", "commitsCount": 1}, {"username": "Mighty683", "commitsCount": 1}, {"username": "NoelDeMartin", "commitsCount": 1}, {"username": "Opinion", "commitsCount": 1}, {"username": "PatrickSachs", "commitsCount": 1}, {"username": "Sayegh7", "commitsCount": 1}, {"username": "Slashgear", "commitsCount": 1}, {"username": "Soupedenuit", "commitsCount": 1}, {"username": "Steven-Chang1114", "commitsCount": 1}, {"username": "YuJianrong", "commitsCount": 1}, {"username": "a631807682", "commitsCount": 1}, {"username": "adi-zz", "commitsCount": 1}, {"username": "aldarund", "commitsCount": 1}, {"username": "bbbbx", "commitsCount": 1}, {"username": "beary", "commitsCount": 1}, {"username": "betweenbrain", "commitsCount": 1}, {"username": "briwa", "commitsCount": 1}, {"username": "darrylhein", "commitsCount": 1}, {"username": "delenamalan", "commitsCount": 1}, {"username": "feute", "commitsCount": 1}, {"username": "gekowa", "commitsCount": 1}, {"username": "gengjiawen", "commitsCount": 1}, {"username": "greggubarev", "commitsCount": 1}, {"username": "gtsiolis", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "iamnotblank", "commitsCount": 1}, {"username": "iiijarvis", "commitsCount": 1}, {"username": "javiertury", "commitsCount": 1}, {"username": "jcoyne", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "kevinkhill", "commitsCount": 1}, {"username": "kxbk100", "commitsCount": 1}, {"username": "lbwa", "commitsCount": 1}, {"username": "liyangworld", "commitsCount": 1}, {"username": "lnkvisitor", "commitsCount": 1}, {"username": "markyong", "commitsCount": 1}, {"username": "mgcation", "commitsCount": 1}, {"username": "monmonmon", "commitsCount": 1}, {"username": "nonomoho", "commitsCount": 1}, {"username": "oohira", "commitsCount": 1}, {"username": "pRizz", "commitsCount": 1}, {"username": "pimlie", "commitsCount": 1}, {"username": "psalaets", "commitsCount": 1}, {"username": "rahaug", "commitsCount": 1}, {"username": "rchl", "commitsCount": 1}, {"username": "rijkvanzanten", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "sirlancelot", "commitsCount": 1}, {"username": "smdev-chulbuji", "commitsCount": 1}, {"username": "smhigley", "commitsCount": 1}, {"username": "songzeng2016", "commitsCount": 1}, {"username": "tamago324", "commitsCount": 1}, {"username": "theozaurus", "commitsCount": 1}, {"username": "trainiac", "commitsCount": 1}, {"username": "tuxinghuan", "commitsCount": 1}, {"username": "yinm", "commitsCount": 1}, {"username": "zhangjiawei0", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 12}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 41}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 58}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 82}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 165}], "statuses": [{"context": "ci/circleci: test-e2e-bs-ie9", "state": "pending"}, {"context": "ci/circleci: test-e2e", "state": "pending"}, {"context": "ci/circleci: lint-flow-types", "state": "pending"}, {"context": "ci/circleci: test-unit", "state": "pending"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 2995, "testsSize": 115665, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/circleci/project/github/vuejs/vue-router/dev.svg", "service": "https://circleci.com/gh/vuejs/vue-router/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue-router/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue-router/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.71, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 21692, "downloadsCount": 4908187, "downloadsAcceleration": 16886.286662861494, "dependentsCount": 7127}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4284152536568516}}, "score": {"final": 0.8825788818941188, "detail": {"quality": 0.9457894222851035, "popularity": 0.7371587884216567, "maintenance": 0.9738185121743084}}}}, {"cheerio": {"analyzedAt": "2020-06-14T00:13:10.206Z", "collected": {"metadata": {"name": "cheerio", "scope": "unscoped", "version": "1.0.0-rc.3", "description": "Tiny, fast, and elegant implementation of core jQuery designed specifically for the server", "keywords": ["htmlparser", "jquery", "selector", "scraper", "parser", "html"], "date": "2019-04-06T22:14:16.077Z", "author": {"name": "Matt Mueller", "email": "mattmuelle@gmail.com", "url": "mat.io", "username": "mattmueller"}, "publisher": {"username": "jugglinmike", "email": "mike@mikepennisi.com"}, "maintainers": [{"username": "davidchambers", "email": "dc@davidchambers.me"}, {"username": "feedic", "email": "me@feedic.com"}, {"username": "jugglinmike", "email": "mike@mikepennisi.com"}, {"username": "mattmueller", "email": "mattmuelle@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/cheeriojs/cheerio.git"}, "links": {"npm": "https://www.npmjs.com/package/cheerio"}, "license": "MIT", "dependencies": {"css-select": "~1.2.0", "dom-serializer": "~0.1.1", "entities": "~1.1.1", "htmlparser2": "^3.9.1", "lodash": "^4.15.0", "parse5": "^3.0.1"}, "devDependencies": {"benchmark": "^2.1.0", "coveralls": "^2.11.9", "expect.js": "~0.3.1", "istanbul": "^0.4.3", "jquery": "^3.0.0", "jsdom": "^9.2.1", "jshint": "^2.9.2", "mocha": "^3.1.2", "xyz": "~1.1.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">cheerio</h1>\n\n<h5 align=\"center\">Fast, flexible & lean implementation of core jQuery designed specifically for the server.</h5>\n\n<div align=\"center\">\n  <a href=\"http://travis-ci.org/cheeriojs/cheerio\">\n    <img src=\"https://secure.travis-ci.org/cheeriojs/cheerio.svg?branch=master\" alt=\"Travis CI\" />\n  </a>\n  <a href=\"https://coveralls.io/r/cheeriojs/cheerio\">\n    <img src=\"http://img.shields.io/coveralls/cheeriojs/cheerio.svg?branch=master&style=flat\" alt=\"Coverage\" />\n  </a>\n  <a href=\"https://gitter.im/cheeriojs/cheerio?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\">\n    <img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/cheeriojs/cheerio\" />\n  </a>\n  <a href=\"#backers\">\n    <img src=\"https://opencollective.com/cheerio/backers/badge.svg\" alt=\"OpenCollective backers\"/>\n  </a>\n  <a href=\"#sponsors\">\n    <img src=\"https://opencollective.com/cheerio/sponsors/badge.svg\" alt=\"OpenCollective sponsors\"/>\n  </a>\n</div>\n\n<br />\n\n```js\nconst cheerio = require('cheerio')\nconst $ = cheerio.load('<h2 class=\"title\">Hello world</h2>')\n\n$('h2.title').text('Hello there!')\n$('h2').addClass('welcome')\n\n$.html()\n//=> <html><head></head><body><h2 class=\"title welcome\">Hello there!</h2></body></html>\n```\n\n## Installation\n`npm install cheerio`\n\n## Features\n__&#10084; Familiar syntax:__\nCheerio implements a subset of core jQuery. Cheerio removes all the DOM inconsistencies and browser cruft from the jQuery library, revealing its truly gorgeous API.\n\n__&#991; Blazingly fast:__\nCheerio works with a very simple, consistent DOM model. As a result parsing, manipulating, and rendering are incredibly efficient. Preliminary end-to-end benchmarks suggest that cheerio is about __8x__ faster than JSDOM.\n\n__&#10049; Incredibly flexible:__\nCheerio wraps around [parse5](https://github.com/inikulin/parse5) parser and can optionally use @FB55's forgiving [htmlparser2](https://github.com/fb55/htmlparser2/). Cheerio can parse nearly any HTML or XML document.\n\n## Cheerio is not a web browser\n\nCheerio parses markup and provides an API for traversing/manipulating the resulting data structure. It does not interpret the result as a web browser does. Specifically, it does *not* produce a visual rendering, apply CSS, load external resources, or execute JavaScript. If your use case requires any of this functionality, you should consider projects like [PhantomJS](http://phantomjs.org/) or [JSDom](https://github.com/tmpvar/jsdom).\n\n## Job Board\n\nLooking for a career upgrade? Check out the available Node.js & Javascript positions at these innovative companies:\n\n<a href=\"https://astro.netlify.com/automattic\"><img src=\"https://astro.netlify.com/static/automattic.png\"></a>\n<a href=\"https://astro.netlify.com/segment\"><img src=\"https://astro.netlify.com/static/segment.png\"></a>\n<a href=\"https://astro.netlify.com/auth0\"><img src=\"https://astro.netlify.com/static/auth0.png\"/></a>\n\n## API\n\n### Markup example we'll be using:\n\n```html\n<ul id=\"fruits\">\n  <li class=\"apple\">Apple</li>\n  <li class=\"orange\">Orange</li>\n  <li class=\"pear\">Pear</li>\n</ul>\n```\n\nThis is the HTML markup we will be using in all of the API examples.\n\n### Loading\nFirst you need to load in the HTML. This step in jQuery is implicit, since jQuery operates on the one, baked-in DOM. With Cheerio, we need to pass in the HTML document.\n\nThis is the _preferred_ method:\n\n```js\nconst cheerio = require('cheerio');\nconst $ = cheerio.load('<ul id=\"fruits\">...</ul>');\n```\n\nOptionally, you can also load in the HTML by passing the string as the context:\n\n```js\nconst $ = require('cheerio');\n$('ul', '<ul id=\"fruits\">...</ul>');\n```\n\nOr as the root:\n\n```js\nconst $ = require('cheerio');\n$('li', 'ul', '<ul id=\"fruits\">...</ul>');\n```\n\nIf you need to modify parsing options for XML input, you may pass an extra\nobject to `.load()`:\n\n```js\nconst $ = cheerio.load('<ul id=\"fruits\">...</ul>', {\n    xml: {\n      normalizeWhitespace: true,\n    }\n});\n```\n\nThe options in the `xml` object are taken directly from [htmlparser2](https://github.com/fb55/htmlparser2/wiki/Parser-options), therefore any options that can be used in `htmlparser2` are valid in cheerio as well. The default options are:\n\n```js\n{\n    withDomLvl1: true,\n    normalizeWhitespace: false,\n    xmlMode: true,\n    decodeEntities: true\n}\n```\n\nFor a full list of options and their effects, see [this](https://github.com/fb55/DomHandler) and\n[htmlparser2's options](https://github.com/fb55/htmlparser2/wiki/Parser-options).\n\nSome users may wish to parse markup with the `htmlparser2` library, and\ntraverse/manipulate the resulting structure with Cheerio. This may be the case\nfor those upgrading from pre-1.0 releases of Cheerio (which relied on\n`htmlparser2`), for those dealing with invalid markup (because `htmlparser2` is\nmore forgiving), or for those operating in performance-critical situations\n(because `htmlparser2` may be faster in some cases). Note that \"more forgiving\"\nmeans `htmlparser2` has error-correcting mechanisms that aren't always a match\nfor the standards observed by web browsers. This behavior may be useful when\nparsing non-HTML content.\n\nTo support these cases, `load` also accepts a `htmlparser2`-compatible data\nstructure as its first argument. Users may install `htmlparser2`, use it to\nparse input, and pass the result to `load`:\n\n```js\n// Usage as of htmlparser2 version 3:\nconst htmlparser2 = require('htmlparser2');\nconst dom = htmlparser2.parseDOM(document, options);\n\nconst $ = cheerio.load(dom);\n```\n\n### Selectors\n\nCheerio's selector implementation is nearly identical to jQuery's, so the API is very similar.\n\n#### $( selector, [context], [root] )\n`selector` searches within the `context` scope which searches within the `root` scope. `selector` and `context` can be a string expression, DOM Element, array of DOM elements, or cheerio object. `root` is typically the HTML document string.\n\nThis selector method is the starting point for traversing and manipulating the document. Like jQuery, it's the primary method for selecting elements in the document, but unlike jQuery it's built on top of the CSSSelect library, which implements most of the Sizzle selectors.\n\n```js\n$('.apple', '#fruits').text()\n//=> Apple\n\n$('ul .pear').attr('class')\n//=> pear\n\n$('li[class=orange]').html()\n//=> Orange\n```\n\n### Attributes\nMethods for getting and modifying attributes.\n\n#### .attr( name, value )\nMethod for getting and setting attributes. Gets the attribute value for only the first element in the matched set. If you set an attribute's value to `null`, you remove that attribute. You may also pass a `map` and `function` like jQuery.\n\n```js\n$('ul').attr('id')\n//=> fruits\n\n$('.apple').attr('id', 'favorite').html()\n//=> <li class=\"apple\" id=\"favorite\">Apple</li>\n```\n\n> See http://api.jquery.com/attr/ for more information\n\n#### .prop( name, value )\nMethod for getting and setting properties. Gets the property value for only the first element in the matched set.\n\n```js\n$('input[type=\"checkbox\"]').prop('checked')\n//=> false\n\n$('input[type=\"checkbox\"]').prop('checked', true).val()\n//=> ok\n```\n\n> See http://api.jquery.com/prop/ for more information\n\n#### .data( name, value )\nMethod for getting and setting data attributes. Gets or sets the data attribute value for only the first element in the matched set.\n\n```js\n$('<div data-apple-color=\"red\"></div>').data()\n//=> { appleColor: 'red' }\n\n$('<div data-apple-color=\"red\"></div>').data('apple-color')\n//=> 'red'\n\nconst apple = $('.apple').data('kind', 'mac')\napple.data('kind')\n//=> 'mac'\n```\n\n> See http://api.jquery.com/data/ for more information\n\n#### .val( [value] )\nMethod for getting and setting the value of input, select, and textarea. Note: Support for `map`, and `function` has not been added yet.\n\n```js\n$('input[type=\"text\"]').val()\n//=> input_text\n\n$('input[type=\"text\"]').val('test').html()\n//=> <input type=\"text\" value=\"test\"/>\n```\n\n#### .removeAttr( name )\nMethod for removing attributes by `name`.\n\n```js\n$('.pear').removeAttr('class').html()\n//=> <li>Pear</li>\n```\n\n#### .hasClass( className )\nCheck to see if *any* of the matched elements have the given `className`.\n\n```js\n$('.pear').hasClass('pear')\n//=> true\n\n$('apple').hasClass('fruit')\n//=> false\n\n$('li').hasClass('pear')\n//=> true\n```\n\n#### .addClass( className )\nAdds class(es) to all of the matched elements. Also accepts a `function` like jQuery.\n\n```js\n$('.pear').addClass('fruit').html()\n//=> <li class=\"pear fruit\">Pear</li>\n\n$('.apple').addClass('fruit red').html()\n//=> <li class=\"apple fruit red\">Apple</li>\n```\n\n> See http://api.jquery.com/addClass/ for more information.\n\n#### .removeClass( [className] )\nRemoves one or more space-separated classes from the selected elements. If no `className` is defined, all classes will be removed. Also accepts a `function` like jQuery.\n\n```js\n$('.pear').removeClass('pear').html()\n//=> <li class=\"\">Pear</li>\n\n$('.apple').addClass('red').removeClass().html()\n//=> <li class=\"\">Apple</li>\n```\n\n> See http://api.jquery.com/removeClass/ for more information.\n\n#### .toggleClass( className, [switch] )\nAdd or remove class(es) from the matched elements, depending on either the class's presence or the value of the switch argument. Also accepts a `function` like jQuery.\n\n```js\n$('.apple.green').toggleClass('fruit green red').html()\n//=> <li class=\"apple fruit red\">Apple</li>\n\n$('.apple.green').toggleClass('fruit green red', true).html()\n//=> <li class=\"apple green fruit red\">Apple</li>\n```\n\n> See http://api.jquery.com/toggleClass/ for more information.\n\n#### .is( selector )\n#### .is( element )\n#### .is( selection )\n#### .is( function(index) )\nChecks the current list of elements and returns `true` if _any_ of the elements match the selector. If using an element or Cheerio selection, returns `true` if _any_ of the elements match. If using a predicate function, the function is executed in the context of the selected element, so `this` refers to the current element.\n\n### Forms\n\n#### .serializeArray()\n\nEncode a set of form elements as an array of names and values.\n\n```js\n$('<form><input name=\"foo\" value=\"bar\" /></form>').serializeArray()\n//=> [ { name: 'foo', value: 'bar' } ]\n```\n\n### Traversing\n\n#### .find(selector)\n#### .find(selection)\n#### .find(node)\nGet the descendants of each element in the current set of matched elements, filtered by a selector, jQuery object, or element.\n\n```js\n$('#fruits').find('li').length\n//=> 3\n$('#fruits').find($('.apple')).length\n//=> 1\n```\n\n#### .parent([selector])\nGet the parent of each element in the current set of matched elements, optionally filtered by a selector.\n\n```js\n$('.pear').parent().attr('id')\n//=> fruits\n```\n\n#### .parents([selector])\nGet a set of parents filtered by `selector` of each element in the current set of match elements.\n```js\n$('.orange').parents().length\n// => 2\n$('.orange').parents('#fruits').length\n// => 1\n```\n\n#### .parentsUntil([selector][,filter])\nGet the ancestors of each element in the current set of matched elements, up to but not including the element matched by the selector, DOM node, or cheerio object.\n```js\n$('.orange').parentsUntil('#food').length\n// => 1\n```\n\n#### .closest(selector)\nFor each element in the set, get the first element that matches the selector by testing the element itself and traversing up through its ancestors in the DOM tree.\n\n```js\n$('.orange').closest()\n// => []\n$('.orange').closest('.apple')\n// => []\n$('.orange').closest('li')\n// => [<li class=\"orange\">Orange</li>]\n$('.orange').closest('#fruits')\n// => [<ul id=\"fruits\"> ... </ul>]\n```\n\n#### .next([selector])\nGets the next sibling of the first selected element, optionally filtered by a selector.\n\n```js\n$('.apple').next().hasClass('orange')\n//=> true\n```\n\n#### .nextAll([selector])\nGets all the following siblings of the first selected element, optionally filtered by a selector.\n\n```js\n$('.apple').nextAll()\n//=> [<li class=\"orange\">Orange</li>, <li class=\"pear\">Pear</li>]\n$('.apple').nextAll('.orange')\n//=> [<li class=\"orange\">Orange</li>]\n```\n\n#### .nextUntil([selector], [filter])\nGets all the following siblings up to but not including the element matched by the selector, optionally filtered by another selector.\n\n```js\n$('.apple').nextUntil('.pear')\n//=> [<li class=\"orange\">Orange</li>]\n```\n\n#### .prev([selector])\nGets the previous sibling of the first selected element optionally filtered by a selector.\n\n```js\n$('.orange').prev().hasClass('apple')\n//=> true\n```\n\n#### .prevAll([selector])\nGets all the preceding siblings of the first selected element, optionally filtered by a selector.\n\n```js\n$('.pear').prevAll()\n//=> [<li class=\"orange\">Orange</li>, <li class=\"apple\">Apple</li>]\n$('.pear').prevAll('.orange')\n//=> [<li class=\"orange\">Orange</li>]\n```\n\n#### .prevUntil([selector], [filter])\nGets all the preceding siblings up to but not including the element matched by the selector, optionally filtered by another selector.\n\n```js\n$('.pear').prevUntil('.apple')\n//=> [<li class=\"orange\">Orange</li>]\n```\n\n#### .slice( start, [end] )\nGets the elements matching the specified range\n\n```js\n$('li').slice(1).eq(0).text()\n//=> 'Orange'\n\n$('li').slice(1, 2).length\n//=> 1\n```\n\n#### .siblings([selector])\nGets the first selected element's siblings, excluding itself.\n\n```js\n$('.pear').siblings().length\n//=> 2\n\n$('.pear').siblings('.orange').length\n//=> 1\n\n```\n\n#### .children([selector])\nGets the children of the first selected element.\n\n```js\n$('#fruits').children().length\n//=> 3\n\n$('#fruits').children('.pear').text()\n//=> Pear\n```\n\n#### .contents()\nGets the children of each element in the set of matched elements, including text and comment nodes.\n\n```js\n$('#fruits').contents().length\n//=> 3\n```\n\n#### .each( function(index, element) )\nIterates over a cheerio object, executing a function for each matched element. When the callback is fired, the function is fired in the context of the DOM element, so `this` refers to the current element, which is equivalent to the function parameter `element`. To break out of the `each` loop early, return with `false`.\n\n```js\nconst fruits = [];\n\n$('li').each(function(i, elem) {\n  fruits[i] = $(this).text();\n});\n\nfruits.join(', ');\n//=> Apple, Orange, Pear\n```\n\n#### .map( function(index, element) )\nPass each element in the current matched set through a function, producing a new Cheerio object containing the return values. The function can return an individual data item or an array of data items to be inserted into the resulting set. If an array is returned, the elements inside the array are inserted into the set. If the function returns null or undefined, no element will be inserted.\n\n```js\n$('li').map(function(i, el) {\n  // this === el\n  return $(this).text();\n}).get().join(' ');\n//=> \"apple orange pear\"\n```\n\n#### .filter( selector ) <br /> .filter( selection ) <br /> .filter( element ) <br /> .filter( function(index, element) )\n\nIterates over a cheerio object, reducing the set of selector elements to those that match the selector or pass the function's test. When a Cheerio selection is specified, return only the elements contained in that selection. When an element is specified, return only that element (if it is contained in the original selection). If using the function method, the function is executed in the context of the selected element, so `this` refers to the current element.\n\nSelector:\n\n```js\n$('li').filter('.orange').attr('class');\n//=> orange\n```\n\nFunction:\n\n```js\n$('li').filter(function(i, el) {\n  // this === el\n  return $(this).attr('class') === 'orange';\n}).attr('class')\n//=> orange\n```\n\n#### .not( selector ) <br /> .not( selection ) <br /> .not( element ) <br /> .not( function(index, elem) )\n\nRemove elements from the set of matched elements. Given a jQuery object that represents a set of DOM elements, the `.not()` method constructs a new jQuery object from a subset of the matching elements. The supplied selector is tested against each element; the elements that don't match the selector will be included in the result. The `.not()` method can take a function as its argument in the same way that `.filter()` does. Elements for which the function returns true are excluded from the filtered set; all other elements are included.\n\nSelector:\n\n```js\n$('li').not('.apple').length;\n//=> 2\n```\n\nFunction:\n\n```js\n$('li').not(function(i, el) {\n  // this === el\n  return $(this).attr('class') === 'orange';\n}).length;\n//=> 2\n```\n\n#### .has( selector ) <br /> .has( element )\n\nFilters the set of matched elements to only those which have the given DOM element as a descendant or which have a descendant that matches the given selector. Equivalent to `.filter(':has(selector)')`.\n\nSelector:\n\n```js\n$('ul').has('.pear').attr('id');\n//=> fruits\n```\n\nElement:\n\n```js\n$('ul').has($('.pear')[0]).attr('id');\n//=> fruits\n```\n\n#### .first()\nWill select the first element of a cheerio object\n\n```js\n$('#fruits').children().first().text()\n//=> Apple\n```\n\n#### .last()\nWill select the last element of a cheerio object\n\n```js\n$('#fruits').children().last().text()\n//=> Pear\n```\n\n#### .eq( i )\nReduce the set of matched elements to the one at the specified index. Use `.eq(-i)` to count backwards from the last selected element.\n\n```js\n$('li').eq(0).text()\n//=> Apple\n\n$('li').eq(-1).text()\n//=> Pear\n```\n\n#### .get( [i] )\n\nRetrieve the DOM elements matched by the Cheerio object. If an index is specified, retrieve one of the elements matched by the Cheerio object:\n\n```js\n$('li').get(0).tagName\n//=> li\n```\n\nIf no index is specified, retrieve all elements matched by the Cheerio object:\n\n```js\n$('li').get().length\n//=> 3\n```\n\n#### .index()\n#### .index( selector )\n#### .index( nodeOrSelection )\n\nSearch for a given element from among the matched elements.\n\n```js\n$('.pear').index()\n//=> 2\n$('.orange').index('li')\n//=> 1\n$('.apple').index($('#fruit, li'))\n//=> 1\n```\n\n#### .end()\nEnd the most recent filtering operation in the current chain and return the set of matched elements to its previous state.\n\n```js\n$('li').eq(0).end().length\n//=> 3\n```\n\n#### .add( selector [, context] )\n#### .add( element )\n#### .add( elements )\n#### .add( html )\n#### .add( selection )\nAdd elements to the set of matched elements.\n\n```js\n$('.apple').add('.orange').length\n//=> 2\n```\n\n#### .addBack( [filter] )\n\nAdd the previous set of elements on the stack to the current set, optionally filtered by a selector.\n\n```js\n$('li').eq(0).addBack('.orange').length\n//=> 2\n```\n\n### Manipulation\nMethods for modifying the DOM structure.\n\n#### .append( content, [content, ...] )\nInserts content as the *last* child of each of the selected elements.\n\n```js\n$('ul').append('<li class=\"plum\">Plum</li>')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//      <li class=\"plum\">Plum</li>\n//    </ul>\n```\n\n#### .appendTo( target )\nInsert every element in the set of matched elements to the end of the target.\n\n```js\n$('<li class=\"plum\">Plum</li>').appendTo('#fruits')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//      <li class=\"plum\">Plum</li>\n//    </ul>\n```\n\n#### .prepend( content, [content, ...] )\nInserts content as the *first* child of each of the selected elements.\n\n```js\n$('ul').prepend('<li class=\"plum\">Plum</li>')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .prependTo( target )\nInsert every element in the set of matched elements to the beginning of the target.\n\n```js\n$('<li class=\"plum\">Plum</li>').prependTo('#fruits')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .after( content, [content, ...] )\nInsert content next to each element in the set of matched elements.\n\n```js\n$('.apple').after('<li class=\"plum\">Plum</li>')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .insertAfter( target )\nInsert every element in the set of matched elements after the target.\n\n```js\n$('<li class=\"plum\">Plum</li>').insertAfter('.apple')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .before( content, [content, ...] )\nInsert content previous to each element in the set of matched elements.\n\n```js\n$('.apple').before('<li class=\"plum\">Plum</li>')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .insertBefore( target )\nInsert every element in the set of matched elements before the target.\n\n```js\n$('<li class=\"plum\">Plum</li>').insertBefore('.apple')\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"plum\">Plum</li>\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\n#### .remove( [selector] )\nRemoves the set of matched elements from the DOM and all their children. `selector` filters the set of matched elements to be removed.\n\n```js\n$('.pear').remove()\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//    </ul>\n```\n\n#### .replaceWith( content )\nReplaces matched elements with `content`.\n\n```js\nconst plum = $('<li class=\"plum\">Plum</li>')\n$('.pear').replaceWith(plum)\n$.html()\n//=> <ul id=\"fruits\">\n//     <li class=\"apple\">Apple</li>\n//     <li class=\"orange\">Orange</li>\n//     <li class=\"plum\">Plum</li>\n//   </ul>\n```\n\n#### .empty()\nEmpties an element, removing all its children.\n\n```js\n$('ul').empty()\n$.html()\n//=>  <ul id=\"fruits\"></ul>\n```\n\n#### .html( [htmlString] )\nGets an html content string from the first selected element. If `htmlString` is specified, each selected element's content is replaced by the new content.\n\n```js\n$('.orange').html()\n//=> Orange\n\n$('#fruits').html('<li class=\"mango\">Mango</li>').html()\n//=> <li class=\"mango\">Mango</li>\n```\n\n#### .text( [textString] )\nGet the combined text contents of each element in the set of matched elements, including their descendants. If `textString` is specified, each selected element's content is replaced by the new text content.\n\n```js\n$('.orange').text()\n//=> Orange\n\n$('ul').text()\n//=>  Apple\n//    Orange\n//    Pear\n```\n\n#### .wrap( content )\nThe .wrap() function can take any string or object that could be passed to the $() factory function to specify a DOM structure. This structure may be nested several levels deep, but should contain only one inmost element. A copy of this structure will be wrapped around each of the elements in the set of matched elements. This method returns the original set of elements for chaining purposes.\n\n```js\nconst redFruit = $('<div class=\"red-fruit\"></div>')\n$('.apple').wrap(redFruit)\n\n//=> <ul id=\"fruits\">\n//     <div class=\"red-fruit\">\n//      <li class=\"apple\">Apple</li>\n//     </div>\n//     <li class=\"orange\">Orange</li>\n//     <li class=\"plum\">Plum</li>\n//   </ul>\n\nconst healthy = $('<div class=\"healthy\"></div>')\n$('li').wrap(healthy)\n\n//=> <ul id=\"fruits\">\n//     <div class=\"healthy\">\n//       <li class=\"apple\">Apple</li>\n//     </div>\n//     <div class=\"healthy\">\n//       <li class=\"orange\">Orange</li>\n//     </div>\n//     <div class=\"healthy\">\n//        <li class=\"plum\">Plum</li>\n//     </div>\n//   </ul>\n```\n\n#### .css( [propertName] ) <br /> .css( [ propertyNames] ) <br /> .css( [propertyName], [value] ) <br /> .css( [propertName], [function] ) <br /> .css( [properties] )\n\nGet the value of a style property for the first element in the set of matched elements or set one or more CSS properties for every matched element.\n\n### Rendering\nWhen you're ready to render the document, you can use the `html` utility function:\n\n```js\n$.html()\n//=>  <ul id=\"fruits\">\n//      <li class=\"apple\">Apple</li>\n//      <li class=\"orange\">Orange</li>\n//      <li class=\"pear\">Pear</li>\n//    </ul>\n```\n\nIf you want to return the outerHTML you can use `$.html(selector)`:\n\n```js\n$.html('.pear')\n//=> <li class=\"pear\">Pear</li>\n```\n\nBy default, `html` will leave some tags open. Sometimes you may instead want to render a valid XML document. For example, you might parse the following XML snippet:\n\n```xml\nconst $ = cheerio.load('<media:thumbnail url=\"http://www.foo.com/keyframe.jpg\" width=\"75\" height=\"50\" time=\"12:05:01.123\"/>');\n```\n\n... and later want to render to XML. To do this, you can use the 'xml' utility function:\n\n```js\n$.xml()\n//=>  <media:thumbnail url=\"http://www.foo.com/keyframe.jpg\" width=\"75\" height=\"50\" time=\"12:05:01.123\"/>\n```\n\nYou may also render the text content of a Cheerio object using the `text` static method:\n\n```js\nconst $ = cheerio.load('This is <em>content</em>.')\n$.text()\n//=> This is content.\n```\n\nThe method may be called on the Cheerio module itself--be sure to pass a collection of nodes!\n\n```js\nconst $ = cheerio.load('<div>This is <em>content</em>.</div>')\ncheerio.text($('div'))\n//=> This is content.\n```\n\n### Miscellaneous\nDOM element methods that don't fit anywhere else\n\n#### .toArray()\nRetrieve all the DOM elements contained in the jQuery set as an array.\n\n```js\n$('li').toArray()\n//=> [ {...}, {...}, {...} ]\n```\n\n#### .clone() ####\nClone the cheerio object.\n\n```js\nconst moreFruit = $('#fruits').clone()\n```\n\n### Utilities\n\n#### $.root\n\nSometimes you need to work with the top-level root element. To query it, you can use `$.root()`.\n\n```js\n$.root().append('<ul id=\"vegetables\"></ul>').html();\n//=> <ul id=\"fruits\">...</ul><ul id=\"vegetables\"></ul>\n```\n\n#### $.contains( container, contained )\nChecks to see if the `contained` DOM element is a descendant of the `container` DOM element.\n\n#### $.parseHTML( data [, context ] [, keepScripts ] )\nParses a string into an array of DOM nodes. The `context` argument has no meaning for Cheerio, but it is maintained for API compatability.\n\n#### $.load( html[, options ] )\nCreate a querying function, bound to a document created from the provided markup. Note that similar to web browser contexts, this operation may introduce `<html>`, `<head>`, and `<body>` elements. See the previous section titled \"Loading\" for usage information.\n\n### Plugins\n\nOnce you have loaded a document, you may extend the prototype or the equivalent `fn` property with custom plugin methods:\n\n```js\nconst $ = cheerio.load('<html><body>Hello, <b>world</b>!</body></html>');\n$.prototype.logHtml = function() {\n  console.log(this.html());\n};\n\n$('body').logHtml(); // logs \"Hello, <b>world</b>!\" to the console\n```\n\n### The \"DOM Node\" object\n\nCheerio collections are made up of objects that bear some resemblence to [browser-based DOM nodes](https://developer.mozilla.org/en-US/docs/Web/API/Node). You can expect them to define the following properties:\n\n- `tagName`\n- `parentNode`\n- `previousSibling`\n- `nextSibling`\n- `nodeValue`\n- `firstChild`\n- `childNodes`\n- `lastChild`\n\n## Screencasts\n\nhttp://vimeo.com/31950192\n\n> This video tutorial is a follow-up to Nettut's \"How to Scrape Web Pages with Node.js and jQuery\", using cheerio instead of JSDOM + jQuery. This video shows how easy it is to use cheerio and how much faster cheerio is than JSDOM + jQuery.\n\n## Contributors\n\nThese are some of the contributors that have made cheerio possible:\n\n```\nproject  : cheerio\n repo age : 2 years, 6 months\n active   : 285 days\n commits  : 762\n files    : 36\n authors  :\n   293  Matt Mueller            38.5%\n   133  Matthew Mueller         17.5%\n    92  Mike Pennisi            12.1%\n    54  David Chambers          7.1%\n    30  kpdecker                3.9%\n    19  Felix B\u00f6hm             2.5%\n    17  fb55                    2.2%\n    15  Siddharth Mahendraker   2.0%\n    11  Adam Bretz              1.4%\n     8  Nazar Leush             1.0%\n     7  ironchefpython          0.9%\n     6  Jarno Lepp\u00e4nen         0.8%\n     5  Ben Sheldon             0.7%\n     5  Jos Shepherd            0.7%\n     5  Ryan Schmukler          0.7%\n     5  Steven Vachon           0.7%\n     4  Maciej Adwent           0.5%\n     4  Amir Abu Shareb         0.5%\n     3  jeremy.dentel@brandingbrand.com 0.4%\n     3  Andi Neck               0.4%\n     2  steve                   0.3%\n     2  alexbardas              0.3%\n     2  finspin                 0.3%\n     2  Ali Farhadi             0.3%\n     2  Chris Khoo              0.3%\n     2  Rob Ashton              0.3%\n     2  Thomas Heymann          0.3%\n     2  Jaro Spisak             0.3%\n     2  Dan Dascalescu          0.3%\n     2  Torstein Thune          0.3%\n     2  Wayne Larsen            0.3%\n     1  Timm Preetz             0.1%\n     1  Xavi                    0.1%\n     1  Alex Shaindlin          0.1%\n     1  mattym                  0.1%\n     1  Felix B\u00f6hm            0.1%\n     1  Farid Neshat            0.1%\n     1  Dmitry Mazuro           0.1%\n     1  Jeremy Hubble           0.1%\n     1  nevermind               0.1%\n     1  Manuel Alabor           0.1%\n     1  Matt Liegey             0.1%\n     1  Chris O'Hara            0.1%\n     1  Michael Holroyd         0.1%\n     1  Michiel De Mey          0.1%\n     1  Ben Atkin               0.1%\n     1  Rich Trott              0.1%\n     1  Rob \"Hurricane\" Ashton  0.1%\n     1  Robin Gloster           0.1%\n     1  Simon Boudrias          0.1%\n     1  Sindre Sorhus           0.1%\n     1  xiaohwan                0.1%\n```\n\n## Cheerio in the real world\n\nAre you using cheerio in production? Add it to the [wiki](https://github.com/cheeriojs/cheerio/wiki/Cheerio-in-Production)!\n\n## Testing\n\nTo run the test suite, download the repository, then within the cheerio directory, run:\n\n```shell\nmake setup\nmake test\n```\n\nThis will download the development packages and run the test suite.\n\n## Special Thanks\n\nThis library stands on the shoulders of some incredible developers. A special thanks to:\n\n__&#8226; @FB55 for node-htmlparser2 & CSSSelect:__\nFelix has a knack for writing speedy parsing engines. He completely re-wrote both @tautologistic's `node-htmlparser` and @harry's `node-soupselect` from the ground up, making both of them much faster and more flexible. Cheerio would not be possible without his foundational work\n\n__&#8226; @jQuery team for jQuery:__\nThe core API is the best of its class and despite dealing with all the browser inconsistencies the code base is extremely clean and easy to follow. Much of cheerio's implementation and documentation is from jQuery. Thanks guys.\n\n__&#8226; @visionmedia:__\nThe style, the structure, the open-source\"-ness\" of this library comes from studying TJ's style and using many of his libraries. This dude consistently pumps out high-quality libraries and has always been more than willing to help or answer questions. You rock TJ.\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4247555}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 18379366}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 57295016}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 104238385}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 194116419}], "dependentsCount": 9355, "starsCount": 621}, "github": {"homepage": "https://cheerio.js.org/", "starsCount": 22069, "forksCount": 1389, "subscribersCount": 397, "issues": {"count": 1420, "openCount": 234, "distribution": {"3600": 146, "10800": 65, "32400": 96, "97200": 143, "291600": 117, "874800": 124, "2624400": 137, "7873200": 142, "23619600": 148, "70858800": 138, "212576400": 164}, "isDisabled": false}, "contributors": [{"username": "matthewmueller", "commitsCount": 298}, {"username": "jugglinmike", "commitsCount": 169}, {"username": "fb55", "commitsCount": 79}, {"username": "davidchambers", "commitsCount": 53}, {"username": "kpdecker", "commitsCount": 33}, {"username": "arb", "commitsCount": 11}, {"username": "jarnoharno", "commitsCount": 7}, {"username": "nleush", "commitsCount": 7}, {"username": "0xBADC0FFEE", "commitsCount": 5}, {"username": "alexindigo", "commitsCount": 5}, {"username": "bensheldon", "commitsCount": 5}, {"username": "cvrebert", "commitsCount": 5}, {"username": "greenkeeper[bot]", "commitsCount": 5}, {"username": "stevenvachon", "commitsCount": 5}, {"username": "Maciek416", "commitsCount": 4}, {"username": "finspin", "commitsCount": 4}, {"username": "inikulin", "commitsCount": 4}, {"username": "twolfson", "commitsCount": 4}, {"username": "yields", "commitsCount": 4}, {"username": "DianeLooney", "commitsCount": 3}, {"username": "andineck", "commitsCount": 3}, {"username": "robashton", "commitsCount": 3}, {"username": "rwaldin", "commitsCount": 3}, {"username": "2020steve", "commitsCount": 2}, {"username": "Delgan", "commitsCount": 2}, {"username": "Rycochet", "commitsCount": 2}, {"username": "SamyPesse", "commitsCount": 2}, {"username": "Torthu", "commitsCount": 2}, {"username": "alexbardas", "commitsCount": 2}, {"username": "alexeyraspopov", "commitsCount": 2}, {"username": "coderaiser", "commitsCount": 2}, {"username": "dandv", "commitsCount": 2}, {"username": "farhadi", "commitsCount": 2}, {"username": "thomheymann", "commitsCount": 2}, {"username": "wvl", "commitsCount": 2}, {"username": "Autarc", "commitsCount": 1}, {"username": "JaKXz", "commitsCount": 1}, {"username": "Meekohi", "commitsCount": 1}, {"username": "MichielDeMey", "commitsCount": 1}, {"username": "SBoudrias", "commitsCount": 1}, {"username": "Trott", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "akant10", "commitsCount": 1}, {"username": "alFReD-NSH", "commitsCount": 1}, {"username": "ashaindlin", "commitsCount": 1}, {"username": "astorije", "commitsCount": 1}, {"username": "attomos", "commitsCount": 1}, {"username": "benatkin", "commitsCount": 1}, {"username": "besteman", "commitsCount": 1}, {"username": "bill-bishop", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "chriso", "commitsCount": 1}, {"username": "curbengh", "commitsCount": 1}, {"username": "dYale", "commitsCount": 1}, {"username": "dandlezzz", "commitsCount": 1}, {"username": "darrenscerri", "commitsCount": 1}, {"username": "dekatron", "commitsCount": 1}, {"username": "dhurlburtusa", "commitsCount": 1}, {"username": "digihaven", "commitsCount": 1}, {"username": "elias-winberg", "commitsCount": 1}, {"username": "exoticknight", "commitsCount": 1}, {"username": "frankcash", "commitsCount": 1}, {"username": "frankda", "commitsCount": 1}, {"username": "gabrielf", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "gkatsev", "commitsCount": 1}, {"username": "globin", "commitsCount": 1}, {"username": "h7lin", "commitsCount": 1}, {"username": "harish2704", "commitsCount": 1}, {"username": "hotpxl", "commitsCount": 1}, {"username": "jameswilddev", "commitsCount": 1}, {"username": "jhubble", "commitsCount": 1}, {"username": "joepie91", "commitsCount": 1}, {"username": "kevinsawicki", "commitsCount": 1}, {"username": "konstantin-popov", "commitsCount": 1}, {"username": "leonard-thieu", "commitsCount": 1}, {"username": "lessmind", "commitsCount": 1}, {"username": "papandreou", "commitsCount": 1}, {"username": "piamancini", "commitsCount": 1}, {"username": "plward11", "commitsCount": 1}, {"username": "raoulmillais", "commitsCount": 1}, {"username": "regularfellow", "commitsCount": 1}, {"username": "rgladwell", "commitsCount": 1}, {"username": "ryanbreen", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "sufisaid", "commitsCount": 1}, {"username": "t3chnoboy", "commitsCount": 1}, {"username": "tp", "commitsCount": 1}, {"username": "trevorhreed", "commitsCount": 1}, {"username": "trshafer", "commitsCount": 1}, {"username": "vprasanth", "commitsCount": 1}, {"username": "wahajdar", "commitsCount": 1}, {"username": "xavi-", "commitsCount": 1}, {"username": "xiaohwan", "commitsCount": 1}, {"username": "zeke", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 18}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 19}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 28}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 31125, "testsSize": 184561, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/cheeriojs/cheerio.svg?branch=master", "service": "https://api.travis-ci.org/cheeriojs/cheerio.svg?branch=master", "shields": "https://img.shields.io/travis/cheeriojs/cheerio/master.svg", "content": "https://img.shields.io/travis/cheeriojs/cheerio/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/coveralls/cheeriojs/cheerio.svg?branch=master&style=flat", "service": "https://coveralls.io/repos/cheeriojs/cheerio/badge.svg", "shields": "https://img.shields.io/coveralls/cheeriojs/cheerio.svg", "content": "https://img.shields.io/coveralls/cheeriojs/cheerio.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["jshint"], "coverage": 0.99, "outdatedDependencies": {"dom-serializer": {"required": "~0.1.1", "stable": "1.0.1", "latest": "1.0.1"}, "entities": {"required": "~1.1.1", "stable": "2.0.3", "latest": "2.0.3"}, "htmlparser2": {"required": "^3.9.1", "stable": "4.1.0", "latest": "4.1.0"}, "css-select": {"required": "~1.2.0", "stable": "2.1.0", "latest": "2.1.0"}, "parse5": {"required": "^3.0.1", "stable": "6.0.0", "latest": "6.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.9984999999999999, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 24572, "downloadsCount": 19098338.666666668, "downloadsAcceleration": 32024.015315829543, "dependentsCount": 9355}, "maintenance": {"releasesFrequency": 0.07397260273972603, "commitsFrequency": 0.9357054794520548, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6876981404342228, "detail": {"quality": 0.8567161338421526, "popularity": 0.8224112788263259, "maintenance": 0.4081124362638946}}}}, {"codecov": {"analyzedAt": "2020-05-18T13:26:45.748Z", "collected": {"metadata": {"name": "codecov", "scope": "unscoped", "version": "3.7.0", "description": "Uploading report to Codecov: https://codecov.io", "keywords": ["coverage", "code-coverage", "codecov.io", "codecov"], "date": "2020-05-18T13:15:07.593Z", "author": {"name": "Codecov", "email": "hello@codecov.io"}, "publisher": {"username": "drazisil", "email": "jwbecher@drazisil.com"}, "maintainers": [{"username": "drazisil", "email": "jwbecher@drazisil.com"}, {"username": "eddiemoore", "email": "eddie.moore@gmail.com"}, {"username": "stevepeak", "email": "steve@codecov.io"}], "repository": {"type": "git", "url": "git+https://github.com/codecov/codecov-node.git"}, "links": {"npm": "https://www.npmjs.com/package/codecov", "homepage": "https://github.com/codecov/codecov-node", "repository": "https://github.com/codecov/codecov-node", "bugs": "https://github.com/codecov/codecov-node/issues"}, "license": "MIT", "dependencies": {"argv": "0.0.2", "ignore-walk": "3.0.3", "js-yaml": "3.13.1", "teeny-request": "6.0.1", "urlgrey": "0.4.4"}, "devDependencies": {"eslint": "^5.16.0", "eslint-config-prettier": "^4.1.0", "husky": "4.2.1", "jest": "^24.8.0", "lint-staged": "10.0.7", "mock-fs": "4.10.4", "prettier": "1.19.1"}, "releases": [{"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 0}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 4}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 6}, {"from": "2018-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 13}], "hasTestScript": true, "readme": "# Codecov NodeJS Uploader\n\n[![NPM version][npm-image]][npm-url]\n[![Build Status][travis-image]][travis-url]\n[![Build Status][appveyor-image]][appveyor-url]\n[![codecov.io](https://codecov.io/github/codecov/codecov-node/coverage.svg?branch=master)](https://codecov.io/github/codecov/codecov-node?branch=master)\n[![Dependency Status][depstat-image]][depstat-url]\n[![Dev Dependency Status][devdepstat-image]][devdepstat-url]\n\n[Codecov.io](https://codecov.io/) support for node.js.\n\n## Installation:\n\nAdd the latest version of `codecov` to your package.json:\n\n```\nnpm install codecov --save-dev\n```\n\nor\n\n```\nyarn add codecov --dev\n```\n\n## Usage:\n\nThis script ( `bin/codecov` ) detect your CI provider and all coverage reports and uploads them to Codecov.\n\nOnce your app is instrumented for coverage, and building, simply call `./node_modules/.bin/codecov`.\n\nThis library currently supports the following CI companies: [Travis CI](https://travis-ci.org/), [Travis](https://travis-ci.com/), [Appveyor](https://appveyor.com/), [CircleCI](https://circleci.com/), [Cirrus CI](https://cirrus-ci.org/), [Codeship](https://codeship.io/), [Drone](https://drone.io/), [Jenkins](http://jenkins-ci.org/), [Shippable](https://shippable.com/), [Semaphore](https://semaphoreapp.com/), [Wercker](https://wercker.com/), [Snap CI](https://snap-ci.com/), [Buildkite](https://buildkite.com/), [AWS CodeBuild](https://aws.amazon.com/codebuild/).\n\n#### Upload repo tokens\n\n> Repo tokens are **not** required for public repos tested on Travis-Org, CircleCI or AppVeyor.\n\nRepo tokens are necessary to distinguish your repository from others. You can find your repo token on your repository page at Codecov. Set this unique uuid to `CODECOV_TOKEN` in your environment variables.\n\n```\nexport CODECOV_TOKEN=\":uuid-repo-token\"\n# or\n./node_modules/.bin/codecov --token=:token\n# or\n./node_modules/.bin/nyc report --reporter=text-lcov | ./node_modules/.bin/codecov --pipe\n```\n\n#### [Istanbul](https://github.com/gotwarlost/istanbul)\n\n**With Mocha:**\n\n```sh\nistanbul cover ./node_modules/mocha/bin/_mocha -- -R spec\n./node_modules/.bin/codecov\n```\n\n**With Jasmine:**\n\n```sh\nistanbul cover jasmine-node --captureExceptions spec/\n./node_modules/.bin/codecov\n```\n\n**With Tape:**\n\n```sh\nistanbul cover test.js\n./node_modules/.bin/codecov\n```\n\n[travis-image]: https://travis-ci.org/codecov/codecov-node.svg?branch=master\n[travis-url]: https://travis-ci.org/codecov/codecov-node\n[appveyor-image]: https://ci.appveyor.com/api/projects/status/ea1suiv0tprnq61l?svg=true\n[appveyor-url]: https://ci.appveyor.com/project/eddiemoore/codecov-node/branch/master\n[npm-url]: https://npmjs.org/package/codecov\n[npm-image]: https://img.shields.io/npm/v/codecov.svg\n[depstat-url]: https://david-dm.org/codecov/codecov-node\n[depstat-image]: https://img.shields.io/david/codecov/codecov-node/master.svg\n[devdepstat-url]: https://david-dm.org/codecov/codecov-node#info=devDependencies\n[devdepstat-image]: https://img.shields.io/david/dev/codecov/codecov-node/master.svg\n\n**With NYC**\n\n```\nnyc npm test\nnyc report --reporter=text-lcov > coverage.lcov\n./node_modules/.bin/codecov\n```\n\n## Change Log\n\n- v2.0.0 No longer supports node v0.10 because of the execSync.\n- v2.0.1 Publish as latest instead of next.\n- v2.0.2 Display correct version number in console.\n- v2.1.0 Flags supported http://docs.codecov.io/docs/flags\n- v2.2.0 Support for Jenkins Blue Ocean. Clean reports after upload. Fix for Gitlab.\n- v2.3.0 Added support for Windows. Updated dependencies.\n- v3.0.0 No longer supports node v0.12 because of new version of request\n- v3.0.1 Security fixes\n- v3.0.2 Security fixes\n- v3.0.3 Support non-git/hg root dirs\n- v3.0.4 Security fixes\n- v3.1.0 Custom yaml file. Allow codecov token from yml file.\n- v3.2.0 Added azure pipelines\n- v3.3.0 Added pipe with `--pipe`, `-l`\n- v3.4.0 Added Heroku CI support\n- v3.5.0 Added TeamCity support\n- v3.6.0 Added AWS CodeBuild and Semaphore2\n- v3.6.1 Fix for Semaphore\n- v3.6.2 Command line args sanitized fix\n- v3.6.3 Fix for AWS Codebuild & package updates\n- v3.6.4 Fix Cirrus CI\n- v3.7.0 Remove the X-Amz-Acl: public-read header"}, "npm": {"downloads": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 23282}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 504184}, {"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 2148733}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 6771808}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 10509720}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 17521218}], "dependentsCount": 160, "starsCount": 9}, "github": {"homepage": "https://codecov.io", "starsCount": 245, "forksCount": 101, "subscribersCount": 8, "issues": {"count": 178, "openCount": 37, "distribution": {"3600": 23, "10800": 6, "32400": 4, "97200": 14, "291600": 9, "874800": 14, "2624400": 13, "7873200": 21, "23619600": 31, "70858800": 35, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "eddiemoore", "commitsCount": 50}, {"username": "dotnetCarpenter", "commitsCount": 19}, {"username": "stevepeak", "commitsCount": 16}, {"username": "drazisil", "commitsCount": 6}, {"username": "dtinth", "commitsCount": 4}, {"username": "fabiendem", "commitsCount": 3}, {"username": "iansu", "commitsCount": 3}, {"username": "Ayplow", "commitsCount": 1}, {"username": "ChristianJacobsen", "commitsCount": 1}, {"username": "JustinBeckwith", "commitsCount": 1}, {"username": "Radagaisus", "commitsCount": 1}, {"username": "RoboCafaz", "commitsCount": 1}, {"username": "SpainTrain", "commitsCount": 1}, {"username": "TheDancingCode", "commitsCount": 1}, {"username": "aiell0", "commitsCount": 1}, {"username": "aoberoi", "commitsCount": 1}, {"username": "cstrangedk", "commitsCount": 1}, {"username": "fcpauldiaz", "commitsCount": 1}, {"username": "fhinkel", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "hellatan", "commitsCount": 1}, {"username": "hootener", "commitsCount": 1}, {"username": "ikatyang", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "mightyiam", "commitsCount": 1}, {"username": "mrbrentkelly", "commitsCount": 1}, {"username": "nfischer", "commitsCount": 1}, {"username": "ralic", "commitsCount": 1}, {"username": "reeteshranjan", "commitsCount": 1}, {"username": "rochdev", "commitsCount": 1}, {"username": "ryanlntn", "commitsCount": 1}, {"username": "simov", "commitsCount": 1}, {"username": "sy-hash", "commitsCount": 1}, {"username": "thornbill", "commitsCount": 1}, {"username": "victorb", "commitsCount": 1}, {"username": "victorhqc", "commitsCount": 1}], "commits": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 2}, {"from": "2020-04-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 2}, {"from": "2020-02-18T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 4}, {"from": "2019-11-20T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 16}, {"from": "2019-05-19T00:00:00.000Z", "to": "2020-05-18T00:00:00.000Z", "count": 32}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/pr", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: Build Error", "state": "failure"}]}, "source": {"files": {"readmeSize": 4115, "testsSize": 33843}, "badges": [{"urls": {"original": "https://codecov.io/github/codecov/codecov-node/coverage.svg?branch=master", "service": "https://codecov.io/github/codecov/codecov-node/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/codecov/codecov-node/master.svg", "content": "https://img.shields.io/codecov/c/github/codecov/codecov-node/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://travis-ci.org/codecov/codecov-node.svg?branch=master", "service": "https://api.travis-ci.org/codecov/codecov-node.svg?branch=master", "shields": "https://img.shields.io/travis/codecov/codecov-node/master.svg", "content": "https://img.shields.io/travis/codecov/codecov-node/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/codecov.svg", "shields": "https://img.shields.io/npm/v/codecov.svg", "content": "https://img.shields.io/npm/v/codecov.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/david/codecov/codecov-node/master.svg", "service": "https://david-dm.org/codecov-node/master/codecov-status.svg", "shields": "https://img.shields.io/david/codecov/codecov-node/master.svg", "content": "https://img.shields.io/david/codecov/codecov-node/master.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "codecov"}}}, {"urls": {"original": "https://img.shields.io/david/dev/codecov/codecov-node/master.svg", "service": "https://david-dm.org/codecov-node/master/dev/codecov-status.svg", "shields": "https://img.shields.io/david/dev/codecov/codecov-node/master.svg", "content": "https://img.shields.io/david/dev/codecov/codecov-node/master.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev/codecov"}}}], "linters": ["eslint", "prettier"], "coverage": 0.89, "outdatedDependencies": {"teeny-request": {"required": "6.0.1", "stable": "6.0.3", "latest": "6.0.3"}}}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.921, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 399, "downloadsCount": 2257269.3333333335, "downloadsAcceleration": 8501.273173515981, "dependentsCount": 160}, "maintenance": {"releasesFrequency": 0.839041095890411, "commitsFrequency": 0.7713013698630137, "openIssues": 0.9868913857677902, "issuesDistribution": 0}}, "score": {"final": 0.6615963424134228, "detail": {"quality": 0.959482928446799, "popularity": 0.40160476471149953, "maintenance": 0.6662565606581664}}}}, {"mini-css-extract-plugin": {"analyzedAt": "2020-05-17T01:56:17.727Z", "collected": {"metadata": {"name": "mini-css-extract-plugin", "scope": "unscoped", "version": "0.9.0", "description": "extracts CSS into separate files", "keywords": ["webpack", "css", "extract", "hmr"], "date": "2019-12-20T15:40:46.386Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/mini-css-extract-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/mini-css-extract-plugin", "homepage": "https://github.com/webpack-contrib/mini-css-extract-plugin", "repository": "https://github.com/webpack-contrib/mini-css-extract-plugin", "bugs": "https://github.com/webpack-contrib/mini-css-extract-plugin/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^1.1.0", "normalize-url": "1.9.1", "schema-utils": "^1.0.0", "webpack-sources": "^1.1.0"}, "devDependencies": {"@babel/cli": "^7.7.5", "@babel/core": "^7.7.5", "@babel/preset-env": "^7.7.6", "@commitlint/cli": "^8.1.0", "@commitlint/config-conventional": "^8.1.0", "@webpack-contrib/defaults": "^5.0.2", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-eslint": "^10.0.2", "babel-jest": "^24.8.0", "commitlint-azure-pipelines-cli": "^1.0.2", "cross-env": "^5.2.0", "css-loader": "^3.3.2", "del": "^4.1.1", "del-cli": "^1.1.0", "es-check": "^5.0.0", "eslint": "^6.7.2", "eslint-config-prettier": "^6.0.0", "eslint-plugin-import": "^2.19.1", "file-loader": "^4.0.0", "husky": "^3.0.0", "jest": "^24.8.0", "jest-junit": "^10.0.0", "lint-staged": "^9.5.0", "memory-fs": "^0.4.1", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "standard-version": "^7.0.1", "webpack": "^4.41.3", "webpack-cli": "^3.3.6", "webpack-dev-server": "^3.7.2"}, "peerDependencies": {"webpack": "^4.4.0"}, "releases": [{"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 4}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 6}, {"from": "2018-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <!-- replace with accurate logo e.g from https://worldvectorlogo.com/ -->\n  <img width=\"200\" height=\"200\" src=\"https://cdn.worldvectorlogo.com/logos/javascript.svg\">\n  <a href=\"https://webpack.js.org/\">\n    <img width=\"200\" height=\"200\" vspace=\"\" hspace=\"25\" src=\"https://cdn.rawgit.com/webpack/media/e7485eb2/logo/icon-square-big.svg\">\n  </a>\n  <h1>mini-css-extract-plugin</h1>\n</div>\n\n[![npm][npm]][npm-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n\nThis plugin extracts CSS into separate files. It creates a CSS file per JS file which contains CSS. It supports On-Demand-Loading of CSS and SourceMaps.\n\nIt builds on top of a new webpack v4 feature (module types) and requires webpack 4 to work.\n\nCompared to the extract-text-webpack-plugin:\n\n- Async loading\n- No duplicate compilation (performance)\n- Easier to use\n- Specific to CSS\n\n<h2 align=\"center\">Install</h2>\n\n```bash\nnpm install --save-dev mini-css-extract-plugin\n```\n\n<h2 align=\"center\">Usage</h2>\n\n### Configuration\n\n#### `publicPath`\n\nType: `String|Function`\nDefault: the `publicPath` in `webpackOptions.output`\n\nSpecifies a custom public path for the target file(s).\n\n#### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `mini-css-extract-plugin` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  plugins: [new MiniCssExtractPlugin()],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              esModule: true,\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Minimal example\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // all options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n      ignoreOrder: false, // Enable to remove warnings about conflicting order\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              // you can specify a publicPath here\n              // by default it uses publicPath in webpackOptions.output\n              publicPath: '../',\n              hmr: process.env.NODE_ENV === 'development',\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `publicPath` function example\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule.exports = {\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              publicPath: (resourcePath, context) => {\n                // publicPath is the relative path of the resource to the context\n                // e.g. for ./css/admin/main.css the publicPath will be ../../\n                // while for ./css/main.css the publicPath will be ../\n                return path.relative(path.dirname(resourcePath), context) + '/';\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Advanced configuration example\n\nThis plugin should be used only on `production` builds without `style-loader` in the loaders chain, especially if you want to have HMR in `development`.\n\nHere is an example to have both HMR in `development` and your styles extracted in a file for `production` builds.\n\n(Loaders options left out for clarity, adapt accordingly to your needs.)\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst devMode = process.env.NODE_ENV !== 'production';\n\nmodule.exports = {\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: devMode ? '[name].css' : '[name].[hash].css',\n      chunkFilename: devMode ? '[id].css' : '[id].[hash].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.(sa|sc|c)ss$/,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              hmr: process.env.NODE_ENV === 'development',\n            },\n          },\n          'css-loader',\n          'postcss-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Hot Module Reloading (HMR)\n\nextract-mini-css-plugin supports hot reloading of actual css files in development. Some options are provided to enable HMR of both standard stylesheets and locally scoped CSS or CSS modules. Below is an example configuration of mini-css for HMR use with CSS modules.\n\nWhile we attempt to hmr css-modules. It is not easy to perform when code-splitting with custom chunk names. `reloadAll` is an option that should only be enabled if HMR isn't working correctly. The core challenge with css-modules is that when code-split, the chunk ids can and do end up different compared to the filename.\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule.exports = {\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: MiniCssExtractPlugin.loader,\n            options: {\n              // only enable hot in development\n              hmr: process.env.NODE_ENV === 'development',\n              // if hmr does not work, this is a forceful method.\n              reloadAll: true,\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Minimizing For Production\n\nTo minify the output, use a plugin like [optimize-css-assets-webpack-plugin](https://github.com/NMFR/optimize-css-assets-webpack-plugin). Setting `optimization.minimizer` overrides the defaults provided by webpack, so make sure to also specify a JS minimizer:\n\n**webpack.config.js**\n\n```js\nconst TerserJSPlugin = require('terser-webpack-plugin');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nconst OptimizeCSSAssetsPlugin = require('optimize-css-assets-webpack-plugin');\nmodule.exports = {\n  optimization: {\n    minimizer: [new TerserJSPlugin({}), new OptimizeCSSAssetsPlugin({})],\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n### Features\n\n#### Using preloaded or inlined CSS\n\nThe runtime code detects already added CSS via `<link>` or `<style>` tag.\nThis can be useful when injecting CSS on server-side for Server-Side-Rendering.\nThe `href` of the `<link>` tag has to match the URL that will be used for loading the CSS chunk.\nThe `data-href` attribute can be used for `<link>` and `<style>` too.\nWhen inlining CSS `data-href` must be used.\n\n#### Extracting all CSS in a single file\n\nSimilar to what [extract-text-webpack-plugin](https://github.com/webpack-contrib/extract-text-webpack-plugin) does, the CSS\ncan be extracted in one CSS file using `optimization.splitChunks.cacheGroups`.\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\nmodule.exports = {\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        styles: {\n          name: 'styles',\n          test: /\\.css$/,\n          chunks: 'all',\n          enforce: true,\n        },\n      },\n    },\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: '[name].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n#### Extracting CSS based on entry\n\nYou may also extract the CSS based on the webpack entry name. This is especially useful if you import routes dynamically\nbut want to keep your CSS bundled according to entry. This also prevents the CSS duplication issue one had with the\nExtractTextPlugin.\n\n```javascript\nconst path = require('path');\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nfunction recursiveIssuer(m) {\n  if (m.issuer) {\n    return recursiveIssuer(m.issuer);\n  } else if (m.name) {\n    return m.name;\n  } else {\n    return false;\n  }\n}\n\nmodule.exports = {\n  entry: {\n    foo: path.resolve(__dirname, 'src/foo'),\n    bar: path.resolve(__dirname, 'src/bar'),\n  },\n  optimization: {\n    splitChunks: {\n      cacheGroups: {\n        fooStyles: {\n          name: 'foo',\n          test: (m, c, entry = 'foo') =>\n            m.constructor.name === 'CssModule' && recursiveIssuer(m) === entry,\n          chunks: 'all',\n          enforce: true,\n        },\n        barStyles: {\n          name: 'bar',\n          test: (m, c, entry = 'bar') =>\n            m.constructor.name === 'CssModule' && recursiveIssuer(m) === entry,\n          chunks: 'all',\n          enforce: true,\n        },\n      },\n    },\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      filename: '[name].css',\n    }),\n  ],\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [MiniCssExtractPlugin.loader, 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n#### Module Filename Option\n\nWith the `moduleFilename` option you can use chunk data to customize the filename. This is particularly useful when dealing with multiple entry points and wanting to get more control out of the filename for a given entry point/chunk. In the example below, we'll use `moduleFilename` to output the generated css into a different directory.\n\n```javascript\nconst miniCssExtractPlugin = new MiniCssExtractPlugin({\n  moduleFilename: ({ name }) => `${name.replace('/js/', '/css/')}.css`,\n});\n```\n\n#### Long Term Caching\n\nFor long term caching use `filename: \"[contenthash].css\"`. Optionally add `[name]`.\n\n### Remove Order Warnings\n\nFor projects where css ordering has been mitigated through consistent use of scoping or naming conventions, the css order warnings can be disabled by setting the ignoreOrder flag to true for the plugin.\n\n```javascript\nnew MiniCssExtractPlugin({\n  ignoreOrder: true,\n}),\n```\n\n### Media Query Plugin\n\nIf you'd like to extract the media queries from the extracted CSS (so mobile users don't need to load desktop or tablet specific CSS anymore) you should use one of the following plugins:\n\n- [Media Query Plugin](https://github.com/SassNinja/media-query-plugin)\n- [Media Query Splitting Plugin](https://github.com/mike-diamond/media-query-splitting-plugin)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/mini-css-extract-plugin.svg\n[npm-url]: https://npmjs.com/package/mini-css-extract-plugin\n[node]: https://img.shields.io/node/v/mini-css-extract-plugin.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg\n[deps-url]: https://david-dm.org/webpack-contrib/mini-css-extract-plugin\n[tests]: https://dev.azure.com/webpack-contrib/mini-css-extract-plugin/_apis/build/status/webpack-contrib.mini-css-extract-plugin?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/mini-css-extract-plugin/_build/latest?definitionId=6&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/mini-css-extract-plugin\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=mini-css-extract-plugin\n[size-url]: https://packagephobia.now.sh/result?p=mini-css-extract-plugin"}, "npm": {"downloads": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 378843}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 8104958}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 32955599}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 96003231}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 163189023}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 275186109}], "dependentsCount": 3655, "starsCount": 2}, "github": {"starsCount": 3901, "forksCount": 297, "subscribersCount": 76, "issues": {"count": 529, "openCount": 86, "distribution": {"3600": 99, "10800": 31, "32400": 35, "97200": 49, "291600": 57, "874800": 43, "2624400": 35, "7873200": 48, "23619600": 65, "70858800": 67, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 38}, {"username": "evilebottnawi", "commitsCount": 29}, {"username": "ScriptedAlchemy", "commitsCount": 3}, {"username": "kevinchappell", "commitsCount": 3}, {"username": "michael-ciniawsky", "commitsCount": 3}, {"username": "chenxsan", "commitsCount": 2}, {"username": "eloytoro", "commitsCount": 2}, {"username": "laysent", "commitsCount": 2}, {"username": "LukeeeeBennett", "commitsCount": 1}, {"username": "Pierre-Do", "commitsCount": 1}, {"username": "SassNinja", "commitsCount": 1}, {"username": "SergeyPanchenkoWeWork", "commitsCount": 1}, {"username": "ShanaMaid", "commitsCount": 1}, {"username": "Simek", "commitsCount": 1}, {"username": "bawjensen", "commitsCount": 1}, {"username": "chikara-chan", "commitsCount": 1}, {"username": "cwalten", "commitsCount": 1}, {"username": "d3viant0ne", "commitsCount": 1}, {"username": "evenstensberg", "commitsCount": 1}, {"username": "ganapativs", "commitsCount": 1}, {"username": "gerasimov", "commitsCount": 1}, {"username": "goganchic", "commitsCount": 1}, {"username": "jahed", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "karlvr", "commitsCount": 1}, {"username": "lfre", "commitsCount": 1}, {"username": "maisano", "commitsCount": 1}, {"username": "manniL", "commitsCount": 1}, {"username": "mike-diamond", "commitsCount": 1}, {"username": "mike-marcacci", "commitsCount": 1}, {"username": "mjhenkes", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "piecyk", "commitsCount": 1}, {"username": "rmja", "commitsCount": 1}, {"username": "robert-claypool", "commitsCount": 1}, {"username": "simon04", "commitsCount": 1}, {"username": "stephan281094", "commitsCount": 1}, {"username": "sylver", "commitsCount": 1}, {"username": "tiendq", "commitsCount": 1}, {"username": "unchai", "commitsCount": 1}, {"username": "verydanny", "commitsCount": 1}, {"username": "zhuqingguang", "commitsCount": 1}], "commits": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 13}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 22}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 12606, "testsSize": 66743, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/mini-css-extract-plugin.svg", "shields": "https://img.shields.io/npm/v/mini-css-extract-plugin.svg", "content": "https://img.shields.io/npm/v/mini-css-extract-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg", "service": "https://david-dm.org/webpack-contrib/mini-css-extract-plugin.svg", "shields": "https://img.shields.io/david/webpack-contrib/mini-css-extract-plugin.svg", "content": "https://img.shields.io/david/webpack-contrib/mini-css-extract-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.88, "outdatedDependencies": {"loader-utils": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "normalize-url": {"required": "1.9.1", "stable": "5.0.0", "latest": "5.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.6.6", "latest": "2.6.6"}}}}, "evaluation": {"quality": {"carefulness": 0.49999999999999994, "tests": 0.982, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 4318, "downloadsCount": 32001077, "downloadsAcceleration": 124314.13989726023, "dependentsCount": 3655}, "maintenance": {"releasesFrequency": 0.839041095890411, "commitsFrequency": 0.7168321917808219, "openIssues": 1, "issuesDistribution": 0.34102241549473955}}, "score": {"final": 0.8521500712442474, "detail": {"quality": 0.8498882558222918, "popularity": 0.7598864763796003, "maintenance": 0.9463523650419996}}}}, {"babel-plugin-add-module-exports": {"analyzedAt": "2020-05-09T04:57:53.324Z", "collected": {"metadata": {"name": "babel-plugin-add-module-exports", "scope": "unscoped", "version": "1.0.2", "description": "Fix babel/babel#2212", "keywords": ["babel-plugin", "module.exports"], "date": "2019-04-17T17:13:41.144Z", "author": {"name": "59naga", "email": "i59naga@icloud.com", "username": "59naga"}, "publisher": {"username": "lijunle", "email": "lijunle@gmail.com"}, "maintainers": [{"username": "59naga", "email": "i59naga@icloud.com"}, {"username": "lijunle", "email": "lijunle@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/59naga/babel-plugin-add-module-exports.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-add-module-exports", "homepage": "https://github.com/59naga/babel-plugin-add-module-exports#readme", "repository": "https://github.com/59naga/babel-plugin-add-module-exports", "bugs": "https://github.com/59naga/babel-plugin-add-module-exports/issues"}, "license": "MIT", "dependencies": {"chokidar": "^2.0.4"}, "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-proposal-export-default-from": "^7.0.0", "@babel/preset-env": "^7.0.0", "babel-cli": "^6.26.0", "babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-plugin-rewire": "^1.1.0", "babel-plugin-transform-export-extensions": "^6.22.0", "babel-preset-env": "^1.7.0", "babel-preset-power-assert": "^2.0.0", "babel-preset-react": "^6.24.1", "babel-template": "^6.26.0", "babel-types": "^6.26.0", "conventional-github-releaser": "^3.1.2", "eslint": "^5.1.0", "eslint-config-prettier": "^2.9.0", "eslint-config-standard": "^11.0.0", "eslint-plugin-import": "^2.13.0", "eslint-plugin-node": "^6.0.1", "eslint-plugin-prettier": "^2.6.2", "eslint-plugin-promise": "^3.8.0", "eslint-plugin-standard": "^3.1.0", "mocha": "^5.2.0", "power-assert": "^1.6.0", "prettier": "^1.13.7"}, "optionalDependencies": {"chokidar": "^2.0.4"}, "releases": [{"from": "2020-04-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2019-05-10T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2018-05-10T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "babel-plugin-add-module-exports\n---\n\n<p align=\"right\">\n  <a href=\"https://npmjs.org/package/babel-plugin-add-module-exports\">\n    <img src=\"https://img.shields.io/npm/v/babel-plugin-add-module-exports.svg?style=flat-square\">\n  </a>\n  <a href=\"https://travis-ci.org/59naga/babel-plugin-add-module-exports\">\n    <img src=\"http://img.shields.io/travis/59naga/babel-plugin-add-module-exports.svg?style=flat-square\">\n  </a>\n</p>\n\nWhy?\n---\n\nBabel@6 doesn't export default `module.exports` any more - [T2212 *Kill CommonJS default export behavior*](https://phabricator.babeljs.io/T2212).\n\nBabel@6 transforms the following file\n\n```js\nexport default 'foo'\n```\n\ninto\n\n```js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = 'foo';\n```\n\nTherefore, it is a need to use the ugly `.default` in node.js.\n\n```js\nrequire('./bundle.js') // { default: 'foo' }\nrequire('./bundle.js').default // 'foo'\n```\n\nThis plugin follows the babel@5 behavior - add the `module.exports` if **only** the `export default` declaration exists.\n\n```js\n'use strict';\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = 'foo';\nmodule.exports = exports['default'];\n```\n\nTherefore, our old codes still work fine - the `.default` goes away. :wink:\n\n```js\nrequire('./bundle.js') // foo\n```\n\nUsage\n---\n\nInstall this plugin from npm:\n\n```bash\nnpm install babel-plugin-add-module-exports --save-dev\n# or\nyarn add -D babel-plugin-add-module-exports\n```\n\nWrite the name to [babelrc](https://babeljs.io/docs/usage/babelrc/). It works with [preset-env](http://babeljs.io/docs/en/babel-preset-env/) to output CommonJS code:\n\n```json\n{\n  \"presets\": [\"@babel/env\"],\n  \"plugins\": [\"add-module-exports\"]\n}\n```\n\n### modules: false\n\n**However, the plugin doesn't change the pure-esmodule**.\nthis plugin makes changes only when exists `exports.default` (in other words, using [commonjs](https://babeljs.io/docs/en/babel-plugin-transform-es2015-modules-commonjs/)).\n\n```json\n{\n  \"presets\": [[\"@babel/env\", { \"modules\": false }]],\n  \"plugins\": [\"add-module-exports\"]\n}\n```\n\ninto\n\n```js\nexport default 'foo'\n```\n\n`1.0.0` Currently support is `commonjs` and `umd`.\nDoesn't support `amd`, `systemjs` modules(don't use. there are no plans to support at the moment).\n\n### with Webpack\n\nLikewise, webpack doesn't perform commonjs transformation for [codesplitting](https://webpack.js.org/guides/code-splitting/). Need to set commonjs conversion.\n\n```json\n{\n  \"presets\": [[\"@babel/env\", { \"modules\": \"commonjs\" }]],\n  \"plugins\": [\"add-module-exports\"]\n}\n```\n\nOptions\n---\n\n## `addDefaultProperty`\n\nIf you're exporting an object and wish to maintain compatibility with code using the `require('./bundle.js').default` syntax, you can optionally enable the `addDefaultProperty` option as follows:\n\n```json\n{\n  \"presets\": [\"env\"],\n  \"plugins\": [\n    [\n      \"add-module-exports\",\n      {\n        \"addDefaultProperty\": true\n      }\n    ]\n  ]\n}\n```\n\nThis will cause a second line of code to be added which aliases the `default` name to the exported object like so:\n\n```js\nmodule.exports = exports['default'];\nmodule.exports.default = exports['default']\n```\n\nSee also\n---\n* [babel-plugin-experimental-syntax-dynamic-import](https://github.com/59naga/babel-plugin-experimental-syntax-dynamic-import)\n\nLicense\n---\n[MIT](http://59naga.mit-license.org/)"}, "npm": {"downloads": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 101479}, {"from": "2020-05-02T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 685895}, {"from": "2020-04-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 2908146}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 7984212}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 13850226}, {"from": "2019-05-10T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 25088123}], "dependentsCount": 889, "starsCount": 47}, "github": {"starsCount": 723, "forksCount": 50, "subscribersCount": 9, "issues": {"count": 86, "openCount": 23, "distribution": {"3600": 12, "10800": 7, "32400": 7, "97200": 5, "291600": 8, "874800": 6, "2624400": 4, "7873200": 3, "23619600": 9, "70858800": 17, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "59naga", "commitsCount": 117}, {"username": "lijunle", "commitsCount": 14}, {"username": "DvdGiessen", "commitsCount": 5}, {"username": "tyler-johnson", "commitsCount": 1}], "commits": [{"from": "2020-05-02T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2020-04-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2020-02-09T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2019-11-11T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}, {"from": "2019-05-10T00:00:00.000Z", "to": "2020-05-09T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 3353, "testsSize": 11780}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-plugin-add-module-exports.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/babel-plugin-add-module-exports.svg", "content": "https://img.shields.io/npm/v/babel-plugin-add-module-exports.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/59naga/babel-plugin-add-module-exports.svg?style=flat-square", "service": "https://api.travis-ci.org/59naga/babel-plugin-add-module-exports.svg", "shields": "https://img.shields.io/travis/59naga/babel-plugin-add-module-exports.svg", "content": "https://img.shields.io/travis/59naga/babel-plugin-add-module-exports.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["eslint", "prettier"], "outdatedDependencies": {"chokidar": {"required": "^2.0.4", "stable": "3.4.0", "latest": "3.4.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 833, "downloadsCount": 2661404, "downloadsAcceleration": 9103.683219178078, "dependentsCount": 889}, "maintenance": {"releasesFrequency": 0.1356164383561644, "commitsFrequency": 0, "openIssues": 0.8875968992248062, "issuesDistribution": 0}}, "score": {"final": 0.5523051987068796, "detail": {"quality": 0.9204322098400021, "popularity": 0.4874218911525106, "maintenance": 0.3016510681471435}}}}, {"codelyzer": {"analyzedAt": "2020-06-07T07:52:13.837Z", "collected": {"metadata": {"name": "codelyzer", "scope": "unscoped", "version": "5.2.2", "description": "Linting for Angular applications, following angular.io/styleguide.", "keywords": ["Angular", "style guide", "styleguide", "nglint", "codelyzer", "lint", "tslint"], "date": "2020-03-26T17:24:13.482Z", "author": {"name": "Minko Gechev", "email": "mgechev@gmail.com", "username": "mgechev"}, "publisher": {"username": "mgechev", "email": "mgechev@gmail.com"}, "maintainers": [{"username": "mgechev", "email": "mgechev@gmail.com"}], "contributors": [{"name": "Minko Gechev", "email": "mgechev@gmail.com"}, {"name": "Preslav Semov", "email": "preslavsemov@gmail.com"}, {"name": "William Koza", "email": "william.koza@gmail.com"}, {"name": "Eugenio Romano", "email": "eugenioromanodeveloper@gmail.com"}, {"name": "Rafael Santana", "email": "rafaelsantana3095@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/mgechev/codelyzer.git"}, "links": {"npm": "https://www.npmjs.com/package/codelyzer", "homepage": "https://github.com/mgechev/codelyzer#readme", "repository": "https://github.com/mgechev/codelyzer", "bugs": "https://github.com/mgechev/codelyzer/issues"}, "license": "MIT", "dependencies": {"app-root-path": "^2.2.1", "aria-query": "^3.0.0", "axobject-query": "2.0.2", "css-selector-tokenizer": "^0.7.1", "cssauron": "^1.4.0", "damerau-levenshtein": "^1.0.4", "semver-dsl": "^1.0.1", "source-map": "^0.5.7", "sprintf-js": "^1.1.2"}, "devDependencies": {"@angular/compiler": "9.0.0-next.12", "@angular/core": "9.0.0-next.12", "@commitlint/cli": "8.2.0", "@commitlint/config-angular": "8.2.0", "@types/chai": "4.2.4", "@types/mocha": "5.2.7", "@types/node": "11.15.10", "@types/node-sass": "4.11.0", "@types/sprintf-js": "1.1.2", "cat": "0.2.0", "chai": "4.2.0", "chai-spies": "0.7.1", "cross-env": "6.0.3", "husky": "3.0.9", "js-yaml": "3.13.1", "json-stringify-pretty-compact": "2.0.0", "lint-staged": "9.4.2", "mocha": "6.2.1", "ncp": "2.0.0", "node-sass": "4.13.0", "prettier": "1.17.0", "rimraf": "3.0.0", "rxjs": "6.5.3", "standard-version": "7.1.0", "ts-node": "8.5.4", "tslint": "5.20.0", "typescript": "3.8.2", "zone.js": "0.10.2"}, "peerDependencies": {"@angular/compiler": ">=2.3.1 <10.0.0 || >9.0.0-beta <10.0.0 || >9.1.0-beta <10.0.0 || >9.2.0-beta <10.0.0", "@angular/core": ">=2.3.1 <10.0.0 || >9.0.0-beta <10.0.0 || >9.1.0-beta <10.0.0 || >9.2.0-beta <10.0.0", "tslint": "^5.0.0 || ^6.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 20}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 61398}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1259435}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5300119}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16412510}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 29923837}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 54769206}], "dependentsCount": 160, "starsCount": 14}, "github": {"homepage": "http://codelyzer.com/", "starsCount": 2299, "forksCount": 220, "subscribersCount": 54, "issues": {"count": 965, "openCount": 43, "distribution": {"3600": 184, "10800": 75, "32400": 116, "97200": 136, "291600": 99, "874800": 106, "2624400": 78, "7873200": 64, "23619600": 70, "70858800": 34, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "mgechev", "commitsCount": 467}, {"username": "wKoza", "commitsCount": 62}, {"username": "rafaelss95", "commitsCount": 57}, {"username": "mohammedzamakhan", "commitsCount": 15}, {"username": "rokerkony", "commitsCount": 12}, {"username": "GregOnNet", "commitsCount": 9}, {"username": "alan-agius4", "commitsCount": 6}, {"username": "renovate[bot]", "commitsCount": 6}, {"username": "kevinphelps", "commitsCount": 5}, {"username": "csvn", "commitsCount": 4}, {"username": "eppsilon", "commitsCount": 4}, {"username": "Kobzol", "commitsCount": 3}, {"username": "ghsyeung", "commitsCount": 3}, {"username": "lazarljubenovic", "commitsCount": 3}, {"username": "mattlewis92", "commitsCount": 3}, {"username": "sagittarius-rev", "commitsCount": 3}, {"username": "Foxandxss", "commitsCount": 2}, {"username": "Hotell", "commitsCount": 2}, {"username": "Martin-Wegner", "commitsCount": 2}, {"username": "NagRock", "commitsCount": 2}, {"username": "comfroels", "commitsCount": 2}, {"username": "connor4312", "commitsCount": 2}, {"username": "gbilodeau", "commitsCount": 2}, {"username": "nexus-uw", "commitsCount": 2}, {"username": "plantain-00", "commitsCount": 2}, {"username": "EmmanuelDemey", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "Manduro", "commitsCount": 1}, {"username": "Moeriki", "commitsCount": 1}, {"username": "PapsOu", "commitsCount": 1}, {"username": "YogliB", "commitsCount": 1}, {"username": "aboyton", "commitsCount": 1}, {"username": "alexkpek", "commitsCount": 1}, {"username": "alisd23", "commitsCount": 1}, {"username": "ayazhafiz", "commitsCount": 1}, {"username": "bmvantunes", "commitsCount": 1}, {"username": "cexbrayat", "commitsCount": 1}, {"username": "clydin", "commitsCount": 1}, {"username": "eromano", "commitsCount": 1}, {"username": "karol-depka", "commitsCount": 1}, {"username": "keradus", "commitsCount": 1}, {"username": "leosvelperez", "commitsCount": 1}, {"username": "loktionov129", "commitsCount": 1}, {"username": "muhammadghazali", "commitsCount": 1}, {"username": "reduckted", "commitsCount": 1}, {"username": "robzenn92", "commitsCount": 1}, {"username": "rtfpessoa", "commitsCount": 1}, {"username": "rwlogel", "commitsCount": 1}, {"username": "santoshyadav198613", "commitsCount": 1}, {"username": "scttcper", "commitsCount": 1}, {"username": "sneas", "commitsCount": 1}, {"username": "someblue", "commitsCount": 1}, {"username": "stschake", "commitsCount": 1}, {"username": "tmair", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 91}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 628542, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "prettier", "tslint"], "outdatedDependencies": {"app-root-path": {"required": "^2.2.1", "stable": "3.0.0", "latest": "3.0.0"}, "axobject-query": {"required": "2.0.2", "stable": "2.1.2", "latest": "2.1.2"}, "aria-query": {"required": "^3.0.0", "stable": "4.0.2", "latest": "4.0.2"}, "source-map": {"required": "^0.5.7", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.85, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 2641, "downloadsCount": 5470836.666666667, "downloadsAcceleration": 10702.233466514466, "dependentsCount": 160}, "maintenance": {"releasesFrequency": 0.9415239726027398, "commitsFrequency": 0.7885445205479452, "openIssues": 1, "issuesDistribution": 0.760037819628558}}, "score": {"final": 0.7555237846108644, "detail": {"quality": 0.7652864236626893, "popularity": 0.5036832105658028, "maintenance": 0.9989963823257906}}}}, {"webpack-bundle-analyzer": {"analyzedAt": "2020-05-19T13:19:53.861Z", "collected": {"metadata": {"name": "webpack-bundle-analyzer", "scope": "unscoped", "version": "3.8.0", "description": "Webpack plugin and CLI utility that represents bundle content as convenient interactive zoomable treemap", "keywords": ["webpack", "bundle", "analyzer", "modules", "size", "interactive", "chart", "treemap", "zoomable", "zoom"], "date": "2020-05-19T13:07:03.964Z", "author": {"name": "Yury Grunin", "email": "grunin.ya@ya.ru", "username": "th0r"}, "publisher": {"username": "valscion", "email": "laakso.vesa@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "th0r", "email": "grunin.ya@ya.ru"}, {"username": "valscion", "email": "laakso.vesa@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/webpack-bundle-analyzer.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-bundle-analyzer", "homepage": "https://github.com/webpack-contrib/webpack-bundle-analyzer", "repository": "https://github.com/webpack-contrib/webpack-bundle-analyzer", "bugs": "https://github.com/webpack-contrib/webpack-bundle-analyzer/issues"}, "license": "MIT", "dependencies": {"acorn": "^7.1.1", "acorn-walk": "^7.1.1", "bfj": "^6.1.1", "chalk": "^2.4.1", "commander": "^2.18.0", "ejs": "^2.6.1", "express": "^4.16.3", "filesize": "^3.6.1", "gzip-size": "^5.0.0", "lodash": "^4.17.15", "mkdirp": "^0.5.1", "opener": "^1.5.1", "ws": "^6.0.0"}, "devDependencies": {"@babel/core": "7.4.3", "@babel/plugin-proposal-class-properties": "7.4.0", "@babel/plugin-proposal-decorators": "7.4.0", "@babel/plugin-transform-runtime": "7.4.3", "@babel/polyfill": "7.4.3", "@babel/preset-env": "7.4.3", "@babel/preset-react": "7.0.0", "@babel/register": "7.4.0", "@babel/runtime": "7.4.3", "autoprefixer": "9.5.1", "babel-eslint": "10.0.1", "babel-loader": "8.0.5", "babel-plugin-lodash": "3.3.4", "chai": "4.2.0", "chai-subset": "1.6.0", "classnames": "2.2.6", "core-js": "2.6.5", "css-loader": "2.1.1", "cssnano": "4.1.10", "del": "4.1.0", "eslint": "5.16.0", "eslint-config-th0r": "2.0.0", "eslint-config-th0r-react": "2.0.0", "eslint-plugin-react": "7.12.4", "exports-loader": "0.7.0", "gulp": "4.0.2", "gulp-babel": "8.0.0", "mobx": "5.9.4", "mobx-preact": "3.0.0", "mocha": "6.2.2", "nightmare": "3.0.1", "postcss-icss-values": "2.0.2", "postcss-loader": "3.0.0", "preact": "8.4.2", "stream-combiner2": "1.1.1", "style-loader": "0.23.1", "terser-webpack-plugin": "1.4.3", "url-loader": "1.1.2", "webpack": "4.42.0", "webpack-cli": "3.3.11", "webpack-dev-server": "3.10.3"}, "releases": [{"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 2}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 2}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 8}, {"from": "2018-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![downloads][downloads]][downloads-url]\n\n<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Webpack Bundle Analyzer</h1>\n  <p>Visualize size of webpack output files with an interactive zoomable treemap.</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\n# NPM\nnpm install --save-dev webpack-bundle-analyzer\n# Yarn\nyarn add -D webpack-bundle-analyzer\n```\n\n<h2 align=\"center\">Usage (as a plugin)</h2>\n\n```js\nconst BundleAnalyzerPlugin = require('webpack-bundle-analyzer').BundleAnalyzerPlugin;\n\nmodule.exports = {\n  plugins: [\n    new BundleAnalyzerPlugin()\n  ]\n}\n```\n\nIt will create an interactive treemap visualization of the contents of all your bundles.\n\n![webpack bundle analyzer zoomable treemap](https://cloud.githubusercontent.com/assets/302213/20628702/93f72404-b338-11e6-92d4-9a365550a701.gif)\n\nThis module will help you:\n\n1. Realize what's *really* inside your bundle\n2. Find out what modules make up the most of its size\n3. Find modules that got there by mistake\n4. Optimize it!\n\nAnd the best thing is it supports minified bundles! It parses them to get real size of bundled modules.\nAnd it also shows their gzipped sizes!\n\n<h2 align=\"center\">Options (for plugin)</h2>\n\n```js\nnew BundleAnalyzerPlugin(options?: object)\n```\n\n|Name|Type|Description|\n|:--:|:--:|:----------|\n|**`analyzerMode`**|One of: `server`, `static`, `json`, `disabled`|Default: `server`. In `server` mode analyzer will start HTTP server to show bundle report. In `static` mode single HTML file with bundle report will be generated. In `json` mode single JSON file with bundle report will be generated. In `disabled` mode you can use this plugin to just generate Webpack Stats JSON file by setting `generateStatsFile` to `true`. |\n|**`analyzerHost`**|`{String}`|Default: `127.0.0.1`. Host that will be used in `server` mode to start HTTP server.|\n|**`analyzerPort`**|`{Number}` or `auto`|Default: `8888`. Port that will be used in `server` mode to start HTTP server.|\n|**`reportFilename`**|`{String}`|Default: `report.html`. Path to bundle report file that will be generated in `static` mode. It can be either an absolute path or a path relative to a bundle output directory (which is output.path in webpack config).|\n|**`defaultSizes`**|One of: `stat`, `parsed`, `gzip`|Default: `parsed`. Module sizes to show in report by default. [Size definitions](#size-definitions) section describes what these values mean.|\n|**`openAnalyzer`**|`{Boolean}`|Default: `true`. Automatically open report in default browser.|\n|**`generateStatsFile`**|`{Boolean}`|Default: `false`. If `true`, webpack stats JSON file will be generated in bundle output directory|\n|**`statsFilename`**|`{String}`|Default: `stats.json`. Name of webpack stats JSON file that will be generated if `generateStatsFile` is `true`. It can be either an absolute path or a path relative to a bundle output directory (which is output.path in webpack config).|\n|**`statsOptions`**|`null` or `{Object}`|Default: `null`. Options for `stats.toJson()` method. For example you can exclude sources of your modules from stats file with `source: false` option. [See more options here](https://webpack.js.org/configuration/stats/). |\n|**`excludeAssets`**|`{null\\|pattern\\|pattern[]}` where `pattern` equals to `{String\\|RegExp\\|function}`|Default: `null`. Patterns that will be used to match against asset names to exclude them from the report. If pattern is a string it will be converted to RegExp via `new RegExp(str)`. If pattern is a function it should have the following signature `(assetName: string) => boolean` and should return `true` to *exclude* matching asset. If multiple patterns are provided asset should match at least one of them to be excluded. |\n|**`logLevel`**|One of: `info`, `warn`, `error`, `silent`|Default: `info`. Used to control how much details the plugin outputs.|\n\n<h2 align=\"center\">Usage (as a CLI utility)</h2>\n\nYou can analyze an existing bundle if you have a webpack stats JSON file.\n\nYou can generate it using `BundleAnalyzerPlugin` with `generateStatsFile` option set to `true` or with this simple\ncommand:\n\n```bash\nwebpack --profile --json > stats.json\n```\n\nIf you're on Windows and using PowerShell, you can generate the stats file with this command to [avoid BOM issues](https://github.com/webpack-contrib/webpack-bundle-analyzer/issues/47):\n\n```\nwebpack --profile --json | Out-file 'stats.json' -Encoding OEM\n```\n\nThen you can run the CLI tool.\n\n```\nwebpack-bundle-analyzer bundle/output/path/stats.json\n```\n\n<h2 align=\"center\">Options (for CLI)</h2>\n\n```bash\nwebpack-bundle-analyzer <bundleStatsFile> [bundleDir] [options]\n```\n\nArguments are documented below:\n\n### `bundleStatsFile`\n\nPath to webpack stats JSON file\n\n### `bundleDir`\n\nDirectory containing all generated bundles.\n\n### `options`\n\n```\n  -V, --version               output the version number\n  -m, --mode <mode>           Analyzer mode. Should be `server`, `static` or `json`.\n                              In `server` mode analyzer will start HTTP server to show bundle report.\n                              In `static` mode single HTML file with bundle report will be generated.\n                              In `json` mode single JSON file with bundle report will be generated. (default: server)\n  -h, --host <host>           Host that will be used in `server` mode to start HTTP server. (default: 127.0.0.1)\n  -p, --port <n>              Port that will be used in `server` mode to start HTTP server. Should be a number or `auto` (default: 8888)\n  -r, --report <file>         Path to bundle report file that will be generated in `static` mode. (default: report.html)\n  -s, --default-sizes <type>  Module sizes to show in treemap by default.\n                              Possible values: stat, parsed, gzip (default: parsed)\n  -O, --no-open               Don't open report in default browser automatically.\n  -e, --exclude <regexp>      Assets that should be excluded from the report.\n                              Can be specified multiple times.\n  -l, --log-level <level>     Log level.\n                              Possible values: debug, info, warn, error, silent (default: info)\n  -h, --help                  output usage information\n```\n\n<h2 align=\"center\" id=\"size-definitions\">Size definitions</h2>\n\nwebpack-bundle-analyzer reports three values for sizes. `defaultSizes` can be used to control which of these is shown by default. The different reported sizes are:\n\n### `stat`\n\nThis is the \"input\" size of your files, before any transformations like\nminification.\n\nIt is called \"stat size\" because it's obtained from Webpack's\n[stats object](https://webpack.js.org/configuration/stats/).\n\n### `parsed`\n\nThis is the \"output\" size of your files. If you're using a Webpack plugin such\nas Uglify, then this value will reflect the minified size of your code.\n\n### `gzip`\n\nThis is the size of running the parsed bundles/modules through gzip compression.\n\n<h2 align=\"center\">Selecting Which Chunks to Display</h2>\n\nWhen opened, the report displays all of the Webpack chunks for your project. It's possible to filter to a more specific list of chunks by using the sidebar or the chunk context menu.\n\n### Sidebar\n\nThe Sidebar Menu can be opened by clicking the `>` button at the top left of the report. You can select or deselect chunks to display under the \"Show chunks\" heading there.\n\n### Chunk Context Menu\n\nThe Chunk Context Menu can be opened by right-clicking or `Ctrl`-clicking on a specific chunk in the report. It provides the following options:\n\n * **Hide chunk:** Hides the selected chunk\n * **Hide all other chunks:** Hides all chunks besides the selected one\n * **Show all chunks:** Un-hides any hidden chunks, returning the report to its initial, unfiltered view\n\n<h2 align=\"center\">Troubleshooting</h2>\n\n### I don't see `gzip` or `parsed` sizes, it only shows `stat` size\n\nIt happens when `webpack-bundle-analyzer` analyzes files that don't actually exist in your file system, for example when you work with `webpack-dev-server` that keeps all the files in RAM. If you use `webpack-bundle-analyzer` as a plugin you won't get any errors, however if you run it via CLI you get the error message in terminal:\n```\nCouldn't parse bundle asset \"your_bundle_name.bundle.js\".\nAnalyzer will use module sizes from stats file.\n```\nTo get more information about it you can read [issue #147](https://github.com/webpack-contrib/webpack-bundle-analyzer/issues/147).\n\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/302213?v=4&s=150\">\n        </br>\n        <a href=\"https://github.com/th0r\">Yuriy Grunin</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/482561?v=4&s=150\">\n        </br>\n        <a href=\"https://github.com/valscion\">Vesa Laakso</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n[npm]: https://img.shields.io/npm/v/webpack-bundle-analyzer.svg\n[npm-url]: https://npmjs.com/package/webpack-bundle-analyzer\n\n[node]: https://img.shields.io/node/v/webpack-bundle-analyzer.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/webpack-contrib/webpack-bundle-analyzer.svg\n[deps-url]: https://david-dm.org/webpack-contrib/webpack-bundle-analyzer\n\n[tests]: http://img.shields.io/travis/webpack-contrib/webpack-bundle-analyzer.svg\n[tests-url]: https://travis-ci.org/webpack-contrib/webpack-bundle-analyzer\n\n[downloads]: https://img.shields.io/npm/dt/webpack-bundle-analyzer.svg\n[downloads-url]: https://npmjs.com/package/webpack-bundle-analyzer\n\n<h2 align=\"center\">Contributing</h2>\n\nCheck out [CONTRIBUTING.md](./CONTRIBUTING.md) for instructions on contributing :tada:"}, "npm": {"downloads": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 528079}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 2982263}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 12174411}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 35964875}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 60987426}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 107871897}], "dependentsCount": 1307, "starsCount": 191}, "github": {"starsCount": 9856, "forksCount": 357, "subscribersCount": 97, "issues": {"count": 348, "openCount": 45, "distribution": {"3600": 72, "10800": 22, "32400": 24, "97200": 39, "291600": 29, "874800": 28, "2624400": 31, "7873200": 31, "23619600": 25, "70858800": 38, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "th0r", "commitsCount": 218}, {"username": "valscion", "commitsCount": 48}, {"username": "bregenspan", "commitsCount": 33}, {"username": "lorenzos", "commitsCount": 7}, {"username": "gaokun", "commitsCount": 6}, {"username": "mhxbe", "commitsCount": 5}, {"username": "realityking", "commitsCount": 5}, {"username": "ryan953", "commitsCount": 5}, {"username": "fanich37", "commitsCount": 4}, {"username": "Gongreg", "commitsCount": 3}, {"username": "amoshydra", "commitsCount": 3}, {"username": "d3viant0ne", "commitsCount": 3}, {"username": "Spikef", "commitsCount": 2}, {"username": "pfeigl", "commitsCount": 2}, {"username": "AndrewUsher", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "avin-kavish", "commitsCount": 1}, {"username": "difelice", "commitsCount": 1}, {"username": "edmorley", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "freaz", "commitsCount": 1}, {"username": "gbakernet", "commitsCount": 1}, {"username": "hulkish", "commitsCount": 1}, {"username": "jamesplease", "commitsCount": 1}, {"username": "jdelStrother", "commitsCount": 1}, {"username": "jerryOnlyZRJ", "commitsCount": 1}, {"username": "jlopezxs", "commitsCount": 1}, {"username": "lemonmade", "commitsCount": 1}, {"username": "leonascimento", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "marcodejongh", "commitsCount": 1}, {"username": "mareolan", "commitsCount": 1}, {"username": "pustovalov", "commitsCount": 1}, {"username": "regiontog", "commitsCount": 1}, {"username": "sdgluck", "commitsCount": 1}, {"username": "somebody32", "commitsCount": 1}, {"username": "stevejay", "commitsCount": 1}, {"username": "wood1986", "commitsCount": 1}, {"username": "yannickcr", "commitsCount": 1}], "commits": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 4}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 6}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 13}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 14}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 60}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9969, "testsSize": 149503, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/webpack-bundle-analyzer.svg", "shields": "https://img.shields.io/npm/v/webpack-bundle-analyzer.svg", "content": "https://img.shields.io/npm/v/webpack-bundle-analyzer.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/webpack-bundle-analyzer.svg", "service": "https://david-dm.org/webpack-contrib/webpack-bundle-analyzer.svg", "shields": "https://img.shields.io/david/webpack-contrib/webpack-bundle-analyzer.svg", "content": "https://img.shields.io/david/webpack-contrib/webpack-bundle-analyzer.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/travis/webpack-contrib/webpack-bundle-analyzer.svg", "service": "https://api.travis-ci.org/webpack-contrib/webpack-bundle-analyzer.svg", "shields": "https://img.shields.io/travis/webpack-contrib/webpack-bundle-analyzer.svg", "content": "https://img.shields.io/travis/webpack-contrib/webpack-bundle-analyzer.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/dt/webpack-bundle-analyzer.svg", "shields": "https://img.shields.io/npm/dt/webpack-bundle-analyzer.svg", "content": "https://img.shields.io/npm/dt/webpack-bundle-analyzer.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "ejs": {"required": "^2.6.1", "stable": "3.1.3", "latest": "3.1.3"}, "chalk": {"required": "^2.4.1", "stable": "4.0.0", "latest": "4.0.0"}, "filesize": {"required": "^3.6.1", "stable": "6.1.0", "latest": "6.1.0"}, "bfj": {"required": "^6.1.1", "stable": "7.0.2", "latest": "7.0.2"}, "ws": {"required": "^6.0.0", "stable": "7.3.0", "latest": "7.3.0"}, "commander": {"required": "^2.18.0", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 10541, "downloadsCount": 11988291.666666666, "downloadsAcceleration": 38388.461415525104, "dependentsCount": 1307}, "maintenance": {"releasesFrequency": 0.7758561643835618, "commitsFrequency": 0.8568150684931507, "openIssues": 1, "issuesDistribution": 0.1369632936993862}}, "score": {"final": 0.798546401745077, "detail": {"quality": 0.9185600136072969, "popularity": 0.6922208654751332, "maintenance": 0.802003127847404}}}}, {"styled-components": {"analyzedAt": "2020-06-03T00:18:01.837Z", "collected": {"metadata": {"name": "styled-components", "scope": "unscoped", "version": "5.1.1", "description": "Visual primitives for the component age. Use the best bits of ES6 and CSS to style your apps without stress", "keywords": ["react", "css", "css-in-js", "styled-components", "babel-macro", "babel-macros", "styling"], "date": "2020-05-25T23:29:35.176Z", "author": {"name": "Glen Maddern"}, "publisher": {"username": "philpl", "email": "phil@kitten.sh"}, "maintainers": [{"username": "geelen", "email": "hi@glenmaddern.com"}, {"username": "imbhargav5", "email": "bhargavponnapalli.5@gmail.com"}, {"username": "mxstbr", "email": "npm@mxstbr.com"}, {"username": "philpl", "email": "phil@kitten.sh"}, {"username": "probablyup", "email": "probablyup@gmail.com"}, {"username": "schwers", "email": "schwers.r@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/styled-components/styled-components.git"}, "links": {"npm": "https://www.npmjs.com/package/styled-components", "homepage": "https://styled-components.com/", "repository": "https://github.com/styled-components/styled-components", "bugs": "https://github.com/styled-components/styled-components/issues"}, "license": "MIT", "dependencies": {"@babel/helper-module-imports": "^7.0.0", "@babel/traverse": "^7.4.5", "@emotion/is-prop-valid": "^0.8.8", "@emotion/stylis": "^0.8.4", "@emotion/unitless": "^0.7.4", "babel-plugin-styled-components": ">= 1", "css-to-react-native": "^3.0.0", "hoist-non-react-statics": "^3.0.0", "shallowequal": "^1.1.0", "supports-color": "^5.5.0"}, "devDependencies": {"@babel/cli": "^7.0.0", "@babel/core": "^7.0.0", "@babel/plugin-proposal-object-rest-spread": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/preset-flow": "^7.0.0", "@babel/preset-react": "^7.0.0", "babel-eslint": "^10.0.1", "eslint-plugin-import": "^2.17.2", "eslint-plugin-react": "^7.12.4", "flow-bin": "^0.100.0", "prop-types": "^15.7.2", "react": "^16.8.6", "react-dom": "^16.8.6", "react-frame-component": "^4.0.2", "react-is": "^16.8.6", "react-native": "^0.59.8", "react-primitives": "^0.8.0", "react-test-renderer": "^16.8.6", "rollup": "^1.13.1", "rollup-plugin-babel": "^4.3.2", "rollup-plugin-terser": "^5.0.0", "stylis-plugin-rtl": "^1.0.0"}, "peerDependencies": {"react": ">= 16.8.0", "react-dom": ">= 16.8.0", "react-is": ">= 16.8.0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 12}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 53}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 130}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1527109}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7669568}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 22241080}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 38800836}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 70119748}], "dependentsCount": 6141, "starsCount": 47}, "github": {"homepage": "https://styled-components.com", "starsCount": 29600, "forksCount": 1779, "subscribersCount": 384, "issues": {"count": 3138, "openCount": 149, "distribution": {"3600": 598, "10800": 253, "32400": 296, "97200": 362, "291600": 349, "874800": 336, "2624400": 318, "7873200": 272, "23619600": 239, "70858800": 102, "212576400": 13}, "isDisabled": false}, "contributors": [{"username": "probablyup", "commitsCount": 511}, {"username": "kitten", "commitsCount": 293}, {"username": "geelen", "commitsCount": 284}, {"username": "mxstbr", "commitsCount": 275}, {"username": "patrick91", "commitsCount": 69}, {"username": "relekang", "commitsCount": 33}, {"username": "Fer0x", "commitsCount": 31}, {"username": "Igorbek", "commitsCount": 28}, {"username": "evan-scott-zocdoc", "commitsCount": 28}, {"username": "gribnoysup", "commitsCount": 25}, {"username": "imbhargav5", "commitsCount": 22}, {"username": "k15a", "commitsCount": 20}, {"username": "thisguychris", "commitsCount": 16}, {"username": "diegohaz", "commitsCount": 14}, {"username": "marionebl", "commitsCount": 13}, {"username": "Andarist", "commitsCount": 12}, {"username": "jacobp100", "commitsCount": 12}, {"username": "michalkvasnicak", "commitsCount": 12}, {"username": "schwers", "commitsCount": 12}, {"username": "bbohen", "commitsCount": 11}, {"username": "kutyel", "commitsCount": 11}, {"username": "yasserkaddour", "commitsCount": 11}, {"username": "mathieudutour", "commitsCount": 10}, {"username": "6r1anchen", "commitsCount": 9}, {"username": "brunolemos", "commitsCount": 9}, {"username": "orta", "commitsCount": 9}, {"username": "siddharthkp", "commitsCount": 9}, {"username": "BenLorantfy", "commitsCount": 8}, {"username": "Rich-Harris", "commitsCount": 7}, {"username": "danieldunderfelt", "commitsCount": 7}, {"username": "jameslnewell", "commitsCount": 7}, {"username": "bteng22", "commitsCount": 6}, {"username": "devrelm", "commitsCount": 6}, {"username": "gregberge", "commitsCount": 6}, {"username": "paul-veevers", "commitsCount": 6}, {"username": "pelotom", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "vdanchenkov", "commitsCount": 6}, {"username": "JamieDixon", "commitsCount": 5}, {"username": "Kirty-Goyal", "commitsCount": 5}, {"username": "darthtrevino", "commitsCount": 5}, {"username": "jpdriver", "commitsCount": 5}, {"username": "kristojorg", "commitsCount": 5}, {"username": "lekterable", "commitsCount": 5}, {"username": "lucleray", "commitsCount": 5}, {"username": "marc-rutkowski", "commitsCount": 5}, {"username": "monkeywithacupcake", "commitsCount": 5}, {"username": "thymikee", "commitsCount": 5}, {"username": "MicheleBertoli", "commitsCount": 4}, {"username": "btmills", "commitsCount": 4}, {"username": "codepunkt", "commitsCount": 4}, {"username": "egdbear", "commitsCount": 4}, {"username": "haikyuu", "commitsCount": 4}, {"username": "halvves", "commitsCount": 4}, {"username": "maciej-ka", "commitsCount": 4}, {"username": "martahj", "commitsCount": 4}, {"username": "phyllisstein", "commitsCount": 4}, {"username": "ryyppy", "commitsCount": 4}, {"username": "stephenkingsley", "commitsCount": 4}, {"username": "wmertens", "commitsCount": 4}, {"username": "IljaDaderko", "commitsCount": 3}, {"username": "SachaG", "commitsCount": 3}, {"username": "SlootSantos", "commitsCount": 3}, {"username": "alansouzati", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 3}, {"username": "bakunyo", "commitsCount": 3}, {"username": "bkazi", "commitsCount": 3}, {"username": "cdebotton", "commitsCount": 3}, {"username": "d7my11", "commitsCount": 3}, {"username": "didierfranc", "commitsCount": 3}, {"username": "erikras", "commitsCount": 3}, {"username": "evenchange4", "commitsCount": 3}, {"username": "freiksenet", "commitsCount": 3}, {"username": "griffinmichl", "commitsCount": 3}, {"username": "ismay", "commitsCount": 3}, {"username": "malimccalla", "commitsCount": 3}, {"username": "mkhazov", "commitsCount": 3}, {"username": "mzmiric5", "commitsCount": 3}, {"username": "oscar-b", "commitsCount": 3}, {"username": "sheepsteak", "commitsCount": 3}, {"username": "simonbuchan", "commitsCount": 3}, {"username": "sulmanen", "commitsCount": 3}, {"username": "theshortcut", "commitsCount": 3}, {"username": "wachunei", "commitsCount": 3}, {"username": "JelteF", "commitsCount": 2}, {"username": "Jessidhia", "commitsCount": 2}, {"username": "MrLoh", "commitsCount": 2}, {"username": "acjay", "commitsCount": 2}, {"username": "alexandernanberg", "commitsCount": 2}, {"username": "asoltys", "commitsCount": 2}, {"username": "hiroppy", "commitsCount": 2}, {"username": "iamstarkov", "commitsCount": 2}, {"username": "ka2jun8", "commitsCount": 2}, {"username": "mAAdhaTTah", "commitsCount": 2}, {"username": "macintoshhelper", "commitsCount": 2}, {"username": "manglobe", "commitsCount": 2}, {"username": "mattlubner", "commitsCount": 2}, {"username": "quentez", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}, {"username": "yamachig", "commitsCount": 2}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 14}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 43}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 148}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "bundlesize", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 243314, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint"], "outdatedDependencies": {"supports-color": {"required": "^5.5.0", "stable": "7.1.0", "latest": "7.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.85, "health": 0.4, "branding": 0.4}, "popularity": {"communityInterest": 31910, "downloadsCount": 7413693.333333333, "downloadsAcceleration": 21748.667351598182, "dependentsCount": 6141}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9201575342465754, "openIssues": 1, "issuesDistribution": 0.7499708166624246}}, "score": {"final": 0.8691814068818287, "detail": {"quality": 0.8362836049556585, "popularity": 0.7675467497688905, "maintenance": 0.9990141799314842}}}}, {"karma-phantomjs-launcher": {"analyzedAt": "2020-06-10T02:24:54.800Z", "collected": {"metadata": {"name": "karma-phantomjs-launcher", "scope": "unscoped", "version": "1.0.4", "description": "A Karma plugin. Launcher for PhantomJS.", "keywords": ["karma-plugin", "karma-launcher", "phantomjs"], "date": "2017-03-10T14:35:30.703Z", "author": {"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, "publisher": {"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, "maintainers": [{"username": "vojtajina", "email": "vojta.jina+npm@gmail.com"}, {"username": "zzo", "email": "mark@zzo.com"}, {"username": "dignifiedquire", "email": "dignifiedquire@gmail.com"}, {"username": "karmarunnerbot", "email": "karmarunnerbot@gmail.com"}], "contributors": [{"name": "Vojta Jina", "email": "vojta.jina@gmail.com"}, {"name": "Friedel Ziegelmayer", "email": "dignifiedquire@gmail.com"}, {"name": "Mark Ethan Trostler", "email": "mark@zzo.com"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Jurko Gospodneti\u0107", "email": "jurko.gospodnetic@pke.hr"}, {"name": "Friedel Ziegelmayer", "email": "friedel.ziegelmayer@gmail.com"}, {"name": "Sylvain Hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "Huafu Gandon", "email": "huafu.gandon@gmail.com"}, {"name": "Dan Siwiec", "email": "daniel.siwiec@gmail.com"}, {"name": "Rob Barreca", "email": "rob.barreca@inmobi.com"}, {"name": "Sergey Bondarenko", "email": "enterit@gmail.com"}, {"name": "nherzing", "email": "nherzing@gmail.com"}, {"name": "Chad Smith", "email": "chad@configit.com"}, {"name": "sylvain-hamel", "email": "sylvainhamel0@gmail.com"}, {"name": "Edward Hutchins", "email": "eahutchins@gmail.com"}, {"name": "Eryk Napiera\u0142a", "email": "eryk.piast@gmail.com"}, {"name": "Jason Dobry", "email": "jason.dobry@gmail.com"}, {"name": "Joel Mukuthu", "email": "jmu@one.com"}, {"name": "Jonathan Park", "email": "jpark@daptiv.com"}, {"name": "Leigh Tarasenko", "email": "leightarasenko@gmail.com"}, {"name": "Mark Derbecker", "email": "mark.derbecker@seeq.com"}, {"name": "Mark Trostler", "email": "mark@zzo.com"}, {"name": "Nick Malaguti", "email": "nmalaguti@palantir.com"}], "repository": {"type": "git", "url": "git://github.com/karma-runner/karma-phantomjs-launcher.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-phantomjs-launcher", "homepage": "https://github.com/karma-runner/karma-phantomjs-launcher#readme", "repository": "https://github.com/karma-runner/karma-phantomjs-launcher", "bugs": "https://github.com/karma-runner/karma-phantomjs-launcher/issues"}, "license": "MIT", "dependencies": {"lodash": "^4.0.1", "phantomjs-prebuilt": "^2.1.7"}, "devDependencies": {"eslint": "^1.0.0", "eslint-config-standard": "^4.0.0", "eslint-plugin-react": "^3.2.0", "eslint-plugin-standard": "^1.3.1", "grunt": "~0.4.1", "grunt-auto-release": "~0.0.2", "grunt-bump": "~0.3.1", "grunt-conventional-changelog": "^1.2.2", "grunt-eslint": "^17.0.0", "grunt-karma": "1.x || ^0.12.1", "grunt-npm": "~0.0.2", "jasmine-core": "^2.3.4", "karma": "1.x || ^0.13.6", "karma-jasmine": "1.x || ^0.3.5", "load-grunt-tasks": "^3.2.0"}, "peerDependencies": {"karma": ">=0.9"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "readme": "# karma-phantomjs-launcher\n\n[![js-standard-style](https://img.shields.io/badge/code%20style-standard-brightgreen.svg?style=flat-square)](https://github.com/karma-runner/karma-phantomjs-launcher)\n [![npm version](https://img.shields.io/npm/v/karma-phantomjs-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-phantomjs-launcher) [![npm downloads](https://img.shields.io/npm/dm/karma-phantomjs-launcher.svg?style=flat-square)](https://www.npmjs.com/package/karma-phantomjs-launcher)\n\n[![Build Status](https://img.shields.io/travis/karma-runner/karma-phantomjs-launcher/master.svg?style=flat-square)](https://travis-ci.org/karma-runner/karma-phantomjs-launcher) [![Dependency Status](https://img.shields.io/david/karma-runner/karma-phantomjs-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-phantomjs-launcher) [![devDependency Status](https://img.shields.io/david/dev/karma-runner/karma-phantomjs-launcher.svg?style=flat-square)](https://david-dm.org/karma-runner/karma-phantomjs-launcher#info=devDependencies)\n\n> Launcher for [PhantomJS].\n\n## Installation\n\nThe easiest way is to keep `karma-phantomjs-launcher` as a devDependency in your `package.json`,\nby running\n\n```bash\n$ npm install --save-dev karma-phantomjs-launcher\n```\n\n## Configuration\n\n```js\n// karma.conf.js\nmodule.exports = function(config) {\n  config.set({\n    browsers: ['PhantomJS', 'PhantomJS_custom'],\n\n    // you can define custom flags\n    customLaunchers: {\n      'PhantomJS_custom': {\n        base: 'PhantomJS',\n        options: {\n          windowName: 'my-window',\n          settings: {\n            webSecurityEnabled: false\n          },\n        },\n        flags: ['--load-images=true'],\n        debug: true\n      }\n    },\n\n    phantomjsLauncher: {\n      // Have phantomjs exit if a ResourceError is encountered (useful if karma exits without killing phantom)\n      exitOnResourceError: true\n    }\n  })\n}\n```\n\nThe `options` attribute allows you to initialize properties on\nthe phantomjs `page` object, so\n\n```js\noptions: {\n  windowName: 'my-window',\n  settings: {\n    webSecurityEnabled: false\n  },\n}\n```\n\nis equivalent to:\n\n```js\nvar webPage = require('webpage')\nvar page = webPage.create()\n\npage.windowName = 'my-window'\npage.settings.webSecurityEnabled = false\n```\n\nYou can pass list of browsers as a CLI argument too:\n```bash\n$ karma start --browsers PhantomJS_custom\n```\n\nIf you set the `debug` option to `true`, you will be instructed to launch a web browser to\nbring up the debugger. Note that you will want to put `debugger;` statements in your JavaScript\nto hit breakpoints. You should be able to put breakpoints in both your test code and your client\ncode. Note that the `debug` option automatically adds the `--remote-debugger-port=9000` and\n`--remote-debugger-autorun=yes` switches to PhantomJS.\n\n----\n\nFor more information on Karma see the [homepage].\n\n\n[homepage]: http://karma-runner.github.com\n[PhantomJS]: http://phantomjs.org/"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 51524}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 257720}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1074666}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3174547}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 6170511}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 12924558}], "dependentsCount": 345, "starsCount": 32}, "github": {"starsCount": 287, "forksCount": 126, "subscribersCount": 20, "issues": {"count": 215, "openCount": 112, "distribution": {"3600": 13, "10800": 6, "32400": 2, "97200": 7, "291600": 11, "874800": 14, "2624400": 10, "7873200": 13, "23619600": 13, "70858800": 16, "212576400": 110}, "isDisabled": false}, "contributors": [{"username": "dignifiedquire", "commitsCount": 34}, {"username": "vojtajina", "commitsCount": 23}, {"username": "zzo", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 4}, {"username": "jurko-gospodnetic", "commitsCount": 3}, {"username": "danielsiwiec", "commitsCount": 2}, {"username": "huafu", "commitsCount": 2}, {"username": "chad-configit", "commitsCount": 1}, {"username": "enterit", "commitsCount": 1}, {"username": "erykpiast", "commitsCount": 1}, {"username": "gigadude", "commitsCount": 1}, {"username": "jmdobry", "commitsCount": 1}, {"username": "leightarasenko", "commitsCount": 1}, {"username": "nherzing", "commitsCount": 1}, {"username": "nmalaguti", "commitsCount": 1}, {"username": "park9140", "commitsCount": 1}, {"username": "sylvain-hamel", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2959, "testsSize": 194, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-phantomjs-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/karma-phantomjs-launcher.svg", "content": "https://img.shields.io/npm/v/karma-phantomjs-launcher.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-phantomjs-launcher.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/karma-phantomjs-launcher.svg", "content": "https://img.shields.io/npm/dm/karma-phantomjs-launcher.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/karma-runner/karma-phantomjs-launcher/master.svg?style=flat-square", "service": "https://api.travis-ci.org/karma-runner/karma-phantomjs-launcher.svg?branch=master", "shields": "https://img.shields.io/travis/karma-runner/karma-phantomjs-launcher/master.svg", "content": "https://img.shields.io/travis/karma-runner/karma-phantomjs-launcher/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/karma-runner/karma-phantomjs-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-phantomjs-launcher.svg", "shields": "https://img.shields.io/david/karma-runner/karma-phantomjs-launcher.svg", "content": "https://img.shields.io/david/karma-runner/karma-phantomjs-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/david/dev/karma-runner/karma-phantomjs-launcher.svg?style=flat-square", "service": "https://david-dm.org/karma-runner/karma-phantomjs-launcher/dev-status.svg", "shields": "https://img.shields.io/david/dev/karma-runner/karma-phantomjs-launcher.svg", "content": "https://img.shields.io/david/dev/karma-runner/karma-phantomjs-launcher.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.39549999999999996, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 482, "downloadsCount": 1058182.3333333333, "downloadsAcceleration": -179.1698059360715, "dependentsCount": 345}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 0.4790697674418605, "issuesDistribution": 0}}, "score": {"final": 0.44608694367130547, "detail": {"quality": 0.907097193301323, "popularity": 0.32969483313537123, "maintenance": 0.16732741166722467}}}}, {"flow-bin": {"analyzedAt": "2020-06-12T21:41:24.555Z", "collected": {"metadata": {"name": "flow-bin", "scope": "unscoped", "version": "0.127.0", "description": "Binary wrapper for Flow - A static type checker for JavaScript", "keywords": ["cli-app", "cli", "bin", "binary", "flow", "facebook", "type", "inference", "check", "checker", "javascript", "js", "wrapper"], "date": "2020-06-12T21:36:13.305Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "flowtype", "email": "flow@fb.com"}, "maintainers": [{"username": "avikchaudhuri", "email": "avik.ch@gmail.com"}, {"username": "calebmer", "email": "calebmeredith8@gmail.com"}, {"username": "fishythefish", "email": "mayank.patke@gmail.com"}, {"username": "flowtype", "email": "flow@fb.com"}, {"username": "gabelevi", "email": "gabelevi@gmail.com"}, {"username": "kevva", "email": "kevinmartensson@gmail.com"}, {"username": "mroch", "email": "marshall@mroch.com"}, {"username": "nmote", "email": "nat@natmote.net"}, {"username": "pvekris", "email": "pvekris@fb.com"}, {"username": "samwgoldman", "email": "samwgoldman@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/flowtype/flow-bin.git"}, "links": {"npm": "https://www.npmjs.com/package/flow-bin", "homepage": "https://github.com/flowtype/flow-bin#readme", "repository": "https://github.com/flowtype/flow-bin", "bugs": "https://github.com/flowtype/flow-bin/issues"}, "license": "MIT", "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 8}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 17}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 40}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 72}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# flow-bin [![Build Status](https://travis-ci.org/flowtype/flow-bin.svg?branch=master)](https://travis-ci.org/flowtype/flow-bin)\n\n> Binary wrapper for [Flow](http://flowtype.org) - A static type checker for JavaScript\n\nOS X, Linux (64-bit) and Windows binaries are currently [provided](https://flow.org/en/docs/install/).\n\n\n## CLI\n\nFor Yarn:\n\n```\n$ yarn add --dev flow-bin\n$ yarn run flow --help\n```\n\nFor npm, add `{ \"scripts\": { \"flow\": \"flow\" } }` in package.json and run:\n\n```\n$ npm install --save-dev flow-bin\n$ npm run flow --help\n```\n\n\n## API\n\n```\n$ npm install --save flow-bin\n```\n\n```js\nconst execFile = require('child_process').execFile;\nconst flow = require('flow-bin');\n\nexecFile(flow, ['check'], (err, stdout) => {\n\tconsole.log(stdout);\n});\n```\n\n\n## License\n\nflow-bin is MIT-licensed.\n\n\n## Releases\n\n### New Release\n\n1. `make push VERSION=0.122.0` (use the same version as Flow)\n2. Publish to npm: `make publish` (run `npm adduser` the first time to log in)\n\n### Inspect a Release Before Publishing\n\n```sh\nnpm pack\ntar xf \"flow-bin-$(node -p 'require(\"./package.json\").version').tgz\"\ncd package\nnpm run verify\n```"}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 95940}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 515256}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2450040}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 8124555}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 14695969}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 27984862}], "dependentsCount": 333, "starsCount": 44}, "github": {"homepage": "https://flow.org", "starsCount": 519, "forksCount": 47, "subscribersCount": 19, "issues": {"count": 170, "openCount": 35, "distribution": {"3600": 28, "10800": 11, "32400": 9, "97200": 13, "291600": 10, "874800": 9, "2624400": 9, "7873200": 13, "23619600": 17, "70858800": 23, "212576400": 28}, "isDisabled": false}, "contributors": [{"username": "gabelevi", "commitsCount": 79}, {"username": "jeffmo", "commitsCount": 25}, {"username": "mroch", "commitsCount": 20}, {"username": "sindresorhus", "commitsCount": 17}, {"username": "samwgoldman", "commitsCount": 15}, {"username": "jbrown215", "commitsCount": 10}, {"username": "nmote", "commitsCount": 10}, {"username": "avikchaudhuri", "commitsCount": 9}, {"username": "kevva", "commitsCount": 9}, {"username": "flow-bot", "commitsCount": 7}, {"username": "panagosg7", "commitsCount": 7}, {"username": "dsainati1", "commitsCount": 5}, {"username": "gkz", "commitsCount": 4}, {"username": "zertosh", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "calebmer", "commitsCount": 2}, {"username": "mvitousek", "commitsCount": 2}, {"username": "STRML", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "facebook-github-bot", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "kassens", "commitsCount": 1}, {"username": "zpao", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 1}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 3}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 14}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 23}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 47}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}]}, "source": {"files": {"readmeSize": 1126, "testsSize": 600}, "badges": [{"urls": {"original": "https://travis-ci.org/flowtype/flow-bin.svg?branch=master", "service": "https://api.travis-ci.org/flowtype/flow-bin.svg?branch=master", "shields": "https://img.shields.io/travis/flowtype/flow-bin/master.svg", "content": "https://img.shields.io/travis/flowtype/flow-bin/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"]}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.725, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 653, "downloadsCount": 2708185, "downloadsAcceleration": 2492.6406582952804, "dependentsCount": 333}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8273801369863014, "openIssues": 0.9901960784313726, "issuesDistribution": 0}}, "score": {"final": 0.6374195928963027, "detail": {"quality": 0.853032363526733, "popularity": 0.4234365447243664, "maintenance": 0.6665916948135845}}}}, {"@angular/router": {"analyzedAt": "2020-06-11T23:22:19.767Z", "collected": {"metadata": {"name": "@angular/router", "scope": "angular", "version": "9.1.11", "description": "Angular - the routing library", "keywords": ["angular", "router"], "date": "2020-06-10T18:21:04.456Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/router"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Frouter", "homepage": "https://github.com/angular/angular/tree/master/packages/router", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"@angular/core": "9.1.11", "@angular/common": "9.1.11", "@angular/platform-browser": "9.1.11", "rxjs": "^6.5.3", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 13}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 33}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 54}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 107}, {"from": "2018-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 197}]}, "npm": {"downloads": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 284617}, {"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1479757}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 6274288}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 18360544}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 33463022}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 62520115}], "dependentsCount": 6296, "starsCount": 17}, "github": {"homepage": "https://angular.io", "starsCount": 62026, "forksCount": 16872, "subscribersCount": 3166, "issues": {"count": 37198, "openCount": 3305, "distribution": {"3600": 3771, "10800": 2600, "32400": 3131, "97200": 4498, "291600": 4493, "874800": 4708, "2624400": 3637, "7873200": 3123, "23619600": 3183, "70858800": 2477, "212576400": 1577}, "isDisabled": false}, "contributors": [{"username": "petebacondarwin", "commitsCount": 1409}, {"username": "gkalpak", "commitsCount": 1254}, {"username": "vsavkin", "commitsCount": 952}, {"username": "IgorMinar", "commitsCount": 930}, {"username": "vicb", "commitsCount": 916}, {"username": "tbosch", "commitsCount": 788}, {"username": "mhevery", "commitsCount": 671}, {"username": "alxhub", "commitsCount": 571}, {"username": "alexeagle", "commitsCount": 561}, {"username": "pkozlowski-opensource", "commitsCount": 542}, {"username": "kara", "commitsCount": 516}, {"username": "matsko", "commitsCount": 479}, {"username": "devversion", "commitsCount": 381}, {"username": "chuckjaz", "commitsCount": 336}, {"username": "marclaval", "commitsCount": 310}, {"username": "gregmagolan", "commitsCount": 290}, {"username": "AndrewKushnir", "commitsCount": 246}, {"username": "kyliau", "commitsCount": 238}, {"username": "josephperrott", "commitsCount": 214}, {"username": "crisbeto", "commitsCount": 207}, {"username": "alan-agius4", "commitsCount": 200}, {"username": "jasonaden", "commitsCount": 191}, {"username": "ocombe", "commitsCount": 191}, {"username": "jbogarthyde", "commitsCount": 180}, {"username": "JoostK", "commitsCount": 165}, {"username": "btford", "commitsCount": 152}, {"username": "brandonroberts", "commitsCount": 151}, {"username": "wardbell", "commitsCount": 149}, {"username": "yjbanov", "commitsCount": 145}, {"username": "filipesilva", "commitsCount": 137}, {"username": "rkirov", "commitsCount": 123}, {"username": "mprobst", "commitsCount": 120}, {"username": "jeffbcross", "commitsCount": 118}, {"username": "kapunahelewong", "commitsCount": 113}, {"username": "benlesh", "commitsCount": 112}, {"username": "sjtrimble", "commitsCount": 112}, {"username": "atscott", "commitsCount": 98}, {"username": "JiaLiPassion", "commitsCount": 88}, {"username": "Foxandxss", "commitsCount": 85}, {"username": "juliemr", "commitsCount": 79}, {"username": "vikerman", "commitsCount": 79}, {"username": "ayazhafiz", "commitsCount": 77}, {"username": "cexbrayat", "commitsCount": 77}, {"username": "robwormald", "commitsCount": 75}, {"username": "PatrickJS", "commitsCount": 73}, {"username": "sonukapoor", "commitsCount": 62}, {"username": "jelbourn", "commitsCount": 58}, {"username": "ajitsinghkaler", "commitsCount": 49}, {"username": "trotyl", "commitsCount": 44}, {"username": "kevmoo", "commitsCount": 43}, {"username": "naomiblack", "commitsCount": 42}, {"username": "jteplitz", "commitsCount": 41}, {"username": "caitp", "commitsCount": 37}, {"username": "StephenFluin", "commitsCount": 35}, {"username": "hansl", "commitsCount": 33}, {"username": "jenniferfell", "commitsCount": 33}, {"username": "chembu", "commitsCount": 32}, {"username": "mgechev", "commitsCount": 31}, {"username": "tinayuangao", "commitsCount": 29}, {"username": "wKoza", "commitsCount": 29}, {"username": "andrewseguin", "commitsCount": 28}, {"username": "alfaproject", "commitsCount": 24}, {"username": "jakemac53", "commitsCount": 24}, {"username": "wagnermaciel", "commitsCount": 24}, {"username": "CaerusKaru", "commitsCount": 23}, {"username": "santoshyadav198613", "commitsCount": 23}, {"username": "ivanwonder", "commitsCount": 22}, {"username": "vojtajina", "commitsCount": 21}, {"username": "Toxicable", "commitsCount": 20}, {"username": "lacolaco", "commitsCount": 20}, {"username": "ttowncompiled", "commitsCount": 20}, {"username": "PascalPrecht", "commitsCount": 17}, {"username": "danielsogl", "commitsCount": 17}, {"username": "kwalrath", "commitsCount": 17}, {"username": "TedSander", "commitsCount": 14}, {"username": "bowenni", "commitsCount": 13}, {"username": "Splaktar", "commitsCount": 12}, {"username": "ahasall", "commitsCount": 12}, {"username": "alfonso-presa", "commitsCount": 12}, {"username": "chalin", "commitsCount": 12}, {"username": "FrederikSchlemmer", "commitsCount": 11}, {"username": "clydin", "commitsCount": 11}, {"username": "goderbauer", "commitsCount": 11}, {"username": "SekibOmazic", "commitsCount": 10}, {"username": "hankduan", "commitsCount": 10}, {"username": "joostme", "commitsCount": 10}, {"username": "manekinekko", "commitsCount": 10}, {"username": "LayZeeDK", "commitsCount": 9}, {"username": "Potapy4", "commitsCount": 9}, {"username": "benbraou", "commitsCount": 9}, {"username": "hterkelsen", "commitsCount": 9}, {"username": "Goodwine", "commitsCount": 8}, {"username": "asnowwolf", "commitsCount": 8}, {"username": "chirayuk", "commitsCount": 8}, {"username": "juleskremer", "commitsCount": 8}, {"username": "laskoviymishka", "commitsCount": 8}, {"username": "martinsik", "commitsCount": 8}, {"username": "sarunint", "commitsCount": 8}, {"username": "arturovt", "commitsCount": 7}, {"username": "dgp1130", "commitsCount": 7}], "commits": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 15}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 147}, {"from": "2020-03-13T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 717}, {"from": "2019-12-14T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 1552}, {"from": "2019-06-12T00:00:00.000Z", "to": "2020-06-11T00:00:00.000Z", "count": 3528}], "statuses": [{"context": "ci/circleci: lint", "state": "pending"}, {"context": "ci/circleci: test_zonejs", "state": "pending"}, {"context": "ci/circleci: test_aio", "state": "pending"}, {"context": "ci/angular: size", "state": "pending"}, {"context": "ci/circleci: test", "state": "pending"}, {"context": "ci/circleci: legacy-unit-tests-saucelabs", "state": "pending"}, {"context": "ci/circleci: build-npm-packages", "state": "pending"}, {"context": "ci/circleci: test_ivy_aot", "state": "pending"}, {"context": "ci/circleci: build-ivy-npm-packages", "state": "pending"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 396126, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.39249999999999996, "health": 1, "branding": 0}, "popularity": {"communityInterest": 82181, "downloadsCount": 6120181.333333333, "downloadsAcceleration": 13118.15962709285, "dependentsCount": 6296}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.09092081462225099}}, "error": {"name": "ParseError", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/angular/angular/issues?state=all&per_page=100&page=15", "protocol": "https:", "url": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=15", "gotOptions": {"path": "/repos/angular/angular/issues?state=all&per_page=100&page=15", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=15", "pathname": "/repos/angular/angular/issues", "href": "https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=15", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token 76699396e3e06b81817921fe6c5b9a071686d287", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET"}, "statusCode": 200, "statusMessage": "OK", "message": "Unexpected end of JSON input in \"https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=15\": \n[{\"url\":\"https://api.github.com/repos/angular/angular/issues/36139\",\"reposito...", "stack": "ParseError: Unexpected end of JSON input in \"https://api.github.com/repos/angular/angular/issues?state=all&per_page=100&page=15\": \n[{\"url\":\"https://api.github.com/repos/angular/angular/issues/36139\",\"reposito...\n    at EventEmitter.emitter.on (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:65:26)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:47:5)\n    at Promise (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:61:3)\nFrom previous event:\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:2:46)\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:38)\n    at doRequest.then (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:134:16)\nFrom previous event:\n    at ghIssueStats (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:124:6)\n    at fetchIssuesStats (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:125:12)\n    at Object.github (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:199:22)\n    at checkRepositoryOwnership.then (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:95:53)\nFrom previous event:\n    at collect (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:89:6)\n    at download.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:163:13)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:162:10)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\n    at Object.onceWrapper (events.js:281:20)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-15T21:26:55.152Z"}, "score": {"final": 0.7570394606771809, "detail": {"quality": 0.7356798427056068, "popularity": 0.7742539900369986, "maintenance": 0.7581331752929982}}}}, {"eslint-plugin-jest": {"analyzedAt": "2020-06-04T10:39:44.580Z", "collected": {"metadata": {"name": "eslint-plugin-jest", "scope": "unscoped", "version": "23.13.2", "description": "Eslint rules for Jest", "keywords": ["eslint", "eslintplugin", "eslint-plugin"], "date": "2020-05-26T21:02:45.820Z", "author": {"name": "Jonathan Kim", "email": "hello@jkimbo.com", "url": "jkimbo.com"}, "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "jsonp", "email": "jason@jason-palmer.com"}, {"username": "orta", "email": "orta.therox@gmail.com"}, {"username": "rickhanlonii", "email": "rickhanlonii@gmail.com"}, {"username": "rogeliog", "email": "rogelioguzmanh@gmail.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}, {"username": "thymikee", "email": "thymikee@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/jest-community/eslint-plugin-jest.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-jest", "homepage": "https://github.com/jest-community/eslint-plugin-jest#readme", "repository": "https://github.com/jest-community/eslint-plugin-jest", "bugs": "https://github.com/jest-community/eslint-plugin-jest/issues"}, "license": "MIT", "dependencies": {"@typescript-eslint/experimental-utils": "^2.5.0"}, "devDependencies": {"@babel/cli": "^7.4.4", "@babel/core": "^7.4.4", "@babel/preset-env": "^7.4.4", "@babel/preset-typescript": "^7.3.3", "@commitlint/cli": "^8.2.0", "@commitlint/config-conventional": "^8.2.0", "@schemastore/package": "^0.0.5", "@semantic-release/changelog": "^3.0.5", "@semantic-release/git": "^7.0.17", "@types/eslint": "^6.1.3", "@types/jest": "^25.1.0", "@types/node": "^12.6.6", "@typescript-eslint/eslint-plugin": "^2.5.0", "@typescript-eslint/parser": "^2.5.0", "babel-jest": "^25.2.0", "babel-plugin-replace-ts-export-assignment": "^0.0.2", "eslint": "^5.1.0 || ^6.0.0", "eslint-config-prettier": "^6.5.0", "eslint-plugin-eslint-comments": "^3.1.2", "eslint-plugin-eslint-plugin": "^2.0.0", "eslint-plugin-import": "^2.20.2", "eslint-plugin-node": "^11.0.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^3.0.9", "jest": "^25.2.0", "jest-runner-eslint": "^0.8.0", "lint-staged": "^9.4.2", "prettier": "^1.19.1", "prettylint": "^1.0.0", "resolve-from": "^5.0.0", "rimraf": "^3.0.0", "semantic-release": "^15.13.28", "ts-node": "^8.10.1", "typescript": "^3.5.3"}, "peerDependencies": {"eslint": ">=5"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 9}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 17}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 54}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 95}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://eslint.org/\">\n    <img width=\"150\" height=\"150\" src=\"https://eslint.org/assets/img/logo.svg\">\n  </a>\n  <a href=\"https://facebook.github.io/jest/\">\n    <img width=\"150\" height=\"150\" vspace=\"\" hspace=\"25\" src=\"https://jestjs.io/img/jest.png\">\n  </a>\n  <h1>eslint-plugin-jest</h1>\n  <p>ESLint plugin for Jest</p>\n</div>\n\n[![Actions Status](https://github.com/jest-community/eslint-plugin-jest/workflows/Unit%20tests/badge.svg?branch=master)](https://github.com/jest-community/eslint-plugin-jest/actions)\n[![Renovate badge](https://badges.renovateapi.com/github/jest-community/eslint-plugin-jest)](https://renovatebot.com/)\n\n## Installation\n\n```\n$ yarn add --dev eslint eslint-plugin-jest\n```\n\n**Note:** If you installed ESLint globally then you must also install\n`eslint-plugin-jest` globally.\n\n## Usage\n\nAdd `jest` to the plugins section of your `.eslintrc` configuration file. You\ncan omit the `eslint-plugin-` prefix:\n\n```json\n{\n  \"plugins\": [\"jest\"]\n}\n```\n\nThen configure the rules you want to use under the rules section.\n\n```json\n{\n  \"rules\": {\n    \"jest/no-disabled-tests\": \"warn\",\n    \"jest/no-focused-tests\": \"error\",\n    \"jest/no-identical-title\": \"error\",\n    \"jest/prefer-to-have-length\": \"warn\",\n    \"jest/valid-expect\": \"error\"\n  }\n}\n```\n\nYou can also whitelist the environment variables provided by Jest by doing:\n\n```json\n{\n  \"env\": {\n    \"jest/globals\": true\n  }\n}\n```\n\nThe behaviour of some rules (specifically `no-deprecated-functions`) change\ndepending on the version of `jest` being used.\n\nThis setting is detected automatically based off the version of the `jest`\npackage installed in `node_modules`, but it can also be provided explicitly if\ndesired:\n\n```json\n{\n  \"settings\": {\n    \"jest\": {\n      \"version\": 26\n    }\n  }\n}\n```\n\n## Shareable configurations\n\n### Recommended\n\nThis plugin exports a recommended configuration that enforces good testing\npractices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/recommended\"]\n}\n```\n\n### Style\n\nThis plugin also exports a configuration named `style`, which adds some\nstylistic rules, such as `prefer-to-be-null`, which enforces usage of `toBeNull`\nover `toBe(null)`.\n\nTo enable this configuration use the `extends` property in your `.eslintrc`\nconfig file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/style\"]\n}\n```\n\nSee\n[ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files)\nfor more information about extending configuration files.\n\n### All\n\nIf you want to enable all rules instead of only some you can do so by adding the\n`all` configuration to your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"plugin:jest/all\"]\n}\n```\n\nWhile the `recommended` and `style` configurations only change in major versions\nthe `all` configuration may change in any release and is thus unsuited for\ninstallations requiring long-term consistency.\n\n## Rules\n\n<!-- begin rules list -->\n\n| Rule                                                                   | Description                                                     | Configurations   | Fixable      |\n| ---------------------------------------------------------------------- | --------------------------------------------------------------- | ---------------- | ------------ |\n| [consistent-test-it](docs/rules/consistent-test-it.md)                 | Have control over `test` and `it` usages                        |                  | ![fixable][] |\n| [expect-expect](docs/rules/expect-expect.md)                           | Enforce assertion to be made in a test body                     | ![recommended][] |              |\n| [lowercase-name](docs/rules/lowercase-name.md)                         | Enforce lowercase test names                                    |                  | ![fixable][] |\n| [no-alias-methods](docs/rules/no-alias-methods.md)                     | Disallow alias methods                                          | ![style][]       | ![fixable][] |\n| [no-commented-out-tests](docs/rules/no-commented-out-tests.md)         | Disallow commented out tests                                    | ![recommended][] |              |\n| [no-deprecated-functions](docs/rules/no-deprecated-functions.md)       | Disallow use of deprecated functions                            |                  | ![fixable][] |\n| [no-disabled-tests](docs/rules/no-disabled-tests.md)                   | Disallow disabled tests                                         | ![recommended][] |              |\n| [no-duplicate-hooks](docs/rules/no-duplicate-hooks.md)                 | Disallow duplicate setup and teardown hooks                     |                  |              |\n| [no-export](docs/rules/no-export.md)                                   | Prevent exporting from test files                               | ![recommended][] |              |\n| [no-focused-tests](docs/rules/no-focused-tests.md)                     | Disallow focused tests                                          | ![recommended][] | ![fixable][] |\n| [no-hooks](docs/rules/no-hooks.md)                                     | Disallow setup and teardown hooks                               |                  |              |\n| [no-identical-title](docs/rules/no-identical-title.md)                 | Disallow identical titles                                       | ![recommended][] |              |\n| [no-if](docs/rules/no-if.md)                                           | Disallow conditional logic                                      |                  |              |\n| [no-jasmine-globals](docs/rules/no-jasmine-globals.md)                 | Disallow Jasmine globals                                        | ![recommended][] | ![fixable][] |\n| [no-jest-import](docs/rules/no-jest-import.md)                         | Disallow importing Jest                                         | ![recommended][] |              |\n| [no-large-snapshots](docs/rules/no-large-snapshots.md)                 | disallow large snapshots                                        |                  |              |\n| [no-mocks-import](docs/rules/no-mocks-import.md)                       | Disallow manually importing from **mocks**                      | ![recommended][] |              |\n| [no-restricted-matchers](docs/rules/no-restricted-matchers.md)         | Disallow specific matchers & modifiers                          |                  |              |\n| [no-standalone-expect](docs/rules/no-standalone-expect.md)             | Prevents expects that are outside of an it or test block.       | ![recommended][] |              |\n| [no-test-callback](docs/rules/no-test-callback.md)                     | Avoid using a callback in asynchronous tests                    | ![recommended][] | ![fixable][] |\n| [no-test-prefixes](docs/rules/no-test-prefixes.md)                     | Use `.only` and `.skip` over `f` and `x`                        | ![recommended][] | ![fixable][] |\n| [no-test-return-statement](docs/rules/no-test-return-statement.md)     | Disallow explicitly returning from tests                        |                  |              |\n| [no-try-expect](docs/rules/no-try-expect.md)                           | Prefer using toThrow for exception tests                        | ![recommended][] |              |\n| [prefer-called-with](docs/rules/prefer-called-with.md)                 | Suggest using `toBeCalledWith()` OR `toHaveBeenCalledWith()`    |                  |              |\n| [prefer-expect-assertions](docs/rules/prefer-expect-assertions.md)     | Suggest using `expect.assertions()` OR `expect.hasAssertions()` |                  |              |\n| [prefer-hooks-on-top](docs/rules/prefer-hooks-on-top.md)               | Suggest to have all hooks at top level                          |                  |              |\n| [prefer-spy-on](docs/rules/prefer-spy-on.md)                           | Suggest using `jest.spyOn()`                                    |                  | ![fixable][] |\n| [prefer-strict-equal](docs/rules/prefer-strict-equal.md)               | Suggest using toStrictEqual()                                   |                  | ![fixable][] |\n| [prefer-to-be-null](docs/rules/prefer-to-be-null.md)                   | Suggest using `toBeNull()`                                      | ![style][]       | ![fixable][] |\n| [prefer-to-be-undefined](docs/rules/prefer-to-be-undefined.md)         | Suggest using `toBeUndefined()`                                 | ![style][]       | ![fixable][] |\n| [prefer-to-contain](docs/rules/prefer-to-contain.md)                   | Suggest using `toContain()`                                     | ![style][]       | ![fixable][] |\n| [prefer-to-have-length](docs/rules/prefer-to-have-length.md)           | Suggest using `toHaveLength()`                                  | ![style][]       | ![fixable][] |\n| [prefer-todo](docs/rules/prefer-todo.md)                               | Suggest using `test.todo`                                       |                  | ![fixable][] |\n| [require-to-throw-message](docs/rules/require-to-throw-message.md)     | Require a message for `toThrow()`                               |                  |              |\n| [require-top-level-describe](docs/rules/require-top-level-describe.md) | Prevents test cases and hooks to be outside of a describe block |                  |              |\n| [valid-describe](docs/rules/valid-describe.md)                         | Enforce valid `describe()` callback                             | ![recommended][] |              |\n| [valid-expect](docs/rules/valid-expect.md)                             | Enforce valid `expect()` usage                                  | ![recommended][] |              |\n| [valid-expect-in-promise](docs/rules/valid-expect-in-promise.md)       | Enforce having return statement when testing with promises      | ![recommended][] |              |\n| [valid-title](docs/rules/valid-title.md)                               | Enforce valid titles                                            |                  | ![fixable][] |\n\n<!-- end rules list -->\n\n## Credit\n\n- [eslint-plugin-mocha](https://github.com/lo1tuma/eslint-plugin-mocha)\n- [eslint-plugin-jasmine](https://github.com/tlvince/eslint-plugin-jasmine)\n\n## Related Projects\n\n### eslint-plugin-jest-formatting\n\nThis project aims to provide formatting rules (auto-fixable where possible) to\nensure consistency and readability in jest test suites.\n\nhttps://github.com/dangreenisrael/eslint-plugin-jest-formatting\n\n[recommended]: https://img.shields.io/badge/-recommended-lightgrey.svg\n[fixable]: https://img.shields.io/badge/-fixable-green.svg\n[style]: https://img.shields.io/badge/-style-blue.svg"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 365810}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1858665}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8690827}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 24290552}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 41103394}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 67741046}], "dependentsCount": 1024, "starsCount": 12}, "github": {"starsCount": 570, "forksCount": 112, "subscribersCount": 9, "issues": {"count": 596, "openCount": 70, "distribution": {"3600": 133, "10800": 53, "32400": 56, "97200": 78, "291600": 42, "874800": 57, "2624400": 57, "7873200": 38, "23619600": 35, "70858800": 42, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "SimenB", "commitsCount": 123}, {"username": "G-Rath", "commitsCount": 114}, {"username": "semantic-release-bot", "commitsCount": 24}, {"username": "macklinu", "commitsCount": 23}, {"username": "cpojer", "commitsCount": 15}, {"username": "ranyitz", "commitsCount": 10}, {"username": "greenkeeper[bot]", "commitsCount": 8}, {"username": "xfumihiro", "commitsCount": 8}, {"username": "garyking", "commitsCount": 4}, {"username": "noahbenham", "commitsCount": 4}, {"username": "tushardhole", "commitsCount": 4}, {"username": "Mark1626", "commitsCount": 3}, {"username": "cartogram", "commitsCount": 3}, {"username": "chrisblossom", "commitsCount": 3}, {"username": "sudo-suhas", "commitsCount": 3}, {"username": "yatki", "commitsCount": 3}, {"username": "benmonro", "commitsCount": 2}, {"username": "brianlmacdonald", "commitsCount": 2}, {"username": "folke", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "hanneslund", "commitsCount": 2}, {"username": "himynameisdave", "commitsCount": 2}, {"username": "hulkish", "commitsCount": 2}, {"username": "jackfranklin", "commitsCount": 2}, {"username": "jeysal", "commitsCount": 2}, {"username": "jkimbo", "commitsCount": 2}, {"username": "kangax", "commitsCount": 2}, {"username": "thymikee", "commitsCount": 2}, {"username": "tryggvigy", "commitsCount": 2}, {"username": "with-heart", "commitsCount": 2}, {"username": "Belco90", "commitsCount": 1}, {"username": "JohanBrorson", "commitsCount": 1}, {"username": "JrSchild", "commitsCount": 1}, {"username": "Morikko", "commitsCount": 1}, {"username": "Saberre", "commitsCount": 1}, {"username": "StephanBijzitter", "commitsCount": 1}, {"username": "Userbit", "commitsCount": 1}, {"username": "aaronabramov", "commitsCount": 1}, {"username": "anescobar1991", "commitsCount": 1}, {"username": "anilreddykatta", "commitsCount": 1}, {"username": "armano2", "commitsCount": 1}, {"username": "arnaudbesnier", "commitsCount": 1}, {"username": "blake-newman", "commitsCount": 1}, {"username": "borilla", "commitsCount": 1}, {"username": "bradzacher", "commitsCount": 1}, {"username": "bz2", "commitsCount": 1}, {"username": "captbaritone", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "dangreenisrael", "commitsCount": 1}, {"username": "deecewan", "commitsCount": 1}, {"username": "dlackty", "commitsCount": 1}, {"username": "doniyor2109", "commitsCount": 1}, {"username": "eranshabi", "commitsCount": 1}, {"username": "ericnakagawa", "commitsCount": 1}, {"username": "erunion", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "ismail-syed", "commitsCount": 1}, {"username": "j-f1", "commitsCount": 1}, {"username": "jacekkopecky", "commitsCount": 1}, {"username": "jdelStrother", "commitsCount": 1}, {"username": "katakonst", "commitsCount": 1}, {"username": "leonardovillela", "commitsCount": 1}, {"username": "luftywiranda13", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "mattphillips", "commitsCount": 1}, {"username": "motiz88", "commitsCount": 1}, {"username": "mpontus", "commitsCount": 1}, {"username": "msvab", "commitsCount": 1}, {"username": "nferrara100", "commitsCount": 1}, {"username": "orta", "commitsCount": 1}, {"username": "pascalduez", "commitsCount": 1}, {"username": "paularmstrong", "commitsCount": 1}, {"username": "rabelfish", "commitsCount": 1}, {"username": "ricardogobbosouza", "commitsCount": 1}, {"username": "rickhanlonii", "commitsCount": 1}, {"username": "rogeliog", "commitsCount": 1}, {"username": "ronami", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "shaunwallace", "commitsCount": 1}, {"username": "slaweet", "commitsCount": 1}, {"username": "stormslowly", "commitsCount": 1}, {"username": "suganya-sangith", "commitsCount": 1}, {"username": "targos", "commitsCount": 1}, {"username": "teriu", "commitsCount": 1}, {"username": "thomlom", "commitsCount": 1}, {"username": "tinovyatkin", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 19}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 31}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 67}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 229}]}, "source": {"files": {"readmeSize": 10796, "testsSize": 225945, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["eslint", "prettier"], "coverage": 1, "outdatedDependencies": {"@typescript-eslint/experimental-utils": {"required": "^2.5.0", "stable": "3.1.0", "latest": "3.1.1-alpha.4"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.75, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 789, "downloadsCount": 8096850.666666667, "downloadsAcceleration": 36715.65213089802, "dependentsCount": 1024}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.5521164024631805}}, "score": {"final": 0.8016893294006875, "detail": {"quality": 0.8570091409034957, "popularity": 0.5647976346198461, "maintenance": 0.9911640428934075}}}}, {"grunt-contrib-uglify": {"analyzedAt": "2020-06-15T22:34:37.788Z", "collected": {"metadata": {"name": "grunt-contrib-uglify", "scope": "unscoped", "version": "4.0.1", "description": "Minify JavaScript files with UglifyJS", "keywords": ["gruntplugin"], "date": "2019-03-21T18:54:57.770Z", "author": {"name": "Grunt Team", "url": "https://gruntjs.com/"}, "publisher": {"username": "xhmikosr", "email": "xhmikosr@gmail.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "alexlamsl", "email": "alexlamsl@gmail.com"}, {"username": "jmeas", "email": "james_please@icloud.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "jsoverson", "email": "jsoverson@gmail.com"}, {"username": "xhmikosr", "email": "xhmikosr@gmail.com"}], "contributors": [{"name": "\"Cowboy\" Ben Alman", "url": "http://benalman.com"}, {"name": "Tyler Kellen", "url": "http://goingslowly.com"}, {"name": "Jarrod Overson", "url": "http://jarrodoverson.com"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt-contrib-uglify.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt-contrib-uglify", "homepage": "https://github.com/gruntjs/grunt-contrib-uglify#readme", "repository": "https://github.com/gruntjs/grunt-contrib-uglify", "bugs": "https://github.com/gruntjs/grunt-contrib-uglify/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.1", "maxmin": "^2.1.0", "uglify-js": "^3.5.0", "uri-path": "^1.0.0"}, "devDependencies": {"grunt": "^1.0.3", "grunt-contrib-clean": "^2.0.0", "grunt-contrib-internal": "^3.1.0", "grunt-contrib-jshint": "^2.1.0", "grunt-contrib-nodeunit": "^2.0.0"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# grunt-contrib-uglify v4.0.1 [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-contrib-uglify.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-contrib-uglify) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/ybtf5vbvtenii561/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-contrib-uglify/branch/master)\r\n\r\n> Minify JavaScript files with UglifyJS\r\n\r\n\r\n\r\n## Getting Started\r\n\r\nIf you haven't used [Grunt](https://gruntjs.com/) before, be sure to check out the [Getting Started](https://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](https://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\r\n\r\n```shell\r\nnpm install grunt-contrib-uglify --save-dev\r\n```\r\n\r\nOnce the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\r\n\r\n```js\r\ngrunt.loadNpmTasks('grunt-contrib-uglify');\r\n```\r\n\r\n\r\n\r\n\r\n## Uglify task\r\n_Run this task with the `grunt uglify` command._\r\n\r\nTask targets, files and options may be specified according to the grunt [Configuring tasks](https://gruntjs.com/configuring-tasks) guide.\r\n\r\n### Options\r\n\r\nThis task primarily delegates to [UglifyJS](https://github.com/mishoo/UglifyJS2), so please consider their documentation as required reading for advanced configuration.\r\n\r\n\r\n###### Deprecated options from `2.x`\r\n\r\nOption                  | Replacement\r\n----------------------- | -----------\r\nASCIIOnly               | output.ascii_only\r\nenclose                 | &mdash;\r\nexportAll               | &mdash;\r\nexpression              | parse.expression\r\nindentLevel             | output.indent_level\r\nmangleProperties        | mangle.properties\r\nmaxLineLen              | output.max\\_line_len\r\npreserveComments        | output.comments\r\nquoteStyle              | output.quote_style\r\nscrewIE8                | !ie8\r\nsourceMapIncludeSources | sourceMap.includeSources\r\nsourceMapRoot           | sourceMap.root\r\nsourceMapUrl            | sourceMap.url\r\n\r\n\r\n#### mangle\r\nType: `Boolean` `Object`  \r\nDefault: `{}`\r\n\r\nTurn on or off mangling with default options. If an `Object` is specified, it is passed directly to `ast.mangle_names()` *and* `ast.compute_char_frequency()` (mimicking command line behavior). [View all options here](https://github.com/mishoo/UglifyJS2#mangle-options).\r\n\r\n#### compress\r\nType: `Boolean` `Object`  \r\nDefault: `{}`\r\n\r\nTurn on or off source compression with default options. If an `Object` is specified, it is passed as options to `UglifyJS.Compressor()`. [View all options here](https://github.com/mishoo/UglifyJS2#compress-options).\r\n\r\n#### beautify\r\nType: `Boolean` `Object`  \r\nDefault: `false`\r\n\r\nTurns on beautification of the generated source code. [View all options here](https://github.com/mishoo/UglifyJS2#output-options)\r\n\r\n###### parse.expression\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nParse a single expression, rather than a program (for parsing JSON)\r\n\r\n#### report\r\nType: `string`  \r\nChoices: `'min'`, `'gzip'`  \r\nDefault: `'min'`\r\n\r\nReport minification result or both minification and gzip results.\r\nThis is useful to see exactly how well uglify-js is performing but using `'gzip'` will make the task take 5-10x longer to complete. [Example output](https://github.com/sindresorhus/maxmin#readme).\r\n\r\n#### sourceMap\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nIf `true`, a source map file will be generated in the same directory as the `dest` file. By default it will have the same basename as the `dest` file, but with a `.map` extension.\r\n\r\n#### sourceMapName\r\nType: `String` `Function`  \r\nDefault: `undefined`\r\n\r\nTo customize the name or location of the generated source map, pass a string to indicate where to write the source map to. If a function is provided, the uglify destination is passed as the argument and the return value will be used as the file name.\r\n\r\n#### sourceMapIn\r\nType: `String` `Function`  \r\nDefault: `undefined`\r\n\r\nThe location of an input source map from an earlier compilation, e.g. from CoffeeScript. If a function is provided, the\r\nuglify source is passed as the argument and the return value will be used as the sourceMap name. This only makes sense\r\nwhen there's one source file.\r\n\r\n#### sourceMap.includeSources\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nPass this flag if you want to include the content of source files in the source map as sourcesContent property.\r\n\r\n###### sourceMap.root\r\nType: `String`  \r\nDefault: `undefined`\r\n\r\nWith this option you can customize root URL that browser will use when looking for sources.\r\n\r\nIf the sources are not absolute URLs after prepending of the `sourceMap.root`, the sources are resolved relative to the source map.\r\n\r\n#### sourceMap.url\r\nType: `String`  \r\nDefault: `undefined`\r\n\r\nOverride the calculated value for `sourceMappingURL` in the source map. This is useful if the source map location is not relative to the base path of the minified file, i.e. when using a CDN\r\n\r\n#### wrap\r\nType: `String`  \r\nDefault: `undefined`\r\n\r\nWrap all of the code in a closure, an easy way to make sure nothing is leaking.\r\nFor variables that need to be public `exports` and `global` variables are made available.\r\nThe value of wrap is the global variable exports will be available as.\r\n\r\n#### output.ascii_only\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nEnables to encode non-ASCII characters as \\uXXXX.\r\n\r\n#### output.comments\r\nType: `Boolean` `String` `Function`  \r\nDefault: `undefined`  \r\nOptions: `false` `'all'` `'some'`\r\n\r\nTurn on preservation of comments.\r\n\r\n- `false` will strip all comments\r\n- `'all'` will preserve all comments in code blocks that have not been squashed or dropped\r\n- `'some'` will preserve all comments that include a closure compiler style directive (`@preserve` `@license` `@cc_on`)\r\n- `Function` specify your own comment preservation function. You will be passed the current node and the current comment and are expected to return either `true` or `false`\r\n- `RegExp` `'/[RegExp]/'` will preserve comments matching given RegExp or stringified RegExp\r\n\r\n#### banner\r\nType: `String`  \r\nDefault: `''`\r\n\r\nThis string will be prepended to the minified output. Template strings (e.g. `<%= config.value %>`) will be expanded automatically.\r\n\r\n#### footer\r\nType: `String`  \r\nDefault: `''`\r\n\r\nThis string will be appended to the minified output. Template strings (e.g. `<%= config.value %>`) will be expanded automatically.\r\n\r\n#### ie8\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nSet this to `true` if you still care about full compliance with Internet Explorer 6-8 quirks.\r\n\r\n#### mangle.properties\r\nType: `Boolean` `Object`  \r\nDefault: `false`\r\n\r\nTurn on or off property mangling with default options. If an `Object` is specified, it is passed directly to `ast.mangle_properties()` (mimicking command line behavior). [View all options here](https://github.com/mishoo/UglifyJS2#mangle-options).\r\n\r\n#### reserveDOMProperties\r\nType: `Boolean`  \r\nDefault: `false`\r\n\r\nUse this flag in conjunction with `mangle.properties` to prevent built-in browser object properties from being mangled.\r\n\r\n#### exceptionsFiles\r\nType: `Array`  \r\nDefault: `[]`\r\n\r\nUse this with `mangle.properties` to pass one or more JSON files containing a list of variables and object properties\r\nthat should not be mangled. See the [UglifyJS docs](https://www.npmjs.com/package/uglify-js) for more info on the file syntax.\r\n\r\n#### nameCache\r\nType: `String`  \r\nDefault: `''`\r\n\r\nA string that is a path to a JSON cache file that uglify will create and use to coordinate symbol mangling between\r\nmultiple runs of uglify. Note: this generated file uses the same JSON format as the `exceptionsFiles` files.\r\n\r\n#### output.quote_style\r\nType: `Integer`  \r\nDefault: `0`\r\n\r\nPreserve or enforce quotation mark style.\r\n\r\n* `0` will use single or double quotes such as to minimize the number of bytes (prefers double quotes when both will do)\r\n* `1` will always use single quotes\r\n* `2` will always use double quotes\r\n* `3` will preserve original quotation marks\r\n\r\n### Usage examples\r\n\r\n#### Basic compression\r\n\r\nThis configuration will compress and mangle the input files using the default options.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input1.js', 'src/input2.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### No mangling\r\n\r\nSpecify `mangle: false` to prevent changes to your variable and function names.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      mangle: false\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Reserved identifiers\r\n\r\nYou can specify identifiers to leave untouched with an `reserved` array in the `mangle` options.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      mangle: {\r\n        reserved: ['jQuery', 'Backbone']\r\n      }\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Source maps\r\n\r\nGenerate a source map by setting the `sourceMap` option to `true`. The generated\r\nsource map will be in the same directory as the destination file. Its name will be\r\nthe basename of the destination file with a `.map` extension. Override these\r\ndefaults with the `sourceMapName` attribute.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    my_target: {\r\n      options: {\r\n        sourceMap: true,\r\n        sourceMapName: 'path/to/sourcemap.map'\r\n      },\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Advanced source maps\r\n\r\nSet the `sourceMap.includeSources` option to `true` to embed your sources directly into the map. To include\r\na source map from a previous compilation pass it as the value of the `sourceMapIn` option.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    my_target: {\r\n      options: {\r\n        sourceMap: {\r\n          includeSources: true\r\n        },\r\n        sourceMapIn: 'example/coffeescript-sourcemap.js', // input sourcemap from a previous compilation\r\n      },\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js'],\r\n      },\r\n    },\r\n  },\r\n});\r\n```\r\n\r\nRefer to the [UglifyJS SourceMap Documentation](https://github.com/mishoo/UglifyJS2#source-map-options) for more information.\r\n\r\n#### Turn off console warnings\r\n\r\nSpecify `drop_console: true` as part of the `compress` options to discard calls to `console.*` functions.\r\nThis will suppress warning messages in the console.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      compress: {\r\n        drop_console: true\r\n      }\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Beautify\r\n\r\nSpecify `beautify: true` to beautify your code for debugging/troubleshooting purposes.\r\nPass an object to manually configure any other output options.\r\n\r\nSee [UglifyJS documentation](https://github.com/mishoo/UglifyJS2#output-options) for more information.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    my_target: {\r\n      options: {\r\n        beautify: true\r\n      },\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    },\r\n    my_advanced_target: {\r\n      options: {\r\n        beautify: {\r\n          width: 80\r\n        }\r\n      },\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Banner comments\r\n\r\nIn this example, running `grunt uglify:my_target` will prepend a banner created by interpolating the `banner` template string with the config object. Here, those properties are the values imported from the `package.json` file (which are available via the `pkg` config property) plus today's date.\r\n\r\n_Note: you don't have to use an external JSON file. It's also valid to create the `pkg` object inline in the config. That being said, if you already have a JSON file, you might as well reference it._\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  pkg: grunt.file.readJSON('package.json'),\r\n  uglify: {\r\n    options: {\r\n      banner: '/*! <%= pkg.name %> - v<%= pkg.version %> - ' +\r\n        '<%= grunt.template.today(\"yyyy-mm-dd\") %> */'\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Conditional compilation\r\n\r\nYou can also enable UglifyJS conditional compilation. This is commonly used to remove debug code blocks for production builds. This is equivalent to the command line `--define` option.\r\n\r\nSee [UglifyJS global definitions documentation](https://github.com/mishoo/UglifyJS2#conditional-compilation) for more information.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      compress: {\r\n        global_defs: {\r\n          'DEBUG': false\r\n        },\r\n        dead_code: true\r\n      }\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Compiling all files in a folder dynamically\r\n\r\nThis configuration will compress and mangle the files dynamically.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    my_target: {\r\n      files: [{\r\n        expand: true,\r\n        cwd: 'src/js',\r\n        src: '**/*.js',\r\n        dest: 'dest/js'\r\n      }]\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Compiling all files separately on the each their path\r\n\r\nThis configuration will compress and mangle all js files separately in each folder.\r\n\r\nAlso exclude jQuery for mangling and ignore all `*.min.js` files.\r\n\r\n```js\r\n// Project configuration.\r\nuglify: {\r\n  dev: {\r\n    options: {\r\n      mangle: {\r\n        reserved: ['jQuery']\r\n      }\r\n    },\r\n    files: [{\r\n      expand: true,\r\n      src: ['dist/assets/js/*.js', '!dist/assets/js/*.min.js'],\r\n      dest: 'dist/assets',\r\n      cwd: '.',\r\n      rename: function (dst, src) {\r\n        // To keep the source js files and make new files as `*.min.js`:\r\n        // return dst + '/' + src.replace('.js', '.min.js');\r\n        // Or to override to src:\r\n        return src;\r\n      }\r\n    }]\r\n  }\r\n},\r\n```\r\n\r\n#### Turn on object property name mangling\r\n\r\nThis configuration will turn on object property name mangling, but not mangle built-in browser object properties.\r\nAdditionally, variables and object properties listed in the `myExceptionsFile.json` will be mangled. For more info,\r\non the format of the exception file format please see the [UglifyJS docs](https://www.npmjs.com/package/uglify-js).\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      mangle: {\r\n        properties: true\r\n      },\r\n      reserveDOMCache: true,\r\n      exceptionsFiles: [ 'myExceptionsFile.json' ]\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output.min.js': ['src/input.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n#### Turn on use of name mangling cache\r\n\r\nTurn on use of name mangling cache to coordinate mangled symbols between outputted uglify files. uglify will the\r\ngenerate a JSON cache file with the name provided in the options. Note: this generated file uses the same JSON format\r\nas the `exceptionsFiles` files.\r\n\r\n```js\r\n// Project configuration.\r\ngrunt.initConfig({\r\n  uglify: {\r\n    options: {\r\n      nameCache: '.tmp/grunt-uglify-cache.json',\r\n    },\r\n    my_target: {\r\n      files: {\r\n        'dest/output1.min.js': ['src/input1.js'],\r\n        'dest/output2.min.js': ['src/input2.js']\r\n      }\r\n    }\r\n  }\r\n});\r\n```\r\n\r\n\r\n## Release History\r\n\r\n * 2018-08-26\u2003\u2003\u2003v4.0.0\u2003\u2003\u2003Update dependencies. Requires Node.js >= 6.\r\n * 2018-07-29\u2003\u2003\u2003v3.4.0\u2003\u2003\u2003Update uglify-js to v3.4.0.\r\n * 2017-12-24\u2003\u2003\u2003v3.3.0\u2003\u2003\u2003Update uglify-js to v3.3.0.\r\n * 2017-11-26\u2003\u2003\u2003v3.2.1\u2003\u2003\u2003Update uglify-js to v3.2.0.\r\n * 2017-09-11\u2003\u2003\u2003v3.1.0\u2003\u2003\u2003Update uglify-js to v3.1.0.\r\n * 2017-05-20\u2003\u2003\u2003v3.0.1\u2003\u2003\u2003Fix toplevel option.\r\n * 2017-05-12\u2003\u2003\u2003v3.0.0\u2003\u2003\u2003Update uglify-js to v3.0.4.\r\n * 2017-04-05\u2003\u2003\u2003v2.3.0\u2003\u2003\u2003Make CLI output less verbose.\r\n * 2017-03-31\u2003\u2003\u2003v2.2.1\u2003\u2003\u2003Fix banner option.\r\n * 2017-03-01\u2003\u2003\u2003v2.2.0\u2003\u2003\u2003Update uglify-js to v2.8.3.\r\n * 2017-02-08\u2003\u2003\u2003v2.1.0\u2003\u2003\u2003Show size changes in output. Switch to `object.assign`.\r\n * 2016-07-19\u2003\u2003\u2003v2.0.0\u2003\u2003\u2003Update uglify-js to v2.7.0. `screwIE8` is enabled by default.\r\n * 2016-07-19\u2003\u2003\u2003v1.0.2\u2003\u2003\u2003Update grunt to ^1.0.0. Fix `beautify` when passed as an object. Fix docs about `report` values.\r\n * 2016-03-16\u2003\u2003\u2003v1.0.1\u2003\u2003\u2003Downgrade maxmin for Node.js 0.10.\r\n * 2016-03-04\u2003\u2003\u2003v1.0.0\u2003\u2003\u2003Use uglify-js ~2.6.2 to fix sourcemap issue. Improve docs for `global-defs` and `--define` options. Add `sourceMapUrl` option. Add `bare_returns` option. Optionally set report verbosity level using report option.\r\n * 2016-01-29\u2003\u2003\u2003v0.11.1\u2003\u2003\u2003Update lodash to ^4.0.1. Update grunt-contrib-clean to ^0.7.0. Update grunt-contrib-jshint to ^0.12.0.\r\n * 2015-11-20\u2003\u2003\u2003v0.11.0\u2003\u2003\u2003Update uglify-js to ~2.6.0.\r\n * 2015-11-12\u2003\u2003\u2003v0.10.1\u2003\u2003\u2003Update uglify-js to ~2.5.\r\n * 2015-10-27\u2003\u2003\u2003v0.10.0\u2003\u2003\u2003Update uglify-js to ^2.5.\r\n * 2015-08-24\u2003\u2003\u2003v0.9.2\u2003\u2003\u2003Update uglify-js to ^2.4.24\r\n * 2015-04-07\u2003\u2003\u2003v0.9.1\u2003\u2003\u2003More fixes for `mangle` options.\r\n * 2015-04-07\u2003\u2003\u2003v0.9.0\u2003\u2003\u2003Add hook into uglify-js's mangling functionality.\r\n * 2015-03-30\u2003\u2003\u2003v0.8.1\u2003\u2003\u2003Lock uglify-js to 2.4.17 due to breaking changes.\r\n * 2015-02-19\u2003\u2003\u2003v0.8.0\u2003\u2003\u2003Add `screwIE8` option. Fix issue with explicit `compress` in Node.js 0.12.0.\r\n * 2014-12-23\u2003\u2003\u2003v0.7.0\u2003\u2003\u2003Add `sourceMapRoot` options. Update readme descriptions. Remove reference to clean-css.\r\n * 2014-09-17\u2003\u2003\u2003v0.6.0\u2003\u2003\u2003Output fixes. Add `ASCIIOnly` option. Other fixes.\r\n * 2014-07-25\u2003\u2003\u2003v0.5.1\u2003\u2003\u2003Update chalk to ^0.5.1. Output updates.\r\n * 2014-03-01\u2003\u2003\u2003v0.4.0\u2003\u2003\u2003Remove grunt-lib-contrib dependency and add more colors.\r\n * 2014-02-27\u2003\u2003\u2003v0.3.3\u2003\u2003\u2003Remove unnecessary calls to `grunt.template.process`.\r\n * 2014-01-22\u2003\u2003\u2003v0.3.2\u2003\u2003\u2003Fix handling of `sourceMapIncludeSources` option.\r\n * 2014-01-20\u2003\u2003\u2003v0.3.1\u2003\u2003\u2003Fix relative path issue in sourcemaps.\r\n * 2014-01-16\u2003\u2003\u2003v0.3.0\u2003\u2003\u2003Refactor sourcemap support.\r\n * 2013-11-09\u2003\u2003\u2003v0.2.7\u2003\u2003\u2003Prepend banner if `sourceMap` option not set, addresses #109.\r\n * 2013-11-08\u2003\u2003\u2003v0.2.6\u2003\u2003\u2003Merge #45, #53, #85 (#105 by way of duping #53). Add support for banners in uglified files with sourcemaps. Update docs.\r\n * 2013-10-28\u2003\u2003\u2003v0.2.5\u2003\u2003\u2003Add warning for banners when using sourcemaps.\r\n * 2013-09-02\u2003\u2003\u2003v0.2.4\u2003\u2003\u2003Update sourcemap format via #83.\r\n * 2013-06-10\u2003\u2003\u2003v0.2.3\u2003\u2003\u2003Add `footer` option.\r\n * 2013-05-31\u2003\u2003\u2003v0.2.2\u2003\u2003\u2003Revert #56 due to #58 until [chrome/239660](https://code.google.com/p/chromium/issues/detail?id=239660&q=sourcemappingurl&colspec=ID%20Pri%20M%20Iteration%20ReleaseBlock%20Cr%20Status%20Owner%20Summary%20OS%20Modified) [firefox/870361](https://bugzilla.mozilla.org/show_bug.cgi?id=870361) drop.\r\n * 2013-05-22\u2003\u2003\u2003v0.2.1\u2003\u2003\u2003Update uglify-js to ~2.3.5 #55 #40. Change `sourcemappingUrl` syntax #56. Disable sorting of names for consistent mangling #44. Update docs for `sourceMapRoot` #47 #25.\r\n * 2013-03-14\u2003\u2003\u2003v0.2.0\u2003\u2003\u2003No longer report gzip results by default. Support `report` option.\r\n * 2013-01-30\u2003\u2003\u2003v0.1.2\u2003\u2003\u2003Add better error reporting. Support for dynamic names of multiple sourcemaps.\r\n * 2013-02-15\u2003\u2003\u2003v0.1.1\u2003\u2003\u2003First official release for Grunt 0.4.0.\r\n * 2013-01-18\u2003\u2003\u2003v0.1.1rc6\u2003\u2003\u2003Update grunt/gruntplugin dependencies to rc6. Change in-development grunt/gruntplugin dependency versions from tilde version ranges to specific versions.\r\n * 2013-01-09\u2003\u2003\u2003v0.1.1rc5\u2003\u2003\u2003Update to work with grunt v0.4.0rc5. Switch back to `this.files` API.\r\n * 2012-11-28\u2003\u2003\u2003v0.1.0\u2003\u2003\u2003Work in progress, not officially released yet.\r\n\r\n---\r\n\r\nTask submitted by [\"Cowboy\" Ben Alman](http://benalman.com)\r\n\r\n*This file was generated on Thu Mar 21 2019 14:11:06.*"}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 14168}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 255406}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1008447}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 3200742}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 5953761}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11898872}], "dependentsCount": 542, "starsCount": 152}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 1470, "forksCount": 367, "subscribersCount": 56, "issues": {"count": 548, "openCount": 25, "distribution": {"3600": 106, "10800": 43, "32400": 41, "97200": 53, "291600": 34, "874800": 47, "2624400": 46, "7873200": 58, "23619600": 58, "70858800": 40, "212576400": 22}, "isDisabled": false}, "contributors": [{"username": "XhmikosR", "commitsCount": 51}, {"username": "jsoverson", "commitsCount": 40}, {"username": "tkellen", "commitsCount": 28}, {"username": "vladikoff", "commitsCount": 19}, {"username": "jamesplease", "commitsCount": 15}, {"username": "shama", "commitsCount": 14}, {"username": "alexlamsl", "commitsCount": 12}, {"username": "sindresorhus", "commitsCount": 12}, {"username": "cowboy", "commitsCount": 7}, {"username": "dylang", "commitsCount": 4}, {"username": "rjkip", "commitsCount": 4}, {"username": "RReverser", "commitsCount": 3}, {"username": "UltCombo", "commitsCount": 3}, {"username": "acdha", "commitsCount": 3}, {"username": "existentialism", "commitsCount": 3}, {"username": "jrhite", "commitsCount": 3}, {"username": "meschbach", "commitsCount": 3}, {"username": "ZitRos", "commitsCount": 2}, {"username": "akzhan", "commitsCount": 2}, {"username": "arty-name", "commitsCount": 2}, {"username": "cfarm", "commitsCount": 2}, {"username": "craveytrain", "commitsCount": 2}, {"username": "joeldenning", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "radkodinev", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tswaters", "commitsCount": 2}, {"username": "vohtaski", "commitsCount": 2}, {"username": "ChrisWren", "commitsCount": 1}, {"username": "PacciniBruno", "commitsCount": 1}, {"username": "Rialgar", "commitsCount": 1}, {"username": "RyanFrench", "commitsCount": 1}, {"username": "aendrew", "commitsCount": 1}, {"username": "alonisser", "commitsCount": 1}, {"username": "avdg", "commitsCount": 1}, {"username": "bobzoller", "commitsCount": 1}, {"username": "gr2m", "commitsCount": 1}, {"username": "isaacchansky", "commitsCount": 1}, {"username": "leonardosouza", "commitsCount": 1}, {"username": "omidraha", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "ramswaroop", "commitsCount": 1}, {"username": "richgilbank", "commitsCount": 1}, {"username": "saibotsivad", "commitsCount": 1}, {"username": "shahata", "commitsCount": 1}, {"username": "smithclay", "commitsCount": 1}, {"username": "tori3", "commitsCount": 1}, {"username": "vibornoff", "commitsCount": 1}, {"username": "vsn4ik", "commitsCount": 1}], "commits": [{"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 19778, "testsSize": 19726, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt-contrib-uglify.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt-contrib-uglify.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt-contrib-uglify/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt-contrib-uglify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/ybtf5vbvtenii561/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/ybtf5vbvtenii561/branch/master", "shields": "https://img.shields.io/appveyor/ci/ybtf5vbvtenii561/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/ybtf5vbvtenii561/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "jshint"], "outdatedDependencies": {"chalk": {"required": "^2.4.1", "stable": "4.1.0", "latest": "4.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 2095, "downloadsCount": 1066914, "downloadsAcceleration": 373.0128424657523, "dependentsCount": 542}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0.06689162885124056}}, "score": {"final": 0.5376655172955691, "detail": {"quality": 0.9659171759565057, "popularity": 0.42403956216275707, "maintenance": 0.2842186221475785}}}}, {"supertest": {"analyzedAt": "2020-05-04T00:42:58.930Z", "collected": {"metadata": {"name": "supertest", "scope": "unscoped", "version": "4.0.2", "description": "SuperAgent driven library for testing HTTP servers", "keywords": ["superagent", "request", "tdd", "bdd", "http", "test", "testing"], "date": "2019-03-15T13:04:21.125Z", "author": {"name": "TJ Holowaychuk"}, "publisher": {"username": "rimiti", "email": "dimitri.dobairro@dimsolution.com"}, "maintainers": [{"username": "defunctzombie", "email": "shtylman@gmail.com"}, {"username": "gjohnson", "email": "gjj391@gmail.com"}, {"username": "kof", "email": "oleg008@gmail.com"}, {"username": "mikelax", "email": "mholtzman@gmail.com"}, {"username": "rimiti", "email": "dimitri.dobairro@dimsolution.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}], "contributors": [{"name": "Dimitri DO BAIRRO", "email": "dimitri.dobairro@dimsolution.com"}], "repository": {"type": "git", "url": "git+https://github.com/visionmedia/supertest.git"}, "links": {"npm": "https://www.npmjs.com/package/supertest", "homepage": "https://github.com/visionmedia/supertest#readme", "repository": "https://github.com/visionmedia/supertest", "bugs": "https://github.com/visionmedia/supertest/issues"}, "license": "MIT", "dependencies": {"methods": "^1.1.2", "superagent": "^3.8.3"}, "devDependencies": {"body-parser": "^1.18.3", "cookie-parser": "^1.4.4", "coveralls": "^3.0.3", "eslint": "^5.15.1", "eslint-config-airbnb-base": "^13.1.0", "eslint-plugin-import": "^2.16.0", "express": "^4.16.4", "mocha": "^6.0.2", "nock": "^10.0.6", "nyc": "^13.3.0", "should": "^13.2.3"}, "releases": [{"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 2}, {"from": "2018-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 11}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 66822}, {"from": "2020-04-27T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 1229212}, {"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 5126915}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 15312082}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 27053248}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 49002647}], "dependentsCount": 540, "starsCount": 275}, "github": {"starsCount": 9871, "forksCount": 637, "subscribersCount": 112, "issues": {"count": 649, "openCount": 101, "distribution": {"3600": 58, "10800": 19, "32400": 25, "97200": 43, "291600": 34, "874800": 43, "2624400": 50, "7873200": 77, "23619600": 74, "70858800": 117, "212576400": 109}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 66}, {"username": "rimiti", "commitsCount": 58}, {"username": "mikelax", "commitsCount": 28}, {"username": "Rob--W", "commitsCount": 9}, {"username": "jtwebman", "commitsCount": 4}, {"username": "Arxisos", "commitsCount": 3}, {"username": "fengmk2", "commitsCount": 3}, {"username": "alekbarszczewski", "commitsCount": 2}, {"username": "andyburke", "commitsCount": 2}, {"username": "dougwilson", "commitsCount": 2}, {"username": "drewish", "commitsCount": 2}, {"username": "eldargab", "commitsCount": 2}, {"username": "mmerkes", "commitsCount": 2}, {"username": "morganherlocker", "commitsCount": 2}, {"username": "oprogramador", "commitsCount": 2}, {"username": "ozzywalsh", "commitsCount": 2}, {"username": "vesln", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "KrisSiegel", "commitsCount": 1}, {"username": "MugeSo", "commitsCount": 1}, {"username": "Otto-AA", "commitsCount": 1}, {"username": "adjohnson916", "commitsCount": 1}, {"username": "ajouve", "commitsCount": 1}, {"username": "alphashuro", "commitsCount": 1}, {"username": "aybnetwork", "commitsCount": 1}, {"username": "benesch", "commitsCount": 1}, {"username": "brigand", "commitsCount": 1}, {"username": "calebcase", "commitsCount": 1}, {"username": "dalyhabit", "commitsCount": 1}, {"username": "elliotf", "commitsCount": 1}, {"username": "esco", "commitsCount": 1}, {"username": "fullstackmommy", "commitsCount": 1}, {"username": "hunterloftis", "commitsCount": 1}, {"username": "invernizzie", "commitsCount": 1}, {"username": "jamielinux", "commitsCount": 1}, {"username": "jeffkole", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "kevinawoo", "commitsCount": 1}, {"username": "kompot", "commitsCount": 1}, {"username": "kuychaco", "commitsCount": 1}, {"username": "mchapman", "commitsCount": 1}, {"username": "petejkim", "commitsCount": 1}, {"username": "pgherveou", "commitsCount": 1}, {"username": "pranavraja", "commitsCount": 1}, {"username": "ranzwertig", "commitsCount": 1}, {"username": "rpunkfu", "commitsCount": 1}, {"username": "rubendg", "commitsCount": 1}, {"username": "saintedlama", "commitsCount": 1}, {"username": "santanu-biswas", "commitsCount": 1}, {"username": "seangarner", "commitsCount": 1}, {"username": "sjonnet19", "commitsCount": 1}, {"username": "swang", "commitsCount": 1}, {"username": "tejashah88", "commitsCount": 1}, {"username": "timruffles", "commitsCount": 1}, {"username": "toefraz", "commitsCount": 1}], "commits": [{"from": "2020-04-27T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2020-04-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2020-02-04T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-11-06T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 0}, {"from": "2019-05-05T00:00:00.000Z", "to": "2020-05-04T00:00:00.000Z", "count": 7}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 39508, "hasNpmIgnore": true}, "linters": ["editorconfig", "eslint"], "coverage": 0.97, "outdatedDependencies": {"superagent": {"required": "^3.8.3", "stable": "5.2.2", "latest": "5.2.2"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9954999999999999, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 10950, "downloadsCount": 5104027.333333333, "downloadsAcceleration": 13171.33352359209, "dependentsCount": 540}, "maintenance": {"releasesFrequency": 0.2342465753424658, "commitsFrequency": 0.08054794520547946, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6154162651985321, "detail": {"quality": 0.8190481428648722, "popularity": 0.6020864990207794, "maintenance": 0.4542044219479934}}}}, {"typedoc": {"analyzedAt": "2020-05-17T03:53:22.816Z", "collected": {"metadata": {"name": "typedoc", "scope": "unscoped", "version": "0.17.7", "description": "Create api documentation for TypeScript projects.", "keywords": ["typescript", "documentation", "generator"], "date": "2020-05-17T03:50:07.955Z", "publisher": {"username": "gerrit0", "email": "gerrit@gerritbirkeland.com"}, "maintainers": [{"username": "aciccarello", "email": "a3chic9@gmail.com"}, {"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "gerrit0", "email": "gerrit@gerritbirkeland.com"}, {"username": "sebastian-lenz", "email": "npm@sebastian-lenz.de"}], "repository": {"type": "git", "url": "git://github.com/TypeStrong/TypeDoc.git"}, "links": {"npm": "https://www.npmjs.com/package/typedoc", "homepage": "https://typedoc.org", "repository": "https://github.com/TypeStrong/TypeDoc", "bugs": "https://github.com/TypeStrong/TypeDoc/issues"}, "license": "Apache-2.0", "dependencies": {"fs-extra": "^8.1.0", "handlebars": "^4.7.6", "highlight.js": "^10.0.0", "lodash": "^4.17.15", "lunr": "^2.3.8", "marked": "1.0.0", "minimatch": "^3.0.0", "progress": "^2.0.3", "shelljs": "^0.8.4", "typedoc-default-themes": "^0.10.1"}, "devDependencies": {"@types/fs-extra": "^8.1.0", "@types/lodash": "^4.14.150", "@types/lunr": "^2.3.3", "@types/marked": "^0.7.4", "@types/minimatch": "3.0.3", "@types/mocha": "^7.0.2", "@types/mockery": "^1.4.29", "@types/node": "^13.13.2", "@types/shelljs": "^0.8.7", "mocha": "^7.1.1", "mockery": "^2.1.0", "nyc": "15.0.1", "tslint": "^5.20.1", "typescript": "^3.8.3"}, "peerDependencies": {"typescript": ">=3.8.3"}, "releases": [{"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 2}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 8}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 38}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 41}, {"from": "2018-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 48}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# TypeDoc\n\n> Documentation generator for TypeScript projects.\n\n[![Build Status](https://travis-ci.org/TypeStrong/typedoc.svg?branch=master)](https://travis-ci.org/TypeStrong/typedoc)\n[![NPM Version](https://badge.fury.io/js/typedoc.svg)](https://badge.fury.io/js/typedoc)\n[![Chat on Gitter](https://badges.gitter.im/TypeStrong/typedoc.svg)](https://gitter.im/TypeStrong/typedoc?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## Documentation\nVisit our website for more complete documentation and example API documentation:<br>\n[https://typedoc.org](https://typedoc.org).\n\nThere you can find an [installation guide](https://typedoc.org/guides/installation/) explaining\nhow to use typedoc from the cli, webpack, grunt, or gulp. There are additional guides explaining\nhow to extend typedoc using [plugins](https://typedoc.org/guides/plugins/) and\n[themes](https://typedoc.org/guides/themes/).\n\n## Installation\n\nTypeDoc runs on Node.js and is available as an NPM package. You can install TypeDoc\nin your project's directory as usual:\n\n```bash\n$ npm install typedoc --save-dev\n```\n\nLike the TypeScript compiler, TypeDoc comes with a binary that can be called from anywhere\nif you install TypeDoc as a global module. The name of the executable is ``typedoc``.\n\n```bash\n$ npm install typedoc --global\n$ typedoc\n```\n\n## Usage\n\n### Shell\n\nTypeDoc accepts most of the command line arguments that the TypeScript compiler accepts. One major\ndifference is the fact that one may pass an entire directory instead of individual files to the documentation\ngenerator. So in order to create a documentation for an entire project you simply type:\n\n```bash\n$ typedoc --out path/to/documentation/ path/to/typescript/project/\n```\n\n### Arguments\n\nFor a complete list of the command line arguments run `typedoc --help` or visit [our website](https://typedoc.org/guides/options/).\n\n* `--out <path/to/documentation/>`<br>\n  Specifies the location the documentation should be written to. Defaults to `./docs`\n* `--mode <file|modules>`<br>\n  Specifies the output mode the project is used to be compiled with.\n* `--options`<br>\n  Specify a json option file that should be loaded. If not specified TypeDoc will look for 'typedoc.json' in the current directory.\n* `--json <path/to/output.json>`<br>\n  Specifies the location and file name a json file describing the project is written to. When specified no documentation will be generated.\n* `--ignoreCompilerErrors`<br>\n  Allows TypeDoc to still generate documentation pages even after the compiler has returned errors.\n\n#### Source file handling\n* `--exclude <pattern>`<br>\n  Exclude files by the given pattern when a path is provided as source. Supports standard minimatch patterns (see [#170](https://github.com/TypeStrong/typedoc/issues/170))\n* `--includeDeclarations`<br>\n  Turn on parsing of .d.ts declaration files.\n* `--excludeExternals`<br>\n  Do not document external files, highly recommended if turning on `--includeDeclarations`.\n* `--excludeNotDocumented`<br>\n  Do not include the code symbols, that don't have doc comments. This option is useful,\n  if you want to document only small part of your symbols and do not show the remaining ones in the documentation.\n\n#### TypeScript compiler\n* `--tsconfig <path/to/tsconfig.json>`<br>\n  Specify a typescript config file that should be loaded. If not specified TypeDoc will look for 'tsconfig.json' in the current directory.\n\n#### Theming\n* `--theme <default|minimal|path/to/theme>`<br>\n  Specify the path to the theme that should be used.\n* `--name <Documentation title>`<br>\n  Set the name of the project that will be used in the header of the template.\n* `--readme <path/to/readme|none>`<br>\n  Path to the readme file that should be displayed on the index page. Pass `none` to disable the index page\n  and start the documentation on the globals page.\n\n#### Miscellaneous\n* `--listInvalidSymbolLinks`<br>\n  Display the list of links that don't point to actual code symbols.\n* `--version`<br>\n  Display the version number of TypeDoc.\n* `--help`<br>\n  Display all TypeDoc options.\n\n## Contributing\n\nThis project is maintained by a community of developers. Contributions are welcome and appreciated.\nYou can find TypeDoc on GitHub; feel free to start an issue or create a pull requests:<br>\n[https://github.com/TypeStrong/typedoc](https://github.com/TypeStrong/typedoc)\n\nFor more information, read the [contribution guide](https://github.com/TypeStrong/typedoc/blob/master/CONTRIBUTING.md).\n\n\n## License\n\nCopyright (c) 2015 [Sebastian Lenz](https://typedoc.org).<br>\nCopyright (c) 2016-2020 [TypeDoc Contributors](https://github.com/TypeStrong/typedoc/graphs/contributors).<br>\nLicensed under the Apache License 2.0."}, "npm": {"downloads": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 10752}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 249001}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 1048735}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 3036574}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 5162584}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 9039383}], "dependentsCount": 242, "starsCount": 16}, "github": {"homepage": "https://typedoc.org", "starsCount": 3759, "forksCount": 471, "subscribersCount": 47, "issues": {"count": 1305, "openCount": 238, "distribution": {"3600": 85, "10800": 55, "32400": 68, "97200": 97, "291600": 89, "874800": 120, "2624400": 142, "7873200": 175, "23619600": 129, "70858800": 172, "212576400": 173}, "isDisabled": false}, "contributors": [{"username": "sebastian-lenz", "commitsCount": 471}, {"username": "Gerrit0", "commitsCount": 172}, {"username": "blakeembrey", "commitsCount": 48}, {"username": "aciccarello", "commitsCount": 34}, {"username": "Tokimon", "commitsCount": 14}, {"username": "greenkeeper[bot]", "commitsCount": 10}, {"username": "greenkeeperio-bot", "commitsCount": 9}, {"username": "shlomiassaf", "commitsCount": 8}, {"username": "PissedCapslock", "commitsCount": 6}, {"username": "NaridaL", "commitsCount": 5}, {"username": "alalonde", "commitsCount": 5}, {"username": "jonchardy", "commitsCount": 5}, {"username": "makana", "commitsCount": 5}, {"username": "nicknisi", "commitsCount": 5}, {"username": "SamuraiJack", "commitsCount": 4}, {"username": "awerlang", "commitsCount": 4}, {"username": "christopherthielen", "commitsCount": 4}, {"username": "cspotcode", "commitsCount": 4}, {"username": "jason0x43", "commitsCount": 4}, {"username": "krisztianb", "commitsCount": 4}, {"username": "lddubeau", "commitsCount": 4}, {"username": "socsieng", "commitsCount": 4}, {"username": "Lhoerion", "commitsCount": 3}, {"username": "cpriest", "commitsCount": 3}, {"username": "jiayihu", "commitsCount": 3}, {"username": "kamranayub", "commitsCount": 3}, {"username": "Bartvds", "commitsCount": 2}, {"username": "MichaReiser", "commitsCount": 2}, {"username": "SebastiaanNijland", "commitsCount": 2}, {"username": "TobiaszCudnik", "commitsCount": 2}, {"username": "artentica", "commitsCount": 2}, {"username": "crwhite21", "commitsCount": 2}, {"username": "igncp", "commitsCount": 2}, {"username": "jdanyow", "commitsCount": 2}, {"username": "just-boris", "commitsCount": 2}, {"username": "lenovouser", "commitsCount": 2}, {"username": "pascalberger", "commitsCount": 2}, {"username": "pmconne", "commitsCount": 2}, {"username": "thecjharries", "commitsCount": 2}, {"username": "tomdale", "commitsCount": 2}, {"username": "tsvetomir", "commitsCount": 2}, {"username": "9oelM", "commitsCount": 1}, {"username": "ALiangLiang", "commitsCount": 1}, {"username": "AdamVig", "commitsCount": 1}, {"username": "Aleksandyr", "commitsCount": 1}, {"username": "Beraliv", "commitsCount": 1}, {"username": "Houfeng", "commitsCount": 1}, {"username": "KSXGitHub", "commitsCount": 1}, {"username": "Roaders", "commitsCount": 1}, {"username": "StephanBijzitter", "commitsCount": 1}, {"username": "Towerism", "commitsCount": 1}, {"username": "Wenzil", "commitsCount": 1}, {"username": "WilliamJns", "commitsCount": 1}, {"username": "adidahiya", "commitsCount": 1}, {"username": "ahocevar", "commitsCount": 1}, {"username": "alexandercerutti", "commitsCount": 1}, {"username": "antongolub", "commitsCount": 1}, {"username": "arusahni", "commitsCount": 1}, {"username": "bendtherules", "commitsCount": 1}, {"username": "bingenito", "commitsCount": 1}, {"username": "bwasty", "commitsCount": 1}, {"username": "chrsgrffth", "commitsCount": 1}, {"username": "colatkinson", "commitsCount": 1}, {"username": "dokmic", "commitsCount": 1}, {"username": "dustinblackman", "commitsCount": 1}, {"username": "eminence", "commitsCount": 1}, {"username": "epzilla", "commitsCount": 1}, {"username": "fc", "commitsCount": 1}, {"username": "forivall", "commitsCount": 1}, {"username": "garaboncias", "commitsCount": 1}, {"username": "grncdr", "commitsCount": 1}, {"username": "haraldF", "commitsCount": 1}, {"username": "harunurhan", "commitsCount": 1}, {"username": "icdt-ihudson", "commitsCount": 1}, {"username": "ice1080", "commitsCount": 1}, {"username": "igandrews", "commitsCount": 1}, {"username": "kevineaton", "commitsCount": 1}, {"username": "meowtec", "commitsCount": 1}, {"username": "mrkurt", "commitsCount": 1}, {"username": "natevoci", "commitsCount": 1}, {"username": "nelnog", "commitsCount": 1}, {"username": "ovasquez", "commitsCount": 1}, {"username": "pat841", "commitsCount": 1}, {"username": "pragone", "commitsCount": 1}, {"username": "raymondfeng", "commitsCount": 1}, {"username": "rbuckton", "commitsCount": 1}, {"username": "rinick", "commitsCount": 1}, {"username": "sberthier", "commitsCount": 1}, {"username": "sebavan", "commitsCount": 1}, {"username": "sgrishchenko", "commitsCount": 1}, {"username": "shabbir-genetech", "commitsCount": 1}, {"username": "simllll", "commitsCount": 1}, {"username": "spiltcoffee", "commitsCount": 1}, {"username": "stoically", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "styu", "commitsCount": 1}, {"username": "tomratcliffe", "commitsCount": 1}, {"username": "tusharmath", "commitsCount": 1}, {"username": "zdrawku", "commitsCount": 1}, {"username": "zslayton", "commitsCount": 1}], "commits": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 6}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 18}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 53}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 148}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 197}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4722, "testsSize": 1568701}, "badges": [{"urls": {"original": "https://travis-ci.org/TypeStrong/typedoc.svg?branch=master", "service": "https://api.travis-ci.org/TypeStrong/typedoc.svg?branch=master", "shields": "https://img.shields.io/travis/TypeStrong/typedoc/master.svg", "content": "https://img.shields.io/travis/TypeStrong/typedoc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://badges.gitter.im/TypeStrong/typedoc.svg", "service": "https://badges.gitter.im/TypeStrong/typedoc.svg", "shields": "https://img.shields.io/gitter/room/TypeStrong/typedoc.svg", "content": "https://img.shields.io/gitter/room/TypeStrong/typedoc.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "tslint"], "outdatedDependencies": {"fs-extra": {"required": "^8.1.0", "stable": "9.0.0", "latest": "9.0.0"}, "marked": {"required": "1.0.0", "stable": "1.1.0", "latest": "1.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.85, "health": 0.6, "branding": 0.7}, "popularity": {"communityInterest": 4393, "downloadsCount": 1012191.3333333334, "downloadsAcceleration": 3526.9974505327245, "dependentsCount": 242}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6467131902377158, "detail": {"quality": 0.848504219072646, "popularity": 0.4537959748073964, "maintenance": 0.6666666666666666}}}}, {"@vue/cli-plugin-eslint": {"analyzedAt": "2020-06-12T13:06:20.054Z", "collected": {"metadata": {"name": "@vue/cli-plugin-eslint", "scope": "vue", "version": "4.4.4", "description": "eslint plugin for vue-cli", "keywords": ["vue", "cli", "eslint"], "date": "2020-06-12T13:01:13.300Z", "author": {"name": "Evan You"}, "publisher": {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, "maintainers": [{"username": "akryum", "email": "guillaume.b.chau@gmail.com"}, {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}, {"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue-cli.git", "directory": "packages/@vue/cli-plugin-eslint"}, "links": {"npm": "https://www.npmjs.com/package/%40vue%2Fcli-plugin-eslint", "homepage": "https://github.com/vuejs/vue-cli/tree/dev/packages/@vue/cli-plugin-eslint#readme", "repository": "https://github.com/vuejs/vue-cli", "bugs": "https://github.com/vuejs/vue-cli/issues"}, "license": "MIT", "dependencies": {"@vue/cli-shared-utils": "^4.4.4", "eslint-loader": "^2.2.1", "globby": "^9.2.0", "inquirer": "^7.1.0", "webpack": "^4.0.0", "yorkie": "^2.0.0"}, "peerDependencies": {"@vue/cli-service": "^3.0.0 || ^4.0.0-0", "eslint": ">= 1.6.0"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 9}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 42}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 79}], "readme": "# @vue/cli-plugin-eslint\n\n> eslint plugin for vue-cli\n\n## Injected Commands\n\n- **`vue-cli-service lint`**\n\n  ```\n  Usage: vue-cli-service lint [options] [...files]\n\n  Options:\n\n    --format [formatter] specify formatter (default: codeframe)\n    --no-fix             do not fix errors\n    --max-errors         specify number of errors to make build failed (default: 0)\n    --max-warnings       specify number of warnings to make build failed (default: Infinity)\n  ```\n\n  Lints and fixes files. If no specific files are given, it lints all files in `src` and `tests`.\n\n  Other [ESLint CLI options](https://eslint.org/docs/user-guide/command-line-interface#options) are also supported.\n\n## Configuration\n\nESLint can be configured via `.eslintrc` or the `eslintConfig` field in `package.json`.\n\nLint-on-save during development with `eslint-loader` is enabled by default. It can be disabled with the `lintOnSave` option in `vue.config.js`:\n\n``` js\nmodule.exports = {\n  lintOnSave: false\n}\n```\n\nWhen set to `true`, `eslint-loader` will emit lint errors as warnings. By default, warnings are only logged to the terminal and does not fail the compilation.\n\nTo make lint errors show up in the browser overlay, you can use `lintOnSave: 'error'`. This will force `eslint-loader` to always emit errors. this also means lint errors will now cause the compilation to fail.\n\nAlternatively, you can configure the overlay to display both warnings and errors:\n\n``` js\n// vue.config.js\nmodule.exports = {\n  devServer: {\n    overlay: {\n      warnings: true,\n      errors: true\n    }\n  }\n}\n```\n\nWhen `lintOnSave` is a truthy value, `eslint-loader` will be applied in both development and production. If you want to disable `eslint-loader` during production build, you can use the following config:\n\n``` js\n// vue.config.js\nmodule.exports = {\n  lintOnSave: process.env.NODE_ENV !== 'production'\n}\n```\n\n## Installing in an Already Created Project\n\n``` sh\nvue add eslint\n```\n\n## Injected webpack-chain Rules\n\n- `config.module.rule('eslint')`\n- `config.module.rule('eslint').use('eslint-loader')`"}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 83492}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 495460}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2089578}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 5716644}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 9941253}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 16975191}], "dependentsCount": 54, "starsCount": 0}, "github": {"homepage": "https://cli.vuejs.org/", "starsCount": 25540, "forksCount": 4785, "subscribersCount": 665, "issues": {"count": 5558, "openCount": 536, "distribution": {"3600": 1483, "10800": 466, "32400": 537, "97200": 586, "291600": 496, "874800": 456, "2624400": 442, "7873200": 363, "23619600": 335, "70858800": 389, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 914}, {"username": "sodatea", "commitsCount": 726}, {"username": "Akryum", "commitsCount": 51}, {"username": "LinusBorg", "commitsCount": 32}, {"username": "Alex-Sokolov", "commitsCount": 22}, {"username": "cexbrayat", "commitsCount": 11}, {"username": "dhensche", "commitsCount": 11}, {"username": "elevatebart", "commitsCount": 11}, {"username": "jkzing", "commitsCount": 11}, {"username": "zyy7259", "commitsCount": 10}, {"username": "NataliaTepluhina", "commitsCount": 9}, {"username": "pksunkara", "commitsCount": 9}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "kazupon", "commitsCount": 8}, {"username": "Jinjiang", "commitsCount": 7}, {"username": "zigomir", "commitsCount": 7}, {"username": "zhrivodkin", "commitsCount": 6}, {"username": "arcanis", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "morrislaptop", "commitsCount": 4}, {"username": "pburdette", "commitsCount": 4}, {"username": "Haroenv", "commitsCount": 3}, {"username": "KuangPF", "commitsCount": 3}, {"username": "NoelDeMartin", "commitsCount": 3}, {"username": "Turbo87", "commitsCount": 3}, {"username": "arthurdenner", "commitsCount": 3}, {"username": "diogosalazar", "commitsCount": 3}, {"username": "ivansieder", "commitsCount": 3}, {"username": "javoski", "commitsCount": 3}, {"username": "ky-is", "commitsCount": 3}, {"username": "mactanxin", "commitsCount": 3}, {"username": "michalsnik", "commitsCount": 3}, {"username": "rigor789", "commitsCount": 3}, {"username": "sickp", "commitsCount": 3}, {"username": "ulivz", "commitsCount": 3}, {"username": "visualfanatic", "commitsCount": 3}, {"username": "DRBragg", "commitsCount": 2}, {"username": "FrankFang", "commitsCount": 2}, {"username": "Kocal", "commitsCount": 2}, {"username": "PanJiaChen", "commitsCount": 2}, {"username": "SevenOutman", "commitsCount": 2}, {"username": "TheJaredWilcurt", "commitsCount": 2}, {"username": "WilsonLiu95", "commitsCount": 2}, {"username": "YuJianrong", "commitsCount": 2}, {"username": "aberonni", "commitsCount": 2}, {"username": "betweenbrain", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "chiaweilee", "commitsCount": 2}, {"username": "chrisvfritz", "commitsCount": 2}, {"username": "clorichel", "commitsCount": 2}, {"username": "defead", "commitsCount": 2}, {"username": "hsxfjames", "commitsCount": 2}, {"username": "jamessouth", "commitsCount": 2}, {"username": "jbruni", "commitsCount": 2}, {"username": "jeneser", "commitsCount": 2}, {"username": "kidonng", "commitsCount": 2}, {"username": "ktsn", "commitsCount": 2}, {"username": "llccing", "commitsCount": 2}, {"username": "nanomad", "commitsCount": 2}, {"username": "ntnyq", "commitsCount": 2}, {"username": "phanan", "commitsCount": 2}, {"username": "remote-star", "commitsCount": 2}, {"username": "shadow-light", "commitsCount": 2}, {"username": "tkint", "commitsCount": 2}, {"username": "toBeTheLight", "commitsCount": 2}, {"username": "trickstival", "commitsCount": 2}, {"username": "troy351", "commitsCount": 2}, {"username": "whoisjorge", "commitsCount": 2}, {"username": "xiaohp", "commitsCount": 2}, {"username": "xsbchen", "commitsCount": 2}, {"username": "zrh122", "commitsCount": 2}, {"username": "374632897", "commitsCount": 1}, {"username": "Akenokoru", "commitsCount": 1}, {"username": "AlbertBrand", "commitsCount": 1}, {"username": "EzioKissshot", "commitsCount": 1}, {"username": "Rolanddoda", "commitsCount": 1}, {"username": "Timibadass", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "codeDebugTest", "commitsCount": 1}, {"username": "darrylkuhn", "commitsCount": 1}, {"username": "dtcz", "commitsCount": 1}, {"username": "epixian", "commitsCount": 1}, {"username": "fxxjdedd", "commitsCount": 1}, {"username": "godkun", "commitsCount": 1}, {"username": "gtsiolis", "commitsCount": 1}, {"username": "jaireina", "commitsCount": 1}, {"username": "janispritzkau", "commitsCount": 1}, {"username": "jinzhan", "commitsCount": 1}, {"username": "lucaswerkmeister", "commitsCount": 1}, {"username": "manico", "commitsCount": 1}, {"username": "megos", "commitsCount": 1}, {"username": "motla", "commitsCount": 1}, {"username": "qirh", "commitsCount": 1}, {"username": "simon300000", "commitsCount": 1}, {"username": "stefano-b", "commitsCount": 1}, {"username": "tommyo", "commitsCount": 1}, {"username": "yeyan1996", "commitsCount": 1}, {"username": "zapzqc", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 26}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 83}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 202}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 522}], "statuses": [{"context": "ci/circleci: cli-ui", "state": "pending"}, {"context": "ci/circleci: group-1", "state": "pending"}, {"context": "ci/circleci: group-4", "state": "pending"}, {"context": "ci/circleci: group-3", "state": "pending"}, {"context": "ci/circleci: group-2", "state": "pending"}, {"context": "ci/circleci: install", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}]}, "source": {"files": {"readmeSize": 2072, "testsSize": 16772, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg?style=shield", "service": "https://circleci.com/gh/vuejs/vue-cli/tree/dev.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue-cli/dev.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "dev"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev?svg=true", "service": "https://ci.appveyor.com/api/projects/status/rkpafdpdwie9lqx0/branch/dev", "shields": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.svg", "content": "https://img.shields.io/appveyor/ci/rkpafdpdwie9lqx0/branch/dev.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "outdatedDependencies": {"globby": {"required": "^9.2.0", "stable": "11.0.1", "latest": "11.0.1"}, "eslint-loader": {"required": "^2.2.1", "stable": "4.0.2", "latest": "4.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.4, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 31088, "downloadsCount": 1905548, "downloadsAcceleration": 7966.759531963471, "dependentsCount": 54}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6505473928119354}}, "score": {"final": 0.7874930808428157, "detail": {"quality": 0.8429901241849767, "popularity": 0.5307180754339017, "maintenance": 0.9966991919584488}}}}, {"clean-webpack-plugin": {"analyzedAt": "2020-06-08T10:35:52.497Z", "collected": {"metadata": {"name": "clean-webpack-plugin", "scope": "unscoped", "version": "3.0.0", "description": "A webpack plugin to remove/clean your build folder(s).", "keywords": ["webpack", "plugin", "clean", "node"], "date": "2019-05-30T13:40:07.602Z", "author": {"name": "John Agan", "email": "johnagan@gmail.com", "username": "johnagan"}, "publisher": {"username": "johnagan", "email": "johnagan@gmail.com"}, "maintainers": [{"username": "johnagan", "email": "johnagan@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/johnagan/clean-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/clean-webpack-plugin", "homepage": "https://github.com/johnagan/clean-webpack-plugin", "repository": "https://github.com/johnagan/clean-webpack-plugin", "bugs": "https://github.com/johnagan/clean-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"@types/webpack": "^4.4.31", "del": "^4.1.1"}, "devDependencies": {"@babel/cli": "^7.4.4", "@babel/core": "^7.4.4", "@babel/preset-env": "^7.4.4", "@babel/preset-typescript": "^7.3.3", "@chrisblossom/eslint-config": "^5.0.0", "@types/jest": "^24.0.13", "@types/node": "^12.0.2", "@types/read-pkg-up": "^3.0.1", "babel-jest": "^24.8.0", "codecov": "^3.5.0", "cross-env": "^5.2.0", "del-cli": "^1.1.0", "eslint": "^5.16.0", "execa": "^1.0.0", "husky": "^2.3.0", "jest": "^24.8.0", "lint-staged": "^8.1.7", "listr": "^0.14.3", "np": "^5.0.2", "prettier": "^1.17.1", "read-pkg-up": "^6.0.0", "semver": "^6.0.0", "temp-sandbox": "^3.0.0", "typescript": "^3.4.5", "webpack": "^4.32.0"}, "peerDependencies": {"webpack": "*"}, "releases": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2020-03-10T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2019-12-11T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2019-06-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2018-06-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Clean plugin for webpack\n\n[![npm][npm-image]][npm-url]\n[![MIT License][mit-license-image]][mit-license-url]\n[![Linux Build Status][circleci-image]][circleci-url]\n[![Windows Build Status][appveyor-image]][appveyor-url]\n[![Coveralls Status][coveralls-image]][coveralls-url]\n\n[npm-url]: https://www.npmjs.com/package/clean-webpack-plugin\n[npm-image]: https://img.shields.io/npm/v/clean-webpack-plugin.svg?label=npm%20version\n[mit-license-url]: LICENSE\n[mit-license-image]: https://camo.githubusercontent.com/d59450139b6d354f15a2252a47b457bb2cc43828/68747470733a2f2f696d672e736869656c64732e696f2f6e706d2f6c2f7365727665726c6573732e737667\n[circleci-url]: https://circleci.com/gh/johnagan/clean-webpack-plugin/tree/master\n[circleci-image]: https://img.shields.io/circleci/project/github/johnagan/clean-webpack-plugin/master.svg?label=linux%20build\n[appveyor-url]: https://ci.appveyor.com/project/johnagan/clean-webpack-plugin/branch/master\n[appveyor-image]: https://img.shields.io/appveyor/ci/johnagan/clean-webpack-plugin/master.svg?label=windows%20build\n[coveralls-url]: https://codecov.io/gh/johnagan/clean-webpack-plugin/branch/master\n[coveralls-image]: https://img.shields.io/codecov/c/github/johnagan/clean-webpack-plugin/master.svg\n\nA webpack plugin to remove/clean your build folder(s).\n\n> NOTE: Node v8+ and webpack v3+ are supported and tested.\n\n## About\n\nBy default, this plugin will remove all files inside webpack's `output.path` directory, as well as all unused webpack assets after every successful rebuild.\n\n> Coming from `v1`? Please read about [additional v2 information](https://github.com/johnagan/clean-webpack-plugin/issues/106).\n\n## Installation\n\n`npm install --save-dev clean-webpack-plugin`\n\n## Usage\n\n```js\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin');\n\nconst webpackConfig = {\n    plugins: [\n        /**\n         * All files inside webpack's output.path directory will be removed once, but the\n         * directory itself will not be. If using webpack 4+'s default configuration,\n         * everything under <PROJECT_DIR>/dist/ will be removed.\n         * Use cleanOnceBeforeBuildPatterns to override this behavior.\n         *\n         * During rebuilds, all webpack assets that are not used anymore\n         * will be removed automatically.\n         *\n         * See `Options and Defaults` for information\n         */\n        new CleanWebpackPlugin(),\n    ],\n};\n\nmodule.exports = webpackConfig;\n```\n\n## Options and Defaults (Optional)\n\n```js\nnew CleanWebpackPlugin({\n    // Simulate the removal of files\n    //\n    // default: false\n    dry: true,\n\n    // Write Logs to Console\n    // (Always enabled when dry is true)\n    //\n    // default: false\n    verbose: true,\n\n    // Automatically remove all unused webpack assets on rebuild\n    //\n    // default: true\n    cleanStaleWebpackAssets: false,\n\n    // Do not allow removal of current webpack assets\n    //\n    // default: true\n    protectWebpackAssets: false,\n\n    // **WARNING**\n    //\n    // Notes for the below options:\n    //\n    // They are unsafe...so test initially with dry: true.\n    //\n    // Relative to webpack's output.path directory.\n    // If outside of webpack's output.path directory,\n    //    use full path. path.join(process.cwd(), 'build/**/*')\n    //\n    // These options extend del's pattern matching API.\n    // See https://github.com/sindresorhus/del#patterns\n    //    for pattern matching documentation\n\n    // Removes files once prior to Webpack compilation\n    //   Not included in rebuilds (watch mode)\n    //\n    // Use !negative patterns to exclude files\n    //\n    // default: ['**/*']\n    cleanOnceBeforeBuildPatterns: ['**/*', '!static-files*'],\n    cleanOnceBeforeBuildPatterns: [], // disables cleanOnceBeforeBuildPatterns\n\n    // Removes files after every build (including watch mode) that match this pattern.\n    // Used for files that are not created directly by Webpack.\n    //\n    // Use !negative patterns to exclude files\n    //\n    // default: []\n    cleanAfterEveryBuildPatterns: ['static*.*', '!static1.js'],\n\n    // Allow clean patterns outside of process.cwd()\n    //\n    // requires dry option to be explicitly set\n    //\n    // default: false\n    dangerouslyAllowCleanPatternsOutsideProject: true,\n});\n```\n\n## Example Webpack Config\n\nThis is a modified version of [WebPack's Plugin documentation](https://webpack.js.org/concepts/plugins/) that includes the Clean Plugin.\n\n```js\nconst { CleanWebpackPlugin } = require('clean-webpack-plugin'); // installed via npm\nconst HtmlWebpackPlugin = require('html-webpack-plugin'); // installed via npm\nconst webpack = require('webpack'); // to access built-in plugins\nconst path = require('path');\n\nmodule.exports = {\n    entry: './path/to/my/entry/file.js',\n    output: {\n        /**\n         * With zero configuration,\n         *   clean-webpack-plugin will remove files inside the directory below\n         */\n        path: path.resolve(process.cwd(), 'dist'),\n    },\n    module: {\n        rules: [\n            {\n                test: /\\.(js|jsx)$/,\n                loader: 'babel-loader',\n            },\n        ],\n    },\n    plugins: [\n        new webpack.ProgressPlugin(),\n        new CleanWebpackPlugin(),\n        new HtmlWebpackPlugin({ template: './src/index.html' }),\n    ],\n};\n```"}, "npm": {"downloads": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 54248}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 1191335}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 4784837}, {"from": "2020-03-10T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 14924531}, {"from": "2019-12-11T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 26687077}, {"from": "2019-06-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 47834555}], "dependentsCount": 1545, "starsCount": 40}, "github": {"starsCount": 1649, "forksCount": 130, "subscribersCount": 20, "issues": {"count": 178, "openCount": 15, "distribution": {"3600": 16, "10800": 3, "32400": 12, "97200": 13, "291600": 16, "874800": 23, "2624400": 24, "7873200": 28, "23619600": 22, "70858800": 21, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "chrisblossom", "commitsCount": 43}, {"username": "aulisius", "commitsCount": 5}, {"username": "tylerhou", "commitsCount": 4}, {"username": "quangv", "commitsCount": 2}, {"username": "MeiKatz", "commitsCount": 1}, {"username": "SerzN1", "commitsCount": 1}, {"username": "alextreppass", "commitsCount": 1}, {"username": "artfuldev", "commitsCount": 1}, {"username": "bebraw", "commitsCount": 1}, {"username": "endiliey", "commitsCount": 1}, {"username": "gajus", "commitsCount": 1}, {"username": "hanjukim", "commitsCount": 1}, {"username": "johnagan", "commitsCount": 1}, {"username": "kevinlaw91", "commitsCount": 1}, {"username": "mhuggins", "commitsCount": 1}, {"username": "michalkrupa", "commitsCount": 1}, {"username": "mkungla", "commitsCount": 1}, {"username": "neves", "commitsCount": 1}, {"username": "tillsanders", "commitsCount": 1}, {"username": "tuures", "commitsCount": 1}, {"username": "wujunchuan", "commitsCount": 1}, {"username": "zdanowiczkonrad", "commitsCount": 1}, {"username": "zmj97", "commitsCount": 1}], "commits": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2020-03-10T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2019-12-11T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 0}, {"from": "2019-06-09T00:00:00.000Z", "to": "2020-06-08T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "ci/circleci: test-node8", "state": "success"}, {"context": "ci/circleci: test-node10", "state": "success"}, {"context": "ci/circleci: test-node12", "state": "success"}]}, "source": {"files": {"readmeSize": 5276, "testsSize": 39901}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/clean-webpack-plugin.svg?label=npm%20version", "shields": "https://img.shields.io/npm/v/clean-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/clean-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/johnagan/clean-webpack-plugin/master.svg?label=linux%20build", "service": "https://circleci.com/gh/johnagan/clean-webpack-plugin/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/johnagan/clean-webpack-plugin/master.svg", "content": "https://img.shields.io/circleci/project/github/johnagan/clean-webpack-plugin/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/johnagan/clean-webpack-plugin/master.svg?label=windows%20build", "service": "https://ci.appveyor.com/api/projects/status/johnagan/clean-webpack-plugin/branch/master", "shields": "https://img.shields.io/appveyor/ci/johnagan/clean-webpack-plugin/master.svg", "content": "https://img.shields.io/appveyor/ci/johnagan/clean-webpack-plugin/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/johnagan/clean-webpack-plugin/master.svg", "service": "https://codecov.io/github/johnagan/clean-webpack-plugin/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/johnagan/clean-webpack-plugin/master.svg", "content": "https://img.shields.io/codecov/c/github/johnagan/clean-webpack-plugin/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98, "outdatedDependencies": {"del": {"required": "^4.1.1", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.997, "health": 0.75, "branding": 0.6}, "popularity": {"communityInterest": 1862, "downloadsCount": 4974843.666666667, "downloadsAcceleration": 11412.238717656015, "dependentsCount": 1545}, "maintenance": {"releasesFrequency": 0.0863013698630137, "commitsFrequency": 0.011506849315068493, "openIssues": 1, "issuesDistribution": 0.36407710133285087}}, "score": {"final": 0.6857293480393523, "detail": {"quality": 0.9799362984257647, "popularity": 0.5662998853824891, "maintenance": 0.5529814246507192}}}}, {"gulp-sourcemaps": {"analyzedAt": "2020-06-16T10:57:57.996Z", "collected": {"metadata": {"name": "gulp-sourcemaps", "scope": "unscoped", "version": "2.6.5", "description": "Source map support for Gulp.js", "keywords": ["gulpplugin", "gulp", "source maps", "sourcemaps"], "date": "2019-02-19T03:46:23.019Z", "author": {"name": "Florian Reiterer", "email": "me@florianreiterer.com"}, "publisher": {"username": "nmccready", "email": "nemtcan@gmail.com"}, "maintainers": [{"username": "floridoo", "email": "florian.reiterer@gmail.com"}, {"username": "nmccready", "email": "nemtcan@gmail.com"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/gulp-sourcemaps/gulp-sourcemaps.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-sourcemaps", "homepage": "http://github.com/gulp-sourcemaps/gulp-sourcemaps", "repository": "https://github.com/gulp-sourcemaps/gulp-sourcemaps", "bugs": "https://github.com/gulp-sourcemaps/gulp-sourcemaps/issues"}, "license": "ISC", "dependencies": {"@gulp-sourcemaps/identity-map": "1.X", "@gulp-sourcemaps/map-sources": "1.X", "acorn": "5.X", "convert-source-map": "1.X", "css": "2.X", "debug-fabulous": "1.X", "detect-newline": "2.X", "graceful-fs": "4.X", "source-map": "~0.6.0", "strip-bom-string": "1.X", "through2": "2.X"}, "devDependencies": {"bootstrap": "3.3.7", "coveralls": "2.X", "faucet": "0.0.X", "gulp": "3.X", "gulp-concat": "2.X", "gulp-if": "2.X", "gulp-less": "3.X", "gulp-load-plugins": "1.X", "hook-std": "0.2.X", "http-server": "0.10.X", "istanbul": "0.X", "jshint": "2.X", "lodash": "4.X", "mississippi": "1.X", "object-assign": "4.X", "tape": "4.X", "vinyl": "2.X", "yargs": "7.X"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "## gulp-sourcemaps  [![NPM version][npm-image]][npm-url] [![build status][travis-image]][travis-url] [![Test coverage][coveralls-image]][coveralls-url]\n\n### Branching\n\n__2.X now supports node 0.10+ due to switching out a dependency.__\n\n### Usage\n\n#### Write inline source maps\nInline source maps are embedded in the source file.\n\nExample:\n```javascript\nvar gulp = require('gulp');\nvar plugin1 = require('gulp-plugin1');\nvar plugin2 = require('gulp-plugin2');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('dist'));\n});\n```\n\nAll plugins between `sourcemaps.init()` and `sourcemaps.write()` need to have support for `gulp-sourcemaps`. You can find a list of such plugins in the [wiki](https://github.com/gulp-sourcemaps/gulp-sourcemaps/wiki/Plugins-with-gulp-sourcemaps-support).\n\n\n#### Write external source map files\n\nTo write external source map files, pass a path relative to the destination to `sourcemaps.write()`.\n\nExample:\n```javascript\nvar gulp = require('gulp');\nvar plugin1 = require('gulp-plugin1');\nvar plugin2 = require('gulp-plugin2');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write('../maps'))\n    .pipe(gulp.dest('dist'));\n});\n```\n\n#### Load existing source maps\n\nTo load existing source maps, pass the option `loadMaps: true` to `sourcemaps.init()`.\n\nExample:\n```javascript\nvar gulp = require('gulp');\nvar plugin1 = require('gulp-plugin1');\nvar plugin2 = require('gulp-plugin2');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init({loadMaps: true}))\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('dist'));\n});\n```\n\n#### Handle large files\n\nTo handle large files, pass the option `largeFile: true` to `sourcemaps.init()`.\n\nExample:\n```javascript\nvar gulp = require('gulp');\nvar plugin1 = require('gulp-plugin1');\nvar plugin2 = require('gulp-plugin2');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init({largeFile: true}))\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('dist'));\n});\n```\n\n#### Handle source files from different directories\n\nUse the `base` option on `gulp.src` to make sure all files are relative to a common base directory.\n\nExample:\n```javascript\nvar gulp = require('gulp');\nvar plugin1 = require('gulp-plugin1');\nvar plugin2 = require('gulp-plugin2');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\ngulp.src(['src/test.js', 'src/testdir/test2.js'], { base: 'src' })\n    .pipe(sourcemaps.init())\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write('../maps'))\n    .pipe(gulp.dest('dist'));\n});\n```\n\n#### Alter `sources` property on sourcemaps\n\nThe exported `mapSources` method gives full control over the source paths. It takes a function that is called for every source and receives the default source path as a parameter and the original vinyl file.\n\nExample:\n```javascript\ngulp.task('javascript', function() {\n  var stream = gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      .pipe(plugin1())\n      .pipe(plugin2())\n      // be careful with the sources returned otherwise contents might not be loaded properly\n      .pipe(sourcemaps.mapSources(function(sourcePath, file) {\n        // source paths are prefixed with '../src/'\n        return '../src/' + sourcePath;\n      }))\n    .pipe(sourcemaps.write('../maps')\n    .pipe(gulp.dest('public/scripts'));\n});\n```\n\n#### Generate Identity Sourcemap\n\nThe exported `identityMap` method allows you to generate a full valid source map encoding no changes (slower, only for Javascript and CSS) instead of the default empty source map (no mappings, fast). __Use this option if you get missing or incorrect mappings, e.g. when debugging.__\n\nExample:\n```javascript\ngulp.task('javascript', function() {\n  var stream = gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      // An identity sourcemap will be generated at this step\n      .pipe(sourcemaps.identityMap())\n      .pipe(plugin1())\n      .pipe(plugin2())\n    .pipe(sourcemaps.write('../maps')\n    .pipe(gulp.dest('public/scripts'));\n});\n```\n\n\n### Init Options\n\n- `loadMaps`\n\n  Set to true to load existing maps for source files. Supports the following:\n    - inline source maps\n    - source map files referenced by a `sourceMappingURL=` comment\n    - source map files with the same name (plus .map) in the same directory\n\n\n- `identityMap`\n\n  __This option is deprecated. Upgrade to use our [`sourcemap.identityMap`](#generate-identity-sourcemap) API.__\n\n\n### Write Options\n\n- `addComment`\n\n  By default a comment containing / referencing the source map is added. Set this to `false` to disable the comment (e.g. if you want to load the source maps by header).\n\n  Example:\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write('../maps', {addComment: false}))\n      .pipe(gulp.dest('dist'));\n  });\n  ```\n\n- `includeContent`\n\n  By default the source maps include the source code. Pass `false` to use the original files.\n\n  Including the content is the recommended way, because it \"just works\". When setting this to `false` you have to host the source files and set the correct `sourceRoot`.\n\n- `sourceRoot`\n\n  Set the location where the source files are hosted (use this when `includeContent` is set to `false`). This is usually a URL (or an absolute URL path), not a local file system path.\n  By default the source root is '' or in case `destPath` is set, the relative path from the source map to the source base directory (this should work for many dev environments).\n  If a relative path is used (empty string or one starting with a `.`), it is interpreted as a path relative to the destination. The plugin rewrites it to a path relative to each source map.\n\n  Example:\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write({includeContent: false, sourceRoot: '/src'}))\n      .pipe(gulp.dest('dist'));\n  });\n  ```\n\n  Example (using a function):\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write({\n        includeContent: false,\n        sourceRoot: function(file) {\n          return '/src';\n        }\n       }))\n      .pipe(gulp.dest('dist'));\n  });\n  ```\n\n  Example (relative path):\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write('.', {includeContent: false, sourceRoot: '../src'}))\n      .pipe(gulp.dest('dist'));\n  });\n  ```\n  In this case for a file written to `dist/subdir/example.js`, the source map is written to `dist/subdir/example.js.map` and the sourceRoot will be `../../src` (resulting in the full source path `../../src/subdir/example.js`).\n\n- `destPath`\n\n  Set the destination path (the same you pass to `gulp.dest()`). If the source map destination path is not a sub path of the destination path, this is needed to get the correct path in the `file` property of the source map.\n  In addition, it allows to automatically set a relative `sourceRoot` if none is set explicitly.\n\n- `sourceMappingURLPrefix`\n\n  Specify a prefix to be prepended onto the source map URL when writing external source maps. Relative paths will have their leading dots stripped.\n\n  Example:\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write('../maps', {\n        sourceMappingURLPrefix: 'https://asset-host.example.com/assets'\n      }))\n      .pipe(gulp.dest('public/scripts'));\n  });\n  ```\n\n  This will result in a source mapping URL comment like `sourceMappingURL=https://asset-host.example.com/assets/maps/helloworld.js.map`.\n\n- `sourceMappingURL`\n\n  If you need full control over the source map URL you can pass a function to this option. The output of the function must be the full URL to the source map (in function of the output file).\n\n  Example:\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write('../maps', {\n        sourceMappingURL: function(file) {\n          return 'https://asset-host.example.com/' + file.relative + '.map';\n        }\n      }))\n      .pipe(gulp.dest('public/scripts'));\n  });\n  ```\n\n  This will result in a source mapping URL comment like `sourceMappingURL=https://asset-host.example.com/helloworld.js.map`.\n\n- `mapFile`\n\n  This option allows to rename the map file. It takes a function that is called for every map and receives the default map path as a parameter.\n\n  Example:\n  ```javascript\n  gulp.task('javascript', function() {\n    var stream = gulp.src('src/**/*.js')\n      .pipe(sourcemaps.init())\n        .pipe(plugin1())\n        .pipe(plugin2())\n      .pipe(sourcemaps.write('../maps', {\n        mapFile: function(mapFilePath) {\n          // source map files are named *.map instead of *.js.map\n          return mapFilePath.replace('.js.map', '.map');\n        }\n      }))\n      .pipe(gulp.dest('public/scripts'));\n  });\n  ```\n\n- `mapSources`\n\n  __This option is deprecated. Upgrade to use our [`sourcemap.mapSources`](#alter-sources-property-on-sourcemaps) API.__\n\n- `charset`\n\n  Sets the charset for inline source maps. Default: `utf8`\n\n- `clone`\n\n  Clones the original file for creation of the map file. Could be important if file history is important. See [file.clone()](https://github.com/gulpjs/vinyl#filecloneoptions) for possible options. Default: `{deep:false, contents:false}`\n\n### Plugin developers only:\n\n- **How to add source map support to plugins**\n\n  - Generate a source map for the transformation the plugin is applying\n  - **Important**: Make sure the paths in the generated source map (`file` and `sources`) are relative to `file.base` (e.g. use `file.relative`).\n  - Apply this source map to the vinyl `file`. E.g. by using [vinyl-sourcemaps-apply](https://github.com/gulp-sourcemaps/vinyl-sourcemaps-apply).\n    This combines the source map of this plugin with the source maps coming from plugins further up the chain.\n  - Add your plugin to the [wiki page](https://github.com/gulp-sourcemaps/gulp-sourcemaps/wiki/Plugins-with-gulp-sourcemaps-support)\n\n  #### Example:\n\n  ```js\n  var through = require('through2');\n  var applySourceMap = require('vinyl-sourcemaps-apply');\n  var myTransform = require('myTransform');\n\n  module.exports = function(options) {\n\n    function transform(file, encoding, callback) {\n      // generate source maps if plugin source-map present\n      if (file.sourceMap) {\n        options.makeSourceMaps = true;\n      }\n\n      // do normal plugin logic\n      var result = myTransform(file.contents, options);\n      file.contents = new Buffer(result.code);\n\n      // apply source map to the chain\n      if (file.sourceMap) {\n        applySourceMap(file, result.map);\n      }\n\n      this.push(file);\n      callback();\n    }\n\n    return through.obj(transform);\n  };\n  ```\n\n  - **Verify sourcemaps are working**\n\n    See example below or refer to [test/write.js](./test/write.js)\n\n  #### Example:\n  ```js\n  var stream = plugin();\n  var init = sourcemaps.init();\n  var write = sourcemaps.write();\n\n  init.pipe(stream).pipe(write);\n\n  write.on('data', function (file) {\n    assert(...);\n    cb();\n  });\n\n  init.write(new gutil.File(...));\n  init.end();\n  ```\n\n### Debugging\n\nAll debugging output relies on [visionmedia/debug](https://github.com/visionmedia/debug). Follow the directions to set the\nenvironment variable `$DEBUG`.\n\nFor a few examples of debug you could use:\n\n```sh\n  DEBUG='gulp-sourcemaps:*' #everything\n  DEBUG='gulp-sourcemaps:init' #init/index.js\n  DEBUG='gulp-sourcemaps:init:*' #init/index.internals.js\n  DEBUG='gulp-sourcemaps:write:' #write/index.js\n  DEBUG='gulp-sourcemaps:write:*' #write/index.internals.js\n  DEBUG='gulp-sourcemaps:write:,gulp-sourcemaps:init:**' #write/index.internals.js and init/index.internals.js\n```\n\n[npm-image]: https://img.shields.io/npm/v/gulp-sourcemaps.svg\n[npm-url]: https://www.npmjs.com/package/gulp-sourcemaps\n[travis-image]: https://img.shields.io/travis/gulp-sourcemaps/gulp-sourcemaps.svg\n[travis-url]: https://travis-ci.org/gulp-sourcemaps/gulp-sourcemaps\n[coveralls-image]: https://img.shields.io/coveralls/gulp-sourcemaps/gulp-sourcemaps.svg\n[coveralls-url]: https://coveralls.io/r/gulp-sourcemaps/gulp-sourcemaps?branch=master"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 155852}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 848108}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 3537896}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 11011919}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 21307747}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 45151607}], "dependentsCount": 1462, "starsCount": 308}, "github": {"starsCount": 1055, "forksCount": 119, "subscribersCount": 23, "issues": {"count": 376, "openCount": 16, "distribution": {"3600": 49, "10800": 24, "32400": 25, "97200": 38, "291600": 28, "874800": 38, "2624400": 38, "7873200": 43, "23619600": 47, "70858800": 37, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "floridoo", "commitsCount": 77}, {"username": "nmccready", "commitsCount": 70}, {"username": "phated", "commitsCount": 15}, {"username": "ogvolkov", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 6}, {"username": "jclem", "commitsCount": 2}, {"username": "oroce", "commitsCount": 2}, {"username": "rogierschouten", "commitsCount": 2}, {"username": "AssassinsMod", "commitsCount": 1}, {"username": "KennethSundqvist", "commitsCount": 1}, {"username": "TerryMooreII", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "asgoth", "commitsCount": 1}, {"username": "bolasblack", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "contra", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "faergeek", "commitsCount": 1}, {"username": "gormac", "commitsCount": 1}, {"username": "jon-hall", "commitsCount": 1}, {"username": "jordansexton", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "kevinsimper", "commitsCount": 1}, {"username": "sambou", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 13306, "testsSize": 58188}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/gulp-sourcemaps.svg", "shields": "https://img.shields.io/npm/v/gulp-sourcemaps.svg", "content": "https://img.shields.io/npm/v/gulp-sourcemaps.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/gulp-sourcemaps/gulp-sourcemaps.svg", "service": "https://api.travis-ci.org/gulp-sourcemaps/gulp-sourcemaps.svg", "shields": "https://img.shields.io/travis/gulp-sourcemaps/gulp-sourcemaps.svg", "content": "https://img.shields.io/travis/gulp-sourcemaps/gulp-sourcemaps.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulp-sourcemaps/gulp-sourcemaps.svg", "service": "https://coveralls.io/repos/gulp-sourcemaps/gulp-sourcemaps/badge.svg", "shields": "https://img.shields.io/coveralls/gulp-sourcemaps/gulp-sourcemaps.svg", "content": "https://img.shields.io/coveralls/gulp-sourcemaps/gulp-sourcemaps.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "jshint"], "coverage": 0.98, "outdatedDependencies": {"detect-newline": {"required": "2.X", "stable": "3.1.0", "latest": "3.1.0"}, "@gulp-sourcemaps/identity-map": {"required": "1.X", "stable": "2.0.1", "latest": "2.0.1"}, "debug-fabulous": {"required": "1.X", "stable": "2.0.1", "latest": "2.0.1"}, "through2": {"required": "2.X", "stable": "3.0.1", "latest": "3.0.1"}, "source-map": {"required": "~0.6.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "acorn": {"required": "5.X", "stable": "7.3.1", "latest": "7.3.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.997, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 1530, "downloadsCount": 3670639.6666666665, "downloadsAcceleration": -2774.95671613394, "dependentsCount": 1462}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.06400684931506849, "openIssues": 1, "issuesDistribution": 0.14394989203873843}}, "score": {"final": 0.5771428402218101, "detail": {"quality": 0.9271150425855713, "popularity": 0.46489095486370546, "maintenance": 0.38941855212526233}}}}, {"gulp-mocha": {"analyzedAt": "2020-06-13T22:51:22.932Z", "collected": {"metadata": {"name": "gulp-mocha", "scope": "unscoped", "version": "7.0.2", "description": "Run Mocha tests", "keywords": ["gulpplugin", "mocha", "test", "testing", "unit", "framework", "runner", "tdd", "bdd", "qunit", "spec", "tap"], "date": "2019-10-04T08:16:56.993Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/gulp-mocha.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-mocha", "homepage": "https://github.com/sindresorhus/gulp-mocha#readme", "repository": "https://github.com/sindresorhus/gulp-mocha", "bugs": "https://github.com/sindresorhus/gulp-mocha/issues"}, "license": "MIT", "dependencies": {"dargs": "^7.0.0", "execa": "^2.0.4", "mocha": "^6.2.0", "plugin-error": "^1.0.1", "supports-color": "^7.0.0", "through2": "^3.0.1"}, "devDependencies": {"ava": "^2.3.0", "gulp": "^4.0.2", "p-event": "^4.1.0", "vinyl": "^2.1.0", "xo": "^0.24.0"}, "peerDependencies": {"gulp": ">=4"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gulp-mocha [![Build Status](https://travis-ci.org/sindresorhus/gulp-mocha.svg?branch=master)](https://travis-ci.org/sindresorhus/gulp-mocha)\n\n> Run [Mocha](https://github.com/mochajs/mocha) tests\n\n*Keep in mind that this is just a thin wrapper around Mocha and your issue is most likely with Mocha.*\n\n**[Maintainer needed](https://github.com/sindresorhus/gulp-mocha/issues/128)**\n\n\n## Install\n\n```\n$ npm install --save-dev gulp-mocha\n```\n\n\n## Usage\n\n```js\nconst gulp = require('gulp');\nconst mocha = require('gulp-mocha');\n\nexports.default = () => (\n\tgulp.src('test.js', {read: false})\n\t\t// `gulp-mocha` needs filepaths so you can't have any plugins before it\n\t\t.pipe(mocha({reporter: 'nyan'}))\n);\n```\n\n\n## API\n\n### mocha(options?)\n\n#### options\n\nType: `object`\n\nOptions are passed directly to the `mocha` binary, so you can use any its [command-line options](http://mochajs.org/#usage) in a camelCased form. Arrays and key/value objects are correctly converted to the comma separated list format Mocha expects. Listed below are some of the more commonly used options:\n\n##### ui\n\nType: `string`<br>\nDefault: `bdd`<br>\nValues: `bdd` `tdd` `qunit` `exports`\n\nInterface to use.\n\n##### reporter\n\nType: `string`<br>\nDefault: `spec`\nValues: [Reporters](https://github.com/mochajs/mocha/tree/master/lib/reporters)\n\nReporter that will be used.\n\nThis option can also be used to utilize third-party reporters. For example, if you `npm install mocha-lcov-reporter` you can then do use `mocha-lcov-reporter` as value.\n\n##### reporterOptions\n\nType: `object`<br>\nExample: `{reportFilename: 'index.html'}`\n\nReporter specific options.\n\n##### globals\n\nType: `string[]`\n\nList of accepted global variable names, example `['YUI']`. Accepts wildcards to match multiple global variables, e.g. `['gulp*']` or even `['*']`. See [Mocha globals option](http://mochajs.org/#globals-option).\n\n##### timeout\n\nType: `number`<br>\nDefault: `2000`\n\nTest-case timeout in milliseconds.\n\n##### bail\n\nType: `boolean`<br>\nDefault: `false`\n\nBail on the first test failure.\n\n##### checkLeaks\n\nType: `boolean`<br>\nDefault: `false`\n\nCheck for global variable leaks.\n\n##### grep\n\nType: `string`\n\nOnly run tests matching the given pattern which is internally compiled to a RegExp.\n\n##### require\n\nType: `string[]`\n\nRequire custom modules before tests are run.\n\n##### compilers\n\nType: `string`<br>\nExample: `js:babel-core/register`\n\nSpecify a compiler.\n\n\n## FAQ\n\n### Test suite not exiting\n\nIf your test suite is not exiting it might be because you still have a lingering callback, most often caused by an open database connection. You should close this connection or do the following:\n\n```js\nexports.default = () => (\n\tgulp.src('test.js')\n\t\t.pipe(mocha())\n\t\t.once('error', err => {\n\t\t\tconsole.error(err);\n\t\t\tprocess.exit(1);\n\t\t})\n\t\t.once('end', () => {\n\t\t\tprocess.exit();\n\t\t})\n);\n```\n\nOr you might just need to pass the `exit` option:\n\n```js\nexports.test = () => (\n\tgulp.src(['test/**/*.js'], {read: false})\n\t\t.pipe(mocha({reporter: 'list', exit: true}))\n\t\t.on('error', console.error)\n);\n```"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 18290}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 101686}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 451583}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1426103}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2838873}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6193963}], "dependentsCount": 304, "starsCount": 49}, "github": {"starsCount": 371, "forksCount": 83, "subscribersCount": 17, "issues": {"count": 199, "openCount": 11, "distribution": {"3600": 42, "10800": 14, "32400": 17, "97200": 19, "291600": 12, "874800": 10, "2624400": 14, "7873200": 22, "23619600": 15, "70858800": 22, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 80}, {"username": "floatdrop", "commitsCount": 6}, {"username": "johanblumenberg", "commitsCount": 3}, {"username": "davychiu", "commitsCount": 2}, {"username": "kevva", "commitsCount": 2}, {"username": "Thomasdezeeuw", "commitsCount": 1}, {"username": "Zolmeister", "commitsCount": 1}, {"username": "abalmos", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alexgorbatchev", "commitsCount": 1}, {"username": "anru", "commitsCount": 1}, {"username": "buildmaster", "commitsCount": 1}, {"username": "coaxial", "commitsCount": 1}, {"username": "demisx", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "dylanb", "commitsCount": 1}, {"username": "emohedano", "commitsCount": 1}, {"username": "gregberge", "commitsCount": 1}, {"username": "hooddanielc", "commitsCount": 1}, {"username": "jlenoble", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "kpdecker", "commitsCount": 1}, {"username": "mamont", "commitsCount": 1}, {"username": "marneborn", "commitsCount": 1}, {"username": "mathbruyen", "commitsCount": 1}, {"username": "mayeaux", "commitsCount": 1}, {"username": "mike-spainhower", "commitsCount": 1}, {"username": "mikelax", "commitsCount": 1}, {"username": "milang", "commitsCount": 1}, {"username": "miparnisari", "commitsCount": 1}, {"username": "morenoh149", "commitsCount": 1}, {"username": "rjstires", "commitsCount": 1}, {"username": "rluba", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "soboko", "commitsCount": 1}, {"username": "spacem", "commitsCount": 1}, {"username": "spiralx", "commitsCount": 1}, {"username": "stillesjo", "commitsCount": 1}, {"username": "wernight", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3050, "testsSize": 2279}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/gulp-mocha.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/gulp-mocha.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/gulp-mocha/master.svg", "content": "https://img.shields.io/travis/sindresorhus/gulp-mocha/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"execa": {"required": "^2.0.4", "stable": "4.0.2", "latest": "4.0.2"}, "mocha": {"required": "^6.2.0", "stable": "8.0.1", "latest": "8.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 559, "downloadsCount": 475367.6666666667, "downloadsAcceleration": -778.8099885844749, "dependentsCount": 304}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7254918341081918, "detail": {"quality": 0.8942454362629071, "popularity": 0.3064462576972198, "maintenance": 0.9998914658151222}}}}, {"react-redux": {"analyzedAt": "2020-05-21T02:47:59.333Z", "collected": {"metadata": {"name": "react-redux", "scope": "unscoped", "version": "7.2.0", "description": "Official React bindings for Redux", "keywords": ["react", "reactjs", "redux"], "date": "2020-02-18T03:43:52.869Z", "author": {"name": "Dan Abramov", "email": "dan.abramov@me.com", "url": "https://github.com/gaearon"}, "publisher": {"username": "acemarke", "email": "mark.erikson@gmail.com"}, "maintainers": [{"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "timdorr", "email": "timdorr@timdorr.com"}], "repository": {"type": "git", "url": "git+https://github.com/reduxjs/react-redux.git"}, "links": {"npm": "https://www.npmjs.com/package/react-redux", "homepage": "https://github.com/reduxjs/react-redux", "repository": "https://github.com/reduxjs/react-redux", "bugs": "https://github.com/reduxjs/react-redux/issues"}, "license": "MIT", "dependencies": {"@babel/runtime": "^7.5.5", "hoist-non-react-statics": "^3.3.0", "loose-envify": "^1.4.0", "prop-types": "^15.7.2", "react-is": "^16.9.0"}, "devDependencies": {"@babel/cli": "^7.5.5", "@babel/core": "^7.5.5", "@babel/plugin-proposal-decorators": "^7.4.4", "@babel/plugin-proposal-object-rest-spread": "^7.5.5", "@babel/plugin-transform-react-display-name": "^7.2.0", "@babel/plugin-transform-react-jsx": "^7.3.0", "@babel/plugin-transform-runtime": "^7.5.5", "@babel/preset-env": "^7.5.5", "@testing-library/jest-dom": "^4.1.0", "@testing-library/jest-native": "^3.0.2", "@testing-library/react": "^8.0.8", "@testing-library/react-hooks": "^1.1.0", "@testing-library/react-native": "^4.2.0", "babel-eslint": "^10.0.3", "babel-jest": "^24.9.0", "codecov": "^3.5.0", "create-react-class": "^15.6.3", "cross-env": "^5.2.0", "es3ify": "^0.2.0", "eslint": "^6.2.2", "eslint-config-prettier": "^6.1.0", "eslint-plugin-import": "^2.18.2", "eslint-plugin-prettier": "^3.1.0", "eslint-plugin-react": "^7.14.3", "glob": "^7.1.4", "jest": "^24.9.0", "prettier": "^1.18.2", "react": "^16.8.6", "react-dom": "^16.8.6", "react-native": "^0.61.4", "react-test-renderer": "^16.8.6", "redux": "^4.0.4", "rimraf": "^3.0.0", "rollup": "^1.20.2", "rollup-plugin-babel": "^4.3.3", "rollup-plugin-commonjs": "^10.0.2", "rollup-plugin-node-resolve": "^5.2.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.1.1"}, "peerDependencies": {"react": "^16.8.3", "redux": "^2.0.0 || ^3.0.0 || ^4.0.0-0"}, "releases": [{"from": "2020-04-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 0}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 0}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 2}, {"from": "2019-05-22T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 9}, {"from": "2018-05-22T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 33}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "React Redux\r\n=========================\r\n\r\nOfficial React bindings for [Redux](https://github.com/reduxjs/redux).  \r\nPerformant and flexible.\r\n\r\n[![build status](https://img.shields.io/travis/reduxjs/react-redux/master.svg?style=flat-square)](https://travis-ci.org/reduxjs/react-redux) [![npm version](https://img.shields.io/npm/v/react-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-redux)\r\n[![npm downloads](https://img.shields.io/npm/dm/react-redux.svg?style=flat-square)](https://www.npmjs.com/package/react-redux)\r\n[![redux channel on discord](https://img.shields.io/badge/discord-redux@reactiflux-61DAFB.svg?style=flat-square)](http://www.reactiflux.com)\r\n\r\n\r\n## Installation\r\n\r\nReact Redux requires **React 16.8.3 or later.**\r\n\r\n```\r\nnpm install --save react-redux\r\n```\r\n\r\nThis assumes that you\u2019re using [npm](http://npmjs.com/) package manager \r\nwith a module bundler like [Webpack](https://webpack.js.org/) or \r\n[Browserify](http://browserify.org/) to consume [CommonJS \r\nmodules](https://webpack.js.org/api/module-methods/#commonjs).\r\n\r\nIf you don\u2019t yet use [npm](http://npmjs.com/) or a modern module bundler, and would rather prefer a single-file [UMD](https://github.com/umdjs/umd) build that makes `ReactRedux` available as a global object, you can grab a pre-built version from [cdnjs](https://cdnjs.com/libraries/react-redux). We *don\u2019t* recommend this approach for any serious application, as most of the libraries complementary to Redux are only available on [npm](http://npmjs.com/).\r\n\r\n## React Native\r\n\r\nAs of React Native 0.18, React Redux 5.x should work with React Native. If you have any issues with React Redux 5.x on React Native, run `npm ls react` and make sure you don\u2019t have a duplicate React installation in your `node_modules`. We recommend that you use `npm@3.x` which is better at avoiding these kinds of issues.\r\n\r\n\r\n## Documentation\r\n\r\nThe React Redux docs are now published at **https://react-redux.js.org** .\r\n\r\nWe're currently expanding and rewriting our docs content - check back soon for more updates!\r\n\r\n## How Does It Work?\r\n\r\nWe do a deep dive on how React Redux works in [this readthesource episode](https://www.youtube.com/watch?v=VJ38wSFbM3A).  \r\n\r\nAlso, the post [The History and Implementation of React-Redux](https://blog.isquaredsoftware.com/2018/11/react-redux-history-implementation/) \r\nexplains what it does, how it works, and how the API and implementation have evolved over time.\r\n\r\nEnjoy!\r\n\r\n## License\r\n\r\n[MIT](LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-05-20T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 751870}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 3953566}, {"from": "2020-04-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 16608774}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 46795130}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 80686482}, {"from": "2019-05-22T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 146119375}], "dependentsCount": 6227, "starsCount": 173}, "github": {"homepage": "https://react-redux.js.org", "starsCount": 19471, "forksCount": 2851, "subscribersCount": 460, "issues": {"count": 1581, "openCount": 28, "distribution": {"3600": 451, "10800": 243, "32400": 295, "97200": 177, "291600": 96, "874800": 73, "2624400": 82, "7873200": 80, "23619600": 60, "70858800": 24, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 160}, {"username": "timdorr", "commitsCount": 103}, {"username": "jimbolla", "commitsCount": 91}, {"username": "markerikson", "commitsCount": 62}, {"username": "ellbee", "commitsCount": 11}, {"username": "wgao19", "commitsCount": 11}, {"username": "gnoff", "commitsCount": 9}, {"username": "MrWolfZ", "commitsCount": 8}, {"username": "esamattis", "commitsCount": 7}, {"username": "Andarist", "commitsCount": 6}, {"username": "jhollingworth", "commitsCount": 6}, {"username": "martincik", "commitsCount": 6}, {"username": "istarkov", "commitsCount": 5}, {"username": "sveinpg", "commitsCount": 5}, {"username": "tgriesser", "commitsCount": 5}, {"username": "chentsulin", "commitsCount": 4}, {"username": "adispring", "commitsCount": 3}, {"username": "agraboso", "commitsCount": 3}, {"username": "cellog", "commitsCount": 3}, {"username": "danmartinez101", "commitsCount": 3}, {"username": "erykpiast", "commitsCount": 3}, {"username": "mattydoincode", "commitsCount": 3}, {"username": "mpeyper", "commitsCount": 3}, {"username": "nickmccurdy", "commitsCount": 3}, {"username": "thiskevinwang", "commitsCount": 3}, {"username": "Amoodaa", "commitsCount": 2}, {"username": "BTMPL", "commitsCount": 2}, {"username": "Hypnosphi", "commitsCount": 2}, {"username": "aminsoheyli", "commitsCount": 2}, {"username": "camsong", "commitsCount": 2}, {"username": "duncanleung", "commitsCount": 2}, {"username": "halitogunc", "commitsCount": 2}, {"username": "janhesters", "commitsCount": 2}, {"username": "josepot", "commitsCount": 2}, {"username": "leshkovichpvl", "commitsCount": 2}, {"username": "mfeniseycopes", "commitsCount": 2}, {"username": "mikekidder", "commitsCount": 2}, {"username": "mudrz", "commitsCount": 2}, {"username": "planetcohen", "commitsCount": 2}, {"username": "pvorona", "commitsCount": 2}, {"username": "vhmth", "commitsCount": 2}, {"username": "vzaidman", "commitsCount": 2}, {"username": "wbreakell", "commitsCount": 2}, {"username": "Alexandrshy", "commitsCount": 1}, {"username": "AndersDJohnson", "commitsCount": 1}, {"username": "Asaf-Aviv", "commitsCount": 1}, {"username": "EvanLovely", "commitsCount": 1}, {"username": "Finesse", "commitsCount": 1}, {"username": "GGAlanSmithee", "commitsCount": 1}, {"username": "Ildarik", "commitsCount": 1}, {"username": "JNaftali", "commitsCount": 1}, {"username": "LeoDanielsson", "commitsCount": 1}, {"username": "MichaelDeBoey", "commitsCount": 1}, {"username": "MosheZemah", "commitsCount": 1}, {"username": "Pixelwelder", "commitsCount": 1}, {"username": "SimYunSup", "commitsCount": 1}, {"username": "alexzherdev", "commitsCount": 1}, {"username": "anthonyc1", "commitsCount": 1}, {"username": "arvinio", "commitsCount": 1}, {"username": "bmwadforth", "commitsCount": 1}, {"username": "cmfcmf", "commitsCount": 1}, {"username": "dai-shi", "commitsCount": 1}, {"username": "datenreisender", "commitsCount": 1}, {"username": "dtschust", "commitsCount": 1}, {"username": "ee92", "commitsCount": 1}, {"username": "g1eny0ung", "commitsCount": 1}, {"username": "h0tw4t3r", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jamesarosen", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jhujhul", "commitsCount": 1}, {"username": "jonyonson", "commitsCount": 1}, {"username": "kevin940726", "commitsCount": 1}, {"username": "larrylin28", "commitsCount": 1}, {"username": "mgr34", "commitsCount": 1}, {"username": "mohan-murali", "commitsCount": 1}, {"username": "morgsmccauley", "commitsCount": 1}, {"username": "mossa-Sammer", "commitsCount": 1}, {"username": "nainardev", "commitsCount": 1}, {"username": "natsuhikok", "commitsCount": 1}, {"username": "nelyousfi", "commitsCount": 1}, {"username": "numb86", "commitsCount": 1}, {"username": "perrin4869", "commitsCount": 1}, {"username": "pieplu", "commitsCount": 1}, {"username": "pursuitofloot", "commitsCount": 1}, {"username": "r3dm1ke", "commitsCount": 1}, {"username": "raybooysen", "commitsCount": 1}, {"username": "ricokahler", "commitsCount": 1}, {"username": "rszalski", "commitsCount": 1}, {"username": "ryaninvents", "commitsCount": 1}, {"username": "tobhult", "commitsCount": 1}, {"username": "toshihidetagami", "commitsCount": 1}, {"username": "trappar", "commitsCount": 1}, {"username": "vasilevx", "commitsCount": 1}, {"username": "vkrol", "commitsCount": 1}, {"username": "vramana", "commitsCount": 1}, {"username": "wurstbonbon", "commitsCount": 1}, {"username": "x86chi", "commitsCount": 1}, {"username": "yuchi", "commitsCount": 1}], "commits": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 0}, {"from": "2020-04-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 6}, {"from": "2020-02-21T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 25}, {"from": "2019-11-23T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 48}, {"from": "2019-05-22T00:00:00.000Z", "to": "2020-05-21T00:00:00.000Z", "count": 116}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2460, "testsSize": 157263, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/reduxjs/react-redux/master.svg?style=flat-square", "service": "https://api.travis-ci.org/reduxjs/react-redux.svg?branch=master", "shields": "https://img.shields.io/travis/reduxjs/react-redux/master.svg", "content": "https://img.shields.io/travis/reduxjs/react-redux/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/react-redux.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/react-redux.svg", "content": "https://img.shields.io/npm/v/react-redux.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/react-redux.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/react-redux.svg", "content": "https://img.shields.io/npm/dm/react-redux.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 23054, "downloadsCount": 15598376.666666666, "downloadsAcceleration": 50307.48093607307, "dependentsCount": 6227}, "maintenance": {"releasesFrequency": 0.8251712328767123, "commitsFrequency": 0.9521369863013699, "openIssues": 1, "issuesDistribution": 0.9363372149079573}}, "score": {"final": 0.9312079368789732, "detail": {"quality": 0.9979669138212458, "popularity": 0.8054963483487443, "maintenance": 0.9996975451729684}}}}, {"@babel/plugin-proposal-object-rest-spread": {"analyzedAt": "2020-06-03T02:45:19.251Z", "collected": {"metadata": {"name": "@babel/plugin-proposal-object-rest-spread", "scope": "babel", "version": "7.10.1", "description": "Compile object rest and spread to ES5", "keywords": ["babel-plugin"], "date": "2020-05-27T22:08:02.993Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-plugin-proposal-object-rest-spread"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fplugin-proposal-object-rest-spread", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-plugin-utils": "^7.10.1", "@babel/plugin-syntax-object-rest-spread": "^7.8.0", "@babel/plugin-transform-parameters": "^7.10.1"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 38}], "readme": "# @babel/plugin-proposal-object-rest-spread\n\n> Compile object rest and spread to ES5\n\nSee our website [@babel/plugin-proposal-object-rest-spread](https://babeljs.io/docs/en/next/babel-plugin-proposal-object-rest-spread.html) for more information.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/plugin-proposal-object-rest-spread\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/plugin-proposal-object-rest-spread --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10129782}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 50312911}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 146225201}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 257321817}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 441530592}], "dependentsCount": 1318, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36685, "forksCount": 4305, "subscribersCount": 867, "issues": {"count": 11589, "openCount": 779, "distribution": {"3600": 2459, "10800": 915, "32400": 1063, "97200": 1239, "291600": 1049, "874800": 1009, "2624400": 846, "7873200": 808, "23619600": 842, "70858800": 1090, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 155}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 51}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 210}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 414}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 783}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 431, "testsSize": 43306, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 41957, "downloadsCount": 48741733.666666664, "downloadsAcceleration": 171829.243436073, "dependentsCount": 1318}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24014814858394973}}, "score": {"final": 0.88759008813235, "detail": {"quality": 0.9567054106307213, "popularity": 0.825894480924154, "maintenance": 0.8900439903419423}}}}, {"bootstrap": {"analyzedAt": "2020-06-16T19:25:11.790Z", "collected": {"metadata": {"name": "bootstrap", "scope": "unscoped", "version": "4.5.0", "description": "The most popular front-end framework for developing responsive, mobile first projects on the web.", "keywords": ["css", "sass", "mobile-first", "responsive", "front-end", "framework", "web"], "date": "2020-05-12T17:49:25.342Z", "author": {"name": "The Bootstrap Authors", "url": "https://github.com/twbs/bootstrap/graphs/contributors"}, "publisher": {"username": "xhmikosr", "email": "xhmikosr@gmail.com"}, "maintainers": [{"username": "bootstrap-admin", "email": "getbootstrap@gmail.com"}, {"username": "mdo", "email": "markdotto@gmail.com"}, {"username": "xhmikosr", "email": "xhmikosr@gmail.com"}], "contributors": [{"name": "Twitter, Inc."}], "repository": {"type": "git", "url": "git+https://github.com/twbs/bootstrap.git"}, "links": {"npm": "https://www.npmjs.com/package/bootstrap", "homepage": "https://getbootstrap.com/", "repository": "https://github.com/twbs/bootstrap", "bugs": "https://github.com/twbs/bootstrap/issues"}, "license": "MIT", "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/plugin-proposal-object-rest-spread": "^7.9.6", "@babel/preset-env": "^7.9.6", "@rollup/plugin-commonjs": "^11.1.0", "@rollup/plugin-node-resolve": "^7.1.3", "autoprefixer": "^9.7.6", "babel-eslint": "^10.1.0", "babel-plugin-istanbul": "^6.0.0", "bundlewatch": "^0.2.7", "clean-css-cli": "^4.3.0", "cross-env": "^7.0.2", "eslint": "^7.0.0", "find-unused-sass-variables": "^2.0.0", "glob": "^7.1.6", "hammer-simulator": "0.0.1", "ip": "^1.1.5", "jquery": "^3.5.1", "karma": "^5.0.5", "karma-browserstack-launcher": "1.4.0", "karma-chrome-launcher": "^3.1.0", "karma-coverage-istanbul-reporter": "^3.0.2", "karma-detect-browsers": "^2.3.3", "karma-firefox-launcher": "^1.3.0", "karma-qunit": "^4.1.1", "karma-sinon": "^1.0.5", "linkinator": "^2.1.1", "lockfile-lint": "^4.2.2", "node-sass": "^4.14.1", "nodemon": "^2.0.3", "npm-run-all": "^4.1.5", "popper.js": "^1.16.0", "postcss-cli": "^7.1.1", "qunit": "2.9.2", "rollup": "^2.9.1", "rollup-plugin-babel": "^4.4.0", "shelljs": "^0.8.4", "shx": "^0.3.2", "sinon": "^7.5.0", "stylelint": "^13.3.3", "stylelint-config-twbs-bootstrap": "^2.0.2", "terser": "^4.6.13", "vnu-jar": "20.3.16"}, "peerDependencies": {"jquery": "1.9.1 - 3", "popper.js": "^1.16.0"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 3}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 11}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 481012}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 2602423}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 10905948}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 31829109}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 57412040}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 102756487}], "dependentsCount": 5792, "starsCount": 312}, "github": {"homepage": "https://getbootstrap.com", "starsCount": 141444, "forksCount": 69023, "subscribersCount": 7131, "issues": {"count": 30406, "openCount": 373, "distribution": {"3600": 6321, "10800": 2977, "32400": 3879, "97200": 3692, "291600": 3047, "874800": 3072, "2624400": 2691, "7873200": 2361, "23619600": 1420, "70858800": 795, "212576400": 151}, "isDisabled": false}, "contributors": [{"username": "mdo", "commitsCount": 6716}, {"username": "cvrebert", "commitsCount": 1804}, {"username": "XhmikosR", "commitsCount": 1376}, {"username": "fat", "commitsCount": 825}, {"username": "Johann-S", "commitsCount": 359}, {"username": "MartijnCuppens", "commitsCount": 339}, {"username": "patrickhlauke", "commitsCount": 220}, {"username": "zdroid", "commitsCount": 161}, {"username": "hnrch02", "commitsCount": 157}, {"username": "ysds", "commitsCount": 110}, {"username": "twbs-grunt", "commitsCount": 95}, {"username": "juthilo", "commitsCount": 83}, {"username": "bardiharborow", "commitsCount": 70}, {"username": "kkirsche", "commitsCount": 63}, {"username": "vsn4ik", "commitsCount": 63}, {"username": "Quy", "commitsCount": 60}, {"username": "andresgalante", "commitsCount": 53}, {"username": "pat270", "commitsCount": 49}, {"username": "pvdlg", "commitsCount": 44}, {"username": "coliff", "commitsCount": 41}, {"username": "zalog", "commitsCount": 41}, {"username": "StevenBlack", "commitsCount": 38}, {"username": "burnsra", "commitsCount": 34}, {"username": "ffoodd", "commitsCount": 34}, {"username": "bassjobsen", "commitsCount": 29}, {"username": "gijsbotje", "commitsCount": 29}, {"username": "smerik", "commitsCount": 26}, {"username": "supergibbs", "commitsCount": 26}, {"username": "BBosman", "commitsCount": 25}, {"username": "glebm", "commitsCount": 24}, {"username": "liuyl", "commitsCount": 24}, {"username": "Yohn", "commitsCount": 21}, {"username": "thomas-mcdonald", "commitsCount": 21}, {"username": "m5o", "commitsCount": 19}, {"username": "Herst", "commitsCount": 18}, {"username": "Starsam80", "commitsCount": 18}, {"username": "tagliala", "commitsCount": 18}, {"username": "ntwb", "commitsCount": 17}, {"username": "ssorallen", "commitsCount": 17}, {"username": "lookfirst", "commitsCount": 16}, {"username": "tlindig", "commitsCount": 16}, {"username": "acmetech", "commitsCount": 15}, {"username": "lipis", "commitsCount": 14}, {"username": "andriijas", "commitsCount": 13}, {"username": "saas786", "commitsCount": 13}, {"username": "boulox", "commitsCount": 12}, {"username": "davidjb", "commitsCount": 12}, {"username": "vanillajonathan", "commitsCount": 12}, {"username": "Lausselloic", "commitsCount": 11}, {"username": "Varunram", "commitsCount": 11}, {"username": "mrmrs", "commitsCount": 11}, {"username": "wilfra", "commitsCount": 10}, {"username": "caniszczyk", "commitsCount": 9}, {"username": "Synchro", "commitsCount": 8}, {"username": "TechDavid", "commitsCount": 8}, {"username": "chiraggmodi", "commitsCount": 8}, {"username": "iamandrewluca", "commitsCount": 8}, {"username": "jacobrask", "commitsCount": 8}, {"username": "jodytate", "commitsCount": 8}, {"username": "jsdf", "commitsCount": 8}, {"username": "neilhem", "commitsCount": 8}, {"username": "alekitto", "commitsCount": 7}, {"username": "buraktuyan", "commitsCount": 7}, {"username": "cgunther", "commitsCount": 7}, {"username": "ghusse", "commitsCount": 7}, {"username": "purwandi", "commitsCount": 7}, {"username": "smaboshe", "commitsCount": 7}, {"username": "vickash", "commitsCount": 7}, {"username": "wangsai", "commitsCount": 7}, {"username": "aavmurphy", "commitsCount": 6}, {"username": "aristath", "commitsCount": 6}, {"username": "blakeembrey", "commitsCount": 6}, {"username": "davethegr8", "commitsCount": 6}, {"username": "dudebout", "commitsCount": 6}, {"username": "eratzlaff", "commitsCount": 6}, {"username": "florianlacreuse", "commitsCount": 6}, {"username": "jamiebuilds", "commitsCount": 6}, {"username": "thekondrashov", "commitsCount": 6}, {"username": "thomaswelton", "commitsCount": 6}, {"username": "wojtask9", "commitsCount": 6}, {"username": "wrightlabs", "commitsCount": 6}, {"username": "J2TEAM", "commitsCount": 5}, {"username": "SSPMark", "commitsCount": 5}, {"username": "akalicki", "commitsCount": 5}, {"username": "ansman", "commitsCount": 5}, {"username": "bastienmoulia", "commitsCount": 5}, {"username": "bradly", "commitsCount": 5}, {"username": "budnik", "commitsCount": 5}, {"username": "frabrunelle", "commitsCount": 5}, {"username": "ggam", "commitsCount": 5}, {"username": "lucascono", "commitsCount": 5}, {"username": "martinbean", "commitsCount": 5}, {"username": "nicole", "commitsCount": 5}, {"username": "peterblazejewicz", "commitsCount": 5}, {"username": "petetnt", "commitsCount": 5}, {"username": "prateekgoel", "commitsCount": 5}, {"username": "tierra", "commitsCount": 5}, {"username": "tkrotoff", "commitsCount": 5}, {"username": "trumbitta", "commitsCount": 5}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 21}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 85}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 328}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 592}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1052}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "bundlewatch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 442831}, "linters": ["editorconfig", "eslint", "stylelint"], "coverage": 0.95}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9924999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 218009, "downloadsCount": 10609703, "downloadsAcceleration": 29859.533485540334, "dependentsCount": 5792}, "maintenance": {"releasesFrequency": 0.5042808219178083, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8037913996810266}}, "score": {"final": 0.9087641281645555, "detail": {"quality": 0.9254215258152897, "popularity": 0.8172651950296739, "maintenance": 0.9859852918845222}}}}, {"protractor": {"analyzedAt": "2020-05-13T22:35:28.061Z", "collected": {"metadata": {"name": "protractor", "scope": "unscoped", "version": "7.0.0", "description": "Webdriver E2E test wrapper for Angular.", "keywords": ["angular", "test", "testing", "webdriver", "webdriverjs", "selenium"], "date": "2020-05-13T20:32:00.170Z", "author": {"name": "Julie Ralph", "email": "ju.ralph@gmail.com"}, "publisher": {"username": "angular", "email": "devops+npm@angular.io"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "angularcore", "email": "angular-core+npm@google.com"}, {"username": "cnishina", "email": "craig.nishina@gmail.com"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git://github.com/angular/protractor.git"}, "links": {"npm": "https://www.npmjs.com/package/protractor", "homepage": "https://github.com/angular/protractor", "repository": "https://github.com/angular/protractor", "bugs": "https://github.com/angular/protractor/issues"}, "license": "MIT", "dependencies": {"@types/q": "^0.0.32", "@types/selenium-webdriver": "^3.0.0", "blocking-proxy": "^1.0.0", "browserstack": "^1.5.1", "chalk": "^1.1.3", "glob": "^7.0.3", "jasmine": "2.8.0", "jasminewd2": "^2.1.0", "q": "1.4.1", "saucelabs": "^1.5.0", "selenium-webdriver": "3.6.0", "source-map-support": "~0.4.0", "webdriver-js-extender": "2.1.0", "webdriver-manager": "^12.1.7", "yargs": "^15.3.1"}, "devDependencies": {"@types/chalk": "^0.4.28", "@types/glob": "^5.0.29", "@types/jasmine": "^2.5.47", "@types/jasminewd2": "^2.0.0", "@types/minimatch": "^2.0.28", "@types/node": "^6.0.46", "@types/yargs": "ts2.6", "body-parser": "^1.19.0", "chai": "~3.5.0", "chai-as-promised": "~5.3.0", "clang-format": "1.0.49", "expect.js": "~0.3.1", "express": "^4.17.1", "gulp": "^4.0.2", "gulp-clang-format": "1.0.23", "gulp-tslint": "^7.0.1", "jshint": "^2.11.0", "lodash": "^4.17.15", "marked": "^0.3.3", "mocha": "^7.1.2", "natives": "^1.1.6", "rimraf": "~2.5.3", "run-sequence": "^1.1.5", "semver": "^5.3.0", "tslint": "^5.20.1", "tslint-eslint-rules": "^3.1.0", "typescript": "~2.6.2", "vrsource-tslint-rules": "^6.0.0"}, "releases": [{"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 2}, {"from": "2018-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 7}], "hasTestScript": true, "readme": "Protractor [![Build Status](https://travis-ci.org/angular/protractor.svg?branch=master)](https://travis-ci.org/angular/protractor) [![CircleCI Status](https://circleci.com/gh/angular/protractor.svg?style=shield)](https://circleci.com/gh/angular/protractor) [![Join the chat at https://gitter.im/angular/protractor](https://badges.gitter.im/angular/protractor.svg)](https://gitter.im/angular/protractor)\n==========\n\n[Protractor](http://angular.github.io/protractor) is an end-to-end test framework for [Angular](http://angular.io/) and [AngularJS](http://angularjs.org) applications. Protractor is a [Node.js](http://nodejs.org/) program built on top of [WebDriverJS](https://github.com/SeleniumHQ/selenium/wiki/WebDriverJs). Protractor runs tests against your application running in a real browser, interacting with it as a user would.\n\nCompatibility\n-------------\n\nProtractor 5 is compatible with nodejs v6 and newer.\n\nProtractor works with AngularJS versions greater than 1.0.6/1.1.4, and is compatible with Angular applications. Note that for Angular apps, the `binding` and `model` locators are not supported. We recommend using `by.css`.\n\n\nGetting Started\n---------------\nSee the [Protractor Website](http://www.protractortest.org) for most documentation.\n\nTo get set up and running quickly:\n - Work through the [Tutorial](http://www.protractortest.org/#/tutorial)\n - See the [API](http://www.protractortest.org/#/api)\n\nOnce you are familiar with the tutorial, you\u2019re ready to move on. To modify your environment, see the Protractor Setup docs. To start writing tests, see the Protractor Tests docs.\n\nTo better understand how Protractor works with the Selenium WebDriver and Selenium Server see the reference materials.\n\n\nGetting Help\n------------\n\nCheck the [Protractor FAQ](https://github.com/angular/protractor/blob/master/docs/faq.md) and read through the [Top 20 questions on StackOverflow](http://stackoverflow.com/questions/tagged/protractor?sort=votes&pageSize=20).\n\nPlease ask usage and debugging questions on [StackOverflow](http://stackoverflow.com/questions/tagged/protractor) (use the [\"protractor\"](http://stackoverflow.com/questions/ask?tags=protractor) tag), the [Gitter](https://gitter.im/angular/protractor) chat room, or in the [Angular discussion group](https://groups.google.com/forum/?fromgroups#!forum/angular). (Please do not ask support questions here on Github.)\n\n\nFor Contributors\n----------------\nSee [DEVELOPER.md](https://github.com/angular/protractor/blob/master/DEVELOPER.md)"}, "npm": {"downloads": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 251948}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1337262}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 5707387}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 16386685}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 29468116}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 54297572}], "dependentsCount": 232, "starsCount": 77}, "github": {"homepage": "http://www.protractortest.org", "starsCount": 8542, "forksCount": 2369, "subscribersCount": 528, "issues": {"count": 5434, "openCount": 611, "distribution": {"3600": 551, "10800": 368, "32400": 546, "97200": 695, "291600": 587, "874800": 625, "2624400": 545, "7873200": 468, "23619600": 352, "70858800": 419, "212576400": 278}, "isDisabled": false}, "contributors": [{"username": "juliemr", "commitsCount": 709}, {"username": "cnishina", "commitsCount": 178}, {"username": "sjelin", "commitsCount": 150}, {"username": "hankduan", "commitsCount": 102}, {"username": "heathkit", "commitsCount": 72}, {"username": "qiyigg", "commitsCount": 28}, {"username": "andresdominguez", "commitsCount": 21}, {"username": "elgalu", "commitsCount": 16}, {"username": "el-davo", "commitsCount": 15}, {"username": "NickTomlin", "commitsCount": 13}, {"username": "eddiemonge", "commitsCount": 11}, {"username": "Marketionist", "commitsCount": 10}, {"username": "chirayuk", "commitsCount": 9}, {"username": "alan-agius4", "commitsCount": 7}, {"username": "thorn0", "commitsCount": 7}, {"username": "jeffbcross", "commitsCount": 5}, {"username": "kayhadrin", "commitsCount": 5}, {"username": "manoj9788", "commitsCount": 5}, {"username": "alecxe", "commitsCount": 4}, {"username": "bcaudan", "commitsCount": 4}, {"username": "igniteram", "commitsCount": 4}, {"username": "jan-molak", "commitsCount": 4}, {"username": "darrinholst", "commitsCount": 3}, {"username": "davemo", "commitsCount": 3}, {"username": "gkalpak", "commitsCount": 3}, {"username": "jesselpalmer", "commitsCount": 3}, {"username": "karthiktv006", "commitsCount": 3}, {"username": "kyliau", "commitsCount": 3}, {"username": "mdasberg", "commitsCount": 3}, {"username": "mgol", "commitsCount": 3}, {"username": "monkpit", "commitsCount": 3}, {"username": "stalniy", "commitsCount": 3}, {"username": "vedharish", "commitsCount": 3}, {"username": "wswebcreation", "commitsCount": 3}, {"username": "ChristiaanScheermeijer", "commitsCount": 2}, {"username": "DavidMikeSimon", "commitsCount": 2}, {"username": "IgorSasovets", "commitsCount": 2}, {"username": "JLLeitschuh", "commitsCount": 2}, {"username": "anjunatl", "commitsCount": 2}, {"username": "bclinkinbeard", "commitsCount": 2}, {"username": "cesarandreu", "commitsCount": 2}, {"username": "dsebastien", "commitsCount": 2}, {"username": "eduardomb", "commitsCount": 2}, {"username": "eendeego", "commitsCount": 2}, {"username": "enriquegh", "commitsCount": 2}, {"username": "fpipita", "commitsCount": 2}, {"username": "groner", "commitsCount": 2}, {"username": "jfroom", "commitsCount": 2}, {"username": "jnizet", "commitsCount": 2}, {"username": "konrad-garus", "commitsCount": 2}, {"username": "marklagendijk", "commitsCount": 2}, {"username": "massimocode", "commitsCount": 2}, {"username": "owenmead", "commitsCount": 2}, {"username": "pedrro", "commitsCount": 2}, {"username": "philippd", "commitsCount": 2}, {"username": "pittgoose", "commitsCount": 2}, {"username": "shelbyd", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "thetoothpick", "commitsCount": 2}, {"username": "tilmanpotthof", "commitsCount": 2}, {"username": "tombatossals", "commitsCount": 2}, {"username": "tullmann", "commitsCount": 2}, {"username": "vikerman", "commitsCount": 2}, {"username": "wlingke", "commitsCount": 2}, {"username": "JPeer264", "commitsCount": 1}, {"username": "KevinMarkVI", "commitsCount": 1}, {"username": "LucasSloan", "commitsCount": 1}, {"username": "MichaelRijsdijk", "commitsCount": 1}, {"username": "NeverwinterMoon", "commitsCount": 1}, {"username": "andrewpmontgomery", "commitsCount": 1}, {"username": "andyjack", "commitsCount": 1}, {"username": "anibalsanchez", "commitsCount": 1}, {"username": "antgel", "commitsCount": 1}, {"username": "barrtender", "commitsCount": 1}, {"username": "bcstodds", "commitsCount": 1}, {"username": "bdellegrazie", "commitsCount": 1}, {"username": "drew0530", "commitsCount": 1}, {"username": "fireashes", "commitsCount": 1}, {"username": "iphydf", "commitsCount": 1}, {"username": "joeheyming", "commitsCount": 1}, {"username": "jonhermansen", "commitsCount": 1}, {"username": "krotscheck", "commitsCount": 1}, {"username": "lt-bstevens", "commitsCount": 1}, {"username": "martin770", "commitsCount": 1}, {"username": "mirekdlugosz", "commitsCount": 1}, {"username": "mmikirtumov", "commitsCount": 1}, {"username": "pmowrer", "commitsCount": 1}, {"username": "raghuhit", "commitsCount": 1}, {"username": "rodrigc", "commitsCount": 1}, {"username": "seanmay", "commitsCount": 1}, {"username": "shaungrady", "commitsCount": 1}, {"username": "simonua", "commitsCount": 1}, {"username": "tgfjt", "commitsCount": 1}, {"username": "theRobinator", "commitsCount": 1}, {"username": "timothystone", "commitsCount": 1}, {"username": "ventuno", "commitsCount": 1}, {"username": "viktorpergjoka", "commitsCount": 1}, {"username": "wesww", "commitsCount": 1}, {"username": "wncm", "commitsCount": 1}, {"username": "xaka", "commitsCount": 1}], "commits": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 1}, {"from": "2020-04-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 7}, {"from": "2020-02-13T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 10}, {"from": "2019-11-15T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 14}, {"from": "2019-05-14T00:00:00.000Z", "to": "2020-05-13T00:00:00.000Z", "count": 17}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}, {"context": "ci/circleci: build", "state": "success"}]}, "source": {"files": {"readmeSize": 2515, "testsSize": 226277, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/angular/protractor.svg?branch=master", "service": "https://api.travis-ci.org/angular/protractor.svg?branch=master", "shields": "https://img.shields.io/travis/angular/protractor/master.svg", "content": "https://img.shields.io/travis/angular/protractor/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://circleci.com/gh/angular/protractor.svg?style=shield", "service": "https://circleci.com/gh/angular/protractor.svg", "shields": "https://img.shields.io/circleci/project/github/angular/protractor.svg", "content": "https://img.shields.io/circleci/project/github/angular/protractor.json"}, "info": {"service": "circleci", "type": "build"}}, {"urls": {"original": "https://gitter.im/angular/protractor](https:/badges.gitter.im/angular/protractor.svg", "service": "https://badges.gitter.im/angular/protractor.svg", "shields": "https://img.shields.io/gitter/room/angular/protractor.svg", "content": "https://img.shields.io/gitter/room/angular/protractor.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["jshint", "tslint"], "outdatedDependencies": {"jasmine": {"required": "2.8.0", "stable": "3.5.0", "latest": "3.5.0"}, "@types/q": {"required": "^0.0.32", "stable": "1.5.2", "latest": "1.5.2"}, "chalk": {"required": "^1.1.3", "stable": "4.0.0", "latest": "4.0.0"}, "@types/selenium-webdriver": {"required": "^3.0.0", "stable": "4.0.9", "latest": "4.0.9"}, "source-map-support": {"required": "~0.4.0", "stable": "0.5.19", "latest": "0.5.19"}, "q": {"required": "1.4.1", "stable": "1.5.1", "latest": "2.0.3"}, "saucelabs": {"required": "^1.5.0", "stable": "4.0.2", "latest": "4.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.725, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 11616, "downloadsCount": 5462228.333333333, "downloadsAcceleration": 14109.261605783868, "dependentsCount": 232}, "maintenance": {"releasesFrequency": 0.8462328767123288, "commitsFrequency": 0.838972602739726, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7067209742224444, "detail": {"quality": 0.900214906314828, "popularity": 0.5811728821982602, "maintenance": 0.666417124453157}}}}, {"gulp-babel": {"analyzedAt": "2020-06-10T13:16:58.391Z", "collected": {"metadata": {"name": "gulp-babel", "scope": "unscoped", "version": "8.0.0", "description": "Use next generation JavaScript, today", "keywords": ["gulpplugin", "babel", "transpiler", "es2015", "es2016", "es2017", "rewriting", "transformation", "syntax", "codegen", "desugaring", "javascript", "compiler"], "date": "2018-08-28T22:50:17.248Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "demurgos", "email": "demurgos@demurgos.net"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "sebmck", "email": "sebmck@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "contributors": [{"name": "Charles Samborski", "email": "demurgos@demurgos.net", "url": "demurgos.net"}], "repository": {"type": "git", "url": "git+https://github.com/babel/gulp-babel.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-babel", "homepage": "https://github.com/babel/gulp-babel#readme", "repository": "https://github.com/babel/gulp-babel", "bugs": "https://github.com/babel/gulp-babel/issues"}, "license": "MIT", "dependencies": {"plugin-error": "^1.0.1", "replace-ext": "^1.0.0", "through2": "^2.0.0", "vinyl-sourcemaps-apply": "^0.2.0"}, "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-transform-arrow-functions": "^7.0.0", "@babel/plugin-transform-block-scoping": "^7.0.0", "@babel/plugin-transform-classes": "^7.0.0", "gulp-sourcemaps": "^1.1.1", "mocha": "^5.0.0", "pre-commit": "^1.2.2", "vinyl": "^2.1.0", "xo": "^0.18.2"}, "peerDependencies": {"@babel/core": "^7.0.0"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "> This readme is for gulp-babel v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/gulp-babel/tree/v7-maintenance) for docs with Babel v6 usage\n\n# gulp-babel [![npm](https://img.shields.io/npm/v/gulp-babel.svg?maxAge=2592000)](https://www.npmjs.com/package/gulp-babel) [![Build Status](https://travis-ci.org/babel/gulp-babel.svg?branch=master)](https://travis-ci.org/babel/gulp-babel)\n\n> Use next generation JavaScript, today, with [Babel](https://babeljs.io)\n\n*Issues with the output should be reported on the Babel [issue tracker](https://phabricator.babeljs.io/).*\n\n\n## Install\n\nInstall `gulp-babel` if you want to get the pre-release of the next version of `gulp-babel`.\n\n```\n# Babel 7\n$ npm install --save-dev gulp-babel @babel/core @babel/preset-env\n\n# Babel 6\n$ npm install --save-dev gulp-babel@7 babel-core babel-preset-env\n```\n\n## Usage\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/env']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## API\n\n### babel([options])\n\n#### options\n\nSee the Babel [options](https://babeljs.io/docs/usage/options/), except for `sourceMap` and `filename` which is handled for you.\n\n\n## Source Maps\n\nUse [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) like this:\n\n```js\nconst gulp = require('gulp');\nconst sourcemaps = require('gulp-sourcemaps');\nconst babel = require('gulp-babel');\nconst concat = require('gulp-concat');\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(sourcemaps.init())\n\t\t.pipe(babel({\n\t\t\tpresets: ['@babel/env']\n\t\t}))\n\t\t.pipe(concat('all.js'))\n\t\t.pipe(sourcemaps.write('.'))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## Babel Metadata\n\nFiles in the stream are annotated with a `babel` property, which contains the metadata from [`babel.transform()`](https://babeljs.io/docs/usage/api/).\n\n#### Example\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\nconst through = require('through2');\n\nfunction logBabelMetadata() {\n\treturn through.obj((file, enc, cb) => {\n\t\tconsole.log(file.babel.test); // 'metadata'\n\t\tcb(null, file);\n\t});\n}\n\ngulp.task('default', () =>\n\tgulp.src('src/**/*.js')\n\t\t.pipe(babel({\n\t\t\t// plugin that sets some metadata\n\t\t\tplugins: [{\n\t\t\t\tpost(file) {\n\t\t\t\t\tfile.metadata.test = 'metadata';\n\t\t\t\t}\n\t\t\t}]\n\t\t}))\n\t\t.pipe(logBabelMetadata())\n)\n```\n\n\n## Runtime\n\nIf you're attempting to use features such as generators, you'll need to add `transform-runtime` as a plugin, to include the Babel runtime. Otherwise, you'll receive the error: `regeneratorRuntime is not defined`.\n\nInstall the runtime:\n\n```\n$ npm install --save-dev @babel/plugin-transform-runtime \n$ npm install --save @babel/runtime \n```\n\nUse it as plugin:\n\n```js\nconst gulp = require('gulp');\nconst babel = require('gulp-babel');\n\ngulp.task('default', () =>\n\tgulp.src('src/app.js')\n\t\t.pipe(babel({\n\t\t\tplugins: ['@babel/transform-runtime']\n\t\t}))\n\t\t.pipe(gulp.dest('dist'))\n);\n```\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](http://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 43888}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 226211}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 951788}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2762675}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 5198062}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 11718140}], "dependentsCount": 1114, "starsCount": 157}, "github": {"homepage": "https://babeljs.io", "starsCount": 1277, "forksCount": 116, "subscribersCount": 30, "issues": {"count": 200, "openCount": 23, "distribution": {"3600": 60, "10800": 20, "32400": 15, "97200": 13, "291600": 12, "874800": 11, "2624400": 9, "7873200": 12, "23619600": 15, "70858800": 28, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 37}, {"username": "hzoo", "commitsCount": 12}, {"username": "sebmck", "commitsCount": 10}, {"username": "danez", "commitsCount": 3}, {"username": "demurgos", "commitsCount": 2}, {"username": "loganfsmyth", "commitsCount": 2}, {"username": "JB1905", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "RebootJeff", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "andrewmclagan", "commitsCount": 1}, {"username": "bnjmnt4n", "commitsCount": 1}, {"username": "christophercrouzet", "commitsCount": 1}, {"username": "darvelo", "commitsCount": 1}, {"username": "hemanth", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "manisenkov", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "nstepien", "commitsCount": 1}, {"username": "operapreneur", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "pofigizm", "commitsCount": 1}, {"username": "raineorshine", "commitsCount": 1}, {"username": "sydd2005", "commitsCount": 1}, {"username": "you-think-you-are-special", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3045, "testsSize": 3613, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/gulp-babel.svg?maxAge=2592000", "shields": "https://img.shields.io/npm/v/gulp-babel.svg", "content": "https://img.shields.io/npm/v/gulp-babel.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/babel/gulp-babel.svg?branch=master", "service": "https://api.travis-ci.org/babel/gulp-babel.svg?branch=master", "shields": "https://img.shields.io/travis/babel/gulp-babel/master.svg", "content": "https://img.shields.io/travis/babel/gulp-babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"], "outdatedDependencies": {"through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "replace-ext": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 1605, "downloadsCount": 920891.6666666666, "downloadsAcceleration": -901.1493531202441, "dependentsCount": 1114}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.13304794520547947, "openIssues": 1, "issuesDistribution": 0.017392941130050188}}, "score": {"final": 0.5258317468823983, "detail": {"quality": 0.9142478620414141, "popularity": 0.40660310620307477, "maintenance": 0.31213228885399413}}}}, {"js-yaml": {"analyzedAt": "2020-06-02T22:15:32.230Z", "collected": {"metadata": {"name": "js-yaml", "scope": "unscoped", "version": "3.14.0", "description": "YAML 1.2 parser and serializer", "keywords": ["yaml", "parser", "serializer", "pyyaml"], "date": "2020-05-22T18:30:32.680Z", "author": {"name": "Vladimir Zapparov", "email": "dervus.grim@gmail.com"}, "publisher": {"username": "vitaly", "email": "vitaly@rcdesign.ru"}, "maintainers": [{"username": "vitaly", "email": "vitaly@rcdesign.ru"}], "contributors": [{"name": "Aleksey V Zapparov", "email": "ixti@member.fsf.org", "url": "http://www.ixti.net/"}, {"name": "Vitaly Puzrin", "email": "vitaly@rcdesign.ru", "url": "https://github.com/puzrin"}, {"name": "Martin Grenfell", "email": "martin.grenfell@gmail.com", "url": "http://got-ravings.blogspot.com"}], "repository": {"type": "git", "url": "git+https://github.com/nodeca/js-yaml.git"}, "links": {"npm": "https://www.npmjs.com/package/js-yaml", "homepage": "https://github.com/nodeca/js-yaml", "repository": "https://github.com/nodeca/js-yaml", "bugs": "https://github.com/nodeca/js-yaml/issues"}, "license": "MIT", "dependencies": {"argparse": "^1.0.7", "esprima": "^4.0.0"}, "devDependencies": {"ansi": "^0.3.1", "benchmark": "^2.1.4", "browserify": "^16.2.2", "codemirror": "^5.13.4", "eslint": "^7.0.0", "fast-check": "^1.24.2", "istanbul": "^0.4.5", "mocha": "^7.1.2", "uglify-js": "^3.0.1"}, "releases": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2}, {"from": "2018-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "JS-YAML - YAML 1.2 parser / writer for JavaScript\n=================================================\n\n[![Build Status](https://travis-ci.org/nodeca/js-yaml.svg?branch=master)](https://travis-ci.org/nodeca/js-yaml)\n[![NPM version](https://img.shields.io/npm/v/js-yaml.svg)](https://www.npmjs.org/package/js-yaml)\n\n__[Online Demo](http://nodeca.github.com/js-yaml/)__\n\n\nThis is an implementation of [YAML](http://yaml.org/), a human-friendly data\nserialization language. Started as [PyYAML](http://pyyaml.org/) port, it was\ncompletely rewritten from scratch. Now it's very fast, and supports 1.2 spec.\n\n\nInstallation\n------------\n\n### YAML module for node.js\n\n```\nnpm install js-yaml\n```\n\n\n### CLI executable\n\nIf you want to inspect your YAML files from CLI, install js-yaml globally:\n\n```\nnpm install -g js-yaml\n```\n\n#### Usage\n\n```\nusage: js-yaml [-h] [-v] [-c] [-t] file\n\nPositional arguments:\n  file           File with YAML document(s)\n\nOptional arguments:\n  -h, --help     Show this help message and exit.\n  -v, --version  Show program's version number and exit.\n  -c, --compact  Display errors in compact mode\n  -t, --trace    Show stack trace on error\n```\n\n\n### Bundled YAML library for browsers\n\n``` html\n<!-- esprima required only for !!js/function -->\n<script src=\"esprima.js\"></script>\n<script src=\"js-yaml.min.js\"></script>\n<script type=\"text/javascript\">\nvar doc = jsyaml.load('greeting: hello\\nname: world');\n</script>\n```\n\nBrowser support was done mostly for the online demo. If you find any errors - feel\nfree to send pull requests with fixes. Also note, that IE and other old browsers\nneeds [es5-shims](https://github.com/kriskowal/es5-shim) to operate.\n\nNotes:\n\n1. We have no resources to support browserified version. Don't expect it to be\n   well tested. Don't expect fast fixes if something goes wrong there.\n2. `!!js/function` in browser bundle will not work by default. If you really need\n   it - load `esprima` parser first (via amd or directly).\n3. `!!bin` in browser will return `Array`, because browsers do not support\n   node.js `Buffer` and adding Buffer shims is completely useless on practice.\n\n\nAPI\n---\n\nHere we cover the most 'useful' methods. If you need advanced details (creating\nyour own tags), see [wiki](https://github.com/nodeca/js-yaml/wiki) and\n[examples](https://github.com/nodeca/js-yaml/tree/master/examples) for more\ninfo.\n\n``` javascript\nconst yaml = require('js-yaml');\nconst fs   = require('fs');\n\n// Get document, or throw exception on error\ntry {\n  const doc = yaml.safeLoad(fs.readFileSync('/home/ixti/example.yml', 'utf8'));\n  console.log(doc);\n} catch (e) {\n  console.log(e);\n}\n```\n\n\n### safeLoad (string [ , options ])\n\n**Recommended loading way.** Parses `string` as single YAML document. Returns either a\nplain object, a string or `undefined`, or throws `YAMLException` on error. By default, does\nnot support regexps, functions and undefined. This method is safe for untrusted data.\n\noptions:\n\n- `filename` _(default: null)_ - string to be used as a file path in\n  error/warning messages.\n- `onWarning` _(default: null)_ - function to call on warning messages.\n  Loader will call this function with an instance of `YAMLException` for each warning.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ - specifies a schema to use.\n  - `FAILSAFE_SCHEMA` - only strings, arrays and plain objects:\n    http://www.yaml.org/spec/1.2/spec.html#id2802346\n  - `JSON_SCHEMA` - all JSON-supported types:\n    http://www.yaml.org/spec/1.2/spec.html#id2803231\n  - `CORE_SCHEMA` - same as `JSON_SCHEMA`:\n    http://www.yaml.org/spec/1.2/spec.html#id2804923\n  - `DEFAULT_SAFE_SCHEMA` - all supported YAML types, without unsafe ones\n    (`!!js/undefined`, `!!js/regexp` and `!!js/function`):\n    http://yaml.org/type/\n  - `DEFAULT_FULL_SCHEMA` - all supported YAML types.\n- `json` _(default: false)_ - compatibility with JSON.parse behaviour. If true, then duplicate keys in a mapping will override values rather than throwing an error.\n\nNOTE: This function **does not** understand multi-document sources, it throws\nexception on those.\n\nNOTE: JS-YAML **does not** support schema-specific tag resolution restrictions.\nSo, the JSON schema is not as strictly defined in the YAML specification.\nIt allows numbers in any notation, use `Null` and `NULL` as `null`, etc.\nThe core schema also has no such restrictions. It allows binary notation for integers.\n\n\n### load (string [ , options ])\n\n**Use with care with untrusted sources**. The same as `safeLoad()` but uses\n`DEFAULT_FULL_SCHEMA` by default - adds some JavaScript-specific types:\n`!!js/function`, `!!js/regexp` and `!!js/undefined`. For untrusted sources, you\nmust additionally validate object structure to avoid injections:\n\n``` javascript\nconst untrusted_code = '\"toString\": !<tag:yaml.org,2002:js/function> \"function (){very_evil_thing();}\"';\n\n// I'm just converting that string, what could possibly go wrong?\nrequire('js-yaml').load(untrusted_code) + ''\n```\n\n\n### safeLoadAll (string [, iterator] [, options ])\n\nSame as `safeLoad()`, but understands multi-document sources. Applies\n`iterator` to each document if specified, or returns array of documents.\n\n``` javascript\nconst yaml = require('js-yaml');\n\nyaml.safeLoadAll(data, function (doc) {\n  console.log(doc);\n});\n```\n\n\n### loadAll (string [, iterator] [ , options ])\n\nSame as `safeLoadAll()` but uses `DEFAULT_FULL_SCHEMA` by default.\n\n\n### safeDump (object [ , options ])\n\nSerializes `object` as a YAML document. Uses `DEFAULT_SAFE_SCHEMA`, so it will\nthrow an exception if you try to dump regexps or functions. However, you can\ndisable exceptions by setting the `skipInvalid` option to `true`.\n\noptions:\n\n- `indent` _(default: 2)_ - indentation width to use (in spaces).\n- `noArrayIndent` _(default: false)_ - when true, will not add an indentation level to array elements\n- `skipInvalid` _(default: false)_ - do not throw on invalid types (like function\n  in the safe schema) and skip pairs and single values with such types.\n- `flowLevel` (default: -1) - specifies level of nesting, when to switch from\n  block to flow style for collections. -1 means block style everwhere\n- `styles` - \"tag\" => \"style\" map. Each tag may have own set of styles.\n- `schema` _(default: `DEFAULT_SAFE_SCHEMA`)_ specifies a schema to use.\n- `sortKeys` _(default: `false`)_ - if `true`, sort keys when dumping YAML. If a\n  function, use the function to sort the keys.\n- `lineWidth` _(default: `80`)_ - set max line width.\n- `noRefs` _(default: `false`)_ - if `true`, don't convert duplicate objects into references\n- `noCompatMode` _(default: `false`)_ - if `true` don't try to be compatible with older\n  yaml versions. Currently: don't quote \"yes\", \"no\" and so on, as required for YAML 1.1\n- `condenseFlow` _(default: `false`)_ - if `true` flow sequences will be condensed, omitting the space between `a, b`. Eg. `'[a,b]'`, and omitting the space between `key: value` and quoting the key. Eg. `'{\"a\":b}'` Can be useful when using yaml for pretty URL query params as spaces are %-encoded.\n\nThe following table show availlable styles (e.g. \"canonical\",\n\"binary\"...) available for each tag (.e.g. !!null, !!int ...). Yaml\noutput is shown on the right side after `=>` (default setting) or `->`:\n\n``` none\n!!null\n  \"canonical\"   -> \"~\"\n  \"lowercase\"   => \"null\"\n  \"uppercase\"   -> \"NULL\"\n  \"camelcase\"   -> \"Null\"\n\n!!int\n  \"binary\"      -> \"0b1\", \"0b101010\", \"0b1110001111010\"\n  \"octal\"       -> \"01\", \"052\", \"016172\"\n  \"decimal\"     => \"1\", \"42\", \"7290\"\n  \"hexadecimal\" -> \"0x1\", \"0x2A\", \"0x1C7A\"\n\n!!bool\n  \"lowercase\"   => \"true\", \"false\"\n  \"uppercase\"   -> \"TRUE\", \"FALSE\"\n  \"camelcase\"   -> \"True\", \"False\"\n\n!!float\n  \"lowercase\"   => \".nan\", '.inf'\n  \"uppercase\"   -> \".NAN\", '.INF'\n  \"camelcase\"   -> \".NaN\", '.Inf'\n```\n\nExample:\n\n``` javascript\nsafeDump (object, {\n  'styles': {\n    '!!null': 'canonical' // dump null as ~\n  },\n  'sortKeys': true        // sort object keys\n});\n```\n\n### dump (object [ , options ])\n\nSame as `safeDump()` but without limits (uses `DEFAULT_FULL_SCHEMA` by default).\n\n\nSupported YAML types\n--------------------\n\nThe list of standard YAML tags and corresponding JavaScipt types. See also\n[YAML tag discussion](http://pyyaml.org/wiki/YAMLTagDiscussion) and\n[YAML types repository](http://yaml.org/type/).\n\n```\n!!null ''                   # null\n!!bool 'yes'                # bool\n!!int '3...'                # number\n!!float '3.14...'           # number\n!!binary '...base64...'     # buffer\n!!timestamp 'YYYY-...'      # date\n!!omap [ ... ]              # array of key-value pairs\n!!pairs [ ... ]             # array or array pairs\n!!set { ... }               # array of objects with given keys and null values\n!!str '...'                 # string\n!!seq [ ... ]               # array\n!!map { ... }               # object\n```\n\n**JavaScript-specific tags**\n\n```\n!!js/regexp /pattern/gim            # RegExp\n!!js/undefined ''                   # Undefined\n!!js/function 'function () {...}'   # Function\n```\n\nCaveats\n-------\n\nNote, that you use arrays or objects as key in JS-YAML. JS does not allow objects\nor arrays as keys, and stringifies (by calling `toString()` method) them at the\nmoment of adding them.\n\n``` yaml\n---\n? [ foo, bar ]\n: - baz\n? { foo: bar }\n: - baz\n  - baz\n```\n\n``` javascript\n{ \"foo,bar\": [\"baz\"], \"[object Object]\": [\"baz\", \"baz\"] }\n```\n\nAlso, reading of properties on implicit block mapping keys is not supported yet.\nSo, the following YAML document cannot be loaded.\n\n``` yaml\n&anchor foo:\n  foo: bar\n  *anchor: duplicate key\n  baz: bat\n  *anchor: duplicate key\n```\n\n\njs-yaml for enterprise\n----------------------\n\nAvailable as part of the Tidelift Subscription\n\nThe maintainers of js-yaml and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-js-yaml?utm_source=npm-js-yaml&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)"}, "npm": {"downloads": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 3013300}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 18657820}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 72434276}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 212199032}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 386001227}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 757323706}], "dependentsCount": 8386, "starsCount": 121}, "github": {"homepage": "http://nodeca.github.com/js-yaml/", "starsCount": 4504, "forksCount": 599, "subscribersCount": 82, "issues": {"count": 548, "openCount": 66, "distribution": {"3600": 150, "10800": 63, "32400": 49, "97200": 47, "291600": 28, "874800": 48, "2624400": 34, "7873200": 31, "23619600": 28, "70858800": 35, "212576400": 35}, "isDisabled": false}, "contributors": [{"username": "ixti", "commitsCount": 404}, {"username": "dervus", "commitsCount": 390}, {"username": "puzrin", "commitsCount": 269}, {"username": "aepsilon", "commitsCount": 5}, {"username": "rlidwka", "commitsCount": 5}, {"username": "dplepage", "commitsCount": 3}, {"username": "isaacs", "commitsCount": 3}, {"username": "kcivey", "commitsCount": 3}, {"username": "Kirill89", "commitsCount": 2}, {"username": "a-rodin", "commitsCount": 2}, {"username": "djchie", "commitsCount": 2}, {"username": "dod38fr", "commitsCount": 2}, {"username": "eseliger", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tcr", "commitsCount": 2}, {"username": "ArtskydJ", "commitsCount": 1}, {"username": "ELLIOTTCABLE", "commitsCount": 1}, {"username": "EdwardBetts", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "GabrieleC", "commitsCount": 1}, {"username": "Hypercubed", "commitsCount": 1}, {"username": "IvanGoncharov", "commitsCount": 1}, {"username": "MartijnCuppens", "commitsCount": 1}, {"username": "MikeRalphson", "commitsCount": 1}, {"username": "aengl", "commitsCount": 1}, {"username": "ahgittin", "commitsCount": 1}, {"username": "airportyh", "commitsCount": 1}, {"username": "ajafff", "commitsCount": 1}, {"username": "bachwehbi", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "diberry", "commitsCount": 1}, {"username": "doowb", "commitsCount": 1}, {"username": "dubzzz", "commitsCount": 1}, {"username": "dustyrockpyle", "commitsCount": 1}, {"username": "fabiospampinato", "commitsCount": 1}, {"username": "fayimora", "commitsCount": 1}, {"username": "fevisera", "commitsCount": 1}, {"username": "gyandeeps", "commitsCount": 1}, {"username": "jacob-hd", "commitsCount": 1}, {"username": "jeromew", "commitsCount": 1}, {"username": "k7sleeper", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "kivlor", "commitsCount": 1}, {"username": "lintaba", "commitsCount": 1}, {"username": "loamhoof", "commitsCount": 1}, {"username": "lwassermann", "commitsCount": 1}, {"username": "mojodna", "commitsCount": 1}, {"username": "monken", "commitsCount": 1}, {"username": "murtazajafferji", "commitsCount": 1}, {"username": "mxl", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "onebytegone", "commitsCount": 1}, {"username": "paolochiodi", "commitsCount": 1}, {"username": "raiden-dev", "commitsCount": 1}, {"username": "rjmunro", "commitsCount": 1}, {"username": "rockitbaby", "commitsCount": 1}, {"username": "roryokane", "commitsCount": 1}, {"username": "scrooloose", "commitsCount": 1}, {"username": "shaunc", "commitsCount": 1}, {"username": "shockey", "commitsCount": 1}, {"username": "tech4him1", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "trevorr", "commitsCount": 1}, {"username": "vcache", "commitsCount": 1}, {"username": "vogelsgesang", "commitsCount": 1}, {"username": "zentner-kyle", "commitsCount": 1}], "commits": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 0}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 18}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 10102, "testsSize": 230141, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/nodeca/js-yaml.svg?branch=master", "service": "https://api.travis-ci.org/nodeca/js-yaml.svg?branch=master", "shields": "https://img.shields.io/travis/nodeca/js-yaml/master.svg", "content": "https://img.shields.io/travis/nodeca/js-yaml/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/js-yaml.svg", "shields": "https://img.shields.io/npm/v/js-yaml.svg", "content": "https://img.shields.io/npm/v/js-yaml.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 5372, "downloadsCount": 70733010.66666667, "downloadsAcceleration": 102302.04769786901, "dependentsCount": 8386}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7710445205479451, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8140100043735061, "detail": {"quality": 0.975046707739136, "popularity": 0.8235122614310183, "maintenance": 0.6664762872883114}}}}, {"yeoman-generator": {"analyzedAt": "2020-05-11T15:36:37.701Z", "collected": {"metadata": {"name": "yeoman-generator", "scope": "unscoped", "version": "4.10.1", "description": "Rails-inspired generator system that provides scaffolding for your apps", "keywords": ["development", "dev", "build", "tool", "cli", "scaffold", "scaffolding", "generate", "generator", "yeoman", "app"], "date": "2020-05-11T15:24:48.072Z", "author": {"name": "Yeoman"}, "publisher": {"username": "mshima", "email": "marceloshima@gmail.com"}, "maintainers": [{"username": "addyosmani", "email": "addyosmani@gmail.com"}, {"username": "eddiemonge", "email": "eddie+npm@eddiemonge.com"}, {"username": "mischah", "email": "mail@michael-kuehnel.de"}, {"username": "mshima", "email": "marceloshima@gmail.com"}, {"username": "paulirish", "email": "paul.irish@gmail.com"}, {"username": "sboudrias", "email": "admin@simonboudrias.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, {"username": "ulisesgascon", "email": "ulisesgascondev@gmail.com"}, {"username": "zckrs", "email": "mehdy.dara.fr@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/yeoman/generator.git"}, "links": {"npm": "https://www.npmjs.com/package/yeoman-generator", "homepage": "http://yeoman.io", "repository": "https://github.com/yeoman/generator", "bugs": "https://github.com/yeoman/generator/issues"}, "license": "BSD-2-Clause", "dependencies": {"async": "^2.6.2", "chalk": "^2.4.2", "cli-table": "^0.3.1", "cross-spawn": "^6.0.5", "dargs": "^6.1.0", "dateformat": "^3.0.3", "debug": "^4.1.1", "diff": "^4.0.1", "error": "^7.0.2", "find-up": "^3.0.0", "github-username": "^3.0.0", "istextorbinary": "^2.5.1", "lodash": "^4.17.11", "make-dir": "^3.0.0", "minimist": "^1.2.5", "pretty-bytes": "^5.2.0", "read-chunk": "^3.2.0", "read-pkg-up": "^5.0.0", "rimraf": "^2.6.3", "run-async": "^2.0.0", "semver": "^7.2.1", "shelljs": "^0.8.3", "text-table": "^0.2.0", "through2": "^3.0.1", "grouped-queue": "^1.1.0", "mem-fs-editor": "^6.0.0", "yeoman-environment": "^2.9.5"}, "devDependencies": {"coveralls": "^3.0.3", "eslint": "^5.16.0", "eslint-config-prettier": "^4.3.0", "eslint-config-xo": "^0.26.0", "eslint-plugin-prettier": "^3.1.0", "husky": "^2.3.0", "inquirer": "^6.3.1", "jsdoc": "^3.6.3", "lint-staged": "^8.1.7", "mocha": "^7.1.1", "mockery": "^2.1.0", "nock": "^12.0.3", "nyc": "^15.0.0", "prettier": "^1.17.1", "proxyquire": "^2.1.0", "sinon": "^7.3.2", "tui-jsdoc-template": "^1.2.2", "yeoman-assert": "^3.1.1", "yeoman-test": "^2.3.0"}, "optionalDependencies": {"grouped-queue": "^1.1.0", "mem-fs-editor": "^6.0.0", "yeoman-environment": "^2.9.5"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 5}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 10}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 13}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 17}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 22}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Generator [![npm](https://badge.fury.io/js/yeoman-generator.svg)](http://badge.fury.io/js/yeoman-generator) [![Build Status](https://travis-ci.org/yeoman/generator.svg?branch=master)](https://travis-ci.org/yeoman/generator) [![Coverage Status](https://coveralls.io/repos/yeoman/generator/badge.svg)](https://coveralls.io/r/yeoman/generator) [![Gitter](https://img.shields.io/badge/Gitter-Join_the_Yeoman_chat_%E2%86%92-00d06f.svg)](https://gitter.im/yeoman/yeoman)\n\n> Rails-inspired generator system that provides scaffolding for your apps\n\n![](https://raw.githubusercontent.com/yeoman/media/master/optimized/yeoman-masthead.png)\n\n\n## Getting Started\n\nIf you're interested in writing your own Yeoman generator we recommend reading [the official getting started guide](http://yeoman.io/authoring/). The guide covers all the basics you need to get started.\n\nA generator can be as complex as you want it to be. It can simply copy a bunch of boilerplate files, or it can be more advanced asking the user's preferences to scaffold a tailor made project. This decision is up to you.\n\nThe fastest way to get started is to use  [generator-generator](https://github.com/yeoman/generator-generator), a Yeoman generator to generate a Yeoman generator.\n\nAfter reading the getting started guide, you might want to read the code source or visit our [API documentation](http://yeoman.io/generator/) for a list of all methods available.\n\n\n### Debugging\n\nSee the [debugging guide](http://yeoman.io/authoring/debugging.html).\n\n## Contributing\n\nWe love contributors! See our [contribution guideline](http://yeoman.io/contributing/) to get started.\n\n## Sponsors\nLove Yeoman work and community? Help us keep it alive by donating funds to cover project expenses! <br />\n[[Become a sponsor](https://opencollective.com/yeoman#support)]\n\n  <a href=\"https://opencollective.com/yeoman/backers/0/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/0/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/1/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/1/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/2/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/2/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/3/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/3/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/4/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/4/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/5/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/5/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/6/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/6/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/7/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/7/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/8/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/8/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/9/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/9/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/10/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/10/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/11/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/11/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/12/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/12/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/13/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/13/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/14/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/14/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/15/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/15/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/16/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/16/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/17/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/17/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/18/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/18/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/19/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/19/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/20/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/20/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/21/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/21/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/22/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/22/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/23/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/23/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/24/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/24/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/25/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/25/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/26/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/26/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/27/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/27/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/28/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/28/avatar\">\n  </a>\n  <a href=\"https://opencollective.com/yeoman/backers/29/website\" target=\"_blank\">\n    <img src=\"https://opencollective.com/yeoman/backers/29/avatar\">\n  </a>\n\n\n## License\n\n[BSD license](http://opensource.org/licenses/bsd-license.php)\nCopyright (c) Google"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 26564}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 422403}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1702922}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4388034}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 7718245}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 15119761}], "dependentsCount": 10381, "starsCount": 52}, "github": {"homepage": "http://yeoman.io", "starsCount": 940, "forksCount": 289, "subscribersCount": 48, "issues": {"count": 1238, "openCount": 2, "distribution": {"3600": 263, "10800": 92, "32400": 110, "97200": 132, "291600": 113, "874800": 115, "2624400": 114, "7873200": 123, "23619600": 84, "70858800": 59, "212576400": 33}, "isDisabled": false}, "contributors": [{"username": "SBoudrias", "commitsCount": 424}, {"username": "sindresorhus", "commitsCount": 121}, {"username": "mshima", "commitsCount": 91}, {"username": "passy", "commitsCount": 47}, {"username": "addyosmani", "commitsCount": 36}, {"username": "kevva", "commitsCount": 25}, {"username": "mklabs", "commitsCount": 18}, {"username": "btford", "commitsCount": 17}, {"username": "eddiemonge", "commitsCount": 16}, {"username": "mischah", "commitsCount": 11}, {"username": "PaulKinlan", "commitsCount": 9}, {"username": "thaiat", "commitsCount": 9}, {"username": "jdespatis", "commitsCount": 8}, {"username": "jridgewell", "commitsCount": 8}, {"username": "revathskumar", "commitsCount": 6}, {"username": "Toilal", "commitsCount": 5}, {"username": "sleeper", "commitsCount": 5}, {"username": "gruppjo", "commitsCount": 4}, {"username": "stefanbuck", "commitsCount": 4}, {"username": "evocateur", "commitsCount": 3}, {"username": "gillesfabio", "commitsCount": 3}, {"username": "sebv", "commitsCount": 3}, {"username": "timrwood", "commitsCount": 3}, {"username": "wesleytodd", "commitsCount": 3}, {"username": "1989car", "commitsCount": 2}, {"username": "Awk34", "commitsCount": 2}, {"username": "ahmednuaman", "commitsCount": 2}, {"username": "arthurvr", "commitsCount": 2}, {"username": "ctalkington", "commitsCount": 2}, {"username": "floatdrop", "commitsCount": 2}, {"username": "hemanth", "commitsCount": 2}, {"username": "karlguillotte", "commitsCount": 2}, {"username": "peol", "commitsCount": 2}, {"username": "raineorshine", "commitsCount": 2}, {"username": "regevbr", "commitsCount": 2}, {"username": "rjw57", "commitsCount": 2}, {"username": "ruyadorno", "commitsCount": 2}, {"username": "smackesey", "commitsCount": 2}, {"username": "zenorocha", "commitsCount": 2}, {"username": "AshKyd", "commitsCount": 1}, {"username": "Borjagodoy", "commitsCount": 1}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "JamesMessinger", "commitsCount": 1}, {"username": "JulienCabanes", "commitsCount": 1}, {"username": "LostInBrittany", "commitsCount": 1}, {"username": "MarcoScabbiolo", "commitsCount": 1}, {"username": "Schoonology", "commitsCount": 1}, {"username": "Toddses", "commitsCount": 1}, {"username": "UlisesGascon", "commitsCount": 1}, {"username": "adoyle-h", "commitsCount": 1}, {"username": "alefteris", "commitsCount": 1}, {"username": "alrra", "commitsCount": 1}, {"username": "andrewstuart", "commitsCount": 1}, {"username": "artoale", "commitsCount": 1}, {"username": "blai", "commitsCount": 1}, {"username": "broud", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "cybertk", "commitsCount": 1}, {"username": "danielchatfield", "commitsCount": 1}, {"username": "dbushong", "commitsCount": 1}, {"username": "dtackett", "commitsCount": 1}, {"username": "easingthemes", "commitsCount": 1}, {"username": "edvardchen", "commitsCount": 1}, {"username": "grawk", "commitsCount": 1}, {"username": "greenkeeper[bot]", "commitsCount": 1}, {"username": "helfi92", "commitsCount": 1}, {"username": "hurrymaplelad", "commitsCount": 1}, {"username": "iamolivinius", "commitsCount": 1}, {"username": "iamstolis", "commitsCount": 1}, {"username": "imjared", "commitsCount": 1}, {"username": "jamesallardice", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "mfal", "commitsCount": 1}, {"username": "milindl", "commitsCount": 1}, {"username": "mrDinckleman", "commitsCount": 1}, {"username": "mrichard", "commitsCount": 1}, {"username": "neilstuartcraig", "commitsCount": 1}, {"username": "node-monk", "commitsCount": 1}, {"username": "nwinkler", "commitsCount": 1}, {"username": "oak-tree", "commitsCount": 1}, {"username": "olsonpm", "commitsCount": 1}, {"username": "p-m-p", "commitsCount": 1}, {"username": "pachtymichuk", "commitsCount": 1}, {"username": "pauldijou", "commitsCount": 1}, {"username": "pborrazas", "commitsCount": 1}, {"username": "peerwit", "commitsCount": 1}, {"username": "pitrew", "commitsCount": 1}, {"username": "qiu8310", "commitsCount": 1}, {"username": "rgroothuijsen", "commitsCount": 1}, {"username": "ryanvanoss", "commitsCount": 1}, {"username": "scottaddie", "commitsCount": 1}, {"username": "silvenon", "commitsCount": 1}, {"username": "sinedied", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "stramel", "commitsCount": 1}, {"username": "tomfuertes", "commitsCount": 1}, {"username": "vvanmol", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 22}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 62}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 90}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 110}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 6602, "testsSize": 158509}, "badges": [{"urls": {"original": "https://travis-ci.org/yeoman/generator.svg?branch=master", "service": "https://api.travis-ci.org/yeoman/generator.svg?branch=master", "shields": "https://img.shields.io/travis/yeoman/generator/master.svg", "content": "https://img.shields.io/travis/yeoman/generator/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/yeoman/generator/badge.svg", "service": "https://coveralls.io/repos/yeoman/generator/badge.svg", "shields": "https://img.shields.io/coveralls/yeoman/generator.svg", "content": "https://img.shields.io/coveralls/yeoman/generator.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"read-pkg-up": {"required": "^5.0.0", "stable": "7.0.1", "latest": "7.0.1"}, "dargs": {"required": "^6.1.0", "stable": "7.0.0", "latest": "7.0.0"}, "github-username": {"required": "^3.0.0", "stable": "5.0.1", "latest": "5.0.1"}, "find-up": {"required": "^3.0.0", "stable": "4.1.0", "latest": "4.1.0"}, "cross-spawn": {"required": "^6.0.5", "stable": "7.0.2", "latest": "7.0.2"}, "rimraf": {"required": "^2.6.3", "stable": "3.0.2", "latest": "3.0.2"}, "error": {"required": "^7.0.2", "stable": "10.3.0", "latest": "10.3.0"}, "chalk": {"required": "^2.4.2", "stable": "4.0.0", "latest": "4.0.0"}, "async": {"required": "^2.6.2", "stable": "3.2.0", "latest": "3.2.0"}, "istextorbinary": {"required": "^2.5.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.991, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 1428, "downloadsCount": 1462678, "downloadsAcceleration": 4198.800019025875, "dependentsCount": 10381}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8277125829329517, "detail": {"quality": 0.9277686555583523, "popularity": 0.5697105826002647, "maintenance": 0.9999522353010099}}}}, {"jasmine-spec-reporter": {"analyzedAt": "2020-06-07T17:11:35.587Z", "collected": {"metadata": {"name": "jasmine-spec-reporter", "scope": "unscoped", "version": "5.0.2", "description": "Spec reporter for jasmine behavior-driven development framework", "keywords": ["jasmine", "reporter", "bdd", "spec", "protractor"], "date": "2020-04-24T11:13:45.979Z", "author": {"name": "Bastien Caudan"}, "publisher": {"username": "bcaudan", "email": "bastien.caudan@gmail.com"}, "maintainers": [{"username": "bcaudan", "email": "bastien.caudan@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/bcaudan/jasmine-spec-reporter.git"}, "links": {"npm": "https://www.npmjs.com/package/jasmine-spec-reporter", "homepage": "https://github.com/bcaudan/jasmine-spec-reporter", "repository": "https://github.com/bcaudan/jasmine-spec-reporter", "bugs": "https://github.com/bcaudan/jasmine-spec-reporter/issues"}, "license": "Apache-2.0", "dependencies": {"colors": "1.4.0"}, "devDependencies": {"@types/jasmine": "3.5.10", "@types/node": "13.9.4", "codecov": "3.6.5", "diff": "4.0.2", "jasmine": "3.5.0", "jasmine-core": "3.5.0", "nyc": "15.0.0", "protractor": "5.4.3", "tslint": "6.1.0", "tslint-eslint-rules": "5.4.0", "typescript": "3.8.2"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "jasmine-spec-reporter\n=====================\n\n[![Greenkeeper badge](https://badges.greenkeeper.io/bcaudan/jasmine-spec-reporter.svg)](https://greenkeeper.io/)\n[![Build Status](https://travis-ci.org/bcaudan/jasmine-spec-reporter.svg?branch=master)](https://travis-ci.org/bcaudan/jasmine-spec-reporter)\n[![codecov](https://codecov.io/gh/bcaudan/jasmine-spec-reporter/branch/master/graph/badge.svg)](https://codecov.io/gh/bcaudan/jasmine-spec-reporter)\n\nReal time console spec reporter for jasmine testing framework.\n\n![](screenshot.gif)\n\n# Usage\n\n## Installation\nInstall `jasmine-spec-reporter` via npm:\n\n    npm install jasmine-spec-reporter --save-dev\n\n## Examples\n* [Jasmine node tests](examples/node)\n* [Protractor tests](examples/protractor)\n* [TypeScript support](examples/typescript)\n\n## Configuration\nSee full configuration and features: [configuration.ts](src/configuration.ts)\n\n## Custom output\nYou can customize the output of the reporter yourself: [see how](docs/customize-output.md).\n\n# Development\n\n## Requirements\n\n* npm >= 5\n\n## Commands\n\n* install dependencies: `npm install`\n* launch unit tests: `npm test`\n* launch integration tests: `npm run test:integration`\n\n## Debugging\n\nUnit tests hijack `console.log` to verify output; use `console.warn` to debug."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 54911}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1103507}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4625258}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14099465}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25618749}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 47293277}], "dependentsCount": 102, "starsCount": 11}, "github": {"homepage": "https://github.com/bcaudan/jasmine-spec-reporter", "starsCount": 236, "forksCount": 51, "subscribersCount": 7, "issues": {"count": 496, "openCount": 1, "distribution": {"3600": 209, "10800": 20, "32400": 41, "97200": 45, "291600": 36, "874800": 44, "2624400": 45, "7873200": 37, "23619600": 17, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "bcaudan", "commitsCount": 414}, {"username": "greenkeeper[bot]", "commitsCount": 199}, {"username": "greenkeeperio-bot", "commitsCount": 62}, {"username": "johnjbarton", "commitsCount": 6}, {"username": "0xR", "commitsCount": 1}, {"username": "ItsASine", "commitsCount": 1}, {"username": "bebepeng", "commitsCount": 1}, {"username": "biril", "commitsCount": 1}, {"username": "killzoner", "commitsCount": 1}, {"username": "souvikbasu", "commitsCount": 1}, {"username": "stocksr", "commitsCount": 1}, {"username": "szimek", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 25}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 50}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 73}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 127}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 1271, "testsSize": 95572, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/bcaudan/jasmine-spec-reporter.svg?branch=master", "service": "https://api.travis-ci.org/bcaudan/jasmine-spec-reporter.svg?branch=master", "shields": "https://img.shields.io/travis/bcaudan/jasmine-spec-reporter/master.svg", "content": "https://img.shields.io/travis/bcaudan/jasmine-spec-reporter/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["tslint"], "coverage": 0.99}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 317, "downloadsCount": 4699821.666666667, "downloadsAcceleration": 9340.101541095886, "dependentsCount": 102}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.984605141865443}}, "score": {"final": 0.7904572687425204, "detail": {"quality": 0.9850582339672378, "popularity": 0.4141614760262464, "maintenance": 0.9999522341233227}}}}, {"pre-commit": {"analyzedAt": "2020-05-19T05:46:49.594Z", "collected": {"metadata": {"name": "pre-commit", "scope": "unscoped", "version": "1.2.2", "description": "Automatically install pre-commit hooks for your npm modules.", "keywords": ["git", "hooks", "npm", "pre-commit", "precommit", "run", "test", "development"], "date": "2016-12-13T12:03:29.029Z", "author": {"name": "Arnout Kazemier", "email": "opensource@observe.it"}, "publisher": {"username": "3rdeden", "email": "npm@3rd-Eden.com"}, "maintainers": [{"username": "3rdeden", "email": "npm@3rd-Eden.com"}, {"username": "v1", "email": "npm@3rd-Eden.com"}, {"username": "swaagie", "email": "info@martijnswaagman.nl"}], "repository": {"type": "git", "url": "git://github.com/observing/pre-commit.git"}, "links": {"npm": "https://www.npmjs.com/package/pre-commit", "homepage": "https://github.com/observing/pre-commit", "repository": "https://github.com/observing/pre-commit", "bugs": "https://github.com/observing/pre-commit/issues"}, "license": "MIT", "dependencies": {"cross-spawn": "^5.0.1", "spawn-sync": "^1.0.15", "which": "1.2.x"}, "devDependencies": {"assume": "1.4.x", "istanbul": "0.4.x", "mocha": "~3.2.0", "pre-commit": "git://github.com/observing/pre-commit.git"}, "releases": [{"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2018-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# pre-commit\n\n[![Version npm][version]](http://browsenpm.org/package/pre-commit)[![Build Status][build]](https://travis-ci.org/observing/pre-commit)[![Dependencies][david]](https://david-dm.org/observing/pre-commit)[![Coverage Status][cover]](https://coveralls.io/r/observing/pre-commit?branch=master)\n\n[version]: http://img.shields.io/npm/v/pre-commit.svg?style=flat-square\n[build]: http://img.shields.io/travis/observing/pre-commit/master.svg?style=flat-square\n[david]: https://img.shields.io/david/observing/pre-commit.svg?style=flat-square\n[cover]: http://img.shields.io/coveralls/observing/pre-commit/master.svg?style=flat-square\n\n**pre-commit** is a pre-commit hook installer for `git`. It will ensure that\nyour `npm test` (or other specified scripts) passes before you can commit your\nchanges. This all conveniently configured in your `package.json`.\n\nBut don't worry, you can still force a commit by telling `git` to skip the\n`pre-commit` hooks by simply committing using `--no-verify`.\n\n### Installation\n\nIt's advised to install the **pre-commit** module as a `devDependencies` in your\n`package.json` as you only need this for development purposes. To install the\nmodule simply run:\n\n```\nnpm install --save-dev pre-commit\n```\n\nTo install it as `devDependency`. When this module is installed it will override\nthe existing `pre-commit` file in your `.git/hooks` folder. Existing\n`pre-commit` hooks will be backed up as `pre-commit.old` in the same repository.\n\n### Configuration\n\n`pre-commit` will try to run your `npm test` command in the root of the git\nrepository by default unless it's the default value that is set by the `npm\ninit` script. \n\nBut `pre-commit` is not limited to just running your `npm test`'s during the\ncommit hook. It's also capable of running every other script that you've\nspecified in your `package.json` \"scripts\" field. So before people commit you\ncould ensure that:\n\n- You have 100% coverage\n- All styling passes.\n- JSHint passes.\n- Contribution licenses signed etc.\n\nThe only thing you need to do is add a `pre-commit` array to your `package.json`\nthat specifies which scripts you want to have ran and in which order:\n\n```js\n{\n  \"name\": \"437464d0899504fb6b7b\",\n  \"version\": \"0.0.0\",\n  \"description\": \"ERROR: No README.md file found!\",\n  \"main\": \"index.js\",\n  \"scripts\": {\n    \"test\": \"echo \\\"Error: I SHOULD FAIL LOLOLOLOLOL \\\" && exit 1\",\n    \"foo\": \"echo \\\"fooo\\\" && exit 0\",\n    \"bar\": \"echo \\\"bar\\\" && exit 0\"\n  },\n  \"pre-commit\": [\n    \"foo\",\n    \"bar\",\n    \"test\"\n  ]\n}\n```\n\nIn the example above, it will first run: `npm run foo` then `npm run bar` and\nfinally `npm run test` which will make the commit fail as it returns the error\ncode `1`.  If you prefer strings over arrays or `precommit` without a middle\ndash, that also works:\n\n```js\n{\n  \"precommit\": \"foo, bar, test\"\n  \"pre-commit\": \"foo, bar, test\"\n  \"pre-commit\": [\"foo\", \"bar\", \"test\"]\n  \"precommit\": [\"foo\", \"bar\", \"test\"],\n  \"precommit\": {\n    \"run\": \"foo, bar, test\",\n  },\n  \"pre-commit\": {\n    \"run\": [\"foo\", \"bar\", \"test\"],\n  },\n  \"precommit\": {\n    \"run\": [\"foo\", \"bar\", \"test\"],\n  },\n  \"pre-commit\": {\n    \"run\": \"foo, bar, test\",\n  }\n}\n```\n\nThe examples above are all the same. In addition to configuring which scripts\nshould be ran you can also configure the following options:\n\n- **silent** Don't output the prefixed `pre-commit:` messages when things fail\n  or when we have nothing to run. Should be a boolean.\n- **colors** Don't output colors when we write messages. Should be a boolean.\n- **template** Path to a file who's content should be used as template for the\n  git commit body.\n\nThese options can either be added in the `pre-commit`/`precommit` object as keys\nor as `\"pre-commit.{key}` key properties in the `package.json`:\n\n```js\n{\n  \"precommit.silent\": true,\n  \"pre-commit\": {\n    \"silent\": true\n  }\n}\n```\n\nIt's all the same. Different styles so use what matches your project. To learn\nmore about the scripts, please read the official `npm` documentation:\n\nhttps://npmjs.org/doc/scripts.html\n\nAnd to learn more about git hooks read:\n\nhttp://githooks.com\n\n### License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 45971}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 244521}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1003055}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 3061604}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 5739746}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 10900103}], "dependentsCount": 168, "starsCount": 92}, "github": {"starsCount": 1761, "forksCount": 169, "subscribersCount": 17, "issues": {"count": 148, "openCount": 61, "distribution": {"3600": 18, "10800": 8, "32400": 9, "97200": 11, "291600": 7, "874800": 4, "2624400": 7, "7873200": 13, "23619600": 7, "70858800": 25, "212576400": 39}, "isDisabled": false}, "contributors": [{"username": "3rd-Eden", "commitsCount": 100}, {"username": "Raynos", "commitsCount": 6}, {"username": "JGAntunes", "commitsCount": 5}, {"username": "greenkeeper[bot]", "commitsCount": 4}, {"username": "SergeL", "commitsCount": 2}, {"username": "fhemberger", "commitsCount": 2}, {"username": "Alex-Sokolov", "commitsCount": 1}, {"username": "AlexDisler", "commitsCount": 1}, {"username": "Qard", "commitsCount": 1}, {"username": "aceyoung9", "commitsCount": 1}, {"username": "akiva", "commitsCount": 1}, {"username": "alexindigo", "commitsCount": 1}, {"username": "antialias", "commitsCount": 1}, {"username": "barroudjo", "commitsCount": 1}, {"username": "bbondy", "commitsCount": 1}, {"username": "blacksonic", "commitsCount": 1}, {"username": "bregenspan", "commitsCount": 1}, {"username": "cvan", "commitsCount": 1}, {"username": "faazshift", "commitsCount": 1}, {"username": "filipbarak", "commitsCount": 1}, {"username": "jenkins-li-bot", "commitsCount": 1}, {"username": "jltalens", "commitsCount": 1}, {"username": "josegal", "commitsCount": 1}, {"username": "jpodwys", "commitsCount": 1}, {"username": "kevinoid", "commitsCount": 1}, {"username": "kriskowal", "commitsCount": 1}, {"username": "mcollina", "commitsCount": 1}, {"username": "saiichihashimoto", "commitsCount": 1}, {"username": "seriousManual", "commitsCount": 1}, {"username": "tassmjau", "commitsCount": 1}, {"username": "tikotzky", "commitsCount": 1}], "commits": [{"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4096, "testsSize": 6455, "hasChangelog": true}, "badges": [{"urls": {"original": "http://img.shields.io/npm/v/pre-commit.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/pre-commit.svg", "content": "https://img.shields.io/npm/v/pre-commit.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "http://img.shields.io/travis/observing/pre-commit/master.svg?style=flat-square", "service": "https://api.travis-ci.org/observing/pre-commit.svg?branch=master", "shields": "https://img.shields.io/travis/observing/pre-commit/master.svg", "content": "https://img.shields.io/travis/observing/pre-commit/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/observing/pre-commit.svg?style=flat-square", "service": "https://david-dm.org/observing/pre-commit.svg", "shields": "https://img.shields.io/david/observing/pre-commit.svg", "content": "https://img.shields.io/david/observing/pre-commit.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/coveralls/observing/pre-commit/master.svg?style=flat-square", "service": "https://coveralls.io/repos/observing/pre-commit/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/observing/pre-commit/master.svg", "content": "https://img.shields.io/coveralls/observing/pre-commit/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "coverage": 0.95, "outdatedDependencies": {"spawn-sync": {"required": "^1.0.15", "stable": "2.0.0", "latest": "2.0.0"}, "which": {"required": "1.2.x", "stable": "2.0.2", "latest": "2.0.2"}, "cross-spawn": {"required": "^5.0.1", "stable": "7.0.2", "latest": "7.0.2"}}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.9924999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 2070, "downloadsCount": 1020534.6666666666, "downloadsAcceleration": 1399.0131659056315, "dependentsCount": 168}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0.011506849315068493, "openIssues": 0.6463963963963963, "issuesDistribution": 0}}, "score": {"final": 0.4786850184470323, "detail": {"quality": 0.910726710868623, "popularity": 0.4000531391630393, "maintenance": 0.18699544708394772}}}}, {"karma-coverage-istanbul-reporter": {"analyzedAt": "2020-06-03T10:51:10.344Z", "collected": {"metadata": {"name": "karma-coverage-istanbul-reporter", "scope": "unscoped", "version": "3.0.3", "description": "A karma reporter that uses the latest istanbul 1.x APIs (with full sourcemap support) to report coverage.", "keywords": ["karma-plugin", "karma-reporter", "coverage", "istanbul", "istanbuljs"], "date": "2020-05-28T19:08:03.779Z", "author": {"name": "Matt Lewis"}, "publisher": {"username": "mattlewis92", "email": "npm@mattlewis.me"}, "maintainers": [{"username": "mattlewis92", "email": "matthew.lewis@socialsignin.co.uk"}], "repository": {"type": "git", "url": "git+https://github.com/mattlewis92/karma-coverage-istanbul-reporter.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-coverage-istanbul-reporter", "homepage": "https://github.com/mattlewis92/karma-coverage-istanbul-reporter#readme", "repository": "https://github.com/mattlewis92/karma-coverage-istanbul-reporter", "bugs": "https://github.com/mattlewis92/karma-coverage-istanbul-reporter/issues"}, "license": "MIT", "dependencies": {"istanbul-lib-coverage": "^3.0.0", "istanbul-lib-report": "^3.0.0", "istanbul-lib-source-maps": "^3.0.6", "istanbul-reports": "^3.0.2", "minimatch": "^3.0.4"}, "devDependencies": {"@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@commitlint/prompt": "^8.3.5", "@types/chai": "^4.2.11", "@types/mocha": "^7.0.2", "chai": "^4.2.0", "codecov": "^3.6.5", "commitizen": "^4.0.5", "coverage-istanbul-loader": "^3.0.3", "husky": "^4.2.5", "karma": "^5.0.4", "karma-mocha": "^2.0.1", "karma-phantomjs-launcher": "^1.0.2", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^4.0.2", "mocha": "^7.1.2", "nyc": "^15.0.1", "prettier": "^2.0.5", "pretty-quick": "^2.0.1", "rimraf": "^3.0.2", "sinon": "^9.0.2", "standard-version": "^7.1.0", "ts-loader": "^7.0.2", "tslint": "^6.1.2", "tslint-loader": "^3.6.0", "typescript": "^3.8.3", "webpack": "^4.43.0", "xo": "^0.30.0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# karma-coverage-istanbul-reporter\n\n[![Sponsorship](https://img.shields.io/badge/funding-github-%23EA4AAA)](https://github.com/users/mattlewis92/sponsorship)\n[![Build Status](https://travis-ci.org/mattlewis92/karma-coverage-istanbul-reporter.svg?branch=master)](https://travis-ci.org/mattlewis92/karma-coverage-istanbul-reporter)\n[![codecov](https://codecov.io/gh/mattlewis92/karma-coverage-istanbul-reporter/branch/master/graph/badge.svg)](https://codecov.io/gh/mattlewis92/karma-coverage-istanbul-reporter)\n[![npm version](https://badge.fury.io/js/karma-coverage-istanbul-reporter.svg)](http://badge.fury.io/js/karma-coverage-istanbul-reporter)\n[![npm](https://img.shields.io/npm/dm/karma-coverage-istanbul-reporter.svg)](http://badge.fury.io/js/karma-coverage-istanbul-reporter)\n[![Twitter Follow](https://img.shields.io/twitter/follow/mattlewis92_.svg)](https://twitter.com/mattlewis92_)\n\n> A karma reporter that uses the latest istanbul 1.x APIs (with full sourcemap support) to report coverage.\n\n## About\n\nThis is a reporter only and does not perform the actual instrumentation of your code. Babel users should use the [istanbul babel plugin](https://github.com/istanbuljs/babel-plugin-istanbul) to instrument your code and webpack + typescript users should use the [coverage-istanbul-loader](https://github.com/JS-DevTools/coverage-istanbul-loader) and then use this karma reporter to do the actual reporting. See the [test config](https://github.com/mattlewis92/karma-coverage-istanbul-reporter/blob/master/test/karma.conf.js) for an e2e example of how to combine them.\n\n## Installation\n\n```bash\nnpm install karma-coverage-istanbul-reporter --save-dev\n```\n\n## Configuration\n\n```js\n// karma.conf.js\nconst path = require('path');\n\nmodule.exports = function(config) {\n  config.set({\n    // ... rest of karma config\n\n    // anything named karma-* is normally auto included so you probably dont need this\n    plugins: ['karma-coverage-istanbul-reporter'],\n\n    reporters: ['coverage-istanbul'],\n\n    coverageIstanbulReporter: {\n      // reports can be any that are listed here: https://github.com/istanbuljs/istanbuljs/tree/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib\n      reports: ['html', 'lcovonly', 'text-summary'],\n\n      // base output directory. If you include %browser% in the path it will be replaced with the karma browser name\n      dir: path.join(__dirname, 'coverage'),\n\n      // Combines coverage information from multiple browsers into one report rather than outputting a report\n      // for each browser.\n      combineBrowserReports: true,\n\n      // if using webpack and pre-loaders, work around webpack breaking the source path\n      fixWebpackSourcePaths: true,\n\n      // Omit files with no statements, no functions and no branches covered from the report\n      skipFilesWithNoCoverage: true,\n\n      // Most reporters accept additional config options. You can pass these through the `report-config` option\n      'report-config': {\n        // all options available at: https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/html/index.js#L257-L261\n        html: {\n          // outputs the report in ./coverage/html\n          subdir: 'html'\n        }\n      },\n\n      // enforce percentage thresholds\n      // anything under these percentages will cause karma to fail with an exit code of 1 if not running in watch mode\n      thresholds: {\n        emitWarning: false, // set to `true` to not fail the test command when thresholds are not met\n        // thresholds for all files\n        global: {\n          statements: 100,\n          lines: 100,\n          branches: 100,\n          functions: 100\n        },\n        // thresholds per file\n        each: {\n          statements: 100,\n          lines: 100,\n          branches: 100,\n          functions: 100,\n          overrides: {\n            'baz/component/**/*.js': {\n              statements: 98\n            }\n          }\n        }\n      },\n\n      verbose: true // output config used by istanbul for debugging\n    }\n  });\n};\n```\n\n### List of reporters and options\n\n- [clover](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/clover/index.js#L14-L15)\n- [cobertura](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/cobertura/index.js#L16-L17)\n- [html-spa](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/html-spa/index.js#L47-L61)\n- [html](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/html/index.js#L257-L261)\n- [json-summary](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/json-summary/index.js#L12)\n- [json](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/json/index.js#L12)\n- [lcov](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/lcov/index.js#L13)\n- [lcovonly](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/lcovonly/index.js#L11-L12)\n- none\n- [teamcity](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/teamcity/index.js#L13-L14)\n- [text-lcov](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/text-lcov/index.js#L11)\n- [text-summary](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/text-summary/index.js#L13)\n- [text](https://github.com/istanbuljs/istanbuljs/blob/73c25ce79f91010d1ff073aa6ff3fd01114f90db/packages/istanbul-reports/lib/text/index.js#L231-L237)\n\n## Credits\n\n- [Original karma-coverage source](https://github.com/karma-runner/karma-coverage/blob/master/lib/reporter.js)\n- [Example of using the new reporter API](https://github.com/facebook/jest/blob/master/scripts/mapCoverage.js)\n- [Karma remap istanbul](https://github.com/marcules/karma-remap-istanbul)\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 211001}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1103246}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4887787}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 14343065}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 26505509}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 49642162}], "dependentsCount": 91, "starsCount": 2}, "github": {"starsCount": 146, "forksCount": 44, "subscribersCount": 3, "issues": {"count": 83, "openCount": 1, "distribution": {"3600": 23, "10800": 8, "32400": 12, "97200": 10, "291600": 11, "874800": 9, "2624400": 7, "7873200": 2, "23619600": 0, "70858800": 1, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "mattlewis92", "commitsCount": 52}, {"username": "peitschie", "commitsCount": 3}, {"username": "sebastianhaeni", "commitsCount": 2}, {"username": "CrisDan1905", "commitsCount": 1}, {"username": "JZ-at-TP", "commitsCount": 1}, {"username": "billowz", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "bryanforbes", "commitsCount": 1}, {"username": "grimly", "commitsCount": 1}, {"username": "lqc", "commitsCount": 1}, {"username": "wilgert", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 32}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6307, "testsSize": 30037, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/mattlewis92/karma-coverage-istanbul-reporter.svg?branch=master", "service": "https://api.travis-ci.org/mattlewis92/karma-coverage-istanbul-reporter.svg?branch=master", "shields": "https://img.shields.io/travis/mattlewis92/karma-coverage-istanbul-reporter/master.svg", "content": "https://img.shields.io/travis/mattlewis92/karma-coverage-istanbul-reporter/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-coverage-istanbul-reporter.svg", "shields": "https://img.shields.io/npm/dm/karma-coverage-istanbul-reporter.svg", "content": "https://img.shields.io/npm/dm/karma-coverage-istanbul-reporter.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["prettier", "tslint", "xo"], "coverage": 0, "outdatedDependencies": {"istanbul-lib-source-maps": {"required": "^3.0.6", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 206, "downloadsCount": 4781021.666666667, "downloadsAcceleration": 9541.80363394216, "dependentsCount": 91}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9971448692497262}}, "score": {"final": 0.7804689777795797, "detail": {"quality": 0.9659171759565057, "popularity": 0.4019955141303502, "maintenance": 0.9999868429914442}}}}, {"q": {"analyzedAt": "2020-05-06T21:49:32.998Z", "collected": {"metadata": {"name": "q", "scope": "unscoped", "version": "1.5.1", "description": "A library for promises (CommonJS/Promises/A,B,D)", "keywords": ["q", "promise", "promises", "promises-a", "promises-aplus", "deferred", "future", "async", "flow control", "fluent", "browser", "node"], "date": "2017-10-19T17:55:37.072Z", "author": {"name": "Kris Kowal", "email": "kris@cixar.com", "url": "https://github.com/kriskowal"}, "publisher": {"username": "kriskowal", "email": "kris.kowal@cixar.com"}, "maintainers": [{"username": "kriskowal", "email": "kris.kowal@cixar.com"}, {"username": "domenic", "email": "domenic@domenicdenicola.com"}], "contributors": [{"name": "Kris Kowal", "email": "kris@cixar.com", "url": "https://github.com/kriskowal"}, {"name": "Irakli Gozalishvili", "email": "rfobic@gmail.com", "url": "http://jeditoolkit.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com", "url": "http://domenicdenicola.com"}], "repository": {"type": "git", "url": "git://github.com/kriskowal/q.git"}, "links": {"npm": "https://www.npmjs.com/package/q", "homepage": "https://github.com/kriskowal/q", "repository": "https://github.com/kriskowal/q", "bugs": "http://github.com/kriskowal/q/issues"}, "license": "MIT", "devDependencies": {"cover": "*", "grunt": "~0.4.1", "grunt-cli": "~0.1.9", "grunt-contrib-uglify": "~0.9.1", "jasmine-node": "1.11.0", "jshint": "~2.1.9", "matcha": "~0.2.0", "opener": "*", "promises-aplus-tests": "1.x"}, "releases": [{"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2018-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Build Status](https://secure.travis-ci.org/kriskowal/q.svg?branch=master)](http://travis-ci.org/kriskowal/q)\n[![CDNJS](https://img.shields.io/cdnjs/v/q.js.svg)](https://cdnjs.com/libraries/q.js)\n\n<a href=\"http://promises-aplus.github.com/promises-spec\">\n    <img src=\"http://kriskowal.github.io/q/q.png\" align=\"right\" alt=\"Q logo\" />\n</a>\n\nIf a function cannot return a value or throw an exception without\nblocking, it can return a promise instead.  A promise is an object\nthat represents the return value or the thrown exception that the\nfunction may eventually provide.  A promise can also be used as a\nproxy for a [remote object][Q-Connection] to overcome latency.\n\n[Q-Connection]: https://github.com/kriskowal/q-connection\n\nOn the first pass, promises can mitigate the \u201c[Pyramid of\nDoom][POD]\u201d: the situation where code marches to the right faster\nthan it marches forward.\n\n[POD]: http://calculist.org/blog/2011/12/14/why-coroutines-wont-work-on-the-web/\n\n```javascript\nstep1(function (value1) {\n    step2(value1, function(value2) {\n        step3(value2, function(value3) {\n            step4(value3, function(value4) {\n                // Do something with value4\n            });\n        });\n    });\n});\n```\n\nWith a promise library, you can flatten the pyramid.\n\n```javascript\nQ.fcall(promisedStep1)\n.then(promisedStep2)\n.then(promisedStep3)\n.then(promisedStep4)\n.then(function (value4) {\n    // Do something with value4\n})\n.catch(function (error) {\n    // Handle any error from all above steps\n})\n.done();\n```\n\nWith this approach, you also get implicit error propagation, just like `try`,\n`catch`, and `finally`.  An error in `promisedStep1` will flow all the way to\nthe `catch` function, where it\u2019s caught and handled.  (Here `promisedStepN` is\na version of `stepN` that returns a promise.)\n\nThe callback approach is called an \u201cinversion of control\u201d.\nA function that accepts a callback instead of a return value\nis saying, \u201cDon\u2019t call me, I\u2019ll call you.\u201d.  Promises\n[un-invert][IOC] the inversion, cleanly separating the input\narguments from control flow arguments.  This simplifies the\nuse and creation of API\u2019s, particularly variadic,\nrest and spread arguments.\n\n[IOC]: http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript\n\n\n## Getting Started\n\nThe Q module can be loaded as:\n\n-   A ``<script>`` tag (creating a ``Q`` global variable): ~2.5 KB minified and\n    gzipped.\n-   A Node.js and CommonJS module, available in [npm](https://npmjs.org/) as\n    the [q](https://npmjs.org/package/q) package\n-   An AMD module\n-   A [component](https://github.com/component/component) as ``microjs/q``\n-   Using [bower](http://bower.io/) as `q#^1.4.1`\n-   Using [NuGet](http://nuget.org/) as [Q](https://nuget.org/packages/q)\n\nQ can exchange promises with jQuery, Dojo, When.js, WinJS, and more.\n\n## Resources\n\nOur [wiki][] contains a number of useful resources, including:\n\n- A method-by-method [Q API reference][reference].\n- A growing [examples gallery][examples], showing how Q can be used to make\n  everything better. From XHR to database access to accessing the Flickr API,\n  Q is there for you.\n- There are many libraries that produce and consume Q promises for everything\n  from file system/database access or RPC to templating. For a list of some of\n  the more popular ones, see [Libraries][].\n- If you want materials that introduce the promise concept generally, and the\n  below tutorial isn't doing it for you, check out our collection of\n  [presentations, blog posts, and podcasts][resources].\n- A guide for those [coming from jQuery's `$.Deferred`][jquery].\n\nWe'd also love to have you join the Q-Continuum [mailing list][].\n\n[wiki]: https://github.com/kriskowal/q/wiki\n[reference]: https://github.com/kriskowal/q/wiki/API-Reference\n[examples]: https://github.com/kriskowal/q/wiki/Examples-Gallery\n[Libraries]: https://github.com/kriskowal/q/wiki/Libraries\n[resources]: https://github.com/kriskowal/q/wiki/General-Promise-Resources\n[jquery]: https://github.com/kriskowal/q/wiki/Coming-from-jQuery\n[mailing list]: https://groups.google.com/forum/#!forum/q-continuum\n\n\n## Tutorial\n\nPromises have a ``then`` method, which you can use to get the eventual\nreturn value (fulfillment) or thrown exception (rejection).\n\n```javascript\npromiseMeSomething()\n.then(function (value) {\n}, function (reason) {\n});\n```\n\nIf ``promiseMeSomething`` returns a promise that gets fulfilled later\nwith a return value, the first function (the fulfillment handler) will be\ncalled with the value.  However, if the ``promiseMeSomething`` function\ngets rejected later by a thrown exception, the second function (the\nrejection handler) will be called with the exception.\n\nNote that resolution of a promise is always asynchronous: that is, the\nfulfillment or rejection handler will always be called in the next turn of the\nevent loop (i.e. `process.nextTick` in Node). This gives you a nice\nguarantee when mentally tracing the flow of your code, namely that\n``then`` will always return before either handler is executed.\n\nIn this tutorial, we begin with how to consume and work with promises. We'll\ntalk about how to create them, and thus create functions like\n`promiseMeSomething` that return promises, [below](#the-beginning).\n\n\n### Propagation\n\nThe ``then`` method returns a promise, which in this example, I\u2019m\nassigning to ``outputPromise``.\n\n```javascript\nvar outputPromise = getInputPromise()\n.then(function (input) {\n}, function (reason) {\n});\n```\n\nThe ``outputPromise`` variable becomes a new promise for the return\nvalue of either handler.  Since a function can only either return a\nvalue or throw an exception, only one handler will ever be called and it\nwill be responsible for resolving ``outputPromise``.\n\n-   If you return a value in a handler, ``outputPromise`` will get\n    fulfilled.\n\n-   If you throw an exception in a handler, ``outputPromise`` will get\n    rejected.\n\n-   If you return a **promise** in a handler, ``outputPromise`` will\n    \u201cbecome\u201d that promise.  Being able to become a new promise is useful\n    for managing delays, combining results, or recovering from errors.\n\nIf the ``getInputPromise()`` promise gets rejected and you omit the\nrejection handler, the **error** will go to ``outputPromise``:\n\n```javascript\nvar outputPromise = getInputPromise()\n.then(function (value) {\n});\n```\n\nIf the input promise gets fulfilled and you omit the fulfillment handler, the\n**value** will go to ``outputPromise``:\n\n```javascript\nvar outputPromise = getInputPromise()\n.then(null, function (error) {\n});\n```\n\nQ promises provide a ``fail`` shorthand for ``then`` when you are only\ninterested in handling the error:\n\n```javascript\nvar outputPromise = getInputPromise()\n.fail(function (error) {\n});\n```\n\nIf you are writing JavaScript for modern engines only or using\nCoffeeScript, you may use `catch` instead of `fail`.\n\nPromises also have a ``fin`` function that is like a ``finally`` clause.\nThe final handler gets called, with no arguments, when the promise\nreturned by ``getInputPromise()`` either returns a value or throws an\nerror.  The value returned or error thrown by ``getInputPromise()``\npasses directly to ``outputPromise`` unless the final handler fails, and\nmay be delayed if the final handler returns a promise.\n\n```javascript\nvar outputPromise = getInputPromise()\n.fin(function () {\n    // close files, database connections, stop servers, conclude tests\n});\n```\n\n-   If the handler returns a value, the value is ignored\n-   If the handler throws an error, the error passes to ``outputPromise``\n-   If the handler returns a promise, ``outputPromise`` gets postponed.  The\n    eventual value or error has the same effect as an immediate return\n    value or thrown error: a value would be ignored, an error would be\n    forwarded.\n\nIf you are writing JavaScript for modern engines only or using\nCoffeeScript, you may use `finally` instead of `fin`.\n\n### Chaining\n\nThere are two ways to chain promises.  You can chain promises either\ninside or outside handlers.  The next two examples are equivalent.\n\n```javascript\nreturn getUsername()\n.then(function (username) {\n    return getUser(username)\n    .then(function (user) {\n        // if we get here without an error,\n        // the value returned here\n        // or the exception thrown here\n        // resolves the promise returned\n        // by the first line\n    })\n});\n```\n\n```javascript\nreturn getUsername()\n.then(function (username) {\n    return getUser(username);\n})\n.then(function (user) {\n    // if we get here without an error,\n    // the value returned here\n    // or the exception thrown here\n    // resolves the promise returned\n    // by the first line\n});\n```\n\nThe only difference is nesting.  It\u2019s useful to nest handlers if you\nneed to capture multiple input values in your closure.\n\n```javascript\nfunction authenticate() {\n    return getUsername()\n    .then(function (username) {\n        return getUser(username);\n    })\n    // chained because we will not need the user name in the next event\n    .then(function (user) {\n        return getPassword()\n        // nested because we need both user and password next\n        .then(function (password) {\n            if (user.passwordHash !== hash(password)) {\n                throw new Error(\"Can't authenticate\");\n            }\n        });\n    });\n}\n```\n\n\n### Combination\n\nYou can turn an array of promises into a promise for the whole,\nfulfilled array using ``all``.\n\n```javascript\nreturn Q.all([\n    eventualAdd(2, 2),\n    eventualAdd(10, 20)\n]);\n```\n\nIf you have a promise for an array, you can use ``spread`` as a\nreplacement for ``then``.  The ``spread`` function \u201cspreads\u201d the\nvalues over the arguments of the fulfillment handler.  The rejection handler\nwill get called at the first sign of failure.  That is, whichever of\nthe received promises fails first gets handled by the rejection handler.\n\n```javascript\nfunction eventualAdd(a, b) {\n    return Q.spread([a, b], function (a, b) {\n        return a + b;\n    })\n}\n```\n\nBut ``spread`` calls ``all`` initially, so you can skip it in chains.\n\n```javascript\nreturn getUsername()\n.then(function (username) {\n    return [username, getUser(username)];\n})\n.spread(function (username, user) {\n});\n```\n\nThe ``all`` function returns a promise for an array of values.  When this\npromise is fulfilled, the array contains the fulfillment values of the original\npromises, in the same order as those promises.  If one of the given promises\nis rejected, the returned promise is immediately rejected, not waiting for the\nrest of the batch.  If you want to wait for all of the promises to either be\nfulfilled or rejected, you can use ``allSettled``.\n\n```javascript\nQ.allSettled(promises)\n.then(function (results) {\n    results.forEach(function (result) {\n        if (result.state === \"fulfilled\") {\n            var value = result.value;\n        } else {\n            var reason = result.reason;\n        }\n    });\n});\n```\n\nThe ``any`` function accepts an array of promises and returns a promise that is\nfulfilled by the first given promise to be fulfilled, or rejected if all of the\ngiven promises are rejected.\n\n```javascript\nQ.any(promises)\n.then(function (first) {\n    // Any of the promises was fulfilled.\n}, function (error) {\n    // All of the promises were rejected.\n});\n```\n\n### Sequences\n\nIf you have a number of promise-producing functions that need\nto be run sequentially, you can of course do so manually:\n\n```javascript\nreturn foo(initialVal).then(bar).then(baz).then(qux);\n```\n\nHowever, if you want to run a dynamically constructed sequence of\nfunctions, you'll want something like this:\n\n```javascript\nvar funcs = [foo, bar, baz, qux];\n\nvar result = Q(initialVal);\nfuncs.forEach(function (f) {\n    result = result.then(f);\n});\nreturn result;\n```\n\nYou can make this slightly more compact using `reduce`:\n\n```javascript\nreturn funcs.reduce(function (soFar, f) {\n    return soFar.then(f);\n}, Q(initialVal));\n```\n\nOr, you could use the ultra-compact version:\n\n```javascript\nreturn funcs.reduce(Q.when, Q(initialVal));\n```\n\n### Handling Errors\n\nOne sometimes-unintuitive aspect of promises is that if you throw an\nexception in the fulfillment handler, it will not be caught by the error\nhandler.\n\n```javascript\nreturn foo()\n.then(function (value) {\n    throw new Error(\"Can't bar.\");\n}, function (error) {\n    // We only get here if \"foo\" fails\n});\n```\n\nTo see why this is, consider the parallel between promises and\n``try``/``catch``. We are ``try``-ing to execute ``foo()``: the error\nhandler represents a ``catch`` for ``foo()``, while the fulfillment handler\nrepresents code that happens *after* the ``try``/``catch`` block.\nThat code then needs its own ``try``/``catch`` block.\n\nIn terms of promises, this means chaining your rejection handler:\n\n```javascript\nreturn foo()\n.then(function (value) {\n    throw new Error(\"Can't bar.\");\n})\n.fail(function (error) {\n    // We get here with either foo's error or bar's error\n});\n```\n\n### Progress Notification\n\nIt's possible for promises to report their progress, e.g. for tasks that take a\nlong time like a file upload. Not all promises will implement progress\nnotifications, but for those that do, you can consume the progress values using\na third parameter to ``then``:\n\n```javascript\nreturn uploadFile()\n.then(function () {\n    // Success uploading the file\n}, function (err) {\n    // There was an error, and we get the reason for error\n}, function (progress) {\n    // We get notified of the upload's progress as it is executed\n});\n```\n\nLike `fail`, Q also provides a shorthand for progress callbacks\ncalled `progress`:\n\n```javascript\nreturn uploadFile().progress(function (progress) {\n    // We get notified of the upload's progress\n});\n```\n\n### The End\n\nWhen you get to the end of a chain of promises, you should either\nreturn the last promise or end the chain.  Since handlers catch\nerrors, it\u2019s an unfortunate pattern that the exceptions can go\nunobserved.\n\nSo, either return it,\n\n```javascript\nreturn foo()\n.then(function () {\n    return \"bar\";\n});\n```\n\nOr, end it.\n\n```javascript\nfoo()\n.then(function () {\n    return \"bar\";\n})\n.done();\n```\n\nEnding a promise chain makes sure that, if an error doesn\u2019t get\nhandled before the end, it will get rethrown and reported.\n\nThis is a stopgap. We are exploring ways to make unhandled errors\nvisible without any explicit handling.\n\n\n### The Beginning\n\nEverything above assumes you get a promise from somewhere else.  This\nis the common case.  Every once in a while, you will need to create a\npromise from scratch.\n\n#### Using ``Q.fcall``\n\nYou can create a promise from a value using ``Q.fcall``.  This returns a\npromise for 10.\n\n```javascript\nreturn Q.fcall(function () {\n    return 10;\n});\n```\n\nYou can also use ``fcall`` to get a promise for an exception.\n\n```javascript\nreturn Q.fcall(function () {\n    throw new Error(\"Can't do it\");\n});\n```\n\nAs the name implies, ``fcall`` can call functions, or even promised\nfunctions.  This uses the ``eventualAdd`` function above to add two\nnumbers.\n\n```javascript\nreturn Q.fcall(eventualAdd, 2, 2);\n```\n\n\n#### Using Deferreds\n\nIf you have to interface with asynchronous functions that are callback-based\ninstead of promise-based, Q provides a few shortcuts (like ``Q.nfcall`` and\nfriends). But much of the time, the solution will be to use *deferreds*.\n\n```javascript\nvar deferred = Q.defer();\nFS.readFile(\"foo.txt\", \"utf-8\", function (error, text) {\n    if (error) {\n        deferred.reject(new Error(error));\n    } else {\n        deferred.resolve(text);\n    }\n});\nreturn deferred.promise;\n```\n\nNote that a deferred can be resolved with a value or a promise.  The\n``reject`` function is a shorthand for resolving with a rejected\npromise.\n\n```javascript\n// this:\ndeferred.reject(new Error(\"Can't do it\"));\n\n// is shorthand for:\nvar rejection = Q.fcall(function () {\n    throw new Error(\"Can't do it\");\n});\ndeferred.resolve(rejection);\n```\n\nThis is a simplified implementation of ``Q.delay``.\n\n```javascript\nfunction delay(ms) {\n    var deferred = Q.defer();\n    setTimeout(deferred.resolve, ms);\n    return deferred.promise;\n}\n```\n\nThis is a simplified implementation of ``Q.timeout``\n\n```javascript\nfunction timeout(promise, ms) {\n    var deferred = Q.defer();\n    Q.when(promise, deferred.resolve);\n    delay(ms).then(function () {\n        deferred.reject(new Error(\"Timed out\"));\n    });\n    return deferred.promise;\n}\n```\n\nFinally, you can send a progress notification to the promise with\n``deferred.notify``.\n\nFor illustration, this is a wrapper for XML HTTP requests in the browser. Note\nthat a more [thorough][XHR] implementation would be in order in practice.\n\n[XHR]: https://github.com/montagejs/mr/blob/71e8df99bb4f0584985accd6f2801ef3015b9763/browser.js#L29-L73\n\n```javascript\nfunction requestOkText(url) {\n    var request = new XMLHttpRequest();\n    var deferred = Q.defer();\n\n    request.open(\"GET\", url, true);\n    request.onload = onload;\n    request.onerror = onerror;\n    request.onprogress = onprogress;\n    request.send();\n\n    function onload() {\n        if (request.status === 200) {\n            deferred.resolve(request.responseText);\n        } else {\n            deferred.reject(new Error(\"Status code was \" + request.status));\n        }\n    }\n\n    function onerror() {\n        deferred.reject(new Error(\"Can't XHR \" + JSON.stringify(url)));\n    }\n\n    function onprogress(event) {\n        deferred.notify(event.loaded / event.total);\n    }\n\n    return deferred.promise;\n}\n```\n\nBelow is an example of how to use this ``requestOkText`` function:\n\n```javascript\nrequestOkText(\"http://localhost:3000\")\n.then(function (responseText) {\n    // If the HTTP response returns 200 OK, log the response text.\n    console.log(responseText);\n}, function (error) {\n    // If there's an error or a non-200 status code, log the error.\n    console.error(error);\n}, function (progress) {\n    // Log the progress as it comes in.\n    console.log(\"Request progress: \" + Math.round(progress * 100) + \"%\");\n});\n```\n\n#### Using `Q.Promise`\n\nThis is an alternative promise-creation API that has the same power as\nthe deferred concept, but without introducing another conceptual entity.\n\nRewriting the `requestOkText` example above using `Q.Promise`:\n\n```javascript\nfunction requestOkText(url) {\n    return Q.Promise(function(resolve, reject, notify) {\n        var request = new XMLHttpRequest();\n\n        request.open(\"GET\", url, true);\n        request.onload = onload;\n        request.onerror = onerror;\n        request.onprogress = onprogress;\n        request.send();\n\n        function onload() {\n            if (request.status === 200) {\n                resolve(request.responseText);\n            } else {\n                reject(new Error(\"Status code was \" + request.status));\n            }\n        }\n\n        function onerror() {\n            reject(new Error(\"Can't XHR \" + JSON.stringify(url)));\n        }\n\n        function onprogress(event) {\n            notify(event.loaded / event.total);\n        }\n    });\n}\n```\n\nIf `requestOkText` were to throw an exception, the returned promise would be\nrejected with that thrown exception as the rejection reason.\n\n### The Middle\n\nIf you are using a function that may return a promise, but just might\nreturn a value if it doesn\u2019t need to defer, you can use the \u201cstatic\u201d\nmethods of the Q library.\n\nThe ``when`` function is the static equivalent for ``then``.\n\n```javascript\nreturn Q.when(valueOrPromise, function (value) {\n}, function (error) {\n});\n```\n\nAll of the other methods on a promise have static analogs with the\nsame name.\n\nThe following are equivalent:\n\n```javascript\nreturn Q.all([a, b]);\n```\n\n```javascript\nreturn Q.fcall(function () {\n    return [a, b];\n})\n.all();\n```\n\nWhen working with promises provided by other libraries, you should\nconvert it to a Q promise.  Not all promise libraries make the same\nguarantees as Q and certainly don\u2019t provide all of the same methods.\nMost libraries only provide a partially functional ``then`` method.\nThis thankfully is all we need to turn them into vibrant Q promises.\n\n```javascript\nreturn Q($.ajax(...))\n.then(function () {\n});\n```\n\nIf there is any chance that the promise you receive is not a Q promise\nas provided by your library, you should wrap it using a Q function.\nYou can even use ``Q.invoke`` as a shorthand.\n\n```javascript\nreturn Q.invoke($, 'ajax', ...)\n.then(function () {\n});\n```\n\n\n### Over the Wire\n\nA promise can serve as a proxy for another object, even a remote\nobject.  There are methods that allow you to optimistically manipulate\nproperties or call functions.  All of these interactions return\npromises, so they can be chained.\n\n```\ndirect manipulation         using a promise as a proxy\n--------------------------  -------------------------------\nvalue.foo                   promise.get(\"foo\")\nvalue.foo = value           promise.put(\"foo\", value)\ndelete value.foo            promise.del(\"foo\")\nvalue.foo(...args)          promise.post(\"foo\", [args])\nvalue.foo(...args)          promise.invoke(\"foo\", ...args)\nvalue(...args)              promise.fapply([args])\nvalue(...args)              promise.fcall(...args)\n```\n\nIf the promise is a proxy for a remote object, you can shave\nround-trips by using these functions instead of ``then``.  To take\nadvantage of promises for remote objects, check out [Q-Connection][].\n\n[Q-Connection]: https://github.com/kriskowal/q-connection\n\nEven in the case of non-remote objects, these methods can be used as\nshorthand for particularly-simple fulfillment handlers. For example, you\ncan replace\n\n```javascript\nreturn Q.fcall(function () {\n    return [{ foo: \"bar\" }, { foo: \"baz\" }];\n})\n.then(function (value) {\n    return value[0].foo;\n});\n```\n\nwith\n\n```javascript\nreturn Q.fcall(function () {\n    return [{ foo: \"bar\" }, { foo: \"baz\" }];\n})\n.get(0)\n.get(\"foo\");\n```\n\n\n### Adapting Node\n\nIf you're working with functions that make use of the Node.js callback pattern,\nwhere callbacks are in the form of `function(err, result)`, Q provides a few\nuseful utility functions for converting between them. The most straightforward\nare probably `Q.nfcall` and `Q.nfapply` (\"Node function call/apply\") for calling\nNode.js-style functions and getting back a promise:\n\n```javascript\nreturn Q.nfcall(FS.readFile, \"foo.txt\", \"utf-8\");\nreturn Q.nfapply(FS.readFile, [\"foo.txt\", \"utf-8\"]);\n```\n\nIf you are working with methods, instead of simple functions, you can easily\nrun in to the usual problems where passing a method to another function\u2014like\n`Q.nfcall`\u2014\"un-binds\" the method from its owner. To avoid this, you can either\nuse `Function.prototype.bind` or some nice shortcut methods we provide:\n\n```javascript\nreturn Q.ninvoke(redisClient, \"get\", \"user:1:id\");\nreturn Q.npost(redisClient, \"get\", [\"user:1:id\"]);\n```\n\nYou can also create reusable wrappers with `Q.denodeify` or `Q.nbind`:\n\n```javascript\nvar readFile = Q.denodeify(FS.readFile);\nreturn readFile(\"foo.txt\", \"utf-8\");\n\nvar redisClientGet = Q.nbind(redisClient.get, redisClient);\nreturn redisClientGet(\"user:1:id\");\n```\n\nFinally, if you're working with raw deferred objects, there is a\n`makeNodeResolver` method on deferreds that can be handy:\n\n```javascript\nvar deferred = Q.defer();\nFS.readFile(\"foo.txt\", \"utf-8\", deferred.makeNodeResolver());\nreturn deferred.promise;\n```\n\n### Long Stack Traces\n\nQ comes with optional support for \u201clong stack traces,\u201d wherein the `stack`\nproperty of `Error` rejection reasons is rewritten to be traced along\nasynchronous jumps instead of stopping at the most recent one. As an example:\n\n```js\nfunction theDepthsOfMyProgram() {\n  Q.delay(100).done(function explode() {\n    throw new Error(\"boo!\");\n  });\n}\n\ntheDepthsOfMyProgram();\n```\n\nusually would give a rather unhelpful stack trace looking something like\n\n```\nError: boo!\n    at explode (/path/to/test.js:3:11)\n    at _fulfilled (/path/to/test.js:q:54)\n    at resolvedValue.promiseDispatch.done (/path/to/q.js:823:30)\n    at makePromise.promise.promiseDispatch (/path/to/q.js:496:13)\n    at pending (/path/to/q.js:397:39)\n    at process.startup.processNextTick.process._tickCallback (node.js:244:9)\n```\n\nBut, if you turn this feature on by setting\n\n```js\nQ.longStackSupport = true;\n```\n\nthen the above code gives a nice stack trace to the tune of\n\n```\nError: boo!\n    at explode (/path/to/test.js:3:11)\nFrom previous event:\n    at theDepthsOfMyProgram (/path/to/test.js:2:16)\n    at Object.<anonymous> (/path/to/test.js:7:1)\n```\n\nNote how you can see the function that triggered the async operation in the\nstack trace! This is very helpful for debugging, as otherwise you end up getting\nonly the first line, plus a bunch of Q internals, with no sign of where the\noperation started.\n\nIn node.js, this feature can also be enabled through the Q_DEBUG environment\nvariable:\n\n```\nQ_DEBUG=1 node server.js\n```\n\nThis will enable long stack support in every instance of Q.\n\nThis feature does come with somewhat-serious performance and memory overhead,\nhowever. If you're working with lots of promises, or trying to scale a server\nto many users, you should probably keep it off. But in development, go for it!\n\n## Tests\n\nYou can view the results of the Q test suite [in your browser][tests]!\n\n[tests]: https://rawgithub.com/kriskowal/q/v1/spec/q-spec.html\n\n## License\n\nCopyright 2009\u20132017 Kristopher Michael Kowal and contributors\nMIT License (enclosed)"}, "npm": {"downloads": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 1874314}, {"from": "2020-04-29T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 9905649}, {"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 43655382}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 124925212}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 220017878}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 411035542}], "dependentsCount": 7777, "starsCount": 425}, "github": {"homepage": "http://documentup.com/kriskowal/q/", "starsCount": 14812, "forksCount": 1237, "subscribersCount": 444, "issues": {"count": 844, "openCount": 118, "distribution": {"3600": 116, "10800": 50, "32400": 54, "97200": 80, "291600": 76, "874800": 110, "2624400": 83, "7873200": 86, "23619600": 48, "70858800": 22, "212576400": 119}, "isDisabled": false}, "contributors": [{"username": "kriskowal", "commitsCount": 346}, {"username": "domenic", "commitsCount": 207}, {"username": "rkatic", "commitsCount": 25}, {"username": "kahnvex", "commitsCount": 10}, {"username": "jbunton-atlassian", "commitsCount": 6}, {"username": "ef4", "commitsCount": 4}, {"username": "erights", "commitsCount": 4}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "anton-rudeshko", "commitsCount": 3}, {"username": "erikvold", "commitsCount": 3}, {"username": "ivanetchart", "commitsCount": 3}, {"username": "rictic", "commitsCount": 3}, {"username": "timruffles", "commitsCount": 3}, {"username": "wmertens", "commitsCount": 3}, {"username": "amZotti", "commitsCount": 2}, {"username": "benjamn", "commitsCount": 2}, {"username": "davidpadbury", "commitsCount": 2}, {"username": "dfilatov", "commitsCount": 2}, {"username": "jrburke", "commitsCount": 2}, {"username": "lekoaf", "commitsCount": 2}, {"username": "vilic", "commitsCount": 2}, {"username": "wizardwerdna", "commitsCount": 2}, {"username": "Constellation", "commitsCount": 1}, {"username": "DerekDomino", "commitsCount": 1}, {"username": "MattiSG", "commitsCount": 1}, {"username": "NickHeiner", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "Redsandro", "commitsCount": 1}, {"username": "SLaks", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "alippai", "commitsCount": 1}, {"username": "artemv", "commitsCount": 1}, {"username": "beaugunderson", "commitsCount": 1}, {"username": "benjamingr", "commitsCount": 1}, {"username": "c0bra", "commitsCount": 1}, {"username": "chrisvogt", "commitsCount": 1}, {"username": "danielmoore", "commitsCount": 1}, {"username": "davis", "commitsCount": 1}, {"username": "duizendnegen", "commitsCount": 1}, {"username": "ehpc", "commitsCount": 1}, {"username": "fabslab", "commitsCount": 1}, {"username": "fiznool", "commitsCount": 1}, {"username": "geowa4", "commitsCount": 1}, {"username": "grahamrhay", "commitsCount": 1}, {"username": "iamwilhelm", "commitsCount": 1}, {"username": "jgrenon", "commitsCount": 1}, {"username": "jimCresswell", "commitsCount": 1}, {"username": "jimt", "commitsCount": 1}, {"username": "jlongster", "commitsCount": 1}, {"username": "josephlin55555", "commitsCount": 1}, {"username": "kennynaoh", "commitsCount": 1}, {"username": "kornelski", "commitsCount": 1}, {"username": "marchant", "commitsCount": 1}, {"username": "mariotsi", "commitsCount": 1}, {"username": "mdlavin", "commitsCount": 1}, {"username": "passy", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "pskupinski", "commitsCount": 1}, {"username": "qiutiaoming", "commitsCount": 1}, {"username": "reconbot", "commitsCount": 1}, {"username": "ruffle1986", "commitsCount": 1}, {"username": "ryanwitt", "commitsCount": 1}, {"username": "schwolf", "commitsCount": 1}, {"username": "stubbornella", "commitsCount": 1}, {"username": "talkingtab", "commitsCount": 1}, {"username": "terinjokes", "commitsCount": 1}, {"username": "v0lkan", "commitsCount": 1}, {"username": "vergara", "commitsCount": 1}, {"username": "wingo", "commitsCount": 1}], "commits": [{"from": "2020-04-29T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-04-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2020-02-06T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-11-08T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}, {"from": "2019-05-07T00:00:00.000Z", "to": "2020-05-06T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 25386, "testsSize": 192209, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/kriskowal/q.svg?branch=master", "service": "https://api.travis-ci.org/kriskowal/q.svg?branch=master", "shields": "https://img.shields.io/travis/kriskowal/q/master.svg", "content": "https://img.shields.io/travis/kriskowal/q/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["jshint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 16987, "downloadsCount": 41641737.333333336, "downloadsAcceleration": 106312.8498097412, "dependentsCount": 7777}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6512841862361565, "detail": {"quality": 0.9650973074985816, "popularity": 0.85439578533448, "maintenance": 0.1791899117700401}}}}, {"@babel/register": {"analyzedAt": "2020-06-04T16:58:35.468Z", "collected": {"metadata": {"name": "@babel/register", "scope": "babel", "version": "7.10.1", "description": "babel require hook", "date": "2020-05-27T22:06:51.873Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-register"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fregister", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^2.0.0", "lodash": "^4.17.13", "make-dir": "^2.1.0", "pirates": "^4.0.0", "source-map-support": "^0.5.16"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "browserify": "16.5.0", "default-require-extensions": "^2.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 27}], "readme": "# @babel/register\n\n> babel require hook\n\nSee our website [@babel/register](https://babeljs.io/docs/en/next/babel-register.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20register%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/register\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/register --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 451720}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2395107}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10390008}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 30247919}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 51790874}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 86459633}], "dependentsCount": 881, "starsCount": 2}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36705, "forksCount": 4307, "subscribersCount": 866, "issues": {"count": 11596, "openCount": 781, "distribution": {"3600": 2461, "10800": 916, "32400": 1062, "97200": 1239, "291600": 1053, "874800": 1006, "2624400": 849, "7873200": 805, "23619600": 845, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 436, "testsSize": 7783, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"make-dir": {"required": "^2.1.0", "stable": "3.1.0", "latest": "3.1.0"}, "find-cache-dir": {"required": "^2.0.0", "stable": "3.3.1", "latest": "3.3.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 41979, "downloadsCount": 10082639.666666666, "downloadsAcceleration": 40077.316019786915, "dependentsCount": 881}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24000529405616738}}, "score": {"final": 0.8330159176140661, "detail": {"quality": 0.8959065649329994, "popularity": 0.7221844358259379, "maintenance": 0.8899411302716802}}}}, {"chai-as-promised": {"analyzedAt": "2020-06-13T14:23:48.814Z", "collected": {"metadata": {"name": "chai-as-promised", "scope": "unscoped", "version": "7.1.1", "description": "Extends Chai with assertions about promises.", "keywords": ["chai", "chai-plugin", "browser", "async", "testing", "assertions", "promises", "promises-aplus"], "date": "2017-07-05T00:31:09.013Z", "author": {"name": "Domenic Denicola", "email": "d@domenic.me", "url": "https://domenic.me"}, "publisher": {"username": "domenic", "email": "d@domenic.me"}, "maintainers": [{"username": "domenic", "email": "domenic@domenicdenicola.com"}], "repository": {"type": "git", "url": "git+https://github.com/domenic/chai-as-promised.git"}, "links": {"npm": "https://www.npmjs.com/package/chai-as-promised", "homepage": "https://github.com/domenic/chai-as-promised#readme", "repository": "https://github.com/domenic/chai-as-promised", "bugs": "https://github.com/domenic/chai-as-promised/issues"}, "license": "WTFPL", "dependencies": {"check-error": "^1.0.2"}, "devDependencies": {"chai": "^4.0.2", "eslint": "^3.19.0", "istanbul": "0.4.5", "mocha": "^3.4.2"}, "peerDependencies": {"chai": ">= 2.1.2 < 5"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<a href=\"http://promisesaplus.com/\">\n    <img src=\"https://promises-aplus.github.io/promises-spec/assets/logo-small.png\"\n         align=\"right\" valign=\"top\" alt=\"Promises/A+ logo\" />\n</a>\n\n# Chai Assertions for Promises\n\n**Chai as Promised** extends [Chai](http://chaijs.com/) with a fluent language for asserting facts about [promises](http://www.slideshare.net/domenicdenicola/callbacks-promises-and-coroutines-oh-my-the-evolution-of-asynchronicity-in-javascript).\n\nInstead of manually wiring up your expectations to a promise's fulfilled and rejected handlers:\n\n```javascript\ndoSomethingAsync().then(\n    function (result) {\n        result.should.equal(\"foo\");\n        done();\n    },\n    function (err) {\n       done(err);\n    }\n);\n```\n\nyou can write code that expresses what you really mean:\n\n```javascript\nreturn doSomethingAsync().should.eventually.equal(\"foo\");\n```\n\nor if you have a case where `return` is not preferable (e.g. style considerations) or not possible (e.g. the testing framework doesn't allow returning promises to signal asynchronous test completion), then you can use the following workaround (where `done()` is supplied by the test framework):\n\n```javascript\ndoSomethingAsync().should.eventually.equal(\"foo\").notify(done);\n```\n\n*Notice*: either `return` or `notify(done)` _must_ be used with promise assertions. This can be a slight departure from the existing format of assertions being used on a project or by a team. Those other assertions are likely synchronous and thus do not require special handling.\n\n## How to Use\n\n### `should`/`expect` Interface\n\nThe most powerful extension provided by Chai as Promised is the `eventually` property. With it, you can transform any existing Chai assertion into one that acts on a promise:\n\n```javascript\n(2 + 2).should.equal(4);\n\n// becomes\nreturn Promise.resolve(2 + 2).should.eventually.equal(4);\n\n\nexpect({ foo: \"bar\" }).to.have.property(\"foo\");\n\n// becomes\nreturn expect(Promise.resolve({ foo: \"bar\" })).to.eventually.have.property(\"foo\");\n```\n\nThere are also a few promise-specific extensions (with the usual `expect` equivalents also available):\n\n```javascript\nreturn promise.should.be.fulfilled;\nreturn promise.should.eventually.deep.equal(\"foo\");\nreturn promise.should.become(\"foo\"); // same as `.eventually.deep.equal`\nreturn promise.should.be.rejected;\nreturn promise.should.be.rejectedWith(Error); // other variants of Chai's `throw` assertion work too.\n```\n\n### `assert` Interface\n\nAs with the `should`/`expect` interface, Chai as Promised provides an `eventually` extender to `chai.assert`, allowing any existing Chai assertion to be used on a promise:\n\n```javascript\nassert.equal(2 + 2, 4, \"This had better be true\");\n\n// becomes\nreturn assert.eventually.equal(Promise.resolve(2 + 2), 4, \"This had better be true, eventually\");\n```\n\nAnd there are, of course, promise-specific extensions:\n\n```javascript\nreturn assert.isFulfilled(promise, \"optional message\");\n\nreturn assert.becomes(promise, \"foo\", \"optional message\");\nreturn assert.doesNotBecome(promise, \"foo\", \"optional message\");\n\nreturn assert.isRejected(promise, \"optional message\");\nreturn assert.isRejected(promise, Error, \"optional message\");\nreturn assert.isRejected(promise, /error message matcher/, \"optional message\");\n```\n\n### Progress Callbacks\n\nChai as Promised does not have any intrinsic support for testing promise progress callbacks. The properties you would want to test are probably much better suited to a library like [Sinon.JS](http://sinonjs.org/), perhaps in conjunction with [Sinon\u2013Chai](https://github.com/domenic/sinon-chai):\n\n```javascript\nvar progressSpy = sinon.spy();\n\nreturn promise.then(null, null, progressSpy).then(function () {\n    progressSpy.should.have.been.calledWith(\"33%\");\n    progressSpy.should.have.been.calledWith(\"67%\");\n    progressSpy.should.have.been.calledThrice;\n});\n```\n\n### Customizing Output Promises\n\nBy default, the promises returned by Chai as Promised's assertions are regular Chai assertion objects, extended with a single `then` method derived from the input promise. To change this behavior, for instance to output a promise with more useful sugar methods such as are found in most promise libraries, you can override `chaiAsPromised.transferPromiseness`. Here's an example that transfer's Q's `finally` and `done` methods:\n\n```js\nchaiAsPromised.transferPromiseness = function (assertion, promise) {\n    assertion.then = promise.then.bind(promise); // this is all you get by default\n    assertion.finally = promise.finally.bind(promise);\n    assertion.done = promise.done.bind(promise);\n};\n```\n\n### Transforming Arguments to the Asserters\n\nAnother advanced customization hook Chai as Promised allows is if you want to transform the arguments to the asserters, possibly asynchronously. Here is a toy example:\n\n```js\nchaiAsPromised.transformAsserterArgs = function (args) {\n    return args.map(function (x) { return x + 1; });\n}\n\nPromise.resolve(2).should.eventually.equal(2); // will now fail!\nPromise.resolve(3).should.eventually.equal(2); // will now pass!\n```\n\nThe transform can even be asynchronous, returning a promise for an array instead of an array directly. An example of that might be using `Promise.all` so that an array of promises becomes a promise for an array. If you do that, then you can compare promises against other promises using the asserters:\n\n```js\n// This will normally fail, since within() only works on numbers.\nPromise.resolve(2).should.eventually.be.within(Promise.resolve(1), Promise.resolve(6));\n\nchaiAsPromised.transformAsserterArgs = function (args) {\n    return Promise.all(args);\n};\n\n// But now it will pass, since we transformed the array of promises for numbers into\n// (a promise for) an array of numbers\nPromise.resolve(2).should.eventually.be.within(Promise.resolve(1), Promise.resolve(6));\n```\n\n### Compatibility\n\nChai as Promised is compatible with all promises following the [Promises/A+ specification](http://promisesaplus.com/).\n\nNotably, jQuery's promises were not up to spec before jQuery 3.0, and Chai as Promised will not work with them. In particular, Chai as Promised makes extensive use of the standard [transformation behavior](http://domenic.me/2012/10/14/youre-missing-the-point-of-promises/#toc_2) of `then`, which jQuery<3.0 does not support.\n\nAngular promises have a special digest cycle for their processing, and [need extra setup code to work with Chai as Promised](http://stackoverflow.com/a/37374041/3191).\n\n### Working with Non-Promise\u2013Friendly Test Runners\n\nSome test runners (e.g. Jasmine, QUnit, or tap/tape) do not have the ability to use the returned promise to signal asynchronous test completion. If possible, I'd recommend switching to ones that do, such as [Mocha](http://mochajs.org/#asynchronous-code), [Buster](http://docs.busterjs.org/en/latest/modules/buster-test/spec/#returning-a-promise), or [blue-tape](https://github.com/spion/blue-tape). But if that's not an option, Chai as Promised still has you covered. As long as your test framework takes a callback indicating when the asynchronous test run is over, Chai as Promised can adapt to that situation with its `notify` method, like so:\n\n```javascript\nit(\"should be fulfilled\", function (done) {\n    promise.should.be.fulfilled.and.notify(done);\n});\n\nit(\"should be rejected\", function (done) {\n    otherPromise.should.be.rejected.and.notify(done);\n});\n```\n\nIn these examples, if the conditions are not met, the test runner will receive an error of the form `\"expected promise to be fulfilled but it was rejected with [Error: error message]\"`, or `\"expected promise to be rejected but it was fulfilled.\"`\n\nThere's another form of `notify` which is useful in certain situations, like doing assertions after a promise is complete. For example:\n\n```javascript\nit(\"should change the state\", function (done) {\n    otherState.should.equal(\"before\");\n    promise.should.be.fulfilled.then(function () {\n        otherState.should.equal(\"after\");\n    }).should.notify(done);\n});\n```\n\nNotice how `.notify(done)` is hanging directly off of `.should`, instead of appearing after a promise assertion. This indicates to Chai as Promised that it should pass fulfillment or rejection directly through to the testing framework. Thus, the above code will fail with a Chai as Promised error (`\"expected promise to be fulfilled\u2026\"`) if `promise` is rejected, but will fail with a simple Chai error (`expected \"before\" to equal \"after\"`) if `otherState` does not change.\n\n### Multiple Promise Assertions\n\nTo perform assertions on multiple promises, use `Promise.all` to combine multiple Chai as Promised assertions:\n\n```javascript\nit(\"should all be well\", function () {\n    return Promise.all([\n        promiseA.should.become(\"happy\"),\n        promiseB.should.eventually.have.property(\"fun times\"),\n        promiseC.should.be.rejectedWith(TypeError, \"only joyful types are allowed\")\n    ]);\n});\n```\n\nThis will pass any failures of the individual promise assertions up to the test framework, instead of wrapping them in an `\"expected promise to be fulfilled\u2026\"` message as would happen if you did `return Promise.all([\u2026]).should.be.fulfilled`. If you can't use `return`, then use `.should.notify(done)`, similar to the previous examples.\n\n## Installation and Setup\n\n### Node\n\nDo an `npm install chai-as-promised` to get up and running. Then:\n\n```javascript\nvar chai = require(\"chai\");\nvar chaiAsPromised = require(\"chai-as-promised\");\n\nchai.use(chaiAsPromised);\n\n// Then either:\nvar expect = chai.expect;\n// or:\nvar assert = chai.assert;\n// or:\nchai.should();\n// according to your preference of assertion style\n```\n\nYou can of course put this code in a common test fixture file; for an example using [Mocha](http://mochajs.org), see [the Chai as Promised tests themselves](https://github.com/domenic/chai-as-promised/tree/master/test/).\n\n**Note when using other Chai plugins:** Chai as Promised finds all currently-registered asserters and promisifies them, at the time it is installed. Thus, you should install Chai as Promised _last_, after any other Chai plugins, if you expect their asserters to be promisified.\n\n### In the Browser\n\nTo use Chai as Promised in environments that don't support Node.js-like CommonJS modules, you'll need to use a bundling tool like [browserify](http://browserify.org/). See also the note below about browser compatibility.\n\n### Karma\n\nIf you're using [Karma](https://karma-runner.github.io/), check out the accompanying [karma-chai-as-promised](https://github.com/vlkosinov/karma-chai-as-promised) plugin.\n\n### Browser/Node Compatibility\n\nChai as Promised requires Node v4+ or a browser with equivalent support for modern JavaScript syntax. If your browser doesn't support modern JavaScript syntax, you'll need to transpile it down using a tool like [Babel](http://babeljs.io/)."}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 122615}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 756793}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3239977}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9591821}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 17896469}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 32497117}], "dependentsCount": 516, "starsCount": 60}, "github": {"starsCount": 1373, "forksCount": 112, "subscribersCount": 17, "issues": {"count": 262, "openCount": 25, "distribution": {"3600": 52, "10800": 20, "32400": 24, "97200": 25, "291600": 19, "874800": 21, "2624400": 22, "7873200": 25, "23619600": 20, "70858800": 19, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "domenic", "commitsCount": 152}, {"username": "lddubeau", "commitsCount": 12}, {"username": "groner", "commitsCount": 2}, {"username": "martletandco", "commitsCount": 2}, {"username": "matthijsgroen", "commitsCount": 2}, {"username": "meeber", "commitsCount": 2}, {"username": "Cycymomo", "commitsCount": 1}, {"username": "James-Firth", "commitsCount": 1}, {"username": "Ryckes", "commitsCount": 1}, {"username": "btbonval", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "ikhemissi", "commitsCount": 1}, {"username": "jamiemill", "commitsCount": 1}, {"username": "jedwards1211", "commitsCount": 1}, {"username": "joshperry", "commitsCount": 1}, {"username": "keithamus", "commitsCount": 1}, {"username": "klamping", "commitsCount": 1}, {"username": "leedm777", "commitsCount": 1}, {"username": "mgol", "commitsCount": 1}, {"username": "raine", "commitsCount": 1}, {"username": "robotlolita", "commitsCount": 1}, {"username": "scottohara", "commitsCount": 1}, {"username": "sebv", "commitsCount": 1}, {"username": "stalniy", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 10826, "testsSize": 61277}, "linters": ["editorconfig", "eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 1586, "downloadsCount": 3197273.6666666665, "downloadsAcceleration": 7339.416647640795, "dependentsCount": 516}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5134284661922643, "detail": {"quality": 0.8697851183040051, "popularity": 0.49232179152568273, "maintenance": 0.22908658190592543}}}}, {"rollup-plugin-uglify": {"analyzedAt": "2020-06-14T15:37:27.258Z", "collected": {"metadata": {"name": "rollup-plugin-uglify", "scope": "unscoped", "version": "6.0.4", "description": "Rollup plugin to minify generated bundle", "keywords": ["rollup", "rollup-plugin", "uglify", "minify"], "date": "2019-12-11T10:20:03.069Z", "author": {"name": "Bogdan Chadkin", "email": "trysound@yandex.ru", "username": "trysound"}, "publisher": {"username": "trysound", "email": "trysound@yandex.ru"}, "maintainers": [{"username": "trysound", "email": "trysound@yandex.ru"}], "repository": {"type": "git", "url": "git+https://github.com/TrySound/rollup-plugin-uglify.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-uglify", "homepage": "https://github.com/TrySound/rollup-plugin-uglify#readme", "repository": "https://github.com/TrySound/rollup-plugin-uglify", "bugs": "https://github.com/TrySound/rollup-plugin-uglify/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "jest-worker": "^24.0.0", "serialize-javascript": "^2.1.2", "uglify-js": "^3.4.9"}, "devDependencies": {"@babel/core": "^7.2.2", "@babel/preset-env": "^7.3.1", "babel-jest": "^24.0.0", "jest": "^24.0.0", "prettier": "^1.16.1", "rollup": "^1.27.10"}, "peerDependencies": {"rollup": ">=0.66.0 <2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-uglify [![Travis Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/TrySound/rollup-plugin-uglify.svg\n[travis]: https://travis-ci.org/TrySound/rollup-plugin-uglify\n\n[Rollup](https://github.com/rollup/rollup) plugin to minify generated bundle. Uses [UglifyJS](https://github.com/mishoo/UglifyJS2) under the hood. There are a few improvements over native uglify:\n\n* uglify is run in worker for every chunk\n* errors are displayed with [babel code frame](https://babeljs.io/docs/en/next/babel-code-frame.html)\n\n_Note: uglify-js is able to transpile only es5 syntax. If you want to transpile es6+ syntax use [terser](https://github.com/TrySound/rollup-plugin-terser) instead_\n\n## Install\n\n```sh\nyarn add rollup-plugin-uglify --dev\n```\n\n*Note: this package requires rollup@0.66 and higher*\n\n## Usage\n\n```js\nimport { rollup } from \"rollup\";\nimport { uglify } from \"rollup-plugin-uglify\";\n\nrollup({\n  input: \"main.js\",\n  plugins: [uglify()]\n});\n```\n\n## Options\n\n```js\nuglify(options);\n```\n\n`options` - [uglifyJS API options](https://github.com/mishoo/UglifyJS2/blob/master/README.md#minify-options)\n\n`options.sourcemap: boolean`\n\nGenerates source maps and passes them to rollup. Defaults to `true`.\n\n`options.numWorkers: number`\n\nAmount of workers to spawn. Defaults to the number of CPUs minus 1.\n\n\n## Examples\n\n### Comments\n\nIf you'd like to preserve comments (for licensing for example), then you can specify a function to do this like so:\n\n```js\nuglify({\n  output: {\n    comments: function(node, comment) {\n      if (comment.type === \"comment2\") {\n        // multiline comment\n        return /@preserve|@license|@cc_on/i.test(comment.value);\n      }\n      return false;\n    }\n  }\n});\n```\n\nAlternatively, you can also choose to keep all comments (e.g. if a licensing header has already been prepended by a previous rollup plugin):\n\n```js\nuglify({\n  output: {\n    comments: \"all\"\n  }\n});\n```\n\nSee [UglifyJS documentation](https://github.com/mishoo/UglifyJS2/blob/master/README.md) for further reference.\n\n# License\n\nMIT \u00a9 [Bogdan Chadkin](mailto:trysound@yandex.ru)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2684}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 52278}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 223462}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 755510}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1495177}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3144759}], "dependentsCount": 318, "starsCount": 8}, "github": {"starsCount": 233, "forksCount": 29, "subscribersCount": 3, "issues": {"count": 82, "openCount": 6, "distribution": {"3600": 23, "10800": 5, "32400": 8, "97200": 6, "291600": 8, "874800": 7, "2624400": 7, "7873200": 3, "23619600": 8, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "TrySound", "commitsCount": 62}, {"username": "davidkna", "commitsCount": 3}, {"username": "Andarist", "commitsCount": 2}, {"username": "Grawl", "commitsCount": 2}, {"username": "ratson", "commitsCount": 2}, {"username": "anmonteiro", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "dbrgn", "commitsCount": 1}, {"username": "jltrv", "commitsCount": 1}, {"username": "kentcdodds", "commitsCount": 1}, {"username": "kzc", "commitsCount": 1}, {"username": "lc-soft", "commitsCount": 1}, {"username": "patrickarlt", "commitsCount": 1}, {"username": "uorbe001", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 6}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 2098, "testsSize": 4089}, "badges": [{"urls": {"original": "https://travis-ci.org/TrySound/rollup-plugin-uglify.svg", "service": "https://api.travis-ci.org/TrySound/rollup-plugin-uglify.svg", "shields": "https://img.shields.io/travis/TrySound/rollup-plugin-uglify.svg", "content": "https://img.shields.io/travis/TrySound/rollup-plugin-uglify.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["prettier"], "outdatedDependencies": {"serialize-javascript": {"required": "^2.1.2", "stable": "4.0.0", "latest": "4.0.0"}, "jest-worker": {"required": "^24.0.0", "stable": "26.0.0", "latest": "26.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 287, "downloadsCount": 251836.66666666666, "downloadsAcceleration": -369.07098554033473, "dependentsCount": 318}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7141524193134725, "detail": {"quality": 0.8942454362629071, "popularity": 0.2740479297123077, "maintenance": 0.9998914658151222}}}}, {"gulp-concat": {"analyzedAt": "2020-06-16T21:54:59.199Z", "collected": {"metadata": {"name": "gulp-concat", "scope": "unscoped", "version": "2.6.1", "description": "Concatenates files", "keywords": ["gulpplugin"], "date": "2016-11-13T18:53:13.734Z", "author": {"name": "Contra", "email": "yo@contra.io", "url": "http://contra.io/"}, "publisher": {"username": "contra", "email": "contra@wearefractal.com"}, "maintainers": [{"username": "contra", "email": "contra@wearefractal.com"}, {"username": "fractal", "email": "contact@wearefractal.com"}], "repository": {"type": "git", "url": "git+https://github.com/contra/gulp-concat.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-concat", "homepage": "https://github.com/contra/gulp-concat#readme", "repository": "https://github.com/contra/gulp-concat", "bugs": "https://github.com/contra/gulp-concat/issues"}, "license": "MIT", "dependencies": {"concat-with-sourcemaps": "^1.0.0", "through2": "^2.0.0", "vinyl": "^2.0.0"}, "devDependencies": {"gulp": "^3.8.7", "gulp-sourcemaps": "^2.2.0", "istanbul": "^0.4.5", "mocha": "^3.0.0", "mocha-lcov-reporter": "^1.2.0", "should": "^11.0.0", "stream-array": "^1.0.1", "stream-assert": "^2.0.1"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "![status](https://secure.travis-ci.org/contra/gulp-concat.svg?branch=master)\n\n## Installation\n\nInstall package with NPM and add it to your development dependencies:\n\n`npm install --save-dev gulp-concat`\n\n## Information\n\n<table>\n<tr>\n<td>Package</td><td>gulp-concat</td>\n</tr>\n<tr>\n<td>Description</td>\n<td>Concatenates files</td>\n</tr>\n<tr>\n<td>Node Version</td>\n<td>>= 0.10</td>\n</tr>\n</table>\n\n## Usage\n\n```js\nvar concat = require('gulp-concat');\n\ngulp.task('scripts', function() {\n  return gulp.src('./lib/*.js')\n    .pipe(concat('all.js'))\n    .pipe(gulp.dest('./dist/'));\n});\n```\n\nThis will concat files by your operating systems newLine. It will take the base directory from the first file that passes through it.\n\nFiles will be concatenated in the order that they are specified in the `gulp.src` function. For example, to concat `./lib/file3.js`, `./lib/file1.js` and `./lib/file2.js` in that order, the following code will create a task to do that:\n\n```js\nvar concat = require('gulp-concat');\n\ngulp.task('scripts', function() {\n  return gulp.src(['./lib/file3.js', './lib/file1.js', './lib/file2.js'])\n    .pipe(concat('all.js'))\n    .pipe(gulp.dest('./dist/'));\n});\n```\n\nTo change the newLine simply pass an object as the second argument to concat with newLine being whatever (\\r\\n if you want to support any OS to look at it)\n\nFor instance:\n\n```js\n.pipe(concat('main.js', {newLine: ';'}))\n```\n\nTo specify `cwd`, `path` and other [vinyl](https://github.com/wearefractal/vinyl) properties, gulp-concat accepts `Object` as first argument:\n\n```js\nvar concat = require('gulp-concat');\n\ngulp.task('scripts', function() {\n  return gulp.src(['./lib/file3.js', './lib/file1.js', './lib/file2.js'])\n    .pipe(concat({ path: 'new.js', stat: { mode: 0666 }}))\n    .pipe(gulp.dest('./dist'));\n});\n```\n\nThis will concat files into `./dist/new.js`.\n\n### Source maps\n\nSource maps can be generated by using [gulp-sourcemaps](https://www.npmjs.org/package/gulp-sourcemaps):\n\n```js\nvar gulp = require('gulp');\nvar concat = require('gulp-concat');\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('javascript', function() {\n  return gulp.src('src/**/*.js')\n    .pipe(sourcemaps.init())\n      .pipe(concat('all.js'))\n    .pipe(sourcemaps.write())\n    .pipe(gulp.dest('dist'));\n});\n```"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 85158}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 455962}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1916731}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 5850344}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 10926928}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 21389054}], "dependentsCount": 1511, "starsCount": 451}, "github": {"starsCount": 775, "forksCount": 134, "subscribersCount": 15, "issues": {"count": 152, "openCount": 13, "distribution": {"3600": 28, "10800": 20, "32400": 29, "97200": 24, "291600": 5, "874800": 9, "2624400": 5, "7873200": 6, "23619600": 10, "70858800": 6, "212576400": 10}, "isDisabled": false}, "contributors": [{"username": "contra", "commitsCount": 41}, {"username": "igorklopov", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 6}, {"username": "Splaktar", "commitsCount": 3}, {"username": "floatdrop", "commitsCount": 3}, {"username": "floridoo", "commitsCount": 3}, {"username": "stevelacy", "commitsCount": 3}, {"username": "KenanY", "commitsCount": 2}, {"username": "callumacrae", "commitsCount": 2}, {"username": "dapetcu21", "commitsCount": 2}, {"username": "jedmao", "commitsCount": 2}, {"username": "tracker1", "commitsCount": 2}, {"username": "c0", "commitsCount": 1}, {"username": "caiotoon", "commitsCount": 1}, {"username": "colynb", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "evansd", "commitsCount": 1}, {"username": "fritx", "commitsCount": 1}, {"username": "glcheetham", "commitsCount": 1}, {"username": "hzlmn", "commitsCount": 1}, {"username": "jsdevel", "commitsCount": 1}, {"username": "kahwee", "commitsCount": 1}, {"username": "kirill-konshin", "commitsCount": 1}, {"username": "kud", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "sturobson", "commitsCount": 1}, {"username": "t1st3", "commitsCount": 1}, {"username": "thewarpaint", "commitsCount": 1}, {"username": "umaar", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 2281, "testsSize": 6396}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/contra/gulp-concat.svg?branch=master", "service": "https://api.travis-ci.org/contra/gulp-concat.svg?branch=master", "shields": "https://img.shields.io/travis/contra/gulp-concat/master.svg", "content": "https://img.shields.io/travis/contra/gulp-concat/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"], "outdatedDependencies": {"through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 1404, "downloadsCount": 1950114.6666666667, "downloadsAcceleration": 1848.9732496194829, "dependentsCount": 1511}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7938811423706391, "detail": {"quality": 0.9104828095994476, "popularity": 0.4879265327300347, "maintenance": 0.9998914658151222}}}}, {"babel-plugin-external-helpers": {"analyzedAt": "2020-03-21T10:36:46.859Z", "collected": {"metadata": {"name": "babel-plugin-external-helpers", "scope": "unscoped", "version": "6.22.0", "description": "This plugin contains helper functions that\u2019ll be placed at the top of the generated code", "keywords": ["babel-plugin"], "date": "2017-01-20T00:33:42.657Z", "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-external-helpers", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-runtime": "^6.22.0"}, "devDependencies": {"babel-helper-plugin-test-runner": "^6.22.0"}, "releases": [{"from": "2020-02-20T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 0}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 0}, {"from": "2019-09-23T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 0}, {"from": "2019-03-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 0}, {"from": "2018-03-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 1}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2020-03-20T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 0}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 34732}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 205462}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 592822}, {"from": "2019-09-23T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 1278898}, {"from": "2019-03-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 3349872}], "dependentsCount": 274, "starsCount": 3}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36060, "forksCount": 4154, "subscribersCount": 881, "issues": {"count": 11246, "openCount": 741, "distribution": {"3600": 2424, "10800": 888, "32400": 1031, "97200": 1184, "291600": 1020, "874800": 969, "2624400": 810, "7873200": 757, "23619600": 844, "70858800": 1087, "212576400": 232}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1258}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "existentialism", "commitsCount": 444}, {"username": "nicolo-ribaudo", "commitsCount": 437}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "amasad", "commitsCount": 172}, {"username": "JLHwung", "commitsCount": 153}, {"username": "jridgewell", "commitsCount": 145}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 66}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "jmm", "commitsCount": 49}, {"username": "Andarist", "commitsCount": 47}, {"username": "motiz88", "commitsCount": 36}, {"username": "babel-bot", "commitsCount": 35}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 33}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "aretecode", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "grdnrt", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-03-14T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 47}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 88}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 236}, {"from": "2019-09-23T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 458}, {"from": "2019-03-22T00:00:00.000Z", "to": "2020-03-21T00:00:00.000Z", "count": 731}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 18695048, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.92}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.988, "health": 1, "branding": 0}, "popularity": {"communityInterest": 41197, "downloadsCount": 197607.33333333334, "downloadsAcceleration": -1100.435197869102, "dependentsCount": 274}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2602566683677485}}, "error": {"name": "TimeoutError", "code": "ETIMEDOUT", "host": "api.github.com", "hostname": "api.github.com", "method": "GET", "path": "/repos/babel/babel/issues?state=all&per_page=100&page=17", "protocol": "https:", "url": "https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=17", "gotOptions": {"path": "/repos/babel/babel/issues?state=all&per_page=100&page=17", "protocol": "https:", "slashes": true, "auth": null, "host": "api.github.com", "port": null, "hostname": "api.github.com", "hash": null, "search": "?state=all&per_page=100&page=17", "pathname": "/repos/babel/babel/issues", "href": "https://api.github.com/repos/babel/babel/issues?state=all&per_page=100&page=17", "retry": {"methods": {}, "statusCodes": {}, "errorCodes": {}, "maxRetryAfter": 15000}, "headers": {"user-agent": "got/9.6.0 (https://github.com/sindresorhus/got)", "accept": "application/vnd.github.v3+json", "authorization": "token 76699396e3e06b81817921fe6c5b9a071686d287", "accept-encoding": "gzip, deflate"}, "hooks": {"beforeRequest": [], "beforeRedirect": [], "beforeRetry": [], "afterResponse": [], "beforeError": [], "init": []}, "decompress": true, "throwHttpErrors": true, "followRedirect": true, "stream": false, "form": false, "json": true, "cache": false, "useElectronNet": false, "gotTimeout": {"request": 15000}, "method": "GET", "forceRefresh": true}, "event": "request", "message": "Timeout awaiting 'request' for 15000ms", "stack": "TimeoutError: Timeout awaiting 'request' for 15000ms\n    at ClientRequest.request.once.error (/home/analyzer/npms-analyzer/source/node_modules/got/source/request-as-event-emitter.js:176:14)\n    at Object.onceWrapper (events.js:281:20)\n    at ClientRequest.emit (events.js:198:15)\n    at ClientRequest.origin.emit.args (/home/analyzer/npms-analyzer/source/node_modules/@szmarczak/http-timer/source/index.js:37:11)\n    at Immediate.timeoutHandler (/home/analyzer/npms-analyzer/source/node_modules/got/source/utils/timed-out.js:63:11)\n    at Immediate.args.(anonymous function) [as _onImmediate] (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:445:19)\nFrom previous event:\n    at new PCancelable (/home/analyzer/npms-analyzer/source/node_modules/p-cancelable/index.js:30:19)\n    at asPromise (/home/analyzer/npms-analyzer/source/node_modules/got/source/as-promise.js:14:18)\n    at getPromiseOrStream (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:9:76)\n    at Object.defaults.handler (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:27:41)\n    at got (/home/analyzer/npms-analyzer/source/node_modules/got/source/create.js:32:20)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:23:16)\n    at Promise.resolve.then (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:17)\nFrom previous event:\n    at dealToken (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:75:6)\n    at tokenDealer (/home/analyzer/npms-analyzer/source/node_modules/token-dealer/index.js:115:12)\n    at doRequest (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:14:12)\n    at /home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:130:13\n    at el (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:59)\n    at Promise.resolve.then.el (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:16)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:46:5)\n    at Promise.resolve.then.then.val (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:51:6)\nFrom previous event:\n    at next (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:47:5)\n    at Promise (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:61:3)\nFrom previous event:\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-map/index.js:2:46)\n    at module.exports (/home/analyzer/npms-analyzer/source/node_modules/p-all/index.js:4:38)\n    at doRequest.then (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:134:16)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at ghIssueStats (/home/analyzer/npms-analyzer/source/node_modules/gh-issues-stats/index.js:124:6)\n    at fetchIssuesStats (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:125:12)\n    at Object.github (/home/analyzer/npms-analyzer/source/lib/analyze/collect/github.js:199:22)\n    at checkRepositoryOwnership.then (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:95:53)\nFrom previous event:\n    at collect (/home/analyzer/npms-analyzer/source/lib/analyze/collect/index.js:89:6)\n    at download.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:163:13)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:162:10)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\n    at Object.onceWrapper (events.js:281:20)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-06T19:15:36.127Z"}, "score": {"final": 0.6260546432824015, "detail": {"quality": 0.8883395082420256, "popularity": 0.4441935496735646, "maintenance": 0.5831001383544177}}}}, {"commitizen": {"analyzedAt": "2020-05-08T03:04:01.047Z", "collected": {"metadata": {"name": "commitizen", "scope": "unscoped", "version": "4.1.2", "description": "Git commit, but play nice with conventions.", "keywords": ["commit", "pretty", "format", "conventional changelog", "commitizen"], "date": "2020-05-05T12:17:07.283Z", "author": {"name": "Jim Cummins", "email": "jimthedev@gmail.com", "url": "https://github.com/jimthedev", "username": "jimthedev"}, "publisher": {"username": "commitizen-bot", "email": "jimthedev+commitizen-bot@gmail.com"}, "maintainers": [{"username": "commitizen-bot", "email": "kent+commitizen-bot@doddsfamily.us"}, {"username": "jimthedev", "email": "jimthedev@gmail.com"}, {"username": "kentcdodds", "email": "kent@doddsfamily.us"}, {"username": "linusu", "email": "linus@folkdatorn.se"}, {"username": "pgoodjohn", "email": "info@pietrobongiovanni.com"}], "repository": {"type": "git", "url": "git+https://github.com/commitizen/cz-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/commitizen", "homepage": "https://github.com/commitizen/cz-cli", "repository": "https://github.com/commitizen/cz-cli", "bugs": "https://github.com/commitizen/cz-cli/issues"}, "license": "MIT", "dependencies": {"cachedir": "2.2.0", "cz-conventional-changelog": "3.2.0", "dedent": "0.7.0", "detect-indent": "6.0.0", "find-node-modules": "2.0.0", "find-root": "1.1.0", "fs-extra": "8.1.0", "glob": "7.1.4", "inquirer": "6.5.0", "is-utf8": "^0.2.1", "lodash": "4.17.15", "minimist": "1.2.5", "strip-bom": "4.0.0", "strip-json-comments": "3.0.1"}, "devDependencies": {"@babel/cli": "^7.1.0", "@babel/core": "^7.1.0", "@babel/plugin-proposal-object-rest-spread": "7.9.0", "@babel/preset-env": "^7.1.0", "@babel/register": "^7.0.0", "@istanbuljs/nyc-config-babel": "2.1.1", "axios": "0.19.0", "babel-plugin-istanbul": "5.1.4", "chai": "^4.1.2", "codecov.io": "0.1.6", "cz-conventional-changelog-default-export": "0.0.0-semantically-released.1", "ghooks": "^2.0.4", "in-publish": "^2.0.0", "mocha": "6.2.0", "mocha-junit-reporter": "^1.18.0", "mocha-multi-reporters": "^1.1.7", "nodemon": "1.19.1", "nyc": "15.0.1", "proxyquire": "^2.1.0", "semantic-release": "15.13.18", "semver": "6.2.0", "sinon": "^6.3.4", "uuid": "3.3.2"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 23}], "hasTestScript": true, "readme": "## Commitizen for contributors\n\nWhen you commit with Commitizen, you'll be prompted to fill out any required commit fields at commit time. No more waiting until later for a git commit hook to run and reject your commit (though [that](https://github.com/kentcdodds/validate-commit-msg) can still be helpful). No more digging through [CONTRIBUTING.md](CONTRIBUTING.md) to find what the preferred format is. Get instant feedback on your commit message formatting and be prompted for required fields.\n\n[![Backers on Open Collective](https://opencollective.com/commitizen/backers/badge.svg)](#backers) [![Sponsors on Open Collective](https://opencollective.com/commitizen/sponsors/badge.svg)](#sponsors) [![travis.ci](https://img.shields.io/travis/commitizen/cz-cli.svg?style=flat-square&branch=master)](https://travis-ci.org/commitizen/cz-cli) [![Azure Build Status](https://dev.azure.com/commitizen/cz-cli/_apis/build/status/commitizen.cz-cli?branchName=master)](https://dev.azure.com/commitizen/cz-cli/_build/latest?definitionId=2)\n[![codecov.io](https://img.shields.io/codecov/c/github/commitizen/cz-cli.svg?style=flat-square)](https://codecov.io/github/commitizen/cz-cli?branch=master) [![npm monthly downloads](https://img.shields.io/npm/dm/commitizen.svg?style=flat-square)](https://www.npmjs.com/package/commitizen) [![current version](https://img.shields.io/npm/v/commitizen.svg?style=flat-square)](https://www.npmjs.com/package/commitizen) [![semantic-release](https://img.shields.io/badge/%20%20%F0%9F%93%A6%F0%9F%9A%80-semantic--release-e10079.svg?style=flat-square)](https://github.com/semantic-release/semantic-release) [![commitizen on stackoverflow](https://img.shields.io/badge/stackoverflow-community-orange.svg?longCache=true&style=flat-square&logo=stackoverflow)](https://stackoverflow.com/tags/commitizen)\n\n## Installing the command line tool\n\nCommitizen is currently tested against\nnode 10 and 12 although it may work in\nolder node. You should also have npm 6\nor greater.\n\nInstallation is as simple as running the following command (if you see `EACCES` error, reading [fixing npm permissions](https://docs.npmjs.com/getting-started/fixing-npm-permissions) may help):\n\n```\nnpm install -g commitizen\n```\n\n## Using the command line tool\n\n### If your repo is [Commitizen-friendly]:\n\nSimply use `git cz` instead of `git commit` when committing.\n\n_Alternatively_, if you are using **NPM 5.2+** you can [use `npx`](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) instead of installing globally:\n\n```\nnpx git-cz\n```\n\nor as an npm script:\n\n```json\n  ...\n  \"scripts\": {\n    \"commit\": \"npx git-cz\"\n  }\n```\n\nWhen you're working in a Commitizen friendly repository, you'll be prompted to fill in any required fields and your commit messages will be formatted according to the standards defined by project maintainers.\n\n[![Add and commit with Commitizen](https://github.com/commitizen/cz-cli/raw/master/meta/screenshots/add-commit.png)](https://github.com/commitizen/cz-cli/raw/master/meta/screenshots/add-commit.png)\n\n### If your repo is NOT Commitizen friendly:\n\nIf you're **not** working in a Commitizen friendly repository, then `git cz` will work just the same as `git commit` but `npx git-cz` will use the [streamich/git-cz](https://github.com/streamich/git-cz) adapter. To fix this, you need to first [make your repo Commitizen-friendly](#making-your-repo-commitizen-friendly)\n\n## Making your repo Commitizen-friendly\n\nFor this example, we'll be setting up our repo to use [AngularJS's commit message convention](https://github.com/angular/angular.js/blob/master/DEVELOPERS.md#-git-commit-guidelines) also known as [conventional-changelog](https://github.com/ajoslin/conventional-changelog).\n\nFirst, install the Commitizen cli tools:\n\n```\nnpm install commitizen -g\n```\n\nNext, initialize your project to use the cz-conventional-changelog adapter by typing:\n\n```\ncommitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\nOr if you are using Yarn:\n\n```\ncommitizen init cz-conventional-changelog --yarn --dev --exact\n```\n\nNote that if you want to force install over the top of an old adapter, you can apply the `--force` argument. For more information on this, just run `commitizen help`.\n\nThe above command does three things for you.\n\n1. Installs the cz-conventional-changelog adapter npm module\n2. Saves it to package.json's dependencies or devDependencies\n3. Adds the `config.commitizen` key to the root of your **package.json** as shown here:\n\n```json\n...\n  \"config\": {\n    \"commitizen\": {\n      \"path\": \"cz-conventional-changelog\"\n    }\n  }\n```\n\nThis just tells Commitizen which adapter we actually want our contributors to use when they try to commit to this repo.\n\n`commitizen.path` is resolved via [require.resolve](https://nodejs.org/api/globals.html#globals_require_resolve) and supports\n\n- npm modules\n- directories relative to `process.cwd()` containing an `index.js` file\n- file base names relative to `process.cwd()` with `js` extension\n- full relative file names\n- absolute paths.\n\nPlease note that in the previous version of Commitizen we used czConfig. **czConfig has been deprecated** and you should migrate to the new format before Commitizen 3.0.0.\n\n### Optional: Install and run Commitizen locally\n\nInstalling and running Commitizen locally allows you to make sure that developers are running the exact same version of Commitizen on every machine.\n\nInstall Commitizen with `npm install --save-dev commitizen`.\n\nOn **NPM 5.2+** you can [use `npx`](https://medium.com/@maybekatz/introducing-npx-an-npm-package-runner-55f7d4bd282b) to initialize the conventional changelog adapter:\n\n```\nnpx commitizen init cz-conventional-changelog --save-dev --save-exact\n```\n\nFor **previous versions of NPM (< 5.2)** you can execute `./node_modules/.bin/commitizen` or `./node_modules/.bin/git-cz` in order to actually use the commands.\n\nYou can then initialize the conventional changelog adapter using: `./node_modules/.bin/commitizen init cz-conventional-changelog --save-dev --save-exact`\n\nAnd you can then add some nice npm run scripts in your package.json pointing to the local version of commitizen:\n\n```json\n  ...\n  \"scripts\": {\n    \"commit\": \"git-cz\"\n  }\n```\n\nThis will be more convenient for your users because then if they want to do a commit, all they need to do is run `npm run commit` and they will get the prompts needed to start a commit!\n\n> **NOTE:** if you are using `precommit` hooks thanks to something like `husky`, you will need to name your script some thing other than \"commit\" (e.g. \"cm\": \"git-cz\"). The reason is because npm-scripts has a \"feature\" where it automatically runs scripts with the name *prexxx* where *xxx* is the name of another script. In essence, npm and husky will run \"precommit\" scripts twice if you name the script \"commit,\" and the work around is to prevent the npm-triggered *precommit* script.\n\n#### Optional: Running Commitizen on `git commit`\n\nThis example shows how to incorporate Commitizen into the existing `git commit` workflow by using git hooks and the `--hook` command-line option. This is useful for project maintainers\nwho wish to ensure the proper commit format is enforced on contributions from those unfamiliar with Commitizen.\n\nOnce either of these methods is implemented, users running `git commit` will be presented with an interactive Commitizen session that helps them write useful commit messages.\n\n> **NOTE:** This example assumes that the project has been set up to [use Commitizen locally](https://github.com/commitizen/cz-cli#optional-install-and-run-commitizen-locally).\n\n##### Traditional git hooks\n\nUpdate `.git/hooks/prepare-commit-msg` with the following code:\n\n```\n#!/bin/bash\nexec < /dev/tty && node_modules/.bin/git-cz --hook || true\n```\n\n##### Husky\nFor `husky` users, add the following configuration to the project's `package.json`:\n\n```\n\"husky\": {\n  \"hooks\": {\n    \"prepare-commit-msg\": \"exec < /dev/tty && git cz --hook || true\",\n  }\n}\n```\n\n> **Why `exec < /dev/tty`?** By default, git hooks are not interactive. This command allows the user to use their terminal to interact with Commitizen during the hook.\n\n#### Congratulations your repo is Commitizen-friendly. Time to flaunt it!\n\nAdd the Commitizen-friendly badge to your README using the following markdown:\n\n```\n[![Commitizen friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n```\n\nYour badge will look like this:\n\n[![Commitizen-friendly](https://img.shields.io/badge/commitizen-friendly-brightgreen.svg)](http://commitizen.github.io/cz-cli/)\n\nIt may also make sense to change your README.md or CONTRIBUTING.md to include or link to the Commitizen project so that your new contributors may learn more about installing and using Commitizen.\n\n## Conventional commit messages as a global utility\n\nInstall `commitizen` globally, if you have not already.\n\n```\nnpm install -g commitizen\n```\n\nInstall your preferred `commitizen` adapter globally, for example [`cz-conventional-changelog`](https://www.npmjs.com/package/cz-conventional-changelog)\n\n```\nnpm install -g cz-conventional-changelog\n```\n\nCreate a `.czrc` file in your `home` directory, with `path` referring to the preferred, globally installed, `commitizen` adapter\n\n```\necho '{ \"path\": \"cz-conventional-changelog\" }' > ~/.czrc\n```\n\nYou are all set! Now `cd`into any `git` repository and use `git cz` instead of `git commit` and you will find the `commitizen` prompt.\n\nProtip: You can use all the `git commit` `options` with `git cz`, for example: `git cz -a`.\n\n> If your repository is a [nodejs](https://nodejs.org/en/) project, making it [Commitizen-friendly] is super easy.\n\nIf your repository is already [Commitizen-friendly], the local `commitizen` adapter will be used, instead of globally installed one.\n\n## Commitizen for multi-repo projects\n\nAs a project maintainer of many projects, you may want to standardize on a single commit message\nformat for all of them. You can create your own node module which acts as front-end for commitizen.\n\n### 1. Create your own entry point script\n\n```\n// my-cli.js\n\n#!/usr/bin/env node\n\"use strict\";\n\nconst path = require('path');\nconst bootstrap = require('commitizen/dist/cli/git-cz').bootstrap;\n\nbootstrap({\n  cliPath: path.join(__dirname, '../../node_modules/commitizen'),\n  // this is new\n  config: {\n    \"path\": \"cz-conventional-changelog\"\n  }\n});\n```\n\n### 2. Add script to package.json\n\n```\n// package.json\n\n{\n  \"name\": \"company-commit\",\n  \"bin\": \"./my-cli.js\",\n  \"dependencies\": {\n    \"commitizen\": \"^2.7.6\",\n    \"cz-conventional-changelog\": \"^1.1.5\",\n  }\n}\n```\n\n### 3. Publish it to npm and use it!\n\n```\nnpm install company-commit --save-dev\n./node_modules/.bin/company-commit\n```\n\n## Adapters\n\nWe know that every project and build process has different requirements so we've tried to keep Commitizen open for extension. You can do this by choosing from any of the pre-build adapters or even by building your own. Here are some of the great adapters available to you:\n\n- [cz-conventional-changelog](https://www.npmjs.com/package/cz-conventional-changelog)\n- [cz-jira-smart-commit](https://www.npmjs.com/package/cz-jira-smart-commit)\n- [@endemolshinegroup/cz-jira-smart-commit](https://github.com/EndemolShineGroup/cz-jira-smart-commit)\n- [@endemolshinegroup/cz-github](https://github.com/EndemolShineGroup/cz-github)\n- [rb-conventional-changelog](https://www.npmjs.com/package/rb-conventional-changelog)\n- [cz-mapbox-changelog](https://www.npmjs.com/package/cz-mapbox-changelog)\n- [cz-customizable](https://github.com/leonardoanalista/cz-customizable)\n- [commitlint](https://github.com/marionebl/commitlint)\n- [vscode-commitizen](https://github.com/KnisterPeter/vscode-commitizen)\n- [cz-emoji](https://github.com/ngryman/cz-emoji)\n- [cz-adapter-eslint](https://www.npmjs.com/package/cz-adapter-eslint)\n- [commitiquette](https://github.com/martinmcwhorter/commitiquette)\n\nTo create an adapter, just fork one of these great adapters and modify it to suit your needs. We pass you an instance of [Inquirer.js](https://github.com/SBoudrias/Inquirer.js/) but you can capture input using whatever means necessary. Just call the `commit` callback with a string and we'll be happy. Publish it to npm, and you'll be all set!\n\n## Retrying failed commits\n\nAs of version 2.7.1, you may attempt to retry the last commit using the `git cz --retry` command. This can be helpful when you have tests set up to run via a git precommit hook. In this scenario, you may have attempted a Commitizen commit, painstakingly filled out all of the commitizen fields, but your tests fail. In previous Commitizen versions, after fixing your tests, you would be forced to fill out all of the fields again. Enter the retry command. Commitizen will retry the last commit that you attempted in this repo without you needing to fill out the fields again.\n\nPlease note that the retry cache may be cleared when upgrading commitizen versions, upgrading adapters, or if you delete the `commitizen.json` file in your home or temp directory. Additionally, the commit cache uses the filesystem path of the repo, so if you move a repo or change its path, you will not be able to retry a commit. This is an edge case, but might be confusing if you have scenarios where you are moving folders that contain repos.\n\nIt is important to note that if you are running `git-cz` from a npm script (let's say it is called `commit`) you will need to do one of the following:\n\n- Pass `-- --retry` as an argument for your script. i.e: `npm run commit -- --retry`\n- Use [npm-run](https://www.npmjs.com/package/npm-run) to find and call git-cz executable directly. i.e: `npm-run git-cz --retry`\n- Use [npm-quick-run](https://www.npmjs.com/package/npm-quick-run) i.e: `nr commit --retry` or just `nr c --retry` (which will run all scripts that starts with the letter 'c')\n\nNote that the last two options **do not** require you to pass `--` before the args but the first **does**.\n\n## Commitizen for project maintainers\n\nAs a project maintainer, making your repo Commitizen friendly allows you to select pre-existing commit message conventions or to create your own custom commit message convention. When a contributor to your repo uses Commitizen, they will be prompted for the correct fields at commit time.\n\n## Go further\n\nCommitizen is great on its own, but it shines when you use it with some other amazing open source tools. Kent C. Dodds shows you how to accomplish this in his Egghead.io series, [How to write an open source javascript library](https://egghead.io/series/how-to-write-an-open-source-javascript-library). Many of the concepts can be applied to non-javascript projects as well.\n\n## Philosophy\n\n### About Commitizen\n\nCommitizen is an open source project that helps contributors be good open source citizens. It accomplishes this by prompting them to follow commit message conventions at commit time. It also empowers project maintainers to create or use predefined commit message conventions in their repos to better communicate their expectations to potential contributors.\n\n### Commitizen or Commit Hooks\n\nBoth! Commitizen is not meant to be a replacement for git commit hooks. Rather, it is meant to work side-by-side with them to ensure a consistent and positive experience for your contributors. Commitizen treats the commit command as a declarative action. The contributor is declaring that they wish to contribute to your project. It is up to you as the maintainer to define what rules they should be following.\n\nWe accomplish this by letting you define which adapter you'd like to use in your project. Adapters just allow multiple projects to share the same commit message conventions. A good example of an adapter is the cz-conventional-changelog adapter.\n\n## Related projects\n\n- [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) \u2013 Generate a changelog from conventional commit history\n- [commitlint](https://github.com/marionebl/commitlint) - Lint commit messages\n\n## Authors and Contributors\n\n@JimTheDev (Jim Cummins, author)\n@kentcdodds\n@accraze\n@kytwb\n@Den-dp\n\nSpecial thanks to @stevelacy, whose [gulp-git](https://www.npmjs.com/package/gulp-git) project makes commitizen possible.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"graphs/contributors\"><img src=\"https://opencollective.com/commitizen/contributors.svg?width=890&button=false\" /></a>\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/commitizen#backer)]\n\n<a href=\"https://opencollective.com/commitizen#backers\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/backers.svg?width=890\"></a>\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/commitizen#sponsor)]\n\n<a href=\"https://opencollective.com/commitizen/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/commitizen/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/commitizen/sponsor/9/avatar.svg\"></a>\n\n[Commitizen-friendly]: #making-your-repo-commitizen-friendly"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 45500}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 269460}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1085144}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2904908}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4931677}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 8016156}], "dependentsCount": 238, "starsCount": 68}, "github": {"homepage": "http://commitizen.github.io/cz-cli/", "starsCount": 8798, "forksCount": 364, "subscribersCount": 81, "issues": {"count": 735, "openCount": 125, "distribution": {"3600": 53, "10800": 47, "32400": 47, "97200": 61, "291600": 59, "874800": 66, "2624400": 83, "7873200": 122, "23619600": 104, "70858800": 51, "212576400": 42}, "isDisabled": false}, "contributors": [{"username": "jimthedev", "commitsCount": 87}, {"username": "greenkeeperio-bot", "commitsCount": 77}, {"username": "renovate[bot]", "commitsCount": 22}, {"username": "LinusU", "commitsCount": 13}, {"username": "marionebl", "commitsCount": 11}, {"username": "pmcelhaney", "commitsCount": 5}, {"username": "hassankhan", "commitsCount": 3}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "tjoskar", "commitsCount": 3}, {"username": "Berkmann18", "commitsCount": 2}, {"username": "andreasolund", "commitsCount": 2}, {"username": "hxzhao527", "commitsCount": 2}, {"username": "AndersDJohnson", "commitsCount": 1}, {"username": "Guria", "commitsCount": 1}, {"username": "KnisterPeter", "commitsCount": 1}, {"username": "SevenOutman", "commitsCount": 1}, {"username": "accraze", "commitsCount": 1}, {"username": "bitdeli-chef", "commitsCount": 1}, {"username": "brettstack", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "ctrlplusb", "commitsCount": 1}, {"username": "d4rkr00t", "commitsCount": 1}, {"username": "danoc", "commitsCount": 1}, {"username": "dealloc", "commitsCount": 1}, {"username": "eladchen", "commitsCount": 1}, {"username": "faceyspacey", "commitsCount": 1}, {"username": "fastfrwrd", "commitsCount": 1}, {"username": "faust64", "commitsCount": 1}, {"username": "fdlk", "commitsCount": 1}, {"username": "giocodes", "commitsCount": 1}, {"username": "guilhermejcgois", "commitsCount": 1}, {"username": "jacopotarantino", "commitsCount": 1}, {"username": "landonreed", "commitsCount": 1}, {"username": "leonardoanalista", "commitsCount": 1}, {"username": "lricoy", "commitsCount": 1}, {"username": "lukaszmoroz", "commitsCount": 1}, {"username": "machour", "commitsCount": 1}, {"username": "malept", "commitsCount": 1}, {"username": "marceloavf", "commitsCount": 1}, {"username": "markcarver", "commitsCount": 1}, {"username": "martinmcwhorter", "commitsCount": 1}, {"username": "monkeywithacupcake", "commitsCount": 1}, {"username": "mrchief", "commitsCount": 1}, {"username": "ngryman", "commitsCount": 1}, {"username": "olgn", "commitsCount": 1}, {"username": "pawamoy", "commitsCount": 1}, {"username": "pitrew", "commitsCount": 1}, {"username": "pixelass", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "slkennedy", "commitsCount": 1}, {"username": "ssilve1989", "commitsCount": 1}, {"username": "thierrymichel", "commitsCount": 1}, {"username": "travi", "commitsCount": 1}, {"username": "vagisha-nidhi", "commitsCount": 1}, {"username": "vass-david", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 4}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 6}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 11}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 26}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 18584, "testsSize": 42671, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/commitizen/cz-cli.svg?branch=master", "service": "https://api.travis-ci.org/commitizen/cz-cli.svg", "shields": "https://img.shields.io/travis/commitizen/cz-cli.svg", "content": "https://img.shields.io/travis/commitizen/cz-cli.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/commitizen/cz-cli.svg?style=flat-square", "service": "https://codecov.io/github/commitizen/cz-cli/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/commitizen/cz-cli.svg", "content": "https://img.shields.io/codecov/c/github/commitizen/cz-cli.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/dm/commitizen.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/commitizen.svg", "content": "https://img.shields.io/npm/dm/commitizen.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/commitizen.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/commitizen.svg", "content": "https://img.shields.io/npm/v/commitizen.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0, "outdatedDependencies": {"strip-json-comments": {"required": "3.0.1", "stable": "3.1.0", "latest": "3.1.0"}, "cachedir": {"required": "2.2.0", "stable": "2.3.0", "latest": "2.3.0"}, "glob": {"required": "7.1.4", "stable": "7.1.6", "latest": "7.1.6"}, "fs-extra": {"required": "8.1.0", "stable": "9.0.0", "latest": "9.0.0"}, "inquirer": {"required": "6.5.0", "stable": "7.1.0", "latest": "7.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 9368, "downloadsCount": 968302.6666666666, "downloadsAcceleration": 4911.3824391172, "dependentsCount": 238}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8176198630136986, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.677119871872637, "detail": {"quality": 0.9085069880693444, "popularity": 0.489330931504498, "maintenance": 0.6665769983578841}}}}, {"@angular/http": {"analyzedAt": "2020-05-20T04:01:13.425Z", "collected": {"metadata": {"name": "@angular/http", "scope": "angular", "version": "7.2.16", "description": "Angular - the http service", "date": "2020-01-08T20:21:34.712Z", "author": {"name": "angular"}, "publisher": {"username": "angular", "email": "devops+npm@angular.io"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fhttp", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^1.9.0"}, "devDependencies": {"@angular/cli": "9.1.0", "@bazel/bazelisk": "^1.4.0", "@bazel/buildifier": "^0.29.0", "@bazel/ibazel": "^0.12.3", "@octokit/graphql": "^4.3.1", "@types/cli-progress": "^3.4.2", "@types/minimist": "^1.2.0", "@yarnpkg/lockfile": "^1.1.0", "browserstacktunnel-wrapper": "2.0.1", "check-side-effects": "0.0.21", "clang-format": "^1.4.0", "cldr": "4.10.0", "cldr-data": "36.0.0", "cldrjs": "0.5.0", "cli-progress": "^3.7.0", "conventional-changelog": "^2.0.3", "entities": "1.1.1", "firebase-tools": "^7.11.0", "firefox-profile": "1.0.3", "glob": "7.1.2", "gulp": "3.9.1", "gulp-conventional-changelog": "^2.0.3", "husky": "^4.2.3", "inquirer": "^7.1.0", "jpm": "1.3.1", "karma-browserstack-launcher": "^1.3.0", "karma-sauce-launcher": "^2.0.2", "madge": "^3.6.0", "multimatch": "^4.0.0", "mutation-observer": "^1.0.3", "rewire": "2.5.2", "sauce-connect": "https://saucelabs.com/downloads/sc-4.5.1-linux.tar.gz", "semver": "^6.3.0", "ts-node": "^8.6.2", "tslint-eslint-rules": "5.4.0", "tslint-no-toplevel-property-access": "0.0.2", "tsutils": "2.27.2", "typed-graphqlify": "^2.3.0", "universal-analytics": "0.4.15", "vlq": "0.2.2", "vrsource-tslint-rules": "5.1.1"}, "peerDependencies": {"rxjs": "^6.0.0", "@angular/core": "7.2.16", "@angular/platform-browser": "7.2.16"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 81}], "deprecated": "Package no longer supported. Use @angular/common instead, see https://angular.io/guide/deprecations#angularhttp", "readme": "Angular\n=======\n\nThe sources for this package are in the main [Angular](https://github.com/angular/angular) repo. Please file issues and pull requests against that repo.\n\nLicense: MIT"}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 76716}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 415306}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1832672}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 5592827}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 11201811}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 26502092}], "dependentsCount": 5080, "starsCount": 10}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 10, "downloadsCount": 1864275.6666666667, "downloadsAcceleration": -5473.898116438353, "dependentsCount": 5080}, "maintenance": {"releasesFrequency": 0.8868150684931507, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.25115062401865346, "detail": {"quality": 0, "popularity": 0.38431044975640405, "maintenance": 0.33326276172546304}}}}, {"vue-style-loader": {"analyzedAt": "2020-06-14T09:44:54.783Z", "collected": {"metadata": {"name": "vue-style-loader", "scope": "unscoped", "version": "4.1.2", "description": "Vue.js style loader module for webpack", "date": "2018-08-13T21:13:56.547Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}, {"username": "soda", "email": "haoqunjiang+npm@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/vuejs/vue-style-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/vue-style-loader", "homepage": "https://github.com/vuejs/vue-style-loader#readme", "repository": "https://github.com/vuejs/vue-style-loader", "bugs": "https://github.com/vuejs/vue-style-loader/issues"}, "license": "MIT", "dependencies": {"hash-sum": "^1.0.2", "loader-utils": "^1.0.2"}, "devDependencies": {"babel-core": "^6.26.0", "babel-jest": "^22.1.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.26.0", "conventional-changelog-cli": "^2.0.1", "jest": "^22.1.4"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# vue-style-loader [![Build Status](https://circleci.com/gh/vuejs/vue-style-loader/tree/master.svg?style=shield)](https://circleci.com/gh/vuejs/vue-loader/tree/master) [![npm package](https://img.shields.io/npm/v/vue-style-loader.svg)](https://www.npmjs.com/package/vue-style-loader)\r\n\r\nThis is a fork based on [style-loader](https://github.com/webpack/style-loader). Similar to `style-loader`, you can chain it after `css-loader` to dynamically inject CSS into the document as style tags. However, since this is included as a dependency and used by default in `vue-loader`, in most cases you don't need to configure this loader yourself.\r\n\r\n## Options\r\n\r\n- **manualInject** (3.1.0+):\r\n\r\n  Type: `boolean`. When importing the style from a non-vue-file, by default the style is injected as a side effect of the import. When `manualInject` is true, the imported style object exposes a `__inject__` method, which can then be called manually at appropriate timing. If called on the server, the method expects one argument which is the `ssrContext` to attach styles to.\r\n\r\n  ``` js\r\n  import styles from 'styles.scss'\r\n\r\n  export default {\r\n    beforeCreate() { // or create a mixin for this purpose\r\n      if(styles.__inject__) {\r\n        styles.__inject__(this.$ssrContext)\r\n      }\r\n    }\r\n\r\n    render() {\r\n      return <div class={styles.heading}>Hello World</div>\r\n    }\r\n  }\r\n  ```\r\n\r\n  Note this behavior is enabled automatically when `vue-style-loader` is used on styles imported within a `*.vue` file. The option is only exposed for advanced usage.\r\n\r\n- **ssrId** (3.1.0+):\r\n\r\n  Type: `boolean`. Add `data-vue-ssr-id` attribute to injected `<style>` tags even when not in Node.js. This can be used with pre-rendering (instead of SSR) to avoid duplicate style injection on hydration.\r\n\r\n## Differences from `style-loader`\r\n\r\n### Server-Side Rendering Support\r\n\r\nWhen bundling with `target: 'node'`, the styles in all rendered components are collected and exposed on the Vue render context object as `context.styles`, which you can simply inline into your markup's `<head>`. If you are building a Vue SSR app, you probably should use this loader for CSS imported from JavaScript files too.\r\n\r\n### Misc\r\n\r\n- Does not support url mode and reference counting mode. Also removed `singleton` and `insertAt` query options. It always automatically pick the style insertion mechanism that makes most sense. If you need these capabilities you should probably use the original `style-loader` instead.\r\n\r\n- Fixed the issue that root-relative URLs are interpreted against chrome:// urls and make source map URLs work for injected `<style>` tags in Chrome.\r\n\r\n## License\r\n\r\nMIT"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 64502}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1385045}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5726971}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 17134384}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 30782708}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 55585803}], "dependentsCount": 676, "starsCount": 5}, "github": {"forkOf": "webpack-contrib/style-loader", "starsCount": 195, "forksCount": 53, "subscribersCount": 14, "issues": {"count": 43, "openCount": 16, "distribution": {"3600": 6, "10800": 2, "32400": 0, "97200": 2, "291600": 3, "874800": 3, "2624400": 1, "7873200": 6, "23619600": 4, "70858800": 10, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 53}, {"username": "yyx990803", "commitsCount": 53}, {"username": "diurnalist", "commitsCount": 7}, {"username": "elsbree", "commitsCount": 6}, {"username": "JounQin", "commitsCount": 4}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "sharkykh", "commitsCount": 2}, {"username": "svenheden", "commitsCount": 2}, {"username": "tgriesser", "commitsCount": 2}, {"username": "2color", "commitsCount": 1}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TaopaiC", "commitsCount": 1}, {"username": "blainekasten", "commitsCount": 1}, {"username": "crucialfelix", "commitsCount": 1}, {"username": "cyij", "commitsCount": 1}, {"username": "d3viant0ne", "commitsCount": 1}, {"username": "danielberndt", "commitsCount": 1}, {"username": "egoist", "commitsCount": 1}, {"username": "erictheswift", "commitsCount": 1}, {"username": "gryzzly", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "krrg", "commitsCount": 1}, {"username": "nickdima", "commitsCount": 1}, {"username": "oskarer", "commitsCount": 1}, {"username": "pi0", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sirlancelot", "commitsCount": 1}, {"username": "undoZen", "commitsCount": 1}, {"username": "verticalpalette", "commitsCount": 1}, {"username": "zachlysobey", "commitsCount": 1}, {"username": "zxcabs", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 2669, "testsSize": 3049, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://circleci.com/gh/vuejs/vue-style-loader/tree/master.svg?style=shield", "service": "https://circleci.com/gh/vuejs/vue-style-loader/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/vuejs/vue-style-loader/master.svg", "content": "https://img.shields.io/circleci/project/github/vuejs/vue-style-loader/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/vue-style-loader.svg", "shields": "https://img.shields.io/npm/v/vue-style-loader.svg", "content": "https://img.shields.io/npm/v/vue-style-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "outdatedDependencies": {"hash-sum": {"required": "^1.0.2", "stable": "2.0.0", "latest": "2.0.0"}, "loader-utils": {"required": "^1.0.2", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.6, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 301, "downloadsCount": 5711461.333333333, "downloadsAcceleration": 14333.583828006093, "dependentsCount": 676}, "maintenance": {"releasesFrequency": 0.0863013698630137, "commitsFrequency": 0, "openIssues": 0.7131782945736433, "issuesDistribution": 0}}, "score": {"final": 0.5177052225866244, "detail": {"quality": 0.862391162324472, "popularity": 0.4872994541625494, "maintenance": 0.2526658998068302}}}}, {"@angular/cli": {"analyzedAt": "2020-06-16T23:32:04.116Z", "collected": {"metadata": {"name": "@angular/cli", "scope": "angular", "version": "9.1.8", "description": "CLI tool for Angular", "keywords": ["angular", "Angular CLI", "devkit", "sdk", "Angular DevKit", "angular-cli"], "date": "2020-06-10T23:01:09.183Z", "author": {"name": "Angular Authors"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "angular-cli", "email": "hansl@google.com"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fcli", "homepage": "https://github.com/angular/angular-cli", "repository": "https://github.com/angular/angular-cli", "bugs": "https://github.com/angular/angular-cli/issues"}, "license": "MIT", "dependencies": {"@angular-devkit/architect": "0.901.8", "@angular-devkit/core": "9.1.8", "@angular-devkit/schematics": "9.1.8", "@schematics/angular": "9.1.8", "@schematics/update": "0.901.8", "@yarnpkg/lockfile": "1.1.0", "ansi-colors": "4.1.1", "debug": "4.1.1", "ini": "1.3.5", "inquirer": "7.1.0", "npm-package-arg": "8.0.1", "npm-pick-manifest": "6.0.0", "open": "7.0.3", "pacote": "9.5.12", "read-package-tree": "5.3.1", "rimraf": "3.0.2", "semver": "7.1.3", "symbol-observable": "1.2.0", "universal-analytics": "0.4.20", "uuid": "7.0.2"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 8}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 26}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 50}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 116}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 217}]}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 298018}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1621246}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 6687525}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 20704187}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 38164291}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 70515609}], "dependentsCount": 219, "starsCount": 82}, "github": {"homepage": "https://cli.angular.io", "starsCount": 23449, "forksCount": 9163, "subscribersCount": 1194, "issues": {"count": 17768, "openCount": 506, "distribution": {"3600": 1733, "10800": 1184, "32400": 1628, "97200": 2447, "291600": 2411, "874800": 2748, "2624400": 1863, "7873200": 1236, "23619600": 1135, "70858800": 1244, "212576400": 139}, "isDisabled": false}, "contributors": [{"username": "clydin", "commitsCount": 869}, {"username": "filipesilva", "commitsCount": 869}, {"username": "alan-agius4", "commitsCount": 846}, {"username": "hansl", "commitsCount": 784}, {"username": "renovate-bot", "commitsCount": 770}, {"username": "Brocco", "commitsCount": 281}, {"username": "IgorMinar", "commitsCount": 65}, {"username": "cexbrayat", "commitsCount": 56}, {"username": "kyliau", "commitsCount": 53}, {"username": "sumitarora", "commitsCount": 53}, {"username": "alexeagle", "commitsCount": 48}, {"username": "mgechev", "commitsCount": 46}, {"username": "rodyhaddad", "commitsCount": 40}, {"username": "jbogarthyde", "commitsCount": 39}, {"username": "vikerman", "commitsCount": 39}, {"username": "jkuri", "commitsCount": 37}, {"username": "dgp1130", "commitsCount": 29}, {"username": "delasteve", "commitsCount": 27}, {"username": "cironunes", "commitsCount": 23}, {"username": "jeffbcross", "commitsCount": 21}, {"username": "beeman", "commitsCount": 18}, {"username": "alxhub", "commitsCount": 17}, {"username": "catull", "commitsCount": 17}, {"username": "ahasall", "commitsCount": 15}, {"username": "Meligy", "commitsCount": 14}, {"username": "noelmace", "commitsCount": 13}, {"username": "cyrilletuzi", "commitsCount": 12}, {"username": "josephperrott", "commitsCount": 11}, {"username": "ocombe", "commitsCount": 11}, {"username": "TheLarkInn", "commitsCount": 10}, {"username": "gkalpak", "commitsCount": 10}, {"username": "FrozenPandaz", "commitsCount": 9}, {"username": "gregmagolan", "commitsCount": 9}, {"username": "sarunint", "commitsCount": 9}, {"username": "wKoza", "commitsCount": 9}, {"username": "RicardoVaranda", "commitsCount": 8}, {"username": "devoto13", "commitsCount": 8}, {"username": "johnpapa", "commitsCount": 8}, {"username": "dave11mj", "commitsCount": 7}, {"username": "dzonatan", "commitsCount": 7}, {"username": "qiyigg", "commitsCount": 7}, {"username": "rahulbhooteshwar", "commitsCount": 7}, {"username": "Shyam-Chen", "commitsCount": 6}, {"username": "Splaktar", "commitsCount": 6}, {"username": "hawkgs", "commitsCount": 6}, {"username": "intellix", "commitsCount": 6}, {"username": "lacolaco", "commitsCount": 6}, {"username": "sacgrover", "commitsCount": 6}, {"username": "shairez", "commitsCount": 6}, {"username": "JohannesHoppe", "commitsCount": 5}, {"username": "Teamop", "commitsCount": 5}, {"username": "christianliebel", "commitsCount": 5}, {"username": "deebloo", "commitsCount": 5}, {"username": "jeremymwells", "commitsCount": 5}, {"username": "manfredsteyer", "commitsCount": 5}, {"username": "mgol", "commitsCount": 5}, {"username": "zackarychapple", "commitsCount": 5}, {"username": "AhsanAyaz", "commitsCount": 4}, {"username": "ChrisPearce", "commitsCount": 4}, {"username": "StephenFluin", "commitsCount": 4}, {"username": "arturovt", "commitsCount": 4}, {"username": "ashoktamang", "commitsCount": 4}, {"username": "baruchvlz", "commitsCount": 4}, {"username": "cgmartin", "commitsCount": 4}, {"username": "devversion", "commitsCount": 4}, {"username": "grizzm0", "commitsCount": 4}, {"username": "jesselpalmer", "commitsCount": 4}, {"username": "jiverson", "commitsCount": 4}, {"username": "juristr", "commitsCount": 4}, {"username": "mattlewis92", "commitsCount": 4}, {"username": "prestonvanloon", "commitsCount": 4}, {"username": "AdamVig", "commitsCount": 3}, {"username": "EmmanuelDemey", "commitsCount": 3}, {"username": "JSMike", "commitsCount": 3}, {"username": "MarkPieszak", "commitsCount": 3}, {"username": "Mathou54", "commitsCount": 3}, {"username": "PowerKiKi", "commitsCount": 3}, {"username": "SchnWalter", "commitsCount": 3}, {"username": "Toxicable", "commitsCount": 3}, {"username": "elvisbegovic", "commitsCount": 3}, {"username": "ishitatsuyuki", "commitsCount": 3}, {"username": "jsshandle", "commitsCount": 3}, {"username": "kasaharu", "commitsCount": 3}, {"username": "kevinphelps", "commitsCount": 3}, {"username": "petebacondarwin", "commitsCount": 3}, {"username": "pkamdem", "commitsCount": 3}, {"username": "rolyatsats", "commitsCount": 3}, {"username": "santoshyadav198613", "commitsCount": 3}, {"username": "sibiraj-s", "commitsCount": 3}, {"username": "smnbbrv", "commitsCount": 3}, {"username": "tapas4java", "commitsCount": 3}, {"username": "tiaguinho", "commitsCount": 3}, {"username": "ukrukarg", "commitsCount": 3}, {"username": "vsavkin", "commitsCount": 3}, {"username": "FDIM", "commitsCount": 2}, {"username": "kgajera", "commitsCount": 2}, {"username": "leon", "commitsCount": 2}, {"username": "mhartington", "commitsCount": 2}, {"username": "wojteko22", "commitsCount": 2}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 9}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 99}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 344}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 709}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1642}], "statuses": [{"context": "ci/circleci: e2e-cli-win", "state": "success"}, {"context": "ci/circleci: e2e-cli-node-10", "state": "success"}, {"context": "ci/circleci: e2e-cli-ng-snapshots", "state": "success"}, {"context": "ci/circleci: e2e-cli-ng-ve-snapshots", "state": "success"}, {"context": "ci/circleci: snapshot_publish", "state": "success"}, {"context": "ci/angular: size", "state": "success"}, {"context": "ci/circleci: e2e-cli", "state": "success"}, {"context": "ci/circleci: e2e-cli-ve", "state": "success"}, {"context": "ci/circleci: test-win", "state": "success"}, {"context": "ci/circleci: test-browsers", "state": "success"}, {"context": "ci/circleci: setup-and-build-win", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: integration", "state": "success"}, {"context": "ci/circleci: validate", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 13084}, "linters": ["editorconfig", "prettier", "tslint"], "outdatedDependencies": {"open": {"required": "7.0.3", "stable": "7.0.4", "latest": "7.0.4"}, "npm-pick-manifest": {"required": "6.0.0", "stable": "6.1.0", "latest": "6.1.0"}, "semver": {"required": "7.1.3", "stable": "7.3.2", "latest": "7.3.2"}, "uuid": {"required": "7.0.2", "stable": "8.1.0", "latest": "8.1.0"}, "inquirer": {"required": "7.1.0", "stable": "7.2.0", "latest": "7.2.0"}, "pacote": {"required": "9.5.12", "stable": "11.1.10", "latest": "11.1.10"}}}}, "evaluation": {"quality": {"carefulness": 0.46, "tests": 0.5499999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 33987, "downloadsCount": 6901395.666666667, "downloadsAcceleration": 12138.610064687979, "dependentsCount": 219}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.5534973607598881}}, "score": {"final": 0.7707930503871872, "detail": {"quality": 0.6808644539770965, "popularity": 0.6273906229662735, "maintenance": 0.9912771318738931}}}}, {"react-addons-test-utils": {"analyzedAt": "2020-05-19T07:31:10.167Z", "collected": {"metadata": {"name": "react-addons-test-utils", "scope": "unscoped", "version": "15.6.2", "description": "This package provides the React TestUtils add-on.", "keywords": ["react", "react-addon"], "date": "2017-09-26T00:22:10.554Z", "publisher": {"username": "sophiebits", "email": "npm@sophiebits.com"}, "maintainers": [{"username": "sophiebits", "email": "npm2@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git"}, "links": {"npm": "https://www.npmjs.com/package/react-addons-test-utils", "homepage": "https://github.com/facebook/react#readme", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "devDependencies": {"jest": "^19.0.2", "react": "^15.4.2", "react-dom": "^15.4.2"}, "peerDependencies": {"react-dom": "^15.4.2"}, "releases": [{"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}, {"from": "2018-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# react-addons-test-utils\n\nThis package provides the React TestUtils add-on.\n\nSee <https://facebook.github.io/react/docs/test-utils.html> for more information.\n\nThis package is deprecated as of version 15.5.0:\n* TestUtils have been moved to `react-dom/test-utils`\n* Shallow renderer has been moved to `react-test-renderer/shallow`"}, "npm": {"downloads": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 46823}, {"from": "2020-05-12T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 280518}, {"from": "2020-04-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 1148814}, {"from": "2020-02-19T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 3486851}, {"from": "2019-11-21T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 6465810}, {"from": "2019-05-20T00:00:00.000Z", "to": "2020-05-19T00:00:00.000Z", "count": 13773165}], "dependentsCount": 310, "starsCount": 15}}, "evaluation": {"quality": {"carefulness": 0.41000000000000003, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 15, "downloadsCount": 1162283.6666666667, "downloadsAcceleration": -313.6076484018249, "dependentsCount": 310}, "maintenance": {"releasesFrequency": 0, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.163151043892535, "detail": {"quality": 0.23619315527280285, "popularity": 0.26369456374484046, "maintenance": 0}}}}, {"react-router-dom": {"analyzedAt": "2020-06-04T11:06:10.504Z", "collected": {"metadata": {"name": "react-router-dom", "scope": "unscoped", "version": "5.2.0", "description": "DOM bindings for React Router", "keywords": ["react", "router", "route", "routing", "history", "link"], "date": "2020-05-11T17:12:23.483Z", "author": {"name": "React Training", "email": "hello@reacttraining.com"}, "publisher": {"username": "mjackson", "email": "npm@mjackson.me"}, "maintainers": [{"username": "mjackson", "email": "npm@mjackson.me"}, {"username": "timdorr", "email": "timdorr@timdorr.com"}], "repository": {"type": "git", "url": "git+https://github.com/ReactTraining/react-router.git"}, "links": {"npm": "https://www.npmjs.com/package/react-router-dom", "homepage": "https://github.com/ReactTraining/react-router#readme", "repository": "https://github.com/ReactTraining/react-router", "bugs": "https://github.com/ReactTraining/react-router/issues"}, "license": "MIT", "dependencies": {"@babel/runtime": "^7.1.2", "history": "^4.9.0", "loose-envify": "^1.3.1", "prop-types": "^15.6.2", "react-router": "5.2.0", "tiny-invariant": "^1.0.2", "tiny-warning": "^1.0.0"}, "peerDependencies": {"react": ">=15"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 9}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 12}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 28}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 635914}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3279843}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 13989632}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 38492814}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 66805002}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 119684002}], "dependentsCount": 5398, "starsCount": 72}, "github": {"homepage": "https://reacttraining.com/react-router/", "starsCount": 40730, "forksCount": 8153, "subscribersCount": 896, "issues": {"count": 7381, "openCount": 56, "distribution": {"3600": 2013, "10800": 1026, "32400": 1406, "97200": 848, "291600": 459, "874800": 448, "2624400": 428, "7873200": 503, "23619600": 180, "70858800": 54, "212576400": 16}, "isDisabled": false}, "contributors": [{"username": "mjackson", "commitsCount": 1442}, {"username": "ryanflorence", "commitsCount": 907}, {"username": "taion", "commitsCount": 245}, {"username": "timdorr", "commitsCount": 229}, {"username": "pshrmn", "commitsCount": 76}, {"username": "gaearon", "commitsCount": 61}, {"username": "knowbody", "commitsCount": 49}, {"username": "taurose", "commitsCount": 26}, {"username": "tylermcginnis", "commitsCount": 14}, {"username": "avanderhoorn", "commitsCount": 13}, {"username": "nhunzaker", "commitsCount": 13}, {"username": "StringEpsilon", "commitsCount": 11}, {"username": "Schniz", "commitsCount": 10}, {"username": "tgallacher", "commitsCount": 9}, {"username": "alireza-mh", "commitsCount": 7}, {"username": "brigand", "commitsCount": 7}, {"username": "alisd23", "commitsCount": 6}, {"username": "bradwestfall", "commitsCount": 6}, {"username": "dancannon", "commitsCount": 6}, {"username": "TrySound", "commitsCount": 5}, {"username": "chentsulin", "commitsCount": 5}, {"username": "insin", "commitsCount": 5}, {"username": "thaiphan", "commitsCount": 5}, {"username": "Andarist", "commitsCount": 4}, {"username": "benjohnson", "commitsCount": 4}, {"username": "coryhouse", "commitsCount": 4}, {"username": "johnnyreilly", "commitsCount": 4}, {"username": "josepot", "commitsCount": 4}, {"username": "sophiebits", "commitsCount": 4}, {"username": "CompuIves", "commitsCount": 3}, {"username": "IljaDaderko", "commitsCount": 3}, {"username": "KidkArolis", "commitsCount": 3}, {"username": "aaronshaf", "commitsCount": 3}, {"username": "billyjanitsch", "commitsCount": 3}, {"username": "bobeagan", "commitsCount": 3}, {"username": "deowk", "commitsCount": 3}, {"username": "eXon", "commitsCount": 3}, {"username": "gmaclennan", "commitsCount": 3}, {"username": "jaketrent", "commitsCount": 3}, {"username": "jmreidy", "commitsCount": 3}, {"username": "johanneslumpe", "commitsCount": 3}, {"username": "justsml", "commitsCount": 3}, {"username": "seanadkinson", "commitsCount": 3}, {"username": "stanleycyang", "commitsCount": 3}, {"username": "thibaudcolas", "commitsCount": 3}, {"username": "wesbos", "commitsCount": 3}, {"username": "yasserkaddour", "commitsCount": 3}, {"username": "Download", "commitsCount": 2}, {"username": "MeiKatz", "commitsCount": 2}, {"username": "aaugustin", "commitsCount": 2}, {"username": "acdlite", "commitsCount": 2}, {"username": "alexlande", "commitsCount": 2}, {"username": "bancek", "commitsCount": 2}, {"username": "benstokoe", "commitsCount": 2}, {"username": "benvinegar", "commitsCount": 2}, {"username": "brikou", "commitsCount": 2}, {"username": "bripkens", "commitsCount": 2}, {"username": "bsingr", "commitsCount": 2}, {"username": "caseywebdev", "commitsCount": 2}, {"username": "djkirby", "commitsCount": 2}, {"username": "ekilah", "commitsCount": 2}, {"username": "eps1lon", "commitsCount": 2}, {"username": "frehner", "commitsCount": 2}, {"username": "idolize", "commitsCount": 2}, {"username": "imjared", "commitsCount": 2}, {"username": "jacklaurencegaray", "commitsCount": 2}, {"username": "jacobrask", "commitsCount": 2}, {"username": "jaredpalmer", "commitsCount": 2}, {"username": "jblock", "commitsCount": 2}, {"username": "jlongster", "commitsCount": 2}, {"username": "jochenberger", "commitsCount": 2}, {"username": "joekrill", "commitsCount": 2}, {"username": "jwdotjs", "commitsCount": 2}, {"username": "krawaller", "commitsCount": 2}, {"username": "kyeotic", "commitsCount": 2}, {"username": "lime008", "commitsCount": 2}, {"username": "mayani", "commitsCount": 2}, {"username": "natorojr", "commitsCount": 2}, {"username": "niksudan", "commitsCount": 2}, {"username": "nvartolomei", "commitsCount": 2}, {"username": "oliviertassinari", "commitsCount": 2}, {"username": "penx", "commitsCount": 2}, {"username": "perrin4869", "commitsCount": 2}, {"username": "qimingweng", "commitsCount": 2}, {"username": "robinboehm", "commitsCount": 2}, {"username": "rralian", "commitsCount": 2}, {"username": "stevenyap", "commitsCount": 2}, {"username": "supasate", "commitsCount": 2}, {"username": "theboolean", "commitsCount": 2}, {"username": "tokams", "commitsCount": 2}, {"username": "torarnek", "commitsCount": 2}, {"username": "trodrigues", "commitsCount": 2}, {"username": "ungoldman", "commitsCount": 2}, {"username": "vladshcherbin", "commitsCount": 2}, {"username": "vramana", "commitsCount": 2}, {"username": "werme", "commitsCount": 2}, {"username": "xiangzhuyuan", "commitsCount": 2}, {"username": "xjamundx", "commitsCount": 2}, {"username": "ymekuria", "commitsCount": 2}, {"username": "zenlambda", "commitsCount": 2}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 21}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 145}]}, "source": {"files": {"readmeSize": 0, "testsSize": 30877, "hasChangelog": true}, "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.3, "health": 1, "branding": 0}, "popularity": {"communityInterest": 49951, "downloadsCount": 12830938, "downloadsAcceleration": 45414.30399543379, "dependentsCount": 5398}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9001712328767123, "openIssues": 1, "issuesDistribution": 0.9548290631537714}}, "score": {"final": 0.8535231093461276, "detail": {"quality": 0.7281150287247145, "popularity": 0.8145559759449822, "maintenance": 0.9999828832799129}}}}, {"karma-jasmine-html-reporter": {"analyzedAt": "2020-05-12T15:23:57.030Z", "collected": {"metadata": {"name": "karma-jasmine-html-reporter", "scope": "unscoped", "version": "1.5.4", "description": "A Karma plugin. Dynamically displays tests results at debug.html page", "keywords": ["karma-plugin", "karma-reporter", "html"], "date": "2020-05-12T15:23:30.337Z", "publisher": {"username": "dfederm", "email": "david.federman@outlook.com"}, "maintainers": [{"username": "dfederm", "email": "david.federman@outlook.com"}], "contributors": [{"name": "David Federman", "url": "https://github.com/dfederm"}, {"name": "Yudha Setiawan", "url": "https://github.com/yudhasetiawan"}, {"name": "Brian Thompson", "url": "https://github.com/dachibro"}, {"name": "protazy", "url": "https://github.com/protazy"}, {"name": "footballencarta", "url": "https://github.com/footballencarta"}, {"name": "PVermeer", "url": "https://github.com/PVermeer"}], "repository": {"url": "git+https://github.com/dfederm/karma-jasmine-html-reporter.git"}, "links": {"npm": "https://www.npmjs.com/package/karma-jasmine-html-reporter", "homepage": "https://github.com/dfederm/karma-jasmine-html-reporter#readme", "repository": "https://github.com/dfederm/karma-jasmine-html-reporter", "bugs": "https://github.com/dfederm/karma-jasmine-html-reporter/issues"}, "license": "MIT", "devDependencies": {"chalk": "*", "jasmine-core": ">=3.5"}, "peerDependencies": {"karma": ">=0.9", "karma-jasmine": ">=1.1", "jasmine-core": ">=3.5"}, "releases": [{"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 0}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 1}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 4}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 4}, {"from": "2018-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 10}], "readme": "# karma-jasmine-html-reporter\r\n\r\n[![npm version](https://img.shields.io/npm/v/karma-jasmine-html-reporter.svg)](https://www.npmjs.com/package/karma-jasmine-html-reporter) [![npm downloads](https://img.shields.io/npm/dm/karma-jasmine-html-reporter.svg)](https://www.npmjs.com/package/karma-jasmine-html-reporter)\r\n\r\nReporter that dynamically shows tests results at debug.html page.\r\n\r\nJasmine 1.3 is not supported. For Jasmine < 3.0.0, use version 0.2.2\r\n\r\n![alt tag](/screenshots/reporter_1.png)\r\n\r\nYou can also run a describe block, or a single test.\r\n\r\n![alt tag](/screenshots/reporter_2.png)\r\n\r\n## Installation\r\n\r\nYou can simply install `karma-jasmine-html-reporter` as a devDependency by:\r\n```bash\r\nnpm install karma-jasmine-html-reporter --save-dev\r\n```\r\n\r\n## Configuration\r\n```js\r\n// karma.conf.js\r\nmodule.exports = function(config) {\r\n  config.set({\r\n    reporters: ['kjhtml']\r\n  });\r\n};\r\n```\r\n#### With options\r\nIn combination with multiple reporters you may want to disable terminal messages because it's already handled by another reporter.\r\n\r\n*Example using the 'karma-mocha-reporter' plugin*:\r\n```js\r\n// karma.conf.js\r\nmodule.exports = function(config) {\r\n  config.set({\r\n\r\n    // Combine multiple reporters\r\n    reporters: ['kjhtml', 'mocha'],\r\n\r\n    jasmineHtmlReporter: {\r\n      suppressAll: true, // Suppress all messages (overrides other suppress settings)\r\n      suppressFailed: true // Suppress failed messages\r\n    }\r\n\r\n  });\r\n};\r\n```\r\n\r\nYou can pass a list of reporters as a CLI argument too:\r\n```bash\r\nkarma start --reporters kjhtml\r\n```\r\n\r\n## Develop\r\n\r\nThere's not much to this package.\r\n\r\n[`adapter.js`](src/lib/adapter.js), [`html.jasmine.reporter.js`](src/lib/html.jasmine.reporter.js), and [`jasmine.css`](src/css/jasmine.css) are copied with small adjustments from [`jasmine/lib/jasmine-core/boot.js`](https://github.com/jasmine/jasmine/blob/master/lib/jasmine-core/boot.js) and [`jasmine/lib/jasmine-core/jasmine-html.js`](https://github.com/jasmine/jasmine/blob/master/lib/jasmine-core/jasmine-html.js), and [`jasmine/lib/jasmine-core/jasmine.css`](https://github.com/jasmine/jasmine/blob/master/lib/jasmine-core/jasmine.css) respectively.\r\n\r\nJust pull over changes from Jasmine as needed. There is a script to help with that; just run `npm run build` and review the changes. Specifically, [`adapter.js`](src/lib/adapter.js) needs a lot of manual removals."}, "npm": {"downloads": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 185722}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 1056596}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 4388331}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 13481444}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 24337280}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 44568695}], "dependentsCount": 70, "starsCount": 4}, "github": {"starsCount": 21, "forksCount": 19, "subscribersCount": 1, "issues": {"count": 40, "openCount": 8, "distribution": {"3600": 3, "10800": 1, "32400": 5, "97200": 2, "291600": 2, "874800": 2, "2624400": 2, "7873200": 7, "23619600": 9, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "dfederm", "commitsCount": 18}, {"username": "taras42", "commitsCount": 16}, {"username": "yudhasetiawan", "commitsCount": 3}, {"username": "PVermeer", "commitsCount": 2}, {"username": "AdamVig", "commitsCount": 1}, {"username": "footballencarta", "commitsCount": 1}, {"username": "saschanaz", "commitsCount": 1}], "commits": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 1}, {"from": "2020-04-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 1}, {"from": "2020-02-12T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 3}, {"from": "2019-11-14T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 8}, {"from": "2019-05-13T00:00:00.000Z", "to": "2020-05-12T00:00:00.000Z", "count": 8}]}, "source": {"files": {"readmeSize": 2326, "testsSize": 0, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/karma-jasmine-html-reporter.svg", "shields": "https://img.shields.io/npm/v/karma-jasmine-html-reporter.svg", "content": "https://img.shields.io/npm/v/karma-jasmine-html-reporter.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/karma-jasmine-html-reporter.svg", "shields": "https://img.shields.io/npm/dm/karma-jasmine-html-reporter.svg", "content": "https://img.shields.io/npm/dm/karma-jasmine-html-reporter.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 52, "downloadsCount": 4493814.666666667, "downloadsAcceleration": 9318.195928462716, "dependentsCount": 70}, "maintenance": {"releasesFrequency": 0.8051369863013699, "commitsFrequency": 0.7040753424657534, "openIssues": 1, "issuesDistribution": 0.001939975931186999}}, "score": {"final": 0.5473633080096914, "detail": {"quality": 0.61821806024315, "popularity": 0.36623451366186155, "maintenance": 0.6677594575859854}}}}, {"electron-lite": {"analyzedAt": "2020-05-10T12:47:11.160Z", "collected": {"metadata": {"name": "electron-lite", "scope": "unscoped", "version": "2019.1.7", "description": "this zero-dependency package will download and install the electron (v2.0.16) prebuilt-binary from https://github.com/electron/electron/releases", "keywords": ["electron", "headless-browser", "screenshot", "web-scraper"], "date": "2019-01-07T07:41:49.625Z", "author": {"name": "kai zhu", "email": "kaizhu256@gmail.com", "username": "kaizhu"}, "publisher": {"username": "kaizhu", "email": "kaizhu256@gmail.com"}, "maintainers": [{"username": "kaizhu", "email": "kaizhu256@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/kaizhu256/node-electron-lite.git"}, "links": {"npm": "https://www.npmjs.com/package/electron-lite", "homepage": "https://github.com/kaizhu256/node-electron-lite", "repository": "https://github.com/kaizhu256/node-electron-lite", "bugs": "https://github.com/kaizhu256/node-electron-lite/issues"}, "license": "MIT", "devDependencies": {"utility2": "github:kaizhu256/node-utility2#alpha"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# electron-lite\nthis zero-dependency package will download and install the electron (v2.0.16) prebuilt-binary from https://github.com/electron/electron/releases\n\n# live web demo\n- none\n\n![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.testExampleJs.browser..png)\n\n\n\n[![travis-ci.org build-status](https://api.travis-ci.org/kaizhu256/node-electron-lite.svg)](https://travis-ci.org/kaizhu256/node-electron-lite) [![coverage](https://kaizhu256.github.io/node-electron-lite/build/coverage.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build/coverage.html/index.html)\n\n[![NPM](https://nodei.co/npm/electron-lite.png?downloads=true)](https://www.npmjs.com/package/electron-lite)\n\n[![build commit status](https://kaizhu256.github.io/node-electron-lite/build/build.badge.svg)](https://travis-ci.org/kaizhu256/node-electron-lite)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-electron-lite/tree/master) | [beta](https://github.com/kaizhu256/node-electron-lite/tree/beta) | [alpha](https://github.com/kaizhu256/node-electron-lite/tree/alpha)|\n|--:|:--|:--|:--|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-electron-lite/build..master..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..master..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/test-report.html) | [![test-report](https://kaizhu256.github.io/node-electron-lite/build..alpha..travis-ci.org/test-report.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..alpha..travis-ci.org/test-report.html)|\n| coverage : | [![coverage](https://kaizhu256.github.io/node-electron-lite/build..master..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..master..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-electron-lite/build..alpha..travis-ci.org/coverage.badge.svg)](https://kaizhu256.github.io/node-electron-lite/build..alpha..travis-ci.org/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..master..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..beta..travis-ci.org) | [![build-artifacts](https://kaizhu256.github.io/node-electron-lite/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-electron-lite/tree/gh-pages/build..alpha..travis-ci.org)|\n\n[![npmPackageListing](https://kaizhu256.github.io/node-electron-lite/build/screenshot.npmPackageListing.svg)](https://github.com/kaizhu256/node-electron-lite)\n\n![npmPackageDependencyTree](https://kaizhu256.github.io/node-electron-lite/build/screenshot.npmPackageDependencyTree.svg)\n\n\n\n# table of contents\n1. [cdn download](#cdn-download)\n1. [documentation](#documentation)\n1. [quickstart screenshot example](#quickstart-screenshot-example)\n1. [extra screenshots](#extra-screenshots)\n1. [package.json](#packagejson)\n1. [changelog of last 50 commits](#changelog-of-last-50-commits)\n1. [internal build script](#internal-build-script)\n1. [misc](#misc)\n\n\n\n# cdn download\n- [https://github.com/electron/electron/releases/download/v2.0.16/electron-v2.0.16-darwin-x64.zip](https://github.com/electron/electron/releases/download/v2.0.16/electron-v2.0.16-darwin-x64.zip)\n- [https://github.com/electron/electron/releases/download/v2.0.16/electron-v2.0.16-linux-x64.zip](https://github.com/electron/electron/releases/download/v2.0.16/electron-v2.0.16-linux-x64.zip)\n\n\n\n# documentation\n#### cli help\n![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.npmPackageCliHelp.svg)\n\n#### api doc\n- [https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/apidoc.html](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/apidoc.html)\n\n[![apidoc](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/apidoc.html)\n\n#### todo\n- add npm-script shell-function shNpmPostinstallAll\n- upgrade to electron v3.0.x when stable\n- none\n\n#### changelog 2019.1.7\n- npm publish 2019.1.7\n- minor update to v2.0.16\n- none\n\n#### this package requires\n- darwin or linux os\n\n#### additional info\n- includes external busybox binary from https://busybox.net/downloads/binaries/1.21.1/\n\n\n\n# quickstart screenshot example\n![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.testExampleJs.browser..png)\n\n#### to run this example, follow the instruction in the script below\n- [example.js](https://kaizhu256.github.io/node-electron-lite/build..beta..travis-ci.org/example.js)\n```javascript\n/*\nexample.js\n\nthis electron script will screenshot the webpage https://electron.atom.io\n\ninstruction\n    1. save this script as example.js\n    2. run the shell command:\n        $ npm install electron-lite && \\\n            printf '{\"main\":\"example.js\",\"name\":\"undefined\",\"version\":\"0.0.1\"}' > \\\n            package.json && \\\n            ./node_modules/.bin/electron . --disable-overlay-scrollbar --enable-logging\n    3. view screenshot /tmp/screenshot.testExampleJs.browser..png\n*/\n\n\n\n/* istanbul instrument in package electron */\n/* jslint utility2:true */\n(function () {\n    \"use strict\";\n    var modeNext;\n    var onNext;\n    var options;\n    onNext = function (data) {\n        modeNext += 1;\n        switch (modeNext) {\n        case 1:\n            /* istanbul ignore next */\n            if (process.env.npm_config_mode_auto_restart) {\n                return;\n            }\n            // wait for electron to init\n            try {\n                require(\"app\").on(\"ready\", onNext);\n            } catch (ignore) {\n                require(\"electron\").app.once(\"ready\", onNext);\n            }\n            break;\n        case 2:\n            // init options\n            options = {frame: false, height: 768, width: 1024, x: 0, y: 0};\n            // init browserWindow;\n            try {\n                options.BrowserWindow = require(\"browser-window\");\n            } catch (ignore) {\n                options.BrowserWindow = require(\"electron\").BrowserWindow;\n            }\n            options.browserWindow = new options.BrowserWindow(options);\n            // goto next step when webpage is loaded\n            /* istanbul ignore next */\n            try {\n                options.browserWindow.webContents.once(\"did-stop-loading\", onNext);\n            } catch (ignore) {\n                setTimeout(onNext, 10000);\n            }\n            // open url\n            (options.browserWindow.loadUrl || options.browserWindow.loadURL).call(\n                options.browserWindow,\n                \"https://electron.atom.io\"\n            );\n            break;\n        case 3:\n            // screenshot webpage\n            options.browserWindow.capturePage(options, onNext);\n            break;\n        case 4:\n            // screenshot\n            /* istanbul ignore next */\n            try {\n                data = data.toPng();\n            } catch (ignore) {\n                data = data.toPNG();\n            }\n            require(\"fs\").writeFileSync(\"/tmp/screenshot.testExampleJs.browser..png\", data);\n            console.log(\"created screenshot file /tmp/screenshot.testExampleJs.browser..png\");\n            // exit\n            process.exit(0);\n            break;\n        }\n    };\n    modeNext = 0;\n    onNext();\n}());\n```\n\n#### output from browser\n![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.testExampleJs.browser..png)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.testExampleJs.svg)\n\n\n\n# extra screenshots\n1. [https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n[![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n\n1. [https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n[![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n\n1. [https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n[![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)](https://kaizhu256.github.io/node-electron-lite/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n\n\n\n\n\n\n\n\n# package.json\n```json\n{\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"bin\": {\n        \"electron\": \"lib.electron.js\"\n    },\n    \"description\": \"this zero-dependency package will download and install the electron (v2.0.16) prebuilt-binary from https://github.com/electron/electron/releases\",\n    \"devDependencies\": {\n        \"utility2\": \"kaizhu256/node-utility2#alpha\"\n    },\n    \"engines\": {\n        \"node\": \">=10.0\"\n    },\n    \"homepage\": \"https://github.com/kaizhu256/node-electron-lite\",\n    \"keywords\": [\n        \"electron\",\n        \"headless-browser\",\n        \"screenshot\",\n        \"web-scraper\"\n    ],\n    \"license\": \"MIT\",\n    \"main\": \"lib.electron.js\",\n    \"name\": \"electron-lite\",\n    \"nameAliasPublish\": \"electron-scrape\",\n    \"nameLib\": \"electron\",\n    \"nameOriginal\": \"electron-lite\",\n    \"os\": [\n        \"darwin\",\n        \"linux\"\n    ],\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-electron-lite.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"./npm_scripts.sh\",\n        \"env\": \"env\",\n        \"eval\": \"./npm_scripts.sh\",\n        \"heroku-postbuild\": \"./npm_scripts.sh\",\n        \"postinstall\": \"./npm_scripts.sh\",\n        \"start\": \"./npm_scripts.sh\",\n        \"test\": \"./npm_scripts.sh\",\n        \"utility2\": \"./npm_scripts.sh\"\n    },\n    \"version\": \"2019.1.7\"\n}\n```\n\n\n\n# changelog of last 50 commits\n[![screenshot](https://kaizhu256.github.io/node-electron-lite/build/screenshot.gitLog.svg)](https://github.com/kaizhu256/node-electron-lite/commits)\n\n\n\n# internal build script\n- build_ci.sh\n```shell\n# build_ci.sh\n\n# this shell script will run the build for this package\n\nshBuildCiAfter () {(set -e\n    shDeployCustom\n    # shDeployGithub\n    # shDeployHeroku\n    shReadmeTest example.sh\n)}\n\nshBuildCiBefore () {(set -e\n    ln -s ../../lib.electron.js node_modules/.bin/electron || true\n    shNpmTestPublished\n    shReadmeTest example.js\n    # screenshot\n    cp /tmp/screenshot.*.png \"$npm_config_dir_build\"\n)}\n\n# run shBuildCi\neval \"$(utility2 source)\"\nshBuildCi\n```\n\n\n\n# misc\n- this package was created with [utility2](https://github.com/kaizhu256/node-utility2)"}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 3}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 27}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 192}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 686}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 3552}], "dependentsCount": 0, "starsCount": 2}, "github": {"starsCount": 37, "forksCount": 1, "subscribersCount": 2, "issues": {"count": 0, "openCount": 0, "distribution": {"3600": 0, "10800": 0, "32400": 0, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kaizhu256", "commitsCount": 39}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 11960, "testsSize": 6271, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/kaizhu256/node-electron-lite.svg", "service": "https://api.travis-ci.org/kaizhu256/node-electron-lite.svg", "shields": "https://img.shields.io/travis/kaizhu256/node-electron-lite.svg", "content": "https://img.shields.io/travis/kaizhu256/node-electron-lite.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://nodei.co/npm/electron-lite.png?downloads=true", "shields": "https://img.shields.io/npm/v/electron-lite.svg", "content": "https://img.shields.io/npm/v/electron-lite.json"}, "info": {"service": "npm", "type": "version"}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.6, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 43, "downloadsCount": 64, "downloadsAcceleration": -3.687975646879757, "dependentsCount": 0}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.6414441663987906, "detail": {"quality": 0.9126242635065565, "popularity": 0.05058784380074326, "maintenance": 0.9998604057616101}}}}, {"utility2": {"analyzedAt": "2020-06-14T00:22:19.845Z", "collected": {"metadata": {"name": "utility2", "scope": "unscoped", "version": "2020.6.13", "description": "this zero-dependency package will provide high-level functions to to build, test, and deploy webapps", "keywords": ["continuous-integration", "npmdoc", "npmtest", "test-coverage", "travis-ci"], "date": "2020-06-14T00:18:33.829Z", "author": {"name": "kai zhu", "email": "kaizhu256@gmail.com", "username": "kaizhu"}, "publisher": {"username": "kaizhu", "email": "kaizhu256@gmail.com"}, "maintainers": [{"username": "kaizhu", "email": "kaizhu256@gmail.com"}, {"username": "npmdoc", "email": "npmdoc@kaizhu.org"}, {"username": "npmtest2", "email": "npmtest@kaizhu.org"}], "repository": {"type": "git", "url": "git+https://github.com/kaizhu256/node-utility2.git"}, "links": {"npm": "https://www.npmjs.com/package/utility2", "homepage": "https://github.com/kaizhu256/node-utility2", "repository": "https://github.com/kaizhu256/node-utility2", "bugs": "https://github.com/kaizhu256/node-utility2/issues"}, "license": "MIT", "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 26}], "hasTestScript": true, "readme": "# utility2\nthis zero-dependency package will provide high-level functions to to build, test, and deploy webapps\n\n# live web demo\n- [https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/)\n\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithub.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/)\n\n\n[![travis-ci.com build-status](https://api.travis-ci.com/kaizhu256/node-utility2.svg)](https://travis-ci.com/kaizhu256/node-utility2) [![coverage](https://kaizhu256.github.io/node-utility2/build/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build/coverage.html/index.html)\n\n[![NPM](https://nodei.co/npm/utility2.png?downloads=true)](https://www.npmjs.com/package/utility2)\n\n[![build commit status](https://kaizhu256.github.io/node-utility2/build/build.badge.svg)](https://travis-ci.com/kaizhu256/node-utility2)\n\n| git-branch : | [master](https://github.com/kaizhu256/node-utility2/tree/master) | [beta](https://github.com/kaizhu256/node-utility2/tree/beta) | [alpha](https://github.com/kaizhu256/node-utility2/tree/alpha)|\n|--:|:--|:--|:--|\n| test-server-github : | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.com/app) | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app) | [![github.com test-server](https://kaizhu256.github.io/node-utility2/GitHub-Mark-32px.png)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.com/app)|\n| test-server-heroku : | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://h1-utility2-master.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://h1-utility2-beta.herokuapp.com) | [![heroku.com test-server](https://kaizhu256.github.io/node-utility2/heroku-logo.75x25.png)](https://h1-utility2-alpha.herokuapp.com)|\n| test-report : | [![test-report](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.com/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.com/test-report.html) | [![test-report](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/test-report.html) | [![test-report](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.com/test-report.badge.svg)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.com/test-report.html)|\n| coverage : | [![coverage](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.com/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..master..travis-ci.com/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/coverage.html/index.html) | [![coverage](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.com/coverage.badge.svg)](https://kaizhu256.github.io/node-utility2/build..alpha..travis-ci.com/coverage.html/index.html)|\n| build-artifacts : | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..master..travis-ci.com) | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..beta..travis-ci.com) | [![build-artifacts](https://kaizhu256.github.io/node-utility2/glyphicons_144_folder_open.png)](https://github.com/kaizhu256/node-utility2/tree/gh-pages/build..alpha..travis-ci.com)|\n\n[![npmPackageListing](https://kaizhu256.github.io/node-utility2/build/screenshot.npmPackageListing.svg)](https://github.com/kaizhu256/node-utility2)\n\n![npmPackageDependencyTree](https://kaizhu256.github.io/node-utility2/build/screenshot.npmPackageDependencyTree.svg)\n\n\n# table of contents\n1. [cdn download](#cdn-download)\n1. [documentation](#documentation)\n1. [quickstart standalone app](#quickstart-standalone-app)\n1. [quickstart example.js](#quickstart-examplejs)\n1. [extra screenshots](#extra-screenshots)\n1. [package.json](#packagejson)\n1. [changelog of last 50 commits](#changelog-of-last-50-commits)\n1. [internal build script](#internal-build-script)\n1. [misc](#misc)\n\n\n# cdn download\n- [https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/assets.utility2.rollup.js](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/assets.utility2.rollup.js)\n\n\n# documentation\n#### api doc\n- [https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/apidoc.html](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/apidoc.html)\n\n[![apidoc](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/apidoc.html)\n\n#### cli help\n![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.npmPackageCliHelp.svg)\n\n#### changelog 2020.6.13\n- fix excessive istanbul.ignore in test.js\n- update function shRawLibFetch to inline dataUri assets\n- jslint - add eslint-rule no-multiple-empty-lines\n- bootstrap-lite - re-enable including css-asset in build-process\n- add limited win32-compat\n- rename function middlewareJsonpStateInit to middlewareUtility2StateInit\n- merge shell-function shBuildAppSync and shUtility2DependentsSync into shBuildApp\n- replace shell-function prefix shUtility2 with shUtility2Dependents\n- replace deprecated fs.exists() with fs.access()\n- add shell-function shUtility2DependentsShellEval\n- remove globalThis polyfill\n- remove shell-function shGitAddTee, shGithubRepoBranchId\n- none\n\n#### todo\n- update function shRawLibFetch to minify assets\n- remove dependency to req.urlParsed\n- istanbul - inline class Instrumenter into function instrumentSync\n- istanbul - remove filesUnderRoot subroutine\n- jslint - add nullish-coalescing support\n- jslint - add optional-chaining support\n- jslint - prefer undefined over null\n- replace function local.objectAssignRecurse with Object.assign\n- jslint - fix off-by-one line-error\n- replace db-lite with sql_lite.js\n- add default testCase _testCase_cliRun_help\n- add server stress-test using puppeteer\n- none\n\n\n# quickstart standalone app\n#### to run this example, follow instruction in script below\n- [assets.app.js](https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/assets.app.js)\n```shell\n# example.sh\n\n# this shell script will download and run web-demo of utility2 as standalone app\n\n# 1. download standalone app\ncurl -O https://kaizhu256.github.io/node-utility2/build..beta..travis-ci.com/app/assets.app.js\n# 2. run standalone app\nPORT=8081 node ./assets.app.js\n# 3. open browser to http://127.0.0.1:8081 and play with web-demo\n# 4. edit file assets.app.js to suit your needs\n```\n\n#### output from browser\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/app/assets.example.html)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.svg)\n\n\n# quickstart example.js\n![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252Ftmp%252Fapp%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n#### to run this example, follow the instruction in the script below\n- [example.js](https://kaizhu256.github.io/node-utility2/build/example.js)\n```javascript\n/*\nexample.js\n\nthis script will demo automated browser-tests with coverage\n(via puppeteer and istanbul)\n\ninstruction\n    1. save this script as example.js\n    2. run the shell-command:\n        $ npm install utility2 && \\\n            PATH=\"$(pwd)/node_modules/.bin:$PATH\" \\\n            PORT=8081 \\\n            npm_config_mode_coverage=utility2 \\\n            node_modules/.bin/utility2 test example.js\n    3. view test-report in ./tmp/build/test-report.html\n    4. view coverage in ./tmp/build/coverage.html/index.html\n*/\n\n\n/* istanbul instrument in package utility2 */\n// assets.utility2.header.js - start\n/* jslint utility2:true */\n/* istanbul ignore next */\n// run shared js-env code - init-local\n(function () {\n    \"use strict\";\n    let consoleError;\n    let local;\n    // init debugInline\n    if (!globalThis.debugInline) {\n        consoleError = console.error;\n        globalThis.debugInline = function (...argList) {\n        /*\n         * this function will both print <argList> to stderr\n         * and return <argList>[0]\n         */\n            consoleError(\"\\n\\ndebugInline\");\n            consoleError(...argList);\n            consoleError(\"\\n\");\n            return argList[0];\n        };\n    }\n    // init local\n    local = {};\n    local.local = local;\n    globalThis.globalLocal = local;\n    // init isBrowser\n    local.isBrowser = (\n        typeof globalThis.XMLHttpRequest === \"function\"\n        && globalThis.navigator\n        && typeof globalThis.navigator.userAgent === \"string\"\n    );\n    // init isWebWorker\n    local.isWebWorker = (\n        local.isBrowser && typeof globalThis.importScripts === \"function\"\n    );\n    // init function\n    local.assertJsonEqual = function (aa, bb) {\n    /*\n     * this function will assert JSON.stringify(<aa>) === JSON.stringify(<bb>)\n     */\n        let objectDeepCopyWithKeysSorted;\n        objectDeepCopyWithKeysSorted = function (obj) {\n        /*\n         * this function will recursively deep-copy <obj> with keys sorted\n         */\n            let sorted;\n            if (typeof obj !== \"object\" || !obj) {\n                return obj;\n            }\n            // recursively deep-copy list with child-keys sorted\n            if (Array.isArray(obj)) {\n                return obj.map(objectDeepCopyWithKeysSorted);\n            }\n            // recursively deep-copy obj with keys sorted\n            sorted = {};\n            Object.keys(obj).sort().forEach(function (key) {\n                sorted[key] = objectDeepCopyWithKeysSorted(obj[key]);\n            });\n            return sorted;\n        };\n        aa = JSON.stringify(objectDeepCopyWithKeysSorted(aa));\n        bb = JSON.stringify(objectDeepCopyWithKeysSorted(bb));\n        if (aa !== bb) {\n            throw new Error(JSON.stringify(aa) + \" !== \" + JSON.stringify(bb));\n        }\n    };\n    local.assertOrThrow = function (passed, msg) {\n    /*\n     * this function will throw <msg> if <passed> is falsy\n     */\n        if (passed) {\n            return;\n        }\n        throw (\n            (\n                msg\n                && typeof msg.message === \"string\"\n                && typeof msg.stack === \"string\"\n            )\n            // if msg is err, then leave as is\n            ? msg\n            : new Error(\n                typeof msg === \"string\"\n                // if msg is string, then leave as is\n                ? msg\n                // else JSON.stringify(msg)\n                : JSON.stringify(msg, undefined, 4)\n            )\n        );\n    };\n    local.coalesce = function (...argList) {\n    /*\n     * this function will coalesce null, undefined, or \"\" in <argList>\n     */\n        let arg;\n        let ii;\n        ii = 0;\n        while (ii < argList.length) {\n            arg = argList[ii];\n            if (arg !== undefined && arg !== null && arg !== \"\") {\n                return arg;\n            }\n            ii += 1;\n        }\n        return arg;\n    };\n    local.identity = function (val) {\n    /*\n     * this function will return <val>\n     */\n        return val;\n    };\n    local.nop = function () {\n    /*\n     * this function will do nothing\n     */\n        return;\n    };\n    local.objectAssignDefault = function (tgt = {}, src = {}, depth = 0) {\n    /*\n     * this function will if items from <tgt> are null, undefined, or \"\",\n     * then overwrite them with items from <src>\n     */\n        let recurse;\n        recurse = function (tgt, src, depth) {\n            Object.entries(src).forEach(function ([\n                key, bb\n            ]) {\n                let aa;\n                aa = tgt[key];\n                if (aa === undefined || aa === null || aa === \"\") {\n                    tgt[key] = bb;\n                    return;\n                }\n                if (\n                    depth !== 0\n                    && typeof aa === \"object\" && aa && !Array.isArray(aa)\n                    && typeof bb === \"object\" && bb && !Array.isArray(bb)\n                ) {\n                    recurse(aa, bb, depth - 1);\n                }\n            });\n        };\n        recurse(tgt, src, depth | 0);\n        return tgt;\n    };\n    // bug-workaround - throw unhandledRejections in node-process\n    if (\n        typeof process === \"object\" && process\n        && typeof process.on === \"function\"\n        && process.unhandledRejections !== \"strict\"\n    ) {\n        process.unhandledRejections = \"strict\";\n        process.on(\"unhandledRejection\", function (err) {\n            throw err;\n        });\n    }\n}());\n// assets.utility2.header.js - end\n\n\n/* jslint utility2:true */\n(function (local) {\n\"use strict\";\n\n\n// run shared js-env code - init-before\n(function () {\n// init local\nlocal = (\n    globalThis.utility2_rollup\n    || globalThis.utility2_utility2\n    || require(\"utility2\")\n);\n// init exports\nglobalThis.local = local;\n// run test-server\nlocal.testRunServer(local);\n// init assets\nlocal.assetsDict[\"/assets.hello.txt\"] = \"hello \\ud83d\\ude01\\n\";\nlocal.assetsDict[\"/assets.index.template.html\"] = \"\";\n}());\n\n\n// run shared js-env code - function\n(function () {\nlocal.testCase_ajax_200 = function (opt, onError) {\n/*\n * this function will test ajax's \"200 ok\" handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(undefined, opt);\n        return;\n    }\n    opt = {};\n    // test ajax-path \"assets.hello.txt\"\n    local.ajax({\n        url: \"assets.hello.txt\"\n    }, function (err, xhr) {\n        local.tryCatchOnError(function () {\n            // handle err\n            local.assertOrThrow(!err, err);\n            // validate data\n            opt.data = xhr.responseText;\n            local.assertOrThrow(\n                opt.data === \"hello \\ud83d\\ude01\\n\",\n                opt.data\n            );\n            onError();\n        }, onError);\n    });\n};\n\nlocal.testCase_ajax_404 = function (opt, onError) {\n/*\n * this function will test ajax's \"404 not found\" handling-behavior\n */\n    if (!local.isBrowser) {\n        onError(undefined, opt);\n        return;\n    }\n    opt = {};\n    // test ajax-path \"/undefined\"\n    local.ajax({\n        url: \"/undefined\"\n    }, function (err) {\n        local.tryCatchOnError(function () {\n            // handle err\n            local.assertOrThrow(err, err);\n            opt.statusCode = err.statusCode;\n            // validate 404 http statusCode\n            local.assertOrThrow(opt.statusCode === 404, opt.statusCode);\n            onError();\n        }, onError);\n    });\n};\n\nlocal.testCase_webpage_default = function (opt, onError) {\n/*\n * this function will test webpage's default handling-behavior\n */\n    if (local.isBrowser) {\n        onError(undefined, opt);\n        return;\n    }\n    opt = {\n        url: local.serverLocalHost + \"?modeTest=1\"\n    };\n    local.browserTest(opt, onError);\n};\n}());\n\n\n/* istanbul ignore next */\n// run browser js-env code - init-test\n(function () {\nif (!local.isBrowser) {\n    return;\n}\n// log stderr and stdout to #outputStdout1\n[\"error\", \"log\"].forEach(function (key) {\n    let elem;\n    let fnc;\n    elem = document.querySelector(\"#outputStdout1\");\n    if (!elem) {\n        return;\n    }\n    fnc = console[key];\n    console[key] = function (...argList) {\n        fnc(...argList);\n        // append text to #outputStdout1\n        elem.textContent += argList.map(function (arg) {\n            return (\n                typeof arg === \"string\"\n                ? arg\n                : JSON.stringify(arg, undefined, 4)\n            );\n        }).join(\" \").replace((\n            /\\u001b\\[\\d*m/g\n        ), \"\") + \"\\n\";\n        // scroll textarea to bottom\n        elem.scrollTop = elem.scrollHeight;\n    };\n});\nlocal.objectAssignDefault(local, globalThis.domOnEventDelegateDict);\nglobalThis.domOnEventDelegateDict = local;\n}());\n\n\n/* istanbul ignore next */\n// run node js-env code - init-test\n(function () {\nif (local.isBrowser) {\n    return;\n}\n// init exports\nmodule.exports = local;\n// init assetsDict\nlocal.assetsDict = local.assetsDict || {};\n/* jslint ignore:start */\nlocal.assetsDict[\"/assets.index.template.html\"] = '\\\n<!doctype html>\\n\\\n<html lang=\"en\">\\n\\\n<head>\\n\\\n<meta charset=\"utf-8\">\\n\\\n<meta name=\"viewport\" content=\"width=device-width, initial-scale=1\">\\n\\\n<!-- \"assets.utility2.template.html\" -->\\n\\\n<title>{{env.npm_package_name}} ({{env.npm_package_version}})</title>\\n\\\n<style>\\n\\\n/* jslint utility2:true */\\n\\\n/*csslint\\n\\\n*/\\n\\\n/* csslint ignore:start */\\n\\\n*,\\n\\\n*:after,\\n\\\n*:before {\\n\\\n    box-sizing: border-box;\\n\\\n}\\n\\\n.uiAnimateSlide {\\n\\\n    overflow-y: hidden;\\n\\\n    transition: max-height ease-in 250ms, min-height ease-in 250ms, padding-bottom ease-in 250ms, padding-top ease-in 250ms;\\n\\\n}\\n\\\n/* csslint ignore:end */\\n\\\n@keyframes uiAnimateSpin {\\n\\\n0% {\\n\\\n    transform: rotate(0deg);\\n\\\n}\\n\\\n100% {\\n\\\n    transform: rotate(360deg);\\n\\\n}\\n\\\n}\\n\\\na {\\n\\\n    overflow-wrap: break-word;\\n\\\n}\\n\\\nbody {\\n\\\n    background: #f7f7f7;\\n\\\n    font-family: Arial, Helvetica, sans-serif;\\n\\\n    font-size: small;\\n\\\n    margin: 0 40px;\\n\\\n}\\n\\\nbody > div,\\n\\\nbody > input,\\n\\\nbody > pre,\\n\\\nbody > .button,\\n\\\nbody > .textarea {\\n\\\n    margin-bottom: 20px;\\n\\\n    margin-top: 0;\\n\\\n}\\n\\\nbody > input,\\n\\\nbody > .button {\\n\\\n    width: 20rem;\\n\\\n}\\n\\\nbody > .readonly {\\n\\\n    background: #ddd;\\n\\\n}\\n\\\nbody > .textarea {\\n\\\n    height: 10rem;\\n\\\n    resize: vertical;\\n\\\n    width: 100%;\\n\\\n}\\n\\\ncode,\\n\\\npre,\\n\\\n.textarea {\\n\\\n    font-family: Consolas, Menlo, monospace;\\n\\\n    font-size: smaller;\\n\\\n}\\n\\\npre {\\n\\\n    overflow-wrap: break-word;\\n\\\n    white-space: pre-wrap;\\n\\\n}\\n\\\n.button {\\n\\\n    background: #ddd;\\n\\\n    border: 1px solid #999;\\n\\\n    color: #000;\\n\\\n    cursor: pointer;\\n\\\n    display: inline-block;\\n\\\n    padding: 2px 5px;\\n\\\n    text-align: center;\\n\\\n    text-decoration: none;\\n\\\n}\\n\\\n.button:hover {\\n\\\n    background: #bbb;\\n\\\n}\\n\\\n.colorError {\\n\\\n    color: #d00;\\n\\\n}\\n\\\n.textarea {\\n\\\n    background: #fff;\\n\\\n    border: 1px solid #999;\\n\\\n    border-radius: 0;\\n\\\n    cursor: auto;\\n\\\n    overflow: auto;\\n\\\n    padding: 2px;\\n\\\n}\\n\\\n.zeroPixel {\\n\\\n    border: 0;\\n\\\n    height: 0;\\n\\\n    margin: 0;\\n\\\n    padding: 0;\\n\\\n    width: 0;\\n\\\n}\\n\\\n</style>\\n\\\n</head>\\n\\\n<body>\\n\\\n<div class=\"uiAnimateSpin\" style=\"animation: uiAnimateSpin 2s linear infinite; border: 5px solid #999; border-radius: 50%; border-top: 5px solid #7d7; display: none; height: 25px; vertical-align: middle; width: 25px;\"></div>\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\n// init domOnEventWindowOnloadTimeElapsed\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will measure and print time-elapsed for window.onload\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (!(\\n\\\n        typeof window === \"object\" && window && window.document\\n\\\n        && typeof document.addEventListener === \"function\"\\n\\\n    ) || window.domOnEventWindowOnloadTimeElapsed) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventWindowOnloadTimeElapsed = Date.now() + 100;\\n\\\n    window.addEventListener(\"load\", function () {\\n\\\n        setTimeout(function () {\\n\\\n            window.domOnEventWindowOnloadTimeElapsed = (\\n\\\n                Date.now()\\n\\\n                - window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n            console.error(\\n\\\n                \"domOnEventWindowOnloadTimeElapsed = \"\\n\\\n                + window.domOnEventWindowOnloadTimeElapsed\\n\\\n            );\\n\\\n        }, 100);\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n// init domOnEventAjaxProgressUpdate\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will display incrementing ajax-progress-bar\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    let opt;\\n\\\n    let styleBar0;\\n\\\n    let styleBar;\\n\\\n    let styleModal0;\\n\\\n    let styleModal;\\n\\\n    let timeStart;\\n\\\n    let timerInterval;\\n\\\n    let timerTimeout;\\n\\\n    let tmp;\\n\\\n    let width;\\n\\\n    try {\\n\\\n        if (\\n\\\n            window.domOnEventAjaxProgressUpdate\\n\\\n            || !document.getElementById(\"domElementAjaxProgressBar1\").style\\n\\\n        ) {\\n\\\n            return;\\n\\\n        }\\n\\\n    } catch (ignore) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventAjaxProgressUpdate = function (gotoState, onError) {\\n\\\n        gotoState = (gotoState | 0) + 1;\\n\\\n        switch (gotoState) {\\n\\\n        // ajaxProgress - show\\n\\\n        case 1:\\n\\\n            // init timerInterval and timerTimeout\\n\\\n            if (!timerTimeout) {\\n\\\n                timeStart = Date.now();\\n\\\n                timerInterval = setInterval(opt, 2000, 1, onError);\\n\\\n                timerTimeout = setTimeout(opt, opt.timeout, 2, onError);\\n\\\n            }\\n\\\n            // show ajaxProgressBar\\n\\\n            if (width !== -1) {\\n\\\n                styleBar.background = styleBar0.background;\\n\\\n            }\\n\\\n            setTimeout(opt, 50, gotoState, onError);\\n\\\n            break;\\n\\\n        // ajaxProgress - increment\\n\\\n        case 2:\\n\\\n            // show ajaxProgressBar\\n\\\n            if (width === -1) {\\n\\\n                break;\\n\\\n            }\\n\\\n            styleBar.background = styleBar0.background;\\n\\\n            // reset ajaxProgress if it reaches end\\n\\\n            if ((styleBar.width.slice(0, -1) | 0) > 95) {\\n\\\n                width = 0;\\n\\\n            }\\n\\\n            // this algorithm will indefinitely increment ajaxProgress\\n\\\n            // with successively smaller increments without reaching 100%\\n\\\n            width += 1;\\n\\\n            styleBar.width = Math.max(\\n\\\n                100 - 75 * Math.exp(-0.125 * width),\\n\\\n                styleBar.width.slice(0, -1) | 0\\n\\\n            ) + \"%\";\\n\\\n            // show ajaxProgressModal\\n\\\n            styleModal.height = \"100%\";\\n\\\n            styleModal.opacity = styleModal0.opacity;\\n\\\n            if (!opt.cnt) {\\n\\\n                setTimeout(opt, 0, gotoState, onError);\\n\\\n            }\\n\\\n            break;\\n\\\n        // ajaxProgress - 100%\\n\\\n        case 3:\\n\\\n            width = -1;\\n\\\n            styleBar.width = \"100%\";\\n\\\n            setTimeout(opt, 1000, gotoState, onError);\\n\\\n            break;\\n\\\n        // ajaxProgress - hide\\n\\\n        case 4:\\n\\\n            // debug timeElapsed\\n\\\n            tmp = Date.now();\\n\\\n            console.error(\\n\\\n                \"domOnEventAjaxProgressUpdate - timeElapsed - \"\\n\\\n                + (tmp - timeStart)\\n\\\n                + \" ms\"\\n\\\n            );\\n\\\n            // cleanup timerInterval and timerTimeout\\n\\\n            timeStart = tmp;\\n\\\n            clearInterval(timerInterval);\\n\\\n            timerInterval = undefined;\\n\\\n            clearTimeout(timerTimeout);\\n\\\n            timerTimeout = undefined;\\n\\\n            // hide ajaxProgressBar\\n\\\n            styleBar.background = \"transparent\";\\n\\\n            // hide ajaxProgressModal\\n\\\n            styleModal.opacity = \"0\";\\n\\\n            if (onError) {\\n\\\n                onError();\\n\\\n            }\\n\\\n            setTimeout(opt, 250, gotoState);\\n\\\n            break;\\n\\\n        // ajaxProgress - reset\\n\\\n        default:\\n\\\n            opt.cnt = 0;\\n\\\n            width = 0;\\n\\\n            styleBar.width = \"0%\";\\n\\\n            styleModal.height = \"0\";\\n\\\n        }\\n\\\n    };\\n\\\n    opt = window.domOnEventAjaxProgressUpdate;\\n\\\n    opt.end = function (onError) {\\n\\\n        opt.cnt = 0;\\n\\\n        window.domOnEventAjaxProgressUpdate(2, onError);\\n\\\n    };\\n\\\n    // init styleBar\\n\\\n    styleBar = document.getElementById(\"domElementAjaxProgressBar1\").style;\\n\\\n    styleBar0 = Object.assign({}, styleBar);\\n\\\n    Object.entries({\\n\\\n        background: \"#d00\",\\n\\\n        height: \"2px\",\\n\\\n        left: \"0\",\\n\\\n        margin: \"0\",\\n\\\n        padding: \"0\",\\n\\\n        position: \"fixed\",\\n\\\n        top: \"0\",\\n\\\n        transition: \"background 250ms, width 750ms\",\\n\\\n        width: \"0%\",\\n\\\n        \"z-index\": \"1\"\\n\\\n    }).forEach(function (entry) {\\n\\\n        styleBar[entry[0]] = styleBar[entry[0]] || entry[1];\\n\\\n    });\\n\\\n    // init styleModal\\n\\\n    styleModal = document.getElementById(\"domElementAjaxProgressModal1\") || {};\\n\\\n    styleModal = styleModal.style || {};\\n\\\n    styleModal0 = Object.assign({}, styleModal);\\n\\\n    Object.entries({\\n\\\n        height: \"0\",\\n\\\n        left: \"0\",\\n\\\n        margin: \"0\",\\n\\\n        padding: \"0\",\\n\\\n        position: \"fixed\",\\n\\\n        top: \"0\",\\n\\\n        transition: \"opacity 125ms\",\\n\\\n        width: \"100%\",\\n\\\n        \"z-index\": \"1\"\\n\\\n    }).forEach(function (entry) {\\n\\\n        styleModal[entry[0]] = styleModal[entry[0]] || entry[1];\\n\\\n    });\\n\\\n    // init state\\n\\\n    width = 0;\\n\\\n    opt.cnt = 0;\\n\\\n    opt.timeout = 30000;\\n\\\n    // init ajaxProgress\\n\\\n    window.domOnEventAjaxProgressUpdate();\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n// init domOnEventDelegateDict\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will handle delegated dom-evt\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    let debounce;\\n\\\n    let timerTimeout;\\n\\\n    debounce = function () {\\n\\\n        return setTimeout(function () {\\n\\\n            timerTimeout = undefined;\\n\\\n        }, 30);\\n\\\n    };\\n\\\n    if (!(\\n\\\n        typeof window === \"object\" && window && window.document\\n\\\n        && typeof document.addEventListener === \"function\"\\n\\\n    ) || window.domOnEventDelegateDict) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventDelegateDict = {};\\n\\\n    window.domOnEventDelegateDict.domOnEventDelegate = function (evt) {\\n\\\n        evt.targetOnEvent = evt.target.closest(\"[data-onevent]\");\\n\\\n        if (\\n\\\n            !evt.targetOnEvent\\n\\\n            || evt.targetOnEvent.dataset.onevent === \"domOnEventNop\"\\n\\\n            || evt.target.closest(\".disabled,.readonly\")\\n\\\n        ) {\\n\\\n            return;\\n\\\n        }\\n\\\n        // filter evt-change\\n\\\n        switch (evt.type !== \"change\" && evt.target.type) {\\n\\\n        case \"checkbox\":\\n\\\n        case \"file\":\\n\\\n        case \"select-one\":\\n\\\n        case \"radio\":\\n\\\n            return;\\n\\\n        }\\n\\\n        // filter evt-keyup\\n\\\n        switch (evt.type) {\\n\\\n        case \"keyup\":\\n\\\n            if (!timerTimeout && (\\n\\\n                evt.target.tagName === \"INPUT\"\\n\\\n                || evt.target.tagName === \"TEXTAREA\"\\n\\\n            )) {\\n\\\n                timerTimeout = debounce();\\n\\\n                if (evt.target.dataset.valueOld !== evt.target.value) {\\n\\\n                    evt.target.dataset.valueOld = evt.target.value;\\n\\\n                    break;\\n\\\n                }\\n\\\n            }\\n\\\n            return;\\n\\\n        }\\n\\\n        switch (evt.targetOnEvent.tagName) {\\n\\\n        case \"BUTTON\":\\n\\\n        case \"FORM\":\\n\\\n            evt.preventDefault();\\n\\\n            break;\\n\\\n        }\\n\\\n        evt.stopPropagation();\\n\\\n        // handle domOnEventClickTarget\\n\\\n        if (evt.targetOnEvent.dataset.onevent === \"domOnEventClickTarget\") {\\n\\\n            document.querySelector(\\n\\\n                evt.targetOnEvent.dataset.clickTarget\\n\\\n            ).click();\\n\\\n            return;\\n\\\n        }\\n\\\n        window.domOnEventDelegateDict[evt.targetOnEvent.dataset.onevent](evt);\\n\\\n    };\\n\\\n    // handle evt\\n\\\n    [\\n\\\n        \"change\",\\n\\\n        \"click\",\\n\\\n        \"keyup\",\\n\\\n        \"submit\"\\n\\\n    ].forEach(function (eventType) {\\n\\\n        document.addEventListener(\\n\\\n            eventType,\\n\\\n            window.domOnEventDelegateDict.domOnEventDelegate\\n\\\n        );\\n\\\n    });\\n\\\n}());\\n\\\n\\n\\\n\\n\\\n// init domOnEventSelectAllWithinPre\\n\\\n(function () {\\n\\\n/*\\n\\\n * this function will limit select-all within <pre tabIndex=\"0\"> elem\\n\\\n * https://stackoverflow.com/questions/985272/selecting-text-in-an-element-akin-to-highlighting-with-your-mouse\\n\\\n */\\n\\\n    \"use strict\";\\n\\\n    if (!(\\n\\\n        typeof window === \"object\" && window && window.document\\n\\\n        && typeof document.addEventListener === \"function\"\\n\\\n    ) || window.domOnEventSelectAllWithinPre) {\\n\\\n        return;\\n\\\n    }\\n\\\n    window.domOnEventSelectAllWithinPre = function (evt) {\\n\\\n        let range;\\n\\\n        let selection;\\n\\\n        if (\\n\\\n            evt && (evt.ctrlKey || evt.metaKey) && evt.key === \"a\"\\n\\\n            && evt.target.closest(\"pre\")\\n\\\n        ) {\\n\\\n            range = document.createRange();\\n\\\n            range.selectNodeContents(evt.target.closest(\"pre\"));\\n\\\n            selection = window.getSelection();\\n\\\n            selection.removeAllRanges();\\n\\\n            selection.addRange(range);\\n\\\n            evt.preventDefault();\\n\\\n        }\\n\\\n    };\\n\\\n    // handle evt\\n\\\n    document.addEventListener(\\n\\\n        \"keydown\",\\n\\\n        window.domOnEventSelectAllWithinPre\\n\\\n    );\\n\\\n}());\\n\\\n</script>\\n\\\n<h1>\\n\\\n<!-- utility2-comment\\n\\\n<a\\n\\\n    {{#if env.npm_package_homepage}}\\n\\\n    href=\"{{env.npm_package_homepage}}\"\\n\\\n    {{/if env.npm_package_homepage}}\\n\\\n    target=\"_blank\"\\n\\\n>\\n\\\nutility2-comment -->\\n\\\n    {{env.npm_package_name}} ({{env.npm_package_version}})\\n\\\n<!-- utility2-comment\\n\\\n</a>\\n\\\nutility2-comment -->\\n\\\n</h1>\\n\\\n<h3>{{env.npm_package_description}}</h3>\\n\\\n<!-- utility2-comment\\n\\\n<a class=\"button\" download href=\"assets.app.js\">download standalone app</a><br>\\n\\\n<button class=\"button\" data-onevent=\"testRunBrowser\" id=\"buttonTestRun1\">run browser-tests</button><br>\\n\\\n<div class=\"uiAnimateSlide\" id=\"htmlTestReport1\" style=\"border-bottom: 0; border-top: 0; margin-bottom: 0; margin-top: 0; max-height: 0; padding-bottom: 0; padding-top: 0;\"></div>\\n\\\nutility2-comment -->\\n\\\n\\n\\\n\\n\\\n<!-- custom-html-start -->\\n\\\n<label>edit or paste script below to cover and test</label>\\n\\\n<textarea class=\"textarea\" data-onevent=\"domOnEventInputChange\" id=\"inputTextarea1\">\\n\\\n// remove comment below to disable jslint\\n\\\n/*jslint browser, devel*/\\n\\\n/*global window*/\\n\\\n(function () {\\n\\\n    \"use strict\";\\n\\\n    var testCaseDict;\\n\\\n    testCaseDict = {};\\n\\\n    testCaseDict.modeTest = 1;\\n\\\n\\n\\\n    // comment this testCase to disable failed error demo\\n\\\n    testCaseDict.testCase_failed_error_demo = function (opt, onError) {\\n\\\n    /*\\n\\\n     * this function will run a failed error demo\\n\\\n     */\\n\\\n        // hack-jslint\\n\\\n        window.utility2.nop(opt);\\n\\\n        onError(new Error(\"this is a failed error demo\"));\\n\\\n    };\\n\\\n\\n\\\n    testCaseDict.testCase_passed_ajax_demo = function (opt, onError) {\\n\\\n    /*\\n\\\n     * this function will demo a passed ajax test\\n\\\n     */\\n\\\n        var data;\\n\\\n        opt = {url: \"/\"};\\n\\\n        // test ajax-req for main-page \"/\"\\n\\\n        window.utility2.ajax(opt, function (err, xhr) {\\n\\\n            try {\\n\\\n                // handle err\\n\\\n                console.assert(!err, err);\\n\\\n                // validate \"200 ok\" status\\n\\\n                console.assert(xhr.statusCode === 200, xhr.statusCode);\\n\\\n                // validate non-empty data\\n\\\n                data = xhr.responseText;\\n\\\n                console.assert(data && data.length > 0, data);\\n\\\n                onError();\\n\\\n            } catch (errCaught) {\\n\\\n                onError(errCaught);\\n\\\n            }\\n\\\n        });\\n\\\n    };\\n\\\n\\n\\\n    window.utility2.testRunDefault(testCaseDict);\\n\\\n}());\\n\\\n</textarea>\\n\\\n<button class=\"button\" data-onevent=\"domOnEventInputChange\" id=\"buttonJslintAutofix1\">jslint autofix</button><br>\\n\\\n<pre class= \"colorError\" id=\"outputJslintPre1\" tabindex=\"0\"></pre>\\n\\\n<label>instrumented-code</label>\\n\\\n<textarea class=\"readonly textarea\" id=\"outputTextarea1\" readonly tabindex=\"0\"></textarea>\\n\\\n<label>stderr and stdout</label>\\n\\\n<textarea class=\"onevent-reset-output readonly textarea\" id=\"outputStdout1\" readonly></textarea>\\n\\\n<div id=\"htmlTestReport2\"></div>\\n\\\n<div id=\"htmlCoverageReport1\"></div>\\n\\\n<script>\\n\\\n/* jslint utility2:true */\\n\\\nwindow.addEventListener(\"load\", function (local) {\\n\\\n\"use strict\";\\n\\\nlocal = window.utility2;\\n\\\ndocument.querySelectorAll(\\n\\\n    \"#buttonTestRun1, #htmlTestReport1\"\\n\\\n).forEach(function (elem) {\\n\\\n    elem.style.display = \"none\";\\n\\\n});\\n\\\nlocal.domOnEventInputChange = function (evt) {\\n\\\n    switch (evt.type + \".\" + evt.target.id) {\\n\\\n    case \"click.buttonJslintAutofix1\":\\n\\\n    case \"keyup.inputTextarea1\":\\n\\\n        // jslint #inputTextarea1\\n\\\n        local.jslintAndPrint(document.querySelector(\\n\\\n            \"#inputTextarea1\"\\n\\\n        ).value, \"inputTextarea1.js\", {\\n\\\n            autofix: evt.target.id === \"buttonJslintAutofix1\",\\n\\\n            conditional: evt.target.id !== \"buttonJslintAutofix1\"\\n\\\n        });\\n\\\n        if (local.jslint.jslintResult.autofix) {\\n\\\n            document.querySelector(\\n\\\n                \"#inputTextarea1\"\\n\\\n            ).value = local.jslint.jslintResult.code;\\n\\\n        }\\n\\\n        document.querySelector(\\n\\\n            \"#outputJslintPre1\"\\n\\\n        ).textContent = local.jslint.jslintResult.errMsg.replace((\\n\\\n            /\\\\u001b\\\\[\\\\d*m/g\\n\\\n        ), \"\").trim();\\n\\\n        // try to cleanup __coverage__\\n\\\n        try {\\n\\\n            delete globalThis.__coverage__[\"/inputTextarea1.js\"];\\n\\\n        } catch (ignore) {}\\n\\\n        // try to cover and eval #inputTextarea1\\n\\\n        try {\\n\\\n            document.querySelector(\\n\\\n                \"#outputTextarea1\"\\n\\\n            ).value = local.istanbul.instrumentSync(\\n\\\n                document.querySelector(\"#inputTextarea1\").value,\\n\\\n                \"/inputTextarea1.js\"\\n\\\n            );\\n\\\n            eval( // jslint ignore:line\\n\\\n                document.querySelector(\"#outputTextarea1\").value\\n\\\n            );\\n\\\n        } catch (errCaught) {\\n\\\n            console.error(errCaught);\\n\\\n        }\\n\\\n        break;\\n\\\n    }\\n\\\n};\\n\\\n// handle evt\\n\\\nlocal.eventListenerAdd(\"utility2.testRunEnd\", function () {\\n\\\n    document.querySelector(\\n\\\n        \"#htmlCoverageReport1\"\\n\\\n    ).innerHTML = local.istanbul.coverageReportCreate({\\n\\\n        coverage: globalThis.__coverage__\\n\\\n    });\\n\\\n});\\n\\\nlocal.eventListenerAdd(\"utility2.testRunProgressUpdate\", function (testReport) {\\n\\\n    document.querySelector(\\n\\\n        \"#htmlTestReport2\"\\n\\\n    ).innerHTML = local.testReportMerge(testReport, {});\\n\\\n});\\n\\\nlocal.domOnEventInputChange({\\n\\\n    target: {\\n\\\n        id: \"inputTextarea1\"\\n\\\n    },\\n\\\n    type: \"keyup\"\\n\\\n});\\n\\\n});\\n\\\n</script>\\n\\\n<!-- custom-html-end -->\\n\\\n\\n\\\n\\n\\\n<!-- utility2-comment\\n\\\n{{#if isRollup}}\\n\\\n<script src=\"assets.app.js\"></script>\\n\\\n{{#unless isRollup}}\\n\\\nutility2-comment -->\\n\\\n<script src=\"assets.utility2.lib.istanbul.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.jslint.js\"></script>\\n\\\n<script src=\"assets.utility2.lib.marked.js\"></script>\\n\\\n<script src=\"assets.utility2.js\"></script>\\n\\\n<script>window.utility2_onReadyBefore.cnt += 1;</script>\\n\\\n<script src=\"utility2.state.init.js\"></script>\\n\\\n<script src=\"assets.example.js\"></script>\\n\\\n<script src=\"assets.test.js\"></script>\\n\\\n<script>\\n\\\nif (window.utility2_onReadyBefore) {\\n\\\n    window.utility2_onReadyBefore();\\n\\\n}\\n\\\n</script>\\n\\\n<!-- utility2-comment\\n\\\n{{/if isRollup}}\\n\\\nutility2-comment -->\\n\\\n<div style=\"text-align: center;\">\\n\\\n    [\\n\\\n    this app was created with\\n\\\n    <a\\n\\\n        href=\"https://github.com/kaizhu256/node-utility2\" target=\"_blank\"\\n\\\n    >utility2</a>\\n\\\n    ]\\n\\\n</div>\\n\\\n</body>\\n\\\n</html>\\n\\\n';\n/* jslint ignore:end */\nlocal.assetsDict[\"/assets.utility2.js\"] = (\n    local.assetsDict[\"/assets.utility2.js\"]\n    || require(\"fs\").readFileSync(\n        require(\"path\").resolve(local.__dirname + \"/lib.utility2.js\"),\n        \"utf8\"\n    ).replace((\n        /^#!\\//\n    ), \"// \")\n);\n/* validateLineSortedReset */\nlocal.assetsDict[\"/\"] = local.assetsDict[\n    \"/assets.index.template.html\"\n].replace((\n    /\\{\\{env\\.(\\w+?)\\}\\}/g\n), function (match0, match1) {\n    switch (match1) {\n    case \"npm_package_description\":\n        return \"the greatest app in the world!\";\n    case \"npm_package_name\":\n        return \"utility2\";\n    case \"npm_package_nameLib\":\n        return \"utility2\";\n    case \"npm_package_version\":\n        return \"0.0.1\";\n    default:\n        return match0;\n    }\n});\nlocal.assetsDict[\"/assets.example.html\"] = local.assetsDict[\"/\"];\n// init cli\nif (module !== require.main || globalThis.utility2_rollup) {\n    return;\n}\nlocal.assetsDict[\"/assets.example.js\"] = (\n    local.assetsDict[\"/assets.example.js\"]\n    || require(\"fs\").readFileSync(__filename, \"utf8\")\n);\nlocal.assetsDict[\"/favicon.ico\"] = local.assetsDict[\"/favicon.ico\"] || \"\";\nlocal.assetsDict[\"/index.html\"] = local.assetsDict[\"/\"];\n// if $npm_config_timeout_exit exists,\n// then exit this process after $npm_config_timeout_exit ms\nif (Number(process.env.npm_config_timeout_exit)) {\n    setTimeout(process.exit, Number(process.env.npm_config_timeout_exit));\n}\n// start server\nif (globalThis.utility2_serverHttp1) {\n    return;\n}\nprocess.env.PORT = process.env.PORT || \"8081\";\nconsole.error(\"http-server listening on port \" + process.env.PORT);\nrequire(\"http\").createServer(function (req, res) {\n    let data;\n    data = local.assetsDict[require(\"url\").parse(req.url).pathname];\n    if (data !== undefined) {\n        res.end(data);\n        return;\n    }\n    res.statusCode = 404;\n    res.end();\n}).listen(process.env.PORT);\n}());\n}());\n```\n\n#### output from browser\n![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252Ftmp%252Fapp%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n#### output from shell\n![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.svg)\n\n\n# extra screenshots\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fapidoc.html.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Fcoverage.lib.html.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.buildCi.browser.%252Ftmp%252Fbuild%252Ftest-report.html.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithub.browser.%252Fnode-utility2%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithub.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithub.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithub.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithubTest.browser.%252Fnode-utility2%252Fbuild%252Fapp.png](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithubTest.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithubTest.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.deployGithubTest.browser.%252Fnode-utility2%252Fbuild%252Fapp.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.deployHeroku.browser.%252F.png](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHeroku.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHeroku.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHeroku.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.deployHerokuTest.browser.%252F.png](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHerokuTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHerokuTest.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.deployHerokuTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.npmTest.browser.%252F.png](https://kaizhu256.github.io/node-utility2/build/screenshot.npmTest.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.npmTest.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.npmTest.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252F.png](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleJs.browser.%252F.png)\n\n1. [https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.browser.%252F.png](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.browser.%252F.png)\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.browser.%252F.png)](https://kaizhu256.github.io/node-utility2/build/screenshot.testExampleSh.browser.%252F.png)\n\n\n# package.json\n```json\n{\n    \"author\": \"kai zhu <kaizhu256@gmail.com>\",\n    \"bin\": {\n        \"utility2\": \"lib.utility2.sh\",\n        \"utility2-apidoc\": \"lib.apidoc.js\",\n        \"utility2-istanbul\": \"lib.istanbul.js\",\n        \"utility2-jslint\": \"lib.jslint.js\"\n    },\n    \"description\": \"this zero-dependency package will provide high-level functions to to build, test, and deploy webapps\",\n    \"devDependencies\": {},\n    \"engines\": {\n        \"node\": \">=12.0\"\n    },\n    \"fileCount\": 23,\n    \"homepage\": \"https://github.com/kaizhu256/node-utility2\",\n    \"keywords\": [\n        \"continuous-integration\",\n        \"npmdoc\",\n        \"npmtest\",\n        \"test-coverage\",\n        \"travis-ci\"\n    ],\n    \"license\": \"MIT\",\n    \"main\": \"lib.utility2.js\",\n    \"name\": \"utility2\",\n    \"nameAliasPublish\": \"npmtest-lite test-lite\",\n    \"nameLib\": \"utility2\",\n    \"nameOriginal\": \"utility2\",\n    \"repository\": {\n        \"type\": \"git\",\n        \"url\": \"https://github.com/kaizhu256/node-utility2.git\"\n    },\n    \"scripts\": {\n        \"build-ci\": \"./npm_scripts.sh\",\n        \"env\": \"env\",\n        \"eval\": \"./npm_scripts.sh\",\n        \"heroku-postbuild\": \"./npm_scripts.sh\",\n        \"postinstall\": \"./npm_scripts.sh\",\n        \"start\": \"./npm_scripts.sh\",\n        \"test\": \"./npm_scripts.sh\",\n        \"utility2\": \"./npm_scripts.sh\"\n    },\n    \"utility2Dependents\": [\n        \"2019.09.14 swgg\",\n        \"2020.02.12 sqljs-lite\",\n        \"2020.06.08 apidoc-lite\",\n        \"2020.06.08 istanbul-lite\",\n        \"2020.06.08 jslint-lite\",\n        \"2020.06.12 bootstrap-lite\",\n        \"2020.06.13 utility2\"\n    ],\n    \"version\": \"2020.6.13\"\n}\n```\n\n\n# changelog of last 50 commits\n[![screenshot](https://kaizhu256.github.io/node-utility2/build/screenshot.gitLog.svg)](https://github.com/kaizhu256/node-utility2/commits)\n\n\n# internal build script\n- Dockerfile.base\n```shell\n# Dockerfile.base\n# docker build -f tmp/README.Dockerfile.base -t kaizhu256/node-utility2:base .\n# docker build -f \"tmp/README.Dockerfile.$DOCKER_TAG\" -t \"$GITHUB_REPO:$DOCKER_TAG\" .\n# https://hub.docker.com/_/node/\nFROM debian:stable-slim\nMAINTAINER kai zhu <kaizhu256@gmail.com>\nVOLUME [ \\\n    \"/mnt\", \\\n    \"/root\", \\\n    \"/tmp\", \\\n    \"/usr/share/doc\", \\\n    \"/usr/share/man\", \\\n    \"/var/cache\", \\\n    \"/var/lib/apt\", \\\n    \"/var/log\", \\\n    \"/var/tmp\" \\\n]\nWORKDIR /tmp\n# install nodejs\n# https://nodejs.org/en/download/package-manager/#debian-and-ubuntu-based-linux-distributions\nRUN (set -e; \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n        apt-utils \\\n        busybox \\\n        ca-certificates \\\n        curl \\\n        git \\\n        gnupg; \\\n    (busybox --list | xargs -n1 /bin/sh -c \\\n        'ln -s /bin/busybox /bin/$0 2>/dev/null' || true); \\\n    curl -Lf https://deb.nodesource.com/setup_12.x | /bin/bash -; \\\n    apt-get install -y nodejs; \\\n    (cd /usr/lib && npm install sqlite3@4); \\\n)\n# install google-chrome-stable\nRUN (set -e; \\\n    curl -Lf https://dl.google.com/linux/linux_signing_key.pub | \\\n        apt-key add -; \\\n    printf \"deb http://dl.google.com/linux/chrome/deb/ stable main\\n\" > \\\n        /etc/apt/sources.list.d/google.list; \\\n    apt-get update && apt-get install google-chrome-stable -y; \\\n)\n# install extra\nRUN (set -e; \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    apt-get update; \\\n    apt-get install --no-install-recommends -y \\\n        aptitude \\\n        ffmpeg \\\n        imagemagick \\\n        less \\\n        nginx-extras \\\n        screen \\\n        sqlite3 \\\n        transmission-daemon \\\n        ssh \\\n        vim \\\n        wget \\\n        whois \\\n        xvfb; \\\n)\n```\n\n- Dockerfile.latest\n```shell\n# Dockerfile.latest\nFROM kaizhu256/node-utility2:base\nMAINTAINER kai zhu <kaizhu256@gmail.com>\n# install utility2\nRUN (set -e; \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    npm install -g eslint puppeteer \\\n    rm -f /tmp/.X99-lock && export DISPLAY=:99.0 && (Xvfb \"$DISPLAY\" &); \\\n    npm install kaizhu256/node-utility2#alpha; \\\n    cp -a node_modules /; \\\n    cd node_modules/utility2; \\\n    npm install; \\\n    npm test; \\\n)\n```\n\n- Dockerfile.tmp\n```shell\n# Dockerfile.tmp\nFROM kaizhu256/node-utility2:base\nMAINTAINER kai zhu <kaizhu256@gmail.com>\n# install utility2\nRUN (set -e; \\\n    export DEBIAN_FRONTEND=noninteractive; \\\n    rm -f /tmp/.X99-lock && export DISPLAY=:99.0 && (Xvfb \"$DISPLAY\" &); \\\n    npm install kaizhu256/node-utility2#alpha; \\\n    cp -a node_modules /; \\\n    cd node_modules/utility2; \\\n    npm install; \\\n    npm test; \\\n)\n```\n\n- build_ci.sh\n```shell\n# build_ci.sh\n\n# this shell script will run the build for this package\n\nshBuildCiAfter () {(set -e\n    #// hack-coverage - test comment handling-behavior\n    # shDeployCustom\n    shDeployGithub\n    shDeployHeroku\n    shReadmeTest example.sh\n    # restore $CI_BRANCH\n    export CI_BRANCH=\"$CI_BRANCH_OLD\"\n    # docker build\n    docker --version 2>/dev/null || return\n    export DOCKER_TAG=\"$(printf \"$CI_BRANCH\" | sed -e \"s/docker.//\")\"\n    # if $DOCKER_TAG is not unique from $CI_BRANCH, then return\n    if [ \"$DOCKER_TAG\" = \"$CI_BRANCH\" ]\n    then\n        return\n    fi\n    # docker build\n    docker build \\\n        -f \"tmp/README.Dockerfile.$DOCKER_TAG\" \\\n        -t \"$GITHUB_REPO:$DOCKER_TAG\" .\n    # docker test\n    case \"$CI_BRANCH\" in\n    docker.latest)\n        # npm test utility2\n        for PACKAGE in utility2 \"kaizhu256/node-utility2#alpha\"\n        do\n            docker run \"$GITHUB_REPO:$DOCKER_TAG\" /bin/sh -c \"set -e\n                curl -Lf https://raw.githubusercontent.com\\\n/kaizhu256/node-utility2/alpha/lib.utility2.sh > /tmp/lib.utility2.sh\n                . /tmp/lib.utility2.sh\n                npm install '$PACKAGE'\n                cd node_modules/utility2\n                shBuildInsideDocker\n\"\n        done\n        ;;\n    esac\n    # https://docs.travis-ci.com/user/docker/#Pushing-a-Docker-Image-to-a-Registry\n    # docker push\n    if [ \"$DOCKER_PASSWORD\" ]\n    then\n        docker login -p=\"$DOCKER_PASSWORD\" -u=\"$DOCKER_USERNAME\"\n        docker push \"$GITHUB_REPO:$DOCKER_TAG\"\n    fi\n)}\n\nshBuildCiBefore () {(set -e\n    shNpmTestPublished\n    shReadmeTest example.js\n    # screenshot\n    MODE_BUILD=testExampleJs shBrowserScreenshot \\\n        file:///tmp/app/tmp/build/coverage.html/app/example.js.html\n    MODE_BUILD=testExampleJs shBrowserScreenshot \\\n        file:///tmp/app/tmp/build/test-report.html\n)}\n\n# run shBuildCi\n. ./lib.utility2.sh\nshBuildCi\n```\n\n\n# misc\n- this package was created with [utility2](https://github.com/kaizhu256/node-utility2)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 646}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3450}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4605}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 10543}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 25813}], "dependentsCount": 4, "starsCount": 2}, "github": {"starsCount": 20, "forksCount": 7, "subscribersCount": 1, "issues": {"count": 7, "openCount": 0, "distribution": {"3600": 5, "10800": 0, "32400": 2, "97200": 0, "291600": 0, "874800": 0, "2624400": 0, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kaizhu256", "commitsCount": 528}, {"username": "gitter-badger", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 45}]}, "source": {"files": {"readmeSize": 49062, "testsSize": 54942}, "badges": [{"urls": {"original": "https://nodei.co/npm/utility2.png?downloads=true", "shields": "https://img.shields.io/npm/v/utility2.svg", "content": "https://img.shields.io/npm/v/utility2.json"}, "info": {"service": "npm", "type": "version"}}]}}, "evaluation": {"quality": {"carefulness": 0.71, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 32, "downloadsCount": 1535, "downloadsAcceleration": 8.032781582952815, "dependentsCount": 4}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.6503029147264453, "detail": {"quality": 0.8911711522275818, "popularity": 0.09416049622047742, "maintenance": 0.9999868439457249}}}}, {"jasmine": {"analyzedAt": "2020-06-13T14:43:35.892Z", "collected": {"metadata": {"name": "jasmine", "scope": "unscoped", "version": "3.5.0", "description": "Command line jasmine", "keywords": ["test", "jasmine", "tdd", "bdd"], "date": "2019-09-21T00:20:47.815Z", "publisher": {"username": "slackersoft", "email": "gregg@slackersoft.net"}, "maintainers": [{"username": "amavisca", "email": "chris.amavisca@gmail.com"}, {"username": "dwfrank", "email": "dwfrank@pivotallabs.com"}, {"username": "slackersoft", "email": "gregg@slackersoft.net"}], "repository": {"type": "git", "url": "git+https://github.com/jasmine/jasmine-npm.git"}, "links": {"npm": "https://www.npmjs.com/package/jasmine", "homepage": "http://jasmine.github.io/", "repository": "https://github.com/jasmine/jasmine-npm", "bugs": "https://github.com/jasmine/jasmine-npm/issues"}, "license": "MIT", "dependencies": {"glob": "^7.1.4", "jasmine-core": "~3.5.0"}, "devDependencies": {"grunt": "^1.0.4", "grunt-cli": "^1.3.2", "grunt-contrib-jshint": "^2.1.0", "shelljs": "^0.8.3", "slash": "^2.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "[![Build Status](https://travis-ci.org/jasmine/jasmine-npm.png?branch=master)](https://travis-ci.org/jasmine/jasmine-npm)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine-npm.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine-npm?ref=badge_shield)\n\n# The Jasmine Module\n\nThe `jasmine` module is a package of helper code for developing Jasmine projects for Node.js. \n\nThe core of jasmine lives at https://github.com/jasmine/jasmine and is `jasmine-core` in npm.\n\n## Contents\n\nThis module allows you to run Jasmine specs for your Node.js code. The output will be displayed in your terminal by default.\n\n## Documentation\n\nhttps://jasmine.github.io/edge/node.html\n\n## Installation\n```sh\n# Local installation:\nnpm install --save-dev jasmine\n\n# Global installation\nnpm install -g jasmine\n```\n\n## Initializing\n\nTo initialize a project for Jasmine\n\n`jasmine init`\n\nTo initialize a project for Jasmine when being installed locally\n\n`node_modules/.bin/jasmine init`\n\nor\n\n`npx jasmine init`\n\nTo seed your project with some examples\n\n`jasmine examples`\n\n## Usage\n\nTo run your test suite\n\n`jasmine`\n\n## Configuration\n\nCustomize `spec/support/jasmine.json` to enumerate the source and spec files you would like the Jasmine runner to include.\nYou may use dir glob strings.\nMore information on the format of `jasmine.json` can be found in [the documentation](http://jasmine.github.io/edge/node.html#section-Configuration)\n\nAlternatively, you may specify the path to your `jasmine.json` by setting an environment variable or an option:\n\n```shell\njasmine JASMINE_CONFIG_PATH=relative/path/to/your/jasmine.json\njasmine --config=relative/path/to/your/jasmine.json\n```\n\n# Filtering specs\n\nExecute only those specs which filename match given glob:\n\n```shell\njasmine \"spec/**/critical/*Spec.js\"\n```\n\nOr a single file:\n\n```shell\njasmine spec/currentSpec.js\n```\n\nOr execute only those specs which name matches a particular regex:\n\n```shell\njasmine --filter \"adapter21*\"\n```\n\n(where the *name* of a spec is the first parameter passed to `describe()`)\n\n\n## Support\n\nDocumentation: [jasmine.github.io](https://jasmine.github.io)\nJasmine Mailing list: [jasmine-js@googlegroups.com](mailto:jasmine-js@googlegroups.com)\nTwitter: [@jasminebdd](http://twitter.com/jasminebdd)\n\nPlease file issues here at Github\n\nCopyright (c) 2008-2017 Pivotal Labs. This software is licensed under the MIT License.\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine-npm.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2Fjasmine%2Fjasmine-npm?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 260006}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1618139}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 6894140}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 20672029}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 38736108}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 73715710}], "dependentsCount": 760, "starsCount": 64}, "github": {"starsCount": 339, "forksCount": 125, "subscribersCount": 26, "issues": {"count": 159, "openCount": 4, "distribution": {"3600": 7, "10800": 5, "32400": 11, "97200": 12, "291600": 18, "874800": 23, "2624400": 26, "7873200": 27, "23619600": 20, "70858800": 8, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "slackersoft", "commitsCount": 68}, {"username": "amavisca", "commitsCount": 29}, {"username": "sgravrock", "commitsCount": 15}, {"username": "bcaudan", "commitsCount": 3}, {"username": "cancerberoSgx", "commitsCount": 3}, {"username": "claudiosdc", "commitsCount": 3}, {"username": "mauricioborges", "commitsCount": 3}, {"username": "susisu", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "battk", "commitsCount": 2}, {"username": "briandipalma", "commitsCount": 2}, {"username": "dflynn15", "commitsCount": 2}, {"username": "flore77", "commitsCount": 2}, {"username": "hankduan", "commitsCount": 2}, {"username": "liuxh0", "commitsCount": 2}, {"username": "lonelyelk", "commitsCount": 2}, {"username": "marcioj", "commitsCount": 2}, {"username": "wendorf", "commitsCount": 2}, {"username": "ybian", "commitsCount": 2}, {"username": "OleMchls", "commitsCount": 1}, {"username": "aaalsaleh", "commitsCount": 1}, {"username": "cnishina", "commitsCount": 1}, {"username": "coyoteecd", "commitsCount": 1}, {"username": "danielsiwiec", "commitsCount": 1}, {"username": "donmccurdy", "commitsCount": 1}, {"username": "elliot-nelson", "commitsCount": 1}, {"username": "fossabot", "commitsCount": 1}, {"username": "gkalpak", "commitsCount": 1}, {"username": "jkytomak", "commitsCount": 1}, {"username": "julka", "commitsCount": 1}, {"username": "just-boris", "commitsCount": 1}, {"username": "ljwall", "commitsCount": 1}, {"username": "mgax", "commitsCount": 1}, {"username": "mikaturunen", "commitsCount": 1}, {"username": "strama4", "commitsCount": 1}, {"username": "tharvik", "commitsCount": 1}, {"username": "tomv564", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 5}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "License Compliance", "state": "success"}]}, "source": {"files": {"readmeSize": 2649, "testsSize": 46722, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/jasmine/jasmine-npm.png?branch=master", "service": "https://api.travis-ci.org/jasmine/jasmine-npm.svg?branch=master", "shields": "https://img.shields.io/travis/jasmine/jasmine-npm/master.svg", "content": "https://img.shields.io/travis/jasmine/jasmine-npm/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.55}, "popularity": {"communityInterest": 591, "downloadsCount": 6890676.333333333, "downloadsAcceleration": 10270.892009132425, "dependentsCount": 760}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8196650973601579, "detail": {"quality": 0.9690435381447728, "popularity": 0.5114000653755237, "maintenance": 0.9998914658151222}}}}, {"gulp-sass": {"analyzedAt": "2020-06-07T07:30:50.110Z", "collected": {"metadata": {"name": "gulp-sass", "scope": "unscoped", "version": "4.1.0", "description": "Gulp plugin for sass", "keywords": ["gulpplugin", "sass", "gulp"], "date": "2020-04-23T10:19:40.645Z", "author": {"name": "David Manning"}, "publisher": {"username": "xzyfer", "email": "xzyfer@gmail.com"}, "maintainers": [{"username": "dlmanning", "email": "dlmanning@me.com"}, {"username": "snugug", "email": "sam@snug.ug"}, {"username": "xzyfer", "email": "xzyfer@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/dlmanning/gulp-sass.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-sass", "homepage": "https://github.com/dlmanning/gulp-sass#readme", "repository": "https://github.com/dlmanning/gulp-sass", "bugs": "https://github.com/dlmanning/gulp-sass/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.3.0", "lodash": "^4.17.11", "node-sass": "^4.8.3", "plugin-error": "^1.0.1", "replace-ext": "^1.0.0", "strip-ansi": "^4.0.0", "through2": "^2.0.0", "vinyl-sourcemaps-apply": "^0.2.0"}, "devDependencies": {"autoprefixer": "^8.1.0", "eslint": "^4.18.2", "eslint-config-airbnb-base": "^12.1.0", "eslint-plugin-import": "^2.9.0", "globule": "^1.0.0", "gulp": "^3.8.11", "gulp-postcss": "^7.0.1", "gulp-sourcemaps": "^2.6.4", "gulp-tap": "^0.1.3", "mocha": "^5.0.4", "rimraf": "^2.4.3", "should": "^13.2.1", "vinyl": "^2.1.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}], "hasTestScript": true, "readme": "# gulp-sass [![Build Status](https://travis-ci.org/dlmanning/gulp-sass.svg?branch=master)](https://travis-ci.org/dlmanning/gulp-sass) [![Join the chat at https://gitter.im/dlmanning/gulp-sass](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/dlmanning/gulp-sass?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge) [![npm version](https://badge.fury.io/js/gulp-sass.svg)](http://badge.fury.io/js/gulp-sass)\n\nSass plugin for [Gulp](https://github.com/gulpjs/gulp).\n\n**_Before filing an issue, please make sure you have [Updated to the latest Gulp Sass](https://github.com/dlmanning/gulp-sass/wiki/Update-to-the-latest-Gulp-Sass) and have gone through our [Common Issues and Their Fixes](https://github.com/dlmanning/gulp-sass/wiki/Common-Issues-and-Their-Fixes) section._**\n\n# Support\n\nOnly [Active LTS and Current releases][1] are supported.\n\n[1]: https://github.com/nodejs/Release#release-schedule\n\n# Install\n\n```\nnpm install node-sass gulp-sass --save-dev\n```\n\n# Basic Usage\n\nSomething like this will compile your Sass files:\n\n```javascript\n'use strict';\n\nvar gulp = require('gulp');\nvar sass = require('gulp-sass');\n\nsass.compiler = require('node-sass');\n\ngulp.task('sass', function () {\n  return gulp.src('./sass/**/*.scss')\n    .pipe(sass().on('error', sass.logError))\n    .pipe(gulp.dest('./css'));\n});\n\ngulp.task('sass:watch', function () {\n  gulp.watch('./sass/**/*.scss', ['sass']);\n});\n```\n\nYou can also compile synchronously, doing something like this:\n\n```javascript\n'use strict';\n\nvar gulp = require('gulp');\nvar sass = require('gulp-sass');\n\nsass.compiler = require('node-sass');\n\ngulp.task('sass', function () {\n  return gulp.src('./sass/**/*.scss')\n    .pipe(sass.sync().on('error', sass.logError))\n    .pipe(gulp.dest('./css'));\n});\n\ngulp.task('sass:watch', function () {\n  gulp.watch('./sass/**/*.scss', ['sass']);\n});\n```\n\nYou can choose whether to use [Dart Sass][] or [Node Sass][] by setting the `sass.compiler` property. Node Sass will be used by default, but it's strongly recommended that you set it explicitly for forwards-compatibility in case the default ever changes.\n\n[Dart Sass]: http://sass-lang.com/dart-sass\n[Node Sass]: https://github.com/sass/node-sass\n\nNote that when using Dart Sass, **synchronous compilation is twice as fast as asynchronous compilation** by default, due to the overhead of asynchronous callbacks. To avoid this overhead, you can use the [`fibers`](https://www.npmjs.com/package/fibers) package to call asynchronous importers from the synchronous code path. To enable this, pass the `Fiber` class to the `fiber` option:\n\n```javascript\n'use strict';\n\nvar Fiber = require('fibers');\nvar gulp = require('gulp');\nvar sass = require('gulp-sass');\n\nsass.compiler = require('sass');\n\ngulp.task('sass', function () {\n  return gulp.src('./sass/**/*.scss')\n    .pipe(sass({fiber: Fiber}).on('error', sass.logError))\n    .pipe(gulp.dest('./css'));\n});\n\ngulp.task('sass:watch', function () {\n  gulp.watch('./sass/**/*.scss', ['sass']);\n});\n```\n\n## Options\n\nPass in options just like you would for [Node Sass](https://github.com/sass/node-sass#options); they will be passed along just as if you were using Node Sass. Except for the `data` option which is used by gulp-sass internally. Using the `file` option is also unsupported and results in undefined behaviour that may change without notice.\n\nFor example:\n\n```javascript\ngulp.task('sass', function () {\n return gulp.src('./sass/**/*.scss')\n   .pipe(sass({outputStyle: 'compressed'}).on('error', sass.logError))\n   .pipe(gulp.dest('./css'));\n});\n```\n\nOr this for synchronous code:\n\n```javascript\ngulp.task('sass', function () {\n return gulp.src('./sass/**/*.scss')\n   .pipe(sass.sync({outputStyle: 'compressed'}).on('error', sass.logError))\n   .pipe(gulp.dest('./css'));\n});\n```\n\n## Source Maps\n\n`gulp-sass` can be used in tandem with [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) to generate source maps for the Sass to CSS compilation. You will need to initialize [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) prior to running `gulp-sass` and write the source maps after.\n\n```javascript\nvar sourcemaps = require('gulp-sourcemaps');\n\ngulp.task('sass', function () {\n return gulp.src('./sass/**/*.scss')\n  .pipe(sourcemaps.init())\n  .pipe(sass().on('error', sass.logError))\n  .pipe(sourcemaps.write())\n  .pipe(gulp.dest('./css'));\n});\n```\n\nBy default, [gulp-sourcemaps](https://github.com/floridoo/gulp-sourcemaps) writes the source maps inline in the compiled CSS files. To write them to a separate file, specify a path relative to the `gulp.dest()` destination in the `sourcemaps.write()` function.\n\n```javascript\nvar sourcemaps = require('gulp-sourcemaps');\ngulp.task('sass', function () {\n return gulp.src('./sass/**/*.scss')\n  .pipe(sourcemaps.init())\n  .pipe(sass().on('error', sass.logError))\n  .pipe(sourcemaps.write('./maps'))\n  .pipe(gulp.dest('./css'));\n});\n```\n\n# Issues\n\n`gulp-sass` is a very light-weight wrapper around either [Dart Sass][] or [Node Sass][] (which in turn is a Node binding for [LibSass][]). Because of this, the issue you're having likely isn't a `gulp-sass` issue, but an issue with one those projects or with [Sass][] as a whole.\n\n[LibSass]: https://sass-lang.com/libsass\n[Sass]: https://sass-lang.com\n\nIf you have a feature request/question how Sass works/concerns on how your Sass gets compiled/errors in your compiling, it's likely a Dart Sass or LibSass issue and you should file your issue with one of those projects.\n\nIf you're having problems with the options you're passing in, it's likely a Dart Sass or Node Sass issue and you should file your issue with one of those projects.\n\nWe may, in the course of resolving issues, direct you to one of these other projects. If we do so, please follow up by searching that project's issue queue (both open and closed) for your problem and, if it doesn't exist, filing an issue with them."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16382}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 382279}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1573309}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4886642}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9151080}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 18139465}], "dependentsCount": 1405, "starsCount": 478}, "github": {"starsCount": 1463, "forksCount": 346, "subscribersCount": 44, "issues": {"count": 767, "openCount": 26, "distribution": {"3600": 157, "10800": 48, "32400": 69, "97200": 66, "291600": 53, "874800": 59, "2624400": 70, "7873200": 80, "23619600": 109, "70858800": 47, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "dlmanning", "commitsCount": 59}, {"username": "Snugug", "commitsCount": 54}, {"username": "xzyfer", "commitsCount": 48}, {"username": "stevelacy", "commitsCount": 5}, {"username": "joevbruno", "commitsCount": 4}, {"username": "nex3", "commitsCount": 4}, {"username": "davidtheclark", "commitsCount": 3}, {"username": "eoneill", "commitsCount": 3}, {"username": "ajschlosser", "commitsCount": 2}, {"username": "backflip", "commitsCount": 2}, {"username": "mariusc23", "commitsCount": 2}, {"username": "martinoconnor", "commitsCount": 2}, {"username": "tomasdev", "commitsCount": 2}, {"username": "willscripted", "commitsCount": 2}, {"username": "Announcement", "commitsCount": 1}, {"username": "B-Scan", "commitsCount": 1}, {"username": "DKvistgaard", "commitsCount": 1}, {"username": "Keats", "commitsCount": 1}, {"username": "MethodGrab", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "WraithKenny", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "aj0strow", "commitsCount": 1}, {"username": "bendrucker", "commitsCount": 1}, {"username": "booleanbetrayal", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "coryhouse", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "fza", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "jlgeering", "commitsCount": 1}, {"username": "joakimstrandell", "commitsCount": 1}, {"username": "laurelnaiad", "commitsCount": 1}, {"username": "matiassingers", "commitsCount": 1}, {"username": "neilkinnish", "commitsCount": 1}, {"username": "phawxby", "commitsCount": 1}, {"username": "rschmukler", "commitsCount": 1}, {"username": "sarenji", "commitsCount": 1}, {"username": "schlueter", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stof", "commitsCount": 1}, {"username": "yusrilhs", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5936, "testsSize": 19639, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/dlmanning/gulp-sass.svg?branch=master", "service": "https://api.travis-ci.org/dlmanning/gulp-sass.svg?branch=master", "shields": "https://img.shields.io/travis/dlmanning/gulp-sass/master.svg", "content": "https://img.shields.io/travis/dlmanning/gulp-sass/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"chalk": {"required": "^2.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "replace-ext": {"required": "^1.0.0", "stable": "2.0.0", "latest": "2.0.0"}, "through2": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "strip-ansi": {"required": "^4.0.0", "stable": "6.0.0", "latest": "6.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 2373, "downloadsCount": 1628880.6666666667, "downloadsAcceleration": 972.1594748858461, "dependentsCount": 1405}, "maintenance": {"releasesFrequency": 0.5428082191780822, "commitsFrequency": 0.19202054794520546, "openIssues": 1, "issuesDistribution": 0.44752897213867815}}, "score": {"final": 0.7680103601733534, "detail": {"quality": 0.9042984618008596, "popularity": 0.4895732959099991, "maintenance": 0.9296290516131309}}}}, {"object-assign": {"analyzedAt": "2020-06-17T07:31:48.134Z", "collected": {"metadata": {"name": "object-assign", "scope": "unscoped", "version": "4.1.1", "description": "ES2015 `Object.assign()` ponyfill", "keywords": ["object", "assign", "extend", "properties", "es2015", "ecmascript", "harmony", "ponyfill", "prollyfill", "polyfill", "shim", "browser"], "date": "2017-01-16T15:35:15.282Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sophiebits", "email": "npm2@sophiebits.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sindresorhus/object-assign.git"}, "links": {"npm": "https://www.npmjs.com/package/object-assign", "homepage": "https://github.com/sindresorhus/object-assign#readme", "repository": "https://github.com/sindresorhus/object-assign", "bugs": "https://github.com/sindresorhus/object-assign/issues"}, "license": "MIT", "devDependencies": {"ava": "^0.16.0", "lodash": "^4.16.4", "matcha": "^0.7.0", "xo": "^0.16.0"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# object-assign [![Build Status](https://travis-ci.org/sindresorhus/object-assign.svg?branch=master)](https://travis-ci.org/sindresorhus/object-assign)\n\n> ES2015 [`Object.assign()`](http://www.2ality.com/2014/01/object-assign.html) [ponyfill](https://ponyfill.com)\n\n\n## Use the built-in\n\nNode.js 4 and up, as well as every evergreen browser (Chrome, Edge, Firefox, Opera, Safari),\nsupport `Object.assign()` :tada:. If you target only those environments, then by all\nmeans, use `Object.assign()` instead of this package.\n\n\n## Install\n\n```\n$ npm install --save object-assign\n```\n\n\n## Usage\n\n```js\nconst objectAssign = require('object-assign');\n\nobjectAssign({foo: 0}, {bar: 1});\n//=> {foo: 0, bar: 1}\n\n// multiple sources\nobjectAssign({foo: 0}, {bar: 1}, {baz: 2});\n//=> {foo: 0, bar: 1, baz: 2}\n\n// overwrites equal keys\nobjectAssign({foo: 0}, {foo: 1}, {foo: 2});\n//=> {foo: 2}\n\n// ignores null and undefined sources\nobjectAssign({foo: 0}, null, {bar: 1}, undefined);\n//=> {foo: 0, bar: 1}\n```\n\n\n## API\n\n### objectAssign(target, [source, ...])\n\nAssigns enumerable own properties of `source` objects to the `target` object and returns the `target` object. Additional `source` objects will overwrite previous ones.\n\n\n## Resources\n\n- [ES2015 spec - Object.assign](https://people.mozilla.org/~jorendorff/es6-draft.html#sec-object.assign)\n\n\n## Related\n\n- [deep-assign](https://github.com/sindresorhus/deep-assign) - Recursive `Object.assign()`\n\n\n## License\n\nMIT \u00a9 [Sindre Sorhus](https://sindresorhus.com)"}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 3357323}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 17615010}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 76243881}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 226865718}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 416632098}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 793573695}], "dependentsCount": 6658, "starsCount": 71}, "github": {"starsCount": 861, "forksCount": 75, "subscribersCount": 21, "issues": {"count": 29, "openCount": 0, "distribution": {"3600": 9, "10800": 1, "32400": 11, "97200": 3, "291600": 0, "874800": 3, "2624400": 2, "7873200": 0, "23619600": 0, "70858800": 0, "212576400": 0}, "isDisabled": true}, "contributors": [{"username": "sindresorhus", "commitsCount": 41}, {"username": "floatdrop", "commitsCount": 3}, {"username": "jdalton", "commitsCount": 3}, {"username": "mxdubois", "commitsCount": 2}, {"username": "sophiebits", "commitsCount": 2}, {"username": "BrassHead", "commitsCount": 1}, {"username": "bttmly", "commitsCount": 1}, {"username": "chentsulin", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "gyeates", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1502, "testsSize": 2804}, "badges": [{"urls": {"original": "https://travis-ci.org/sindresorhus/object-assign.svg?branch=master", "service": "https://api.travis-ci.org/sindresorhus/object-assign.svg?branch=master", "shields": "https://img.shields.io/travis/sindresorhus/object-assign/master.svg", "content": "https://img.shields.io/travis/sindresorhus/object-assign/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "xo"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1040, "downloadsCount": 75621906, "downloadsAcceleration": 126934.11324200919, "dependentsCount": 6658}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 0.9, "issuesDistribution": 0.9}}, "score": {"final": 0.9014504496502914, "detail": {"quality": 0.9550442819606291, "popularity": 0.7571029229872549, "maintenance": 0.9998604057616101}}}}, {"case-sensitive-paths-webpack-plugin": {"analyzedAt": "2020-06-12T12:59:42.244Z", "collected": {"metadata": {"name": "case-sensitive-paths-webpack-plugin", "scope": "unscoped", "version": "2.3.0", "description": "Enforces module path case sensitivity in Webpack", "keywords": ["webpack", "plugin", "case sensitive", "import", "require"], "date": "2020-01-15T21:52:13.810Z", "author": {"name": "Michael Pratt"}, "publisher": {"username": "urthen", "email": "urthen@gmail.com"}, "maintainers": [{"username": "urthen", "email": "urthen@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Urthen/case-sensitive-paths-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/case-sensitive-paths-webpack-plugin", "homepage": "https://github.com/Urthen/case-sensitive-paths-webpack-plugin#readme", "repository": "https://github.com/Urthen/case-sensitive-paths-webpack-plugin", "bugs": "https://github.com/Urthen/case-sensitive-paths-webpack-plugin/issues"}, "license": "MIT", "devDependencies": {"eslint": "6.8.0", "eslint-config-airbnb-base": "14.0.0", "eslint-plugin-import": "^2.3.0", "fs-extra": "^2.1.2", "mocha": "7.0.0", "webpack": "4.41.5"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 2}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Case Sensitive Paths - Webpack Plugin\n==========\n\n[![Build Status](https://travis-ci.org/Urthen/case-sensitive-paths-webpack-plugin.svg?branch=master)](https://travis-ci.org/Urthen/case-sensitive-paths-webpack-plugin)\n[![Known Vulnerabilities](https://snyk.io/test/github/urthen/case-sensitive-paths-webpack-plugin/badge.svg?targetFile=package.json)](https://snyk.io/test/github/urthen/case-sensitive-paths-webpack-plugin?targetFile=package.json)\n[![npm version](https://badge.fury.io/js/case-sensitive-paths-webpack-plugin.svg)](https://badge.fury.io/js/case-sensitive-paths-webpack-plugin)\n[![npm downloads](https://img.shields.io/npm/dw/case-sensitive-paths-webpack-plugin.svg)](https://www.npmjs.com/package/case-sensitive-paths-webpack-plugin)\n![bananas: ripe](https://img.shields.io/badge/bananas-ripe-yellow.svg)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FUrthen%2Fcase-sensitive-paths-webpack-plugin.svg?type=shield)](https://app.fossa.io/projects/git%2Bgithub.com%2FUrthen%2Fcase-sensitive-paths-webpack-plugin?ref=badge_shield)\n\nThis Webpack plugin enforces the entire path of all required modules match the exact case of the actual path on disk.\nUsing this plugin helps alleviate cases where developers working on OSX, which does not follow strict path case sensitivity,\nwill cause conflicts with other developers or build boxes running other operating systems which require correctly cased paths.\n\n[Previous](https://gist.github.com/Morhaus/333579c2a5b4db644bd50) [iterations](https://github.com/dcousineau/force-case-sensitivity-webpack-plugin) on this same idea provide the basis for this plugin, but unfortunately do not properly check case on\nthe entire path. This plugin fixes that. Example output:\n\n> ERROR in ./src/containers/SearchProducts.js\n  Module not found: Error: [CaseSensitivePathsPlugin] `/Users/example/yourproject/src/components/searchProducts/searchproducts.js` does not match the corresponding path on disk `/Users/example/yourproject/src/components/searchproducts`\n   @ ./src/containers/SearchProducts.js 9:22-84\n\nInstall\n----\n    npm install --save-dev case-sensitive-paths-webpack-plugin\n\nUsage\n----\n\n```JavaScript\nvar CaseSensitivePathsPlugin = require('case-sensitive-paths-webpack-plugin');\n\nvar webpackConfig = {\n    plugins: [\n        new CaseSensitivePathsPlugin()\n        // other plugins ...\n    ]\n    // other webpack config ...\n}\n```\n\nWant more information? Pass ```{debug: true}``` to the plugin like so:\n\n```JavaScript\nnew CaseSensitivePathsPlugin({debug: true})\n```\n\nIt will output every directory it reads, as well as a sum total of filesystem operations.\nThis is mostly useful for internal debugging of the plugin, but if you find it useful, more power to you.\n\nDemo\n---\nCheck the `/demo` directory for a working example of the plugin in action, with tests demonstrating the effect of the plugin. See `/demo/README.md` for more.\n\nThanks & Credit\n----\n* [Daniel Cousineau](https://github.com/dcousineau) who wrote an [earlier version](https://github.com/dcousineau/force-case-sensitivity-webpack-plugin) of this case-sensitivity plugin\n* [Alexandre Kirszenberg](https://github.com/Morhaus) who's [gist](https://gist.github.com/Morhaus/333579c2a5b4db644bd5) formed the basis of both these plugins.\n* [Cameron Brewer](https://github.com/morethanfire) and [Ben Collins](https://github.com/aggieben) who added Windows support.\n* [Christian Lilley](https://github.com/xml) who added a demo/test package.\n* [Lance Eastgate](https://github.com/NorwegianKiwi) who added some internationalization support\n* [Jonathan Kim](https://github.com/jkimbo) and [Dan Abramov](https://github.com/gaearon) who investigated, fixed, and added some tests for a crashing bug.\n* [Jason Quense](https://github.com/jquense) who switched it to properly use the webpack-provided fs object.\n* [Cesare Soldini](https://github.com/caesarsol) who added a test\n* [Kirill Konshin](https://github.com/kirill-konshin) who helped update to Webpack 5\n\n\n## License\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bgithub.com%2FUrthen%2Fcase-sensitive-paths-webpack-plugin.svg?type=large)](https://app.fossa.io/projects/git%2Bgithub.com%2FUrthen%2Fcase-sensitive-paths-webpack-plugin?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 746364}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4241376}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 18062627}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 51956397}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 91169160}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 162005559}], "dependentsCount": 3780, "starsCount": 6}, "github": {"starsCount": 346, "forksCount": 36, "subscribersCount": 5, "issues": {"count": 47, "openCount": 3, "distribution": {"3600": 3, "10800": 3, "32400": 1, "97200": 5, "291600": 5, "874800": 7, "2624400": 7, "7873200": 7, "23619600": 9, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "Urthen", "commitsCount": 18}, {"username": "jkimbo", "commitsCount": 5}, {"username": "aggieben", "commitsCount": 3}, {"username": "xml", "commitsCount": 3}, {"username": "kirill-konshin", "commitsCount": 2}, {"username": "fossabot", "commitsCount": 1}, {"username": "ivasilov", "commitsCount": 1}, {"username": "jquense", "commitsCount": 1}, {"username": "mAAdhaTTah", "commitsCount": 1}, {"username": "simonkberg", "commitsCount": 1}, {"username": "sunilbandla", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "wuct", "commitsCount": 1}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 5}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 5}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 11}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 13}]}, "source": {"files": {"readmeSize": 4245, "testsSize": 7785, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/Urthen/case-sensitive-paths-webpack-plugin.svg?branch=master", "service": "https://api.travis-ci.org/Urthen/case-sensitive-paths-webpack-plugin.svg?branch=master", "shields": "https://img.shields.io/travis/Urthen/case-sensitive-paths-webpack-plugin/master.svg", "content": "https://img.shields.io/travis/Urthen/case-sensitive-paths-webpack-plugin/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/case-sensitive-paths-webpack-plugin.svg", "shields": "https://img.shields.io/npm/dw/case-sensitive-paths-webpack-plugin.svg", "content": "https://img.shields.io/npm/dw/case-sensitive-paths-webpack-plugin.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}], "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 406, "downloadsCount": 17318799, "downloadsAcceleration": 55220.30171232876, "dependentsCount": 3780}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8557609160604944, "detail": {"quality": 0.939614767160585, "popularity": 0.6397556367915035, "maintenance": 0.9998914658151222}}}}, {"@babel/preset-typescript": {"analyzedAt": "2020-06-04T04:36:48.734Z", "collected": {"metadata": {"name": "@babel/preset-typescript", "scope": "babel", "version": "7.10.1", "description": "Babel preset for TypeScript.", "keywords": ["babel-preset", "typescript"], "date": "2020-05-27T22:08:42.152Z", "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-typescript"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-typescript", "homepage": "https://github.com/babel/babel#readme", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/helper-plugin-utils": "^7.10.1", "@babel/plugin-transform-typescript": "^7.10.1"}, "devDependencies": {"@babel/core": "^7.10.1", "@babel/helper-plugin-test-runner": "^7.10.1"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 25}], "readme": "# @babel/preset-typescript\n\n> Babel preset for TypeScript.\n\nSee our website [@babel/preset-typescript](https://babeljs.io/docs/en/next/babel-preset-typescript.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22area%3A%20typescript%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-typescript\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-typescript --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 838875}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 4411816}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 18985327}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 53632673}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 92526858}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 152237221}], "dependentsCount": 1144, "starsCount": 0}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36700, "forksCount": 4308, "subscribersCount": 867, "issues": {"count": 11591, "openCount": 779, "distribution": {"3600": 2459, "10800": 914, "32400": 1062, "97200": 1238, "291600": 1053, "874800": 1008, "2624400": 847, "7873200": 807, "23619600": 843, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 494, "testsSize": 1188, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 41974, "downloadsCount": 17877557.666666668, "downloadsAcceleration": 78176.44497716893, "dependentsCount": 1144}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2398263939099552}}, "score": {"final": 0.867941504569828, "detail": {"quality": 0.9567054106307213, "popularity": 0.7699874297357987, "maintenance": 0.8898122313516634}}}}, {"winston": {"analyzedAt": "2020-05-16T08:03:52.709Z", "collected": {"metadata": {"name": "winston", "scope": "unscoped", "version": "3.2.1", "description": "A logger for just about everything.", "keywords": ["winston", "logger", "logging", "logs", "sysadmin", "bunyan", "pino", "loglevel", "tools", "json", "stream"], "date": "2019-01-29T19:04:11.622Z", "author": {"name": "Charlie Robbins", "email": "charlie.robbins@gmail.com", "username": "indexzero"}, "publisher": {"username": "indexzero", "email": "charlie.robbins@gmail.com"}, "maintainers": [{"username": "chjj", "email": "chjjeffrey@gmail.com"}, {"username": "pose", "email": "albertopose@gmail.com"}, {"username": "jcrugzz", "email": "jcrugzz@gmail.com"}, {"username": "v1", "email": "npm@3rd-Eden.com"}, {"username": "indexzero", "email": "charlie.robbins@gmail.com"}, {"username": "3rdeden", "email": "npmjs@3rd-Eden.com"}, {"username": "dabh", "email": "dabh@alumni.stanford.edu"}], "repository": {"type": "git", "url": "git+https://github.com/winstonjs/winston.git"}, "links": {"npm": "https://www.npmjs.com/package/winston", "homepage": "https://github.com/winstonjs/winston#readme", "repository": "https://github.com/winstonjs/winston", "bugs": "https://github.com/winstonjs/winston/issues"}, "license": "MIT", "dependencies": {"async": "^2.6.1", "diagnostics": "^1.1.1", "is-stream": "^1.1.0", "logform": "^2.1.1", "one-time": "0.0.4", "readable-stream": "^3.1.1", "stack-trace": "0.0.x", "triple-beam": "^1.3.0", "winston-transport": "^4.3.0"}, "devDependencies": {"@babel/cli": "^7.2.3", "@babel/core": "^7.2.2", "@babel/preset-env": "^7.3.1", "@types/node": "^10.12.19", "abstract-winston-transport": ">= 0.5.1", "assume": "^2.1.0", "colors": "^1.3.3", "cross-spawn-async": "^2.2.5", "eslint-config-populist": "^4.2.0", "hock": "^1.3.3", "mocha": "^5.2.0", "nyc": "^13.1.0", "rimraf": "^2.6.3", "split2": "^3.1.0", "std-mocks": "^1.0.1", "through2": "^3.0.0", "winston-compat": "^0.1.4"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 8}], "hasTestScript": true, "readme": "# winston\n\nA logger for just about everything.\n\n[![Version npm](https://img.shields.io/npm/v/winston.svg?style=flat-square)](https://www.npmjs.com/package/winston)[![npm Downloads](https://img.shields.io/npm/dm/winston.svg?style=flat-square)](https://npmcharts.com/compare/winston?minimal=true)[![Build Status](https://img.shields.io/travis/winstonjs/winston/master.svg?style=flat-square)](https://travis-ci.org/winstonjs/winston)[![Dependencies](https://img.shields.io/david/winstonjs/winston.svg?style=flat-square)](https://david-dm.org/winstonjs/winston)\n\n[![NPM](https://nodei.co/npm/winston.png?downloads=true&downloadRank=true)](https://nodei.co/npm/winston/)\n\n[![Join the chat at https://gitter.im/winstonjs/winston](https://badges.gitter.im/Join%20Chat.svg)](https://gitter.im/winstonjs/winston?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge)\n\n## winston@3.2.0\n\nSee the [Upgrade Guide](UPGRADE-3.0.md) for more information. Bug reports and\nPRs welcome!\n\n## Looking for `winston@2.x` documentation?\n\nPlease note that the documentation below is for `winston@3`. \n[Read the `winston@2.x` documentation].\n\n## Motivation\n\n`winston` is designed to be a simple and universal logging library with\nsupport for multiple transports. A transport is essentially a storage device\nfor your logs. Each `winston` logger can have multiple transports (see:\n[Transports]) configured at different levels (see: [Logging levels]). For\nexample, one may want error logs to be stored in a persistent remote location\n(like a database), but all logs output to the console or a local file.\n\n`winston` aims to decouple parts of the logging process to make it more\nflexible and extensible. Attention is given to supporting flexibility in log\nformatting (see: [Formats]) & levels (see: [Using custom logging levels]), and\nensuring those APIs decoupled from the implementation of transport logging\n(i.e. how the logs are stored / indexed, see: [Adding Custom Transports]) to\nthe API that they exposed to the programmer.\n\n## Quick Start\n\nTL;DR? Check out the [quick start example][quick-example] in `./examples/`. \nThere are a number of other examples in [`./examples/*.js`][examples].\nDon't see an example you think should be there? Submit a pull request\nto add it!\n\n## Usage\n\nThe recommended way to use `winston` is to create your own logger. The\nsimplest way to do this is using `winston.createLogger`:\n\n``` js\nconst logger = winston.createLogger({\n  level: 'info',\n  format: winston.format.json(),\n  defaultMeta: { service: 'user-service' },\n  transports: [\n    //\n    // - Write to all logs with level `info` and below to `combined.log` \n    // - Write all logs error (and below) to `error.log`.\n    //\n    new winston.transports.File({ filename: 'error.log', level: 'error' }),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n\n//\n// If we're not in production then log to the `console` with the format:\n// `${info.level}: ${info.message} JSON.stringify({ ...rest }) `\n// \nif (process.env.NODE_ENV !== 'production') {\n  logger.add(new winston.transports.Console({\n    format: winston.format.simple()\n  }));\n}\n```\n\nYou may also log directly via the default logger exposed by\n`require('winston')`, but this merely intended to be a convenient shared\nlogger to use throughout your application if you so choose.\n\n## Table of contents\n\n* [Motivation](#motivation)\n* [Quick Start](#quick-start)\n* [Usage](#usage)\n* [Table of Contents](#table-of-contents)\n* [Logging](#logging)\n  * [Creating your logger](#creating-your-own-logger)\n  * [Streams, `objectMode`, and `info` objects](#streams-objectmode-and-info-objects)\n* [Formats]\n  * [Combining formats](#combining-formats)\n  * [String interpolation](#string-interpolation)\n  * [Filtering `info` Objects](#filtering-info-objects)\n  * [Creating custom formats](#creating-custom-formats)\n* [Logging levels]\n  * [Using logging levels](#using-logging-levels)\n  * [Using custom logging levels](#using-custom-logging-levels)\n* [Transports]\n  * [Multiple transports of the same type](#multiple-transports-of-the-same-type)\n  * [Adding Custom Transports](#adding-custom-transports)\n* [Exceptions](#exceptions)\n  * [Handling Uncaught Exceptions with winston](#handling-uncaught-exceptions-with-winston)\n  * [To Exit or Not to Exit](#to-exit-or-not-to-exit)\n* [Profiling](#profiling)\n* [Streaming Logs](#streaming-logs)\n* [Querying Logs](#querying-logs)\n* [Further Reading](#further-reading)\n  * [Using the default logger](#using-the-default-logger)\n  * [Awaiting logs to be written in `winston`](#awaiting-logs-to-be-written-in-winston)\n  * [Working with multiple Loggers in `winston`](#working-with-multiple-loggers-in-winston)\n* [Installation](#installation)\n* [Run Tests](#run-tests)\n\n## Logging\n\nLogging levels in `winston` conform to the severity ordering specified by\n[RFC5424]: _severity of all levels is assumed to be numerically **ascending**\nfrom most important to least important._\n\n``` js\nconst levels = { \n  error: 0, \n  warn: 1, \n  info: 2, \n  verbose: 3, \n  debug: 4, \n  silly: 5 \n};\n```\n\n### Creating your own Logger\nYou get started by creating a logger using `winston.createLogger`:\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n```\n\nA logger accepts\u00a0the following parameters:\n\n| Name          | Default                     |  Description    |\n| ------------- | --------------------------- | --------------- |\n| `level`       | `'info'`                    | Log only if [`info.level`](#streams-objectmode-and-info-objects) less than or equal to this level  |  \n| `levels`      | `winston.config.npm.levels` | Levels (and colors) representing log priorities            |\n| `format`      | `winston.format.json`       | Formatting for `info` messages  (see: [Formats])           |\n| `transports`  | `[]` _(No transports)_      | Set of logging targets for `info` messages                 |\n| `exitOnError` | `true`                      | If false, handled exceptions will not cause `process.exit` |\n| `silent`      | `false`                     | If true, all logs are suppressed |\n\nThe levels provided to `createLogger` will be defined as convenience methods\non the `logger` returned. \n\n``` js\n//\n// Logging\n//\nlogger.log({\n  level: 'info',\n  message: 'Hello distributed log files!'\n});\n\nlogger.info('Hello again distributed logs');\n```\n\nYou can add or remove transports from the `logger` once it has been provided \nto you from `winston.createLogger`:\n\n``` js\nconst files = new winston.transports.File({ filename: 'combined.log' });\nconst console = new winston.transports.Console();\n\nlogger\n  .clear()          // Remove all transports\n  .add(console)     // Add console transport\n  .add(files)       // Add file transport\n  .remove(console); // Remove console transport\n```\n\nYou can also wholesale reconfigure a `winston.Logger` instance using the\n`configure` method:\n\n``` js\nconst logger = winston.createLogger({\n  level: 'info',\n  transports: [\n    new winston.transports.Console(),\n    new winston.transports.File({ filename: 'combined.log' })\n  ]\n});\n\n//\n// Replaces the previous transports with those in the\n// new configuration wholesale.\n//\nconst DailyRotateFile = require('winston-daily-rotate-file');\nlogger.configure({\n  level: 'verbose',\n  transports: [\n    new DailyRotateFile(opts)\n  ]\n});\n```\n\n### Creating child loggers\n\nYou can create child loggers from existing loggers to pass metadata overrides:\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console(),\n  ]\n});\n\nconst childLogger = logger.child({ requestId: '451' });\n```\n\n### Streams, `objectMode`, and `info` objects\n\nIn `winston`, both `Logger` and `Transport` instances are treated as\n[`objectMode`](https://nodejs.org/api/stream.html#stream_object_mode)\nstreams that accept an `info` object. \n\nThe `info` parameter provided to a given format represents a single log\nmessage. The object itself is mutable. Every `info` must have at least the\n`level` and `message` properties:\n\n``` js\nconst info = {\n  level: 'info',                 // Level of the logging message  \n  message: 'Hey! Log something?' // Descriptive message being logged.\n};\n```\n\nProperties **besides level and message** are considered as \"`meta`\". i.e.:\n\n``` js\nconst { level, message, ...meta } = info;\n```\n\nSeveral of the formats in `logform` itself add additional properties:\n\n| Property    | Format added by | Description |\n| ----------- | --------------- | ----------- | \n| `splat`     | `splat()`       | String interpolation splat for `%d %s`-style messages. |\n| `timestamp` | `timestamp()`   |  timestamp the message was received. |\n| `label`     | `label()`       | Custom label associated with each message. | \n| `ms`        | `ms()`          | Number of milliseconds since the previous log message. |\n\nAs a consumer you may add whatever properties you wish \u2013\u00a0_internal state is\nmaintained by `Symbol` properties:_\n\n- `Symbol.for('level')` _**(READ-ONLY)**:_ equal to `level` property.\n  **Is treated as immutable by all code.**\n- `Symbol.for('message'):` complete string message set by \"finalizing formats\":\n  - `json`\n  - `logstash`\n  - `printf`\n  - `prettyPrint`\n  - `simple`\n- `Symbol.for('splat')`: additional string interpolation arguments. _Used\n  exclusively by `splat()` format._\n\nThese Symbols are stored in another package: `triple-beam` so that all\nconsumers of `logform` can have the same Symbol reference. i.e.:\n\n``` js\nconst { LEVEL, MESSAGE, SPLAT } = require('triple-beam');\n\nconsole.log(LEVEL === Symbol.for('level'));\n// true\n\nconsole.log(MESSAGE === Symbol.for('message'));\n// true\n\nconsole.log(SPLAT === Symbol.for('splat'));\n// true\n```\n\n> **NOTE:** any `{ message\u00a0}` property in a `meta` object provided will\n> automatically be concatenated to any `msg` already provided: For \n> example the below will concatenate 'world' onto 'hello':\n>\n> ``` js\n> logger.log('error', 'hello', { message: 'world' });\n> logger.info('hello', { message: 'world' });\n> ```\n\n## Formats\n\nFormats in `winston` can be accessed from `winston.format`. They are\nimplemented in [`logform`](https://github.com/winstonjs/logform), a separate\nmodule from `winston`. This allows flexibility when writing your own transports\nin case you wish to include a default format with your transport.\n\nIn modern versions of `node` template strings are very performant and are the\nrecommended way for doing most end-user formatting. If you want to bespoke\nformat your logs, `winston.format.printf` is for you:\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst { combine, timestamp, label, printf } = format;\n\nconst myFormat = printf(({ level, message, label, timestamp }) => {\n  return `${timestamp} [${label}] ${level}: ${message}`;\n});\n\nconst logger = createLogger({\n  format: combine(\n    label({ label: 'right meow!' }),\n    timestamp(),\n    myFormat\n  ),\n  transports: [new transports.Console()]\n});\n```\n\nTo see what built-in formats are available and learn more about creating your\nown custom logging formats, see [`logform`][logform].\n\n### Combining formats\n\nAny number of formats may be combined into a single format using\n`format.combine`. Since `format.combine` takes no `opts`, as a convenience it\nreturns pre-created instance of the combined format.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst { combine, timestamp, label, prettyPrint } = format;\n\nconst logger = createLogger({\n  format: combine(\n    label({ label: 'right meow!' }),\n    timestamp(),\n    prettyPrint()\n  ),\n  transports: [new transports.Console()]\n})\n\nlogger.log({\n  level: 'info',\n  message: 'What time is the testing at?'\n});\n// Outputs:\n// { level: 'info',\n//   message: 'What time is the testing at?',\n//   label: 'right meow!',\n//   timestamp: '2017-09-30T03:57:26.875Z' }\n```\n\n### String interpolation\n\nThe `log` method provides the string interpolation using [util.format]. **It\nmust be enabled using `format.splat()`.**\n\nBelow is an example that defines a format with string interpolation of\nmessages using `format.splat` and then serializes the entire `info` message\nusing `format.simple`.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\nconst logger = createLogger({\n  format: format.combine(\n    format.splat(),\n    format.simple()\n  ),\n  transports: [new transports.Console()]\n});\n\n//\u00a0info: test message my string {}\nlogger.log('info', 'test message %s', 'my string');\n\n//\u00a0info: test message 123 {}\nlogger.log('info', 'test message %d', 123);\n\n// info: test message first second {number: 123}\nlogger.log('info', 'test message %s, %s', 'first', 'second', { number: 123 });\n```\n\n### Filtering `info` Objects\n\nIf you wish to filter out a given `info` Object completely when logging then \nsimply return a falsey value.\n\n``` js\nconst { createLogger, format, transports } = require('winston');\n\n// Ignore log messages if they have { private: true }\nconst ignorePrivate = format((info, opts) => {\n  if (info.private) { return false; }\n  return info;\n});\n\nconst logger = createLogger({\n  format: format.combine(\n    ignorePrivate(),\n    format.json()\n  ),\n  transports: [new transports.Console()]\n});\n\n// Outputs: {\"level\":\"error\",\"message\":\"Public error to share\"}\nlogger.log({\n  level: 'error',\n  message: 'Public error to share'\n});\n\n// Messages with { private: true } will not be written when logged.\nlogger.log({\n  private: true,\n  level: 'error',\n  message: 'This is super secret - hide it.'\n});\n```\n\nUse of `format.combine` will respect any falsey values return and stop\nevaluation of later formats in the series. For example:\n\n``` js\nconst { format } = require('winston');\nconst { combine, timestamp, label } = format;\n\nconst willNeverThrow = format.combine(\n  format(info => { return false })(), // Ignores everything\n  format(info => { throw new Error('Never reached') })()\n);\n```\n\n### Creating custom formats\n\nFormats are prototypal objects (i.e. class instances) that define a single \nmethod: `transform(info, opts)` and return the mutated `info`:\n\n- `info`: an object representing the log message.\n- `opts`: setting specific to the current instance of the format.\n\nThey are expected to return one of two things:\n\n- **An `info` Object** representing the modified `info` argument. Object \nreferences need not be preserved\u00a0if immutability is preferred. All current \nbuilt-in formats consider `info` mutable, but [immutablejs] is being \nconsidered for future releases.\n- **A falsey value** indicating that the `info` argument should be ignored by the \ncaller. (See: [Filtering `info` Objects](#filtering-info-objects)) below.\n\n`winston.format` is designed to be as simple as possible. To define a new\nformat simple pass it a `transform(info, opts)` function to get a new\n`Format`.\n\nThe named `Format` returned can be used to create as many copies of the given\n`Format` as desired:\n\n``` js\nconst { format } = require('winston');\n\nconst volume = format((info, opts) => {\n  if (opts.yell) {\n    info.message = info.message.toUpperCase();\n  } else if (opts.whisper) {\n    info.message = info.message.toLowerCase();\n  }\n\n  return info;\n});\n\n// `volume` is now a function that returns instances of the format.\nconst scream = volume({ yell: true });\nconsole.dir(scream.transform({\n  level: 'info',\n  message: `sorry for making you YELL in your head!`\n}, scream.options));\n// {\n//   level: 'info'\n//   message: 'SORRY FOR MAKING YOU YELL IN YOUR HEAD!'\n// }\n\n// `volume` can be used multiple times to create different formats.\nconst whisper = volume({ whisper: true });\nconsole.dir(whisper.transform({\n  level: 'info',\n  message: `WHY ARE THEY MAKING US YELL SO MUCH!`\n}, whisper.options));\n// {\n//   level: 'info'\n//   message: 'why are they making us yell so much!'\n// }\n```\n\n## Logging Levels\n\nLogging levels in `winston` conform to the severity ordering specified by\n[RFC5424]: _severity of all levels is assumed to be numerically **ascending**\nfrom most important to least important._\n\nEach `level` is given a specific integer priority. The higher the priority the\nmore important the message is considered to be, and the lower the\ncorresponding integer priority.  For example, as specified exactly in RFC5424\nthe `syslog` levels are prioritized from 0 to 7 (highest to lowest).\n\n```js\n{ \n  emerg: 0, \n  alert: 1, \n  crit: 2, \n  error: 3, \n  warning: 4, \n  notice: 5, \n  info: 6, \n  debug: 7\n}\n```\n\nSimilarly, `npm` logging levels are prioritized from 0 to 5 (highest to\nlowest):\n\n``` js\n{ \n  error: 0, \n  warn: 1, \n  info: 2, \n  verbose: 3, \n  debug: 4, \n  silly: 5 \n}\n```\n\nIf you do not explicitly define the levels that `winston` should use, the\n`npm` levels above will be used.\n\n### Using Logging Levels\n\nSetting the level for your logging message can be accomplished in one of two\nways. You can pass a string representing the logging level to the log() method\nor use the level specified methods defined on every winston Logger.\n\n``` js\n//\n// Any logger instance\n//\nlogger.log('silly', \"127.0.0.1 - there's no place like home\");\nlogger.log('debug', \"127.0.0.1 - there's no place like home\");\nlogger.log('verbose', \"127.0.0.1 - there's no place like home\");\nlogger.log('info', \"127.0.0.1 - there's no place like home\");\nlogger.log('warn', \"127.0.0.1 - there's no place like home\");\nlogger.log('error', \"127.0.0.1 - there's no place like home\");\nlogger.info(\"127.0.0.1 - there's no place like home\");\nlogger.warn(\"127.0.0.1 - there's no place like home\");\nlogger.error(\"127.0.0.1 - there's no place like home\");\n\n//\n// Default logger\n//\nwinston.log('info', \"127.0.0.1 - there's no place like home\");\nwinston.info(\"127.0.0.1 - there's no place like home\");\n```\n\n`winston` allows you to define a `level` property on each transport which\nspecifies the **maximum** level of messages that a transport should log. For\nexample, using the `syslog` levels you could log only `error` messages to the\nconsole and everything `info` and below to a file (which includes `error`\nmessages):\n\n``` js\nconst logger = winston.createLogger({\n  levels: winston.config.syslog.levels,\n  transports: [\n    new winston.transports.Console({ level: 'error' }),\n    new winston.transports.File({\n      filename: 'combined.log',\n      level: 'info'\n    })\n  ]\n});\n```\n\nYou may also dynamically change the log level of a transport:\n\n``` js\nconst transports = {\n  console: new winston.transports.Console({ level: 'warn' }),\n  file: new winston.transports.File({ filename: 'combined.log', level: 'error' })\n};\n\nconst logger = winston.createLogger({\n  transports: [\n    transports.console,\n    transports.file\n  ]\n});\n\nlogger.info('Will not be logged in either transport!');\ntransports.console.level = 'info';\ntransports.file.level = 'info';\nlogger.info('Will be logged in both transports!');\n```\n\n`winston` supports customizable logging levels, defaulting to npm style\nlogging levels. Levels must be specified at the time of creating your logger.\n\n### Using Custom Logging Levels\n\nIn addition to the predefined `npm`, `syslog`, and `cli` levels available in\n`winston`, you can also choose to define your own:\n\n``` js\nconst myCustomLevels = {\n  levels: {\n    foo: 0,\n    bar: 1,\n    baz: 2,\n    foobar: 3\n  },\n  colors: {\n    foo: 'blue',\n    bar: 'green',\n    baz: 'yellow',\n    foobar: 'red'\n  }\n};\n\nconst customLevelLogger = winston.createLogger({ \n  levels: myCustomLevels.levels \n});\n\ncustomLevelLogger.foobar('some foobar level-ed message');\n```\n\nAlthough there is slight repetition in this data structure, it enables simple\nencapsulation if you do not want to have colors. If you do wish to have\ncolors, in addition to passing the levels to the Logger itself, you must make\nwinston aware of them:\n\n``` js\nwinston.addColors(myCustomLevels.colors);\n```\n\nThis enables loggers using the `colorize` formatter to appropriately color and style \nthe output of custom levels.\n\nAdditionally, you can also change background color and font style. \nFor example,\n``` js\nbaz: 'italic yellow',\nfoobar: 'bold red cyanBG'\n```\n\nPossible options are below.\n\n* Font styles: `bold`, `dim`, `italic`, `underline`, `inverse`, `hidden`, \n  `strikethrough`.\n\n* Font foreground colors: `black`, `red`, `green`, `yellow`, `blue`, `magenta`,\n  `cyan`, `white`, `gray`, `grey`.\n\n* Background colors: `blackBG`, `redBG`, `greenBG`, `yellowBG`, `blueBG`\n  `magentaBG`, `cyanBG`, `whiteBG`\n  \n### Colorizing Standard logging levels\n\nTo colorize the standard logging level add\n```js\nwinston.format.combine(\n  winston.format.colorize(),\n  winston.format.json()\n);\n```\nwhere `winston.format.json()` is whatever other formatter you want to use.  The `colorize` formatter must come before any formatters adding text you wish to color.\n\n## Transports\n\nThere are several [core transports] included in  `winston`, which leverage the\nbuilt-in networking and file I/O offered by Node.js core. In addition, there\nare [additional transports] written by members of the community.\n\n## Multiple transports of the same type\n\nIt is possible to use multiple transports of the same type e.g.\n`winston.transports.File` when you construct the transport.\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.File({\n      filename: 'combined.log',\n      level: 'info'\n    }),\n    new winston.transports.File({\n      filename: 'errors.log',\n      level: 'error'\n    })\n  ]\n});\n```\n\nIf you later want to remove one of these transports you can do so by using the\ntransport itself. e.g.:\n\n``` js\nconst combinedLogs = logger.transports.find(transport => {\n  return transport.filename === 'combined.log'\n});\n\nlogger.remove(combinedLogs);\n```\n\n## Adding Custom Transports\n\nAdding a custom transport is easy. All you need to do is accept any options\nyou need, implement a log() method, and consume it with `winston`.\n\n``` js\nconst Transport = require('winston-transport');\nconst util = require('util');\n\n//\n// Inherit from `winston-transport` so you can take advantage\n// of the base functionality and `.exceptions.handle()`.\n//\nmodule.exports = class YourCustomTransport extends Transport {\n  constructor(opts) {\n    super(opts);\n    //\n    // Consume any custom options here. e.g.:\n    // - Connection information for databases\n    // - Authentication information for APIs (e.g. loggly, papertrail, \n    //   logentries, etc.).\n    //\n  }\n\n  log(info, callback) {\n    setImmediate(() => {\n      this.emit('logged', info);\n    });\n\n    // Perform the writing to the remote service\n    callback();\n  }\n};\n```\n\n## Exceptions\n\n### Handling Uncaught Exceptions with winston\n\nWith `winston`, it is possible to catch and log `uncaughtException` events\nfrom your process. With your own logger instance you can enable this behavior\nwhen it's created or later on in your applications lifecycle:\n\n``` js\nconst { createLogger, transports } = require('winston');\n\n// Enable exception handling when you create your logger.\nconst logger = createLogger({\n  transports: [\n    new transports.File({ filename: 'combined.log' }) \n  ],\n  exceptionHandlers: [\n    new transports.File({ filename: 'exceptions.log' })\n  ]\n});\n\n// Or enable it later on by adding a transport or using `.exceptions.handle`\nconst logger = createLogger({\n  transports: [\n    new transports.File({ filename: 'combined.log' }) \n  ]\n});\n\n// Call exceptions.handle with a transport to handle exceptions\nlogger.exceptions.handle(\n  new transports.File({ filename: 'exceptions.log' })\n);\n```\n\nIf you want to use this feature with the default logger, simply call\n`.exceptions.handle()` with a transport instance.\n\n``` js\n//\n// You can add a separate exception logger by passing it to `.exceptions.handle`\n//\nwinston.exceptions.handle(\n  new winston.transports.File({ filename: 'path/to/exceptions.log' })\n);\n\n//\n// Alternatively you can set `handleExceptions` to true when adding transports\n// to winston.\n//\nwinston.add(new winston.transports.File({\n  filename: 'path/to/combined.log',\n  handleExceptions: true\n}));\n```\n\n### To Exit or Not to Exit\n\nBy default, winston will exit after logging an uncaughtException. If this is\nnot the behavior you want, set `exitOnError = false`\n\n``` js\nconst logger = winston.createLogger({ exitOnError: false });\n\n//\n// or, like this:\n//\nlogger.exitOnError = false;\n```\n\nWhen working with custom logger instances, you can pass in separate transports\nto the `exceptionHandlers` property or set `handleExceptions` on any\ntransport.\n\n##### Example 1\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.File({ filename: 'path/to/combined.log' })\n  ],\n  exceptionHandlers: [\n    new winston.transports.File({ filename: 'path/to/exceptions.log' })\n  ]\n});\n```\n\n##### Example 2\n\n``` js\nconst logger = winston.createLogger({\n  transports: [\n    new winston.transports.Console({\n      handleExceptions: true\n    })\n  ],\n  exitOnError: false\n});\n```\n\nThe `exitOnError` option can also be a function to prevent exit on only\ncertain types of errors:\n\n``` js\nfunction ignoreEpipe(err) {\n  return err.code !== 'EPIPE';\n}\n\nconst logger = winston.createLogger({ exitOnError: ignoreEpipe });\n\n//\n// or, like this:\n//\nlogger.exitOnError = ignoreEpipe;\n```\n\n## Profiling\n\nIn addition to logging messages and metadata, `winston` also has a simple\nprofiling mechanism implemented for any logger:\n\n``` js\n//\n// Start profile of 'test'\n//\nlogger.profile('test');\n\nsetTimeout(function () {\n  //\n  // Stop profile of 'test'. Logging will now take place:\n  //   '17 Jan 21:00:00 - info: test duration=1000ms'\n  //\n  logger.profile('test');\n}, 1000);\n```\n\nAlso you can start a timer and keep a reference that you can call `.done()``\non:\n\n``` js\n // Returns an object corresponding to a specific timing. When done\n // is called the timer will finish and log the duration. e.g.:\n //\n const profiler = logger.startTimer();\n setTimeout(function () {\n   profiler.done({ message: 'Logging message' });\n }, 1000);\n```\n\nAll profile messages are set to 'info' level by default, and both message and\nmetadata are optional.  For individual profile messages, you can override the default log level by supplying a metadata object with a `level` property:\n\n```js\nlogger.profile('test', { level: 'debug' });\n```\n\n## Querying Logs\n\n`winston` supports querying of logs with Loggly-like options. [See Loggly\nSearch API](https://www.loggly.com/docs/api-retrieving-data/). Specifically:\n`File`, `Couchdb`, `Redis`, `Loggly`, `Nssocket`, and `Http`.\n\n``` js\nconst options = {\n  from: new Date() - (24 * 60 * 60 * 1000),\n  until: new Date(),\n  limit: 10,\n  start: 0,\n  order: 'desc',\n  fields: ['message']\n};\n\n//\n// Find items logged between today and yesterday.\n//\nlogger.query(options, function (err, results) {\n  if (err) {\n    /* TODO: handle me */\n    throw err;\n  }\n\n  console.log(results);\n});\n```\n\n## Streaming Logs\nStreaming allows you to stream your logs back from your chosen transport.\n\n``` js\n//\n// Start at the end.\n//\nwinston.stream({ start: -1 }).on('log', function(log) {\n  console.log(log);\n});\n```\n\n## Further Reading\n\n### Using the Default Logger\n\nThe default logger is accessible through the `winston` module directly. Any\nmethod that you could call on an instance of a logger is available on the\ndefault logger:\n\n``` js\nconst winston = require('winston');\n\nwinston.log('info', 'Hello distributed log files!');\nwinston.info('Hello again distributed logs');\n\nwinston.level = 'debug';\nwinston.log('debug', 'Now my debug messages are written to console!');\n```\n\nBy default, no transports are set on the default logger. You must\nadd or remove transports via the `add()` and `remove()` methods:\n\n``` js\nconst files = new winston.transports.File({ filename: 'combined.log' });\nconst console = new winston.transports.Console();\n\nwinston.add(console);\nwinston.add(files);\nwinston.remove(console);\n```\n\nOr do it with one call to configure():\n\n``` js\nwinston.configure({\n  transports: [\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n```\n\nFor more documentation about working with each individual transport supported\nby `winston` see the [`winston` Transports](docs/transports.md) document.\n\n### Awaiting logs to be written in `winston`\n\nOften it is useful to wait for your logs to be written before exiting the\nprocess. Each instance of `winston.Logger` is also a [Node.js stream]. A\n`finish` event will be raised when all logs have flushed to all transports\nafter the stream has been ended.\n\n``` js\nconst transport = new winston.transports.Console();\nconst logger = winston.createLogger({\n  transports: [transport]\n});\n\nlogger.on('finish', function (info) {\n  // All `info` log messages has now been logged\n});\n\nlogger.info('CHILL WINSTON!', { seriously: true });\nlogger.end();\n```\n\nIt is also worth mentioning that the logger also emits an 'error' event which\nyou should handle or suppress if you don't want unhandled exceptions:\n\n``` js\n//\n// Handle errors\n//\nlogger.on('error', function (err) { /* Do Something */ });\n\n//\n// Or just suppress them.\n//\nlogger.emitErrs = false;\n```\n\n### Working with multiple Loggers in winston\n\nOften in larger, more complex, applications it is necessary to have multiple\nlogger instances with different settings. Each logger is responsible for a\ndifferent feature area (or category). This is exposed in `winston` in two\nways: through `winston.loggers` and instances of `winston.Container`. In fact,\n`winston.loggers` is just a predefined instance of `winston.Container`:\n\n``` js\nconst winston = require('winston');\nconst { format } = winston;\nconst { combine, label, json } = format;\n\n//\n// Configure the logger for `category1`\n//\nwinston.loggers.add('category1', {\n  format: combine(\n    label({ label: 'category one' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Console({ level: 'silly' }),\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n\n//\n// Configure the logger for `category2`\n//\nwinston.loggers.add('category2', {\n  format: combine(\n    label({ label: 'category two' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Http({ host: 'localhost', port:8080 })\n  ]\n});\n```\n\nNow that your loggers are setup, you can require winston _in any file in your\napplication_ and access these pre-configured loggers:\n\n``` js\nconst winston = require('winston');\n\n//\n// Grab your preconfigured loggers\n//\nconst category1 = winston.loggers.get('category1');\nconst category2 = winston.loggers.get('category2');\n\ncategory1.info('logging to file and console transports');\ncategory2.info('logging to http transport');\n```\n\nIf you prefer to manage the `Container` yourself, you can simply instantiate one:\n\n``` js\nconst winston = require('winston');\nconst { format } = winston;\nconst { combine, json } = format;\n\nconst container = new winston.Container();\n\ncontainer.add('category1', {\n  format: combine(\n    label({ label: 'category one' }),\n    json()\n  ),\n  transports: [\n    new winston.transports.Console({ level: 'silly' }),\n    new winston.transports.File({ filename: 'somefile.log' })\n  ]\n});\n\nconst category1 = container.get('category1');\ncategory1.info('logging to file and console transports');\n```\n\n## Installation\n\n``` bash\nnpm install winston\n```\n\n``` bash\nyarn add winston\n```\n\n## Run Tests\n\nAll of the winston tests are written with [`mocha`][mocha], [`nyc`][nyc], and \n[`assume`][assume].  They can be run with `npm`.\n\n``` bash\nnpm test\n```\n\n#### Author: [Charlie Robbins]\n#### Contributors: [Jarrett Cruger], [David Hyde], [Chris Alderson]\n\n[Transports]: #transports\n[Logging levels]: #logging-levels\n[Formats]: #formats\n[Using custom logging levels]: #using-custom-logging-levels\n[Adding Custom Transports]: #adding-custom-transports\n[core transports]: docs/transports.md#winston-core\n[additional transports]: docs/transports.md#additional-transports\n\n[RFC5424]: https://tools.ietf.org/html/rfc5424\n[util.format]: https://nodejs.org/dist/latest/docs/api/util.html#util_util_format_format_args\n[mocha]: https://mochajs.org\n[nyc]: https://github.com/istanbuljs/nyc\n[assume]: https://github.com/bigpipe/assume\n[logform]: https://github.com/winstonjs/logform#readme\n\n[Read the `winston@2.x` documentation]: https://github.com/winstonjs/winston/tree/2.x \n\n[quick-example]: https://github.com/winstonjs/winston/blob/master/examples/quick-start.js\n[examples]: https://github.com/winstonjs/winston/tree/master/examples\n\n[Charlie Robbins]: http://github.com/indexzero\n[Jarrett Cruger]: https://github.com/jcrugzz\n[David Hyde]: https://github.com/dabh\n[Chris Alderson]: https://github.com/chrisalderson"}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 818488}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 4917581}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 21518882}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 61328984}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 107532147}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 194622867}], "dependentsCount": 7653, "starsCount": 439}, "github": {"homepage": "http://github.com/winstonjs/winston", "starsCount": 15380, "forksCount": 1410, "subscribersCount": 229, "issues": {"count": 1793, "openCount": 318, "distribution": {"3600": 125, "10800": 65, "32400": 76, "97200": 78, "291600": 99, "874800": 151, "2624400": 176, "7873200": 192, "23619600": 305, "70858800": 316, "212576400": 210}, "isDisabled": false}, "contributors": [{"username": "indexzero", "commitsCount": 499}, {"username": "chjj", "commitsCount": 65}, {"username": "DABH", "commitsCount": 29}, {"username": "pose", "commitsCount": 28}, {"username": "crobbins-godaddy", "commitsCount": 27}, {"username": "jcrugzz", "commitsCount": 23}, {"username": "ChrisAlderson", "commitsCount": 21}, {"username": "mmalecki", "commitsCount": 20}, {"username": "Marak", "commitsCount": 9}, {"username": "FotoVerite", "commitsCount": 8}, {"username": "SerayaEryn", "commitsCount": 6}, {"username": "acrazing", "commitsCount": 6}, {"username": "coderarity", "commitsCount": 6}, {"username": "fb55", "commitsCount": 6}, {"username": "kibertoad", "commitsCount": 6}, {"username": "nimrod-becker", "commitsCount": 5}, {"username": "rictorres", "commitsCount": 5}, {"username": "compulim", "commitsCount": 4}, {"username": "get-trucked", "commitsCount": 4}, {"username": "lisa-lionheart", "commitsCount": 4}, {"username": "samzilverberg", "commitsCount": 4}, {"username": "ubun2", "commitsCount": 4}, {"username": "JoshuaGross", "commitsCount": 3}, {"username": "Zoramite", "commitsCount": 3}, {"username": "h4cc", "commitsCount": 3}, {"username": "harriha", "commitsCount": 3}, {"username": "jfhbrook", "commitsCount": 3}, {"username": "jsumners", "commitsCount": 3}, {"username": "kenperkins", "commitsCount": 3}, {"username": "pksunkara", "commitsCount": 3}, {"username": "sixcircuit", "commitsCount": 3}, {"username": "tobli", "commitsCount": 3}, {"username": "wavded", "commitsCount": 3}, {"username": "zackbloom", "commitsCount": 3}, {"username": "Bamieh", "commitsCount": 2}, {"username": "DenisGorbachev", "commitsCount": 2}, {"username": "Jasu", "commitsCount": 2}, {"username": "Kikobeats", "commitsCount": 2}, {"username": "LarsTi", "commitsCount": 2}, {"username": "VipSaran", "commitsCount": 2}, {"username": "WestleyArgentum", "commitsCount": 2}, {"username": "YuriHeiko", "commitsCount": 2}, {"username": "adamcohen", "commitsCount": 2}, {"username": "aquavitae", "commitsCount": 2}, {"username": "ash211", "commitsCount": 2}, {"username": "calvinfo", "commitsCount": 2}, {"username": "catalint", "commitsCount": 2}, {"username": "cdaringe", "commitsCount": 2}, {"username": "ckross01", "commitsCount": 2}, {"username": "clintandrewhall", "commitsCount": 2}, {"username": "dignifiedquire", "commitsCount": 2}, {"username": "dominictarr", "commitsCount": 2}, {"username": "dtex", "commitsCount": 2}, {"username": "erwinw", "commitsCount": 2}, {"username": "iizukanao", "commitsCount": 2}, {"username": "itsfadnis", "commitsCount": 2}, {"username": "jd-carroll", "commitsCount": 2}, {"username": "jeffreypriebe", "commitsCount": 2}, {"username": "jfromaniello", "commitsCount": 2}, {"username": "jhurliman", "commitsCount": 2}, {"username": "maxogden", "commitsCount": 2}, {"username": "mbilbille", "commitsCount": 2}, {"username": "megastef", "commitsCount": 2}, {"username": "mwittig", "commitsCount": 2}, {"username": "paulhroth", "commitsCount": 2}, {"username": "peteward44", "commitsCount": 2}, {"username": "seejohnrun", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "tagyoureit", "commitsCount": 2}, {"username": "vvo", "commitsCount": 2}, {"username": "zuk", "commitsCount": 2}, {"username": "BridgeAR", "commitsCount": 1}, {"username": "James1x0", "commitsCount": 1}, {"username": "NotMoni", "commitsCount": 1}, {"username": "Quintinity", "commitsCount": 1}, {"username": "TheAppleFreak", "commitsCount": 1}, {"username": "Userbit", "commitsCount": 1}, {"username": "aandrewww", "commitsCount": 1}, {"username": "ajcrowe", "commitsCount": 1}, {"username": "amirelemam", "commitsCount": 1}, {"username": "arpit728", "commitsCount": 1}, {"username": "atefBB", "commitsCount": 1}, {"username": "dcurletti", "commitsCount": 1}, {"username": "enqode-hub", "commitsCount": 1}, {"username": "georgeonofrei", "commitsCount": 1}, {"username": "iffyio", "commitsCount": 1}, {"username": "jacargentina", "commitsCount": 1}, {"username": "kaminskypavel", "commitsCount": 1}, {"username": "kirill-konshin", "commitsCount": 1}, {"username": "kwiatkk1", "commitsCount": 1}, {"username": "marikaner", "commitsCount": 1}, {"username": "markjackson02", "commitsCount": 1}, {"username": "ninesalt", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "pkuczynski", "commitsCount": 1}, {"username": "punkish", "commitsCount": 1}, {"username": "s0j0hn", "commitsCount": 1}, {"username": "wa4-fearless-otter", "commitsCount": 1}, {"username": "yinzara", "commitsCount": 1}, {"username": "zhang699", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 1}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 8}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 8}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 18}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 36}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 32500, "testsSize": 112465, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/winston.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/winston.svg", "content": "https://img.shields.io/npm/v/winston.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/winston.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/winston.svg", "content": "https://img.shields.io/npm/dm/winston.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/winstonjs/winston/master.svg?style=flat-square", "service": "https://api.travis-ci.org/winstonjs/winston.svg?branch=master", "shields": "https://img.shields.io/travis/winstonjs/winston/master.svg", "content": "https://img.shields.io/travis/winstonjs/winston/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://nodei.co/npm/winston.png?downloadRank=true", "shields": "https://img.shields.io/npm/v/winston.svg", "content": "https://img.shields.io/npm/v/winston.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["eslint"], "outdatedDependencies": {"one-time": {"required": "0.0.4", "stable": "1.0.0", "latest": "1.0.0"}, "is-stream": {"required": "^1.1.0", "stable": "2.0.0", "latest": "2.0.0"}, "diagnostics": {"required": "^1.1.1", "stable": "2.0.2", "latest": "2.0.2"}, "async": {"required": "^2.6.1", "stable": "3.2.0", "latest": "3.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 17558, "downloadsCount": 20442994.666666668, "downloadsAcceleration": 62067.55371004564, "dependentsCount": 7653}, "maintenance": {"releasesFrequency": 0.09863013698630138, "commitsFrequency": 0.8870890410958905, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7134248864182062, "detail": {"quality": 0.9185600136072969, "popularity": 0.8184459734653121, "maintenance": 0.43257369035187965}}}}, {"@angular/animations": {"analyzedAt": "2020-06-15T21:20:06.162Z", "collected": {"metadata": {"name": "@angular/animations", "scope": "angular", "version": "9.1.11", "description": "Angular - animations integration with web-animations", "date": "2020-06-10T18:24:06.601Z", "author": {"name": "angular"}, "publisher": {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}, "maintainers": [{"username": "angular", "email": "devops+npm@angular.io"}, {"username": "google-wombot", "email": "node-team-npm+wombot@google.com"}], "repository": {"type": "git", "url": "git+https://github.com/angular/angular.git", "directory": "packages/animations"}, "links": {"npm": "https://www.npmjs.com/package/%40angular%2Fanimations", "homepage": "https://github.com/angular/angular#readme", "repository": "https://github.com/angular/angular", "bugs": "https://github.com/angular/angular/issues"}, "license": "MIT", "dependencies": {"tslib": "^2.0.0"}, "peerDependencies": {"@angular/core": "9.1.11", "tslib": "^1.10.0"}, "releases": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 11}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 33}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 54}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 104}, {"from": "2018-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 193}]}, "npm": {"downloads": [{"from": "2020-06-14T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 61304}, {"from": "2020-06-08T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 1360839}, {"from": "2020-05-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 5480355}, {"from": "2020-03-17T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 17459498}, {"from": "2019-12-18T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 31949099}, {"from": "2019-06-16T00:00:00.000Z", "to": "2020-06-15T00:00:00.000Z", "count": 59542244}], "dependentsCount": 5189, "starsCount": 10}, "source": {"files": {"readmeSize": 0, "testsSize": 126109, "hasChangelog": true}, "linters": ["editorconfig", "tslint"]}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.3, "health": 1, "branding": 0}, "popularity": {"communityInterest": 10, "downloadsCount": 5819832.666666667, "downloadsAcceleration": 8478.655802891932, "dependentsCount": 5189}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5060499567923792, "detail": {"quality": 0.7106483682760691, "popularity": 0.5033965132654052, "maintenance": 0.3333333333333333}}}}, {"@storybook/react": {"analyzedAt": "2020-06-17T11:40:50.854Z", "collected": {"metadata": {"name": "@storybook/react", "scope": "storybook", "version": "5.3.19", "description": "Storybook for React: Develop React Component in isolation with Hot Reloading.", "keywords": ["storybook"], "date": "2020-05-24T04:25:56.997Z", "publisher": {"username": "shilman", "email": "michael@lab80.co"}, "maintainers": [{"username": "alexandrebodin", "email": "bodin.alex@gmail.com"}, {"username": "codebyalex", "email": "wilsonc.alexander@gmail.com"}, {"username": "dandean", "email": "me@dandean.com"}, {"username": "danielduan", "email": "dduan@yahoo.com"}, {"username": "domyen", "email": "dom@hichroma.com"}, {"username": "ghengeveld", "email": "info@ghengeveld.nl"}, {"username": "gongreg", "email": "gytis.vinclovas@gmail.com"}, {"username": "hypnosphi", "email": "talpa@yandex.ru"}, {"username": "igor-dv", "email": "davydkin.igor@gmail.com"}, {"username": "kylesuss", "email": "susskyle@gmail.com"}, {"username": "mrmckeb", "email": "mrmckeb.npm@outlook.com"}, {"username": "ndelangen", "email": "ndelangen@me.com"}, {"username": "pago", "email": "patrick.gotthardt@trivago.com"}, {"username": "pksunkara", "email": "pavan.sss1991@gmail.com"}, {"username": "shilman", "email": "michael@lab80.co"}, {"username": "tmeasday", "email": "tom@thesnail.org"}, {"username": "usulpro", "email": "regx@usul.su"}], "repository": {"type": "git", "url": "git+https://github.com/storybookjs/storybook.git", "directory": "app/react"}, "links": {"npm": "https://www.npmjs.com/package/%40storybook%2Freact", "homepage": "https://github.com/storybookjs/storybook/tree/master/app/react", "repository": "https://github.com/storybookjs/storybook", "bugs": "https://github.com/storybookjs/storybook/issues"}, "license": "MIT", "dependencies": {"@babel/plugin-transform-react-constant-elements": "^7.6.3", "@babel/preset-flow": "^7.0.0", "@babel/preset-react": "^7.0.0", "@storybook/addons": "5.3.19", "@storybook/core": "5.3.19", "@storybook/node-logger": "5.3.19", "@svgr/webpack": "^4.0.3", "@types/webpack-env": "^1.15.0", "babel-plugin-add-react-displayname": "^0.0.5", "babel-plugin-named-asset-import": "^0.3.1", "babel-plugin-react-docgen": "^4.0.0", "core-js": "^3.0.1", "global": "^4.3.2", "lodash": "^4.17.15", "mini-css-extract-plugin": "^0.7.0", "prop-types": "^15.7.2", "react-dev-utils": "^9.0.0", "regenerator-runtime": "^0.13.3", "semver": "^6.0.0", "ts-dedent": "^1.1.0", "webpack": "^4.33.0"}, "devDependencies": {"@types/mini-css-extract-plugin": "^0.9.0", "@types/node": "^13.1.5", "@types/webpack": "^4.41.0"}, "peerDependencies": {"@babel/core": "^7.0.1", "babel-loader": "^7.0.0 || ^8.0.0", "react": "*", "react-dom": "*"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 21}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 49}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 105}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 260}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 465}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 277037}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1364647}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 5936836}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 17921763}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 31373378}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 53275780}], "dependentsCount": 349, "starsCount": 10}, "github": {"homepage": "https://storybook.js.org", "starsCount": 49362, "forksCount": 4817, "subscribersCount": 731, "issues": {"count": 11106, "openCount": 599, "distribution": {"3600": 1127, "10800": 819, "32400": 1181, "97200": 1439, "291600": 1178, "874800": 1191, "2624400": 1111, "7873200": 1881, "23619600": 895, "70858800": 271, "212576400": 13}, "isDisabled": false}, "contributors": [{"username": "shilman", "commitsCount": 4071}, {"username": "ndelangen", "commitsCount": 3277}, {"username": "dependencies-bot", "commitsCount": 2209}, {"username": "Hypnosphi", "commitsCount": 1053}, {"username": "arunoda", "commitsCount": 922}, {"username": "igor-dv", "commitsCount": 622}, {"username": "mnmtanish", "commitsCount": 581}, {"username": "tmeasday", "commitsCount": 377}, {"username": "kroeder", "commitsCount": 242}, {"username": "gaetanmaisse", "commitsCount": 231}, {"username": "domyen", "commitsCount": 204}, {"username": "danielduan", "commitsCount": 155}, {"username": "CodeByAlex", "commitsCount": 154}, {"username": "patricklafrance", "commitsCount": 124}, {"username": "roonyh", "commitsCount": 123}, {"username": "Gongreg", "commitsCount": 112}, {"username": "atanasster", "commitsCount": 110}, {"username": "tooppaaa", "commitsCount": 98}, {"username": "Keraito", "commitsCount": 95}, {"username": "lonyele", "commitsCount": 94}, {"username": "plumpNation", "commitsCount": 73}, {"username": "benoitdion", "commitsCount": 66}, {"username": "alterx", "commitsCount": 64}, {"username": "yannbf", "commitsCount": 58}, {"username": "Jessica-Koch", "commitsCount": 54}, {"username": "rhalff", "commitsCount": 51}, {"username": "alexandrebodin", "commitsCount": 48}, {"username": "greenkeeperio-bot", "commitsCount": 46}, {"username": "UsulPro", "commitsCount": 44}, {"username": "ritz078", "commitsCount": 40}, {"username": "jonspalmer", "commitsCount": 39}, {"username": "aaronmcadam", "commitsCount": 37}, {"username": "libetl", "commitsCount": 35}, {"username": "thinkholic", "commitsCount": 33}, {"username": "pksunkara", "commitsCount": 32}, {"username": "hipstersmoothie", "commitsCount": 31}, {"username": "kazupon", "commitsCount": 31}, {"username": "Armanio", "commitsCount": 30}, {"username": "brandonseydel", "commitsCount": 30}, {"username": "gabrielcsapo", "commitsCount": 30}, {"username": "mshaaban088", "commitsCount": 30}, {"username": "chadfawcett", "commitsCount": 29}, {"username": "joscha", "commitsCount": 29}, {"username": "mrmckeb", "commitsCount": 29}, {"username": "wuweiweiwu", "commitsCount": 29}, {"username": "emilio-martinez", "commitsCount": 28}, {"username": "klimentru1986", "commitsCount": 28}, {"username": "jamesgeorge007", "commitsCount": 27}, {"username": "naipath", "commitsCount": 26}, {"username": "leonrodenburg", "commitsCount": 25}, {"username": "dangreenisrael", "commitsCount": 23}, {"username": "jbaxleyiii", "commitsCount": 23}, {"username": "dependabot-preview[bot]", "commitsCount": 22}, {"username": "saponifi3d", "commitsCount": 22}, {"username": "sixmen", "commitsCount": 22}, {"username": "theinterned", "commitsCount": 22}, {"username": "daKmoR", "commitsCount": 20}, {"username": "greenkeeper[bot]", "commitsCount": 20}, {"username": "z4o4z", "commitsCount": 20}, {"username": "Quramy", "commitsCount": 19}, {"username": "ASeeto", "commitsCount": 18}, {"username": "MaximSagan", "commitsCount": 18}, {"username": "dependabot[bot]", "commitsCount": 18}, {"username": "expe-lbenychou", "commitsCount": 18}, {"username": "havelaer", "commitsCount": 18}, {"username": "SoloJiang", "commitsCount": 17}, {"username": "matheo", "commitsCount": 17}, {"username": "tobilen", "commitsCount": 17}, {"username": "BartWaardenburg", "commitsCount": 16}, {"username": "ralzinov", "commitsCount": 15}, {"username": "RWOverdijk", "commitsCount": 14}, {"username": "ghengeveld", "commitsCount": 14}, {"username": "graup", "commitsCount": 14}, {"username": "donaldpipowitch", "commitsCount": 13}, {"username": "frederickfogerty", "commitsCount": 13}, {"username": "meirish", "commitsCount": 13}, {"username": "mortal94", "commitsCount": 13}, {"username": "ImgBotApp", "commitsCount": 12}, {"username": "swernerx", "commitsCount": 12}, {"username": "JakeDawkins", "commitsCount": 11}, {"username": "estevaolucas", "commitsCount": 11}, {"username": "jsomsanith-tlnd", "commitsCount": 11}, {"username": "psimyn", "commitsCount": 11}, {"username": "aamct2", "commitsCount": 10}, {"username": "chinchiheather", "commitsCount": 10}, {"username": "moismat", "commitsCount": 10}, {"username": "rmevans9", "commitsCount": 10}, {"username": "snowystinger", "commitsCount": 10}, {"username": "aromanarguello", "commitsCount": 9}, {"username": "billyvg", "commitsCount": 9}, {"username": "isoppp", "commitsCount": 9}, {"username": "jennvoss", "commitsCount": 9}, {"username": "jonrimmer", "commitsCount": 9}, {"username": "stijnkoopal", "commitsCount": 9}, {"username": "Spy-Seth", "commitsCount": 8}, {"username": "clehnert-psl", "commitsCount": 8}, {"username": "cliedeman", "commitsCount": 8}, {"username": "elevatebart", "commitsCount": 8}, {"username": "trevoreyre", "commitsCount": 8}, {"username": "PunitGr", "commitsCount": 7}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 64}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 413}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1365}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 2903}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 6229}], "statuses": [{"context": "Test Workflow (Storybook)", "state": "failure"}, {"context": "Coverage (Storybook)", "state": "success"}, {"context": "Test (Storybook)", "state": "success"}, {"context": "Smoke Tests (Storybook)", "state": "success"}, {"context": "Lint (Storybook)", "state": "failure"}, {"context": "E2E (Storybook)", "state": "failure"}, {"context": "Aggregate Examples (Examples)", "state": "error"}, {"context": "Build (Storybook)", "state": "success"}, {"context": "Frontpage (Storybook)", "state": "success"}, {"context": "Docs (Storybook)", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 10184, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0, "outdatedDependencies": {"mini-css-extract-plugin": {"required": "^0.7.0", "stable": "0.9.0", "latest": "0.9.0"}, "semver": {"required": "^6.0.0", "stable": "7.3.2", "latest": "7.3.2"}, "@svgr/webpack": {"required": "^4.0.3", "stable": "5.4.0", "latest": "5.4.0"}, "react-dev-utils": {"required": "^9.0.0", "stable": "10.2.1", "latest": "10.2.1"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.44999999999999996, "health": 0.6190476190476191, "branding": 0}, "popularity": {"communityInterest": 55020, "downloadsCount": 5973921, "downloadsAcceleration": 20067.24889649923, "dependentsCount": 349}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8066919769477888}}, "score": {"final": 0.8007990095444475, "detail": {"quality": 0.7331381417700102, "popularity": 0.6599991342180872, "maintenance": 0.9995939143917539}}}}, {"postcss": {"analyzedAt": "2020-06-03T19:23:21.278Z", "collected": {"metadata": {"name": "postcss", "scope": "unscoped", "version": "7.0.32", "description": "Tool for transforming styles with JS plugins", "keywords": ["css", "postcss", "rework", "preprocessor", "parser", "source map", "transform", "manipulation", "transpiler"], "date": "2020-06-02T12:50:20.638Z", "author": {"name": "Andrey Sitnik", "email": "andrey@sitnik.ru", "username": "ai"}, "publisher": {"username": "ai", "email": "andrey@sitnik.ru"}, "maintainers": [{"username": "ai", "email": "andrey@sitnik.ru"}, {"username": "beneb", "email": "beneb.info@gmail.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}], "repository": {"type": "git", "url": "git+https://github.com/postcss/postcss.git"}, "links": {"npm": "https://www.npmjs.com/package/postcss", "homepage": "https://postcss.org/", "repository": "https://github.com/postcss/postcss", "bugs": "https://github.com/postcss/postcss/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.2", "source-map": "^0.6.1", "supports-color": "^6.1.0"}, "devDependencies": {"@babel/core": "^7.4.3", "@babel/preset-env": "^7.4.3", "@logux/eslint-config": "^28.1.0", "babel-eslint": "^10.0.1", "babel-plugin-add-module-exports": "^1.0.0", "concat-with-sourcemaps": "^1.1.0", "del": "^4.1.0", "docdash": "^1.1.0", "eslint": "^5.16.0", "eslint-ci": "^1.0.0", "eslint-config-postcss": "^3.0.7", "eslint-config-standard": "^12.0.0", "eslint-plugin-import": "^2.16.0", "eslint-plugin-import-helpers": "^0.1.4", "eslint-plugin-jest": "^22.4.1", "eslint-plugin-node": "^8.0.1", "eslint-plugin-prefer-let": "^1.0.1", "eslint-plugin-promise": "^4.1.1", "eslint-plugin-security": "^1.4.0", "eslint-plugin-standard": "^4.0.0", "fs-extra": "^7.0.1", "gulp": "^4.0.0", "gulp-babel": "^8.0.0", "gulp-changed": "^3.2.0", "gulp-json-editor": "^2.5.1", "gulp-sourcemaps": "^2.6.5", "husky": "^1.3.1", "jest": "^24.7.1", "jest-cli": "^24.7.1", "jsdoc": "^3.6.3", "lint-staged": "^8.1.5", "postcss-parser-tests": "6.3.1", "run-sequence": "^2.2.1", "size-limit": "^1.0.1", "strip-ansi": "^5.2.0", "yaspeller-ci": "^1.0.0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 35}], "hasTestScript": true, "readme": "# PostCSS [![Gitter][chat-img]][chat]\n\n<img align=\"right\" width=\"95\" height=\"95\"\n     alt=\"Philosopher\u2019s stone, logo of PostCSS\"\n     src=\"http://postcss.github.io/postcss/logo.svg\">\n\n[chat-img]: https://img.shields.io/badge/Gitter-Join_the_PostCSS_chat-brightgreen.svg\n[chat]:     https://gitter.im/postcss/postcss\n\nPostCSS is a tool for transforming styles with JS plugins.\nThese plugins can lint your CSS, support\u00a0variables\u00a0and\u00a0mixins,\ntranspile\u00a0future\u00a0CSS\u00a0syntax, inline\u00a0images, and\u00a0more.\n\nPostCSS is used by industry leaders including Wikipedia, Twitter, Alibaba,\nand JetBrains. The\u00a0[Autoprefixer]\u00a0PostCSS plugin\u00a0is\u00a0one\u00a0of\u00a0the\u00a0most popular\nCSS processors.\n\nPostCSS takes a CSS file and provides an API to analyze and modify its rules\n(by\u00a0transforming\u00a0them\u00a0into\u00a0an\u00a0[Abstract\u00a0Syntax\u00a0Tree]).\nThis API can then be used by [plugins] to\u00a0do a\u00a0lot of\u00a0useful\u00a0things,\ne.g.\u00a0to\u00a0find errors automatically insert vendor prefixes.\n\n**Support / Discussion:** [Gitter](https://gitter.im/postcss/postcss)<br>\n**Twitter account:**      [@postcss](https://twitter.com/postcss)<br>\n**VK.com page:**          [postcss](https://vk.com/postcss)<br>\n**\u4e2d\u6587\u7ffb\u8bd1**:              [`README-cn.md`](./README-cn.md)\n\nFor PostCSS commercial support (consulting, improving the front-end culture\nof your company, PostCSS plugins), contact\u00a0[Evil\u00a0Martians]\nat <surrender@evilmartians.com>.\n\n[Abstract\u00a0Syntax\u00a0Tree]: https://en.wikipedia.org/wiki/Abstract_syntax_tree\n[Evil\u00a0Martians]:        https://evilmartians.com/?utm_source=postcss\n[Autoprefixer]:         https://github.com/postcss/autoprefixer\n[plugins]:              https://github.com/postcss/postcss#plugins\n\n<a href=\"https://evilmartians.com/?utm_source=postcss\">\n  <img src=\"https://evilmartians.com/badges/sponsored-by-evil-martians.svg\"\n       alt=\"Sponsored by Evil Martians\" width=\"236\" height=\"54\">\n</a>\n\n## Sponsorship\n\nPostCSS needs your support. We are accepting donations\n[at Open Collective](https://opencollective.com/postcss/).\n\n<a href=\"https://tailwindcss.com/\">\n  <img src=\"https://refactoringui.nyc3.cdn.digitaloceanspaces.com/tailwind-logo.svg\"\n       alt=\"Sponsored by Tailwind CSS\" width=\"273\" height=\"64\">\n</a>\n\n## Plugins\n\nCurrently, PostCSS has more than 200 plugins. You\u00a0can find all of the plugins\nin the [plugins list] or in the [searchable catalog]. Below is a list\nof our favorite plugins \u2014 the best demonstrations of what can be built\non top of PostCSS.\n\nIf you have any new ideas, [PostCSS plugin development] is really easy.\n\n[searchable catalog]: http://postcss.parts\n[plugins list]:       https://github.com/postcss/postcss/blob/master/docs/plugins.md\n\n### Solve Global CSS Problem\n\n* [`postcss-use`] allows you to explicitly set PostCSS plugins within CSS\n  and execute them only for the current file.\n* [`postcss-modules`] and [`react-css-modules`] automatically isolate\n  selectors within components.\n* [`postcss-autoreset`] is an alternative to using a global reset\n  that is better for isolatable components.\n* [`postcss-initial`] adds `all: initial` support, which resets\n  all inherited styles.\n* [`cq-prolyfill`] adds container query support, allowing styles that respond\n  to the width of the parent.\n\n### Use Future CSS, Today\n\n* [`autoprefixer`] adds vendor prefixes, using data from Can I Use.\n* [`postcss-preset-env`] allows you to use future CSS features today.\n\n### Better CSS Readability\n\n* [`precss`] contains plugins for Sass-like features, like variables, nesting,\n  and mixins.\n* [`postcss-sorting`] sorts the content of rules and at-rules.\n* [`postcss-utilities`] includes the most commonly used shortcuts and helpers.\n* [`short`] adds and extends numerous shorthand properties.\n\n### Images and Fonts\n\n* [`postcss-assets`] inserts image dimensions and inlines files.\n* [`postcss-sprites`] generates image sprites.\n* [`font-magician`] generates all the `@font-face` rules needed in CSS.\n* [`postcss-inline-svg`] allows you to inline SVG and customize its styles.\n* [`postcss-write-svg`] allows you to write simple SVG directly in your CSS.\n\n### Linters\n\n* [`stylelint`] is a modular stylesheet linter.\n* [`stylefmt`] is a tool that automatically formats CSS\n  according `stylelint` rules.\n* [`doiuse`] lints CSS for browser support, using data from Can I Use.\n* [`colorguard`] helps you maintain a consistent color palette.\n\n### Other\n\n* [`postcss-rtl`] combines both-directional (left-to-right and right-to-left) styles in one CSS file.\n* [`cssnano`] is a modular CSS minifier.\n* [`lost`] is a feature-rich `calc()` grid system.\n* [`rtlcss`] mirrors styles for right-to-left locales.\n\n[PostCSS plugin development]:   https://github.com/postcss/postcss/blob/master/docs/writing-a-plugin.md\n[`postcss-inline-svg`]:         https://github.com/TrySound/postcss-inline-svg\n[`postcss-preset-env`]:         https://github.com/jonathantneal/postcss-preset-env\n[`react-css-modules`]:          https://github.com/gajus/react-css-modules\n[`postcss-autoreset`]:          https://github.com/maximkoretskiy/postcss-autoreset\n[`postcss-write-svg`]:          https://github.com/jonathantneal/postcss-write-svg\n[`postcss-utilities`]:          https://github.com/ismamz/postcss-utilities\n[`postcss-initial`]:            https://github.com/maximkoretskiy/postcss-initial\n[`postcss-sprites`]:            https://github.com/2createStudio/postcss-sprites\n[`postcss-modules`]:            https://github.com/outpunk/postcss-modules\n[`postcss-sorting`]:            https://github.com/hudochenkov/postcss-sorting\n[`postcss-assets`]:             https://github.com/assetsjs/postcss-assets\n[`font-magician`]:              https://github.com/jonathantneal/postcss-font-magician\n[`autoprefixer`]:               https://github.com/postcss/autoprefixer\n[`cq-prolyfill`]:               https://github.com/ausi/cq-prolyfill\n[`postcss-rtl`]:                https://github.com/vkalinichev/postcss-rtl\n[`postcss-use`]:                https://github.com/postcss/postcss-use\n[`css-modules`]:                https://github.com/css-modules/css-modules\n[`colorguard`]:                 https://github.com/SlexAxton/css-colorguard\n[`stylelint`]:                  https://github.com/stylelint/stylelint\n[`stylefmt`]:                   https://github.com/morishitter/stylefmt\n[`cssnano`]:                    http://cssnano.co\n[`precss`]:                     https://github.com/jonathantneal/precss\n[`doiuse`]:                     https://github.com/anandthakker/doiuse\n[`rtlcss`]:                     https://github.com/MohammadYounes/rtlcss\n[`short`]:                      https://github.com/jonathantneal/postcss-short\n[`lost`]:                       https://github.com/peterramsing/lost\n\n## Syntaxes\n\nPostCSS can transform styles in any syntax, not just CSS.\nIf there is not yet support for your favorite syntax,\nyou\u00a0can\u00a0write\u00a0a\u00a0parser and/or stringifier to extend PostCSS.\n\n* [`sugarss`] is a indent-based syntax like Sass or Stylus.\n* [`postcss-syntax`] switch syntax automatically by file extensions.\n* [`postcss-html`] parsing styles in `<style>` tags of HTML-like files.\n* [`postcss-markdown`] parsing styles in code blocks of Markdown files.\n* [`postcss-jsx`] parsing CSS in template / object literals of source files.\n* [`postcss-styled`] parsing CSS in template literals of source files.\n* [`postcss-scss`] allows you to work with SCSS\n  *(but does not compile SCSS to CSS)*.\n* [`postcss-sass`] allows you to work with Sass\n    *(but does not compile Sass to CSS)*.\n* [`postcss-less`] allows you to work with Less\n  *(but does not compile LESS to CSS)*.\n* [`postcss-less-engine`] allows you to work with Less\n  *(and DOES compile LESS to CSS using true Less.js evaluation)*.\n* [`postcss-js`] allows you to write styles in JS or transform\n  React Inline Styles, Radium or JSS.\n* [`postcss-safe-parser`] finds and fixes CSS syntax errors.\n* [`midas`] converts a CSS string to highlighted HTML.\n\n[`postcss-less-engine`]: https://github.com/Crunch/postcss-less\n[`postcss-safe-parser`]: https://github.com/postcss/postcss-safe-parser\n[`postcss-syntax`]:      https://github.com/gucong3000/postcss-syntax\n[`postcss-html`]:        https://github.com/gucong3000/postcss-html\n[`postcss-markdown`]:    https://github.com/gucong3000/postcss-markdown\n[`postcss-jsx`]:         https://github.com/gucong3000/postcss-jsx\n[`postcss-styled`]:      https://github.com/gucong3000/postcss-styled\n[`postcss-scss`]:        https://github.com/postcss/postcss-scss\n[`postcss-sass`]:        https://github.com/AleshaOleg/postcss-sass\n[`postcss-less`]:        https://github.com/webschik/postcss-less\n[`postcss-js`]:          https://github.com/postcss/postcss-js\n[`sugarss`]:             https://github.com/postcss/sugarss\n[`midas`]:               https://github.com/ben-eb/midas\n\n## Articles\n\n* [Some things you may think about PostCSS\u2026 and you might be wrong](http://julian.io/some-things-you-may-think-about-postcss-and-you-might-be-wrong)\n* [What PostCSS Really Is; What It Really Does](http://davidtheclark.com/its-time-for-everyone-to-learn-about-postcss)\n* [PostCSS Guides](http://webdesign.tutsplus.com/series/postcss-deep-dive--cms-889)\n\nMore articles and videos you can find on [awesome-postcss](https://github.com/jjaderg/awesome-postcss) list.\n\n## Books\n\n* [Mastering PostCSS for Web Design](https://www.packtpub.com/web-development/mastering-postcss-web-design) by Alex Libby, Packt. (June 2016)\n\n## Usage\n\nYou can start using PostCSS in just two steps:\n\n1. Find and add PostCSS extensions for your build tool.\n2. [Select plugins] and add them to your PostCSS process.\n\n[Select plugins]: http://postcss.parts\n\n### CSS-in-JS\n\nThe best way to use PostCSS with CSS-in-JS is [`astroturf`].\nAdd its loader to your `webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: ['style-loader', 'postcss-loader'],\n      },\n      {\n        test: /\\.jsx?$/,\n        use: ['babel-loader', 'astroturf/loader'],\n      }\n    ]\n  }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer'),\n    require('postcss-nested')\n  ]\n}\n```\n\n[`astroturf`]: https://github.com/4Catalyzer/astroturf\n\n### Parcel\n\n[Parcel] has built-in PostCSS support. It already uses Autoprefixer\nand cssnano. If you want to change plugins, create `postcss.config.js`\nin project\u2019s root:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer'),\n    require('postcss-nested')\n  ]\n}\n```\n\nParcel will even automatically install these plugins for you.\n\n> Please, be aware of [the several issues in Version 1](https://github.com/parcel-bundler/parcel/labels/CSS%20Preprocessing). Notice, [Version 2](https://github.com/parcel-bundler/parcel/projects/5) may resolve the issues via [issue #2157](https://github.com/parcel-bundler/parcel/issues/2157).\n\n[Parcel]: https://parceljs.org\n\n### Webpack\n\nUse [`postcss-loader`] in `webpack.config.js`:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        exclude: /node_modules/,\n        use: [\n          {\n            loader: 'style-loader',\n          },\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 1,\n            }\n          },\n          {\n            loader: 'postcss-loader'\n          }\n        ]\n      }\n    ]\n  }\n}\n```\n\nThen create `postcss.config.js`:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('precss'),\n    require('autoprefixer')\n  ]\n}\n```\n\n[`postcss-loader`]: https://github.com/postcss/postcss-loader\n\n### Gulp\n\nUse [`gulp-postcss`] and [`gulp-sourcemaps`].\n\n```js\ngulp.task('css', () => {\n  const postcss    = require('gulp-postcss')\n  const sourcemaps = require('gulp-sourcemaps')\n\n  return gulp.src('src/**/*.css')\n    .pipe( sourcemaps.init() )\n    .pipe( postcss([ require('precss'), require('autoprefixer') ]) )\n    .pipe( sourcemaps.write('.') )\n    .pipe( gulp.dest('build/') )\n})\n```\n\n[`gulp-sourcemaps`]: https://github.com/floridoo/gulp-sourcemaps\n[`gulp-postcss`]:    https://github.com/postcss/gulp-postcss\n\n### npm run / CLI\n\nTo use PostCSS from your command-line interface or with npm scripts\nthere is [`postcss-cli`].\n\n```sh\npostcss --use autoprefixer -c options.json -o main.css css/*.css\n```\n\n[`postcss-cli`]: https://github.com/postcss/postcss-cli\n\n### Browser\n\nIf you want to compile CSS string in browser (for instance, in live edit\ntools like CodePen), just use [Browserify] or [webpack]. They will pack\nPostCSS and plugins files into a single file.\n\nTo apply PostCSS plugins to React Inline Styles, JSS, Radium\nand other [CSS-in-JS], you can use [`postcss-js`] and\u00a0transforms style objects.\n\n```js\nvar postcss  = require('postcss-js')\nvar prefixer = postcss.sync([ require('autoprefixer') ])\n\nprefixer({ display: 'flex' }) //=> { display: ['-webkit-box', '-webkit-flex', '-ms-flexbox', 'flex'] }\n```\n\n[`postcss-js`]: https://github.com/postcss/postcss-js\n[Browserify]:   http://browserify.org/\n[CSS-in-JS]:    https://github.com/MicheleBertoli/css-in-js\n[webpack]:      https://webpack.github.io/\n\n### Runners\n\n* **Grunt**: [`grunt-postcss`](https://github.com/nDmitry/grunt-postcss)\n* **HTML**: [`posthtml-postcss`](https://github.com/posthtml/posthtml-postcss)\n* **Stylus**: [`poststylus`](https://github.com/seaneking/poststylus)\n* **Rollup**: [`rollup-plugin-postcss`](https://github.com/egoist/rollup-plugin-postcss)\n* **Brunch**: [`postcss-brunch`](https://github.com/brunch/postcss-brunch)\n* **Broccoli**: [`broccoli-postcss`](https://github.com/jeffjewiss/broccoli-postcss)\n* **Meteor**: [`postcss`](https://atmospherejs.com/juliancwirko/postcss)\n* **ENB**: [`enb-postcss`](https://github.com/awinogradov/enb-postcss)\n* **Taskr**: [`taskr-postcss`](https://github.com/lukeed/taskr/tree/master/packages/postcss)\n* **Start**: [`start-postcss`](https://github.com/start-runner/postcss)\n* **Connect/Express**: [`postcss-middleware`](https://github.com/jedmao/postcss-middleware)\n\n### JS API\n\nFor other environments, you can use the JS API:\n\n```js\nconst autoprefixer = require('autoprefixer')\nconst postcss = require('postcss')\nconst precss = require('precss')\nconst fs = require('fs')\n\nfs.readFile('src/app.css', (err, css) => {\n  postcss([precss, autoprefixer])\n    .process(css, { from: 'src/app.css', to: 'dest/app.css' })\n    .then(result => {\n      fs.writeFile('dest/app.css', result.css, () => true)\n      if ( result.map ) {\n        fs.writeFile('dest/app.css.map', result.map, () => true)\n      }\n    })\n})\n```\n\nRead the [PostCSS API documentation] for more details about the JS API.\n\nAll PostCSS runners should pass [PostCSS Runner Guidelines].\n\n[PostCSS Runner Guidelines]: https://github.com/postcss/postcss/blob/master/docs/guidelines/runner.md\n[PostCSS API documentation]: http://api.postcss.org/postcss.html\n\n### Options\n\nMost PostCSS runners accept two parameters:\n\n* An array of plugins.\n* An object of options.\n\nCommon options:\n\n* `syntax`: an object providing a syntax parser and a stringifier.\n* `parser`: a special syntax parser (for example, [SCSS]).\n* `stringifier`: a special syntax output generator (for example, [Midas]).\n* `map`: [source map options].\n* `from`: the input file name (most runners set it automatically).\n* `to`: the output file name (most runners set it automatically).\n\n[source map options]: https://github.com/postcss/postcss/blob/master/docs/source-maps.md\n[Midas]:              https://github.com/ben-eb/midas\n[SCSS]:               https://github.com/postcss/postcss-scss\n\n### Treat Warnings as Errors\n\nIn some situations it might be helpful to fail the build on any warning\nfrom PostCSS or one of its plugins. This guarantees that no warnings\ngo unnoticed, and helps to avoid bugs. While there is no option to enable\ntreating warnings as errors, it can easily be done\nby adding `postcss-fail-on-warn` plugin in the end of PostCSS plugins:\n\n```js\nmodule.exports = {\n  plugins: [\n    require('autoprefixer'),\n    require('postcss-fail-on-warn')\n  ]\n}\n```\n\n## Contributing\n\n[Our contributing guidelines](./CONTRIBUTING.md) will help you\nwith making pull request to this project.\n\n## Editors & IDE Integration\n\n### VS Code\n\n* [`csstools.postcss`] adds support for PostCSS, `postcss-preset-env`\n  and CSS Modules.\n\n[`csstools.postcss`]: https://marketplace.visualstudio.com/items?itemName=csstools.postcss\n\n### Atom\n\n* [`language-postcss`] adds PostCSS and [SugarSS] highlight.\n* [`source-preview-postcss`] previews your output CSS in a separate, live pane.\n\n[SugarSS]: https://github.com/postcss/sugarss\n\n### Sublime Text\n\n* [`Syntax-highlighting-for-PostCSS`] adds PostCSS highlight.\n\n[`Syntax-highlighting-for-PostCSS`]: https://github.com/hudochenkov/Syntax-highlighting-for-PostCSS\n[`source-preview-postcss`]:          https://atom.io/packages/source-preview-postcss\n[`language-postcss`]:                https://atom.io/packages/language-postcss\n\n### Vim\n\n* [`postcss.vim`] adds PostCSS highlight.\n\n[`postcss.vim`]: https://github.com/stephenway/postcss.vim\n\n### WebStorm\n\nWebStorm 2016.3 [has] built-in PostCSS support.\n\n[has]: https://blog.jetbrains.com/webstorm/2016/08/webstorm-2016-3-early-access-preview/\n\n\n## Security Contact\n\nTo report a security vulnerability, please use the [Tidelift security contact].\nTidelift will coordinate the fix and disclosure.\n\n[Tidelift security contact]: https://tidelift.com/security\n\n\n## For Enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `postcss` and thousands of other packages are working\nwith Tidelift to deliver commercial support and maintenance for the open source\ndependencies you use to build your applications. Save time, reduce risk,\nand improve code health, while paying the maintainers of the exact dependencies\nyou use. [Learn more.](https://tidelift.com/subscription/pkg/npm-postcss?utm_source=npm-postcss&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4871367}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 25510700}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 108641318}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 309706922}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 561591328}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1068377650}], "dependentsCount": 4466, "starsCount": 137}, "github": {"homepage": "https://postcss.org/", "starsCount": 22719, "forksCount": 1223, "subscribersCount": 544, "issues": {"count": 1357, "openCount": 18, "distribution": {"3600": 512, "10800": 149, "32400": 191, "97200": 135, "291600": 73, "874800": 55, "2624400": 66, "7873200": 73, "23619600": 70, "70858800": 22, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "ai", "commitsCount": 1834}, {"username": "ben-eb", "commitsCount": 53}, {"username": "davidtheclark", "commitsCount": 30}, {"username": "jedmao", "commitsCount": 28}, {"username": "MoOx", "commitsCount": 21}, {"username": "jonathantneal", "commitsCount": 19}, {"username": "TrySound", "commitsCount": 15}, {"username": "hzlmn", "commitsCount": 11}, {"username": "morishitter", "commitsCount": 10}, {"username": "azat-io", "commitsCount": 7}, {"username": "lydell", "commitsCount": 7}, {"username": "MadLittleMods", "commitsCount": 6}, {"username": "MohammadYounes", "commitsCount": 6}, {"username": "gucong3000", "commitsCount": 6}, {"username": "maximkoretskiy", "commitsCount": 6}, {"username": "pascalduez", "commitsCount": 6}, {"username": "Scrum", "commitsCount": 5}, {"username": "Semigradsky", "commitsCount": 5}, {"username": "Siilwyn", "commitsCount": 5}, {"username": "andrepolischuk", "commitsCount": 5}, {"username": "andyjansson", "commitsCount": 5}, {"username": "janczer", "commitsCount": 5}, {"username": "johno", "commitsCount": 5}, {"username": "andreypopp", "commitsCount": 4}, {"username": "aoberoi", "commitsCount": 4}, {"username": "archana-s", "commitsCount": 4}, {"username": "cvrebert", "commitsCount": 4}, {"username": "ismamz", "commitsCount": 4}, {"username": "nex3", "commitsCount": 4}, {"username": "shvaikalesh", "commitsCount": 4}, {"username": "simonsmith", "commitsCount": 4}, {"username": "sylvainpolletvillard", "commitsCount": 4}, {"username": "vanesyan", "commitsCount": 4}, {"username": "WolfgangKluge", "commitsCount": 3}, {"username": "brainopia", "commitsCount": 3}, {"username": "lahmatiy", "commitsCount": 3}, {"username": "marcustisater", "commitsCount": 3}, {"username": "markfinger", "commitsCount": 3}, {"username": "philip-peterson", "commitsCount": 3}, {"username": "shrpne", "commitsCount": 3}, {"username": "7rulnik", "commitsCount": 2}, {"username": "JGJP", "commitsCount": 2}, {"username": "Jeff2Ma", "commitsCount": 2}, {"username": "ReadmeCritic", "commitsCount": 2}, {"username": "Termina1", "commitsCount": 2}, {"username": "antyakushev", "commitsCount": 2}, {"username": "buschtoens", "commitsCount": 2}, {"username": "cakeinpanic", "commitsCount": 2}, {"username": "ctxhou", "commitsCount": 2}, {"username": "dan-gamble", "commitsCount": 2}, {"username": "delorge", "commitsCount": 2}, {"username": "dichuvichkin", "commitsCount": 2}, {"username": "frontdevde", "commitsCount": 2}, {"username": "glebmachine", "commitsCount": 2}, {"username": "h0tc0d3", "commitsCount": 2}, {"username": "hail2u", "commitsCount": 2}, {"username": "hudochenkov", "commitsCount": 2}, {"username": "iahu", "commitsCount": 2}, {"username": "iamstarkov", "commitsCount": 2}, {"username": "johnie", "commitsCount": 2}, {"username": "justim", "commitsCount": 2}, {"username": "komlev", "commitsCount": 2}, {"username": "kubosho", "commitsCount": 2}, {"username": "kugaevsky", "commitsCount": 2}, {"username": "laureanoarcanio", "commitsCount": 2}, {"username": "markgoodyear", "commitsCount": 2}, {"username": "mikestreety", "commitsCount": 2}, {"username": "mischnic", "commitsCount": 2}, {"username": "nicksheffield", "commitsCount": 2}, {"username": "nucliweb", "commitsCount": 2}, {"username": "ojame", "commitsCount": 2}, {"username": "outpunk", "commitsCount": 2}, {"username": "panec", "commitsCount": 2}, {"username": "pazams", "commitsCount": 2}, {"username": "peterramsing", "commitsCount": 2}, {"username": "silvenon", "commitsCount": 2}, {"username": "simeydotme", "commitsCount": 2}, {"username": "simplesmiler", "commitsCount": 2}, {"username": "stephenway", "commitsCount": 2}, {"username": "tivac", "commitsCount": 2}, {"username": "valtlai", "commitsCount": 2}, {"username": "voischev", "commitsCount": 2}, {"username": "yuezk", "commitsCount": 2}, {"username": "zertosh", "commitsCount": 2}, {"username": "zhouwenbin", "commitsCount": 2}, {"username": "Faisal-Manzer", "commitsCount": 1}, {"username": "IlyaUpyackovich", "commitsCount": 1}, {"username": "Rplus", "commitsCount": 1}, {"username": "admosity", "commitsCount": 1}, {"username": "darrenjacoby", "commitsCount": 1}, {"username": "emzoumpo", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "keithamus", "commitsCount": 1}, {"username": "plegner", "commitsCount": 1}, {"username": "polemius", "commitsCount": 1}, {"username": "tomrav", "commitsCount": 1}, {"username": "wesleyboar", "commitsCount": 1}, {"username": "yunusga", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 31}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 61}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 17833, "testsSize": 103604, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"chalk": {"required": "^2.4.2", "stable": "4.0.0", "latest": "4.0.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 24722, "downloadsCount": 103235640.66666667, "downloadsAcceleration": 221801.24482496188, "dependentsCount": 4466}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.922554794520548, "openIssues": 1, "issuesDistribution": 0.8067244217991846}}, "score": {"final": 0.9222587902777211, "detail": {"quality": 0.8812530735538538, "popularity": 0.8800771236974849, "maintenance": 0.9995882140498433}}}}, {"rollup-plugin-terser": {"analyzedAt": "2020-06-03T23:13:10.597Z", "collected": {"metadata": {"name": "rollup-plugin-terser", "scope": "unscoped", "version": "6.1.0", "description": "Rollup plugin to minify generated es bundle", "keywords": ["rollup", "rollup-plugin", "terser", "minify"], "date": "2020-05-24T21:58:21.233Z", "author": {"name": "Bogdan Chadkin", "email": "trysound@yandex.ru", "username": "trysound"}, "publisher": {"username": "trysound", "email": "trysound@yandex.ru"}, "maintainers": [{"username": "trysound", "email": "trysound@yandex.ru"}], "repository": {"type": "git", "url": "git+https://github.com/TrySound/rollup-plugin-terser.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup-plugin-terser", "homepage": "https://github.com/TrySound/rollup-plugin-terser#readme", "repository": "https://github.com/TrySound/rollup-plugin-terser", "bugs": "https://github.com/TrySound/rollup-plugin-terser/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.8.3", "jest-worker": "^26.0.0", "serialize-javascript": "^3.0.0", "terser": "^4.7.0"}, "devDependencies": {"@babel/core": "^7.9.6", "jest": "^26.0.1", "prettier": "^2.0.5", "rollup": "^2.10.8"}, "peerDependencies": {"rollup": "^2.0.0"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 7}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 20}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# rollup-plugin-terser [![Travis Build Status][travis-img]][travis]\n\n[travis-img]: https://travis-ci.org/TrySound/rollup-plugin-terser.svg\n[travis]: https://travis-ci.org/TrySound/rollup-plugin-terser\n\n[Rollup](https://github.com/rollup/rollup) plugin to minify generated es bundle. Uses [terser](https://github.com/fabiosantoscode/terser) under the hood.\n\n## Install\n\n```sh\nyarn add rollup-plugin-terser --dev\n# Or with npm:\nnpm i rollup-plugin-terser --save-dev\n```\n\n_Note: this package requires rollup@0.66 and higher (including rollup@2.0.0)_\n\n## Usage\n\n```js\nimport { rollup } from \"rollup\";\nimport { terser } from \"rollup-plugin-terser\";\n\nrollup({\n  input: \"main.js\",\n  plugins: [terser()],\n});\n```\n\n## Why named export?\n\n1. Module is a namespace. Default export often leads to function/component per file dogma and makes code less maintainable.\n2. Interop with commonjs is broken in many cases or hard to maintain.\n3. Show me any good language with default exports. It's historical javascriptism.\n\n## Options\n\n> \u26a0\ufe0f **Caveat:** any function used in options object cannot rely on its surrounding scope, since it is executed in an isolated context.\n\n```js\nterser(options);\n```\n\n`options` - [terser API options](https://github.com/fabiosantoscode/terser#minify-options)\n\nNote: some terser options are set by the plugin automatically:\n\n- `module: true` is set when `format` is `esm` or `es`\n- `toplevel: true` is set when `format` is `cjs`\n\n`options.numWorkers: number`\n\nAmount of workers to spawn. Defaults to the number of CPUs minus 1.\n\n## Examples\n\n### Using as output plugin\n\n```js\n// rollup.config.js\nimport { terser } from \"rollup-plugin-terser\";\n\nexport default {\n  input: \"index.js\",\n  output: [\n    { file: \"lib.js\", format: \"cjs\" },\n    { file: \"lib.min.js\", format: \"cjs\", plugins: [terser()] },\n    { file: \"lib.esm.js\", format: \"esm\" },\n  ],\n};\n```\n\n### Comments\n\nIf you'd like to preserve comments (for licensing for example), then you can specify a function to do this like so:\n\n```js\nterser({\n  output: {\n    comments: function (node, comment) {\n      var text = comment.value;\n      var type = comment.type;\n      if (type == \"comment2\") {\n        // multiline comment\n        return /@preserve|@license|@cc_on/i.test(text);\n      }\n    },\n  },\n});\n```\n\nAlternatively, you can also choose to keep all comments (e.g. if a licensing header has already been prepended by a previous rollup plugin):\n\n```js\nterser({\n  output: {\n    comments: \"all\",\n  },\n});\n```\n\nSee [Terser documentation](https://github.com/fabiosantoscode/terser#terser) for further reference.\n\n# License\n\nMIT \u00a9 [Bogdan Chadkin](mailto:trysound@yandex.ru)"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 72866}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 401524}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1643927}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4117994}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6128868}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 8613515}], "dependentsCount": 423, "starsCount": 0}, "github": {"starsCount": 378, "forksCount": 30, "subscribersCount": 2, "issues": {"count": 79, "openCount": 6, "distribution": {"3600": 16, "10800": 3, "32400": 5, "97200": 13, "291600": 5, "874800": 9, "2624400": 8, "7873200": 13, "23619600": 5, "70858800": 2, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "TrySound", "commitsCount": 67}, {"username": "yisraelx", "commitsCount": 2}, {"username": "zech", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "NotWoods", "commitsCount": 1}, {"username": "developit", "commitsCount": 1}, {"username": "edsrzf", "commitsCount": 1}, {"username": "evs-chris", "commitsCount": 1}, {"username": "franciscop", "commitsCount": 1}, {"username": "thw0rted", "commitsCount": 1}, {"username": "willfarrell", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 11}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 15}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 24}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 32}]}, "source": {"files": {"readmeSize": 2645, "testsSize": 14109}, "badges": [{"urls": {"original": "https://travis-ci.org/TrySound/rollup-plugin-terser.svg", "service": "https://api.travis-ci.org/TrySound/rollup-plugin-terser.svg", "shields": "https://img.shields.io/travis/TrySound/rollup-plugin-terser.svg", "content": "https://img.shields.io/travis/TrySound/rollup-plugin-terser.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 421, "downloadsCount": 1372664.6666666667, "downloadsAcceleration": 10412.372716894977, "dependentsCount": 423}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9235205479452055, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.7725717666636104, "detail": {"quality": 0.919612341382078, "popularity": 0.41916222240868634, "maintenance": 0.9999465325884195}}}}, {"reflect-metadata": {"analyzedAt": "2020-05-16T09:00:33.754Z", "collected": {"metadata": {"name": "reflect-metadata", "scope": "unscoped", "version": "0.1.13", "description": "Polyfill for Metadata Reflection API", "keywords": ["decorator", "metadata", "javascript", "reflect"], "date": "2019-01-15T20:29:19.482Z", "author": {"name": "Ron Buckton", "email": "ron.buckton@microsoft.com", "url": "http://github.com/rbuckton"}, "publisher": {"username": "rbuckton", "email": "rbuckton@chronicles.org"}, "maintainers": [{"username": "rbuckton", "email": "rbuckton@chronicles.org"}], "repository": {"type": "git", "url": "git+https://github.com/rbuckton/reflect-metadata.git"}, "links": {"npm": "https://www.npmjs.com/package/reflect-metadata", "homepage": "http://rbuckton.github.io/reflect-metadata", "repository": "https://github.com/rbuckton/reflect-metadata", "bugs": "https://github.com/rbuckton/reflect-metadata/issues"}, "license": "Apache-2.0", "devDependencies": {"@types/chai": "^3.4.34", "@types/mocha": "^2.2.34", "@types/node": "^6.0.52", "chai": "^3.5.0", "del": "^2.2.2", "ecmarkup": "^3.9.3", "gulp": "^3.9.1", "gulp-emu": "^1.1.0", "gulp-live-server": "0.0.30", "gulp-mocha": "^3.0.1", "gulp-rename": "^1.2.2", "gulp-sequence": "^0.4.6", "gulp-tsb": "^2.0.3", "mocha": "^3.2.0", "typescript": "^2.1.4"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# Metadata Reflection API\n\n* [Detailed proposal][Metadata-Spec]\n\n## Installation\n\n```\nnpm install reflect-metadata\n```\n\n## Background\n\n* Decorators add the ability to augment a class and its members as the class is defined, through a declarative syntax.\n* Traceur attaches annotations to a static property on the class.\n* Languages like C# (.NET), and Java support attributes or annotations that add metadata to types, along with a reflective API for reading metadata.\n\n## Goals\n\n* A number of use cases (Composition/Dependency Injection, Runtime Type Assertions, Reflection/Mirroring, Testing) want the ability to add additional metadata to a class in a consistent manner.\n* A consistent approach is needed for various tools and libraries to be able to reason over metadata.\n* Metadata-producing decorators (nee. \"Annotations\") need to be generally composable with mutating decorators.\n* Metadata should be available not only on an object but also through a Proxy, with related traps.\n* Defining new metadata-producing decorators should not be arduous or over-complex for a developer.\n* Metadata should be consistent with other language and runtime features of ECMAScript.\n\n## Syntax\n\n* Declarative definition of metadata:\n```JavaScript\nclass C {\n  @Reflect.metadata(metadataKey, metadataValue)\n  method() {\n  }\n}\n```\n\n* Imperative definition of metadata:\n```JavaScript\nReflect.defineMetadata(metadataKey, metadataValue, C.prototype, \"method\");\n```\n\n* Imperative introspection of metadata:\n```JavaScript\nlet obj = new C();\nlet metadataValue = Reflect.getMetadata(metadataKey, obj, \"method\");\n```\n\n## Semantics\n\n* Object has a new \\[\\[Metadata\\]\\] internal property that will contain a Map whose keys are property keys (or **undefined**) and whose values are Maps of metadata keys to metadata values.\n* Object will have a number of new internal methods for \\[\\[DefineOwnMetadata\\]\\], \\[\\[GetOwnMetadata\\]\\], \\[\\[HasOwnMetadata\\]\\], etc.\n  * These internal methods can be overridden by a Proxy to support additional traps.\n  * These internal methods will by default call a set of abstract operations to define and read metadata.\n* The Reflect object will expose the MOP operations to allow imperative access to metadata.\n* Metadata defined on class declaration *C* is stored in *C*.\\[\\[Metadata\\]\\], with **undefined** as the key.\n* Metadata defined on static members of class declaration *C* are stored in *C*.\\[\\[Metadata\\]\\], with the property key as the key.\n* Metadata defined on instance members of class declaration *C* are stored in *C*.prototype.\\[\\[Metadata\\]\\], with the property key as the key.\n\n## API\n\n```JavaScript\n// define metadata on an object or property\nReflect.defineMetadata(metadataKey, metadataValue, target);\nReflect.defineMetadata(metadataKey, metadataValue, target, propertyKey);\n\n// check for presence of a metadata key on the prototype chain of an object or property\nlet result = Reflect.hasMetadata(metadataKey, target);\nlet result = Reflect.hasMetadata(metadataKey, target, propertyKey);\n\n// check for presence of an own metadata key of an object or property\nlet result = Reflect.hasOwnMetadata(metadataKey, target);\nlet result = Reflect.hasOwnMetadata(metadataKey, target, propertyKey);\n\n// get metadata value of a metadata key on the prototype chain of an object or property\nlet result = Reflect.getMetadata(metadataKey, target);\nlet result = Reflect.getMetadata(metadataKey, target, propertyKey);\n\n// get metadata value of an own metadata key of an object or property\nlet result = Reflect.getOwnMetadata(metadataKey, target);\nlet result = Reflect.getOwnMetadata(metadataKey, target, propertyKey);\n\n// get all metadata keys on the prototype chain of an object or property\nlet result = Reflect.getMetadataKeys(target);\nlet result = Reflect.getMetadataKeys(target, propertyKey);\n\n// get all own metadata keys of an object or property\nlet result = Reflect.getOwnMetadataKeys(target);\nlet result = Reflect.getOwnMetadataKeys(target, propertyKey);\n\n// delete metadata from an object or property\nlet result = Reflect.deleteMetadata(metadataKey, target);\nlet result = Reflect.deleteMetadata(metadataKey, target, propertyKey);\n\n// apply metadata via a decorator to a constructor\n@Reflect.metadata(metadataKey, metadataValue)\nclass C {\n  // apply metadata via a decorator to a method (property)\n  @Reflect.metadata(metadataKey, metadataValue)\n  method() {\n  }\n}\n```\n\n## Alternatives\n\n* Use properties rather than a separate API.\n  * Obvious downside is that this can be a lot of code:\n```JavaScript\nfunction ParamTypes(...types) {\n  return (target, propertyKey) => {\n    const symParamTypes = Symbol.for(\"design:paramtypes\");\n    if (propertyKey === undefined) {\n      target[symParamTypes] = types;\n    }\n    else {\n      const symProperties = Symbol.for(\"design:properties\");\n      let properties, property;\n      if (Object.prototype.hasOwnProperty.call(target, symProperties)) {\n        properties = target[symProperties];\n      }\n      else {\n        properties = target[symProperties] = {};\n      }\n      if (Object.prototype.hasOwnProperty.call(properties, propertyKey)) {\n        property = properties[propertyKey];\n      }\n      else {\n        property = properties[propertyKey] = {};\n      }\n      property[symParamTypes] = types;\n    }\n  };\n}\n```\n\n## Notes\n* Though it may seem counterintuitive, the methods on Reflect place the parameters for the metadata key and metadata value before the target or property key. This is due to the fact that the property key is the only optional parameter in the argument list. This also makes the methods easier to curry with Function#bind. This also helps reduce the overall footprint and complexity of a metadata-producing decorator that could target both a class or a property:\n\n```JavaScript\nfunction ParamTypes(...types) {\n  // as propertyKey is effectively optional, its easier to use here\n  return (target, propertyKey) => { Reflect.defineMetadata(\"design:paramtypes\", types, target, propertyKey); }\n\n  // vs. having multiple overloads with the target and key in the front:\n  //\n  // return (target, propertyKey) => {\n  //    if (propertyKey === undefined) {\n  //      Reflect.defineMetadata(target, \"design:paramtypes\", types);\n  //    }\n  //    else {\n  //      Reflect.defineMetadata(target, propertyKey, \"design:paramtypes\", types);\n  //    }\n  // }\n  //\n  // vs. having a different methods for the class or a property:\n  //\n  // return (target, propertyKey) => {\n  //    if (propertyKey === undefined) {\n  //      Reflect.defineMetadata(target, \"design:paramtypes\", types);\n  //    }\n  //    else {\n  //      Reflect.definePropertyMetadata(target, propertyKey, \"design:paramtypes\", types);\n  //    }\n  // }\n}\n```\n\n* To enable experimental support for metadata decorators in your TypeScript project, you must add `\"experimentalDecorators\": true` to your tsconfig.json file.\n* To enable experimental support for auto-generated type metadata in your TypeScript project, you must add `\"emitDecoratorMetadata\": true` to your tsconfig.json file.\n  * Please note that auto-generated type metadata may have issues with circular or forward references for types.\n\n## Issues\n\n* A poorly written mutating decorator for a class constructor could cause metadata to become lost if the prototype chain is not maintained. Though, not maintaining the prototype chain in a mutating decorator for a class constructor would have other negative side effects as well. @rbuckton\n  * This is mitigated if the mutating decorator returns a class expression that extends from the target, or returns a proxy for the decorator. @rbuckton\n* Metadata for a method is attached to the class (or prototype) via the property key. It would not then be available if trying to read metadata on the function of the method (e.g. \"tearing-off\" the method from the class). @rbuckton\n\n[Metadata-Spec]: https://rbuckton.github.io/reflect-metadata"}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 393837}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 2351168}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 9868202}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 28378807}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 50645934}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 91594506}], "dependentsCount": 4948, "starsCount": 28}, "github": {"homepage": "https://rbuckton.github.io/reflect-metadata", "starsCount": 1555, "forksCount": 109, "subscribersCount": 44, "issues": {"count": 121, "openCount": 43, "distribution": {"3600": 10, "10800": 2, "32400": 5, "97200": 4, "291600": 4, "874800": 9, "2624400": 12, "7873200": 19, "23619600": 16, "70858800": 17, "212576400": 23}, "isDisabled": false}, "contributors": [{"username": "rbuckton", "commitsCount": 80}, {"username": "wbuchwalter", "commitsCount": 2}, {"username": "OlegDokuka", "commitsCount": 1}, {"username": "amatiasq", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 1}], "statuses": [{"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 7884, "testsSize": 63400, "hasNpmIgnore": true}}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.85, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 1740, "downloadsCount": 9459602.333333334, "downloadsAcceleration": 27104.6656392694, "dependentsCount": 4948}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.011506849315068493, "openIssues": 0.7410468319559229, "issuesDistribution": 0}}, "score": {"final": 0.5576401404578979, "detail": {"quality": 0.8573270101706251, "popularity": 0.6572872839721281, "maintenance": 0.20111853718990172}}}}, {"eslint-plugin-babel": {"analyzedAt": "2020-05-17T10:17:40.314Z", "collected": {"metadata": {"name": "eslint-plugin-babel", "scope": "unscoped", "version": "5.3.0", "description": "an eslint rule plugin companion to babel-eslint", "keywords": ["babel", "eslint", "eslintplugin", "eslint-plugin", "babel-eslint"], "date": "2018-11-15T15:13:26.551Z", "author": {"name": "Jason Quense @monasticpanic"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "sebmck", "email": "npm@sebastian.barretomckenzie.com"}, {"username": "monastic.panic", "email": "monastic.panic@gmail.com"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "jameshenry", "email": "npm@jameshenry.email"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/eslint-plugin-babel.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-babel", "homepage": "https://github.com/babel/eslint-plugin-babel#readme", "repository": "https://github.com/babel/eslint-plugin-babel", "bugs": "https://github.com/babel/eslint-plugin-babel/issues"}, "license": "MIT", "dependencies": {"eslint-rule-composer": "^0.3.0"}, "devDependencies": {"babel-eslint": "^8.2.2", "eslint": "^4.19.1", "lodash.clonedeep": "^4.5.0", "mocha": "^5.2.0"}, "peerDependencies": {"eslint": ">=4.0.0"}, "releases": [{"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 1}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 1}, {"from": "2018-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# eslint-plugin-babel\n\nAn `eslint` plugin companion to `babel-eslint`. `babel-eslint` does a great job at adapting `eslint`\nfor use with Babel, but it can't change the built in rules to support experimental features.\n`eslint-plugin-babel` re-implements problematic rules so they do not give false positives or negatives.\n\n> Requires Node 4 or greater\n\n### Install\n\n```sh\nnpm install eslint-plugin-babel --save-dev\n```\n\nLoad the plugin in your `.eslintrc` file:\n\n```json\n{\n  \"plugins\": [\n    \"babel\"\n  ]\n}\n```\n\nFinally enable all the rules you would like to use (remember to disable the\noriginal ones as well!).\n\n```json\n{\n  \"rules\": {\n    \"babel/new-cap\": 1,\n    \"babel/camelcase\": 1,\n    \"babel/no-invalid-this\": 1,\n    \"babel/object-curly-spacing\": 1,\n    \"babel/quotes\": 1,\n    \"babel/semi\": 1,\n    \"babel/no-unused-expressions\": 1,\n    \"babel/valid-typeof\": 1\n  }\n}\n```\n### Rules\n\nEach rule corresponds to a core `eslint` rule, and has the same options.\n\n\ud83d\udee0: means it's autofixable with `--fix`.\n\n- `babel/new-cap`: Ignores capitalized decorators (`@Decorator`)\n- `babel/camelcase: doesn't complain about optional chaining (`var foo = bar?.a_b;`)\n- `babel/no-invalid-this`: doesn't fail when inside class properties (`class A { a = this.b; }`)\n- `babel/object-curly-spacing`: doesn't complain about `export x from \"mod\";` or `export * as x from \"mod\";` (\ud83d\udee0)\n- `babel/quotes`: doesn't complain about JSX fragment shorthand syntax (`<>foo</>;`)\n- `babel/semi`: doesn't fail when using `for await (let something of {})`. Includes class properties (\ud83d\udee0)\n- `babel/no-unused-expressions`: doesn't fail when using `do` expressions or [optional chaining](https://github.com/tc39/proposal-optional-chaining) (`a?.b()`).\n- `babel/valid-typeof`: doesn't complain when used with [BigInt](https://github.com/tc39/proposal-bigint) (`typeof BigInt(9007199254740991) === 'bigint'`).\n\n#### Deprecated\n\n| Rule                             | Notes                              |\n|:---------------------------------|:-----------------------------------|\n| `babel/generator-star-spacing`   | Use [`generator-star-spacing`](http://eslint.org/docs/rules/generator-star-spacing) since eslint@3.6.0 |\n| `babel/object-shorthand`         | Use [`object-shorthand`](http://eslint.org/docs/rules/object-shorthand) since eslint@0.20.0 |\n| `babel/arrow-parens`             | Use [`arrow-parens`](http://eslint.org/docs/rules/arrow-parens) since eslint@3.10.0 |\n| `babel/func-params-comma-dangle` | Use [`comma-dangle`](http://eslint.org/docs/rules/comma-dangle) since eslint@3.8.0 |\n| `babel/array-bracket-spacing`    | Use [`array-bracket-spacing`](http://eslint.org/docs/rules/array-bracket-spacing) since eslint@3.9.0 |\n| `babel/flow-object-type`         | Use [`flowtype/object-type-delimiter`](https://github.com/gajus/eslint-plugin-flowtype#eslint-plugin-flowtype-rules-object-type-delimiter) since eslint-plugin-flowtype@2.23.0 |\n| `babel/no-await-in-loop`         | Use [`no-await-in-loop`](http://eslint.org/docs/rules/no-await-in-loop) since eslint@3.12.0 |"}, "npm": {"downloads": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 21156}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 610472}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 2498752}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 7163981}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 12062115}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 23411078}], "dependentsCount": 750, "starsCount": 14}, "github": {"homepage": "https://github.com/babel/babel-eslint", "starsCount": 382, "forksCount": 76, "subscribersCount": 18, "issues": {"count": 189, "openCount": 35, "distribution": {"3600": 25, "10800": 14, "32400": 8, "97200": 8, "291600": 10, "874800": 12, "2624400": 19, "7873200": 29, "23619600": 19, "70858800": 27, "212576400": 18}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 16}, {"username": "existentialism", "commitsCount": 15}, {"username": "mathieumg", "commitsCount": 10}, {"username": "jquense", "commitsCount": 9}, {"username": "zaygraveyard", "commitsCount": 5}, {"username": "evocateur", "commitsCount": 3}, {"username": "lehni", "commitsCount": 3}, {"username": "nmote", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "daltones", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "kaicataldo", "commitsCount": 2}, {"username": "LegNeato", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "aruberto", "commitsCount": 1}, {"username": "fergald", "commitsCount": 1}, {"username": "greenkeeper[bot]", "commitsCount": 1}, {"username": "hawkrives", "commitsCount": 1}, {"username": "kobelb", "commitsCount": 1}, {"username": "lemonmade", "commitsCount": 1}, {"username": "lyleunderwood", "commitsCount": 1}, {"username": "pascalduez", "commitsCount": 1}, {"username": "preco21", "commitsCount": 1}, {"username": "ssorallen", "commitsCount": 1}, {"username": "villesau", "commitsCount": 1}, {"username": "wagerfield", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 3}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3045, "testsSize": 125286}, "linters": ["eslint"]}}, "evaluation": {"quality": {"carefulness": 0.84, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 517, "downloadsCount": 2387993.6666666665, "downloadsAcceleration": 5505.900970319635, "dependentsCount": 750}, "maintenance": {"releasesFrequency": 0.3236301369863014, "commitsFrequency": 0.03452054794520548, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.5809077676437409, "detail": {"quality": 0.8595212773929086, "popularity": 0.4531199939601491, "maintenance": 0.4698839615423317}}}}, {"sass": {"analyzedAt": "2020-06-05T00:43:54.819Z", "collected": {"metadata": {"name": "sass", "scope": "unscoped", "version": "1.26.8", "description": "A pure JavaScript implementation of Sass.", "keywords": ["style", "scss", "sass", "preprocessor", "css"], "date": "2020-06-05T00:43:04.279Z", "author": {"name": "Natalie Weizenbaum", "email": "nweiz@google.com", "url": "https://github.com/nex3"}, "publisher": {"username": "sassbot", "email": "sass.bot.beep.boop@gmail.com"}, "maintainers": [{"username": "chriseppstein", "email": "chris@eppsteins.net"}, {"username": "hcatlin", "email": "hcatlin@gmail.com"}, {"username": "nex3", "email": "nex342@gmail.com"}, {"username": "sassbot", "email": "sass.bot.beep.boop@gmail.com"}, {"username": "xzyfer", "email": "xzyfer@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sass/dart-sass.git"}, "links": {"npm": "https://www.npmjs.com/package/sass", "homepage": "https://github.com/sass/dart-sass", "repository": "https://github.com/sass/dart-sass", "bugs": "https://github.com/sass/dart-sass/issues"}, "license": "MIT", "dependencies": {"chokidar": ">=2.0.0 <4.0.0"}, "devDependencies": {"node-sass": "^4.11.0", "chokidar": "^2.0.0", "fibers": ">=1.0.0 <5.0.0", "intercept-stdout": "^0.1.2"}, "releases": [{"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 2}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 4}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 18}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 39}, {"from": "2018-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 82}], "readme": "A pure JavaScript implementation of [Sass][sass]. **Sass makes CSS fun again**.\n\n<table>\n  <tr>\n    <td>\n      <img width=\"118px\" alt=\"Sass logo\" src=\"https://rawgit.com/sass/sass-site/master/source/assets/img/logos/logo.svg\" />\n    </td>\n    <td valign=\"middle\">\n      <a href=\"https://www.npmjs.com/package/sass\"><img width=\"100%\" alt=\"npm statistics\" src=\"https://nodei.co/npm/sass.png?downloads=true\"></a>\n    </td>\n    <td valign=\"middle\">\n      <a href=\"https://travis-ci.org/sass/dart-sass\"><img alt=\"Travis build status\" src=\"https://api.travis-ci.org/sass/dart-sass.svg?branch=master\"></a>\n      <br>\n      <a href=\"https://ci.appveyor.com/project/nex3/dart-sass\"><img alt=\"Appveyor build status\" src=\"https://ci.appveyor.com/api/projects/status/84rl9hvu8uoecgef?svg=true\"></a>\n    </td>\n  </tr>\n</table>\n\n[sass]: https://sass-lang.com/\n\nThis package is a distribution of [Dart Sass][], compiled to pure JavaScript\nwith no native code or external dependencies. It provides a command-line `sass`\nexecutable and a Node.js API.\n\n[Dart Sass]: https://github.com/sass/dart-sass\n\n* [Usage](#usage)\n* [API](#api)\n* [See Also](#see-also)\n* [Behavioral Differences from Ruby Sass](#behavioral-differences-from-ruby-sass)\n\n## Usage\n\nYou can install Sass globally using `npm install -g sass` which will provide\naccess to the `sass` executable. You can also add it to your project using\n`npm install --save-dev sass`. This provides the executable as well as a\nlibrary:\n\n[npm]: https://www.npmjs.com/package/sass\n\n```js\nvar sass = require('sass');\n\nsass.render({file: scss_filename}, function(err, result) { /* ... */ });\n\n// OR\n\nvar result = sass.renderSync({file: scss_filename});\n```\n\n[See below](#api) for details on Dart Sass's JavaScript API.\n\n## API\n\nWhen installed via npm, Dart Sass supports a JavaScript API that's fully\ncompatible with [Node Sass][] (with a few exceptions listed below), with support\nfor both the `render()` and `renderSync()` functions. See [the Sass\nwebsite][js api] for full API documentation!\n\n[Node Sass]: https://github.com/sass/node-sass\n[js api]: https://sass-lang.com/documentation/js-api\n\nNote however that by default, **`renderSync()` is more than twice as fast as\n`render()`** due to the overhead of asynchronous callbacks. To avoid this\nperformance hit, `render()` can use the [`fibers`][fibers] package to call\nasynchronous importers from the synchronous code path. To enable this, pass the\n`Fiber` class to the `fiber` option:\n\n[fibers]: https://www.npmjs.com/package/fibers\n\n```js\nvar sass = require(\"sass\");\nvar Fiber = require(\"fibers\");\n\nsass.render({\n  file: \"input.scss\",\n  importer: function(url, prev, done) {\n    // ...\n  },\n  fiber: Fiber\n}, function(err, result) {\n  // ...\n});\n```\n\nBoth `render()` and `renderSync()` support the following options:\n\n* [`data`](https://github.com/sass/node-sass#data)\n* [`file`](https://github.com/sass/node-sass#file)\n* [`functions`](https://github.com/sass/node-sass#functions--v300---experimental)\n* [`importer`](https://github.com/sass/node-sass#importer--v200---experimental)\n* [`includePaths`](https://github.com/sass/node-sass#includepaths)\n* [`indentType`](https://github.com/sass/node-sass#indenttype)\n* [`indentWidth`](https://github.com/sass/node-sass#indentwidth)\n* [`indentedSyntax`](https://github.com/sass/node-sass#indentedsyntax)\n* [`linefeed`](https://github.com/sass/node-sass#linefeed)\n* [`omitSourceMapUrl`](https://github.com/sass/node-sass#omitsourcemapurl)\n* [`outFile`](https://github.com/sass/node-sass#outfile)\n* [`sourceMapContents`](https://github.com/sass/node-sass#sourcemapcontents)\n* [`sourceMapEmbed`](https://github.com/sass/node-sass#sourcemapembed)\n* [`sourceMapRoot`](https://github.com/sass/node-sass#sourcemaproot)\n* [`sourceMap`](https://github.com/sass/node-sass#sourcemap)\n* Only the `\"expanded\"` and `\"compressed\"` values of\n  [`outputStyle`](https://github.com/sass/node-sass#outputstyle) are supported.\n\nNo support is intended for the following options:\n\n* [`precision`](https://github.com/sass/node-sass#precision). Dart Sass defaults\n  to a sufficiently high precision for all existing browsers, and making this\n  customizable would make the code substantially less efficient.\n\n* [`sourceComments`](https://github.com/sass/node-sass#sourcecomments). Source\n  maps are the recommended way of locating the origin of generated selectors.\n\n## See Also\n\n* [Dart Sass][], from which this package is compiled, can be used either as a\n  stand-alone executable or as a Dart library. Running Dart Sass on the Dart VM\n  is substantially faster than running the pure JavaScript version, so this may\n  be appropriate for performance-sensitive applications. The Dart API is also\n  (currently) more user-friendly than the JavaScript API. See\n  [the Dart Sass README][Using Dart Sass] for details on how to use it.\n\n* [Node Sass][], which is a wrapper around [LibSass][], the C++ implementation\n  of Sass. Node Sass supports the same API as this package and is also faster\n  (although it's usually a little slower than Dart Sass). However, it requires a\n  native library which may be difficult to install, and it's generally slower to\n  add features and fix bugs.\n\n[Using Dart Sass]: https://github.com/sass/dart-sass#using-dart-sass\n[Node Sass]: https://www.npmjs.com/package/node-sass\n[LibSass]: https://sass-lang.com/libsass\n\n## Behavioral Differences from Ruby Sass\n\nThere are a few intentional behavioral differences between Dart Sass and Ruby\nSass. These are generally places where Ruby Sass has an undesired behavior, and\nit's substantially easier to implement the correct behavior than it would be to\nimplement compatible behavior. These should all have tracking bugs against Ruby\nSass to update the reference behavior.\n\n1. `@extend` only accepts simple selectors, as does the second argument of\n   `selector-extend()`. See [issue 1599][].\n\n2. Subject selectors are not supported. See [issue 1126][].\n\n3. Pseudo selector arguments are parsed as `<declaration-value>`s rather than\n   having a more limited custom parsing. See [issue 2120][].\n\n4. The numeric precision is set to 10. See [issue 1122][].\n\n5. The indented syntax parser is more flexible: it doesn't require consistent\n   indentation across the whole document. See [issue 2176][].\n\n6. Colors do not support channel-by-channel arithmetic. See [issue 2144][].\n\n7. Unitless numbers aren't `==` to unit numbers with the same value. In\n   addition, map keys follow the same logic as `==`-equality. See\n   [issue 1496][].\n\n8. `rgba()` and `hsla()` alpha values with percentage units are interpreted as\n   percentages. Other units are forbidden. See [issue 1525][].\n\n9. Too many variable arguments passed to a function is an error. See\n   [issue 1408][].\n\n10. Allow `@extend` to reach outside a media query if there's an identical\n    `@extend` defined outside that query. This isn't tracked explicitly, because\n    it'll be irrelevant when [issue 1050][] is fixed.\n\n11. Some selector pseudos containing placeholder selectors will be compiled\n    where they wouldn't be in Ruby Sass. This better matches the semantics of\n    the selectors in question, and is more efficient. See [issue 2228][].\n\n12. The old-style `:property value` syntax is not supported in the indented\n    syntax. See [issue 2245][].\n\n13. The reference combinator is not supported. See [issue 303][].\n\n14. Universal selector unification is symmetrical. See [issue 2247][].\n\n15. `@extend` doesn't produce an error if it matches but fails to unify. See\n    [issue 2250][].\n\n16. Dart Sass currently only supports UTF-8 documents. We'd like to support\n    more, but Dart currently doesn't support them. See [dart-lang/sdk#11744][],\n    for example.\n\n[issue 1599]: https://github.com/sass/sass/issues/1599\n[issue 1126]: https://github.com/sass/sass/issues/1126\n[issue 2120]: https://github.com/sass/sass/issues/2120\n[issue 1122]: https://github.com/sass/sass/issues/1122\n[issue 2176]: https://github.com/sass/sass/issues/2176\n[issue 2144]: https://github.com/sass/sass/issues/2144\n[issue 1496]: https://github.com/sass/sass/issues/1496\n[issue 1525]: https://github.com/sass/sass/issues/1525\n[issue 1408]: https://github.com/sass/sass/issues/1408\n[issue 1050]: https://github.com/sass/sass/issues/1050\n[issue 2228]: https://github.com/sass/sass/issues/2228\n[issue 2245]: https://github.com/sass/sass/issues/2245\n[issue 303]: https://github.com/sass/sass/issues/303\n[issue 2247]: https://github.com/sass/sass/issues/2247\n[issue 2250]: https://github.com/sass/sass/issues/2250\n[dart-lang/sdk#11744]: https://github.com/dart-lang/sdk/issues/11744\n\nDisclaimer: this is not an official Google product."}, "npm": {"downloads": [{"from": "2020-06-04T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 385590}, {"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1980713}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 8417650}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 23629212}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 40385790}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 61483525}], "dependentsCount": 747, "starsCount": 21}, "github": {"homepage": "https://sass-lang.com/dart-sass", "starsCount": 1611, "forksCount": 169, "subscribersCount": 53, "issues": {"count": 1005, "openCount": 61, "distribution": {"3600": 130, "10800": 100, "32400": 79, "97200": 171, "291600": 147, "874800": 178, "2624400": 65, "7873200": 45, "23619600": 29, "70858800": 49, "212576400": 12}, "isDisabled": false}, "contributors": [{"username": "nex3", "commitsCount": 1325}, {"username": "jathak", "commitsCount": 35}, {"username": "Awjin", "commitsCount": 10}, {"username": "srawlins", "commitsCount": 8}, {"username": "nshahan", "commitsCount": 4}, {"username": "tenhobi", "commitsCount": 2}, {"username": "JoshuaHall", "commitsCount": 1}, {"username": "MichaelRFairhurst", "commitsCount": 1}, {"username": "SCKelemen", "commitsCount": 1}, {"username": "XhmikosR", "commitsCount": 1}, {"username": "adaojunior", "commitsCount": 1}, {"username": "alex-page", "commitsCount": 1}, {"username": "asottile", "commitsCount": 1}, {"username": "beastdestroyer", "commitsCount": 1}, {"username": "benwiley4000", "commitsCount": 1}, {"username": "georgpukk", "commitsCount": 1}, {"username": "howardjing", "commitsCount": 1}, {"username": "jmesserly", "commitsCount": 1}, {"username": "john681611", "commitsCount": 1}, {"username": "kaelig", "commitsCount": 1}, {"username": "koorgoo", "commitsCount": 1}, {"username": "kulshekhar", "commitsCount": 1}, {"username": "lrhn", "commitsCount": 1}, {"username": "luisvt", "commitsCount": 1}, {"username": "m4r71n", "commitsCount": 1}, {"username": "matanlurey", "commitsCount": 1}, {"username": "mattfelten", "commitsCount": 1}, {"username": "mgreter", "commitsCount": 1}, {"username": "natebosch", "commitsCount": 1}, {"username": "nschonni", "commitsCount": 1}, {"username": "tgfjt", "commitsCount": 1}], "commits": [{"from": "2020-05-29T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 1}, {"from": "2020-05-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 9}, {"from": "2020-03-07T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 17}, {"from": "2019-12-08T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 77}, {"from": "2019-06-06T00:00:00.000Z", "to": "2020-06-05T00:00:00.000Z", "count": 196}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 14229, "testsSize": 331510, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/sass.png?downloads=true", "shields": "https://img.shields.io/npm/v/sass.svg", "content": "https://img.shields.io/npm/v/sass.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://api.travis-ci.org/sass/dart-sass.svg?branch=master", "service": "https://api.travis-ci.org/sass/dart-sass.svg?branch=master", "shields": "https://img.shields.io/travis/sass/dart-sass/master.svg", "content": "https://img.shields.io/travis/sass/dart-sass/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.55, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 1885, "downloadsCount": 7876404, "downloadsAcceleration": 42014.45148401825, "dependentsCount": 747}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6370920203669154}}, "score": {"final": 0.8246332613056855, "detail": {"quality": 0.9047531385224499, "popularity": 0.5844050371566485, "maintenance": 0.9961873049832103}}}}, {"aws-sdk": {"analyzedAt": "2020-06-17T18:33:16.212Z", "collected": {"metadata": {"name": "aws-sdk", "scope": "unscoped", "version": "2.699.0", "description": "AWS SDK for JavaScript", "keywords": ["api", "amazon", "aws", "ec2", "simpledb", "s3", "sqs", "ses", "sns", "route53", "rds", "elasticache", "cloudfront", "fps", "cloudformation", "cloudwatch", "dynamodb", "iam", "swf", "autoscaling", "cloudsearch", "elb", "loadbalancing", "emr", "mapreduce", "importexport", "storagegateway", "workflow", "ebs", "vpc", "beanstalk", "glacier", "kinesis", "cloudtrail", "waf"], "date": "2020-06-17T18:30:25.541Z", "author": {"name": "Amazon Web Services", "url": "https://aws.amazon.com/"}, "publisher": {"username": "aws-sdk-bot", "email": "aws-sdk-js@amazon.com"}, "maintainers": [{"username": "amzn-oss", "email": "osa-3p@amazon.com"}, {"username": "aws-sdk-bot", "email": "aws-sdk-js@amazon.com"}, {"username": "jamesiri", "email": "jamesiri@amazon.com"}, {"username": "trivikr-aws", "email": "trivikr@amazon.com"}, {"username": "zheallan", "email": "zheallan@amazon.com"}], "contributors": [{"name": "Loren Segal", "email": "lsegal@amazon.com"}, {"name": "Trevor Rowe", "email": "trevrowe@amazon.com"}], "repository": {"type": "git", "url": "git://github.com/aws/aws-sdk-js.git"}, "links": {"npm": "https://www.npmjs.com/package/aws-sdk", "homepage": "https://github.com/aws/aws-sdk-js", "repository": "https://github.com/aws/aws-sdk-js", "bugs": "https://github.com/aws/aws-sdk-js/issues"}, "license": "Apache-2.0", "dependencies": {"buffer": "4.9.2", "events": "1.1.1", "ieee754": "1.1.13", "jmespath": "0.15.0", "querystring": "0.2.0", "sax": "1.2.1", "url": "0.10.3", "uuid": "3.3.2", "xml2js": "0.4.19"}, "devDependencies": {"@types/node": "6.0.92", "browserify": "13.1.0", "chai": "^3.0", "codecov": "^3.6.5", "coffeeify": "*", "coffeescript": "^1.12.7", "cucumber": "0.5.x", "eslint": "^5.8.0", "hash-test-vectors": "^1.3.2", "insert-module-globals": "^7.0.0", "istanbul": "*", "jasmine": "^2.5.3", "jasmine-core": "^2.5.2", "json-loader": "^0.5.4", "karma": "^4.1.0", "karma-chrome-launcher": "2.2.0", "karma-jasmine": "^1.1.0", "mocha": "^3.0.0", "repl.history": "*", "semver": "*", "typescript": "2.0.8", "uglify-js": "2.x", "webpack": "^1.15.0"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 20}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 56}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 104}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 221}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 440}], "hasTestScript": true, "readme": "# AWS SDK for JavaScript\n\n[![NPM version](https://img.shields.io/npm/v/aws-sdk.svg)](https://www.npmjs.com/package/aws-sdk)\n[![NPM downloads](https://img.shields.io/npm/dm/aws-sdk.svg)](https://www.npmjs.com/package/aws-sdk)\n[![Gitter chat](https://badges.gitter.im/gitterHQ/gitter.svg)](https://gitter.im/aws/aws-sdk-js)\n\n[![Build Status](https://travis-ci.org/aws/aws-sdk-js.svg?branch=master)](https://travis-ci.org/aws/aws-sdk-js)\n[![Coverage Status](https://codecov.io/gh/aws/aws-sdk-js/branch/master/graph/badge.svg)](https://codecov.io/gh/aws/aws-sdk-js)\n[![Known Vulnerabilities](https://snyk.io/test/github/aws/aws-sdk-js/badge.svg)](https://snyk.io/test/github/aws/aws-sdk-js)\n\nThe official AWS SDK for JavaScript, available for browsers and mobile devices,\nor Node.js backends\n\nFor release notes, see the [CHANGELOG](https://github.com/aws/aws-sdk-js/blob/master/CHANGELOG.md). Prior to v2.4.8, release notes can be found at https://aws.amazon.com/releasenotes/?tag=releasenotes%23keywords%23javascript\n\nIf you are upgrading from 1.x to 2.0 of the SDK, please see the\n[upgrading notes](https://github.com/aws/aws-sdk-js/blob/master/UPGRADING.md)\nfor information on how to migrate existing code to work with the new major\nversion.\n\n## Installing\n\n### In the Browser\n\nTo use the SDK in the browser, simply add the following script tag to your\nHTML pages:\n\n    <script src=\"https://sdk.amazonaws.com/js/aws-sdk-2.699.0.min.js\"></script>\n\nYou can also build a custom browser SDK with your specified set of AWS services.\nThis can allow you to reduce the SDK's size, specify different API versions of\nservices, or use AWS services that don't currently support CORS if you are\nworking in an environment that does not enforce CORS. To get started:\n\nhttp://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide/building-sdk-for-browsers.html\n\nThe AWS SDK is also compatible with [browserify](http://browserify.org).\n\nFor browser-based web, mobile and hybrid apps, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/?utm_source=aws-js-sdk&utm_campaign=browser) which extends the AWS SDK and provides an easier and declarative interface.\n\n### In Node.js\n\nThe preferred way to install the AWS SDK for Node.js is to use the\n[npm](http://npmjs.org) package manager for Node.js. Simply type the following\ninto a terminal window:\n\n```sh\nnpm install aws-sdk\n```\n\n### In React Native\nTo use the SDK in a react native project, first install the SDK using npm:\n\n```sh\nnpm install aws-sdk\n```\n\nThen within your application, you can reference the react native compatible version of the SDK with the following:\n\n```javascript\nvar AWS = require('aws-sdk/dist/aws-sdk-react-native');\n```\n\nAlternatively, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/media/react_native_guide?utm_source=aws-js-sdk&utm_campaign=react-native) which extends AWS SDK and provides React Native UI components and CLI support to work with AWS services.\n\n### Using Bower\n\nYou can also use [Bower](http://bower.io) to install the SDK by typing the\nfollowing into a terminal window:\n\n```sh\nbower install aws-sdk-js\n```\n\n## Usage and Getting Started\n\nYou can find a getting started guide at:\n\nhttp://docs.aws.amazon.com/sdk-for-javascript/v2/developer-guide\n\nAPI reference at:\n\nhttps://docs.aws.amazon.com/AWSJavaScriptSDK/latest/\n\n## Usage with TypeScript\nThe AWS SDK for JavaScript bundles TypeScript definition files for use in TypeScript projects and to support tools that can read `.d.ts` files.\nOur goal is to keep these TypeScript definition files updated with each release for any public api.\n\n### Pre-requisites\nBefore you can begin using these TypeScript definitions with your project, you need to make sure your project meets a few of these requirements:\n\n * Use TypeScript v2.x\n * Includes the TypeScript definitions for node. You can use npm to install this by typing the following into a terminal window:\n\n    ```sh\n    npm install --save-dev @types/node\n    ```\n\n * If you are targeting at es5 or older ECMA standards, your `tsconfig.json` has to include `'es5'` and `'es2015.promise'` under `compilerOptions.lib`.\n See [tsconfig.json](https://github.com/aws/aws-sdk-js/blob/master/ts/tsconfig.json) for an example.\n\n### In the Browser\nTo use the TypeScript definition files with the global `AWS` object in a front-end project, add the following line to the top of your JavaScript file:\n\n```javascript\n/// <reference types=\"aws-sdk\" />\n```\n\nThis will provide support for the global `AWS` object.\n\n### In Node.js\nTo use the TypeScript definition files within a Node.js project, simply import `aws-sdk` as you normally would.\n\nIn a TypeScript file:\n\n```javascript\n// import entire SDK\nimport AWS from 'aws-sdk';\n// import AWS object without services\nimport AWS from 'aws-sdk/global';\n// import individual service\nimport S3 from 'aws-sdk/clients/s3';\n```\n\n**NOTE:** You need to add `\"esModuleInterop\": true` to compilerOptions of your `tsconfig.json`. If not possible, use like `import * as AWS from 'aws-sdk'`.\n\nIn a JavaScript file:\n\n```javascript\n// import entire SDK\nvar AWS = require('aws-sdk');\n// import AWS object without services\nvar AWS = require('aws-sdk/global');\n// import individual service\nvar S3 = require('aws-sdk/clients/s3');\n```\n\n### With React\n\nTo create React applications with AWS SDK, you can use [AWS Amplify Library](https://aws.github.io/aws-amplify/media/react_guide?utm_source=aws-js-sdk&utm_campaign=react) which provides React components and CLI support to work with AWS services.\n\n### With Angular\nDue to the SDK's reliance on node.js typings, you may encounter compilation \n[issues](https://github.com/aws/aws-sdk-js/issues/1271) when using the\ntypings provided by the SDK in an Angular project created using the Angular CLI.\n\nTo resolve these issues, either add `\"types\": [\"node\"]` to the project's `tsconfig.app.json`\nfile, or remove the `\"types\"` field entirely.\n\n[AWS Amplify Library](https://aws.github.io/aws-amplify/media/angular_guide?utm_source=aws-js-sdk&utm_campaign=angular) provides Angular components and CLI support to work with AWS services.\n\n### Known Limitations\nThere are a few known limitations with the bundled TypeScript definitions at this time:\n\n * Service client typings reflect the latest `apiVersion`, regardless of which `apiVersion` is specified when creating a client.\n * Service-bound parameters use the `any` type.\n\n## Getting Help\nPlease use these community resources for getting help. We use the GitHub issues for tracking bugs and feature requests and have limited bandwidth to address them.\n\n * Ask a question on [StackOverflow](https://stackoverflow.com/) and tag it with `aws-sdk-js`\n * Come join the AWS JavaScript community on [gitter](https://gitter.im/aws/aws-sdk-js?source=orgpage)\n * Open a support ticket with [AWS Support](https://console.aws.amazon.com/support/home#/)\n * If it turns out that you may have found a bug, please [open an issue](https://github.com/aws/aws-sdk-js/issues/new)\n\n## Opening Issues\nIf you encounter a bug with the AWS SDK for JavaScript we would like to hear\nabout it. Search the [existing issues](https://github.com/aws/aws-sdk-js/issues)\nand try to make sure your problem doesn\u2019t already exist before opening a new\nissue. It\u2019s helpful if you include the version of the SDK, Node.js or browser\nenvironment and OS you\u2019re using. Please include a stack trace and reduced repro\ncase when appropriate, too.\n\nThe GitHub issues are intended for bug reports and feature requests. For help\nand questions with using the AWS SDK for JavaScript please make use of the\nresources listed in the [Getting Help](https://github.com/aws/aws-sdk-js#getting-help)\nsection. There are limited resources available for handling issues and by\nkeeping the list of open issues lean we can respond in a timely manner.\n\n## Supported Services\n\nPlease see [SERVICES.md](https://github.com/aws/aws-sdk-js/blob/master/SERVICES.md) for a list of supported services.\n\n## License\n\nThis SDK is distributed under the\n[Apache License, Version 2.0](http://www.apache.org/licenses/LICENSE-2.0),\nsee LICENSE.txt and NOTICE.txt for more information."}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 956853}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 4972570}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 21072344}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 62445623}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 113318938}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 197149356}], "dependentsCount": 6949, "starsCount": 206}, "github": {"homepage": "aws.amazon.com/javascript", "starsCount": 6028, "forksCount": 1192, "subscribersCount": 260, "issues": {"count": 3303, "openCount": 267, "distribution": {"3600": 353, "10800": 221, "32400": 203, "97200": 430, "291600": 380, "874800": 453, "2624400": 384, "7873200": 232, "23619600": 296, "70858800": 244, "212576400": 107}, "isDisabled": false}, "contributors": [{"username": "lsegal", "commitsCount": 1525}, {"username": "chrisradek", "commitsCount": 577}, {"username": "AdityaManohar", "commitsCount": 399}, {"username": "trevorrowe", "commitsCount": 334}, {"username": "LiuJoyceC", "commitsCount": 215}, {"username": "AllanFly120", "commitsCount": 117}, {"username": "jeskew", "commitsCount": 97}, {"username": "srchase", "commitsCount": 58}, {"username": "trivikr", "commitsCount": 36}, {"username": "ajredniwja", "commitsCount": 13}, {"username": "jpb", "commitsCount": 9}, {"username": "guymguym", "commitsCount": 8}, {"username": "islam-taha", "commitsCount": 7}, {"username": "AWSSteveHa", "commitsCount": 5}, {"username": "jstewmon", "commitsCount": 5}, {"username": "maghis", "commitsCount": 5}, {"username": "mdravida19", "commitsCount": 5}, {"username": "mtdowling", "commitsCount": 4}, {"username": "workeitel", "commitsCount": 4}, {"username": "RLovelett", "commitsCount": 3}, {"username": "bkw", "commitsCount": 3}, {"username": "carljparker", "commitsCount": 3}, {"username": "mdurrant", "commitsCount": 3}, {"username": "rclark", "commitsCount": 3}, {"username": "EronHennessey", "commitsCount": 2}, {"username": "G-Rath", "commitsCount": 2}, {"username": "colinhemphill", "commitsCount": 2}, {"username": "daguej", "commitsCount": 2}, {"username": "dump247", "commitsCount": 2}, {"username": "evansolomon", "commitsCount": 2}, {"username": "jaxgeller", "commitsCount": 2}, {"username": "jbt", "commitsCount": 2}, {"username": "johanneswuerbach", "commitsCount": 2}, {"username": "mbahar", "commitsCount": 2}, {"username": "mick", "commitsCount": 2}, {"username": "mmorearty", "commitsCount": 2}, {"username": "rolftimmermans", "commitsCount": 2}, {"username": "sabrehagen", "commitsCount": 2}, {"username": "tnir", "commitsCount": 2}, {"username": "wearhere", "commitsCount": 2}, {"username": "Ajido", "commitsCount": 1}, {"username": "DRNagar", "commitsCount": 1}, {"username": "SimonWoolf", "commitsCount": 1}, {"username": "Sintendo", "commitsCount": 1}, {"username": "Swizec", "commitsCount": 1}, {"username": "TechTeam12", "commitsCount": 1}, {"username": "acheronfail", "commitsCount": 1}, {"username": "akdor1154", "commitsCount": 1}, {"username": "alexdebrie", "commitsCount": 1}, {"username": "anmoldalmia", "commitsCount": 1}, {"username": "arsonik", "commitsCount": 1}, {"username": "ashemedai", "commitsCount": 1}, {"username": "atuttle", "commitsCount": 1}, {"username": "bbeausej", "commitsCount": 1}, {"username": "binoculars", "commitsCount": 1}, {"username": "bittlingmayer", "commitsCount": 1}, {"username": "bodyslam", "commitsCount": 1}, {"username": "cadejscroggins", "commitsCount": 1}, {"username": "cjlarose", "commitsCount": 1}, {"username": "clifflu", "commitsCount": 1}, {"username": "cmorbitzer", "commitsCount": 1}, {"username": "daveisfera", "commitsCount": 1}, {"username": "daviddeyo", "commitsCount": 1}, {"username": "davidkhala", "commitsCount": 1}, {"username": "ericb", "commitsCount": 1}, {"username": "ericmustin", "commitsCount": 1}, {"username": "erikerikson", "commitsCount": 1}, {"username": "everett1992", "commitsCount": 1}, {"username": "ixalon", "commitsCount": 1}, {"username": "jans510", "commitsCount": 1}, {"username": "jcready", "commitsCount": 1}, {"username": "jeremiahwitt", "commitsCount": 1}, {"username": "jfromaniello", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "kkopachev", "commitsCount": 1}, {"username": "lytc", "commitsCount": 1}, {"username": "mcarriere", "commitsCount": 1}, {"username": "mediaupstream", "commitsCount": 1}, {"username": "mrtcode", "commitsCount": 1}, {"username": "nsaboo", "commitsCount": 1}, {"username": "odykyi", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "otterley", "commitsCount": 1}, {"username": "praf", "commitsCount": 1}, {"username": "rpadovani", "commitsCount": 1}, {"username": "rwaldron", "commitsCount": 1}, {"username": "sameergoyal", "commitsCount": 1}, {"username": "slawiko", "commitsCount": 1}, {"username": "strathausen", "commitsCount": 1}, {"username": "tan31989", "commitsCount": 1}, {"username": "theluk", "commitsCount": 1}, {"username": "thomasmichaelwallace", "commitsCount": 1}, {"username": "valgaze", "commitsCount": 1}, {"username": "vladgolubev", "commitsCount": 1}, {"username": "winsome", "commitsCount": 1}, {"username": "wjordan", "commitsCount": 1}, {"username": "xibz", "commitsCount": 1}, {"username": "yangchristian", "commitsCount": 1}, {"username": "yokoe-naosuke-peco", "commitsCount": 1}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 23}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 80}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 157}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 325}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 8131, "testsSize": 3601712, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/aws-sdk.svg", "shields": "https://img.shields.io/npm/v/aws-sdk.svg", "content": "https://img.shields.io/npm/v/aws-sdk.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/aws-sdk.svg", "shields": "https://img.shields.io/npm/dm/aws-sdk.svg", "content": "https://img.shields.io/npm/dm/aws-sdk.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://badges.gitter.im/gitterHQ/gitter.svg", "service": "https://badges.gitter.im/gitterHQ/gitter.svg", "shields": "https://img.shields.io/gitter/room/gitterHQ/gitter.svg", "content": "https://img.shields.io/gitter/room/gitterHQ/gitter.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://travis-ci.org/aws/aws-sdk-js.svg?branch=master", "service": "https://api.travis-ci.org/aws/aws-sdk-js.svg?branch=master", "shields": "https://img.shields.io/travis/aws/aws-sdk-js/master.svg", "content": "https://img.shields.io/travis/aws/aws-sdk-js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "jshint"], "coverage": 0.96, "outdatedDependencies": {"events": {"required": "1.1.1", "stable": "3.1.0", "latest": "3.1.0"}, "url": {"required": "0.10.3", "stable": "0.11.0", "latest": "0.11.0"}, "uuid": {"required": "3.3.2", "stable": "8.1.0", "latest": "8.1.0"}, "xml2js": {"required": "0.4.19", "stable": "0.4.23", "latest": "0.4.23"}, "sax": {"required": "1.2.1", "stable": "1.2.4", "latest": "1.2.4"}, "buffer": {"required": "4.9.2", "stable": "5.6.0", "latest": "5.6.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.819, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 7785, "downloadsCount": 20815207.666666668, "downloadsAcceleration": 62922.66959665148, "dependentsCount": 6949}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.18674132044789404}}, "score": {"final": 0.8446487388182964, "detail": {"quality": 0.9143495344632839, "popularity": 0.7818294600869535, "maintenance": 0.8477244784253641}}}}, {"handlebars": {"analyzedAt": "2020-05-16T19:57:48.466Z", "collected": {"metadata": {"name": "handlebars", "scope": "unscoped", "version": "4.7.6", "description": "Handlebars provides the power necessary to let you build semantic templates effectively with no frustration", "keywords": ["handlebars", "mustache", "template", "html"], "date": "2020-04-03T17:59:55.566Z", "author": {"name": "Yehuda Katz"}, "publisher": {"username": "erisds", "email": "github.erisds@gmail.com"}, "maintainers": [{"username": "erisds", "email": "erisds@gmail.com"}, {"username": "knappi", "email": "npm@knappi.org"}, {"username": "kpdecker", "email": "kpdecker@gmail.com"}, {"username": "lawnsea", "email": "lawnsea@gmail.com"}, {"username": "wycats", "email": "wycats@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/wycats/handlebars.js.git"}, "links": {"npm": "https://www.npmjs.com/package/handlebars", "homepage": "http://www.handlebarsjs.com/", "repository": "https://github.com/wycats/handlebars.js", "bugs": "https://github.com/wycats/handlebars.js/issues"}, "license": "MIT", "dependencies": {"minimist": "^1.2.5", "neo-async": "^2.6.0", "source-map": "^0.6.1", "wordwrap": "^1.0.0", "uglify-js": "^3.1.4"}, "devDependencies": {"@knappi/grunt-saucelabs": "^9.0.2", "aws-sdk": "^2.1.49", "babel-loader": "^5.0.0", "babel-runtime": "^5.1.10", "benchmark": "~1.0", "chai": "^4.2.0", "chai-diff": "^1.0.1", "concurrently": "^5.0.0", "dirty-chai": "^2.0.1", "dtslint": "^0.5.5", "dustjs-linkedin": "^2.0.2", "eco": "~1.1.0-rc-3", "eslint": "^6.7.2", "eslint-config-prettier": "^6.7.0", "eslint-plugin-compat": "^3.3.0", "eslint-plugin-es5": "^1.4.1", "fs-extra": "^8.1.0", "grunt": "^1.0.4", "grunt-babel": "^5.0.0", "grunt-bg-shell": "^2.3.3", "grunt-cli": "^1", "grunt-contrib-clean": "^1", "grunt-contrib-concat": "^1", "grunt-contrib-connect": "^1", "grunt-contrib-copy": "^1", "grunt-contrib-requirejs": "^1", "grunt-contrib-uglify": "^1", "grunt-contrib-watch": "^1.1.0", "grunt-webpack": "^1.0.8", "husky": "^3.1.0", "jison": "~0.3.0", "lint-staged": "^9.5.0", "mocha": "^5", "mock-stdin": "^0.3.0", "mustache": "^2.1.3", "nyc": "^14.1.1", "prettier": "^1.19.1", "semver": "^5.0.1", "sinon": "^7.5.0", "typescript": "^3.4.3", "underscore": "^1.5.1", "webpack": "^1.12.6", "webpack-dev-server": "^1.12.1"}, "optionalDependencies": {"uglify-js": "^3.1.4"}, "releases": [{"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 5}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 11}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 31}, {"from": "2018-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 40}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Travis Build Status](https://img.shields.io/travis/wycats/handlebars.js/master.svg)](https://travis-ci.org/wycats/handlebars.js)\n[![Appveyor Build Status](https://ci.appveyor.com/api/projects/status/github/wycats/handlebars.js?branch=master&svg=true)](https://ci.appveyor.com/project/wycats/handlebars-js)\n[![Selenium Test Status](https://saucelabs.com/buildstatus/handlebars)](https://saucelabs.com/u/handlebars)\n\nHandlebars.js\n=============\n\nHandlebars.js is an extension to the [Mustache templating\nlanguage](http://mustache.github.com/) created by Chris Wanstrath.\nHandlebars.js and Mustache are both logicless templating languages that\nkeep the view and the code separated like we all know they should be.\n\nCheckout the official Handlebars docs site at\n[https://handlebarsjs.com/](https://handlebarsjs.com) and the live demo at [http://tryhandlebarsjs.com/](http://tryhandlebarsjs.com/).\n\nInstalling\n----------\n\nSee our [installation documentation](https://handlebarsjs.com/installation/).\n\nUsage\n-----\nIn general, the syntax of Handlebars.js templates is a superset\nof Mustache templates. For basic syntax, check out the [Mustache\nmanpage](http://mustache.github.com/mustache.5.html).\n\nOnce you have a template, use the `Handlebars.compile` method to compile\nthe template into a function. The generated function takes a context\nargument, which will be used to render the template.\n\n```js\nvar source = \"<p>Hello, my name is {{name}}. I am from {{hometown}}. I have \" +\n             \"{{kids.length}} kids:</p>\" +\n             \"<ul>{{#kids}}<li>{{name}} is {{age}}</li>{{/kids}}</ul>\";\nvar template = Handlebars.compile(source);\n\nvar data = { \"name\": \"Alan\", \"hometown\": \"Somewhere, TX\",\n             \"kids\": [{\"name\": \"Jimmy\", \"age\": \"12\"}, {\"name\": \"Sally\", \"age\": \"4\"}]};\nvar result = template(data);\n\n// Would render:\n// <p>Hello, my name is Alan. I am from Somewhere, TX. I have 2 kids:</p>\n// <ul>\n//   <li>Jimmy is 12</li>\n//   <li>Sally is 4</li>\n// </ul>\n```\n\nFull documentation and more examples are at [handlebarsjs.com](https://handlebarsjs.com/).\n\nPrecompiling Templates\n----------------------\n\nHandlebars allows templates to be precompiled and included as javascript code rather than the handlebars template allowing for faster startup time. Full details are located [here](https://handlebarsjs.com/installation/precompilation.html).\n\nDifferences Between Handlebars.js and Mustache\n----------------------------------------------\nHandlebars.js adds a couple of additional features to make writing\ntemplates easier and also changes a tiny detail of how partials work.\n\n- [Nested Paths](https://handlebarsjs.com/guide/expressions.html#path-expressions)\n- [Helpers](https://handlebarsjs.com/guide/expressions.html#helpers)\n- [Block Expressions](https://handlebarsjs.com/guide/block-helpers.html#basic-blocks)\n- [Literal Values](https://handlebarsjs.com/guide/expressions.html#literal-segments)\n- [Delimited Comments](https://handlebarsjs.com/guide/#template-comments)\n\nBlock expressions have the same syntax as mustache sections but should not be confused with one another. Sections are akin to an implicit `each` or `with` statement depending on the input data and helpers are explicit pieces of code that are free to implement whatever behavior they like. The [mustache spec](http://mustache.github.io/mustache.5.html) defines the exact behavior of sections. In the case of name conflicts, helpers are given priority.\n\n### Compatibility\n\nThere are a few Mustache behaviors that Handlebars does not implement.\n- Handlebars deviates from Mustache slightly in that it does not perform recursive lookup by default. The compile time `compat` flag must be set to enable this functionality. Users should note that there is a performance cost for enabling this flag. The exact cost varies by template, but it's recommended that performance sensitive operations should avoid this mode and instead opt for explicit path references.\n- The optional Mustache-style lambdas are not supported. Instead Handlebars provides its own lambda resolution that follows the behaviors of helpers.\n- Alternative delimiters are not supported.\n\n\nSupported Environments\n----------------------\n\nHandlebars has been designed to work in any ECMAScript 3 environment. This includes\n\n- Node.js\n- Chrome\n- Firefox\n- Safari 5+\n- Opera 11+\n- IE 6+\n\nOlder versions and other runtimes are likely to work but have not been formally\ntested. The compiler requires `JSON.stringify` to be implemented natively or via a polyfill. If using the precompiler this is not necessary.\n\n[![Selenium Test Status](https://saucelabs.com/browser-matrix/handlebars.svg)](https://saucelabs.com/u/handlebars)\n\nPerformance\n-----------\n\nIn a rough performance test, precompiled Handlebars.js templates (in\nthe original version of Handlebars.js) rendered in about half the\ntime of Mustache templates. It would be a shame if it were any other\nway, since they were precompiled, but the difference in architecture\ndoes have some big performance advantages. Justin Marney, a.k.a.\n[gotascii](http://github.com/gotascii), confirmed that with an\n[independent test](http://sorescode.com/2010/09/12/benchmarks.html). The\nrewritten Handlebars (current version) is faster than the old version,\nwith many [performance tests](https://travis-ci.org/wycats/handlebars.js/builds/33392182#L538) being 5 to 7 times faster than the Mustache equivalent.\n\n\nUpgrading\n---------\n\nSee [release-notes.md](https://github.com/wycats/handlebars.js/blob/master/release-notes.md) for upgrade notes.\n\nKnown Issues\n------------\n\nSee [FAQ.md](https://github.com/wycats/handlebars.js/blob/master/FAQ.md) for known issues and common pitfalls.\n\n\nHandlebars in the Wild\n----------------------\n\n* [Assemble](http://assemble.io), by [@jonschlinkert](https://github.com/jonschlinkert)\n  and [@doowb](https://github.com/doowb), is a static site generator that uses Handlebars.js\n  as its template engine.\n* [Cory](https://github.com/leo/cory), by [@leo](https://github.com/leo), is another tiny static site generator\n* [CoSchedule](http://coschedule.com) An editorial calendar for WordPress that uses Handlebars.js\n* [dashbars](https://github.com/pismute/dashbars) A modern helper library for Handlebars.js.\n* [Ember.js](http://www.emberjs.com) makes Handlebars.js the primary way to\n  structure your views, also with automatic data binding support.\n* [Ghost](https://ghost.org/) Just a blogging platform.\n* [handlebars_assets](http://github.com/leshill/handlebars_assets): A Rails Asset Pipeline gem\n  from Les Hill (@leshill).\n* [handlebars-helpers](https://github.com/assemble/handlebars-helpers) is an extensive library\n  with 100+ handlebars helpers.\n* [handlebars-layouts](https://github.com/shannonmoeller/handlebars-layouts) is a set of helpers which implement extendible and embeddable layout blocks as seen in other popular templating languages.\n* [hbs](http://github.com/donpark/hbs): An Express.js view engine adapter for Handlebars.js,\n  from Don Park.\n* [koa-hbs](https://github.com/jwilm/koa-hbs): [koa](https://github.com/koajs/koa) generator based\n  renderer for Handlebars.js.\n* [jblotus](http://github.com/jblotus) created [http://tryhandlebarsjs.com](http://tryhandlebarsjs.com)\n  for anyone who would like to try out Handlebars.js in their browser.\n* [jQuery plugin](http://71104.github.io/jquery-handlebars/): allows you to use\n  Handlebars.js with [jQuery](http://jquery.com/).\n* [Lumbar](http://walmartlabs.github.io/lumbar) provides easy module-based template management for\n  handlebars projects.\n* [Marionette.Handlebars](https://github.com/hashchange/marionette.handlebars) adds support for Handlebars and Mustache templates to Marionette.\n* [sammy.js](http://github.com/quirkey/sammy) by Aaron Quint, a.k.a. quirkey,\n  supports Handlebars.js as one of its template plugins.\n* [SproutCore](http://www.sproutcore.com) uses Handlebars.js as its main\n  templating engine, extending it with automatic data binding support.\n* [YUI](http://yuilibrary.com/yui/docs/handlebars/) implements a port of handlebars\n* [Swag](https://github.com/elving/swag) by [@elving](https://github.com/elving) is a growing collection of helpers for handlebars.js. Give your handlebars.js templates some swag son!\n* [DOMBars](https://github.com/blakeembrey/dombars) is a DOM-based templating engine built on the Handlebars parser and runtime **DEPRECATED**\n* [promised-handlebars](https://github.com/nknapp/promised-handlebars) is a wrapper for Handlebars that allows helpers to return Promises.\n* [just-handlebars-helpers](https://github.com/leapfrogtechnology/just-handlebars-helpers) A fully tested lightweight package with common Handlebars helpers.\n\nExternal Resources\n------------------\n\n* [Gist about Synchronous and asynchronous loading of external handlebars templates](https://gist.github.com/2287070)\n\nHave a project using Handlebars? Send us a [pull request][pull-request]!\n\nLicense\n-------\nHandlebars.js is released under the MIT license.\n\n[pull-request]: https://github.com/wycats/handlebars.js/pull/new/master"}, "npm": {"downloads": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 1312807}, {"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 7873637}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 34293673}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 105262531}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 213018100}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 416847761}], "dependentsCount": 6950, "starsCount": 177}, "github": {"homepage": "http://handlebarsjs.com", "starsCount": 15322, "forksCount": 1975, "subscribersCount": 462, "issues": {"count": 1685, "openCount": 54, "distribution": {"3600": 131, "10800": 68, "32400": 95, "97200": 175, "291600": 188, "874800": 204, "2624400": 234, "7873200": 215, "23619600": 177, "70858800": 132, "212576400": 66}, "isDisabled": false}, "contributors": [{"username": "kpdecker", "commitsCount": 826}, {"username": "nknapp", "commitsCount": 208}, {"username": "nalanj", "commitsCount": 111}, {"username": "wycats", "commitsCount": 111}, {"username": "ErisDS", "commitsCount": 21}, {"username": "wagenet", "commitsCount": 15}, {"username": "lawnsea", "commitsCount": 9}, {"username": "jasondavies", "commitsCount": 8}, {"username": "leshill", "commitsCount": 8}, {"username": "blakeembrey", "commitsCount": 6}, {"username": "mmun", "commitsCount": 6}, {"username": "blikblum", "commitsCount": 5}, {"username": "marado", "commitsCount": 5}, {"username": "rgrove", "commitsCount": 5}, {"username": "dmarcotte", "commitsCount": 4}, {"username": "ericbn", "commitsCount": 4}, {"username": "kabirbaidhya", "commitsCount": 4}, {"username": "machty", "commitsCount": 4}, {"username": "SlexAxton", "commitsCount": 3}, {"username": "blessenm", "commitsCount": 3}, {"username": "denniskuczynski", "commitsCount": 3}, {"username": "jjclark1982", "commitsCount": 3}, {"username": "jwietelmann", "commitsCount": 3}, {"username": "kiall", "commitsCount": 3}, {"username": "liqiang372", "commitsCount": 3}, {"username": "marcioj", "commitsCount": 3}, {"username": "paulfalgout", "commitsCount": 3}, {"username": "ryanmurakami", "commitsCount": 3}, {"username": "travnels", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "zaach", "commitsCount": 3}, {"username": "AviVahl", "commitsCount": 2}, {"username": "DevinClark", "commitsCount": 2}, {"username": "JamesMaroney", "commitsCount": 2}, {"username": "MikeMayer", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "adjohnson916", "commitsCount": 2}, {"username": "aymerick", "commitsCount": 2}, {"username": "banks", "commitsCount": 2}, {"username": "bkaull", "commitsCount": 2}, {"username": "broady", "commitsCount": 2}, {"username": "charleso", "commitsCount": 2}, {"username": "gennadiylitvinyuk", "commitsCount": 2}, {"username": "gleitz", "commitsCount": 2}, {"username": "jbboehr", "commitsCount": 2}, {"username": "jblotus", "commitsCount": 2}, {"username": "jenseng", "commitsCount": 2}, {"username": "jezell", "commitsCount": 2}, {"username": "johneke", "commitsCount": 2}, {"username": "joonas-lahtinen", "commitsCount": 2}, {"username": "jpfiset", "commitsCount": 2}, {"username": "leo", "commitsCount": 2}, {"username": "max-b", "commitsCount": 2}, {"username": "nikolas", "commitsCount": 2}, {"username": "ogennadi", "commitsCount": 2}, {"username": "ole-martin", "commitsCount": 2}, {"username": "papasmile", "commitsCount": 2}, {"username": "phil-davis", "commitsCount": 2}, {"username": "roydukkey", "commitsCount": 2}, {"username": "rsim", "commitsCount": 2}, {"username": "schuyler1d", "commitsCount": 2}, {"username": "shinypb", "commitsCount": 2}, {"username": "spikebrehm", "commitsCount": 2}, {"username": "stabbylambda", "commitsCount": 2}, {"username": "timwangdev", "commitsCount": 2}, {"username": "zimmi88", "commitsCount": 2}, {"username": "0xack13", "commitsCount": 1}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "DeeDeeG", "commitsCount": 1}, {"username": "LukasDrgon", "commitsCount": 1}, {"username": "Maikuolan", "commitsCount": 1}, {"username": "Mindar", "commitsCount": 1}, {"username": "Silic0nS0ldier", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaharu", "commitsCount": 1}, {"username": "antelle", "commitsCount": 1}, {"username": "aorinevo", "commitsCount": 1}, {"username": "atomictag", "commitsCount": 1}, {"username": "barbeque", "commitsCount": 1}, {"username": "chancancode", "commitsCount": 1}, {"username": "dougwilson", "commitsCount": 1}, {"username": "fivetanley", "commitsCount": 1}, {"username": "hashchange", "commitsCount": 1}, {"username": "i-like-robots", "commitsCount": 1}, {"username": "jbmusso", "commitsCount": 1}, {"username": "kapooostin", "commitsCount": 1}, {"username": "king6cong", "commitsCount": 1}, {"username": "manishsaraan", "commitsCount": 1}, {"username": "ouijan", "commitsCount": 1}, {"username": "plynchnlm", "commitsCount": 1}, {"username": "radium-v", "commitsCount": 1}, {"username": "robinhouston", "commitsCount": 1}, {"username": "rwjblue", "commitsCount": 1}, {"username": "sharang-d", "commitsCount": 1}, {"username": "skeggse", "commitsCount": 1}, {"username": "sohibegit", "commitsCount": 1}, {"username": "thecodemonkey", "commitsCount": 1}, {"username": "timdeschryver", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "victorwpbastos", "commitsCount": 1}], "commits": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 0}, {"from": "2020-04-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 2}, {"from": "2020-02-16T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 31}, {"from": "2019-11-18T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 76}, {"from": "2019-05-17T00:00:00.000Z", "to": "2020-05-16T00:00:00.000Z", "count": 167}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 9040, "testsSize": 428257, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/wycats/handlebars.js/master.svg", "service": "https://api.travis-ci.org/wycats/handlebars.js.svg?branch=master", "shields": "https://img.shields.io/travis/wycats/handlebars.js/master.svg", "content": "https://img.shields.io/travis/wycats/handlebars.js/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/github/wycats/handlebars.js?branch=master&svg=true", "service": "https://ci.appveyor.com/api/projects/status/github/wycats/handlebars.js", "shields": "https://img.shields.io/appveyor/ci/github/wycats/handlebars.js.svg", "content": "https://img.shields.io/appveyor/ci/github/wycats/handlebars.js.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["eslint", "prettier"], "outdatedDependencies": {"source-map": {"required": "^0.6.1", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.75, "branding": 0.7}, "popularity": {"communityInterest": 18036, "downloadsCount": 35087510.333333336, "downloadsAcceleration": 10614.750418569252, "dependentsCount": 6950}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9829041095890412, "openIssues": 1, "issuesDistribution": 0.0512801782195097}}, "score": {"final": 0.822538152896264, "detail": {"quality": 0.970534728904655, "popularity": 0.7996795320091059, "maintenance": 0.7185425657762302}}}}, {"babelify": {"analyzedAt": "2020-06-16T21:41:35.421Z", "collected": {"metadata": {"name": "babelify", "scope": "unscoped", "version": "10.0.0", "description": "Babel browserify transform", "date": "2018-09-07T00:22:00.634Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com", "username": "sebmck"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "sebmck", "email": "sebmck@gmail.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babelify.git"}, "links": {"npm": "https://www.npmjs.com/package/babelify", "homepage": "https://github.com/babel/babelify", "repository": "https://github.com/babel/babelify", "bugs": "https://github.com/babel/babelify/issues"}, "license": "MIT", "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-transform-property-literals": "^7.0.0", "@babel/plugin-transform-react-display-name": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/preset-flow": "^7.0.0", "@babel/preset-react": "^7.0.0", "babel-plugin-transform-node-env-inline": "^0.4.3", "browserify": "^16.2.2", "convert-source-map": "^1.5.1", "lodash.zipobject": "^4.1.3", "tap": "^12.0.1"}, "peerDependencies": {"@babel/core": "^7.0.0"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 4}], "hasTestScript": true, "readme": "# babelify [![Build Status](https://travis-ci.org/babel/babelify.svg?branch=master)](https://travis-ci.org/babel/babelify)\n\n[Babel](https://github.com/babel/babel) [browserify](https://github.com/substack/node-browserify) transform.\n\nAs of [Babel 6.0.0](http://babeljs.io/blog/2015/10/29/6.0.0/) there are **no plugins included by default**. For babelify to be useful, you must also include some [presets](http://babeljs.io/docs/plugins/#presets) and/or [plugins](http://babeljs.io/docs/plugins/#transform).\n\n## Installation\n\n```sh\n# Babel 7\n$ npm install --save-dev babelify @babel/core\n\n# Babel 6\n$ npm install --save-dev babelify@8 babel-core\n```\n\n## Usage\n\n### CLI\n\n```sh\n$ browserify script.js -o bundle.js -t [ babelify --presets [ @babel/preset-env @babel/preset-react ] --plugins [ @babel/plugin-transform-class-properties ] ]\n```\n\n### Node\n\n```javascript\nvar fs = require(\"fs\");\nvar browserify = require(\"browserify\");\nbrowserify(\"./script.js\")\n  .transform(\"babelify\", {presets: [\"@babel/preset-env\", \"@babel/preset-react\"]})\n  .bundle()\n  .pipe(fs.createWriteStream(\"bundle.js\"));\n```\n\n**NOTE:** [Presets and plugins](http://babeljs.io/docs/plugins/) need to be installed as separate modules. For the above examples to work, you'd need to also install [`@babel/preset-env`](https://www.npmjs.com/package/@babel/preset-env) and [`@babel/preset-react`](https://www.npmjs.com/package/@babel/preset-react):\n\n```sh\n$ npm install --save-dev @babel/preset-env @babel/preset-react\n```\n\n### Options\n\nSelected options are discussed below. See the [babel](http://babeljs.io/) docs for the complete list of [options](http://babeljs.io/docs/usage/options/).\n\nOptions may be passed in via standard [browserify](https://github.com/substack/node-browserify#btransformtr-opts) ways:\n\n```sh\n$ browserify -t [ babelify --presets [ @babel/preset-env @babel/preset-react ] ]\n```\n\n```js\nbrowserify().transform(\"babelify\", {presets: [\"@babel/preset-env\", \"@babel/preset-react\"]});\n```\n\n```js\nvar babelify = require(\"babelify\");\nbrowserify().transform(babelify, {presets: [\"@babel/preset-env\", \"@babel/preset-react\"]});\n```\n\nOr, with the `configure` method:\n\n```js\nbrowserify().transform(babelify.configure({\n  presets: [\"@babel/preset-env\", \"@babel/preset-react\"]\n}));\n```\n\n#### Customizing extensions\n\nBy default, all files with the extensions `.js`, `.es`, `.es6` and `.jsx` are compiled. You can change this by passing an array of extensions.\n\n**NOTE:** This will override the default ones so if you want to use any of them\nyou have to add them back.\n\n```js\nbrowserify().transform(\"babelify\", {extensions: [\".babel\"]});\n```\n\n```sh\n$ browserify -t [ babelify --extensions .babel ]\n```\n\nNow you can use:\n\n```js\nimport NavBar from \"nav-bar.babel\";\nvar Panels = require(\"panels.babel\");\n```\n\n**NOTE:** By default, Browserify will only lookup `.js` and `.json` files when the extension is ommited (like node's `require`). To lookup additional extensions, use browserify's [`extensions` option](https://github.com/substack/node-browserify#browserifyfiles--opts).\n\n```js\nbrowserify({\n  extensions: [\".babel\"]\n}).transform(\"babelify\", {\n  extensions: [\".babel\"]\n});\n```\n\n```sh\n$ browserify --extensions=.babel -t [ babelify --extensions .babel ]\n```\n\nNow you can omit the extension and compile `.babel` files:\n\n```js\nimport NavBar from \"nav-bar\";\nvar Panels = require(\"panels\");\n```\n\n#### Source maps\n\nBy default, browserify sets the source map sources paths relative to the basedir (or to `process.cwd()` if not set). To make the sources paths absolute, set the `sourceMapsAbsolute` option on babelify:\n\n```js\nbrowserify().transform(\"babelify\", {\n  sourceMapsAbsolute: true\n});\n```\n\n```sh\n$ browserify -t [ babelify --sourceMapsAbsolute ]\n```\n\n#### Additional options\n\n```javascript\nbrowserify().transform(babelify.configure({\n  // Optional ignore regex - if any filenames **do** match this regex then\n  // they aren't compiled\n  ignore: /regex/,\n\n  // Optional only regex - if any filenames **don't** match this regex\n  // then they aren't compiled\n  only: /my_es6_folder/\n}))\n```\n\n```sh\n$ browserify -t [ babelify --ignore regex --only my_es6_folder ]\n```\n\n#### Babel result (metadata and others)\n\nBabelify emits a `babelify` event with Babel's full result object as the first\nargument, and the filename as the second. Browserify doesn't pass-through the\nevents emitted by a transform, so it's necessary to get a reference to the\ntransform instance before you can attach a listener for the event:\n\n```js\nvar b = browserify().transform(babelify);\n\nb.on(\"transform\", function(tr) {\n  if (tr instanceof babelify) {\n    tr.once(\"babelify\", function(result, filename) {\n      result; // => { code, map, ast, metadata }\n    });\n  }\n});\n```\n\n## FAQ\n\n### Why aren't files in `node_modules` being transformed?\n\nThis is the default browserify behavior.\n\nA possible solution is to add:\n\n```json\n{\n  \"browserify\": {\n    \"transform\": [\"babelify\"]\n  }\n}\n```\n\nto the root of all your modules `package.json` that you want to be transformed. If you'd like to\nspecify options then you can use:\n\n```json\n{\n  \"browserify\": {\n    \"transform\": [[\"babelify\", { \"presets\": [\"@babel/preset-env\"] }]]\n  }\n}\n```\n\nAnother solution (proceed with caution!) is to run babelify as a [global](https://github.com/substack/node-browserify#btransformtr-opts) transform. Use the babel [`ignore` option](http://babeljs.io/docs/usage/options/) to narrow the number of files transformed:\n\n```js\nbrowserify().transform(\"babelify\", {\n  global: true,\n  ignore: /\\/node_modules\\/(?!app\\/)/\n});\n```\n\nThe above example will result in a transform that also includes the `app` module in `node_modules`: the `global` flag transform all files, and the `ignore` regular expression then excludes all those in the `node_modules` directory *except* those that are in `node_modules/app` (since `?!` will match if the given suffix is absent).\n\n### Why am I not getting source maps?\n\nTo use source maps, enable them in browserify with the [`debug`](https://github.com/substack/node-browserify#browserifyfiles--opts) option:\n\n```js\nbrowserify({debug: true}).transform(\"babelify\");\n```\n\n```sh\n$ browserify -d -t [ babelify ]\n```\n\nIf you want the source maps to be of the post-transpiled code, then leave `debug` on, but turn off babelify's `sourceMaps`:\n\n```js\nbrowserify({debug: true}).transform(\"babelify\", {sourceMaps: false});\n```\n\n```sh\n$ browserify -d -t [ babelify --no-sourceMaps ]\n```"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 80652}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 425022}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1748589}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 5152888}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 9112950}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 17580506}], "dependentsCount": 1084, "starsCount": 77}, "github": {"starsCount": 1653, "forksCount": 117, "subscribersCount": 35, "issues": {"count": 292, "openCount": 7, "distribution": {"3600": 72, "10800": 25, "32400": 42, "97200": 26, "291600": 15, "874800": 18, "2624400": 10, "7873200": 10, "23619600": 33, "70858800": 38, "212576400": 3}, "isDisabled": false}, "contributors": [{"username": "zertosh", "commitsCount": 49}, {"username": "sebmck", "commitsCount": 48}, {"username": "loganfsmyth", "commitsCount": 16}, {"username": "danez", "commitsCount": 3}, {"username": "hawkrives", "commitsCount": 3}, {"username": "jmm", "commitsCount": 3}, {"username": "atombender", "commitsCount": 2}, {"username": "goto-bus-stop", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "jamesgpearce", "commitsCount": 2}, {"username": "timoxley", "commitsCount": 2}, {"username": "Apoxx", "commitsCount": 1}, {"username": "Pleochism", "commitsCount": 1}, {"username": "Tanoemon", "commitsCount": 1}, {"username": "apaleslimghost", "commitsCount": 1}, {"username": "bendrucker", "commitsCount": 1}, {"username": "bioball", "commitsCount": 1}, {"username": "chrisabrams", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jmorrell", "commitsCount": 1}, {"username": "karlhorky", "commitsCount": 1}, {"username": "larsgw", "commitsCount": 1}, {"username": "lukehorvat", "commitsCount": 1}, {"username": "pheuter", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "ylemkimon", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6421, "testsSize": 13316, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/babel/babelify.svg?branch=master", "service": "https://api.travis-ci.org/babel/babelify.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babelify/master.svg", "content": "https://img.shields.io/travis/babel/babelify/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}]}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0.85, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1908, "downloadsCount": 1717629.3333333333, "downloadsAcceleration": 3145.5650684931497, "dependentsCount": 1084}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8026058778374814, "detail": {"quality": 0.9381068038445532, "popularity": 0.4891766389966362, "maintenance": 0.9998914658151222}}}}, {"json-loader": {"analyzedAt": "2020-05-10T06:19:04.998Z", "collected": {"metadata": {"name": "json-loader", "scope": "unscoped", "version": "0.5.7", "description": "json loader module for webpack", "date": "2017-07-22T20:01:38.407Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/json-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/json-loader", "homepage": "https://github.com/webpack/json-loader#readme", "repository": "https://github.com/webpack/json-loader", "bugs": "https://github.com/webpack/json-loader/issues"}, "license": "MIT", "devDependencies": {"standard-version": "^4.2.0"}, "releases": [{"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1}, {"from": "2018-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1}], "readme": "[![npm][npm]][npm-url]\r\n[![node][node]][node-url]\r\n[![deps][deps]][deps-url]\r\n[![tests][tests]][tests-url]\r\n[![coverage][cover]][cover-url]\r\n[![chat][chat]][chat-url]\r\n\r\n<div align=\"center\">\r\n  <img width=\"160\" height=\"180\"\r\n    src=\"https://worldvectorlogo.com/logos/json.svg\">\r\n  <a href=\"https://github.com/webpack/webpack\">\r\n    <img width=\"200\" height=\"200\"\r\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\r\n  </a>\r\n  <h1>JSON Loader</h1>\r\n</div>\r\n\r\n<h2 align=\"center\">Install</h2>\r\n\r\n```bash\r\nnpm install --save-dev json-loader\r\n```\r\n\r\n> \u26a0\ufe0f **Since `webpack >= v2.0.0`, importing of JSON files will work by default. You might still want to use this if you use a custom file extension. See the [v1.0.0 -> v2.0.0 Migration Guide](https://webpack.js.org/guides/migrating/#json-loader-is-not-required-anymore) for more information**\r\n\r\n<h2 align=\"center\">Usage</h2>\r\n\r\n### `Inline`\r\n\r\n```js\r\nconst json = require('json-loader!./file.json');\r\n```\r\n\r\n### `Configuration` (recommended)\r\n\r\n```js\r\nconst json = require('./file.json');\r\n```\r\n\r\n**webpack.config.js**\r\n```js\r\nmodule.exports = {\r\n  module: {\r\n    loaders: [\r\n      {\r\n        test: /\\.json$/,\r\n        loader: 'json-loader'\r\n      }\r\n    ]\r\n  }\r\n}\r\n```\r\n\r\n<h2 align=\"center\">Maintainer</h2>\r\n\r\n<table>\r\n  <tbody>\r\n    <tr>\r\n      <td align=\"center\">\r\n        <img width=\"150\" height=\"150\" src=\"https://avatars.githubusercontent.com/sokra?v=3\">\r\n        </br>\r\n        <a href=\"https://github.com/sokra\">Tobias Koppers</a>\r\n      </td>\r\n    </tr>\r\n  </tbody>\r\n</table>\r\n\r\n\r\n[npm]: https://img.shields.io/npm/v/json-loader.svg\r\n[npm-url]: https://npmjs.com/package/json-loader\r\n\r\n[node]: https://img.shields.io/node/v/json-loader.svg\r\n[node-url]: https://nodejs.org\r\n\r\n[deps]: https://david-dm.org/webpack/json-loader.svg\r\n[deps-url]: https://david-dm.org/webpack/json-loader\r\n\r\n[tests]: http://img.shields.io/travis/webpack/json-loader.svg\r\n[tests-url]: https://travis-ci.org/webpack/json-loader\r\n\r\n[cover]: https://coveralls.io/repos/github/webpack/json-loader/badge.svg\r\n[cover-url]: https://coveralls.io/github/webpack/json-loader\r\n\r\n[chat]: https://badges.gitter.im/webpack/webpack.svg\r\n[chat-url]: https://gitter.im/webpack/webpack"}, "npm": {"downloads": [{"from": "2020-05-09T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 88157}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 1757656}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 7422938}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 23482690}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 42133889}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 88086069}], "dependentsCount": 1570, "starsCount": 25}, "github": {"starsCount": 427, "forksCount": 79, "subscribersCount": 13, "issues": {"count": 66, "openCount": 7, "distribution": {"3600": 6, "10800": 5, "32400": 3, "97200": 4, "291600": 2, "874800": 4, "2624400": 4, "7873200": 7, "23619600": 15, "70858800": 10, "212576400": 6}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 13}, {"username": "d3viant0ne", "commitsCount": 5}, {"username": "SpaceK33z", "commitsCount": 4}, {"username": "michael-ciniawsky", "commitsCount": 3}, {"username": "HairyRabbit", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "ajhyndman", "commitsCount": 1}, {"username": "boxxxie", "commitsCount": 1}, {"username": "dandv", "commitsCount": 1}, {"username": "gunta", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lmatiolis", "commitsCount": 1}, {"username": "mkarajohn", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}], "commits": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-04-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2020-02-10T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-11-12T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}, {"from": "2019-05-11T00:00:00.000Z", "to": "2020-05-10T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "failure"}]}, "source": {"files": {"readmeSize": 2216, "testsSize": 0, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/json-loader.svg", "shields": "https://img.shields.io/npm/v/json-loader.svg", "content": "https://img.shields.io/npm/v/json-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack/json-loader.svg", "service": "https://david-dm.org/webpack/json-loader.svg", "shields": "https://img.shields.io/david/webpack/json-loader.svg", "content": "https://img.shields.io/david/webpack/json-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/travis/webpack/json-loader.svg", "service": "https://api.travis-ci.org/webpack/json-loader.svg", "shields": "https://img.shields.io/travis/webpack/json-loader.svg", "content": "https://img.shields.io/travis/webpack/json-loader.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://coveralls.io/repos/github/webpack/json-loader/badge.svg", "service": "https://coveralls.io/repos/github/webpack/json-loader/badge.svg", "shields": "https://img.shields.io/coveralls/webpack/json-loader.svg", "content": "https://img.shields.io/coveralls/webpack/json-loader.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}]}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 558, "downloadsCount": 7827563.333333333, "downloadsAcceleration": -288.7410007610306, "dependentsCount": 1570}, "maintenance": {"releasesFrequency": 0.06164383561643837, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.40207526106552816, "detail": {"quality": 0.5293638658035593, "popularity": 0.46595942187824707, "maintenance": 0.22908658190592543}}}}, {"@commitlint/cli": {"analyzedAt": "2020-06-02T20:31:56.590Z", "collected": {"metadata": {"name": "@commitlint/cli", "scope": "commitlint", "version": "8.3.5", "description": "Lint your commit messages", "keywords": ["conventional-changelog", "commitlint", "cli"], "date": "2020-01-15T15:33:36.452Z", "author": {"name": "Mario Nebl", "email": "hello@herebecode.com"}, "publisher": {"username": "bycedric", "email": "me@bycedric.com"}, "maintainers": [{"username": "bycedric", "email": "me@bycedric.com"}, {"username": "escapedcat", "email": "npm@htmlcss.de"}, {"username": "marionebl", "email": "hello@mario-nebl.de"}, {"username": "martinhelmut", "email": "info@martin-fieber.de"}], "repository": {"type": "git", "url": "git+https://github.com/conventional-changelog/commitlint.git"}, "links": {"npm": "https://www.npmjs.com/package/%40commitlint%2Fcli", "homepage": "https://github.com/conventional-changelog/commitlint#readme", "repository": "https://github.com/conventional-changelog/commitlint", "bugs": "https://github.com/conventional-changelog/commitlint/issues"}, "license": "MIT", "dependencies": {"@commitlint/format": "^8.3.4", "@commitlint/lint": "^8.3.5", "@commitlint/load": "^8.3.5", "@commitlint/read": "^8.3.4", "babel-polyfill": "6.26.0", "chalk": "2.4.2", "get-stdin": "7.0.0", "lodash": "4.17.15", "meow": "5.0.0", "resolve-from": "5.0.0", "resolve-global": "1.0.0"}, "devDependencies": {"@commitlint/test": "8.2.0", "@commitlint/utils": "^8.3.4", "ava": "0.18.2", "babel-cli": "6.26.0", "babel-preset-commitlint": "^8.2.0", "babel-register": "6.26.0", "concurrently": "3.6.1", "cross-env": "6.0.3", "execa": "0.11.0", "mkdirp": "0.5.1", "pkg-dir": "4.2.0", "resolve-bin": "0.4.0", "sander": "0.6.0", "string-to-stream": "3.0.1", "tmp": "0.1.0"}, "releases": [{"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 3}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 3}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 11}, {"from": "2018-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 25}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 76119}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 496506}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 2065078}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5913175}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 10191984}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 16672842}], "dependentsCount": 207, "starsCount": 3}, "github": {"homepage": "https://conventional-changelog.github.io/commitlint/", "starsCount": 5712, "forksCount": 340, "subscribersCount": 46, "issues": {"count": 1808, "openCount": 123, "distribution": {"3600": 489, "10800": 495, "32400": 77, "97200": 80, "291600": 101, "874800": 145, "2624400": 120, "7873200": 157, "23619600": 77, "70858800": 50, "212576400": 17}, "isDisabled": false}, "contributors": [{"username": "marionebl", "commitsCount": 580}, {"username": "renovate-bot", "commitsCount": 75}, {"username": "byCedric", "commitsCount": 67}, {"username": "renovate[bot]", "commitsCount": 55}, {"username": "armano2", "commitsCount": 45}, {"username": "escapedcat", "commitsCount": 19}, {"username": "ybiquitous", "commitsCount": 6}, {"username": "Scrum", "commitsCount": 4}, {"username": "SimeonC", "commitsCount": 3}, {"username": "honzajavorek", "commitsCount": 3}, {"username": "jlegrone", "commitsCount": 3}, {"username": "ChristianMurphy", "commitsCount": 2}, {"username": "Fetz", "commitsCount": 2}, {"username": "adam-moss", "commitsCount": 2}, {"username": "bendtherules", "commitsCount": 2}, {"username": "blackxored", "commitsCount": 2}, {"username": "ellerbrock", "commitsCount": 2}, {"username": "ericcornelissen", "commitsCount": 2}, {"username": "hassankhan", "commitsCount": 2}, {"username": "huanghai21", "commitsCount": 2}, {"username": "imrekb", "commitsCount": 2}, {"username": "ingmarh", "commitsCount": 2}, {"username": "meatwallace", "commitsCount": 2}, {"username": "mike-north", "commitsCount": 2}, {"username": "puncha", "commitsCount": 2}, {"username": "satazor", "commitsCount": 2}, {"username": "tomasen", "commitsCount": 2}, {"username": "whizark", "commitsCount": 2}, {"username": "10xLaCroixDrinker", "commitsCount": 1}, {"username": "Alonski", "commitsCount": 1}, {"username": "AnWeber", "commitsCount": 1}, {"username": "DJMcNab", "commitsCount": 1}, {"username": "Gherciu", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "JoonsungUm", "commitsCount": 1}, {"username": "OmgImAlexis", "commitsCount": 1}, {"username": "QuentinRoy", "commitsCount": 1}, {"username": "ResDiaryLewis", "commitsCount": 1}, {"username": "Rugal", "commitsCount": 1}, {"username": "ahmadawais", "commitsCount": 1}, {"username": "alanshaw", "commitsCount": 1}, {"username": "apetro", "commitsCount": 1}, {"username": "backflip", "commitsCount": 1}, {"username": "bleathem", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "coderbyheart", "commitsCount": 1}, {"username": "colebemis", "commitsCount": 1}, {"username": "ctomp", "commitsCount": 1}, {"username": "ctrom", "commitsCount": 1}, {"username": "dabit1", "commitsCount": 1}, {"username": "dnamorim", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "fritz-c", "commitsCount": 1}, {"username": "gabemeola", "commitsCount": 1}, {"username": "gavinsharp", "commitsCount": 1}, {"username": "guidobouman", "commitsCount": 1}, {"username": "helderburato", "commitsCount": 1}, {"username": "hulkish", "commitsCount": 1}, {"username": "hustcc", "commitsCount": 1}, {"username": "jcarroll2007", "commitsCount": 1}, {"username": "jfinity", "commitsCount": 1}, {"username": "kaveet", "commitsCount": 1}, {"username": "kotzendekrabbe", "commitsCount": 1}, {"username": "krotscheck", "commitsCount": 1}, {"username": "kumarharsh", "commitsCount": 1}, {"username": "lc-soft", "commitsCount": 1}, {"username": "leohxj", "commitsCount": 1}, {"username": "lgraziani2712", "commitsCount": 1}, {"username": "liubiantao", "commitsCount": 1}, {"username": "lwouis", "commitsCount": 1}, {"username": "macklinu", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "mightyiam", "commitsCount": 1}, {"username": "okonet", "commitsCount": 1}, {"username": "onrige", "commitsCount": 1}, {"username": "pixelass", "commitsCount": 1}, {"username": "rajzik", "commitsCount": 1}, {"username": "redian", "commitsCount": 1}, {"username": "ryanep", "commitsCount": 1}, {"username": "sharvit", "commitsCount": 1}, {"username": "teryaew", "commitsCount": 1}, {"username": "vojtechruz", "commitsCount": 1}, {"username": "wagoid", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "yehudagoldner", "commitsCount": 1}, {"username": "zbanalagay", "commitsCount": 1}], "commits": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 0}, {"from": "2020-05-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2020-03-04T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 5}, {"from": "2019-12-05T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 112}, {"from": "2019-06-03T00:00:00.000Z", "to": "2020-06-02T00:00:00.000Z", "count": 210}], "statuses": [{"context": "ci/circleci: v10", "state": "success"}, {"context": "ci/circleci: v8", "state": "success"}, {"context": "ci/circleci: v12", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 13453, "hasChangelog": true}, "linters": ["editorconfig", "prettier"], "outdatedDependencies": {"meow": {"required": "5.0.0", "stable": "7.0.1", "latest": "7.0.1"}, "chalk": {"required": "2.4.2", "stable": "4.0.0", "latest": "4.0.0"}, "get-stdin": {"required": "7.0.0", "stable": "8.0.0", "latest": "8.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.85, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 6187, "downloadsCount": 1971058.3333333333, "downloadsAcceleration": 8525.00707762557, "dependentsCount": 207}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.7419534417290397}}, "score": {"final": 0.7547857415517198, "detail": {"quality": 0.7652864236626893, "popularity": 0.5016647852391011, "maintenance": 0.9989061131977937}}}}, {"source-map-support": {"analyzedAt": "2020-06-07T08:00:51.512Z", "collected": {"metadata": {"name": "source-map-support", "scope": "unscoped", "version": "0.5.19", "description": "Fixes stack traces for files with source maps", "date": "2020-04-24T08:33:40.284Z", "publisher": {"username": "linusu", "email": "linus@folkdatorn.se"}, "maintainers": [{"username": "evanw", "email": "evan.exe@gmail.com"}, {"username": "julien-f", "email": "julien.fontanet@isonoe.net"}, {"username": "linusu", "email": "linus@folkdatorn.se"}], "repository": {"type": "git", "url": "git+https://github.com/evanw/node-source-map-support.git"}, "links": {"npm": "https://www.npmjs.com/package/source-map-support", "homepage": "https://github.com/evanw/node-source-map-support#readme", "repository": "https://github.com/evanw/node-source-map-support", "bugs": "https://github.com/evanw/node-source-map-support/issues"}, "license": "MIT", "dependencies": {"buffer-from": "^1.0.0", "source-map": "^0.6.0"}, "devDependencies": {"browserify": "^4.2.3", "coffeescript": "^1.12.7", "http-server": "^0.11.1", "mocha": "^3.5.3", "webpack": "^1.15.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 14}], "hasTestScript": true, "readme": "# Source Map Support\n[![Build Status](https://travis-ci.org/evanw/node-source-map-support.svg?branch=master)](https://travis-ci.org/evanw/node-source-map-support)\n\nThis module provides source map support for stack traces in node via the [V8 stack trace API](https://github.com/v8/v8/wiki/Stack-Trace-API). It uses the [source-map](https://github.com/mozilla/source-map) module to replace the paths and line numbers of source-mapped files with their original paths and line numbers. The output mimics node's stack trace format with the goal of making every compile-to-JS language more of a first-class citizen. Source maps are completely general (not specific to any one language) so you can use source maps with multiple compile-to-JS languages in the same node process.\n\n## Installation and Usage\n\n#### Node support\n\n```\n$ npm install source-map-support\n```\n\nSource maps can be generated using libraries such as [source-map-index-generator](https://github.com/twolfson/source-map-index-generator). Once you have a valid source map, place a source mapping comment somewhere in the file (usually done automatically or with an option by your transpiler):\n\n```\n//# sourceMappingURL=path/to/source.map\n```\n\nIf multiple sourceMappingURL comments exist in one file, the last sourceMappingURL comment will be\nrespected (e.g. if a file mentions the comment in code, or went through multiple transpilers).\nThe path should either be absolute or relative to the compiled file.\n\nFrom here you have two options.\n\n##### CLI Usage\n\n```bash\nnode -r source-map-support/register compiled.js\n```\n\n##### Programmatic Usage\n\nPut the following line at the top of the compiled file.\n\n```js\nrequire('source-map-support').install();\n```\n\nIt is also possible to install the source map support directly by\nrequiring the `register` module which can be handy with ES6:\n\n```js\nimport 'source-map-support/register'\n\n// Instead of:\nimport sourceMapSupport from 'source-map-support'\nsourceMapSupport.install()\n```\nNote: if you're using babel-register, it includes source-map-support already.\n\nIt is also very useful with Mocha:\n\n```\n$ mocha --require source-map-support/register tests/\n```\n\n#### Browser support\n\nThis library also works in Chrome. While the DevTools console already supports source maps, the V8 engine doesn't and `Error.prototype.stack` will be incorrect without this library. Everything will just work if you deploy your source files using [browserify](http://browserify.org/). Just make sure to pass the `--debug` flag to the browserify command so your source maps are included in the bundled code.\n\nThis library also works if you use another build process or just include the source files directly. In this case, include the file `browser-source-map-support.js` in your page and call `sourceMapSupport.install()`. It contains the whole library already bundled for the browser using browserify.\n\n```html\n<script src=\"browser-source-map-support.js\"></script>\n<script>sourceMapSupport.install();</script>\n```\n\nThis library also works if you use AMD (Asynchronous Module Definition), which is used in tools like [RequireJS](http://requirejs.org/). Just list `browser-source-map-support` as a dependency:\n\n```html\n<script>\n  define(['browser-source-map-support'], function(sourceMapSupport) {\n    sourceMapSupport.install();\n  });\n</script>\n```\n\n## Options\n\nThis module installs two things: a change to the `stack` property on `Error` objects and a handler for uncaught exceptions that mimics node's default exception handler (the handler can be seen in the demos below). You may want to disable the handler if you have your own uncaught exception handler. This can be done by passing an argument to the installer:\n\n```js\nrequire('source-map-support').install({\n  handleUncaughtExceptions: false\n});\n```\n\nThis module loads source maps from the filesystem by default. You can provide alternate loading behavior through a callback as shown below. For example, [Meteor](https://github.com/meteor) keeps all source maps cached in memory to avoid disk access.\n\n```js\nrequire('source-map-support').install({\n  retrieveSourceMap: function(source) {\n    if (source === 'compiled.js') {\n      return {\n        url: 'original.js',\n        map: fs.readFileSync('compiled.js.map', 'utf8')\n      };\n    }\n    return null;\n  }\n});\n```\n\nThe module will by default assume a browser environment if XMLHttpRequest and window are defined. If either of these do not exist it will instead assume a node environment.\nIn some rare cases, e.g. when running a browser emulation and where both variables are also set, you can explictly specify the environment to be either 'browser' or 'node'.\n\n```js\nrequire('source-map-support').install({\n  environment: 'node'\n});\n```\n\nTo support files with inline source maps, the `hookRequire` options can be specified, which will monitor all source files for inline source maps.\n\n\n```js\nrequire('source-map-support').install({\n  hookRequire: true\n});\n```\n\nThis monkey patches the `require` module loading chain, so is not enabled by default and is not recommended for any sort of production usage.\n\n## Demos\n\n#### Basic Demo\n\noriginal.js:\n\n```js\nthrow new Error('test'); // This is the original code\n```\n\ncompiled.js:\n\n```js\nrequire('source-map-support').install();\n\nthrow new Error('test'); // This is the compiled code\n// The next line defines the sourceMapping.\n//# sourceMappingURL=compiled.js.map\n```\n\ncompiled.js.map:\n\n```json\n{\n  \"version\": 3,\n  \"file\": \"compiled.js\",\n  \"sources\": [\"original.js\"],\n  \"names\": [],\n  \"mappings\": \";;AAAA,MAAM,IAAI\"\n}\n```\n\nRun compiled.js using node (notice how the stack trace uses original.js instead of compiled.js):\n\n```\n$ node compiled.js\n\noriginal.js:1\nthrow new Error('test'); // This is the original code\n      ^\nError: test\n    at Object.<anonymous> (original.js:1:7)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\n#### TypeScript Demo\n\ndemo.ts:\n\n```typescript\ndeclare function require(name: string);\nrequire('source-map-support').install();\nclass Foo {\n  constructor() { this.bar(); }\n  bar() { throw new Error('this is a demo'); }\n}\nnew Foo();\n```\n\nCompile and run the file using the TypeScript compiler from the terminal:\n\n```\n$ npm install source-map-support typescript\n$ node_modules/typescript/bin/tsc -sourcemap demo.ts\n$ node demo.js\n\ndemo.ts:5\n  bar() { throw new Error('this is a demo'); }\n                ^\nError: this is a demo\n    at Foo.bar (demo.ts:5:17)\n    at new Foo (demo.ts:4:24)\n    at Object.<anonymous> (demo.ts:7:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\nThere is also the option to use `-r source-map-support/register` with typescript, without the need add the `require('source-map-support').install()` in the code base:\n\n```\n$ npm install source-map-support typescript\n$ node_modules/typescript/bin/tsc  -sourcemap demo.ts\n$ node -r source-map-support/register demo.js\n\ndemo.ts:5\n  bar() { throw new Error('this is a demo'); }\n                ^\nError: this is a demo\n    at Foo.bar (demo.ts:5:17)\n    at new Foo (demo.ts:4:24)\n    at Object.<anonymous> (demo.ts:7:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n    at node.js:901:3\n```\n\n#### CoffeeScript Demo\n\ndemo.coffee:\n\n```coffee\nrequire('source-map-support').install()\nfoo = ->\n  bar = -> throw new Error 'this is a demo'\n  bar()\nfoo()\n```\n\nCompile and run the file using the CoffeeScript compiler from the terminal:\n\n```sh\n$ npm install source-map-support coffeescript\n$ node_modules/.bin/coffee --map --compile demo.coffee\n$ node demo.js\n\ndemo.coffee:3\n  bar = -> throw new Error 'this is a demo'\n                     ^\nError: this is a demo\n    at bar (demo.coffee:3:22)\n    at foo (demo.coffee:4:3)\n    at Object.<anonymous> (demo.coffee:5:1)\n    at Object.<anonymous> (demo.coffee:1:1)\n    at Module._compile (module.js:456:26)\n    at Object.Module._extensions..js (module.js:474:10)\n    at Module.load (module.js:356:32)\n    at Function.Module._load (module.js:312:12)\n    at Function.Module.runMain (module.js:497:10)\n    at startup (node.js:119:16)\n```\n\n## Tests\n\nThis repo contains both automated tests for node and manual tests for the browser. The automated tests can be run using mocha (type `mocha` in the root directory). To run the manual tests:\n\n* Build the tests using `build.js`\n* Launch the HTTP server (`npm run serve-tests`) and visit\n  * http://127.0.0.1:1336/amd-test\n  * http://127.0.0.1:1336/browser-test\n  * http://127.0.0.1:1336/browserify-test - **Currently not working** due to a bug with browserify (see [pull request #66](https://github.com/evanw/node-source-map-support/pull/66) for details).\n* For `header-test`, run `server.js` inside that directory and visit http://127.0.0.1:1337/\n\n## License\n\nThis code is available under the [MIT license](http://opensource.org/licenses/MIT)."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1060127}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 20063869}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 83904140}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 250420196}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 446597950}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 819630837}], "dependentsCount": 2815, "starsCount": 30}, "github": {"starsCount": 1649, "forksCount": 209, "subscribersCount": 19, "issues": {"count": 277, "openCount": 89, "distribution": {"3600": 21, "10800": 8, "32400": 14, "97200": 28, "291600": 25, "874800": 16, "2624400": 23, "7873200": 17, "23619600": 34, "70858800": 26, "212576400": 65}, "isDisabled": false}, "contributors": [{"username": "LinusU", "commitsCount": 82}, {"username": "evanw", "commitsCount": 49}, {"username": "julien-f", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 11}, {"username": "tomhughes", "commitsCount": 4}, {"username": "fresheneesz", "commitsCount": 3}, {"username": "isaacs", "commitsCount": 3}, {"username": "kriszyp", "commitsCount": 3}, {"username": "ScottWeinstein", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "ardeois", "commitsCount": 2}, {"username": "glasser", "commitsCount": 2}, {"username": "joeyespo", "commitsCount": 2}, {"username": "legraphista", "commitsCount": 2}, {"username": "mprobst", "commitsCount": 2}, {"username": "seanpoulter", "commitsCount": 2}, {"username": "timoxley", "commitsCount": 2}, {"username": "6utt3rfly", "commitsCount": 1}, {"username": "Alorel", "commitsCount": 1}, {"username": "ArtemGovorov", "commitsCount": 1}, {"username": "Hilzu", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "LoicPoullain", "commitsCount": 1}, {"username": "Merott", "commitsCount": 1}, {"username": "Yogu", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "apechimp", "commitsCount": 1}, {"username": "ashaffer", "commitsCount": 1}, {"username": "benjamn", "commitsCount": 1}, {"username": "bpmccurdy", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "dbushong", "commitsCount": 1}, {"username": "dirkluijk", "commitsCount": 1}, {"username": "floridoo", "commitsCount": 1}, {"username": "gfx", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "gurdiga", "commitsCount": 1}, {"username": "jdude", "commitsCount": 1}, {"username": "jhen0409", "commitsCount": 1}, {"username": "jlfwong", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "josecolella", "commitsCount": 1}, {"username": "joshma", "commitsCount": 1}, {"username": "jpillora", "commitsCount": 1}, {"username": "ldesplat", "commitsCount": 1}, {"username": "marcominetti", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "mgroenhoff", "commitsCount": 1}, {"username": "michaelficarra", "commitsCount": 1}, {"username": "mohd-akram", "commitsCount": 1}, {"username": "moonpyk", "commitsCount": 1}, {"username": "nickewansmith", "commitsCount": 1}, {"username": "niieani", "commitsCount": 1}, {"username": "pspeter3", "commitsCount": 1}, {"username": "raine", "commitsCount": 1}, {"username": "segphault", "commitsCount": 1}, {"username": "tisba", "commitsCount": 1}, {"username": "tugend", "commitsCount": 1}, {"username": "uiteoi", "commitsCount": 1}, {"username": "zeekay", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 10}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 26}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 9459, "testsSize": 20354, "hasNpmIgnore": true}, "badges": [{"urls": {"original": "https://travis-ci.org/evanw/node-source-map-support.svg?branch=master", "service": "https://api.travis-ci.org/evanw/node-source-map-support.svg?branch=master", "shields": "https://img.shields.io/travis/evanw/node-source-map-support/master.svg", "content": "https://img.shields.io/travis/evanw/node-source-map-support/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "outdatedDependencies": {"source-map": {"required": "^0.6.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.39499999999999996, "tests": 0.85, "health": 0.75, "branding": 0.15}, "popularity": {"communityInterest": 1967, "downloadsCount": 83473398.66666667, "downloadsAcceleration": 196694.12872907135, "dependentsCount": 2815}, "maintenance": {"releasesFrequency": 0.8667808219178083, "commitsFrequency": 0.7088698630136986, "openIssues": 0.7978339350180506, "issuesDistribution": 0}}, "score": {"final": 0.7471631320128065, "detail": {"quality": 0.8358109260564494, "popularity": 0.7525397747327842, "maintenance": 0.6658026658268492}}}}, {"webpack-dev-middleware": {"analyzedAt": "2020-06-14T19:10:27.945Z", "collected": {"metadata": {"name": "webpack-dev-middleware", "scope": "unscoped", "version": "3.7.2", "description": "A development middleware for webpack", "keywords": ["webpack", "middleware", "develompent"], "date": "2019-09-28T15:33:05.181Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "hiroppy", "email": "hello@hiroppy.me"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-dev-middleware.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-dev-middleware", "homepage": "https://github.com/webpack/webpack-dev-middleware", "repository": "https://github.com/webpack/webpack-dev-middleware", "bugs": "https://github.com/webpack/webpack-dev-middleware/issues"}, "license": "MIT", "dependencies": {"memory-fs": "^0.4.1", "mime": "^2.4.4", "mkdirp": "^0.5.1", "range-parser": "^1.2.1", "webpack-log": "^2.0.0"}, "devDependencies": {"@babel/cli": "^7.6.2", "@babel/core": "^7.6.2", "@babel/preset-env": "^7.6.2", "@commitlint/cli": "^8.2.0", "@commitlint/config-conventional": "^8.2.0", "@webpack-contrib/defaults": "^5.0.2", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.9.0", "commitlint-azure-pipelines-cli": "^1.0.2", "cross-env": "^5.2.1", "del": "^4.1.1", "del-cli": "^1.1.0", "eslint": "^6.4.0", "eslint-plugin-import": "^2.18.2", "eslint-plugin-prettier": "^3.1.1", "express": "^4.17.1", "file-loader": "^4.2.0", "husky": "^3.0.7", "jest": "^24.9.0", "jest-junit": "^8.0.0", "lint-staged": "^9.4.0", "prettier": "^1.18.2", "standard-version": "^7.0.0", "supertest": "^4.0.2", "webpack": "^4.41.0"}, "peerDependencies": {"webpack": "^4.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 355472}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8382924}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 34859473}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 108301198}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 196228499}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 367016059}], "dependentsCount": 1693, "starsCount": 51}, "github": {"starsCount": 2062, "forksCount": 319, "subscribersCount": 24, "issues": {"count": 660, "openCount": 10, "distribution": {"3600": 110, "10800": 45, "32400": 56, "97200": 115, "291600": 79, "874800": 63, "2624400": 57, "7873200": 52, "23619600": 62, "70858800": 21, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "SpaceK33z", "commitsCount": 72}, {"username": "sokra", "commitsCount": 54}, {"username": "shellscape", "commitsCount": 44}, {"username": "evilebottnawi", "commitsCount": 38}, {"username": "renovate[bot]", "commitsCount": 22}, {"username": "hiroppy", "commitsCount": 20}, {"username": "michael-ciniawsky", "commitsCount": 13}, {"username": "gpoitch", "commitsCount": 3}, {"username": "wuct", "commitsCount": 3}, {"username": "Runrioter", "commitsCount": 2}, {"username": "alexhancock", "commitsCount": 2}, {"username": "danez", "commitsCount": 2}, {"username": "dmohns", "commitsCount": 2}, {"username": "ferdinando-ferreira", "commitsCount": 2}, {"username": "grawk", "commitsCount": 2}, {"username": "hzoo", "commitsCount": 2}, {"username": "ijse", "commitsCount": 2}, {"username": "iyuq", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "jhnns", "commitsCount": 2}, {"username": "simenbrekken", "commitsCount": 2}, {"username": "311289189", "commitsCount": 1}, {"username": "AviVahl", "commitsCount": 1}, {"username": "GeorgeTaveras1231", "commitsCount": 1}, {"username": "GregWeil", "commitsCount": 1}, {"username": "HaNdTriX", "commitsCount": 1}, {"username": "HyunmoAhn", "commitsCount": 1}, {"username": "IngwiePhoenix", "commitsCount": 1}, {"username": "JoshuaKGoldberg", "commitsCount": 1}, {"username": "Nitive", "commitsCount": 1}, {"username": "Tarrask", "commitsCount": 1}, {"username": "alexprice1", "commitsCount": 1}, {"username": "alindesign", "commitsCount": 1}, {"username": "ampedandwired", "commitsCount": 1}, {"username": "anchengjian", "commitsCount": 1}, {"username": "andfaulkner", "commitsCount": 1}, {"username": "arianrhodsandlot", "commitsCount": 1}, {"username": "bluedaniel", "commitsCount": 1}, {"username": "bondz", "commitsCount": 1}, {"username": "cab", "commitsCount": 1}, {"username": "cainrus", "commitsCount": 1}, {"username": "callumacrae", "commitsCount": 1}, {"username": "cecchi", "commitsCount": 1}, {"username": "chucksellick", "commitsCount": 1}, {"username": "clshortfuse", "commitsCount": 1}, {"username": "d3viant0ne", "commitsCount": 1}, {"username": "donaldpipowitch", "commitsCount": 1}, {"username": "dpehrson", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "egoist", "commitsCount": 1}, {"username": "eugeniaguerrero", "commitsCount": 1}, {"username": "faceyspacey", "commitsCount": 1}, {"username": "fgwx7796", "commitsCount": 1}, {"username": "frozenflower", "commitsCount": 1}, {"username": "gunta", "commitsCount": 1}, {"username": "hex-ci", "commitsCount": 1}, {"username": "hinell", "commitsCount": 1}, {"username": "hnry", "commitsCount": 1}, {"username": "ibash", "commitsCount": 1}, {"username": "itrethan", "commitsCount": 1}, {"username": "janraasch", "commitsCount": 1}, {"username": "jchv", "commitsCount": 1}, {"username": "kaelzhang", "commitsCount": 1}, {"username": "koteus", "commitsCount": 1}, {"username": "lbdremy", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "lordliquid", "commitsCount": 1}, {"username": "mariofriz", "commitsCount": 1}, {"username": "mofelee", "commitsCount": 1}, {"username": "moljac024", "commitsCount": 1}, {"username": "mozmorris", "commitsCount": 1}, {"username": "mwhansen", "commitsCount": 1}, {"username": "mzgoddard", "commitsCount": 1}, {"username": "ooade", "commitsCount": 1}, {"username": "petetnt", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "razh", "commitsCount": 1}, {"username": "rdrey", "commitsCount": 1}, {"username": "rhmoller", "commitsCount": 1}, {"username": "seanmiddleditch", "commitsCount": 1}, {"username": "sidharthachatterjee", "commitsCount": 1}, {"username": "snitin315", "commitsCount": 1}, {"username": "sodatea", "commitsCount": 1}, {"username": "stephenmartindale", "commitsCount": 1}, {"username": "svicalifornia", "commitsCount": 1}, {"username": "threehams", "commitsCount": 1}, {"username": "torioLuz", "commitsCount": 1}, {"username": "ulivz", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "xiaoyann", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 15}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 44}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 75}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 159}]}, "source": {"files": {"readmeSize": 0, "testsSize": 57554, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.99, "outdatedDependencies": {"memory-fs": {"required": "^0.4.1", "stable": "0.5.0", "latest": "0.5.0"}, "webpack-log": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.7484999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 2546, "downloadsCount": 36100399.333333336, "downloadsAcceleration": 60273.465620243514, "dependentsCount": 1693}, "maintenance": {"releasesFrequency": 0.7766267123287671, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.7898143659607438}}, "score": {"final": 0.8189501737630261, "detail": {"quality": 0.7513783193094643, "popularity": 0.6970184829527746, "maintenance": 0.998800596962045}}}}, {"co": {"analyzedAt": "2020-06-16T14:02:27.256Z", "collected": {"metadata": {"name": "co", "scope": "unscoped", "version": "4.6.0", "description": "generator async control flow goodness", "keywords": ["async", "flow", "generator", "coro", "coroutine"], "date": "2015-07-09T22:30:44.562Z", "publisher": {"username": "jongleberry", "email": "jonathanrichardong@gmail.com"}, "maintainers": [{"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "jonathanong", "email": "jonathanrichardong@gmail.com"}, {"username": "jongleberry", "email": "jonathanrichardong@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/tj/co.git"}, "links": {"npm": "https://www.npmjs.com/package/co", "homepage": "https://github.com/tj/co#readme", "repository": "https://github.com/tj/co", "bugs": "https://github.com/tj/co/issues"}, "license": "MIT", "devDependencies": {"browserify": "^10.0.0", "istanbul-harmony": "0", "mocha": "^2.0.0", "mz": "^1.0.2"}, "releases": [{"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2018-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# co\n\n[![Gitter][gitter-image]][gitter-url]\n[![NPM version][npm-image]][npm-url]\n[![Build status][travis-image]][travis-url]\n[![Test coverage][coveralls-image]][coveralls-url]\n[![Downloads][downloads-image]][downloads-url]\n\n  Generator based control flow goodness for nodejs and the browser,\n  using promises, letting you write non-blocking code in a nice-ish way.\n\n## Co v4\n\n  `co@4.0.0` has been released, which now relies on promises.\n  It is a stepping stone towards [ES7 async/await](https://github.com/lukehoban/ecmascript-asyncawait).\n  The primary API change is how `co()` is invoked.\n  Before, `co` returned a \"thunk\", which you then called with a callback and optional arguments.\n  Now, `co()` returns a promise.\n\n```js\nco(function* () {\n  var result = yield Promise.resolve(true);\n  return result;\n}).then(function (value) {\n  console.log(value);\n}, function (err) {\n  console.error(err.stack);\n});\n```\n\n  If you want to convert a `co`-generator-function into a regular function that returns a promise,\n  you now use `co.wrap(fn*)`.\n\n```js\nvar fn = co.wrap(function* (val) {\n  return yield Promise.resolve(val);\n});\n\nfn(true).then(function (val) {\n\n});\n```\n\n## Platform Compatibility\n\n  `co@4+` requires a `Promise` implementation.\n  For versions of node `< 0.11` and for many older browsers,\n  you should/must include your own `Promise` polyfill.\n\n  When using node 0.11.x or greater, you must use the `--harmony-generators`\n  flag or just `--harmony` to get access to generators.\n\n  When using node 0.10.x and lower or browsers without generator support,\n  you must use [gnode](https://github.com/TooTallNate/gnode) and/or [regenerator](http://facebook.github.io/regenerator/).\n\n  io.js is supported out of the box, you can use `co` without flags or polyfills.\n\n## Installation\n\n```\n$ npm install co\n```\n\n## Associated libraries\n\nAny library that returns promises work well with `co`.\n\n- [mz](https://github.com/normalize/mz) - wrap all of node's code libraries as promises.\n\nView the [wiki](https://github.com/visionmedia/co/wiki) for more libraries.\n\n## Examples\n\n```js\nvar co = require('co');\n\nco(function *(){\n  // yield any promise\n  var result = yield Promise.resolve(true);\n}).catch(onerror);\n\nco(function *(){\n  // resolve multiple promises in parallel\n  var a = Promise.resolve(1);\n  var b = Promise.resolve(2);\n  var c = Promise.resolve(3);\n  var res = yield [a, b, c];\n  console.log(res);\n  // => [1, 2, 3]\n}).catch(onerror);\n\n// errors can be try/catched\nco(function *(){\n  try {\n    yield Promise.reject(new Error('boom'));\n  } catch (err) {\n    console.error(err.message); // \"boom\"\n }\n}).catch(onerror);\n\nfunction onerror(err) {\n  // log any uncaught errors\n  // co will not throw any errors you do not handle!!!\n  // HANDLE ALL YOUR ERRORS!!!\n  console.error(err.stack);\n}\n```\n\n## Yieldables\n\n  The `yieldable` objects currently supported are:\n\n  - promises\n  - thunks (functions)\n  - array (parallel execution)\n  - objects (parallel execution)\n  - generators (delegation)\n  - generator functions (delegation)\n\nNested `yieldable` objects are supported, meaning you can nest\npromises within objects within arrays, and so on!\n\n### Promises\n\n[Read more on promises!](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise)\n\n### Thunks\n\nThunks are functions that only have a single argument, a callback.\nThunk support only remains for backwards compatibility and may\nbe removed in future versions of `co`.\n\n### Arrays\n\n`yield`ing an array will resolve all the `yieldables` in parallel.\n\n```js\nco(function* () {\n  var res = yield [\n    Promise.resolve(1),\n    Promise.resolve(2),\n    Promise.resolve(3),\n  ];\n  console.log(res); // => [1, 2, 3]\n}).catch(onerror);\n```\n\n### Objects\n\nJust like arrays, objects resolve all `yieldable`s in parallel.\n\n```js\nco(function* () {\n  var res = yield {\n    1: Promise.resolve(1),\n    2: Promise.resolve(2),\n  };\n  console.log(res); // => { 1: 1, 2: 2 }\n}).catch(onerror);\n```\n\n### Generators and Generator Functions\n\nAny generator or generator function you can pass into `co`\ncan be yielded as well. This should generally be avoided\nas we should be moving towards spec-compliant `Promise`s instead.\n\n## API\n\n### co(fn*).then( val => )\n\nReturns a promise that resolves a generator, generator function,\nor any function that returns a generator.\n\n```js\nco(function* () {\n  return yield Promise.resolve(true);\n}).then(function (val) {\n  console.log(val);\n}, function (err) {\n  console.error(err.stack);\n});\n```\n\n### var fn = co.wrap(fn*)\n\nConvert a generator into a regular function that returns a `Promise`.\n\n```js\nvar fn = co.wrap(function* (val) {\n  return yield Promise.resolve(val);\n});\n\nfn(true).then(function (val) {\n\n});\n```\n\n## License\n\n  MIT\n\n[npm-image]: https://img.shields.io/npm/v/co.svg?style=flat-square\n[npm-url]: https://npmjs.org/package/co\n[travis-image]: https://img.shields.io/travis/tj/co.svg?style=flat-square\n[travis-url]: https://travis-ci.org/tj/co\n[coveralls-image]: https://img.shields.io/coveralls/tj/co.svg?style=flat-square\n[coveralls-url]: https://coveralls.io/r/tj/co\n[downloads-image]: http://img.shields.io/npm/dm/co.svg?style=flat-square\n[downloads-url]: https://npmjs.org/package/co\n[gitter-image]: https://badges.gitter.im/Join%20Chat.svg\n[gitter-url]: https://gitter.im/tj/co?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge"}, "npm": {"downloads": [{"from": "2020-06-15T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 1912228}, {"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 10336019}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 43390852}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 133943932}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 252685351}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 492402426}], "dependentsCount": 4123, "starsCount": 233}, "github": {"starsCount": 11219, "forksCount": 788, "subscribersCount": 289, "issues": {"count": 330, "openCount": 46, "distribution": {"3600": 55, "10800": 25, "32400": 29, "97200": 32, "291600": 24, "874800": 36, "2624400": 33, "7873200": 28, "23619600": 14, "70858800": 12, "212576400": 42}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 90}, {"username": "jonathanong", "commitsCount": 63}, {"username": "TooTallNate", "commitsCount": 6}, {"username": "juliangruber", "commitsCount": 5}, {"username": "matthewmueller", "commitsCount": 4}, {"username": "Pana", "commitsCount": 3}, {"username": "a8m", "commitsCount": 2}, {"username": "hemanth", "commitsCount": 2}, {"username": "madbence", "commitsCount": 2}, {"username": "navaru", "commitsCount": 2}, {"username": "zensh", "commitsCount": 2}, {"username": "AkashaThorne", "commitsCount": 1}, {"username": "AutoSponge", "commitsCount": 1}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "LoicMahieu", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "RichAyotte", "commitsCount": 1}, {"username": "ajcrites", "commitsCount": 1}, {"username": "alexmingoia", "commitsCount": 1}, {"username": "armed", "commitsCount": 1}, {"username": "bcherny", "commitsCount": 1}, {"username": "bransorem", "commitsCount": 1}, {"username": "chmontgomery", "commitsCount": 1}, {"username": "cookfront", "commitsCount": 1}, {"username": "danhper", "commitsCount": 1}, {"username": "darul75", "commitsCount": 1}, {"username": "dead-horse", "commitsCount": 1}, {"username": "ericelliott", "commitsCount": 1}, {"username": "fengmk2", "commitsCount": 1}, {"username": "fkling", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "ide", "commitsCount": 1}, {"username": "iliakan", "commitsCount": 1}, {"username": "island205", "commitsCount": 1}, {"username": "logicalparadox", "commitsCount": 1}, {"username": "mlrawlings", "commitsCount": 1}, {"username": "plievone", "commitsCount": 1}, {"username": "pyrotechnick", "commitsCount": 1}, {"username": "rhacker", "commitsCount": 1}, {"username": "saadq", "commitsCount": 1}, {"username": "sahat", "commitsCount": 1}, {"username": "shimont", "commitsCount": 1}, {"username": "sidorares", "commitsCount": 1}, {"username": "swolfand", "commitsCount": 1}, {"username": "t3chnoboy", "commitsCount": 1}, {"username": "takayuky", "commitsCount": 1}, {"username": "timoxley", "commitsCount": 1}, {"username": "tricknotes", "commitsCount": 1}, {"username": "welefen", "commitsCount": 1}, {"username": "willconant", "commitsCount": 1}, {"username": "yorkie", "commitsCount": 1}, {"username": "yuchi", "commitsCount": 1}], "commits": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-05-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2020-03-18T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-12-19T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}, {"from": "2019-06-17T00:00:00.000Z", "to": "2020-06-16T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 5382, "testsSize": 16460, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/co.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/co.svg", "content": "https://img.shields.io/npm/v/co.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/tj/co.svg?style=flat-square", "service": "https://api.travis-ci.org/tj/co.svg", "shields": "https://img.shields.io/travis/tj/co.svg", "content": "https://img.shields.io/travis/tj/co.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/tj/co.svg?style=flat-square", "service": "https://coveralls.io/repos/tj/co/badge.svg", "shields": "https://img.shields.io/coveralls/tj/co.svg", "content": "https://img.shields.io/coveralls/tj/co.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "http://img.shields.io/npm/dm/co.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/co.svg", "content": "https://img.shields.io/npm/dm/co.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 12581, "downloadsCount": 44647977.333333336, "downloadsAcceleration": 38018.43848934554, "dependentsCount": 4123}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6369957499337956, "detail": {"quality": 0.9830959563246702, "popularity": 0.7981442683339446, "maintenance": 0.1791899117700401}}}}, {"jsdoc": {"analyzedAt": "2020-05-20T14:09:08.465Z", "collected": {"metadata": {"name": "jsdoc", "scope": "unscoped", "version": "3.6.4", "description": "An API documentation generator for JavaScript.", "keywords": ["documentation", "javascript"], "date": "2020-04-06T19:33:35.127Z", "author": {"name": "Michael Mathews", "email": "micmath@gmail.com"}, "publisher": {"username": "hegemonic", "email": "jeffrey.l.williams@gmail.com"}, "maintainers": [{"username": "hegemonic", "email": "jeffrey.l.williams@gmail.com"}, {"username": "kzh", "email": "kaleb@hornsby.ws"}], "contributors": [{"url": "https://github.com/jsdoc/jsdoc/graphs/contributors"}], "repository": {"type": "git", "url": "git+https://github.com/jsdoc/jsdoc.git"}, "links": {"npm": "https://www.npmjs.com/package/jsdoc", "homepage": "https://github.com/jsdoc/jsdoc#readme", "repository": "https://github.com/jsdoc/jsdoc", "bugs": "https://github.com/jsdoc/jsdoc/issues"}, "license": "Apache-2.0", "dependencies": {"@babel/parser": "^7.9.4", "bluebird": "^3.7.2", "catharsis": "^0.8.11", "escape-string-regexp": "^2.0.0", "js2xmlparser": "^4.0.1", "klaw": "^3.0.0", "markdown-it": "^10.0.0", "markdown-it-anchor": "^5.2.7", "marked": "^0.8.2", "mkdirp": "^1.0.4", "requizzle": "^0.2.3", "strip-json-comments": "^3.1.0", "taffydb": "2.6.2", "underscore": "~1.10.2"}, "devDependencies": {"ajv": "^6.12.0", "gulp": "^4.0.2", "gulp-eslint": "^6.0.0", "gulp-json-editor": "^2.5.4", "nyc": "^15.0.1"}, "releases": [{"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 0}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 3}, {"from": "2018-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 6}], "hasTestScript": true, "readme": "# JSDoc\n\n[![Build Status](https://travis-ci.org/jsdoc/jsdoc.svg?branch=master)](http://travis-ci.org/jsdoc/jsdoc)\n\nAn API documentation generator for JavaScript.\n\nWant to contribute to JSDoc? Please read `CONTRIBUTING.md`.\n\nInstallation and Usage\n----------------------\n\nJSDoc supports stable versions of Node.js 8.15.0 and later. You can install\nJSDoc globally or in your project's `node_modules` folder.\n\nTo install the latest version on npm globally (might require `sudo`;\n[learn how to fix this](https://docs.npmjs.com/resolving-eacces-permissions-errors-when-installing-packages-globally)):\n\n    npm install -g jsdoc\n\nTo install the latest version on npm locally and save it in your package's\n`package.json` file:\n\n    npm install --save-dev jsdoc\n\n**Note**: By default, npm adds your package using the caret operator in front of\nthe version number (for example, `^3.6.3`). We recommend using the tilde\noperator instead (for example, `~3.6.3`), which limits updates to the most\nrecent patch-level version. See\n[this Stack Overflow answer](https://stackoverflow.com/questions/22343224) for\nmore information about the caret and tilde operators.\n\nTo install the latest development version locally, without updating your\nproject's `package.json` file:\n\n    npm install git+https://github.com/jsdoc/jsdoc.git\n\nIf you installed JSDoc locally, the JSDoc command-line tool is available in\n`./node_modules/.bin`. To generate documentation for the file\n`yourJavaScriptFile.js`:\n\n    ./node_modules/.bin/jsdoc yourJavaScriptFile.js\n\nIf you installed JSDoc globally, run the `jsdoc` command:\n\n    jsdoc yourJavaScriptFile.js\n\nBy default, the generated documentation is saved in a directory named `out`. You\ncan use the `--destination` (`-d`) option to specify another directory.\n\nRun `jsdoc --help` for a complete list of command-line options.\n\n## Templates and tools\n\nThe JSDoc community has created templates and other tools to help you generate\nand customize your documentation. Here are a few of them:\n\n### Templates\n\n+ [jaguarjs-jsdoc](https://github.com/davidshimjs/jaguarjs-jsdoc)\n+ [DocStrap](https://github.com/docstrap/docstrap)\n([example](https://docstrap.github.io/docstrap))\n+ [jsdoc3Template](https://github.com/DBCDK/jsdoc3Template)\n  ([example](https://github.com/danyg/jsdoc3Template/wiki#wiki-screenshots))\n+ [minami](https://github.com/Nijikokun/minami)\n+ [docdash](https://github.com/clenemt/docdash)\n([example](http://clenemt.github.io/docdash/))\n+ [tui-jsdoc-template](https://github.com/nhnent/tui.jsdoc-template)\n([example](https://nhnent.github.io/tui.jsdoc-template/latest/))\n+ [better-docs](https://github.com/SoftwareBrothers/better-docs)\n([example](https://softwarebrothers.github.io/admin-bro-dev/index.html))\n\n### Build tools\n\n+ [JSDoc Grunt plugin](https://github.com/krampstudio/grunt-jsdoc)\n+ [JSDoc Gulp plugin](https://github.com/mlucool/gulp-jsdoc3)\n\n### Other tools\n\n+ [jsdoc-to-markdown](https://github.com/jsdoc2md/jsdoc-to-markdown)\n+ [Integrating GitBook with\nJSDoc](https://medium.com/@kevinast/integrate-gitbook-jsdoc-974be8df6fb3)\n\n## For more information\n\n+ Documentation is available at [jsdoc.app](https://jsdoc.app/).\n+ Contribute to the docs at\n[jsdoc/jsdoc.github.io](https://github.com/jsdoc/jsdoc.github.io).\n+ [Join JSDoc's Slack channel](https://jsdoc-slack.appspot.com/).\n+ Ask for help on the\n[JSDoc Users mailing list](http://groups.google.com/group/jsdoc-users).\n+ Post questions tagged `jsdoc` to\n[Stack Overflow](http://stackoverflow.com/questions/tagged/jsdoc).\n\n## License\n\nJSDoc 3 is copyright (c) 2011-present Michael Mathews <micmath@gmail.com> and\nthe [contributors to JSDoc](https://github.com/jsdoc/jsdoc/graphs/contributors).\n\nJSDoc 3 is free software, licensed under the Apache License, Version 2.0. See\nthe file `LICENSE.md` in this distribution for more details."}, "npm": {"downloads": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 76852}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 439127}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 2004359}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 5442385}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 9551442}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 17314369}], "dependentsCount": 386, "starsCount": 135}, "github": {"homepage": "https://jsdoc.app/", "starsCount": 10655, "forksCount": 1195, "subscribersCount": 275, "issues": {"count": 1777, "openCount": 318, "distribution": {"3600": 151, "10800": 86, "32400": 106, "97200": 150, "291600": 176, "874800": 160, "2624400": 176, "7873200": 170, "23619600": 229, "70858800": 179, "212576400": 194}, "isDisabled": false}, "contributors": [{"username": "hegemonic", "commitsCount": 1137}, {"username": "micmath", "commitsCount": 300}, {"username": "renovate-bot", "commitsCount": 93}, {"username": "mathematicalcoffee", "commitsCount": 77}, {"username": "jannon", "commitsCount": 30}, {"username": "rafalwrzeszcz", "commitsCount": 17}, {"username": "benblank", "commitsCount": 16}, {"username": "matthewkastor", "commitsCount": 12}, {"username": "tschaub", "commitsCount": 8}, {"username": "ErnstHaagsman", "commitsCount": 6}, {"username": "kruncher", "commitsCount": 6}, {"username": "johnny-mh", "commitsCount": 5}, {"username": "BobKerns", "commitsCount": 4}, {"username": "attiks", "commitsCount": 4}, {"username": "bjornharrtell", "commitsCount": 4}, {"username": "dchambers", "commitsCount": 4}, {"username": "manix84", "commitsCount": 4}, {"username": "nschonni", "commitsCount": 4}, {"username": "phasmal", "commitsCount": 4}, {"username": "cdparks", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "kevinoid", "commitsCount": 3}, {"username": "lddubeau", "commitsCount": 3}, {"username": "rassilon", "commitsCount": 3}, {"username": "Billiam", "commitsCount": 2}, {"username": "Kienz", "commitsCount": 2}, {"username": "arcanis", "commitsCount": 2}, {"username": "itantik", "commitsCount": 2}, {"username": "kpozin", "commitsCount": 2}, {"username": "nicksay", "commitsCount": 2}, {"username": "shakefu", "commitsCount": 2}, {"username": "taye", "commitsCount": 2}, {"username": "tomalec", "commitsCount": 2}, {"username": "Akaexus", "commitsCount": 1}, {"username": "DataTables", "commitsCount": 1}, {"username": "GerHobbelt", "commitsCount": 1}, {"username": "Jakobo", "commitsCount": 1}, {"username": "Oblongmana", "commitsCount": 1}, {"username": "Raptor399", "commitsCount": 1}, {"username": "TimOgilvy", "commitsCount": 1}, {"username": "TimothyGu", "commitsCount": 1}, {"username": "aebabis", "commitsCount": 1}, {"username": "ahocevar", "commitsCount": 1}, {"username": "andstor", "commitsCount": 1}, {"username": "cassierecher", "commitsCount": 1}, {"username": "cgwyllie", "commitsCount": 1}, {"username": "clenemt", "commitsCount": 1}, {"username": "dandv", "commitsCount": 1}, {"username": "dasa", "commitsCount": 1}, {"username": "denebolar", "commitsCount": 1}, {"username": "eventualbuddha", "commitsCount": 1}, {"username": "fluidblue", "commitsCount": 1}, {"username": "francoisfrisch", "commitsCount": 1}, {"username": "freejosh", "commitsCount": 1}, {"username": "garpeer", "commitsCount": 1}, {"username": "hlapp", "commitsCount": 1}, {"username": "joerixaop", "commitsCount": 1}, {"username": "kuebk", "commitsCount": 1}, {"username": "lazd", "commitsCount": 1}, {"username": "lextiz", "commitsCount": 1}, {"username": "livelazily", "commitsCount": 1}, {"username": "llaxsll", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "masklinn", "commitsCount": 1}, {"username": "matthewwardrop", "commitsCount": 1}, {"username": "mcarroll1283", "commitsCount": 1}, {"username": "mischah", "commitsCount": 1}, {"username": "mlucool", "commitsCount": 1}, {"username": "nijikokun", "commitsCount": 1}, {"username": "novemberborn", "commitsCount": 1}, {"username": "popham", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "rainum", "commitsCount": 1}, {"username": "shahyar", "commitsCount": 1}, {"username": "snoack", "commitsCount": 1}, {"username": "steidinger", "commitsCount": 1}, {"username": "theasta", "commitsCount": 1}, {"username": "thybzi", "commitsCount": 1}, {"username": "tubalmartin", "commitsCount": 1}, {"username": "walles", "commitsCount": 1}, {"username": "wojtek-krysiak", "commitsCount": 1}], "commits": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 1}, {"from": "2020-04-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 7}, {"from": "2020-02-20T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 42}, {"from": "2019-11-22T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 97}, {"from": "2019-05-21T00:00:00.000Z", "to": "2020-05-20T00:00:00.000Z", "count": 204}]}, "source": {"files": {"readmeSize": 3829, "testsSize": 672020, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/jsdoc/jsdoc.svg?branch=master", "service": "https://api.travis-ci.org/jsdoc/jsdoc.svg?branch=master", "shields": "https://img.shields.io/travis/jsdoc/jsdoc/master.svg", "content": "https://img.shields.io/travis/jsdoc/jsdoc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "outdatedDependencies": {"escape-string-regexp": {"required": "^2.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "taffydb": {"required": "2.6.2", "stable": "2.7.3", "latest": "2.7.3"}, "markdown-it": {"required": "^10.0.0", "stable": "11.0.0", "latest": "11.0.0"}, "marked": {"required": "^0.8.2", "stable": "1.1.0", "latest": "1.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 12341, "downloadsCount": 1814128.3333333333, "downloadsAcceleration": 6250.569634703195, "dependentsCount": 386}, "maintenance": {"releasesFrequency": 0.5859589041095891, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.68128494503558, "detail": {"quality": 0.8688665212223086, "popularity": 0.541496216145265, "maintenance": 0.6602894657658419}}}}, {"run-sequence": {"analyzedAt": "2020-05-01T20:33:01.218Z", "collected": {"metadata": {"name": "run-sequence", "scope": "unscoped", "version": "2.2.1", "description": "Run a series of dependent gulp tasks in order", "keywords": ["gulpfriendly", "pipe", "sequence", "gulp", "orchestrator"], "date": "2018-01-03T16:22:13.608Z", "author": {"name": "Phil DeJarnett", "url": "http://overzealous.com/"}, "publisher": {"username": "overzealous", "email": "phil@overzealous.com"}, "maintainers": [{"username": "overzealous", "email": "phil@overzealous.com"}], "repository": {"type": "git", "url": "git://github.com/OverZealous/run-sequence.git"}, "links": {"npm": "https://www.npmjs.com/package/run-sequence", "homepage": "https://github.com/OverZealous/run-sequence", "repository": "https://github.com/OverZealous/run-sequence", "bugs": "https://github.com/OverZealous/run-sequence/issues"}, "license": "MIT", "dependencies": {"chalk": "^1.1.3", "fancy-log": "^1.3.2", "plugin-error": "^0.1.2"}, "devDependencies": {"gulp": "^3.9.1", "mocha": "^3.4.2", "should": "~11.2.0"}, "releases": [{"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2018-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}], "hasTestScript": true, "readme": "# run-sequence\n\n[![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url]\n\nRuns a sequence of gulp tasks in the specified order.  This function is designed to solve the situation where you have defined run-order, but choose not to or cannot use dependencies.\n\n> ### Is your company hiring Node developers?\n>\n> If you are hiring developers, you can support this project and future open source work by checking out our company, [Qualified.io](https://www.qualified.io/?utm_source=run-sequence).\n>\n> Qualified is a service for online skills-assessment that can help you easily vet developers across a wide range of real-world programming skills.\n>\n> Please help support this project, and [sign up for a free trial](https://www.qualified.io/?utm_source=run-sequence).\n\n\n\nEach argument to `run-sequence` is run in order.  This works by listening to the `task_stop` and `task_err` events, and keeping track of which tasks have been completed.  You can still run some of the tasks in parallel, by providing an array of task names for one or more of the arguments.\n\nIf the final argument is a function, it will be used as a callback after all the functions are either finished or an error has occurred.\n\n> **Please Note**\n>\n> This was intended to be a temporary solution until the release of gulp 4.0 which should have support for defining task dependencies similarly.\n> \n> Given that Gulp 4 appears to never be fully released, take that for what you will. Be aware that this solution is a hack, and may stop working with a future update to gulp.\n\n## Usage\n\nFirst, install `run-sequence` as a development dependency:\n\n```shell\nnpm install --save-dev run-sequence\n```\n\nThen add use it in your gulpfile, like so (note these are only examples, please check the documentation for your functions for the correct way to use them):\n\n```js\nvar gulp = require('gulp');\nvar runSequence = require('run-sequence');\nvar del = require('del');\nvar fs = require('fs');\n\n// This will run in this order:\n// * build-clean\n// * build-scripts and build-styles in parallel\n// * build-html\n// * Finally call the callback function\ngulp.task('build', function(callback) {\n  runSequence('build-clean',\n              ['build-scripts', 'build-styles'],\n              'build-html',\n              callback);\n});\n\n// configure build-clean, build-scripts, build-styles, build-html as you wish,\n// but make sure they either return a stream or promise, or handle the callback\n// Example:\n\ngulp.task('build-clean', function() {\n    // Return the Promise from del()\n    return del([BUILD_DIRECTORY]);\n//  ^^^^^^\n//   This is the key here, to make sure asynchronous tasks are done!\n});\n\ngulp.task('build-scripts', function() {\n    // Return the stream from gulp\n    return gulp.src(SCRIPTS_SRC).pipe(...)...\n//  ^^^^^^\n//   This is the key here, to make sure tasks run to completion!\n});\n\ngulp.task('callback-example', function(callback) {\n    // Use the callback in the async function\n    fs.readFile('...', function(err, file) {\n        console.log(file);\n        callback();\n//      ^^^^^^^^^^\n//       This is what lets gulp know this task is complete!\n    });\n});\n```\n\n### Using within gulp submodules\n\nIf you have a complex gulp setup with your tasks split up across different files, you may get the error that `run-sequence` is unable to find your tasks.  In this case, you can configure `run-sequence` to look at the gulp within the submodule, like so:\n\n```js\n// submodule tasks/mygulptask.js\n\nvar gulp = require('gulp'), // might be a different instance than the toplevel one\n    // this uses the gulp you provide\n    runSequence = require('run-sequence').use(gulp);\n    \n    // ...and then use normally\n    runSequence('subtask1', 'subtask2');\n```\n\n## Options\n\nThere are a few global options you can configure on the `runSequence` function.\n\nPlease note these are **global to the module**, and once set will affect every use of `runSequence`.\n\nUsage:\n\n```js\nvar runSequence = require('run-sequence');\nrunSequence.options.ignoreUndefinedTasks = true;\ngulp.task('task', function(cb) {\n\trunSequence('foo', null, 'bar'); // no longer errors on `null`\n})\n```\n\n- `showErrorStackTrace`: When set to `false`, this suppresses the full stack trace from errors captured during a sequence.\n- `ignoreUndefinedTasks`: When set to `true`, this enables you to pass falsey values in which will be stripped from the task set before validation and sequencing.\n\n\n\n## LICENSE\n\n[MIT License](http://en.wikipedia.org/wiki/MIT_License)\n\n\n[npm-url]: https://npmjs.org/package/run-sequence\n[npm-image]: https://badge.fury.io/js/run-sequence.png\n\n[travis-url]: http://travis-ci.org/OverZealous/run-sequence\n[travis-image]: https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master"}, "npm": {"downloads": [{"from": "2020-04-30T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 46707}, {"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 248918}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 1062812}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 3190852}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 6183275}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 13681240}], "dependentsCount": 969, "starsCount": 198}, "github": {"starsCount": 987, "forksCount": 60, "subscribersCount": 16, "issues": {"count": 107, "openCount": 0, "distribution": {"3600": 29, "10800": 14, "32400": 19, "97200": 10, "291600": 9, "874800": 6, "2624400": 10, "7873200": 4, "23619600": 6, "70858800": 0, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "OverZealous", "commitsCount": 59}, {"username": "AdamWills", "commitsCount": 1}, {"username": "Cactucs", "commitsCount": 1}, {"username": "Frizi", "commitsCount": 1}, {"username": "amilajack", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "etler", "commitsCount": 1}, {"username": "lukehorvat", "commitsCount": 1}, {"username": "memoryhole", "commitsCount": 1}, {"username": "neu5", "commitsCount": 1}, {"username": "nixgadget", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pixelshaded", "commitsCount": 1}, {"username": "sorohan", "commitsCount": 1}], "commits": [{"from": "2020-04-24T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2020-02-01T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-11-03T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}, {"from": "2019-05-02T00:00:00.000Z", "to": "2020-05-01T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4756, "testsSize": 9520, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://secure.travis-ci.org/OverZealous/run-sequence.png?branch=master", "service": "https://api.travis-ci.org/OverZealous/run-sequence.svg?branch=master", "shields": "https://img.shields.io/travis/OverZealous/run-sequence/master.svg", "content": "https://img.shields.io/travis/OverZealous/run-sequence/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "outdatedDependencies": {"chalk": {"required": "^1.1.3", "stable": "4.0.0", "latest": "4.0.0"}, "plugin-error": {"required": "^0.1.2", "stable": "1.0.1", "latest": "1.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5, "branding": 0.15}, "popularity": {"communityInterest": 1275, "downloadsCount": 1063617.3333333333, "downloadsAcceleration": -1296.776046423136, "dependentsCount": 969}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9838339831897075}}, "score": {"final": 0.7603982293972716, "detail": {"quality": 0.9042984618008596, "popularity": 0.3975143486612579, "maintenance": 0.9999390537873529}}}}, {"babel-preset-stage-3": {"analyzedAt": "2020-06-14T14:08:55.730Z", "collected": {"metadata": {"name": "babel-preset-stage-3", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for stage 3 plugins", "date": "2017-04-07T15:19:43.575Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-stage-3", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-syntax-trailing-function-commas": "^6.22.0", "babel-plugin-transform-async-generator-functions": "^6.24.1", "babel-plugin-transform-async-to-generator": "^6.24.1", "babel-plugin-transform-exponentiation-operator": "^6.24.1", "babel-plugin-transform-object-rest-spread": "^6.22.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-stage-3\n\n> Babel preset for stage 3 plugins.\n\nThe gist of Stage 3 is:\n\n> **Stage 3**: candidate\n>\n> **What is it?** The proposal is mostly finished and now needs feedback from implementations and users to progress further.\n\n> **What\u2019s required?** The spec text must be complete. Designated reviewers (appointed by TC39, not by the champion) and the ECMAScript spec editor must sign off on the spec text. There must be at least two spec-compliant implementations (which don\u2019t have to be enabled by default).\n>\n> **What\u2019s next?** Henceforth, changes should only be made in response to critical issues raised by the implementations and their use.\n\n\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-stage-3\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"stage-3\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets stage-3\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"stage-3\"]\n});\n```\n\n## References\n\n- Chapter \"[The TC39 process for ECMAScript features](http://exploringjs.com/es2016-es2017/ch_tc39-process.html)\" in \"Exploring ES2016 and ES2017\" by Axel Rauschmayer"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 36288}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 807035}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3551787}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11634488}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 22361066}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 48862080}], "dependentsCount": 393, "starsCount": 10}, "github": {"homepage": "https://babel.dev", "starsCount": 36790, "forksCount": 4312, "subscribersCount": 867, "issues": {"count": 11637, "openCount": 793, "distribution": {"3600": 2464, "10800": 918, "32400": 1067, "97200": 1241, "291600": 1061, "874800": 1011, "2624400": 847, "7873200": 819, "23619600": 846, "70858800": 1092, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 63}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 157}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 399}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 792}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12333901, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42078, "downloadsCount": 3878162.6666666665, "downloadsAcceleration": -6279.0950532724455, "dependentsCount": 393}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23994129349371512}}, "score": {"final": 0.686650688933791, "detail": {"quality": 0.9857842821600954, "popularity": 0.5478162151243758, "maintenance": 0.5690849399778025}}}}, {"raw-loader": {"analyzedAt": "2020-06-07T18:20:56.486Z", "collected": {"metadata": {"name": "raw-loader", "scope": "unscoped", "version": "4.0.1", "description": "A loader for webpack that allows importing files as a String", "keywords": ["webpack"], "date": "2020-04-15T11:41:34.958Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/raw-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/raw-loader", "homepage": "https://github.com/webpack-contrib/raw-loader", "repository": "https://github.com/webpack-contrib/raw-loader", "bugs": "https://github.com/webpack-contrib/raw-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.3.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-plugin-import": "^2.20.2", "eslint-plugin-prettier": "^3.1.3", "husky": "^4.2.5", "jest": "^25.3.0", "jest-junit": "^10.0.0", "lint-staged": "^10.1.3", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^2.0.4", "standard-version": "^7.1.0", "webpack": "^4.42.1"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img width=\"200\" height=\"200\"\n    src=\"https://cdn3.iconfinder.com/data/icons/lexter-flat-colorfull-file-formats/56/raw-256.png\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# raw-loader\n\nA loader for webpack that allows importing files as a String.\n\n## Getting Started\n\nTo begin, you'll need to install `raw-loader`:\n\n```console\n$ npm install raw-loader --save-dev\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**file.js**\n\n```js\nimport txt from './file.txt';\n```\n\n**webpack.config.js**\n\n```js\n// webpack.config.js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.txt$/i,\n        use: 'raw-loader',\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method.\n\n## Options\n\n|            Name             |    Type     | Default | Description            |\n| :-------------------------: | :---------: | :-----: | :--------------------- |\n| **[`esModule`](#esmodule)** | `{Boolean}` | `true`  | Uses ES modules syntax |\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `raw-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.txt$/i,\n        use: [\n          {\n            loader: 'raw-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Inline\n\n```js\nimport txt from 'raw-loader!./file.txt';\n```\n\nBeware, if you already define loader(s) for extension(s) in `webpack.config.js` you should use:\n\n```js\nimport css from '!!raw-loader!./file.txt'; // Adding `!!` to a request will disable all loaders specified in the configuration\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/raw-loader.svg\n[npm-url]: https://npmjs.com/package/raw-loader\n[node]: https://img.shields.io/node/v/raw-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/raw-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/raw-loader\n[tests]: https://github.com/webpack-contrib/raw-loader/workflows/raw-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/raw-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/raw-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/raw-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=raw-loader\n[size-url]: https://packagephobia.now.sh/result?p=raw-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 177830}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4087783}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17489526}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 53867616}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 93365866}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 160716342}], "dependentsCount": 1372, "starsCount": 20}, "github": {"starsCount": 748, "forksCount": 81, "subscribersCount": 10, "issues": {"count": 97, "openCount": 1, "distribution": {"3600": 32, "10800": 4, "32400": 7, "97200": 11, "291600": 6, "874800": 10, "2624400": 3, "7873200": 11, "23619600": 8, "70858800": 5, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 20}, {"username": "sokra", "commitsCount": 7}, {"username": "SpaceK33z", "commitsCount": 5}, {"username": "shellscape", "commitsCount": 2}, {"username": "FrankFang", "commitsCount": 1}, {"username": "d3viant0ne", "commitsCount": 1}, {"username": "fresheneesz", "commitsCount": 1}, {"username": "joeheyming", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "michael-ciniawsky", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "niksy", "commitsCount": 1}, {"username": "nocke", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "simon04", "commitsCount": 1}, {"username": "tillsanders", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 3329, "testsSize": 14770, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/raw-loader.svg", "shields": "https://img.shields.io/npm/v/raw-loader.svg", "content": "https://img.shields.io/npm/v/raw-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/raw-loader.svg", "service": "https://david-dm.org/webpack-contrib/raw-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/raw-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/raw-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 875, "downloadsCount": 17955872, "downloadsAcceleration": 55261.49128614916, "dependentsCount": 1372}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8661327386101643, "detail": {"quality": 0.9952085638971784, "popularity": 0.6217375897306228, "maintenance": 0.9998914658151222}}}}, {"xo": {"analyzedAt": "2020-06-04T05:30:42.506Z", "collected": {"metadata": {"name": "xo", "scope": "unscoped", "version": "0.32.0", "description": "JavaScript/TypeScript linter with great defaults", "keywords": ["cli-app", "cli", "xo", "xoxo", "happy", "happiness", "code", "quality", "style", "lint", "linter", "jshint", "jslint", "eslint", "validate", "code style", "standard", "strict", "check", "checker", "verify", "enforce", "hint", "simple", "javascript", "typescript"], "date": "2020-06-03T12:45:25.210Z", "author": {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com", "url": "https://sindresorhus.com", "username": "sindresorhus"}, "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/xojs/xo.git"}, "links": {"npm": "https://www.npmjs.com/package/xo", "homepage": "https://github.com/xojs/xo#readme", "repository": "https://github.com/xojs/xo", "bugs": "https://github.com/xojs/xo/issues"}, "license": "MIT", "dependencies": {"@typescript-eslint/eslint-plugin": "^3.1.0", "@typescript-eslint/parser": "^3.1.0", "arrify": "^2.0.1", "cosmiconfig": "^6.0.0", "debug": "^4.1.1", "eslint": "^7.1.0", "eslint-config-prettier": "^6.11.0", "eslint-config-xo": "^0.30.0", "eslint-config-xo-typescript": "^0.31.0", "eslint-formatter-pretty": "^3.0.1", "eslint-import-resolver-webpack": "^0.12.1", "eslint-plugin-ava": "^10.3.0", "eslint-plugin-eslint-comments": "^3.2.0", "eslint-plugin-import": "^2.20.2", "eslint-plugin-no-use-extend-native": "^0.5.0", "eslint-plugin-node": "^11.1.0", "eslint-plugin-prettier": "^3.1.3", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-unicorn": "^20.1.0", "find-cache-dir": "^3.3.1", "find-up": "^4.1.0", "fs-extra": "^9.0.0", "get-stdin": "^8.0.0", "globby": "^9.0.0", "has-flag": "^4.0.0", "imurmurhash": "^0.1.4", "is-path-inside": "^3.0.2", "json-stable-stringify-without-jsonify": "^1.0.1", "json5": "^2.1.3", "lodash": "^4.17.15", "meow": "^5.0.0", "micromatch": "^4.0.2", "open-editor": "^2.0.1", "p-reduce": "^2.1.0", "path-exists": "^4.0.0", "prettier": "2.0.4", "resolve-cwd": "^3.0.0", "resolve-from": "^5.0.0", "semver": "^7.3.2", "slash": "^3.0.0", "to-absolute-glob": "^2.0.2", "typescript": "^3.3.1", "update-notifier": "^4.1.0"}, "devDependencies": {"ava": "^1.1.0", "coveralls": "^3.1.0", "eslint-config-xo-react": "^0.23.0", "eslint-plugin-react": "^7.20.0", "eslint-plugin-react-hooks": "^4.0.4", "execa": "^4.0.2", "nyc": "^15.1.0", "pify": "^5.0.0", "proxyquire": "^2.1.3", "temp-write": "^4.0.0", "webpack": "^4.43.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 20}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 23}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">\n\t<br>\n\t<img width=\"400\" src=\"media/logo.svg\" alt=\"XO\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> JavaScript/TypeScript linter with great defaults\n\n[![Build Status](https://travis-ci.com/xojs/xo.svg?branch=master)](https://travis-ci.com/xojs/xo) [![Coverage Status](https://coveralls.io/repos/github/xojs/xo/badge.svg?branch=master)](https://coveralls.io/github/xojs/xo?branch=master) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) [![Gitter](https://badges.gitter.im/join_chat.svg)](https://gitter.im/xojs/Lobby)\n\nOpinionated but configurable ESLint wrapper with lots of goodies included. Enforces strict and readable code. Never discuss code style on a pull request again! No decision-making. No `.eslintrc` or `.jshintrc` to manage. It just works!\n\nUses [ESLint](https://eslint.org) underneath, so issues regarding rules should be opened over [there](https://github.com/eslint/eslint/issues).\n\n*JSX is supported by default, but you'll need [eslint-config-xo-react](https://github.com/xojs/eslint-config-xo-react#use-with-xo) for React specific linting.*\n\n*Vue components are not supported by default. You'll need [eslint-config-xo-vue](https://github.com/ChocPanda/eslint-config-xo-vue#use-with-xo) for specific linting in a Vue app.*\n\n![](https://raw.githubusercontent.com/sindresorhus/eslint-formatter-pretty/master/screenshot.png)\n\n## Highlights\n\n- Beautiful output.\n- Zero-config, but [configurable when needed](#config).\n- Enforces readable code, because you read more code than you write.\n- No need to specify file paths to lint as it lints all JS/TS files except for [commonly ignored paths](#ignores).\n- [Config overrides per files/globs.](#config-overrides)\n- [TypeScript supported by default](#typescript)\n- Includes many useful ESLint plugins, like [`unicorn`](https://github.com/sindresorhus/eslint-plugin-unicorn), [`import`](https://github.com/benmosher/eslint-plugin-import), [`ava`](https://github.com/avajs/eslint-plugin-ava), [`node`](https://github.com/mysticatea/eslint-plugin-node) and more.\n- Automatically enables rules based on the [`engines`](https://docs.npmjs.com/files/package.json#engines) field in your `package.json`.\n- Caches results between runs for much better performance.\n- Super simple to add XO to a project with [`$ npm init xo`](https://github.com/xojs/create-xo).\n- Fix many issues automagically with `$ xo --fix`.\n- Open all files with errors at the correct line in your editor with `$ xo --open`.\n- Specify [indent](#space) and [semicolon](#semicolon) preferences easily without messing with the rule config.\n- Optionally use the [Prettier](https://github.com/prettier/prettier) code style.\n- Great [editor plugins](#editor-plugins).\n\n## Install\n\n```\n$ npm install --global xo\n```\n\n## Usage\n\n```\n$ xo --help\n\n  Usage\n    $ xo [<file|glob> ...]\n\n  Options\n    --fix             Automagically fix issues\n    --reporter        Reporter to use\n    --env             Environment preset  [Can be set multiple times]\n    --global          Global variable  [Can be set multiple times]\n    --ignore          Additional paths to ignore  [Can be set multiple times]\n    --space           Use space indent instead of tabs  [Default: 2]\n    --no-semicolon    Prevent use of semicolons\n    --prettier        Conform to Prettier code style\n    --node-version    Range of Node.js version to support\n    --plugin          Include third-party plugins  [Can be set multiple times]\n    --extend          Extend defaults with a custom config  [Can be set multiple times]\n    --open            Open files with issues in your editor\n    --quiet           Show only errors and no warnings\n    --extension       Additional extension to lint [Can be set multiple times]\n    --no-esnext       Don't enforce ES2015+ rules\n    --cwd=<dir>       Working directory for files\n    --stdin           Validate/fix code from stdin\n    --stdin-filename  Specify a filename for the --stdin option\n\n  Examples\n    $ xo\n    $ xo index.js\n    $ xo *.js !foo.js\n    $ xo --space\n    $ xo --env=node --env=mocha\n    $ xo --plugin=react\n    $ xo --plugin=html --extension=html\n    $ echo 'const x=true' | xo --stdin --fix\n\n  Tips\n    - Add XO to your project with `npm init xo`.\n    - Put options in package.json instead of using flags so other tools can read it.\n```\n\n*Note that the CLI will use your local install of XO when available, even when run globally.*\n\n## Default code style\n\n*Any of these can be [overridden](#rules) if necessary.*\n\n- Tab indentation *[(or space)](#space)*\n- Semicolons *[(or not)](#semicolon)*\n- Single-quotes\n- No unused variables\n- Space after keyword `if (condition) {}`\n- Always `===` instead of `==`\n\nCheck out an [example](index.js) and the [ESLint rules](https://github.com/xojs/eslint-config-xo/blob/master/index.js).\n\n## Workflow\n\nThe recommended workflow is to add XO locally to your project and run it with the tests.\n\nSimply run `$ npm init xo` (with any options) to add XO to your package.json or create one.\n\n### Before/after\n\n```diff\n {\n \t\"name\": \"awesome-package\",\n \t\"scripts\": {\n-\t\t\"test\": \"ava\",\n+\t\t\"test\": \"xo && ava\"\n \t},\n \t\"devDependencies\": {\n-\t\t\"ava\": \"^2.0.0\"\n+\t\t\"ava\": \"^2.0.0\",\n+\t\t\"xo\": \"^0.25.0\"\n \t}\n }\n```\n\nThen just run `$ npm test` and XO will be run before your tests.\n\n## Config\n\nYou can configure XO options with one of the following files:\n\n1. As JSON in the `xo` property in `package.json`:\n\n```json\n{\n\t\"name\": \"awesome-package\",\n\t\"xo\": {\n\t\t\"space\": true\n\t}\n}\n```\n\n2. As JSON in `.xo-config` or `.xo-config.json`:\n\n```json\n{\n\t\"space\": true\n}\n```\n\n3. As a JavaScript module in `.xo-config.js` or `xo.config.js`:\n\n```js\nmodule.exports = {\n\tspace: true\n};\n```\n\n[Globals](https://eslint.org/docs/user-guide/configuring#specifying-globals) and [rules](https://eslint.org/docs/user-guide/configuring#configuring-rules) can be configured inline in files.\n\n### envs\n\nType: `string[]`\\\nDefault: `['es2020', 'node']`\n\nWhich [environments](https://eslint.org/docs/user-guide/configuring#specifying-environments) your code is designed to run in. Each environment brings with it a certain set of predefined global variables.\n\n### globals\n\nType: `string[]`\n\nAdditional global variables your code accesses during execution.\n\n### ignores\n\nType: `string[]`\n\nSome [paths](lib/options-manager.js) are ignored by default, including paths in `.gitignore` and [.eslintignore](https://eslint.org/docs/user-guide/configuring#eslintignore). Additional ignores can be added here.\n\n### space\n\nType: `boolean | number`\\\nDefault: `false` *(tab indentation)*\n\nSet it to `true` to get 2-space indentation or specify the number of spaces.\n\nThis option exists for pragmatic reasons, but I would strongly recommend you read [\"Why tabs are superior\"](http://lea.verou.me/2012/01/why-tabs-are-clearly-superior/).\n\n### rules\n\nType: `object`\n\nOverride any of the [default rules](https://github.com/xojs/eslint-config-xo/blob/master/index.js). See the [ESLint docs](https://eslint.org/docs/rules/) for more info on each rule.\n\nPlease take a moment to consider if you really need to use this option.\n\n### semicolon\n\nType: `boolean`\\\nDefault: `true` *(Semicolons required)*\n\nSet it to `false` to enforce no-semicolon style.\n\n### prettier\n\nType: `boolean`\\\nDefault: `false`\n\nFormat code with [Prettier](https://github.com/prettier/prettier).\n\nThe [Prettier options](https://prettier.io/docs/en/options.html) will be read from the [Prettier config](https://prettier.io/docs/en/configuration.html) and if **not set** will be determined as follow:\n- [semi](https://prettier.io/docs/en/options.html#semicolons): based on [semicolon](#semicolon) option\n- [useTabs](https://prettier.io/docs/en/options.html#tabs): based on [space](#space) option\n- [tabWidth](https://prettier.io/docs/en/options.html#tab-width): based on [space](#space) option\n- [trailingComma](https://prettier.io/docs/en/options.html#trailing-commas): `none`\n- [singleQuote](https://prettier.io/docs/en/options.html#quotes): `true`\n- [bracketSpacing](https://prettier.io/docs/en/options.html#bracket-spacing): `false`\n- [jsxBracketSameLine](https://prettier.io/docs/en/options.html#jsx-brackets): `false`\n\nIf contradicting options are set for both Prettier and XO an error will be thrown.\n\n### nodeVersion\n\nType: `string | boolean`\\\nDefault: Value of the `engines.node` key in the project `package.json`\n\nEnable rules specific to the Node.js versions within the configured range.\n\nIf set to `false`, no rules specific to a Node.js version will be enabled.\n\n### plugins\n\nType: `string[]`\n\nInclude third-party [plugins](https://eslint.org/docs/user-guide/configuring.html#configuring-plugins).\n\n### extends\n\nType: `string | string[]`\n\nUse one or more [shareable configs](https://eslint.org/docs/developer-guide/shareable-configs.html) or [plugin configs](https://eslint.org/docs/user-guide/configuring#using-the-configuration-from-a-plugin) to override any of the default rules (like `rules` above).\n\n### extensions\n\nType: `string[]`\n\nAllow more extensions to be linted besides `.js` and `.jsx`. Make sure they're supported by ESLint or an ESLint plugin.\n\n### settings\n\nType: `object`\n\n[Shared ESLint settings](https://eslint.org/docs/user-guide/configuring#adding-shared-settings) exposed to rules.\n\n### parser\n\nType: `string`\n\nESLint parser. For example, [`babel-eslint`](https://github.com/babel/babel-eslint) if you're using language features that ESLint doesn't yet support.\n\n### esnext\n\nType: `boolean`\\\nDefault: `true`\n\nEnforce ES2015+ rules. Disabling this will make it not *enforce* ES2015+ syntax and conventions.\n\n*ES2015+ is parsed even without this option. You can already use ES2017 features like [`async`/`await`](https://github.com/lukehoban/ecmascript-asyncawait).\n\n### webpack\n\nType: `boolean | object`\nDefault: `false`\n\nUse [eslint-import-resolver-webpack](https://github.com/benmosher/eslint-plugin-import/tree/master/resolvers/webpack) to resolve import search paths. This is enabled automatically if a `webpack.config.js` file is found.\n\nSet this to a boolean to explicitly enable or disable the resolver.\n\nSetting this to an object enables the resolver and passes the object as configuration. See the [resolver readme](https://github.com/benmosher/eslint-plugin-import/blob/master/resolvers/webpack/README.md) along with the [webpack documentation](https://webpack.js.org/configuration/resolve/) for more information.\n\n## TypeScript and Flow\n\n### TypeScript\n\nXO will automatically lint TypeScript files (`.ts`, `.d.ts` and `.tsx`) with the rules defined in [eslint-config-xo-typescript#use-with-xo](https://github.com/xojs/eslint-config-xo-typescript#use-with-xo).\n\nXO will handle the [@typescript-eslint/parser `project` option](https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser#parseroptionsproject) automatically even if you don't have a `tsconfig.json` in your project.\n\n### Flow\n\nSee [eslint-config-xo-flow#use-with-xo](https://github.com/xojs/eslint-config-xo-flow#use-with-xo)\n\n## Config Overrides\n\nXO makes it easy to override configs for specific files. The `overrides` property must be an array of override objects. Each override object must contain a `files` property which is a glob string, or an array of glob strings, relative to the config file. The remaining properties are identical to those described above, and will override the settings of the base config. If multiple override configs match the same file, each matching override is applied in the order it appears in the array. This means the last override in the array takes precedence over earlier ones. Consider the following example:\n\n```json\n{\n\t\"xo\": {\n\t\t\"semicolon\": false,\n\t\t\"space\": 2,\n\t\t\"overrides\": [\n\t\t\t{\n\t\t\t\t\"files\": \"test/*.js\",\n\t\t\t\t\"esnext\": false,\n\t\t\t\t\"space\": 3\n\t\t\t},\n\t\t\t{\n\t\t\t\t \"files\": \"test/foo.js\",\n\t\t\t\t \"esnext\": true\n\t\t\t}\n\t\t]\n\t}\n}\n```\n\n- The base configuration is simply `space: 2`, `semicolon: false`. These settings are used for every file unless otherwise noted below.\n\n- For every file in `test/*.js`, the base config is used, but `space` is overridden with `3`, and the `esnext` option is set to `false`. The resulting config is:\n\n```json\n{\n\t\"esnext\": false,\n\t\"semicolon\": false,\n\t\"space\": 3\n}\n```\n\n- For `test/foo.js`, the base config is first applied, followed the first overrides config (its glob pattern also matches `test/foo.js`), finally the second override config is applied. The resulting config is:\n\n```json\n{\n\t\"esnext\": true,\n\t\"semicolon\": false,\n\t\"space\": 3\n}\n```\n\n## Tips\n\n### Using a parent's config\n\nIf you have a directory structure with nested `package.json` files and you want one of the child manifests to be skipped, you can do so by ommiting the `xo` property in the child's `package.json`. For example, when you have separate app and dev `package.json` files with `electron-builder`.\n\n### Monorepo\n\nPut a `package.json` with your config at the root and omit the `xo` property in the `package.json` of your bundled packages.\n\n### Transpilation\n\nIf some files in your project are transpiled in order to support an older Node.js version, you can use the [config overrides](#config-overrides) option to set a specific [`nodeVersion`](#nodeversion) to target your sources files.\n\nFor example, if your project targets Node.js 8 but you want to use the latest JavaScript syntax as supported in Node.js 12:\n1. Set the `engines.node` property of your `package.json` to `>=8`\n2. Configure [Babel](https://babeljs.io) to transpile your source files (in `src` directory in this example)\n3. Make sure to include the transpiled files in your published package with the [`files`](https://docs.npmjs.com/files/package.json#files) and [`main`](https://docs.npmjs.com/files/package.json#main) properties of your `package.json`\n4. Configure the XO `overrides` option to set `nodeVersion` to `>=12` for your source files directory\n\n```json\n{\n\t\"engines\": {\n\t\t\"node\": \">=8\"\n\t},\n\t\"scripts\": {\n\t\t\"build\": \"babel src --out-dir dist\"\n\t},\n\t\"main\": \"dist/index.js\",\n\t\"files\": [\"dist/**/*.js\"],\n\t\"xo\": {\n\t\t\"overrides\": [\n\t\t\t{\n\t\t\t\t\"files\": \"{src}/**/*.js\",\n\t\t\t\t\"nodeVersion\": \">=12\"\n\t\t\t}\n\t\t]\n\t}\n}\n```\n\nThis way your `package.json` will contain the actual minimum Node.js version supported by your published code, but XO will lint your source code as if it targets Node.js 12.\n\n### Including files ignored by default\n\nTo include files that XO [ignores by default](https://github.com/xojs/xo/blob/master/lib/constants.js#L1), add them as negative globs in the `ignores` option:\n\n```json\n{\n\t\"xo\": {\n\t\t\"ignores\": [\n\t\t\t\"!vendor/**\"\n\t\t]\n\t}\n}\n```\n\n## FAQ\n\n#### What does XO mean?\n\nIt means [hugs and kisses](https://en.wiktionary.org/wiki/xoxo).\n\n#### Why not Standard?\n\nThe [Standard style](https://standardjs.com) is a really cool idea. I too wish we could have one style to rule them all! But the reality is that the JS community is just too diverse and opinionated to create *one* code style. They also made the mistake of pushing their own style instead of the most popular one. In contrast, XO is more pragmatic and has no aspiration of being *the* style. My goal with XO is to make it simple to enforce consistent code style with close to no config. XO comes with my code style preference by default, as I mainly made it for myself, but everything is configurable.\n\n#### Why not ESLint?\n\nXO is based on ESLint. This project started out as just a shareable ESLint config, but it quickly grew out of that. I wanted something even simpler. Just typing `xo` and be done. No decision-making. No config. I also have some exciting future plans for it. However, you can still get most of the XO benefits while using ESLint directly with the [ESLint shareable config](https://github.com/xojs/eslint-config-xo).\n\n## Editor plugins\n\n- [Sublime Text](https://github.com/xojs/SublimeLinter-contrib-xo)\n- [Atom](https://github.com/xojs/atom-linter-xo)\n- [Vim](https://github.com/xojs/vim-xo)\n- [TextMate 2](https://github.com/claylo/XO.tmbundle)\n- [VSCode](https://github.com/SamVerschueren/vscode-linter-xo)\n- [Emacs](https://github.com/j-em/xo-emacs)\n- [WebStorm](https://github.com/jamestalmage/xo-with-webstorm)\n\n## Build-system plugins\n\n- [Gulp](https://github.com/xojs/gulp-xo)\n- [Grunt](https://github.com/xojs/grunt-xo)\n- [webpack loader](https://github.com/Semigradsky/xo-loader)\n- [webpack plugin](https://github.com/nstanard/xo-webpack-plugin)\n- [Metalsmith](https://github.com/blainsmith/metalsmith-xo)\n- [Fly](https://github.com/lukeed/fly-xo)\n\n## Configs\n\n- [eslint-config-xo](https://github.com/xojs/eslint-config-xo) - ESLint shareable config for XO with tab indent\n- [eslint-config-xo-space](https://github.com/xojs/eslint-config-xo-space) - ESLint shareable config for XO with 2-space indent\n- [eslint-config-xo-react](https://github.com/xojs/eslint-config-xo-react) - ESLint shareable config for React to be used with the above\n- [eslint-config-xo-vue](https://github.com/ChocPanda/eslint-config-xo-vue) - ESLint shareable config for Vue to be used with the above\n- [stylelint-config-xo](https://github.com/xojs/stylelint-config-xo) - Stylelint shareable config for XO with tab indent\n- [stylelint-config-xo-space](https://github.com/xojs/stylelint-config-xo-space) - Stylelint shareable config for XO with 2-space indent\n- [tslint-xo](https://github.com/xojs/tslint-xo) - TSLint shareable config for XO\n- [eslint-config-xo-typescript](https://github.com/xojs/eslint-config-xo-typescript) - ESLint shareable config for TypeScript\n- [eslint-config-xo-flow](https://github.com/xojs/eslint-config-xo-flow) - ESLint shareable config for Flow\n\n## Support\n\n- [Twitter](https://twitter.com/sindresorhus)\n\n## Related\n\n- [eslint-plugin-unicorn](https://github.com/sindresorhus/eslint-plugin-unicorn) - Various awesome ESLint rules *(Bundled in XO)*\n- [xo-summary](https://github.com/LitoMore/xo-summary) - Display output from `xo` as a list of style errors, ordered by count\n\n## Badge\n\nShow the world you're using XO \u2192 [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo)\n\n```md\n[![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo)\n```\n\nYou can also find some nice dynamic XO badges on [badgen.net](https://badgen.net/#xo).\n\n## Team\n\n[![Sindre Sorhus](https://github.com/sindresorhus.png?size=130)](https://sindresorhus.com) | [![Mario Nebl](https://github.com/marionebl.png?size=130)](https://github.com/marionebl) | [![Pierre Vanduynslager](https://github.com/pvdlg.png?size=130)](https://github.com/pvdlg)\n---|---|---\n[Sindre Sorhus](https://sindresorhus.com) | [Mario Nebl](https://github.com/marionebl) | [Pierre Vanduynslager](https://github.com/pvdlg)\n\n###### Former\n\n- [James Talmage](https://github.com/jamestalmage)\n- [Michael Mayer](https://github.com/schnittstabil)"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6739}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 32310}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 122731}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 384572}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 659048}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1149736}], "dependentsCount": 55, "starsCount": 34}, "github": {"starsCount": 5099, "forksCount": 275, "subscribersCount": 68, "issues": {"count": 481, "openCount": 70, "distribution": {"3600": 72, "10800": 31, "32400": 26, "97200": 54, "291600": 38, "874800": 34, "2624400": 59, "7873200": 50, "23619600": 39, "70858800": 38, "212576400": 40}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 262}, {"username": "pvdlg", "commitsCount": 42}, {"username": "jamestalmage", "commitsCount": 7}, {"username": "marionebl", "commitsCount": 7}, {"username": "kevva", "commitsCount": 5}, {"username": "schnittstabil", "commitsCount": 4}, {"username": "vadimdemedes", "commitsCount": 4}, {"username": "coreyfarrell", "commitsCount": 3}, {"username": "OmgImAlexis", "commitsCount": 2}, {"username": "brandon93s", "commitsCount": 2}, {"username": "fregante", "commitsCount": 2}, {"username": "joakimbeng", "commitsCount": 2}, {"username": "kevinastone", "commitsCount": 2}, {"username": "luftywiranda13", "commitsCount": 2}, {"username": "noahbrenner", "commitsCount": 2}, {"username": "ChocPanda", "commitsCount": 1}, {"username": "EdJoPaTo", "commitsCount": 1}, {"username": "LinusU", "commitsCount": 1}, {"username": "LitoMore", "commitsCount": 1}, {"username": "Richienb", "commitsCount": 1}, {"username": "SamVerschueren", "commitsCount": 1}, {"username": "abhisekp", "commitsCount": 1}, {"username": "abread", "commitsCount": 1}, {"username": "antleblanc", "commitsCount": 1}, {"username": "arthurvr", "commitsCount": 1}, {"username": "azz", "commitsCount": 1}, {"username": "beatfreaker", "commitsCount": 1}, {"username": "blainsmith", "commitsCount": 1}, {"username": "charlesbjohnson", "commitsCount": 1}, {"username": "cherryblossom000", "commitsCount": 1}, {"username": "chroventer", "commitsCount": 1}, {"username": "claylo", "commitsCount": 1}, {"username": "deadcoder0904", "commitsCount": 1}, {"username": "denniss17", "commitsCount": 1}, {"username": "dflupu", "commitsCount": 1}, {"username": "dustinspecker", "commitsCount": 1}, {"username": "ekmartin", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "forivall", "commitsCount": 1}, {"username": "futpib", "commitsCount": 1}, {"username": "gautaz", "commitsCount": 1}, {"username": "j-em", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jfmengels", "commitsCount": 1}, {"username": "jorgegonzalez", "commitsCount": 1}, {"username": "juanj", "commitsCount": 1}, {"username": "lawshe", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "mateatslc", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "nstanard", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "odensc", "commitsCount": 1}, {"username": "pattyjogal", "commitsCount": 1}, {"username": "pi0", "commitsCount": 1}, {"username": "rosszurowski", "commitsCount": 1}, {"username": "sterpe", "commitsCount": 1}, {"username": "tcoenraad", "commitsCount": 1}, {"username": "timdeschryver", "commitsCount": 1}, {"username": "tjrgg", "commitsCount": 1}, {"username": "wmertens", "commitsCount": 1}, {"username": "wuweiweiwu", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 8}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 34}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 58}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 88}], "statuses": [{"context": "coverage/coveralls", "state": "success"}]}, "source": {"files": {"readmeSize": 18764, "testsSize": 57638}, "badges": [{"urls": {"original": "https://coveralls.io/repos/github/xojs/xo/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/xojs/xo/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/xojs/xo/master.svg", "content": "https://img.shields.io/coveralls/xojs/xo/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.96, "outdatedDependencies": {"meow": {"required": "^5.0.0", "stable": "7.0.1", "latest": "7.0.1"}, "globby": {"required": "^9.0.0", "stable": "11.0.1", "latest": "11.0.1"}, "prettier": {"required": "2.0.4", "stable": "2.0.5", "latest": "2.0.5"}}}}, "evaluation": {"quality": {"carefulness": 0.45999999999999996, "tests": 0.994, "health": 0.8604651162790697, "branding": 0.15}, "popularity": {"communityInterest": 5538, "downloadsCount": 128190.66666666667, "downloadsAcceleration": 363.1219558599695, "dependentsCount": 55}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9719315068493151, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6207007716622951, "detail": {"quality": 0.8883466829323239, "popularity": 0.3453243603623271, "maintenance": 0.666666401873667}}}}, {"grunt-cli": {"analyzedAt": "2020-06-14T13:46:49.659Z", "collected": {"metadata": {"name": "grunt-cli", "scope": "unscoped", "version": "1.3.2", "description": "The grunt command line interface", "date": "2018-11-04T19:29:37.415Z", "author": {"name": "Grunt Development Team", "url": "http://gruntjs.com/development-team"}, "publisher": {"username": "vladikoff", "email": "vlad@vladikoff.com"}, "maintainers": [{"username": "cowboy", "email": "cowboy@rj3.net"}, {"username": "shama", "email": "kyle@dontkry.com"}, {"username": "tkellen", "email": "tyler@sleekcode.net"}, {"username": "vladikoff", "email": "vlad@vladikoff.com"}], "contributors": [{"name": "Akshay Patel"}, {"name": "Alex Whitman"}, {"name": "Ben Alman"}, {"name": "ForbesLindesay"}, {"name": "Henrik Kok J\u00f8rgensen"}, {"name": "Jeffrey Lembeck"}, {"name": "JKAussieSkater"}, {"name": "Justin Ridgewell"}, {"name": "Kyle Robinson Young"}, {"name": "mcandre"}, {"name": "Nick Schonning"}, {"name": "paladox"}, {"name": "Peter deHaan"}, {"name": "Pine Mizune"}, {"name": "Scott Gonz\u00e1lez"}, {"name": "Sindre Sorhus"}, {"name": "Teppei Sato"}, {"name": "Tom McTiernan"}, {"name": "Tyler Kellen"}, {"name": "Vlad Filippov"}, {"name": "XhmikosR"}], "repository": {"type": "git", "url": "git+https://github.com/gruntjs/grunt-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/grunt-cli", "homepage": "https://github.com/gruntjs/grunt-cli#readme", "repository": "https://github.com/gruntjs/grunt-cli", "bugs": "https://github.com/gruntjs/grunt-cli/issues"}, "license": "MIT", "dependencies": {"grunt-known-options": "~1.1.0", "interpret": "~1.1.0", "liftoff": "~2.5.0", "nopt": "~4.0.1", "v8flags": "~3.1.1"}, "devDependencies": {"grunt": "~1.0.2", "grunt-contrib-jshint": "~1.1.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# grunt-cli [![Build Status: Linux](https://travis-ci.org/gruntjs/grunt-cli.svg?branch=master)](https://travis-ci.org/gruntjs/grunt-cli) [![Build Status: Windows](https://ci.appveyor.com/api/projects/status/prp6g944b05jsq6d/branch/master?svg=true)](https://ci.appveyor.com/project/gruntjs/grunt-cli/branch/master)\n\n> The Grunt command line interface.\n\nInstall this globally and you'll have access to the `grunt` command anywhere on your system.\n\n```shell\nnpm install -g grunt-cli\n```\n\n**Note:** The job of the `grunt` command is to load and run the version of Grunt you have installed locally to your project, irrespective of its version.  Starting with Grunt v0.4, you should never install Grunt itself globally.  For more information about why, [please read this](http://nodejs.org/en/blog/npm/npm-1-0-global-vs-local-installation).\n\nSee the [Getting Started](http://gruntjs.com/getting-started) guide for more information.\n\n## Shell tab auto-completion\nTo enable tab auto-completion for Grunt, add one of the following lines to your `~/.bashrc` or `~/.zshrc` file.\n\n```bash\n# Bash, ~/.bashrc\neval \"$(grunt --completion=bash)\"\n```\n\n```bash\n# Zsh, ~/.zshrc\neval \"$(grunt --completion=zsh)\"\n```\n\n## Installing grunt-cli locally\nIf you prefer the idiomatic Node.js method to get started with a project (`npm install && npm test`) then install grunt-cli locally with `npm install grunt-cli --save-dev`. Then add a script to your `package.json` to run the associated grunt command: `\"scripts\": { \"test\": \"grunt test\" } `. Now `npm test` will use the locally installed `./node_modules/.bin/grunt` executable to run your Grunt commands.\n\nTo read more about npm scripts, please visit the npm docs: <https://docs.npmjs.com/misc/scripts>."}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 38645}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 703565}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2924619}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9077835}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 16867660}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 34006480}], "dependentsCount": 410, "starsCount": 319}, "github": {"homepage": "http://gruntjs.com/", "starsCount": 703, "forksCount": 249, "subscribersCount": 50, "issues": {"count": 135, "openCount": 15, "distribution": {"3600": 36, "10800": 8, "32400": 17, "97200": 8, "291600": 11, "874800": 13, "2624400": 6, "7873200": 6, "23619600": 13, "70858800": 9, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "cowboy", "commitsCount": 20}, {"username": "shama", "commitsCount": 15}, {"username": "tkellen", "commitsCount": 15}, {"username": "vladikoff", "commitsCount": 11}, {"username": "XhmikosR", "commitsCount": 7}, {"username": "hkjorgensen", "commitsCount": 2}, {"username": "ForbesLindesay", "commitsCount": 1}, {"username": "JulianKniephoff", "commitsCount": 1}, {"username": "akshayp", "commitsCount": 1}, {"username": "alexwhitman", "commitsCount": 1}, {"username": "jefflembeck", "commitsCount": 1}, {"username": "jridgewell", "commitsCount": 1}, {"username": "mcandre", "commitsCount": 1}, {"username": "nschonni", "commitsCount": 1}, {"username": "paladox", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "pine", "commitsCount": 1}, {"username": "scottgonzalez", "commitsCount": 1}, {"username": "sindresorhus", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "tmct", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 1731, "testsSize": 0, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/gruntjs/grunt-cli.svg?branch=master", "service": "https://api.travis-ci.org/gruntjs/grunt-cli.svg?branch=master", "shields": "https://img.shields.io/travis/gruntjs/grunt-cli/master.svg", "content": "https://img.shields.io/travis/gruntjs/grunt-cli/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/prp6g944b05jsq6d/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/prp6g944b05jsq6d/branch/master", "shields": "https://img.shields.io/appveyor/ci/prp6g944b05jsq6d/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/prp6g944b05jsq6d/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["jshint"], "outdatedDependencies": {"interpret": {"required": "~1.1.0", "stable": "2.2.0", "latest": "2.2.0"}, "v8flags": {"required": "~3.1.1", "stable": "3.2.0", "latest": "3.2.0"}, "liftoff": {"required": "~2.5.0", "stable": "3.1.0", "latest": "3.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.25, "health": 0.5, "branding": 0.3}, "popularity": {"communityInterest": 1342, "downloadsCount": 3025945, "downloadsAcceleration": 1214.9113774733669, "dependentsCount": 410}, "maintenance": {"releasesFrequency": 0.04931506849315069, "commitsFrequency": 0, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.47192625338345806, "detail": {"quality": 0.797526914059447, "popularity": 0.44810108029730444, "maintenance": 0.21666514589019265}}}}, {"@babel/polyfill": {"analyzedAt": "2020-06-04T16:58:15.733Z", "collected": {"metadata": {"name": "@babel/polyfill", "scope": "babel", "version": "7.10.1", "description": "Provides polyfills necessary for a full ES2015+ environment", "date": "2020-05-27T22:06:52.185Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-polyfill"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpolyfill", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"core-js": "^2.6.5", "regenerator-runtime": "^0.13.4"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 25}], "readme": "# @babel/polyfill\n\n> Provides polyfills necessary for a full ES2015+ environment\n\n\n**This package has been deprecated in favor of separate inclusion of required parts of [`core-js`](https://github.com/zloirock/core-js) and [`regenerator-runtime`](https://www.npmjs.com/package/regenerator-runtime). See our website [@babel/polyfill](https://babeljs.io/docs/en/next/babel-polyfill.html) for more information.**\n\nSee our website [@babel/polyfill](https://babeljs.io/docs/en/next/babel-polyfill.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20polyfill%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save @babel/polyfill\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/polyfill \n```"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 508815}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2642748}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 11528706}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 34893511}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 63039130}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 119972969}], "dependentsCount": 2825, "starsCount": 1}, "github": {"homepage": "https://babeljs.io/", "starsCount": 36705, "forksCount": 4307, "subscribersCount": 866, "issues": {"count": 11596, "openCount": 781, "distribution": {"3600": 2461, "10800": 916, "32400": 1062, "97200": 1239, "291600": 1053, "874800": 1006, "2624400": 849, "7873200": 805, "23619600": 845, "70858800": 1091, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 450}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 189}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "kedromelon", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 52}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 211}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 415}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 796, "testsSize": 12280590, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/master.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=master", "shields": "https://img.shields.io/travis/com/babel/babel/master.svg", "content": "https://img.shields.io/travis/com/babel/babel/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/master.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/master.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/master.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/master.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"core-js": {"required": "^2.6.5", "stable": "3.6.5", "latest": "3.6.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 41978, "downloadsCount": 11631170.333333334, "downloadsAcceleration": 19280.364345509894, "dependentsCount": 2825}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24000529405616738}}, "score": {"final": 0.8620158541897807, "detail": {"quality": 0.9480551633850297, "popularity": 0.7603425987976675, "maintenance": 0.8899411302716802}}}}, {"eslint-plugin-react-hooks": {"analyzedAt": "2020-06-04T02:29:20.501Z", "collected": {"metadata": {"name": "eslint-plugin-react-hooks", "scope": "unscoped", "version": "4.0.4", "description": "ESLint rules for React Hooks", "keywords": ["eslint", "eslint-plugin", "eslintplugin", "react"], "date": "2020-05-27T00:23:32.424Z", "publisher": {"username": "gaearon", "email": "dan.abramov@gmail.com"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "threepointone", "email": "threepointone@gmail.com"}, {"username": "trueadm", "email": "dg@domgan.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/eslint-plugin-react-hooks"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-react-hooks", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "devDependencies": {"@typescript-eslint/parser": "^2.26.0"}, "peerDependencies": {"eslint": "^3.0.0 || ^4.0.0 || ^5.0.0 || ^6.0.0 || ^7.0.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 7}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 18}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 36}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 76}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 109}], "hasSelectiveFiles": true, "readme": "# `eslint-plugin-react-hooks`\n\nThis ESLint plugin enforces the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html).\n\nIt is a part of the [Hooks API](https://reactjs.org/docs/hooks-intro.html) for React.\n\n## Installation\n\n**Note: If you're using Create React App, please use `react-scripts` >= 3 instead of adding it directly.**\n\nAssuming you already have ESLint installed, run:\n\n```sh\n# npm\nnpm install eslint-plugin-react-hooks --save-dev\n\n# yarn\nyarn add eslint-plugin-react-hooks --dev\n```\n\nThen extend the recommended eslint config:\n\n```js\n{\n  \"extends\": [\n    // ...\n    \"plugin:react-hooks/recommended\"\n  ]\n}\n```\n\n### Custom Configuration\n\nIf you want more fine-grained configuration, you can instead add a snippet like this to your ESLint configuration file:\n\n```js\n{\n  \"plugins\": [\n    // ...\n    \"react-hooks\"\n  ],\n  \"rules\": {\n    // ...\n    \"react-hooks/rules-of-hooks\": \"error\",\n    \"react-hooks/exhaustive-deps\": \"warn\"\n  }\n}\n```\n\n\n## Valid and Invalid Examples\n\nPlease refer to the [Rules of Hooks](https://reactjs.org/docs/hooks-rules.html) documentation and the [Hooks FAQ](https://reactjs.org/docs/hooks-faq.html#what-exactly-do-the-lint-rules-enforce) to learn more about this rule.\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 745908}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 3819540}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 16702720}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 46833293}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 77155702}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 116797299}], "dependentsCount": 2251, "starsCount": 1}, "github": {"homepage": "https://reactjs.org", "starsCount": 149853, "forksCount": 29146, "subscribersCount": 6666, "issues": {"count": 18861, "openCount": 610, "distribution": {"3600": 3818, "10800": 1823, "32400": 1864, "97200": 2339, "291600": 1801, "874800": 1677, "2624400": 1377, "7873200": 1186, "23619600": 1424, "70858800": 1195, "212576400": 357}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1382}, {"username": "bvaughn", "commitsCount": 1215}, {"username": "sophiebits", "commitsCount": 874}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 699}, {"username": "acdlite", "commitsCount": 689}, {"username": "trueadm", "commitsCount": 391}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 55}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 27}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "rickhanlonii", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 84}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 387}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 663}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1401}], "statuses": [{"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 1852, "testsSize": 230483, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/react.svg?style=flat", "shields": "https://img.shields.io/npm/v/react.svg", "content": "https://img.shields.io/npm/v/react.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://circleci.com/gh/facebook/react.svg?circle-token=:circle-token", "service": "https://circleci.com/gh/facebook/react.svg", "shields": "https://img.shields.io/circleci/project/github/facebook/react.svg", "content": "https://img.shields.io/circleci/project/github/facebook/react.json"}, "info": {"service": "circleci", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.679, "health": 1, "branding": 0.7}, "popularity": {"communityInterest": 185766, "downloadsCount": 15611097.666666666, "downloadsAcceleration": 86353.73055555558, "dependentsCount": 2251}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4274054832449976}}, "score": {"final": 0.9129979938955586, "detail": {"quality": 0.9559337695193194, "popularity": 0.8155969339012639, "maintenance": 0.9735969604980583}}}}, {"jest-cli": {"analyzedAt": "2020-05-08T13:34:56.184Z", "collected": {"metadata": {"name": "jest-cli", "scope": "unscoped", "version": "26.0.1", "description": "Delightful JavaScript Testing.", "keywords": ["ava", "babel", "coverage", "easy", "expect", "facebook", "immersive", "instant", "jasmine", "jest", "jsdom", "mocha", "mocking", "painless", "qunit", "runner", "sandboxed", "snapshot", "tap", "tape", "test", "testing", "typescript", "watch"], "date": "2020-05-05T10:41:46.256Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git", "directory": "packages/jest-cli"}, "links": {"npm": "https://www.npmjs.com/package/jest-cli", "homepage": "https://jestjs.io/", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/core": "^26.0.1", "@jest/test-result": "^26.0.1", "@jest/types": "^26.0.1", "chalk": "^4.0.0", "exit": "^0.1.2", "graceful-fs": "^4.2.4", "import-local": "^3.0.2", "is-ci": "^2.0.0", "jest-config": "^26.0.1", "jest-util": "^26.0.1", "jest-validate": "^26.0.1", "prompts": "^2.0.1", "yargs": "^15.3.1"}, "devDependencies": {"@jest/test-utils": "^26.0.0", "@types/exit": "^0.1.30", "@types/graceful-fs": "^4.1.3", "@types/is-ci": "^2.0.0", "@types/prompts": "^2.0.1", "@types/yargs": "^15.0.0"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 14}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 24}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 25}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 27}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 69}], "readme": "# Jest\n\n\ud83c\udccf Delightful JavaScript Testing\n\n- **\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb Developer Ready**: Complete and ready to set-up JavaScript testing solution. Works out of the box for any React project.\n\n- **\ud83c\udfc3\ud83c\udffd Instant Feedback**: Failed tests run first. Fast interactive mode can switch between running all tests or only test files related to changed files.\n\n- **\ud83d\udcf8 Snapshot Testing**: Jest can [capture snapshots](https://jestjs.io/docs/snapshot-testing.html) of React trees or other serializable values to simplify UI testing.\n\nRead More: https://jestjs.io/"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1434721}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 7312232}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 31902885}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 89293112}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 153176528}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 273469726}], "dependentsCount": 354, "starsCount": 42}, "github": {"homepage": "https://jestjs.io", "starsCount": 30821, "forksCount": 4362, "subscribersCount": 520, "issues": {"count": 9962, "openCount": 1017, "distribution": {"3600": 2086, "10800": 924, "32400": 930, "97200": 1294, "291600": 937, "874800": 817, "2624400": 729, "7873200": 661, "23619600": 653, "70858800": 804, "212576400": 127}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 622}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "rubennorte", "commitsCount": 55}, {"username": "jeysal", "commitsCount": 53}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "Connormiha", "commitsCount": 37}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "ai", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stephtr", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 38}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 140}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 244}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 368}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 597}], "statuses": [{"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 551, "testsSize": 21528, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 35845, "downloadsCount": 29764370.666666668, "downloadsAcceleration": 103986.48976407916, "dependentsCount": 354}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4433456220799708}}, "score": {"final": 0.8882837864914956, "detail": {"quality": 0.9487312745630544, "popularity": 0.7478534193148406, "maintenance": 0.9769020210353859}}}}, {"gulp-eslint": {"analyzedAt": "2020-06-14T06:29:43.600Z", "collected": {"metadata": {"name": "gulp-eslint", "scope": "unscoped", "version": "6.0.0", "description": "A gulp plugin for processing files with ESLint", "keywords": ["gulpplugin", "eslint", "gulp", "errors", "warnings", "check", "source", "code", "formatter", "js", "javascript", "task", "lint", "plugin"], "date": "2019-06-28T16:56:42.582Z", "author": {"name": "Adametry"}, "publisher": {"username": "shinnn", "email": "snnskwtnb@gmail.com"}, "maintainers": [{"username": "adametry", "email": "dark.account@gmail.com"}, {"username": "shinnn", "email": "snnskwtnb@gmail.com"}], "contributors": [{"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com", "url": "https://github.com/shinnn"}], "repository": {"type": "git", "url": "git+https://github.com/adametry/gulp-eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp-eslint", "homepage": "https://github.com/adametry/gulp-eslint#readme", "repository": "https://github.com/adametry/gulp-eslint", "bugs": "https://github.com/adametry/gulp-eslint/issues"}, "license": "MIT", "dependencies": {"eslint": "^6.0.0", "fancy-log": "^1.3.2", "plugin-error": "^1.0.1"}, "devDependencies": {"@shinnn/eslint-config-node": "^5.0.0", "babel-eslint": "^8.2.5", "from2-string": "^1.1.0", "gulp": "^4.0.0", "istanbul": "^0.4.5", "mocha": "^5.2.0", "should": "^13.2.1", "vinyl": "^2.2.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# gulp-eslint [![Build Status](https://travis-ci.org/adametry/gulp-eslint.svg)](https://travis-ci.org/adametry/gulp-eslint) [![Coverage Status](https://img.shields.io/coveralls/adametry/gulp-eslint.svg)](https://coveralls.io/github/adametry/gulp-eslint)\n\n> A [gulp](https://gulpjs.com/) plugin for [ESLint](https://eslint.org/)\n\n## Installation\n\n[Use](https://docs.npmjs.com/cli/install) [npm](https://docs.npmjs.com/getting-started/what-is-npm).\n\n```\nnpm install gulp-eslint\n```\n\n## Usage\n\n```javascript\nconst {src, task} = require('gulp');\nconst eslint = require('gulp-eslint');\n\ntask('default', () => {\n    return src(['scripts/*.js'])\n        // eslint() attaches the lint output to the \"eslint\" property\n        // of the file object so it can be used by other modules.\n        .pipe(eslint())\n        // eslint.format() outputs the lint results to the console.\n        // Alternatively use eslint.formatEach() (see Docs).\n        .pipe(eslint.format())\n        // To have the process exit with an error code (1) on\n        // lint error, return the stream and pipe to failAfterError last.\n        .pipe(eslint.failAfterError());\n});\n```\n\nOr use the plugin API to do things like:\n\n```javascript\ngulp.src(['**/*.js','!node_modules/**'])\n\t.pipe(eslint({\n\t\trules: {\n\t\t\t'my-custom-rule': 1,\n\t\t\t'strict': 2\n\t\t},\n\t\tglobals: [\n\t\t\t'jQuery',\n\t\t\t'$'\n\t\t],\n\t\tenvs: [\n\t\t\t'browser'\n\t\t]\n\t}))\n\t.pipe(eslint.formatEach('compact', process.stderr));\n```\n\nFor additional examples, look through the [example directory](https://github.com/adametry/gulp-eslint/tree/master/example).\n\n## API\n\n### eslint()\n\n*No explicit configuration.* A `.eslintrc` file may be resolved relative to each linted file.\n\n### eslint(options)\nSee [ESlint CLIEngine options](https://eslint.org/docs/developer-guide/nodejs-api#cliengine).\n\n#### options.rules\n\nType: `Object`\n\nSet [configuration](https://eslint.org/docs/user-guide/configuring#configuring-rules) of [rules](https://eslint.org/docs/rules/).\n\n```javascript\n{\n\t\"rules\":{\n\t\t\"camelcase\": 1,\n\t\t\"comma-dangle\": 2,\n\t\t\"quotes\": 0\n\t}\n}\n```\n\n#### options.globals\n\nType: `Array`\n\nSpecify global variables to declare.\n\n```javascript\n{\n\t\"globals\":[\n\t\t\"jQuery\",\n\t\t\"$\"\n\t]\n}\n```\n\n#### options.fix\n\nType: `Boolean`\n\nThis option instructs ESLint to try to fix as many issues as possible. The fixes are applied to the gulp stream. The fixed content can be saved to file using `gulp.dest` (See [example/fix.js](https://github.com/adametry/gulp-eslint/blob/master/example/fix.js)). Rules that are fixable can be found in ESLint's [rules list](https://eslint.org/docs/rules/).\n\nWhen fixes are applied, a \"fixed\" property is set to `true` on the fixed file's ESLint result.\n\n#### options.quiet\n\nType: `Boolean`\n\nWhen `true`, this option will filter warning messages from ESLint results. This mimics the ESLint CLI [quiet option](https://eslint.org/docs/user-guide/command-line-interface#quiet).\n\nType: `function (message, index, list) { return Boolean(); }`\n\nWhen provided a function, it will be used to filter ESLint result messages, removing any messages that do not return a `true` (or truthy) value.\n\n#### options.envs\n\nType: `Array`\n\nSpecify a list of [environments](https://eslint.org/docs/user-guide/configuring#specifying-environments) to be applied.\n\n#### options.rulePaths\n\nType: `Array`\n\nThis option allows you to specify additional directories from which to load rules files. This is useful when you have custom rules that aren't suitable for being bundled with ESLint. This option works much like the ESLint CLI's [rulesdir option](https://eslint.org/docs/user-guide/command-line-interface#rulesdir).\n\n#### options.configFile\n\nType: `String`\n\nPath to the ESLint rules configuration file. For more information, see the ESLint CLI [config option](https://eslint.org/docs/user-guide/command-line-interface#c-config) and [Using Configuration Files](https://eslint.org/docs/user-guide/configuring#using-configuration-files).\n\n#### options.warnFileIgnored\n\nType: `Boolean`\n\nWhen `true`, add a result warning when ESLint ignores a file. This can be used to file files that are needlessly being loaded by `gulp.src`. For example, since ESLint automatically ignores \"node_modules\" file paths and gulp.src does not, a gulp task may take seconds longer just reading files from the \"node_modules\" directory.\n\n#### <a name=\"options.useEslintrc\"></a>options.useEslintrc\n\nType: `Boolean`\n\nWhen `false`, ESLint will not load [.eslintrc files](https://eslint.org/docs/user-guide/configuring#using-configuration-files).\n\n### eslint(configFilePath)\n\nType: `String`\n\nShorthand for defining `options.configFile`.\n\n### eslint.result(action)\n\nType: `function (result) {}`\n\nCall a function for each ESLint file result. No returned value is expected. If an error is thrown, it will be wrapped in a Gulp PluginError and emitted from the stream.\n\n```javascript\ngulp.src(['**/*.js','!node_modules/**'])\n\t.pipe(eslint())\n\t.pipe(eslint.result(result => {\n\t    // Called for each ESLint result.\n\t    console.log(`ESLint result: ${result.filePath}`);\n\t    console.log(`# Messages: ${result.messages.length}`);\n\t    console.log(`# Warnings: ${result.warningCount}`);\n\t    console.log(`# Errors: ${result.errorCount}`);\n\t}));\n```\n\nType: `function (result, callback) { callback(error); }`\n\nCall an asynchronous function for each ESLint file result. The callback must be called for the stream to finish. If a value is passed to the callback, it will be wrapped in a Gulp PluginError and emitted from the stream.\n\n\n### eslint.results(action)\n\nType: `function (results) {}`\n\nCall a function once for all ESLint file results before a stream finishes. No returned value is expected. If an error is thrown, it will be wrapped in a Gulp PluginError and emitted from the stream.\n\nThe results list has a \"warningCount\" property that is the sum of warnings in all results; likewise, an \"errorCount\" property is set to the sum of errors in all results.\n\n```javascript\ngulp.src(['**/*.js','!node_modules/**'])\n\t.pipe(eslint())\n\t.pipe(eslint.results(results => {\n    \t// Called once for all ESLint results.\n\t    console.log(`Total Results: ${results.length}`);\n\t    console.log(`Total Warnings: ${results.warningCount}`);\n\t    console.log(`Total Errors: ${results.errorCount}`);\n\t}));\n```\n\nType: `function (results, callback) { callback(error); }`\n\nCall an asynchronous function once for all ESLint file results before a stream finishes. The callback must be called for the stream to finish. If a value is passed to the callback, it will be wrapped in a Gulp PluginError and emitted from the stream.\n\n### eslint.failOnError()\n\nStop a task/stream if an ESLint error has been reported for any file.\n\n```javascript\n// Cause the stream to stop(/fail) before copying an invalid JS file to the output directory\ngulp.src(['**/*.js','!node_modules/**'])\n\t.pipe(eslint())\n\t.pipe(eslint.failOnError());\n```\n\n### eslint.failAfterError()\n\nStop a task/stream if an ESLint error has been reported for any file, but wait for all of them to be processed first.\n\n```javascript\n// Cause the stream to stop(/fail) when the stream ends if any ESLint error(s) occurred.\ngulp.src(['**/*.js','!node_modules/**'])\n\t.pipe(eslint())\n\t.pipe(eslint.failAfterError());\n```\n\n### eslint.format(formatter, output)\n\nFormat all linted files once. This should be used in the stream after piping through `eslint`; otherwise, this will find no ESLint results to format.\n\nThe `formatter` argument may be a `String`, `Function`, or `undefined`. As a `String`, a formatter module by that name or path will be resolved as a module, relative to `process.cwd()`, or as one of the [ESLint-provided formatters](https://github.com/eslint/eslint/tree/master/lib/formatters). If `undefined`, the ESLint \u201cstylish\u201d formatter will be resolved. A `Function` will be called with an `Array` of file linting results to format.\n\n```javascript\n// use the default \"stylish\" ESLint formatter\neslint.format()\n\n// use the \"checkstyle\" ESLint formatter\neslint.format('checkstyle')\n\n// use the \"eslint-path-formatter\" module formatter\n// (@see https://github.com/Bartvds/eslint-path-formatter)\neslint.format('node_modules/eslint-path-formatter')\n```\n\nThe `output` argument may be a `WritableStream`, `Function`, or `undefined`. As a `WritableStream`, the formatter results will be written to the stream. If `undefined`, the formatter results will be written to [gulp\u2019s log](https://github.com/gulpjs/gulp-util#logmsg). A `Function` will be called with the formatter results as the only parameter.\n\n```javascript\n// write to gulp's log (default)\neslint.format();\n\n// write messages to stdout\neslint.format('junit', process.stdout)\n```\n\n### eslint.formatEach(formatter, output)\n\nFormat each linted file individually. This should be used in the stream after piping through `eslint`; otherwise, this will find no ESLint results to format.\n\nThe arguments for `formatEach` are the same as the arguments for `format`.\n\n\n## Configuration\n\nESLint may be configured explicity by using any of the following plugin options: `config`, `rules`, `globals`, or `env`. If the [useEslintrc option](#useEslintrc) is not set to `false`, ESLint will attempt to resolve a file by the name of `.eslintrc` within the same directory as the file to be linted. If not found there, parent directories will be searched until `.eslintrc` is found or the directory root is reached.\n\n## Ignore Files\n\nESLint will ignore files that do not have a `.js` file extension at the point of linting ([some plugins](https://github.com/contra/gulp-coffee) may change file extensions mid-stream). This avoids unintentional linting of non-JavaScript files.\n\nESLint will also detect an `.eslintignore` file at the cwd or a parent directory. See the [ESLint docs](https://eslint.org/docs/user-guide/configuring#ignoring-files-and-directories) to learn how to construct this file.\n\n## Extensions\n\nESLint results are attached as an \"eslint\" property to the vinyl files that pass through a Gulp.js stream pipeline. This is available to streams that follow the initial `eslint` stream. The [eslint.result](#result) and [eslint.results](#results) methods are made available to support extensions and custom handling of ESLint results.\n\n#### Gulp-Eslint Extensions:\n\n* [gulp-eslint-if-fixed](https://github.com/lukeapage/gulp-eslint-if-fixed)\n* [gulp-eslint-threshold](https://github.com/krmbkt/gulp-eslint-threshold)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8215}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 201056}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 830304}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2625548}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 5012329}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 9966643}], "dependentsCount": 431, "starsCount": 83}, "github": {"starsCount": 557, "forksCount": 106, "subscribersCount": 13, "issues": {"count": 251, "openCount": 21, "distribution": {"3600": 38, "10800": 11, "32400": 35, "97200": 38, "291600": 21, "874800": 24, "2624400": 10, "7873200": 35, "23619600": 25, "70858800": 9, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "adametry", "commitsCount": 100}, {"username": "shinnn", "commitsCount": 62}, {"username": "ilanbiala", "commitsCount": 4}, {"username": "ReadmeCritic", "commitsCount": 2}, {"username": "ehmicky", "commitsCount": 2}, {"username": "5im0n", "commitsCount": 1}, {"username": "ArnaudRinquin", "commitsCount": 1}, {"username": "Jakobo", "commitsCount": 1}, {"username": "Kingdutch", "commitsCount": 1}, {"username": "MichaelFoss", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "alyssaq", "commitsCount": 1}, {"username": "aruberto", "commitsCount": 1}, {"username": "benmccann", "commitsCount": 1}, {"username": "bobthecow", "commitsCount": 1}, {"username": "boo1ean", "commitsCount": 1}, {"username": "csabapalfi", "commitsCount": 1}, {"username": "gabeno", "commitsCount": 1}, {"username": "jhorwit2", "commitsCount": 1}, {"username": "jlandure", "commitsCount": 1}, {"username": "jrf0110", "commitsCount": 1}, {"username": "mightyiam", "commitsCount": 1}, {"username": "mjeanroy", "commitsCount": 1}, {"username": "ncuillery", "commitsCount": 1}, {"username": "posva", "commitsCount": 1}, {"username": "ptarjan", "commitsCount": 1}, {"username": "riddla", "commitsCount": 1}, {"username": "soda0289", "commitsCount": 1}, {"username": "tcoopman", "commitsCount": 1}, {"username": "willpracht", "commitsCount": 1}, {"username": "wltsmrz", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 10373, "testsSize": 31176, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/adametry/gulp-eslint.svg", "service": "https://api.travis-ci.org/adametry/gulp-eslint.svg", "shields": "https://img.shields.io/travis/adametry/gulp-eslint.svg", "content": "https://img.shields.io/travis/adametry/gulp-eslint.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/adametry/gulp-eslint.svg", "service": "https://coveralls.io/repos/adametry/gulp-eslint/badge.svg", "shields": "https://img.shields.io/coveralls/adametry/gulp-eslint.svg", "content": "https://img.shields.io/coveralls/adametry/gulp-eslint.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint"], "coverage": 0.99, "outdatedDependencies": {"eslint": {"required": "^6.0.0", "stable": "7.2.0", "latest": "7.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9984999999999999, "health": 0.75, "branding": 0.3}, "popularity": {"communityInterest": 790, "downloadsCount": 875182.6666666666, "downloadsAcceleration": 227.8324391172, "dependentsCount": 431}, "maintenance": {"releasesFrequency": 0.1356164383561644, "commitsFrequency": 0.023013698630136987, "openIssues": 1, "issuesDistribution": 0.4948905907305122}}, "score": {"final": 0.6499943779432766, "detail": {"quality": 0.9858781024251619, "popularity": 0.3716144631038829, "maintenance": 0.6404739575124831}}}}, {"babel-plugin-transform-decorators-legacy": {"analyzedAt": "2020-05-17T13:16:23.495Z", "collected": {"metadata": {"name": "babel-plugin-transform-decorators-legacy", "scope": "unscoped", "version": "1.3.5", "description": "A plugin for Babel 6 that (mostly) replicates the old decorator behavior from Babel 5.", "keywords": ["babel", "babel-plugin", "es7", "decorators"], "date": "2018-05-30T19:46:20.966Z", "author": {"name": "Logan Smyth", "email": "loganfsmyth@gmail.com", "username": "loganfsmyth"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "ide", "email": "ide+npm@jameside.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-plugin-transform-decorators-legacy", "homepage": "https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy#readme", "repository": "https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy", "bugs": "https://github.com/loganfsmyth/babel-plugin-transform-decorators-legacy/issues"}, "license": "MIT", "dependencies": {"babel-plugin-syntax-decorators": "^6.1.18", "babel-runtime": "^6.2.0", "babel-template": "^6.3.0"}, "devDependencies": {"babel-cli": "^6.2.0", "babel-plugin-transform-class-properties": "^6.3.0", "babel-plugin-transform-runtime": "^6.1.18", "babel-preset-es2015": "^6.1.18", "chai": "^3.4.1", "mocha": "^2.3.4"}, "releases": [{"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 1}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 1}, {"from": "2018-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "# Babel Legacy Decorator plugin\n\nThis is a plugin for Babel 6 that is meant to replicate the old decorator behavior from\nBabel 5 in order to allow people to more easily transition to Babel 6 without needing to\nbe blocked on updates to the decorator proposal or for Babel to re-implement it.\n\n## Babel >= 7.x\n\nThis plugin is specifically for Babel 6.x. If you're using Babel 7, this plugin is not for you.\nBabel 7's `@babel/plugin-proposal-decorators` officially supports the same logic that this\nplugin has, but integrates better with Babel 7's other plugins. You can enable this with\n\n```json\n{\n  \"plugins\": [\n    [\"@babel/plugin-proposal-decorators\", { \"legacy\": true }],\n  ]\n}\n```\nin your Babel configuration. Note that `legacy: true` is specifically needed if you\nwant to get the same behavior as `transform-decorators-legacy` because there\nare newer versions of the decorator specification coming out, and they do not\nbehave the same way as this plugin does.\n\n\n## Installation & Usage\n\n    $ npm install --save-dev babel-plugin-transform-decorators-legacy\n\nAdd the following line to your .babelrc file:\n\n    {\n        \"plugins\": [\"transform-decorators-legacy\"]\n    }\n\n#### NOTE: Order of Plugins Matters!\nIf you are including your plugins manually and using `transform-class-properties`, make sure that `transform-decorators-legacy` comes *before* `transform-class-properties`.\n\n```js\n/// WRONG\n\n\"plugins\": [\n  \"transform-class-properties\",\n  \"transform-decorators-legacy\"\n]\n\n// RIGHT\n\n\"plugins\": [\n  \"transform-decorators-legacy\",\n  \"transform-class-properties\"\n]\n```\n\n## Why \"legacy\"?\n\nDecorators are still only a relatively new proposal, and they are (at least currently) still\nin flux. Many people have started to use them in their original form, where each decorator\nis essentially a function of the form\n\n    function(target, property, descriptor){}\n\nThis form is very likely to change moving forward, and Babel 6 did not wish to support\nthe older form when it was known that it would change in the future. As such, I created this\nplugin to help people transition to Babel 6 without requiring them to drop their decorators\nor requiring them to wait for the new proposal update and then update all their code.\n\n## Best Effort\n\nThis plugin is a best effort to be compatible with Babel 5's transpiler output, but there\nare a few things that were difficult to reproduce, and a few things that were simply incorrect\nin Babel 5 with respect to the decorators proposal.\n\nTwo main things to mention as differences, though not things you are likely to encounter:\n\n1. Decorators expressions are evaluated top to bottom, and executed bottom to top. e.g.\n\n    ```\n    function dec(id){\n        console.log('evaluated', id);\n        return (target, property, descriptor) => console.log('executed', id);\n    }\n\n    class Example {\n        @dec(1)\n        @dec(2)\n        method(){}\n    }\n    ```\n\n    In Babel 5, this would output:\n\n    ```\n    evaluated 2\n    evaluated 1\n    executed 2\n    executed 1\n    ```\n\n    With this plugin, it will result in:\n\n    ```\n    evaluated 1\n    evaluated 2\n    executed 2\n    executed 1\n    ```\n\n    which is what the spec dictates as the correct behavior and was incorrect in Babel 5.\n\n2. Static class property initializers are evaluated once up front.\n\n    If you decorate a static class property, you will get a descriptor with an `initializer` property.\n    However whereas with Babel 5 this could be re-executed multiple times with potentially differing\n    results, `decorators-legacy` will precompute the value and return an initializer that will\n    return that value. e.g.\n\n    ```\n    function dec(target, prop, descriptor){\n        let {initializer} = descriptor;\n        delete descriptor.initializer;\n        delete descriptor.writable;\n\n        descriptor.get = function(){\n            return initializer.call(this);\n        };\n    }\n\n    var i = 0;\n\n    class Example {\n        @dec\n        static prop = i++;\n    }\n    ```\n\n    In Babel 5, every access to `prop` would increment `i`.\n    In Babel 6, the very first value of `i` will be cached for future `initializer` calls.\n\n    The spec is a little vague around how initializers work for repeat calls, and I'd consider\n    calling an `initializer` multiple times to be a mistake in general, so hopefully this will\n    not cause anyone trouble.\n\n## License\n\nMIT (c) 2015"}, "npm": {"downloads": [{"from": "2020-05-16T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 11026}, {"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 229208}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 999613}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 3159263}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 5892169}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 12705298}], "dependentsCount": 1229, "starsCount": 26}, "github": {"starsCount": 822, "forksCount": 58, "subscribersCount": 17, "issues": {"count": 85, "openCount": 19, "distribution": {"3600": 7, "10800": 8, "32400": 8, "97200": 11, "291600": 7, "874800": 8, "2624400": 4, "7873200": 5, "23619600": 7, "70858800": 6, "212576400": 14}, "isDisabled": false}, "contributors": [{"username": "loganfsmyth", "commitsCount": 35}, {"username": "amilajack", "commitsCount": 1}, {"username": "bathos", "commitsCount": 1}, {"username": "callumlocke", "commitsCount": 1}, {"username": "ide", "commitsCount": 1}, {"username": "jayphelps", "commitsCount": 1}, {"username": "teameh", "commitsCount": 1}], "commits": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-04-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2020-02-17T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-11-19T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}, {"from": "2019-05-18T00:00:00.000Z", "to": "2020-05-17T00:00:00.000Z", "count": 0}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4374, "testsSize": 61280, "hasNpmIgnore": true, "hasChangelog": true}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.85, "health": 1, "branding": 0}, "popularity": {"communityInterest": 930, "downloadsCount": 1053087.6666666667, "downloadsAcceleration": -890.8414193302888, "dependentsCount": 1229}, "maintenance": {"releasesFrequency": 0.29897260273972603, "commitsFrequency": 0, "openIssues": 0.9607843137254902, "issuesDistribution": 0}}, "score": {"final": 0.5471595565024947, "detail": {"quality": 0.8634133847035668, "popularity": 0.3959262508173119, "maintenance": 0.4273181523010444}}}}, {"react-native": {"analyzedAt": "2020-06-17T00:37:51.426Z", "collected": {"metadata": {"name": "react-native", "scope": "unscoped", "version": "0.62.2", "description": "A framework for building native apps using React", "date": "2020-04-08T17:08:19.985Z", "publisher": {"username": "react-native-bot", "email": "opensource+react-native-bot@fb.com"}, "maintainers": [{"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "grabbou", "email": "grabbou@gmail.com"}, {"username": "hectorramos", "email": "hector@hectorramos.com"}, {"username": "react-native-bot", "email": "opensource+react-native-bot@fb.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/facebook/react-native.git"}, "links": {"npm": "https://www.npmjs.com/package/react-native", "homepage": "https://github.com/facebook/react-native#readme", "repository": "https://github.com/facebook/react-native", "bugs": "https://github.com/facebook/react-native/issues"}, "license": "MIT", "dependencies": {"@babel/runtime": "^7.0.0", "@react-native-community/cli": "^4.5.1", "@react-native-community/cli-platform-android": "^4.5.1", "@react-native-community/cli-platform-ios": "^4.5.0", "abort-controller": "^3.0.0", "anser": "^1.4.9", "base64-js": "^1.1.2", "connect": "^3.6.5", "create-react-class": "^15.6.3", "escape-string-regexp": "^1.0.5", "eslint-plugin-relay": "1.4.1", "event-target-shim": "^5.0.1", "fbjs": "^1.0.0", "fbjs-scripts": "^1.1.0", "hermes-engine": "~0.4.0", "invariant": "^2.2.4", "jsc-android": "^245459.0.0", "metro-babel-register": "0.58.0", "metro-react-native-babel-transformer": "0.58.0", "metro-source-map": "0.58.0", "nullthrows": "^1.1.1", "pretty-format": "^24.7.0", "promise": "^7.1.1", "prop-types": "^15.7.2", "react-devtools-core": "^4.0.6", "react-refresh": "^0.4.0", "regenerator-runtime": "^0.13.2", "scheduler": "0.17.0", "stacktrace-parser": "^0.1.3", "use-subscription": "^1.0.0", "whatwg-fetch": "^3.0.0"}, "devDependencies": {"@babel/core": "^7.0.0", "@babel/generator": "^7.5.0", "@react-native-community/eslint-plugin": "file:packages/eslint-plugin-react-native-community", "@reactions/component": "^2.0.2", "async": "^2.4.0", "babel-eslint": "10.0.1", "clang-format": "^1.2.4", "coveralls": "^3.0.2", "detox": "14.5.1", "eslint": "5.1.0", "eslint-config-fb-strict": "24.3.0", "eslint-config-fbjs": "2.1.0", "eslint-config-prettier": "^6.0.0", "eslint-plugin-babel": "^5.3.0", "eslint-plugin-eslint-comments": "^3.1.1", "eslint-plugin-flowtype": "2.50.3", "eslint-plugin-jest": "22.4.1", "eslint-plugin-jsx-a11y": "6.2.1", "eslint-plugin-prettier": "2.6.2", "eslint-plugin-react": "7.12.4", "eslint-plugin-react-hooks": "^2.0.1", "eslint-plugin-react-native": "3.8.1", "eslint-plugin-relay": "1.4.1", "flow-bin": "^0.113.0", "flow-remove-types": "1.2.3", "jest": "^24.8.0", "jest-junit": "^6.3.0", "jscodeshift": "^0.6.2", "mkdirp": "^0.5.1", "prettier": "1.17.0", "react": "16.11.0", "react-test-renderer": "16.11.0", "shelljs": "^0.7.8", "signedsource": "^1.0.0", "ws": "^6.1.4", "yargs": "^14.2.0"}, "peerDependencies": {"react": "16.11.0"}, "releases": [{"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 18}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 68}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 73}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 93}, {"from": "2018-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 139}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 0}, {"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 313101}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1536449}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 4732860}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 8614634}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 16996160}], "dependentsCount": 1935, "starsCount": 93}, "github": {"homepage": "https://reactnative.dev", "starsCount": 88052, "forksCount": 19553, "subscribersCount": 3722, "issues": {"count": 28931, "openCount": 942, "distribution": {"3600": 4292, "10800": 1643, "32400": 2135, "97200": 2874, "291600": 2684, "874800": 2708, "2624400": 2625, "7873200": 3360, "23619600": 5350, "70858800": 1191, "212576400": 69}, "isDisabled": false}, "contributors": [{"username": "shergin", "commitsCount": 1152}, {"username": "mdvacca", "commitsCount": 544}, {"username": "javache", "commitsCount": 517}, {"username": "davidaurelio", "commitsCount": 502}, {"username": "hramos", "commitsCount": 446}, {"username": "sahrens", "commitsCount": 430}, {"username": "mkonicek", "commitsCount": 406}, {"username": "TheSavior", "commitsCount": 376}, {"username": "nicklockwood", "commitsCount": 372}, {"username": "RSNara", "commitsCount": 314}, {"username": "vjeux", "commitsCount": 312}, {"username": "fkgozali", "commitsCount": 302}, {"username": "tadeuzagallo", "commitsCount": 298}, {"username": "rickhanlonii", "commitsCount": 268}, {"username": "cpojer", "commitsCount": 263}, {"username": "emilsjolander", "commitsCount": 255}, {"username": "JoshuaGross", "commitsCount": 251}, {"username": "yungsters", "commitsCount": 249}, {"username": "janicduplessis", "commitsCount": 242}, {"username": "sammy-SC", "commitsCount": 232}, {"username": "frantic", "commitsCount": 203}, {"username": "bestander", "commitsCount": 196}, {"username": "ide", "commitsCount": 192}, {"username": "martinbigio", "commitsCount": 186}, {"username": "ericvicenti", "commitsCount": 166}, {"username": "mhorowitz", "commitsCount": 162}, {"username": "AaaChiuuu", "commitsCount": 158}, {"username": "astreet", "commitsCount": 152}, {"username": "ejanzer", "commitsCount": 148}, {"username": "andreicoman11", "commitsCount": 134}, {"username": "ayc1", "commitsCount": 132}, {"username": "rafeca", "commitsCount": 126}, {"username": "zhongwuzw", "commitsCount": 123}, {"username": "dulmandakh", "commitsCount": 117}, {"username": "foghina", "commitsCount": 112}, {"username": "korDen", "commitsCount": 109}, {"username": "kmagiera", "commitsCount": 103}, {"username": "sophiebits", "commitsCount": 100}, {"username": "priteshrnandgaonkar", "commitsCount": 94}, {"username": "SidharthGuglani", "commitsCount": 91}, {"username": "PeteTheHeat", "commitsCount": 89}, {"username": "rigdern", "commitsCount": 88}, {"username": "a2", "commitsCount": 84}, {"username": "lexs", "commitsCount": 82}, {"username": "sunnylqm", "commitsCount": 79}, {"username": "alexeylang", "commitsCount": 78}, {"username": "bvaughn", "commitsCount": 78}, {"username": "grabbou", "commitsCount": 77}, {"username": "axe-fb", "commitsCount": 75}, {"username": "gabelevi", "commitsCount": 67}, {"username": "gaearon", "commitsCount": 67}, {"username": "empyrical", "commitsCount": 66}, {"username": "osdnk", "commitsCount": 66}, {"username": "fromcelticpark", "commitsCount": 65}, {"username": "adamjernst", "commitsCount": 63}, {"username": "satya164", "commitsCount": 59}, {"username": "makovkastar", "commitsCount": 57}, {"username": "philikon", "commitsCount": 57}, {"username": "brentvatne", "commitsCount": 56}, {"username": "sebmarkbage", "commitsCount": 56}, {"username": "woehrl01", "commitsCount": 56}, {"username": "cjhopman", "commitsCount": 55}, {"username": "majak", "commitsCount": 54}, {"username": "motiz88", "commitsCount": 54}, {"username": "mjesun", "commitsCount": 53}, {"username": "ericlewis", "commitsCount": 51}, {"username": "gengjiawen", "commitsCount": 50}, {"username": "amnn", "commitsCount": 46}, {"username": "michalgr", "commitsCount": 44}, {"username": "mikearmstrong001", "commitsCount": 44}, {"username": "cwdick", "commitsCount": 43}, {"username": "fred2028", "commitsCount": 41}, {"username": "zertosh", "commitsCount": 41}, {"username": "JoelMarcey", "commitsCount": 39}, {"username": "bnham", "commitsCount": 38}, {"username": "lunaleaps", "commitsCount": 38}, {"username": "dlowder-salesforce", "commitsCount": 35}, {"username": "vonovak", "commitsCount": 35}, {"username": "nd-02110114", "commitsCount": 33}, {"username": "MengjueW", "commitsCount": 31}, {"username": "sjkirby", "commitsCount": 31}, {"username": "christopherdro", "commitsCount": 30}, {"username": "lukaspiatkowski", "commitsCount": 30}, {"username": "olinotteghem", "commitsCount": 29}, {"username": "dcaspi", "commitsCount": 28}, {"username": "logandaniels", "commitsCount": 28}, {"username": "skv-headless", "commitsCount": 28}, {"username": "ttsugriy", "commitsCount": 28}, {"username": "willholen", "commitsCount": 28}, {"username": "Naturalclar", "commitsCount": 25}, {"username": "dulinriley", "commitsCount": 25}, {"username": "kassens", "commitsCount": 25}, {"username": "mzlee", "commitsCount": 25}, {"username": "rubennorte", "commitsCount": 25}, {"username": "thymikee", "commitsCount": 25}, {"username": "skevy", "commitsCount": 24}, {"username": "mroch", "commitsCount": 23}, {"username": "pakoito", "commitsCount": 23}, {"username": "rozele", "commitsCount": 23}, {"username": "voideanvalue", "commitsCount": 23}], "commits": [{"from": "2020-06-10T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 12}, {"from": "2020-05-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 122}, {"from": "2020-03-19T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 659}, {"from": "2019-12-20T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 1295}, {"from": "2019-06-18T00:00:00.000Z", "to": "2020-06-17T00:00:00.000Z", "count": 3119}], "statuses": [{"context": "ci/circleci: test_docker", "state": "success"}, {"context": "ci/circleci: test_ios_frameworks", "state": "success"}, {"context": "ci/circleci: test_ios", "state": "success"}, {"context": "ci/circleci: test_android", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "failure"}, {"context": "ci/circleci: publish_npm_package", "state": "success"}, {"context": "ci/circleci: js_coverage", "state": "failure"}, {"context": "ci/circleci: test_js", "state": "failure"}, {"context": "ci/circleci: test_js_lts", "state": "failure"}, {"context": "ci/circleci: analyze_code", "state": "success"}, {"context": "ci/circleci: setup_android", "state": "success"}, {"context": "ci/circleci: setup_ios", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 2199832, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.09, "outdatedDependencies": {"hermes-engine": {"required": "~0.4.0", "stable": "0.5.0", "latest": "0.5.0"}, "promise": {"required": "^7.1.1", "stable": "8.1.0", "latest": "8.1.0"}, "escape-string-regexp": {"required": "^1.0.5", "stable": "4.0.0", "latest": "4.0.0"}, "metro-react-native-babel-transformer": {"required": "0.58.0", "stable": "0.59.0", "latest": "0.59.0"}, "metro-babel-register": {"required": "0.58.0", "stable": "0.59.0", "latest": "0.59.0"}, "react-refresh": {"required": "^0.4.0", "stable": "0.8.3", "latest": "0.8.3"}, "metro-source-map": {"required": "0.58.0", "stable": "0.59.0", "latest": "0.59.0"}, "eslint-plugin-relay": {"required": "1.4.1", "stable": "1.7.1", "latest": "1.7.1"}, "scheduler": {"required": "0.17.0", "stable": "0.19.1", "latest": "0.0.0-experimental-33c3af284"}, "pretty-format": {"required": "^24.7.0", "stable": "26.0.1", "latest": "26.0.1"}}}}, "evaluation": {"quality": {"carefulness": 0.31, "tests": 0.786576923076923, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 111520, "downloadsCount": 1577620, "downloadsAcceleration": 1486.100152207, "dependentsCount": 1935}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.6062060051888633}}, "score": {"final": 0.7667285897124665, "detail": {"quality": 0.6488880624734994, "popularity": 0.6397039880438816, "maintenance": 0.9947593575858802}}}}, {"standard-version": {"analyzedAt": "2020-05-08T07:31:08.193Z", "collected": {"metadata": {"name": "standard-version", "scope": "unscoped", "version": "8.0.0", "description": "replacement for `npm version` with automatic CHANGELOG generation", "keywords": ["conventional-changelog", "recommended", "changelog", "automatic", "workflow", "version", "angular", "standard"], "date": "2020-05-06T20:03:09.355Z", "author": {"name": "Ben Coe", "email": "ben@npmjs.com"}, "publisher": {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}, "maintainers": [{"username": "bcoe", "email": "bencoe@gmail.com"}, {"username": "nexdrew", "email": "andrewbgoode@gmail.com"}, {"username": "oss-bot", "email": "bencoe+oss-bot@gmail.com"}, {"username": "stevemao", "email": "maochenyan@gmail.com"}, {"username": "tapppi", "email": "moilanen.tapani@gmail.com"}, {"username": "tommywo", "email": "tommywo@o2.pl"}], "repository": {"type": "git", "url": "git+https://github.com/conventional-changelog/standard-version.git"}, "links": {"npm": "https://www.npmjs.com/package/standard-version", "homepage": "https://github.com/conventional-changelog/standard-version#readme", "repository": "https://github.com/conventional-changelog/standard-version", "bugs": "https://github.com/conventional-changelog/standard-version/issues"}, "license": "ISC", "dependencies": {"chalk": "2.4.2", "conventional-changelog": "3.1.18", "conventional-changelog-config-spec": "2.1.0", "conventional-changelog-conventionalcommits": "4.2.3", "conventional-recommended-bump": "6.0.5", "detect-indent": "6.0.0", "detect-newline": "3.1.0", "dotgitignore": "2.1.0", "figures": "3.1.0", "find-up": "4.1.0", "fs-access": "1.0.1", "git-semver-tags": "3.0.1", "semver": "7.1.1", "stringify-package": "1.0.1", "yargs": "15.3.1"}, "devDependencies": {"chai": "4.2.0", "coveralls": "3.0.9", "eslint": "6.7.2", "eslint-config-standard": "14.1.0", "eslint-plugin-import": "2.20.0", "eslint-plugin-node": "10.0.0", "eslint-plugin-promise": "4.2.1", "eslint-plugin-standard": "4.0.1", "mocha": "7.0.1", "mock-git": "2.0.0", "mockery": "2.1.0", "nyc": "14.1.1", "shelljs": "0.8.3"}, "releases": [{"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 2}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5}, {"from": "2018-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 13}], "hasTestScript": true, "readme": "# Standard Version\n\nA utility for versioning using [semver](https://semver.org/) and CHANGELOG generation powered by [Conventional Commits](https://conventionalcommits.org).\n\n[![Build Status](https://travis-ci.org/conventional-changelog/standard-version.svg?branch=master)](https://travis-ci.org/conventional-changelog/standard-version)\n[![NPM version](https://img.shields.io/npm/v/standard-version.svg)](https://www.npmjs.com/package/standard-version)\n[![Coverage Status](https://coveralls.io/repos/conventional-changelog/standard-version/badge.svg?branch=)](https://coveralls.io/r/conventional-changelog/standard-version?branch=master)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![Community slack](http://devtoolscommunity.herokuapp.com/badge.svg)](http://devtoolscommunity.herokuapp.com)\n\n_Having problems? Want to contribute? Join us on the [node-tooling community Slack](http://devtoolscommunity.herokuapp.com)_.\n\n\n_How It Works:_\n\n1. Follow the [Conventional Commits Specification](https://conventionalcommits.org) in your repository.\n2. When you're ready to release, run `standard-version`.\n\n`standard-version` will then do the following:\n\n1. Retrieve the current version of your repository by looking at `bumpFiles`[[1]](#bumpfiles-packagefiles-and-updaters), falling back to the last `git tag`.\n2. `bump` the version in `bumpFiles`[[1]](#bumpfiles-packagefiles-and-updaters) based on your commits.\n4. Generates a `changelog` based on your commits (uses [conventional-changelog](https://github.com/conventional-changelog/conventional-changelog) under the hood).\n5. Creates a new `commit` including your `bumpFiles`[[1]](#bumpfiles-packagefiles-and-updaters) and updated CHANGELOG.\n6. Creates a new `tag` with the new version number.\n\n\n### `bumpFiles`, `packageFiles` and `updaters`\n\n`standard-version` uses a few key concepts for handling version bumping in your project.\n\n- **`packageFiles`** \u2013 User-defined files where versions can be read from _and_ be \"bumped\".\n  - Examples: `package.json`, `manifest.json`\n  - In most cases (including the default), `packageFiles` are a subset of `bumpFiles`.\n- **`bumpFiles`** \u2013\u00a0User-defined files where versions should be \"bumped\", but not explicitly read from.\n  - Examples: `package-lock.json`, `npm-shrinkwrap.json`\n- **`updaters`** \u2013\u00a0Simple modules used for reading `packageFiles` and writing to `bumpFiles`.\n\nBy default, `standard-version` assumes you're working in a NodeJS based project... because of this, for the majority of projects you might never need to interact with these options.\n\nThat said, if you find your self asking [How can I use standard-version for additional metadata files, languages or version files?](#can-i-use-standard-version-for-additional-metadata-files-languages-or-version-files) \u2013 these configuration options will help!\n\n## Installing `standard-version`\n\n### As a local `npm run` script\n\nInstall and add to `devDependencies`:\n\n```\nnpm i --save-dev standard-version\n```\n\nAdd an [`npm run` script](https://docs.npmjs.com/cli/run-script) to your `package.json`:\n\n```json\n{\n  \"scripts\": {\n    \"release\": \"standard-version\"\n  }\n}\n```\n\nNow you can use `npm run release` in place of `npm version`.\n\nThis has the benefit of making your repo/package more portable, so that other developers can cut releases without having to globally install `standard-version` on their machine.\n\n### As global `bin`\n\nInstall globally (add to your `PATH`):\n\n```\nnpm i -g standard-version\n```\n\nNow you can use `standard-version` in place of `npm version`.\n\nThis has the benefit of allowing you to use `standard-version` on any repo/package without adding a dev dependency to each one.\n\n### Using `npx`\n\nAs of `npm@5.2.0`, `npx` is installed alongside `npm`. Using `npx` you can use `standard-version` without having to keep a `package.json` file by running: `npx standard-version`.\n\nThis method is especially useful when using `standard-version` in non-JavaScript projects.\n\n## Configuration\n\nYou can configure `standard-version` either by:\n\n1. Placing a `standard-version` stanza in your `package.json` (assuming\n   your project is JavaScript).\n2. Creating a `.versionrc`, `.versionrc.json` or `.versionrc.js`.\n  - If you are using a `.versionrc.js` your default export must be a configuration object, or a function returning a configuration object.\n\nAny of the command line parameters accepted by `standard-version` can instead\nbe provided via configuration. Please refer to the [conventional-changelog-config-spec](https://github.com/conventional-changelog/conventional-changelog-config-spec/) for details on available configuration options.\n\n\n### Customizing CHANGELOG Generation\n\nBy default (as of `6.0.0`), `standard-version` uses the [conventionalcommits preset](https://github.com/conventional-changelog/conventional-changelog/tree/master/packages/conventional-changelog-conventionalcommits).\n\nThis preset:\n\n* Adheres closely to the [conventionalcommits.org](https://www.conventionalcommits.org)\n  specification.\n* Is highly configurable, following the configuration specification\n  [maintained here](https://github.com/conventional-changelog/conventional-changelog-config-spec).\n  * _We've documented these config settings as a recommendation to other tooling makers._\n\nThere are a variety of dials and knobs you can turn related to CHANGELOG generation.\n\nAs an example, suppose you're using GitLab, rather than GitHub, you might modify the following variables:\n\n* `commitUrlFormat`: the URL format of commit SHAs detected in commit messages.\n* `compareUrlFormat`: the URL format used to compare two tags.\n* `issueUrlFormat`: the URL format used to link to issues.\n\nMaking these URLs match GitLab's format, rather than GitHub's.\n\n## CLI Usage\n\n> **NOTE:** To pass nested configurations to the CLI without defining them in the `package.json` use dot notation as the parameters `e.g. --skip.changelog`.\n\n### First Release\n\nTo generate your changelog for your first release, simply do:\n\n```sh\n# npm run script\nnpm run release -- --first-release\n# global bin\nstandard-version --first-release\n# npx\nnpx standard-version --first-release\n```\n\nThis will tag a release **without bumping the version `bumpFiles`[1]()**.\n\nWhen you are ready, push the git tag and `npm publish` your first release. \\o/\n\n### Cutting Releases\n\nIf you typically use `npm version` to cut a new release, do this instead:\n\n```sh\n# npm run script\nnpm run release\n# or global bin\nstandard-version\n```\n\nAs long as your git commit messages are conventional and accurate, you no longer need to specify the semver type - and you get CHANGELOG generation for free! \\o/\n\nAfter you cut a release, you can push the new git tag and `npm publish` (or `npm publish --tag next`) when you're ready.\n\n### Release as a Pre-Release\n\nUse the flag `--prerelease` to generate pre-releases:\n\nSuppose the last version of your code is `1.0.0`, and your code to be committed has patched changes. Run:\n\n```bash\n# npm run script\nnpm run release -- --prerelease\n```\nThis will tag your version as: `1.0.1-0`.\n\nIf you want to name the pre-release, you specify the name via `--prerelease <name>`.\n\nFor example, suppose your pre-release should contain the `alpha` prefix:\n\n```bash\n# npm run script\nnpm run release -- --prerelease alpha\n```\n\nThis will tag the version as: `1.0.1-alpha.0`\n\n### Release as a Target Type Imperatively (`npm version`-like)\n\nTo forgo the automated version bump use `--release-as` with the argument `major`, `minor` or `patch`.\n\nSuppose the last version of your code is `1.0.0`, you've only landed `fix:` commits, but\nyou would like your next release to be a `minor`. Simply run the following:\n\n```bash\n# npm run script\nnpm run release -- --release-as minor\n# Or\nnpm run release -- --release-as 1.1.0\n```\n\nYou will get version `1.1.0` rather than what would be the auto-generated version `1.0.1`.\n\n> **NOTE:** you can combine `--release-as` and `--prerelease` to generate a release. This is useful when publishing experimental feature(s).\n\n### Prevent Git Hooks\n\nIf you use git hooks, like pre-commit, to test your code before committing, you can prevent hooks from being verified during the commit step by passing the `--no-verify` option:\n\n```sh\n# npm run script\nnpm run release -- --no-verify\n# or global bin\nstandard-version --no-verify\n```\n\n### Signing Commits and Tags\n\nIf you have your GPG key set up, add the `--sign` or `-s` flag to your `standard-version` command.\n\n### Lifecycle Scripts\n\n`standard-version` supports lifecycle scripts. These allow you to execute your\nown supplementary commands during the release. The following\nhooks are available and execute in the order documented:\n\n* `prerelease`: executed before anything happens. If the `prerelease` script returns a\n  non-zero exit code, versioning will be aborted, but it has no other effect on the\n  process.\n* `prebump`/`postbump`: executed before and after the version is bumped. If the `prebump`\n  script returns a version #, it will be used rather than\n  the version calculated by `standard-version`.\n* `prechangelog`/`postchangelog`: executes before and after the CHANGELOG is generated.\n* `precommit`/`postcommit`: called before and after the commit step.\n* `pretag`/`posttag`: called before and after the tagging step.\n\nSimply add the following to your package.json to configure lifecycle scripts:\n\n```json\n{\n  \"standard-version\": {\n    \"scripts\": {\n      \"prebump\": \"echo 9.9.9\"\n    }\n  }\n}\n```\n\nAs an example to change from using GitHub to track your items to using your projects Jira use a\n`postchangelog` script to replace the url fragment containing 'https://github.com/`myproject`/issues/'\nwith a link to your Jira - assuming you have already installed [replace](https://www.npmjs.com/package/replace)\n```json\n{\n  \"standard-version\": {\n    \"scripts\": {\n      \"postchangelog\": \"replace 'https://github.com/myproject/issues/' 'https://myjira/browse/' CHANGELOG.md\"\n    }\n  }\n}\n```\n\n### Skipping Lifecycle Steps\n\nYou can skip any of the lifecycle steps (`bump`, `changelog`, `commit`, `tag`),\nby adding the following to your package.json:\n\n```json\n{\n  \"standard-version\": {\n    \"skip\": {\n      \"changelog\": true\n    }\n  }\n}\n```\n\n### Committing Generated Artifacts in the Release Commit\n\nIf you want to commit generated artifacts in the release commit (e.g. [#96](https://github.com/conventional-changelog/standard-version/issues/96)), you can use the `--commit-all` or `-a` flag. You will need to stage the artifacts you want to commit, so your `release` command could look like this:\n\n```json\n\"prerelease\": \"webpack -p --bail\",\n\"release\": \"git add <file(s) to commit> && standard-version -a\"\n```\n\n### Dry Run Mode\n\nrunning `standard-version` with the flag `--dry-run` allows you to see what\ncommands would be run, without committing to git or updating files.\n\n```sh\n# npm run script\nnpm run release -- --dry-run\n# or global bin\nstandard-version --dry-run\n```\n\n### Prefix Tags\n\nTags are prefixed with `v` by default. If you would like to prefix your tags with something else, you can do so with the `-t` flag.\n\n```sh\nstandard-version -t @scope/package\\@\n```\n\nThis will prefix your tags to look something like `@scope/package@2.0.0`\n\nIf you do not want to have any tag prefix you can use the `-t` flag without value.\n\n### CLI Help\n\n```sh\n# npm run script\nnpm run release -- --help\n# or global bin\nstandard-version --help\n```\n\n## Code Usage\n\n```js\nconst standardVersion = require('standard-version')\n\n// Options are the same as command line, except camelCase\n// standardVersion returns a Promise\nstandardVersion({\n  noVerify: true,\n  infile: 'docs/CHANGELOG.md',\n  silent: true\n}).then(() => {\n  // standard-version is done\n}).catch(err => {\n    console.error(`standard-version failed with message: ${err.message}`)\n})\n```\n\n_TIP: Use the `silent` option to prevent `standard-version` from printing to the `console`._\n\n## FAQ\n\n### How is `standard-version` different from `semantic-release`?\n\n[`semantic-release`](https://github.com/semantic-release/semantic-release) is described as:\n\n> semantic-release automates the whole package release workflow including: determining the next version number, generating the release notes and publishing the package.\n\nWhile both are based on the same foundation of structured commit messages, `standard-version`  takes a different approach by handling versioning, changelog generation, and git tagging for you **without** automatic pushing (to GitHub) or publishing (to an npm registry). Use of `standard-version` only affects your local git repo - it doesn't affect remote resources at all. After you run `standard-version`, you can review your release state, correct mistakes and follow the release strategy that makes the most sense for your codebase.\n\nWe think they are both fantastic tools, and we encourage folks to use `semantic-release` instead of `standard-version` if it makes sense for their use-case.\n\n### Should I always squash commits when merging PRs?\n\nThe instructions to squash commits when merging pull requests assumes that **one PR equals, at most, one feature or fix**.\n\nIf you have multiple features or fixes landing in a single PR and each commit uses a structured message, then you can do a standard merge when accepting the PR. This will preserve the commit history from your branch after the merge.\n\nAlthough this will allow each commit to be included as separate entries in your CHANGELOG, the entries will **not** be able to reference the PR that pulled the changes in because the preserved commit messages do not include the PR number.\n\nFor this reason, we recommend keeping the scope of each PR to one general feature or fix. In practice, this allows you to use unstructured commit messages when committing each little change and then squash them into a single commit with a structured message (referencing the PR number) once they have been reviewed and accepted.\n\n### Can I use `standard-version` for additional metadata files, languages or version files?\n\nAs of version `7.1.0` you can configure multiple `bumpFiles` and `packageFiles`.\n\n1. Specify a custom `bumpFile` \"`filename`\", this is the path to the file you want to \"bump\"\n2. Specify the `bumpFile` \"`updater`\", this is _how_ the file will be bumped.\n  \n    a. If your using a common type, you can use one of  `standard-version`'s built-in `updaters` by specifying a `type`.\n\n    b. If your using an less-common version file, you can create your own `updater`.\n\n```js\n// .versionrc\n{\n  \"bumpFiles\": [\n    {\n      \"filename\": \"MY_VERSION_TRACKER.txt\",\n      // The `plain-text` updater assumes the file contents represents the version.\n      \"type\": \"plain-text\"\n    },\n    {\n      \"filename\": \"a/deep/package/dot/json/file/package.json\",\n      // The `json` updater assumes the version is available under a `version` key in the provided JSON document.\n      \"type\": \"json\"\n    },\n    {\n      \"filename\": \"VERSION_TRACKER.json\",\n      //  See \"Custom `updater`s\" for more details.\n      \"updater\": \"standard-version-updater.js\"\n    }\n  ]\n}\n```\n\n#### Custom `updater`s\n\nAn `updater` is expected to be a Javascript module with _atleast_ two methods exposed: `readVersion` and `writeVersion`.\n\n##### `readVersion(contents = string): string`\n\nThis method is used to read the version from the provided file contents.\n\nThe return value is expected to be a semantic version string.\n\n##### `writeVersion(contents = string, version: string): string`\n\nThis method is used to write the version to the provided contents.\n\nThe return value will be written directly (overwrite) to the provided file.\n\n---\n\nLet's assume our `VERSION_TRACKER.json` has the following contents:\n\n```json\n{\n  \"tracker\": {\n    \"package\": {\n      \"version\": \"1.0.0\"\n    }\n  }\n}\n\n```\n\nAn acceptable `standard-version-updater.js` would be:\n\n```js\n// standard-version-updater.js\nconst stringifyPackage = require('stringify-package')\nconst detectIndent = require('detect-indent')\nconst detectNewline = require('detect-newline')\n\nmodule.exports.readVersion = function (contents) {\n  return JSON.parse(contents).tracker.package.version;\n}\n\nmodule.exports.writeVersion = function (contents, version) {\n  const json = JSON.parse(contents)\n  let indent = detectIndent(contents).indent\n  let newline = detectNewline(contents)\n  json.tracker.package.version = version\n  return stringifyPackage(json, indent, newline)\n}\n```\n\n## License\n\nISC"}, "npm": {"downloads": [{"from": "2020-05-07T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 29208}, {"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 146008}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 616310}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 1713728}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3079455}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 5250073}], "dependentsCount": 172, "starsCount": 12}, "github": {"starsCount": 3627, "forksCount": 365, "subscribersCount": 39, "issues": {"count": 582, "openCount": 155, "distribution": {"3600": 57, "10800": 23, "32400": 24, "97200": 74, "291600": 50, "874800": 44, "2624400": 51, "7873200": 83, "23619600": 72, "70858800": 66, "212576400": 38}, "isDisabled": false}, "contributors": [{"username": "bcoe", "commitsCount": 39}, {"username": "renovate[bot]", "commitsCount": 21}, {"username": "greenkeeperio-bot", "commitsCount": 18}, {"username": "Tapppi", "commitsCount": 17}, {"username": "jbottigliero", "commitsCount": 13}, {"username": "nexdrew", "commitsCount": 11}, {"username": "tommywo", "commitsCount": 7}, {"username": "stevemao", "commitsCount": 6}, {"username": "JaKXz", "commitsCount": 3}, {"username": "tomchentw", "commitsCount": 3}, {"username": "MiniGod", "commitsCount": 2}, {"username": "dsole", "commitsCount": 2}, {"username": "noreiller", "commitsCount": 2}, {"username": "Djaler", "commitsCount": 1}, {"username": "KarunaLakshman", "commitsCount": 1}, {"username": "Neonox31", "commitsCount": 1}, {"username": "TilmannBach", "commitsCount": 1}, {"username": "alasdairhurst", "commitsCount": 1}, {"username": "aldoreno", "commitsCount": 1}, {"username": "anthonylim24", "commitsCount": 1}, {"username": "antkaz", "commitsCount": 1}, {"username": "barmaglot92", "commitsCount": 1}, {"username": "benmonro", "commitsCount": 1}, {"username": "carlobernardini", "commitsCount": 1}, {"username": "coreyfarrell", "commitsCount": 1}, {"username": "dmfay", "commitsCount": 1}, {"username": "e-cloud", "commitsCount": 1}, {"username": "edahlseng", "commitsCount": 1}, {"username": "fent", "commitsCount": 1}, {"username": "gamtiq", "commitsCount": 1}, {"username": "georgiee", "commitsCount": 1}, {"username": "gitter-badger", "commitsCount": 1}, {"username": "godd9170", "commitsCount": 1}, {"username": "huruji", "commitsCount": 1}, {"username": "hutson", "commitsCount": 1}, {"username": "jdbruijn", "commitsCount": 1}, {"username": "joeledwards", "commitsCount": 1}, {"username": "jthomerson", "commitsCount": 1}, {"username": "lexich", "commitsCount": 1}, {"username": "medikoo", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "mrastiak", "commitsCount": 1}, {"username": "mvayngrib", "commitsCount": 1}, {"username": "myfairsyer", "commitsCount": 1}, {"username": "niieani", "commitsCount": 1}, {"username": "noahrc", "commitsCount": 1}, {"username": "pioluk", "commitsCount": 1}, {"username": "pvgnd", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "roschaefer", "commitsCount": 1}, {"username": "spikegrobstein", "commitsCount": 1}, {"username": "spruce", "commitsCount": 1}, {"username": "spudheadc", "commitsCount": 1}, {"username": "steveoh", "commitsCount": 1}, {"username": "tmcw", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}, {"username": "watilde", "commitsCount": 1}, {"username": "yoroshikun", "commitsCount": 1}], "commits": [{"from": "2020-05-01T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-04-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2020-02-08T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 3}, {"from": "2019-11-10T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 36}, {"from": "2019-05-09T00:00:00.000Z", "to": "2020-05-08T00:00:00.000Z", "count": 81}]}, "source": {"files": {"readmeSize": 16419, "testsSize": 47401, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/conventional-changelog/standard-version.svg?branch=master", "service": "https://api.travis-ci.org/conventional-changelog/standard-version.svg?branch=master", "shields": "https://img.shields.io/travis/conventional-changelog/standard-version/master.svg", "content": "https://img.shields.io/travis/conventional-changelog/standard-version/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/standard-version.svg", "shields": "https://img.shields.io/npm/v/standard-version.svg", "content": "https://img.shields.io/npm/v/standard-version.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://coveralls.io/repos/conventional-changelog/standard-version/badge.svg?branch=", "service": "https://coveralls.io/repos/conventional-changelog/standard-version/badge.svg", "shields": "https://img.shields.io/coveralls/conventional-changelog/standard-version.svg", "content": "https://img.shields.io/coveralls/conventional-changelog/standard-version.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint"], "coverage": 0.99, "outdatedDependencies": {"fs-access": {"required": "1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "figures": {"required": "3.1.0", "stable": "3.2.0", "latest": "3.2.0"}, "chalk": {"required": "2.4.2", "stable": "4.0.0", "latest": "4.0.0"}, "semver": {"required": "7.1.1", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.7484999999999999, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4101, "downloadsCount": 571242.6666666666, "downloadsAcceleration": 2221.056678082192, "dependentsCount": 172}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9016301369863015, "openIssues": 0.8894616265750287, "issuesDistribution": 0}}, "score": {"final": 0.6472508799957242, "detail": {"quality": 0.8934469417910177, "popularity": 0.4168651542546996, "maintenance": 0.6666114099122117}}}}]