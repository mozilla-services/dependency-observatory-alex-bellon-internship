[{"eslint": {"analyzedAt": "2020-06-26T20:57:18.326Z", "collected": {"metadata": {"name": "eslint", "scope": "unscoped", "version": "7.3.1", "description": "An AST-based pattern checker for JavaScript.", "keywords": ["ast", "lint", "javascript", "ecmascript", "espree"], "date": "2020-06-23T02:37:39.224Z", "author": {"name": "Nicholas C. Zakas", "email": "nicholas+npm@nczconsulting.com"}, "publisher": {"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, "maintainers": [{"username": "eslintbot", "email": "nicholas+eslint@nczconsulting.com"}, {"username": "ivolodin", "email": "ivolodin@gmail.com"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "nzakas", "email": "nicholas@nczconsulting.com"}], "repository": {"type": "git", "url": "git+https://github.com/eslint/eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint", "homepage": "https://eslint.org", "repository": "https://github.com/eslint/eslint", "bugs": "https://github.com/eslint/eslint/issues/"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "ajv": "^6.10.0", "chalk": "^4.0.0", "cross-spawn": "^7.0.2", "debug": "^4.0.1", "doctrine": "^3.0.0", "enquirer": "^2.3.5", "eslint-scope": "^5.1.0", "eslint-utils": "^2.0.0", "eslint-visitor-keys": "^1.2.0", "espree": "^7.1.0", "esquery": "^1.2.0", "esutils": "^2.0.2", "file-entry-cache": "^5.0.1", "functional-red-black-tree": "^1.0.1", "glob-parent": "^5.0.0", "globals": "^12.1.0", "ignore": "^4.0.6", "import-fresh": "^3.0.0", "imurmurhash": "^0.1.4", "is-glob": "^4.0.0", "js-yaml": "^3.13.1", "json-stable-stringify-without-jsonify": "^1.0.1", "levn": "^0.4.1", "lodash": "^4.17.14", "minimatch": "^3.0.4", "natural-compare": "^1.4.0", "optionator": "^0.9.1", "progress": "^2.0.0", "regexpp": "^3.1.0", "semver": "^7.2.1", "strip-ansi": "^6.0.0", "strip-json-comments": "^3.1.0", "table": "^5.2.3", "text-table": "^0.2.0", "v8-compile-cache": "^2.0.3"}, "devDependencies": {"@babel/core": "^7.4.3", "@babel/preset-env": "^7.4.3", "acorn": "^7.2.0", "babel-loader": "^8.0.5", "chai": "^4.0.1", "cheerio": "^0.22.0", "common-tags": "^1.8.0", "core-js": "^3.1.3", "dateformat": "^3.0.3", "ejs": "^3.0.2", "escape-string-regexp": "^3.0.0", "eslint": "file:.", "eslint-config-eslint": "file:packages/eslint-config-eslint", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-internal-rules": "file:tools/internal-rules", "eslint-plugin-jsdoc": "^22.1.0", "eslint-plugin-node": "^11.1.0", "eslint-release": "^2.0.0", "eslump": "^2.0.0", "esprima": "^4.0.1", "glob": "^7.1.6", "jsdoc": "^3.5.5", "karma": "^4.0.1", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.3", "karma-webpack": "^4.0.0-rc.6", "leche": "^2.2.3", "lint-staged": "^10.1.2", "load-perf": "^0.2.0", "markdownlint": "^0.19.0", "markdownlint-cli": "^0.22.0", "memfs": "^3.0.1", "mocha": "^7.1.1", "mocha-junit-reporter": "^1.23.0", "npm-license": "^0.3.3", "nyc": "^15.0.1", "proxyquire": "^2.0.1", "puppeteer": "^2.1.1", "recast": "^0.19.0", "regenerator-runtime": "^0.13.2", "shelljs": "^0.8.2", "sinon": "^9.0.1", "temp": "^0.9.0", "webpack": "^4.35.0", "webpack-cli": "^3.3.5", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 3}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![NPM version](https://img.shields.io/npm/v/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Downloads](https://img.shields.io/npm/dm/eslint.svg)](https://www.npmjs.com/package/eslint)\n[![Build Status](https://github.com/eslint/eslint/workflows/CI/badge.svg)](https://github.com/eslint/eslint/actions)\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=shield)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_shield)\n<br />\n[![Open Collective Backers](https://img.shields.io/opencollective/backers/eslint)](https://opencollective.com/eslint)\n[![Open Collective Sponsors](https://img.shields.io/opencollective/sponsors/eslint)](https://opencollective.com/eslint)\n[![Follow us on Twitter](https://img.shields.io/twitter/follow/geteslint?label=Follow&style=social)](https://twitter.com/intent/user?screen_name=geteslint)\n\n# ESLint\n\n[Website](https://eslint.org) |\n[Configuring](https://eslint.org/docs/user-guide/configuring) |\n[Rules](https://eslint.org/docs/rules/) |\n[Contributing](https://eslint.org/docs/developer-guide/contributing) |\n[Reporting Bugs](https://eslint.org/docs/developer-guide/contributing/reporting-bugs) |\n[Code of Conduct](https://js.foundation/community/code-of-conduct) |\n[Twitter](https://twitter.com/geteslint) |\n[Mailing List](https://groups.google.com/group/eslint) |\n[Chat Room](https://eslint.org/chat)\n\nESLint is a tool for identifying and reporting on patterns found in ECMAScript/JavaScript code. In many ways, it is similar to JSLint and JSHint with a few exceptions:\n\n* ESLint uses [Espree](https://github.com/eslint/espree) for JavaScript parsing.\n* ESLint uses an AST to evaluate patterns in code.\n* ESLint is completely pluggable, every single rule is a plugin and you can add more at runtime.\n\n## Table of Contents\n\n1. [Installation and Usage](#installation-and-usage)\n2. [Configuration](#configuration)\n3. [Code of Conduct](#code-of-conduct)\n4. [Filing Issues](#filing-issues)\n5. [Frequently Asked Questions](#faq)\n6. [Releases](#releases)\n7. [Security Policy](#security-policy)\n8. [Semantic Versioning Policy](#semantic-versioning-policy)\n9. [License](#license)\n10. [Team](#team)\n11. [Sponsors](#sponsors)\n12. [Technology Sponsors](#technology-sponsors)\n\n## <a name=\"installation-and-usage\"></a>Installation and Usage\n\nPrerequisites: [Node.js](https://nodejs.org/) (`^10.12.0`, or `>=12.0.0`) built with SSL support. (If you are using an official Node.js distribution, SSL is always built in.)\n\nYou can install ESLint using npm:\n\n```\n$ npm install eslint --save-dev\n```\n\nYou should then set up a configuration file:\n\n```\n$ ./node_modules/.bin/eslint --init\n```\n\nAfter that, you can run ESLint on any file or directory like this:\n\n```\n$ ./node_modules/.bin/eslint yourfile.js\n```\n\n## <a name=\"configuration\"></a>Configuration\n\nAfter running `eslint --init`, you'll have a `.eslintrc` file in your directory. In it, you'll see some rules configured like this:\n\n```json\n{\n    \"rules\": {\n        \"semi\": [\"error\", \"always\"],\n        \"quotes\": [\"error\", \"double\"]\n    }\n}\n```\n\nThe names `\"semi\"` and `\"quotes\"` are the names of [rules](https://eslint.org/docs/rules) in ESLint. The first value is the error level of the rule and can be one of these values:\n\n* `\"off\"` or `0` - turn the rule off\n* `\"warn\"` or `1` - turn the rule on as a warning (doesn't affect exit code)\n* `\"error\"` or `2` - turn the rule on as an error (exit code will be 1)\n\nThe three error levels allow you fine-grained control over how ESLint applies rules (for more configuration options and details, see the [configuration docs](https://eslint.org/docs/user-guide/configuring)).\n\n## <a name=\"code-of-conduct\"></a>Code of Conduct\n\nESLint adheres to the [JS Foundation Code of Conduct](https://js.foundation/community/code-of-conduct).\n\n## <a name=\"filing-issues\"></a>Filing Issues\n\nBefore filing an issue, please be sure to read the guidelines for what you're reporting:\n\n* [Bug Report](https://eslint.org/docs/developer-guide/contributing/reporting-bugs)\n* [Propose a New Rule](https://eslint.org/docs/developer-guide/contributing/new-rules)\n* [Proposing a Rule Change](https://eslint.org/docs/developer-guide/contributing/rule-changes)\n* [Request a Change](https://eslint.org/docs/developer-guide/contributing/changes)\n\n## <a name=\"faq\"></a>Frequently Asked Questions\n\n### I'm using JSCS, should I migrate to ESLint?\n\nYes. [JSCS has reached end of life](https://eslint.org/blog/2016/07/jscs-end-of-life) and is no longer supported.\n\nWe have prepared a [migration guide](https://eslint.org/docs/user-guide/migrating-from-jscs) to help you convert your JSCS settings to an ESLint configuration.\n\nWe are now at or near 100% compatibility with JSCS. If you try ESLint and believe we are not yet compatible with a JSCS rule/configuration, please create an issue (mentioning that it is a JSCS compatibility issue) and we will evaluate it as per our normal process.\n\n### Does Prettier replace ESLint?\n\nNo, ESLint does both traditional linting (looking for problematic patterns) and style checking (enforcement of conventions). You can use ESLint for everything, or you can combine both using Prettier to format your code and ESLint to catch possible errors.\n\n### Why can't ESLint find my plugins?\n\n* Make sure your plugins (and ESLint) are both in your project's `package.json` as devDependencies (or dependencies, if your project uses ESLint at runtime).\n* Make sure you have run `npm install` and all your dependencies are installed.\n* Make sure your plugins' peerDependencies have been installed as well. You can use `npm view eslint-plugin-myplugin peerDependencies` to see what peer dependencies `eslint-plugin-myplugin` has.\n\n### Does ESLint support JSX?\n\nYes, ESLint natively supports parsing JSX syntax (this must be enabled in [configuration](https://eslint.org/docs/user-guide/configuring)). Please note that supporting JSX syntax *is not* the same as supporting React. React applies specific semantics to JSX syntax that ESLint doesn't recognize. We recommend using [eslint-plugin-react](https://www.npmjs.com/package/eslint-plugin-react) if you are using React and want React semantics.\n\n### What ECMAScript versions does ESLint support?\n\nESLint has full support for ECMAScript 3, 5 (default), 2015, 2016, 2017, 2018, and 2019. You can set your desired ECMAScript syntax (and other settings, like global variables or your target environments) through [configuration](https://eslint.org/docs/user-guide/configuring).\n\n### What about experimental features?\n\nESLint's parser only officially supports the latest final ECMAScript standard. We will make changes to core rules in order to avoid crashes on stage 3 ECMAScript syntax proposals (as long as they are implemented using the correct experimental ESTree syntax). We may make changes to core rules to better work with language extensions (such as JSX, Flow, and TypeScript) on a case-by-case basis.\n\nIn other cases (including if rules need to warn on more or fewer cases due to new syntax, rather than just not crashing), we recommend you use other parsers and/or rule plugins. If you are using Babel, you can use the [babel-eslint](https://github.com/babel/babel-eslint) parser and [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) to use any option available in Babel.\n\nOnce a language feature has been adopted into the ECMAScript standard (stage 4 according to the [TC39 process](https://tc39.github.io/process-document/)), we will accept issues and pull requests related to the new feature, subject to our [contributing guidelines](https://eslint.org/docs/developer-guide/contributing). Until then, please use the appropriate parser and plugin(s) for your experimental feature.\n\n### Where to ask for help?\n\nJoin our [Mailing List](https://groups.google.com/group/eslint) or [Chatroom](https://eslint.org/chat).\n\n## <a name=\"releases\"></a>Releases\n\nWe have scheduled releases every two weeks on Friday or Saturday. You can follow a [release issue](https://github.com/eslint/eslint/issues?q=is%3Aopen+is%3Aissue+label%3Arelease) for updates about the scheduling of any particular release.\n\n## <a name=\"security-policy\"></a>Security Policy\n\nESLint takes security seriously. We work hard to ensure that ESLint is safe for everyone and that security issues are addressed quickly and responsibly. Read the full [security policy](https://github.com/eslint/.github/blob/master/SECURITY.md).\n\n## <a name=\"semantic-versioning-policy\"></a>Semantic Versioning Policy\n\nESLint follows [semantic versioning](https://semver.org). However, due to the nature of ESLint as a code quality tool, it's not always clear when a minor or major version bump occurs. To help clarify this for everyone, we've defined the following semantic versioning policy for ESLint:\n\n* Patch release (intended to not break your lint build)\n    * A bug fix in a rule that results in ESLint reporting fewer errors.\n    * A bug fix to the CLI or core (including formatters).\n    * Improvements to documentation.\n    * Non-user-facing changes such as refactoring code, adding, deleting, or modifying tests, and increasing test coverage.\n    * Re-releasing after a failed release (i.e., publishing a release that doesn't work for anyone).\n* Minor release (might break your lint build)\n    * A bug fix in a rule that results in ESLint reporting more errors.\n    * A new rule is created.\n    * A new option to an existing rule that does not result in ESLint reporting more errors by default.\n    * An existing rule is deprecated.\n    * A new CLI capability is created.\n    * New capabilities to the public API are added (new classes, new methods, new arguments to existing methods, etc.).\n    * A new formatter is created.\n    * `eslint:recommended` is updated and will result in strictly fewer errors (e.g., rule removals).\n* Major release (likely to break your lint build)\n    * `eslint:recommended` is updated and may result in new errors (e.g., rule additions, most rule option updates).\n    * A new option to an existing rule that results in ESLint reporting more errors by default.\n    * An existing formatter is removed.\n    * Part of the public API is removed or changed in an incompatible way.\n\nAccording to our policy, any minor update may report more errors than the previous release (ex: from a bug fix). As such, we recommend using the tilde (`~`) in `package.json` e.g. `\"eslint\": \"~3.1.0\"` to guarantee the results of your builds.\n\n## <a name=\"license\"></a>License\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Feslint%2Feslint?ref=badge_large)\n\n## <a name=\"team\"></a>Team\n\nThese folks keep the project moving and are resources for help.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--teamstart-->\n\n### Technical Steering Committee (TSC)\n\nThe people who manage releases, review feature requests, and meet regularly to ensure ESLint is properly maintained.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/nzakas\">\n<img src=\"https://github.com/nzakas.png?s=75\" width=\"75\" height=\"75\"><br />\nNicholas C. Zakas\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/btmills\">\n<img src=\"https://github.com/btmills.png?s=75\" width=\"75\" height=\"75\"><br />\nBrandon Mills\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mysticatea\">\n<img src=\"https://github.com/mysticatea.png?s=75\" width=\"75\" height=\"75\"><br />\nToru Nagashima\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/kaicataldo\">\n<img src=\"https://github.com/kaicataldo.png?s=75\" width=\"75\" height=\"75\"><br />\nKai Cataldo\n</a>\n</td></tr></tbody></table>\n\n\n### Reviewers\n\nThe people who review and implement new features.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/aladdin-add\">\n<img src=\"https://github.com/aladdin-add.png?s=75\" width=\"75\" height=\"75\"><br />\n\u859b\u5b9a\u8c14\u7684\u732b\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/mdjermanovic\">\n<img src=\"https://github.com/mdjermanovic.png?s=75\" width=\"75\" height=\"75\"><br />\nMilos Djermanovic\n</a>\n</td></tr></tbody></table>\n\n\n\n\n### Committers\n\nThe people who review and fix bugs and help triage issues.\n\n<table><tbody><tr><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/g-plane\">\n<img src=\"https://github.com/g-plane.png?s=75\" width=\"75\" height=\"75\"><br />\nPig Fang\n</a>\n</td><td align=\"center\" valign=\"top\" width=\"11%\">\n<a href=\"https://github.com/yeonjuan\">\n<img src=\"https://github.com/yeonjuan.png?s=75\" width=\"75\" height=\"75\"><br />\nYeonJuan\n</a>\n</td></tr></tbody></table>\n\n\n<!--teamend-->\n\n## <a name=\"sponsors\"></a>Sponsors\n\nThe following companies, organizations, and individuals support ESLint's ongoing maintenance and development. [Become a Sponsor](https://opencollective.com/eslint) to get your logo on our README and website.\n\n<!-- NOTE: This section is autogenerated. Do not manually edit.-->\n<!--sponsorsstart-->\n<h3>Gold Sponsors</h3>\n<p><a href=\"https://www.shopify.com\"><img src=\"https://images.opencollective.com/shopify/e780cd4/logo.png\" alt=\"Shopify\" height=\"96\"></a> <a href=\"https://www.salesforce.com\"><img src=\"https://images.opencollective.com/salesforce/ca8f997/logo.png\" alt=\"Salesforce\" height=\"96\"></a> <a href=\"https://www.airbnb.com/\"><img src=\"https://images.opencollective.com/airbnb/d327d66/logo.png\" alt=\"Airbnb\" height=\"96\"></a></p><h3>Silver Sponsors</h3>\n<p><a href=\"https://liftoff.io/\"><img src=\"https://images.opencollective.com/liftoff/5c4fa84/logo.png\" alt=\"Liftoff\" height=\"64\"></a> <a href=\"https://www.ampproject.org/\"><img src=\"https://images.opencollective.com/amp/c8a3b25/logo.png\" alt=\"AMP Project\" height=\"64\"></a></p><h3>Bronze Sponsors</h3>\n<p><a href=\"https://www.norgekasino.com\"><img src=\"https://images.opencollective.com/norgekasino/ecfd57a/logo.png\" alt=\"Norgekasino\" height=\"32\"></a> <a href=\"https://www.japanesecasino.com/\"><img src=\"https://images.opencollective.com/japanesecasino/b0ffe3c/logo.png\" alt=\"Japanesecasino\" height=\"32\"></a> <a href=\"https://bruce.agency\"><img src=\"https://images.opencollective.com/brucemade/0c70c59/logo.png\" alt=\"Bruce\" height=\"32\"></a> <a href=\"https://edubirdie.com/\"><img src=\"https://images.opencollective.com/edubirdie2/b1d51ab/logo.png\" alt=\"EduBirdie\" height=\"32\"></a> <a href=\"https://www.casinotop.com/\"><img src=\"https://images.opencollective.com/casinotop-com/10fd95b/logo.png\" alt=\"CasinoTop.com\" height=\"32\"></a> <a href=\"https://www.casinotopp.net/\"><img src=\"https://images.opencollective.com/casino-topp/1dd399a/logo.png\" alt=\"Casino Topp\" height=\"32\"></a> <a href=\"https://writersperhour.com/write-my-essay\"><img src=\"https://images.opencollective.com/writersperhour/5787d4b/logo.png\" alt=\"Writers Per Hour\" height=\"32\"></a> <a href=\"https://www.crosswordsolver.org/anagram-solver/\"><img src=\"https://images.opencollective.com/anagram-solver/2666271/logo.png\" alt=\"Anagram Solver\" height=\"32\"></a> <a href=\"https://cooltechzone.com/netflix-vpn\"><img src=\"https://images.opencollective.com/vpn-netflix/4850160/logo.png\" alt=\"vpn netflix\" height=\"32\"></a> <a href=\"https://www.kasinot.fi\"><img src=\"https://images.opencollective.com/kasinot-fi/e09aa2e/logo.png\" alt=\"Kasinot.fi\" height=\"32\"></a> <a href=\"https://www.pelisivut.com\"><img src=\"https://images.opencollective.com/pelisivut/04f08f2/logo.png\" alt=\"Pelisivut\" height=\"32\"></a> <a href=\"https://www.nettikasinot.org\"><img src=\"https://images.opencollective.com/nettikasinot-org/53a4b44/logo.png\" alt=\"Nettikasinot.org\" height=\"32\"></a> <a href=\"https://www.bonus.com.de/freispiele\"><img src=\"https://images.opencollective.com/bonusfinder-deutschland/646169e/logo.png\" alt=\"BonusFinder Deutschland\" height=\"32\"></a> <a href=\"https://www.bugsnag.com/platforms?utm_source=Open Collective&utm_medium=Website&utm_content=open-source&utm_campaign=2019-community&utm_term=\"><img src=\"https://images.opencollective.com/bugsnag-stability-monitoring/c2cef36/logo.png\" alt=\"Bugsnag Stability Monitoring\" height=\"32\"></a> <a href=\"https://mixpanel.com\"><img src=\"https://images.opencollective.com/mixpanel/cd682f7/logo.png\" alt=\"Mixpanel\" height=\"32\"></a> <a href=\"https://www.vpsserver.com\"><img src=\"https://images.opencollective.com/vpsservercom/logo.png\" alt=\"VPS Server\" height=\"32\"></a> <a href=\"https://icons8.com\"><img src=\"https://images.opencollective.com/icons8/0b37d14/logo.png\" alt=\"Free Icons by Icons8\" height=\"32\"></a> <a href=\"https://discordapp.com\"><img src=\"https://images.opencollective.com/discordapp/7e3d9a9/logo.png\" alt=\"Discord\" height=\"32\"></a> <a href=\"https://themeisle.com\"><img src=\"https://images.opencollective.com/themeisle/d5592fe/logo.png\" alt=\"ThemeIsle\" height=\"32\"></a> <a href=\"https://tekhattan.com\"><img src=\"https://images.opencollective.com/tekhattan/bc73c28/logo.png\" alt=\"TekHattan\" height=\"32\"></a> <a href=\"https://www.marfeel.com/\"><img src=\"https://images.opencollective.com/marfeel/4b88e30/logo.png\" alt=\"Marfeel\" height=\"32\"></a> <a href=\"http://www.firesticktricks.com\"><img src=\"https://images.opencollective.com/fire-stick-tricks/b8fbe2c/logo.png\" alt=\"Fire Stick Tricks\" height=\"32\"></a></p>\n<!--sponsorsend-->\n\n## <a name=\"technology-sponsors\"></a>Technology Sponsors\n\n* Site search ([eslint.org](https://eslint.org)) is sponsored by [Algolia](https://www.algolia.com)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2139401}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 9477133}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 48569244}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 141268101}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 261190528}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 462605337}], "dependentsCount": 9962, "starsCount": 328}, "github": {"homepage": "https://eslint.org", "starsCount": 16701, "forksCount": 2938, "subscribersCount": 308, "issues": {"count": 13370, "openCount": 130, "distribution": {"3600": 1503, "10800": 956, "32400": 1171, "97200": 1765, "291600": 1900, "874800": 1669, "2624400": 1346, "7873200": 1630, "23619600": 1075, "70858800": 336, "212576400": 19}, "isDisabled": false}, "contributors": [{"username": "nzakas", "commitsCount": 756}, {"username": "not-an-aardvark", "commitsCount": 510}, {"username": "mysticatea", "commitsCount": 333}, {"username": "alberto", "commitsCount": 231}, {"username": "eslint[bot]", "commitsCount": 194}, {"username": "gyandeeps", "commitsCount": 182}, {"username": "mdjermanovic", "commitsCount": 172}, {"username": "ilyavolodin", "commitsCount": 149}, {"username": "kaicataldo", "commitsCount": 136}, {"username": "aladdin-add", "commitsCount": 134}, {"username": "btmills", "commitsCount": 133}, {"username": "platinumazure", "commitsCount": 133}, {"username": "michaelficarra", "commitsCount": 112}, {"username": "BYK", "commitsCount": 82}, {"username": "iancmyers", "commitsCount": 71}, {"username": "lo1tuma", "commitsCount": 69}, {"username": "IanVS", "commitsCount": 57}, {"username": "g-plane", "commitsCount": 43}, {"username": "mduvall", "commitsCount": 42}, {"username": "vitorbal", "commitsCount": 37}, {"username": "yeonjuan", "commitsCount": 35}, {"username": "pedrottimark", "commitsCount": 34}, {"username": "anikethsaha", "commitsCount": 26}, {"username": "roadhump", "commitsCount": 24}, {"username": "DavidAnson", "commitsCount": 23}, {"username": "jrajav", "commitsCount": 23}, {"username": "gcochard", "commitsCount": 19}, {"username": "VictorHom", "commitsCount": 18}, {"username": "jamesallardice", "commitsCount": 17}, {"username": "jrpool", "commitsCount": 17}, {"username": "ljharb", "commitsCount": 16}, {"username": "scriptdaemon", "commitsCount": 16}, {"username": "golopot", "commitsCount": 15}, {"username": "jrvidal", "commitsCount": 15}, {"username": "j-f1", "commitsCount": 11}, {"username": "bradzacher", "commitsCount": 10}, {"username": "goatslacker", "commitsCount": 10}, {"username": "makepanic", "commitsCount": 10}, {"username": "mgol", "commitsCount": 10}, {"username": "sstern6", "commitsCount": 10}, {"username": "albertosantini", "commitsCount": 9}, {"username": "mamacdon", "commitsCount": 9}, {"username": "tschaub", "commitsCount": 9}, {"username": "xjamundx", "commitsCount": 9}, {"username": "knunery", "commitsCount": 8}, {"username": "madbence", "commitsCount": 8}, {"username": "soda0289", "commitsCount": 8}, {"username": "vegetableman", "commitsCount": 8}, {"username": "andrewdeandrade", "commitsCount": 7}, {"username": "brettz9", "commitsCount": 7}, {"username": "gkz", "commitsCount": 7}, {"username": "jonathanKingston", "commitsCount": 7}, {"username": "pmcelhaney", "commitsCount": 7}, {"username": "spadgos", "commitsCount": 7}, {"username": "spmurrayzzz", "commitsCount": 7}, {"username": "vsemozhetbyt", "commitsCount": 7}, {"username": "Krinkle", "commitsCount": 6}, {"username": "PoziWorld", "commitsCount": 6}, {"username": "TheSavior", "commitsCount": 6}, {"username": "Trott", "commitsCount": 6}, {"username": "alefteris", "commitsCount": 6}, {"username": "annie", "commitsCount": 6}, {"username": "aparajita", "commitsCount": 6}, {"username": "briandipalma", "commitsCount": 6}, {"username": "dguo", "commitsCount": 6}, {"username": "glenjamin", "commitsCount": 6}, {"username": "hzoo", "commitsCount": 6}, {"username": "jrfeenst", "commitsCount": 6}, {"username": "pdehaan", "commitsCount": 6}, {"username": "puzrin", "commitsCount": 6}, {"username": "rajenp", "commitsCount": 6}, {"username": "revolter", "commitsCount": 6}, {"username": "sindresorhus", "commitsCount": 6}, {"username": "Delapouite", "commitsCount": 5}, {"username": "Mardak", "commitsCount": 5}, {"username": "MichaelPaulukonis", "commitsCount": 5}, {"username": "NateEag", "commitsCount": 5}, {"username": "aubergine10", "commitsCount": 5}, {"username": "cjihrig", "commitsCount": 5}, {"username": "ilovejary", "commitsCount": 5}, {"username": "malcolmsgroves", "commitsCount": 5}, {"username": "mathieumg", "commitsCount": 5}, {"username": "meeber", "commitsCount": 5}, {"username": "mjomble", "commitsCount": 5}, {"username": "molee1905", "commitsCount": 5}, {"username": "nre", "commitsCount": 5}, {"username": "onurtemizkan", "commitsCount": 5}, {"username": "tikotzky", "commitsCount": 5}, {"username": "valorkin", "commitsCount": 5}, {"username": "whitneyit", "commitsCount": 5}, {"username": "BridgeAR", "commitsCount": 4}, {"username": "JPeer264", "commitsCount": 4}, {"username": "SimenB", "commitsCount": 4}, {"username": "gajus", "commitsCount": 4}, {"username": "i-ron-y", "commitsCount": 4}, {"username": "nwoltman", "commitsCount": 4}, {"username": "preco21", "commitsCount": 4}, {"username": "realityking", "commitsCount": 4}, {"username": "scottohara", "commitsCount": 4}, {"username": "silverwind", "commitsCount": 4}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 46}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 131}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 278}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 590}]}, "source": {"files": {"readmeSize": 17554, "testsSize": 9443525, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint.svg", "shields": "https://img.shields.io/npm/v/eslint.svg", "content": "https://img.shields.io/npm/v/eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/eslint.svg", "shields": "https://img.shields.io/npm/dm/eslint.svg", "content": "https://img.shields.io/npm/dm/eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.69, "outdatedDependencies": {"ignore": {"required": "^4.0.6", "stable": "5.1.8", "latest": "5.1.8"}, "globals": {"required": "^12.1.0", "stable": "13.1.0", "latest": "13.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7035, "health": 0.8888888888888888, "branding": 0.7}, "popularity": {"communityInterest": 20375, "downloadsCount": 47089367, "downloadsAcceleration": 133802.38112633186, "dependentsCount": 9962}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.8081415671382189}}, "score": {"final": 0.9444959038598817, "detail": {"quality": 0.958914521468646, "popularity": 0.8770252012328583, "maintenance": 0.9996077913936785}}}}, {"mocha": {"analyzedAt": "2020-06-10T21:41:22.186Z", "collected": {"metadata": {"name": "mocha", "scope": "unscoped", "version": "8.0.1", "description": "simple, flexible, fun test framework", "keywords": ["mocha", "test", "bdd", "tdd", "tap", "testing", "chai", "assertion", "ava", "jest", "tape", "jasmine", "karma"], "date": "2020-06-10T21:39:54.728Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "boneskull", "email": "boneskull@boneskull.com"}, "maintainers": [{"username": "boneskull", "email": "boneskull@boneskull.com"}, {"username": "craigtaub", "email": "craigtaub@googlemail.com"}, {"username": "juergba", "email": "filodron@gmail.com"}, {"username": "munter", "email": "munter@fumle.dk"}], "contributors": [{"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, {"name": "James Carr", "email": "james.r.carr@gmail.com"}, {"name": "Fredrik Lindin", "email": "fredriklindin@gmail.com"}, {"name": "Konstantin Ka\u0308fer", "email": "github@kkaefer.com"}, {"name": "David Henderson", "email": "david.henderson@triggeredmessaging.com"}, {"name": "Harry Brundage", "email": "harry.brundage@gmail.com"}, {"name": "Quang Van", "email": "quangvvv@gmail.com"}, {"name": "hokaccha", "email": "k.hokamura@gmail.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "FARKAS M\u00e1t\u00e9", "email": "mate.farkas@virtual-call-center.eu"}, {"name": "Ben Lindsey", "email": "ben.lindsey@vungle.com"}, {"name": "Steve Mason", "email": "stevem@brandwatch.com"}, {"name": "Ryunosuke SATO", "email": "tricknotes.rs@gmail.com"}, {"name": "Nathan Rajlich", "email": "nathan@tootallnate.net"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "Yuest Wang", "email": "yuestwang@gmail.com"}, {"name": "Maciej Ma\u0142ecki", "email": "maciej.malecki@notimplemented.org"}, {"name": "Joshua Krall", "email": "joshuakrall@pobox.com"}, {"name": "Fedor Indutny", "email": "fedor.indutny@gmail.com"}, {"name": "Will Langstroth", "email": "will@langstroth.com"}, {"name": "Attila Domokos", "email": "adomokos@gmail.com"}, {"name": "Jussi Virtanen", "email": "jussi.k.virtanen@gmail.com"}, {"name": "Phil Sung", "email": "psung@dnanexus.com"}, {"name": "vlad", "email": "iamvlad@gmail.com"}, {"name": "Paul Miller", "email": "paul@paulmillr.com"}, {"name": "Bj\u00f8rge N\u00e6ss", "email": "bjoerge@origo.no"}, {"name": "Jeff Kunkle", "email": "jeff.kunkle@nearinfinity.com"}, {"name": "Fabio M. Costa", "email": "fabiomcosta@gmail.com"}, {"name": "Michael Riley", "email": "michael.riley@autodesk.com"}, {"name": "Ian Young", "email": "ian.greenleaf@gmail.com"}, {"name": "Jakub Nes\u030cetr\u030cil", "email": "jakub@apiary.io"}, {"name": "Tyson Tate", "email": "tyson@tysontate.com"}, {"name": "Jo Liss", "email": "joliss42@gmail.com"}, {"name": "Arian Stolwijk", "email": "arian@aryweb.nl"}, {"name": "Brendan Nee", "email": "brendan.nee@gmail.com"}, {"name": "Xavier Antoviaque", "email": "xavier@antoviaque.org"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Brian Beck", "email": "exogen@gmail.com"}, {"name": "Dave McKenna", "email": "davemckenna01@gmail.com"}, {"name": "Richard Dingwall", "email": "rdingwall@gmail.com"}, {"name": "Cory Thomas", "email": "cory.thomas@bazaarvoice.com"}, {"name": "R56", "email": "rviskus@gmail.com"}, {"name": "Ian Storm Taylor", "email": "ian@ianstormtaylor.com"}, {"name": "Andreas Brekken", "email": "andreas@opuno.com"}, {"name": "abrkn", "email": "a@abrkn.com"}, {"name": "Nathan Bowser", "email": "nathan.bowser@spiderstrategies.com"}, {"name": "L\u00e1szl\u00f3 B\u00e1csi", "email": "lackac@lackac.hu"}, {"name": "Atsuya Takagi", "email": "asoftonight@gmail.com"}, {"name": "Gavin Mogan", "email": "GavinM@airg.com"}, {"name": "fengmk2", "email": "fengmk2@gmail.com"}, {"name": "Seiya Konno", "email": "nulltask@gmail.com"}, {"name": "Jan Lehnardt", "email": "jan@apache.org"}, {"name": "Matt Robenolt", "email": "matt@ydekproductions.com"}, {"name": "Jonas Westerlund", "email": "jonas.westerlund@me.com"}, {"name": "Koen Punt", "email": "koen@koenpunt.nl"}, {"name": "Jason Barry", "email": "jay@jcbarry.com"}, {"name": "Austin Birch", "email": "mraustinbirch@gmail.com"}, {"name": "Adam Crabtree", "email": "adam.crabtree@redrobotlabs.com"}, {"name": "Casey Foster", "email": "casey@caseywebdev.com"}, {"name": "Jonathan Creamer", "email": "matrixhasyou2k4@gmail.com"}, {"name": "Brian Moore", "email": "guardbionic-github@yahoo.com"}, {"name": "traleig1", "email": "darkphoenix739@gmail.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}, {"name": "airportyh", "email": "airportyh@gmail.com"}, {"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Russ Bradberry", "email": "devdazed@me.com"}, {"name": "Ivan", "email": "ivan@kinvey.com"}, {"name": "Corey Butler", "email": "corey@coreybutler.com"}, {"name": "Paul Armstrong", "email": "paul@paularmstrongdesigns.com"}, {"name": "Herman Junge", "email": "herman@geekli.st"}, {"name": "Michael Schoonmaker", "email": "michael.r.schoonmaker@gmail.com"}, {"name": "Wil Moore III", "email": "wil.moore@wilmoore.com"}, {"name": "Pete Hawkins", "email": "pete@petes-imac.frontinternal.net"}, {"name": "tgautier@yahoo.com", "email": "tgautier@gmail.com"}, {"name": "yuitest", "email": "yuitest@cjhat.net"}, {"name": "Matt Smith", "email": "matthewgarysmith@gmail.com"}, {"name": "Katie Gengler", "email": "katiegengler@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Nathan Alderson", "email": "nathan.alderson@adtran.com"}, {"name": "Shawn Krisman", "email": "telaviv@github"}, {"name": "Merrick Christensen", "email": "merrick.christensen@gmail.com"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Simon Gaeremynck", "email": "gaeremyncks@gmail.com"}, {"name": "Jaakko Salonen", "email": "jaakko.salonen@iki.fi"}, {"name": "Jonathan Rajavuori", "email": "jrajav@gmail.com"}, {"name": "Forbes Lindesay", "email": "forbes@lindesay.co.uk"}, {"name": "Standa Opichal", "email": "opichals@gmail.com"}, {"name": "Matthew Shanley", "email": "matthewshanley@littlesecretsrecords.com"}, {"name": "James Lal", "email": "james@lightsofapollo.com"}, {"name": "Greg Perkins", "email": "gregperkins@alum.mit.edu"}, {"name": "Gareth Murphy", "email": "gareth.cpm@gmail.com"}, {"name": "Juzer Ali", "email": "er.juzerali@gmail.com"}, {"name": "Sasha Koss", "email": "koss@nocorp.me"}, {"name": "Justin DuJardin", "email": "justin.dujardin@sococo.com"}, {"name": "Frederico Silva", "email": "frederico.silva@gmail.com"}, {"name": "Jesse Dailey", "email": "jesse.dailey@gmail.com"}, {"name": "Yanis Wang", "email": "yanis.wang@gmail.com"}, {"name": "fcrisci", "email": "fabio.crisci@amadeus.com"}, {"name": "Javier Aranda", "email": "javierav@javierav.com"}, {"name": "Florian Margaine", "email": "florian@margaine.com"}, {"name": "fool2fish", "email": "fool2fish@gmail.com"}, {"name": "James Bowes", "email": "jbowes@repl.ca"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Mathieu Desv\u00e9", "email": "mathieudesve@MacBook-Pro-de-Mathieu.local"}, {"name": "Glen Huang", "email": "curvedmark@gmail.com"}, {"name": "Simon Goumaz", "email": "simon@attentif.ch"}, {"name": "Alexander Early", "email": "alexander.early@gmail.com"}, {"name": "Jimmy Cuadra", "email": "jimmy@jimmycuadra.com"}, {"name": "Russell Munson", "email": "rmunson@github.com"}, {"name": "lodr", "email": "salva@unoyunodiez.com"}, {"name": "Liam Newman", "email": "bitwiseman@gmail.com"}, {"name": "Dmitry Shirokov", "email": "deadrunk@gmail.com"}, {"name": "Fredrik Enestad", "email": "fredrik@devloop.se"}, {"name": "Kirill Korolyov", "email": "kirill.korolyov@gmail.com"}, {"name": "grasGendarme", "email": "me@grasgendar.me"}, {"name": "Mike Pennisi", "email": "mike@mikepennisi.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Tim Ehat", "email": "timehat@gmail.com"}, {"name": "Jeremy Martin", "email": "jmar777@gmail.com"}, {"name": "Mal Graty", "email": "mal.graty@googlemail.com"}, {"name": "Di Wu", "email": "dwu@palantir.com"}, {"name": "badunk", "email": "baduncaduncan@gmail.com"}, {"name": "Marc Kuo", "email": "kuomarc2@gmail.com"}, {"name": "Sindre Sorhus", "email": "sindresorhus@gmail.com"}, {"name": "Salehen Shovon Rahman", "email": "salehen.rahman@gmail.com"}, {"name": "eiji.ienaga", "email": "eiji.ienaga@gmail.com"}, {"name": "Oscar Godson", "email": "oscargodson@outlook.com"}, {"name": "Daniel Stockman", "email": "daniel.stockman@gmail.com"}, {"name": "Stephen Mathieson", "email": "smath23@gmail.com"}, {"name": "Travis Jeffery", "email": "tj@travisjeffery.com"}, {"name": "Andreas Lind Petersen", "email": "andreas@one.com"}, {"name": "Romain Prieto", "email": "romain.prieto@gmail.com"}, {"name": "JP Bochi", "email": "jpbochi@gmail.com"}, {"name": "Teddy Zeenny", "email": "teddyzeenny@gmail.com"}, {"name": "Roman Neuhauser", "email": "rneuhauser@suse.cz"}, {"name": "XhmikosR", "email": "xhmikosr@users.sourceforge.net"}, {"name": "Brian Lalor", "email": "blalor@bravo5.org"}, {"name": "Refael Ackermann", "email": "refael@empeeric.com"}, {"name": "ChrisWren", "email": "cthewren@gmail.com"}, {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com"}, {"name": "berni", "email": "berni@extensa.pl"}, {"name": "Andrey Popp", "email": "8mayday@gmail.com"}, {"name": "Brian M. Carlson", "email": "brian.m.carlson@gmail.com"}, {"name": "Michael Olson", "email": "mwolson@member.fsf.org"}, {"name": "Arnaud Brousseau", "email": "arnaud.brousseau@gmail.com"}, {"name": "Peter Rust", "email": "peter@cornerstonenw.com"}, {"name": "Vadim Nikitin", "email": "vnikiti@ncsu.edu"}, {"name": "Roman Shtylman", "email": "shtylman@gmail.com"}, {"name": "Tapiwa Kelvin", "email": "tapiwa@munzwa.tk"}, {"name": "Rustem Mustafin", "email": "mustafin.rustem@gmail.com"}, {"name": "Glen Mailer", "email": "glenjamin@gmail.com"}, {"name": "Nathan Black", "email": "nathan@nathanblack.org"}, {"name": "sebv", "email": "seb.vincent@gmail.com"}, {"name": "andy matthews", "email": "andy@commadelimited.com"}, {"name": "Benjie Gillam", "email": "benjie@jemjie.com"}, {"name": "Noshir Patel", "email": "nosh@blackpiano.com"}, {"name": "Ben Noordhuis", "email": "info@bnoordhuis.nl"}, {"name": "Jacob Wejendorp", "email": "jacob@wejendorp.dk"}, {"name": "claudyus", "email": "claudyus@HEX.(none)", "url": "none"}, {"name": "Denis Bardadym", "email": "bardadymchik@gmail.com"}, {"name": "Connor Dunn", "email": "connorhd@gmail.com"}, {"name": "Jonathan Ong", "email": "jonathanrichardong@gmail.com"}, {"name": "Harish", "email": "hyeluri@gmail.com"}, {"name": "Michal Charemza", "email": "michalcharemza@gmail.com"}, {"name": "startswithaj", "email": "jake.mc@icloud.com"}, {"name": "Gareth Aye", "email": "gaye@mozilla.com"}, {"name": "Nick Fitzgerald", "email": "fitzgen@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "kavun", "email": "kevin.a.reed@gmail.com"}, {"name": "Christoffer Hallas", "email": "christoffer.hallas@gmail.com"}, {"name": "Jonathan Park", "email": "jpark@daptiv.com"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "John Doty", "email": "jrhdoty@gmail.com"}, {"name": "Shaine Hatch", "email": "shaine@squidtree.com"}, {"name": "Ben Bradley", "email": "ben@bradleyit.com"}, {"name": "qiuzuhui", "email": "qiuzuhui@users.noreply.github.com"}, {"name": "Jean Ponchon", "email": "gelule@gmail.com"}, {"name": "Linus Unneb\u00e4ck", "email": "linus@folkdatorn.se"}, {"name": "Mattias Tidlund", "email": "mattias.tidlund@learningwell.se"}, {"name": "Matija Marohni\u0107", "email": "matija.marohnic@gmail.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Joel Kemp", "email": "mrjoelkemp@gmail.com"}, {"name": "Zsolt Tak\u00e1cs", "email": "zsolt@takacs.cc"}, {"name": "jsdevel", "email": "js.developer.undefined@gmail.com"}, {"name": "lakmeer", "email": "lakmeerkravid@gmail.com"}, {"name": "Joshua Appelman", "email": "jappelman@xebia.com"}, {"name": "Christopher Hiller", "email": "boneskull@boneskull.com"}, {"name": "Michael Demmer", "email": "demmer@jut.io"}, {"name": "Giovanni Bassi", "email": "giggio@giggio.net"}, {"name": "Panu Horsmalahti", "email": "panu.horsmalahti@iki.fi"}, {"name": "nishigori", "email": "Takuya_Nishigori@voyagegroup.com"}, {"name": "Nicolo Taddei", "email": "taddei.uk@gmail.com"}, {"name": "Diogo Monteiro", "email": "diogo.gmt@gmail.com"}, {"name": "mrShturman", "email": "mrshturman@gmail.com"}, {"name": "PoppinL", "email": "poppinlp@gmail.com"}, {"name": "samuel goldszmidt", "email": "samuel.goldszmidt@gmail.com"}, {"name": "Rob Wu", "email": "rob@robwu.nl"}, {"name": "Kent C. Dodds", "email": "kent+github@doddsfamily.us"}, {"name": "Kevin Conway", "email": "kevinjacobconway@gmail.com"}, {"name": "Dominique Quatravaux", "email": "dominique@quatravaux.org"}, {"name": "zhiyelee", "email": "zhiyelee@gmail.com"}, {"name": "Quanlong He", "email": "kyan.ql.he@gmail.com"}, {"name": "omardelarosa", "email": "thedelarosa@gmail.com"}, {"name": "Ariel Mashraki", "email": "ariel@mashraki.co.il"}, {"name": "Sean Lang", "email": "slang800@gmail.com"}, {"name": "David da Silva Cont\u00edn", "email": "dasilvacontin@gmail.com"}, {"name": "C. Scott Ananian", "email": "cscott@cscott.net"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Richard Knop", "email": "RichardKnop@users.noreply.github.com"}, {"name": "Buck Doyle", "email": "b@chromatin.ca"}, {"name": "Jonas Dohse", "email": "jonas@mbr-targeting.com"}, {"name": "oveddan", "email": "stangogh@gmail.com"}, {"name": "monowerker", "email": "monowerker@gmail.com"}, {"name": "Marcello Bastea-Forte", "email": "marcello@cellosoft.com"}, {"name": "Beno\u00eet Zugmeyer", "email": "bzugmeyer@gmail.com"}, {"name": "Vlad Magdalin", "email": "vlad@webflow.com"}, {"name": "Moshe Kolodny", "email": "mkolodny@integralads.com"}, {"name": "Tom Coquereau", "email": "tom@thau.me"}, {"name": "Timothy Gu", "email": "timothygu99@gmail.com"}, {"name": "Ian Zamojc", "email": "ian@thesecretlocation.net"}, {"name": "Martin Marko", "email": "marcus@gratex.com"}, {"name": "Chris Buckley", "email": "chris@cmbuckley.co.uk"}, {"name": "Jake Craige", "email": "james.craige@gmail.com"}, {"name": "Fede Ramirez", "email": "i@2fd.me"}, {"name": "Parker Moore", "email": "parkrmoore@gmail.com"}, {"name": "Todd Agulnick", "email": "tagulnick@onjack.com"}, {"name": "Daniel St. Jules", "email": "danielst.jules@gmail.com"}, {"name": "Rico Sta. Cruz", "email": "rstacruz@users.noreply.github.com"}, {"name": "Anis Safine", "email": "anis.safine.ext@francetv.fr"}, {"name": "Adam Gruber", "email": "talknmime@gmail.com"}, {"name": "Sam Mussell", "email": "smussell@gmail.com"}, {"name": "klaemo", "email": "klaemo@fastmail.fm"}, {"name": "Stewart Taylor", "email": "stewart.taylor1@gmail.com"}, {"name": "Jordan Sexton", "email": "jordan@jordansexton.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Andrii Shumada", "email": "eagleeyes91@gmail.com"}, {"name": "Dominic Barnes", "email": "dominic@dbarnes.info"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Sune Simonsen", "email": "sune@we-knowhow.dk"}, {"name": "Kyle Mitchell", "email": "kyle@kemitchell.com"}, {"name": "James Nylen", "email": "jnylen@gmail.com"}, {"name": "Jonathan Delgado", "email": "jdelgado@rewip.com"}, {"name": "Jake Marsh", "email": "jakemmarsh@gmail.com"}, {"name": "slyg", "email": "syl.faucherand@gmail.com"}, {"name": "Tomer Eskenazi", "email": "tomer.eskenazi@ironsrc.com"}, {"name": "Jeff Schilling", "email": "jeff.schilling@q2ebanking.com"}, {"name": "Ryan Hubbard", "email": "ryanmhubbard@gmail.com"}, {"name": "amsul", "email": "reach@amsul.ca"}, {"name": "Kevin Kirsche", "email": "Kev.Kirsche+GitHub@gmail.com"}, {"name": "Gabriel Silk", "email": "gabesilk@gmail.com"}, {"name": "Johnathon Sanders", "email": "outdooricon@gmail.com"}, {"name": "Max Goodman", "email": "c@chromakode.com"}, {"name": "Nathan Houle", "email": "nathan@nathanhoule.com"}, {"name": "Ben Vinegar", "email": "ben@benv.ca"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Tingan Ho", "email": "tingan87@gmail.com"}, {"name": "Guy Arye", "email": "arye.guy@gmail.com"}, {"name": "Nik Nyby", "email": "nnyby@columbia.edu"}, {"name": "Artem Govorov", "email": "artem.govorov@gmail.com"}, {"name": "Ajay Kodali", "email": "ajay.kodali@citrix.com"}, {"name": "Ryan Tablada", "email": "ryan.tablada@gmail.com"}, {"name": "Pavel Zubkou", "email": "pavel.zubkou@gmail.com"}, {"name": "gigadude", "email": "gigadude@users.noreply.github.com"}, {"name": "Outsider", "email": "outsideris@gmail.com"}, {"name": "Jason Lai", "email": "jason@getpebble.com"}, {"name": "Aaron Krause", "email": "aaronjkrause@gmail.com"}, {"name": "wsw", "email": "wsw0108@gmail.com"}, {"name": "Kevin Burke", "email": "kev@inburke.com"}, {"name": "Berker Peksag", "email": "berker.peksag@gmail.com"}, {"name": "nexdrew", "email": "andrew.goode@nextraq.com"}, {"name": "Hugo Giraudel", "email": "hugo.giraudel@gmail.com"}, {"name": "Rich Trott", "email": "rtrott@gmail.com"}, {"name": "Matt Giles", "email": "matt.giles@cerner.com"}, {"name": "Joey Cozza", "email": "joey@grow.com"}, {"name": "Kris Rasmussen", "email": "kristopher.rasmussen@gmail.com"}, {"name": "James G. Kim", "email": "jgkim@jayg.org"}, {"name": "Sorin Iclanzan", "email": "sorin@iclanzan.com"}, {"name": "Rob Raux", "email": "rraux@peachworks.com"}, {"name": "Sergey Simonchik", "email": "sergey.simonchik@jetbrains.com"}, {"name": "Ian W. Remmel", "email": "design@ianwremmel.com"}, {"name": "tmont", "email": "tommy.mont@gmail.com"}, {"name": "John Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "Fagner Brack", "email": "github3@fagnermartins.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Michiel de Jong", "email": "michiel@unhosted.org"}, {"name": "Benoit Larroque", "email": "zeta.ben@gmail.com"}, {"name": "Charles Lowell", "email": "cowboyd@frontside.io"}, {"name": "Joao Moreno", "email": "mail@joaomoreno.com"}, {"name": "Long Ho", "email": "longlho@users.noreply.github.com"}, {"name": "Robert Rossmann", "email": "rr.rossmann@me.com"}, {"name": "Aaron Hamid", "email": "aaron.hamid@gmail.com"}, {"name": "Stone", "email": "baoshi.li@adleida.com"}, {"name": "Tom Hughes", "email": "tom@compton.nu"}, {"name": "Soel", "email": "shachar.soel@sap.com"}, {"name": "Mislav Marohni\u0107", "email": "mislav.marohnic@gmail.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Frank Leon Rose", "email": "frankleonrose@gmail.com"}, {"name": "Ryan Shaw", "email": "ryan.shaw@min.vc"}, {"name": "Thedark1337", "email": "thedark1337@thedark1337.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "ryym", "email": "ryym.64@gmail.com"}, {"name": "Josh Lory", "email": "josh.lory@code.org"}, {"name": "Jonathan Kim", "email": "jkimbo@gmail.com"}, {"name": "Al Scott", "email": "al.scott@atomicobject.com"}, {"name": "Tobias Bieniek", "email": "tobias.bieniek@gmail.com"}, {"name": "Benjamin Eidelman", "email": "beneidel@gmail.com"}, {"name": "Julien Wajsberg", "email": "felash@gmail.com"}, {"name": "sarehag", "email": "joakim.sarehag@gmail.com"}, {"name": "Alexander Shepelin", "email": "Brightcor@gmail.com"}, {"name": "OlegTsyba", "email": "oleg.tsyba.ua@gmail.com"}, {"name": "Xavier Damman", "email": "xdamman@gmail.com"}, {"name": "Mick Brooks", "email": "mick.brooks@sinking.in"}, {"name": "Erik Eng", "email": "mail@ptz0n.se"}, {"name": "Kelong Wang", "email": "buaawkl@gmail.com"}, {"name": "J\u00e9r\u00e9mie Astori", "email": "jeremie@astori.fr"}, {"name": "ScottFreeCode", "email": "ScottFreeCode@users.noreply.github.com"}, {"name": "Sergio Santoro", "email": "santoro.srg@gmail.com"}, {"name": "Adrian Ludwig", "email": "me@adrianludwig.pl"}, {"name": "Anders Olsen Sandvik", "email": "Andersos@users.noreply.github.com"}, {"name": "Thomas Grainger", "email": "tagrain@gmail.com"}, {"name": "jimenglish81", "email": "jimenglish81@gmail.com"}, {"name": "Avi Vahl", "email": "avi.vahl@wix.com"}, {"name": "Jason Leyba", "email": "jmleyba@gmail.com"}, {"name": "silentcloud", "email": "rjmuqiang@gmail.com"}, {"name": "Dmitriy Simushev", "email": "simushevds@gmail.com"}, {"name": "simov", "email": "simeonvelichkov@gmail.com"}, {"name": "Ross Warren", "email": "rosswarren4@gmail.com"}, {"name": "Benson Trent", "email": "bensontrent@gmail.com"}, {"name": "rmacklin", "email": "richard.github@nrm.com"}, {"name": "Rob Loach", "email": "robloach@gmail.com"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Callum Macrae", "email": "callum@macr.ae"}, {"name": "ELLIOTTCABLE", "email": "me@ell.io"}, {"name": "Anton", "email": "anton.redfox@gmail.com"}, {"name": "Peter M\u00fcller", "email": "munter@fumle.dk"}, {"name": "APerson", "email": "danielhglus@gmail.com"}, {"name": "not-an-aardvark", "email": "not-an-aardvark@users.noreply.github.com"}, {"name": "Alhadis", "email": "gardnerjohng@gmail.com"}, {"name": "Slobodan Mi\u0161kovi\u0107", "email": "slobodan@miskovic.ca"}, {"name": "Philip M. White", "email": "philip@mailworks.org"}, {"name": "Christian", "email": "me@rndm.de"}, {"name": "anton", "email": "anton.valickij@gmail.com"}, {"name": "Dmitry Sorin", "email": "info@staypositive.ru"}, {"name": "Vivek Ganesan", "email": "caliberoviv@gmail.com"}, {"name": "Josh Eversmann", "email": "josh.eversmann@gmail.com"}, {"name": "inxorable", "email": "inxorable@codewren.ch"}, {"name": "Ben Harris", "email": "benhdev@gmail.com"}, {"name": "Aaron Petcoff", "email": "hello@aaronpetcoff.me"}, {"name": "Matt Bierner", "email": "mattbierner@gmail.com"}, {"name": "Ville Saukkonen", "email": "villesau@users.noreply.github.com"}, {"name": "Ben Hutchison", "email": "ben@aldaviva.com"}, {"name": "Volker Buzek", "email": "volker.buzek@sap.com"}, {"name": "Scott Kao", "email": "Scottkao85@users.noreply.github.com"}, {"name": "Sulabh Bista", "email": "sul4bh@gmail.com"}, {"name": "rotemdan", "email": "rotemdan@gmail.com"}, {"name": "Fumiaki MATSUSHIMA", "email": "mtsmfm@gmail.com"}, {"name": "Markus Tacker", "email": "m@coderbyheart.com"}, {"name": "Christoph Neuroth", "email": "christoph.neuroth@gmail.com"}, {"name": "Enric Pallerols", "email": "enric@pallerols.cat"}, {"name": "Craig Taub", "email": "craigtaub@gmail.com"}, {"name": "Yoshiya Hinosawa", "email": "hinosawa@waku-2.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Chris Lamb", "email": "chris@chris-lamb.co.uk"}, {"name": "Igwe Kalu", "email": "igwe.kalu@live.com"}, {"name": "Kevin Wang", "email": "kevin@fossa.io"}, {"name": "Laurence Rowe", "email": "lrowe@netflix.com"}, {"name": "Jakob Krigovsky", "email": "jakob@krigovsky.com"}, {"name": "Chris", "email": "chrisleck@users.noreply.github.com"}, {"name": "Kunal Nagpal", "email": "kunagpal@users.noreply.github.com"}, {"name": "elergy", "email": "elergy@yandex-team.ru"}, {"name": "Jupp M\u00fcller", "email": "jupp0r@gmail.com"}, {"name": "Popr\u00e1di \u00c1rp\u00e1d", "email": "popradi.arpad11@gmail.com"}, {"name": "Charlie Rudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "Angelica Valenta", "email": "angelicavalenta@gmail.com"}, {"name": "Jan Krems", "email": "jan.krems@groupon.com"}, {"name": "Josh Soref", "email": "jsoref@users.noreply.github.com"}, {"name": "solodynamo", "email": "bittuf3@gmail.com"}, {"name": "Eli Skeggs", "email": "skeggse@users.noreply.github.com"}, {"name": "Nikolaos Georgiou", "email": "Nikolaos.Georgiou@gmail.com"}, {"name": "olsonpm", "email": "olsonpm@users.noreply.github.com"}, {"name": "David Neubauer", "email": "davidneub@gmail.com"}, {"name": "Darryl Pogue", "email": "dvpdiner2@gmail.com"}, {"name": "38elements", "email": "mh19820223@gmail.com"}, {"name": "Guangcong Luo", "email": "guangcongluo@gmail.com"}, {"name": "David M. Lee", "email": "leedm777@yahoo.com"}, {"name": "tripu", "email": "t@tripu.info"}, {"name": "Pat Finnigan", "email": "patrick.k.finnigan@gmail.com"}, {"name": "Eugene Tiutiunnyk", "email": "eugene.tiutiunnyk@lookout.com"}, {"name": "Aaron Brady", "email": "aaron@mori.com"}, {"name": "Charles Merriam", "email": "charles.merriam@gmail.com"}, {"name": "Kevin Partington", "email": "platinum.azure@kernelpanicstudios.com"}, {"name": "Lane Kelly", "email": "lanekelly16@gmail.com"}, {"name": "Cube", "email": "maty21@gmail.com"}, {"name": "yehiyam", "email": "yehiyam@users.noreply.github.com"}, {"name": "Jon Surrell", "email": "jon.surrell@automattic.com"}, {"name": "\u73b0\u5145", "email": "qixiang.cqx@alibaba-inc.com"}, {"name": "Ahmad Bamieh", "email": "ahmadbamieh@gmail.com"}, {"name": "Capacitor Set", "email": "CapacitorSet@users.noreply.github.com"}, {"name": "Anthony", "email": "keppi@o2.pl"}, {"name": "Can Oztokmak", "email": "can@zeplin.io"}, {"name": "ImgBot", "email": "31427850+ImgBotApp@users.noreply.github.com"}, {"name": "Thomas Broadley", "email": "buriedunderbooks@hotmail.com"}, {"name": "FND", "email": "FND@users.noreply.github.com"}, {"name": "Dina Berry", "email": "dfberry@users.noreply.github.com"}, {"name": "Marais Rossouw", "email": "me@maraisr.com"}, {"name": "Andrew Krawchyk", "email": "903716+akrawchyk@users.noreply.github.com"}, {"name": "Ted Yavuzkurt", "email": "hello@TedY.io"}, {"name": "Daniel Ruf", "email": "daniel@daniel-ruf.de"}, {"name": "Harry Wolff", "email": "hswolff@users.noreply.github.com"}, {"name": "Valeri Karpov", "email": "val@karpov.io"}, {"name": "Silvio Massari", "email": "silvio.massari@auth0.com"}, {"name": "Joseph Lin", "email": "josephlin55555@gmail.com"}, {"name": "Honza Javorek", "email": "mail@honzajavorek.cz"}, {"name": "Harry Sarson", "email": "harry.sarson@hotmail.co.uk"}, {"name": "Anish Karandikar", "email": "anishkny@gmail.com"}, {"name": "Victor", "email": "victor@turo.com"}, {"name": "Emanuele", "email": "my.burning@gmail.com"}, {"name": "Thomas Vantuycom", "email": "thomasvantuycom@protonmail.com"}, {"name": "Alex Bainter", "email": "metalex9@users.noreply.github.com"}, {"name": "Jerry Muzsik", "email": "jerrymuzsik@icloud.com"}, {"name": "Nicolas Girault", "email": "nic.girault@gmail.com"}, {"name": "dfberry", "email": "dinaberry@outlook.com"}, {"name": "DavNej", "email": "davnej.dev@gmail.com"}, {"name": "Paul Roebuck", "email": "plroebuck@users.noreply.github.com"}, {"name": "Tim Harshman", "email": "goteamtim+git@gmail.com"}, {"name": "Charles Samborski", "email": "demurgos@demurgos.net"}, {"name": "Tobias Mollstam", "email": "tobias@mollstam.com"}, {"name": "Ben Glassman", "email": "benglass@users.noreply.github.com"}, {"name": "Mark Owsiak", "email": "mark.owsiak@gmail.com"}, {"name": "fargies", "email": "fargies@users.noreply.github.com"}, {"name": "Marc Udoff", "email": "mlucool@gmail.com"}, {"name": "gizemkeser", "email": "44727928+gizemkeser@users.noreply.github.com"}, {"name": "Fin Chen", "email": "finfin@gmail.com"}, {"name": "Brittany Moore", "email": "moore.brittanyann@gmail.com"}, {"name": "F\u00e1bio Santos", "email": "fabiosantosart@gmail.com"}, {"name": "Jayasankar", "email": "jayasankar.m@gmail.com"}, {"name": "Juerg B", "email": "44573692+juergba@users.noreply.github.com"}, {"name": "Svetlana", "email": "39729453+Lana-Light@users.noreply.github.com"}, {"name": "Martijn Cuppens", "email": "martijn.cuppens@intracto.com"}, {"name": "Anna Henningsen", "email": "github@addaleax.net"}, {"name": "Andreas Lind", "email": "andreaslindpetersen@gmail.com"}, {"name": "Chen Yangjian", "email": "252317+cyjake@users.noreply.github.com"}, {"name": "Corey Farrell", "email": "git@cfware.com"}, {"name": "Wanseob Lim", "email": "email@wanseob.com"}, {"name": "Szauka", "email": "33459309+Szauka@users.noreply.github.com"}, {"name": "Brian Tomlin", "email": "tendonstrength@gmail.com"}, {"name": "Sylvain", "email": "sstephant+github@gmail.com"}, {"name": "Adam Ginzberg", "email": "aginzberg@gmail.com"}, {"name": "XhmikosR", "email": "xhmikosr@gmail.com"}, {"name": "Gast\u00f3n I. Silva", "email": "givanse@gmail.com"}, {"name": "Andrew Bradley", "email": "cspotcode@gmail.com"}, {"name": "Andrew Bradley", "email": "abradley@brightcove.com"}, {"name": "DavidLi119", "email": "han.david.li@gmail.com"}, {"name": "James D. Rogers", "email": "jd2rogers2@gmail.com"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "juergba", "email": "filodron@gmail.com"}, {"name": "Sylvester Keil", "email": "sylvester@keil.or.at"}, {"name": "Bjorn Stromberg", "email": "bjorn@bjornstar.com"}, {"name": "Stephen Hess", "email": "trescube@users.noreply.github.com"}, {"name": "toyjhlee", "email": "toyjhlee@gmail.com"}, {"name": "Piotr Kuczynski", "email": "piotr.kuczynski@gmail.com"}, {"name": "Thomas Scholtes", "email": "thomas-scholtes@gmx.de"}, {"name": "Brian Lagerman", "email": "49239617+brian-lagerman@users.noreply.github.com"}, {"name": "Pascal", "email": "pascal@pascal.com"}, {"name": "Gabe Gorelick", "email": "gabegorelick@gmail.com"}, {"name": "Daniel Ruf", "email": "827205+DanielRuf@users.noreply.github.com"}, {"name": "Mario D\u00edaz Ce\u00f1era", "email": "46492068+MarioDiaz98@users.noreply.github.com"}, {"name": "Oliver Salzburg", "email": "oliver.salzburg@gmail.com"}, {"name": "Sona Lee", "email": "mojosoeun@gmail.com"}, {"name": "Park Seong-beom", "email": "parkgds@gmail.com"}, {"name": "EunChan Park", "email": "pec9399@naver.com"}, {"name": "Mia", "email": "miajeongdev@gmail.com"}, {"name": "Lindsay-Needs-Sleep", "email": "51773923+Lindsay-Needs-Sleep@users.noreply.github.com"}, {"name": "Soobin Bak", "email": "qls014738@gmail.com"}, {"name": "Peter Schmidt", "email": "peter@peterjs.com"}, {"name": "SheetJSDev", "email": "dev@sheetjs.com"}, {"name": "HyunSangHan", "email": "gustkd3@gmail.com"}, {"name": "Jan-Philip Gehrcke", "email": "jgehrcke@googlemail.com"}, {"name": "Robert Kieffer", "email": "robert@broofa.com"}, {"name": "Saerom Bang", "email": "saerombang11@gmail.com"}, {"name": "Kyle Fuller", "email": "kyle@fuller.li"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Hugo Kim", "email": "k7120792@gmail.com"}, {"name": "KyoungWan", "email": "kyngwan@gmail.com"}, {"name": "Zirak", "email": "zirakertan@gmail.com"}, {"name": "Christian Holm", "email": "christian@peakon.com"}, {"name": "Kai Cataldo", "email": "kai@kaicataldo.com"}, {"name": "Gil Tayar", "email": "gil.tayar@applitools.com"}, {"name": "Ulises Gasc\u00f3n", "email": "UlisesGascon@users.noreply.github.com"}, {"name": "kundol", "email": "jhc9639@naver.com"}, {"name": "Arvid Ottenberg", "email": "arvid.ottenberg@gmx.de"}, {"name": "Daniel0113", "email": "Daniel.febles97@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "JacobLey", "email": "37151850+JacobLey@users.noreply.github.com"}, {"name": "Gil Tayar", "email": "gil@tayar.org"}], "repository": {"type": "git", "url": "git+https://github.com/mochajs/mocha.git"}, "links": {"npm": "https://www.npmjs.com/package/mocha", "homepage": "https://mochajs.org/", "repository": "https://github.com/mochajs/mocha", "bugs": "https://github.com/mochajs/mocha/issues/"}, "license": "MIT", "dependencies": {"ansi-colors": "4.1.1", "browser-stdout": "1.3.1", "chokidar": "3.3.1", "debug": "3.2.6", "diff": "4.0.2", "escape-string-regexp": "1.0.5", "find-up": "4.1.0", "glob": "7.1.6", "growl": "1.10.5", "he": "1.2.0", "js-yaml": "3.13.1", "log-symbols": "3.0.0", "minimatch": "3.0.4", "ms": "2.1.2", "object.assign": "4.1.0", "promise.allsettled": "1.0.2", "serialize-javascript": "3.0.0", "strip-json-comments": "3.0.1", "supports-color": "7.1.0", "which": "2.0.2", "wide-align": "1.1.3", "workerpool": "6.0.0", "yargs": "13.3.2", "yargs-parser": "13.1.2", "yargs-unparser": "1.6.0"}, "devDependencies": {"@11ty/eleventy": "^0.10.0", "@11ty/eleventy-plugin-inclusive-language": "^1.0.0", "@mocha/docdash": "^2.1.3", "assetgraph-builder": "^8.0.1", "autoprefixer": "^9.7.4", "babel-eslint": "^10.1.0", "browserify": "^16.5.0", "browserify-package-json": "^1.0.1", "chai": "^4.2.0", "coffee-script": "^1.12.7", "coveralls": "^3.0.11", "cross-env": "^6.0.3", "cross-spawn": "^7.0.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-config-semistandard": "^15.0.0", "eslint-config-standard": "^14.1.1", "eslint-plugin-import": "^2.20.1", "eslint-plugin-node": "^11.0.0", "eslint-plugin-prettier": "^3.1.2", "eslint-plugin-promise": "^4.2.1", "eslint-plugin-standard": "^4.0.1", "fs-extra": "^9.0.0", "husky": "^4.2.3", "hyperlink": "^4.4.3", "image-size": "^0.8.3", "jsdoc": "^3.6.3", "karma": "^4.4.1", "karma-browserify": "^7.0.0", "karma-chrome-launcher": "^3.1.0", "karma-mocha": "^1.3.0", "karma-mocha-reporter": "^2.2.5", "karma-sauce-launcher": "^2.0.2", "lint-staged": "^9.5.0", "markdown-it": "^10.0.0", "markdown-it-anchor": "^5.2.5", "markdown-it-attrs": "^3.0.2", "markdown-it-emoji": "^1.4.0", "markdown-it-prism": "^2.0.5", "markdown-toc": "^1.2.0", "markdownlint-cli": "^0.22.0", "needle": "^2.4.1", "nps": "^5.9.12", "nyc": "^15.0.0", "prettier": "^1.19.1", "remark": "^11.0.2", "remark-github": "^8.0.0", "remark-inline-links": "^3.1.3", "rewiremock": "^3.14.1", "rimraf": "^3.0.2", "sinon": "^9.0.1", "strip-ansi": "^6.0.0", "svgo": "^1.3.2", "through2": "^3.0.1", "to-vfile": "^6.1.0", "unexpected": "^11.14.0", "unexpected-eventemitter": "^2.2.0", "unexpected-sinon": "^10.11.2", "uslug": "^1.0.4", "watchify": "^3.11.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 8}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 11}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <img src=\"https://cldup.com/xFVFxOioAU.svg\" alt=\"Mocha test framework\"/>\n</p>\n\n<p align=\"center\">\u2615\ufe0f Simple, flexible, fun JavaScript test framework for Node.js & The Browser \u2615\ufe0f</p>\n\n<p align=\"center\"><a href=\"http://travis-ci.org/mochajs/mocha\"><img src=\"https://api.travis-ci.org/mochajs/mocha.svg?branch=master\" alt=\"Build Status\"></a>  <a href=\"https://coveralls.io/github/mochajs/mocha\"><img src=\"https://coveralls.io/repos/github/mochajs/mocha/badge.svg\" alt=\"Coverage Status\"></a>  <a href=\"https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_shield\"><img src=\"https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=shield\" alt=\"FOSSA Status\"></a>  <a href=\"https://gitter.im/mochajs/mocha?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Gitter\"></a>  <a href=\"https://github.com/mochajs/mocha#backers\"><img src=\"https://opencollective.com/mochajs/backers/badge.svg\" alt=\"OpenCollective\"></a>  <a href=\"https://github.com/mochajs/mocha#sponsors\"><img src=\"https://opencollective.com/mochajs/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n</p>\n\n<p align=\"center\"><br><img alt=\"Mocha Browser Support h/t SauceLabs\" src=\"https://saucelabs.com/browser-matrix/mochajs.svg\" width=\"354\"></p>\n\n## Links\n\n- **[Documentation](https://mochajs.org/)**\n- **[Release Notes / History / Changes](https://github.com/mochajs/mocha/blob/master/CHANGELOG.md)**\n- [Code of Conduct](https://github.com/mochajs/mocha/blob/master/.github/CODE_OF_CONDUCT.md)\n- [Contributing](https://github.com/mochajs/mocha/blob/master/.github/CONTRIBUTING.md)\n- [Gitter Chatroom](https://gitter.im/mochajs/mocha) (ask questions here!)\n- [Google Group](https://groups.google.com/group/mochajs)\n- [Issue Tracker](https://github.com/mochajs/mocha/issues)\n\n## Backers\n\n[Become a backer](https://opencollective.com/mochajs#backer) and show your support to our open source project.\n\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/0/avatar)](https://opencollective.com/mochajs/backer/0/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/1/avatar)](https://opencollective.com/mochajs/backer/1/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/2/avatar)](https://opencollective.com/mochajs/backer/2/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/3/avatar)](https://opencollective.com/mochajs/backer/3/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/4/avatar)](https://opencollective.com/mochajs/backer/4/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/5/avatar)](https://opencollective.com/mochajs/backer/5/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/6/avatar)](https://opencollective.com/mochajs/backer/6/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/7/avatar)](https://opencollective.com/mochajs/backer/7/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/8/avatar)](https://opencollective.com/mochajs/backer/8/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/9/avatar)](https://opencollective.com/mochajs/backer/9/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/10/avatar)](https://opencollective.com/mochajs/backer/10/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/11/avatar)](https://opencollective.com/mochajs/backer/11/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/12/avatar)](https://opencollective.com/mochajs/backer/12/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/13/avatar)](https://opencollective.com/mochajs/backer/13/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/14/avatar)](https://opencollective.com/mochajs/backer/14/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/15/avatar)](https://opencollective.com/mochajs/backer/15/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/16/avatar)](https://opencollective.com/mochajs/backer/16/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/17/avatar)](https://opencollective.com/mochajs/backer/17/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/18/avatar)](https://opencollective.com/mochajs/backer/18/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/19/avatar)](https://opencollective.com/mochajs/backer/19/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/20/avatar)](https://opencollective.com/mochajs/backer/20/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/21/avatar)](https://opencollective.com/mochajs/backer/21/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/22/avatar)](https://opencollective.com/mochajs/backer/22/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/23/avatar)](https://opencollective.com/mochajs/backer/23/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/24/avatar)](https://opencollective.com/mochajs/backer/24/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/25/avatar)](https://opencollective.com/mochajs/backer/25/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/26/avatar)](https://opencollective.com/mochajs/backer/26/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/27/avatar)](https://opencollective.com/mochajs/backer/27/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/28/avatar)](https://opencollective.com/mochajs/backer/28/website)\n[![MochaJS Backer](https://opencollective.com/mochajs/backer/29/avatar)](https://opencollective.com/mochajs/backer/29/website)\n\n## Sponsors\n\nDoes your company use Mocha? Ask your manager or marketing team if your company would be interested in supporting our project. Support will allow the maintainers to dedicate more time for maintenance and new features for everyone. Also, your company's logo will show [on GitHub](https://github.com/mochajs/mocha#readme) and on [our site](https://mochajs.org) - who doesn't want a little extra exposure? [Here's the info](https://opencollective.com/mochajs#sponsor).\n\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/0/avatar)](https://opencollective.com/mochajs/sponsor/0/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/1/avatar)](https://opencollective.com/mochajs/sponsor/1/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/2/avatar)](https://opencollective.com/mochajs/sponsor/2/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/3/avatar)](https://opencollective.com/mochajs/sponsor/3/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/4/avatar)](https://opencollective.com/mochajs/sponsor/4/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/5/avatar)](https://opencollective.com/mochajs/sponsor/5/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/6/avatar)](https://opencollective.com/mochajs/sponsor/6/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/7/avatar)](https://opencollective.com/mochajs/sponsor/7/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/8/avatar)](https://opencollective.com/mochajs/sponsor/8/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/9/avatar)](https://opencollective.com/mochajs/sponsor/9/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/10/avatar)](https://opencollective.com/mochajs/sponsor/10/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/11/avatar)](https://opencollective.com/mochajs/sponsor/11/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/12/avatar)](https://opencollective.com/mochajs/sponsor/12/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/13/avatar)](https://opencollective.com/mochajs/sponsor/13/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/14/avatar)](https://opencollective.com/mochajs/sponsor/14/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/15/avatar)](https://opencollective.com/mochajs/sponsor/15/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/16/avatar)](https://opencollective.com/mochajs/sponsor/16/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/17/avatar)](https://opencollective.com/mochajs/sponsor/17/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/18/avatar)](https://opencollective.com/mochajs/sponsor/18/website)\n[![MochaJS Sponsor](https://opencollective.com/mochajs/sponsor/19/avatar)](https://opencollective.com/mochajs/sponsor/19/website)\n\n## Development\n\nYou might want to know that:\n\n- Mocha is the _most-depended-upon_ module on npm (source: [libraries.io](https://libraries.io/search?order=desc&platforms=NPM&sort=dependents_count)), and\n- Mocha is an _independent_ open-source project, maintained exclusively by volunteers.\n\nYou might want to help:\n\n- New to contributing to Mocha? Check out this list of [good first issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3Agood-first-issue)\n- Mocha could use a hand with [these issues](https://github.com/mochajs/mocha/issues?q=is%3Aissue+is%3Aopen+label%3A%22help+wanted%22)\n- The [maintainer's handbook](https://github.com/mochajs/mocha/blob/master/MAINTAINERS.md) explains how things get done\n\nFinally, come [chat with the maintainers](https://gitter.im/mochajs/contributors) on Gitter if you want to help with:\n\n- Triaging issues, answering questions\n- Review, merging, and closing pull requests\n- Other project-maintenance-y things\n\n## License\n\nCopyright 2011-2020 OpenJS Foundation and contributors. Licensed [MIT](https://github.com/mochajs/mocha/blob/master/LICENSE).\n\n[![FOSSA Status](https://app.fossa.io/api/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha.svg?type=large)](https://app.fossa.io/projects/git%2Bhttps%3A%2F%2Fgithub.com%2Fmochajs%2Fmocha?ref=badge_large)"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 882252}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 4716770}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 19792768}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 56947413}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 100958909}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 183001035}], "dependentsCount": 5915, "starsCount": 704}, "github": {"homepage": "https://mochajs.org", "starsCount": 19417, "forksCount": 2660, "subscribersCount": 410, "issues": {"count": 4289, "openCount": 305, "distribution": {"3600": 447, "10800": 210, "32400": 221, "97200": 428, "291600": 439, "874800": 441, "2624400": 480, "7873200": 392, "23619600": 469, "70858800": 440, "212576400": 322}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 867}, {"username": "boneskull", "commitsCount": 583}, {"username": "travisjeffery", "commitsCount": 105}, {"username": "craigtaub", "commitsCount": 72}, {"username": "juergba", "commitsCount": 67}, {"username": "Munter", "commitsCount": 60}, {"username": "plroebuck", "commitsCount": 46}, {"username": "dasilvacontin", "commitsCount": 43}, {"username": "danielstjules", "commitsCount": 34}, {"username": "outsideris", "commitsCount": 29}, {"username": "rauchg", "commitsCount": 29}, {"username": "ScottFreeCode", "commitsCount": 27}, {"username": "a8m", "commitsCount": 19}, {"username": "XhmikosR", "commitsCount": 18}, {"username": "adomokos", "commitsCount": 13}, {"username": "jfirebaugh", "commitsCount": 10}, {"username": "joliss", "commitsCount": 9}, {"username": "ndhoule", "commitsCount": 9}, {"username": "Bamieh", "commitsCount": 8}, {"username": "TooTallNate", "commitsCount": 8}, {"username": "domenic", "commitsCount": 8}, {"username": "jugglinmike", "commitsCount": 8}, {"username": "tricknotes", "commitsCount": 7}, {"username": "brendannee", "commitsCount": 6}, {"username": "geigerzaehler", "commitsCount": 6}, {"username": "jamescarr", "commitsCount": 6}, {"username": "rstacruz", "commitsCount": 6}, {"username": "Raynos", "commitsCount": 5}, {"username": "aheckmann", "commitsCount": 5}, {"username": "hokaccha", "commitsCount": 5}, {"username": "mislav", "commitsCount": 5}, {"username": "papandreou", "commitsCount": 5}, {"username": "sunesimonsen", "commitsCount": 5}, {"username": "DanielRuf", "commitsCount": 4}, {"username": "antoviaque", "commitsCount": 4}, {"username": "cspotcode", "commitsCount": 4}, {"username": "ematipico", "commitsCount": 4}, {"username": "harrysarson", "commitsCount": 4}, {"username": "jkrall", "commitsCount": 4}, {"username": "makepanic", "commitsCount": 4}, {"username": "mantoni", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "vkarpov15", "commitsCount": 4}, {"username": "xxczaki", "commitsCount": 4}, {"username": "38elements", "commitsCount": 3}, {"username": "ArtemGovorov", "commitsCount": 3}, {"username": "AviVahl", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 3}, {"username": "HyunSangHan", "commitsCount": 3}, {"username": "amsul", "commitsCount": 3}, {"username": "arvidOtt", "commitsCount": 3}, {"username": "avaly", "commitsCount": 3}, {"username": "benjie", "commitsCount": 3}, {"username": "demmer", "commitsCount": 3}, {"username": "dhendo", "commitsCount": 3}, {"username": "dump247", "commitsCount": 3}, {"username": "fool2fish", "commitsCount": 3}, {"username": "fredr", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "greenkeeper[bot]", "commitsCount": 3}, {"username": "haru01", "commitsCount": 3}, {"username": "iammerrick", "commitsCount": 3}, {"username": "jldailey", "commitsCount": 3}, {"username": "jonathanong", "commitsCount": 3}, {"username": "nathanbowser", "commitsCount": 3}, {"username": "paulmillr", "commitsCount": 3}, {"username": "seppevs", "commitsCount": 3}, {"username": "sindresorhus", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "tysonmote", "commitsCount": 3}, {"username": "wejendorp", "commitsCount": 3}, {"username": "xdamman", "commitsCount": 3}, {"username": "1999", "commitsCount": 2}, {"username": "TimothyGu", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "adamgruber", "commitsCount": 2}, {"username": "akrawchyk", "commitsCount": 2}, {"username": "anishkny", "commitsCount": 2}, {"username": "bd82", "commitsCount": 2}, {"username": "bdharris08", "commitsCount": 2}, {"username": "beneidel", "commitsCount": 2}, {"username": "charlierudolph", "commitsCount": 2}, {"username": "dfberry", "commitsCount": 2}, {"username": "giltayar", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "greenkeeperio-bot", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ianwremmel", "commitsCount": 2}, {"username": "inukshuk", "commitsCount": 2}, {"username": "jonnyreeves", "commitsCount": 2}, {"username": "jsoref", "commitsCount": 2}, {"username": "kunagpal", "commitsCount": 2}, {"username": "lrowe", "commitsCount": 2}, {"username": "maty21", "commitsCount": 2}, {"username": "mlucool", "commitsCount": 2}, {"username": "ngeor", "commitsCount": 2}, {"username": "not-an-aardvark", "commitsCount": 2}, {"username": "silentcloud", "commitsCount": 2}, {"username": "skeggse", "commitsCount": 2}, {"username": "sul4bh", "commitsCount": 2}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 9}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 24}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 62}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 96}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 155}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}, {"context": "continuous-integration/appveyor/branch", "state": "pending"}]}, "source": {"files": {"readmeSize": 10210, "testsSize": 657189, "hasChangelog": true}, "badges": [{"urls": {"original": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "service": "https://api.travis-ci.org/mochajs/mocha.svg?branch=master", "shields": "https://img.shields.io/travis/mochajs/mocha/master.svg", "content": "https://img.shields.io/travis/mochajs/mocha/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "service": "https://coveralls.io/repos/github/mochajs/mocha/badge.svg", "shields": "https://img.shields.io/coveralls/mochajs/mocha.svg", "content": "https://img.shields.io/coveralls/mochajs/mocha.json"}, "info": {"service": "coveralls", "type": "coverage"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.94, "outdatedDependencies": {"js-yaml": {"required": "3.13.1", "stable": "3.14.0", "latest": "3.14.0"}, "yargs": {"required": "13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}, "log-symbols": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "strip-json-comments": {"required": "3.0.1", "stable": "3.1.0", "latest": "3.1.0"}, "yargs-parser": {"required": "13.1.2", "stable": "18.1.3", "latest": "5.0.0-security.0"}, "escape-string-regexp": {"required": "1.0.5", "stable": "4.0.0", "latest": "4.0.0"}, "serialize-javascript": {"required": "3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "chokidar": {"required": "3.3.1", "stable": "3.4.0", "latest": "3.4.0"}, "debug": {"required": "3.2.6", "stable": "4.1.1", "latest": "4.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.816, "health": 0.5, "branding": 0.7}, "popularity": {"communityInterest": 23291, "downloadsCount": 18982471, "downloadsAcceleration": 54474.090962709306, "dependentsCount": 5915}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7917070137684955, "detail": {"quality": 0.9144853340461729, "popularity": 0.8115088006323155, "maintenance": 0.6666666666666666}}}}, {"typescript": {"analyzedAt": "2019-04-12T06:15:16.975Z", "collected": {"metadata": {"name": "typescript", "scope": "unscoped", "version": "3.4.3", "description": "TypeScript is a language for application scale JavaScript development", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript"], "date": "2019-04-09T23:21:12.530Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "typescript", "email": "typescript@microsoft.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/TypeScript.git"}, "links": {"npm": "https://www.npmjs.com/package/typescript", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/TypeScript", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "Apache-2.0", "devDependencies": {"@octokit/rest": "latest", "@types/browserify": "latest", "@types/chai": "latest", "@types/convert-source-map": "latest", "@types/del": "latest", "@types/glob": "latest", "@types/gulp": "^4.0.5", "@types/gulp-concat": "latest", "@types/gulp-newer": "latest", "@types/gulp-rename": "0.0.33", "@types/gulp-sourcemaps": "0.0.32", "@types/jake": "latest", "@types/merge2": "latest", "@types/minimatch": "latest", "@types/minimist": "latest", "@types/mkdirp": "latest", "@types/mocha": "latest", "@types/ms": "latest", "@types/node": "8.5.5", "@types/q": "latest", "@types/source-map-support": "latest", "@types/through2": "latest", "@types/travis-fold": "latest", "@types/xml2js": "^0.4.0", "browser-resolve": "^1.11.2", "browserify": "latest", "chai": "latest", "chalk": "latest", "convert-source-map": "latest", "del": "latest", "fancy-log": "latest", "fs-extra": "^6.0.1", "gulp": "^4.0.0", "gulp-concat": "latest", "gulp-insert": "latest", "gulp-newer": "latest", "gulp-rename": "latest", "gulp-sourcemaps": "latest", "istanbul": "latest", "lodash": "^4.17.11", "merge2": "latest", "minimist": "latest", "mkdirp": "latest", "mocha": "latest", "mocha-fivemat-progress-reporter": "latest", "ms": "latest", "plugin-error": "latest", "pretty-hrtime": "^1.0.3", "prex": "^0.4.3", "q": "latest", "remove-internal": "^2.9.2", "source-map-support": "latest", "through2": "latest", "travis-fold": "latest", "tslint": "latest", "typescript": "next", "vinyl": "latest", "vinyl-sourcemaps-apply": "latest", "xml2js": "^0.4.19"}, "releases": [{"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 28}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 73}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 135}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 272}, {"from": "2017-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 588}], "hasTestScript": true}, "npm": {"downloads": [{"from": "2019-04-11T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 1062633}, {"from": "2019-04-05T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 5945211}, {"from": "2019-03-13T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 24753626}, {"from": "2019-01-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 66611336}, {"from": "2018-10-14T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 114604898}, {"from": "2018-04-12T00:00:00.000Z", "to": "2019-04-12T00:00:00.000Z", "count": 193806251}], "dependentsCount": 5813, "starsCount": 261}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0.4}, "popularity": {"communityInterest": 261, "downloadsCount": 22203778.666666668, "downloadsAcceleration": 99965.67104261796, "dependentsCount": 5813}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/typescript-z94iskzi7x/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-07-01T07:16:41.028Z"}, "score": {"final": 0.43872194404421483, "detail": {"quality": 0.2965636487477236, "popularity": 0.6659605221520889, "maintenance": 0.3333333333333333}}}}, {"webpack": {"analyzedAt": "2020-06-29T16:32:01.011Z", "collected": {"metadata": {"name": "webpack", "scope": "unscoped", "version": "4.43.0", "description": "Packs CommonJs/AMD modules for the browser. Allows to split your codebase into multiple bundles, which can be loaded on demand. Support loaders to preprocess files, i.e. json, jsx, es7, css, less, ... and your custom stuff.", "date": "2020-04-21T16:19:14.009Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, "maintainers": [{"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack", "homepage": "https://github.com/webpack/webpack", "repository": "https://github.com/webpack/webpack", "bugs": "https://github.com/webpack/webpack/issues"}, "license": "MIT", "dependencies": {"@webassemblyjs/ast": "1.9.0", "@webassemblyjs/helper-module-context": "1.9.0", "@webassemblyjs/wasm-edit": "1.9.0", "@webassemblyjs/wasm-parser": "1.9.0", "acorn": "^6.4.1", "ajv": "^6.10.2", "ajv-keywords": "^3.4.1", "chrome-trace-event": "^1.0.2", "enhanced-resolve": "^4.1.0", "eslint-scope": "^4.0.3", "json-parse-better-errors": "^1.0.2", "loader-runner": "^2.4.0", "loader-utils": "^1.2.3", "memory-fs": "^0.4.1", "micromatch": "^3.1.10", "mkdirp": "^0.5.3", "neo-async": "^2.6.1", "node-libs-browser": "^2.2.1", "schema-utils": "^1.0.0", "tapable": "^1.1.3", "terser-webpack-plugin": "^1.4.3", "watchpack": "^1.6.1", "webpack-sources": "^1.4.1"}, "devDependencies": {"@babel/core": "^7.7.2", "@types/node": "^10.12.21", "@types/tapable": "^1.0.1", "@types/webpack-sources": "^0.1.4", "@yarnpkg/lockfile": "^1.1.0", "babel-loader": "^8.0.6", "benchmark": "^2.1.1", "bundle-loader": "~0.5.0", "coffee-loader": "^0.9.0", "coffeescript": "^2.3.2", "coveralls": "^3.0.2", "css-loader": "^2.1.0", "es6-promise-polyfill": "^1.1.1", "eslint": "^5.8.0", "eslint-config-prettier": "^4.0.0", "eslint-plugin-jest": "^22.2.2", "eslint-plugin-jsdoc": "^15.3.2", "eslint-plugin-node": "^8.0.0", "eslint-plugin-prettier": "^3.0.0", "express": "~4.16.4", "file-loader": "^3.0.1", "glob": "^7.1.3", "husky": "^1.1.3", "i18n-webpack-plugin": "^1.0.0", "istanbul": "^0.4.5", "jest": "^24.9.0", "jest-junit": "^8.0.0", "json-loader": "^0.5.7", "json-schema-to-typescript": "^6.0.1", "less": "^3.9.0", "less-loader": "^4.0.3", "lint-staged": "^8.0.4", "lodash": "^4.17.4", "prettier": "^1.14.3", "pug": "^2.0.4", "pug-loader": "^2.4.0", "raw-loader": "^1.0.0", "react": "^16.8.0", "react-dom": "^16.8.0", "rimraf": "^2.6.2", "script-loader": "~0.7.0", "simple-git": "^1.65.0", "strip-ansi": "^5.2.0", "style-loader": "^0.23.1", "typescript": "^3.0.0-rc", "url-loader": "^1.1.2", "val-loader": "^1.0.2", "vm-browserify": "~1.1.0", "wast-loader": "^1.5.5", "webpack-dev-middleware": "^3.5.1", "webassembly-feature": "1.3.0", "worker-loader": "^2.0.0", "xxhashjs": "^0.2.1"}, "releases": [{"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 2}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 5}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 11}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 60}, {"from": "2018-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 127}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-28T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 535502}, {"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 9282316}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 44456557}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 143044007}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 269125779}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 481549923}], "dependentsCount": 15869, "starsCount": 551}, "github": {"homepage": "https://webpack.js.org", "starsCount": 54738, "forksCount": 7095, "subscribersCount": 1628, "issues": {"count": 10960, "openCount": 476, "distribution": {"3600": 1237, "10800": 853, "32400": 1094, "97200": 1670, "291600": 1187, "874800": 1054, "2624400": 668, "7873200": 586, "23619600": 1231, "70858800": 1107, "212576400": 273}, "isDisabled": false}, "contributors": [{"username": "sokra", "commitsCount": 4188}, {"username": "timse", "commitsCount": 329}, {"username": "ooflorent", "commitsCount": 269}, {"username": "TheLarkInn", "commitsCount": 207}, {"username": "xtuc", "commitsCount": 110}, {"username": "shubheksha", "commitsCount": 86}, {"username": "niieani", "commitsCount": 84}, {"username": "vankop", "commitsCount": 71}, {"username": "jamesgeorge007", "commitsCount": 68}, {"username": "evilebottnawi", "commitsCount": 64}, {"username": "smelukov", "commitsCount": 63}, {"username": "wizardofhogwarts", "commitsCount": 51}, {"username": "jsoref", "commitsCount": 49}, {"username": "michael-ciniawsky", "commitsCount": 47}, {"username": "mohsen1", "commitsCount": 46}, {"username": "EugeneHlushko", "commitsCount": 45}, {"username": "sendilkumarn", "commitsCount": 38}, {"username": "willmendesneto", "commitsCount": 37}, {"username": "mc-zone", "commitsCount": 29}, {"username": "byzyk", "commitsCount": 26}, {"username": "hiroppy", "commitsCount": 26}, {"username": "Connormiha", "commitsCount": 24}, {"username": "Travmatth", "commitsCount": 24}, {"username": "alistairjcbrown", "commitsCount": 23}, {"username": "gajus", "commitsCount": 23}, {"username": "Janpot", "commitsCount": 22}, {"username": "SpaceK33z", "commitsCount": 21}, {"username": "kennyt", "commitsCount": 20}, {"username": "ljqx", "commitsCount": 20}, {"username": "gribnoysup", "commitsCount": 18}, {"username": "thaiat", "commitsCount": 18}, {"username": "MLoughry", "commitsCount": 17}, {"username": "ScriptedAlchemy", "commitsCount": 16}, {"username": "jhnns", "commitsCount": 16}, {"username": "rrharvey", "commitsCount": 16}, {"username": "snitin315", "commitsCount": 16}, {"username": "dependabot-preview[bot]", "commitsCount": 15}, {"username": "carloscuatin", "commitsCount": 14}, {"username": "goganchic", "commitsCount": 14}, {"username": "einarlove", "commitsCount": 13}, {"username": "evenstensberg", "commitsCount": 12}, {"username": "kingdaro", "commitsCount": 12}, {"username": "ljcrapo", "commitsCount": 12}, {"username": "Legends", "commitsCount": 11}, {"username": "e-cloud", "commitsCount": 11}, {"username": "esbenp", "commitsCount": 11}, {"username": "timneutkens", "commitsCount": 11}, {"username": "yurynix", "commitsCount": 11}, {"username": "chuckdumont", "commitsCount": 10}, {"username": "jbottigliero", "commitsCount": 10}, {"username": "rtsao", "commitsCount": 10}, {"username": "SimenB", "commitsCount": 9}, {"username": "jeffin143", "commitsCount": 9}, {"username": "jharris4", "commitsCount": 9}, {"username": "joeldenning", "commitsCount": 9}, {"username": "pierreneter", "commitsCount": 9}, {"username": "smikula", "commitsCount": 9}, {"username": "KTruong008", "commitsCount": 8}, {"username": "PlayMa256", "commitsCount": 8}, {"username": "acupofspirt", "commitsCount": 8}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 8}, {"username": "DanielRuf", "commitsCount": 7}, {"username": "NaviMarella", "commitsCount": 7}, {"username": "Tom910", "commitsCount": 7}, {"username": "chicoxyzzy", "commitsCount": 7}, {"username": "dtinth", "commitsCount": 7}, {"username": "jescalan", "commitsCount": 7}, {"username": "matthewmeyer", "commitsCount": 7}, {"username": "probablyup", "commitsCount": 7}, {"username": "simon04", "commitsCount": 7}, {"username": "zhaoshengjun", "commitsCount": 7}, {"username": "AndersDJohnson", "commitsCount": 6}, {"username": "ManuelBauer", "commitsCount": 6}, {"username": "MhMadHamster", "commitsCount": 6}, {"username": "Tushkiz", "commitsCount": 6}, {"username": "alberto", "commitsCount": 6}, {"username": "aretecode", "commitsCount": 6}, {"username": "franjohn21", "commitsCount": 6}, {"username": "fscherwi", "commitsCount": 6}, {"username": "ilgonmic", "commitsCount": 6}, {"username": "loganfsmyth", "commitsCount": 6}, {"username": "martynd", "commitsCount": 6}, {"username": "maxwoo-houzz", "commitsCount": 6}, {"username": "mikegreiling", "commitsCount": 6}, {"username": "montogeek", "commitsCount": 6}, {"username": "ritikrishu", "commitsCount": 6}, {"username": "ronanamsterdam", "commitsCount": 6}, {"username": "zastavnitskiy", "commitsCount": 6}, {"username": "FranckFreiburger", "commitsCount": 5}, {"username": "Hypnosphi", "commitsCount": 5}, {"username": "anikethsaha", "commitsCount": 5}, {"username": "bring-shrubbery", "commitsCount": 5}, {"username": "dav-is", "commitsCount": 5}, {"username": "edmorley", "commitsCount": 5}, {"username": "joshunger", "commitsCount": 5}, {"username": "konojunya", "commitsCount": 5}, {"username": "renatoagds", "commitsCount": 5}, {"username": "ryandrew14", "commitsCount": 5}, {"username": "styfle", "commitsCount": 5}, {"username": "zcfan", "commitsCount": 5}], "commits": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 4}, {"from": "2020-05-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 103}, {"from": "2020-03-31T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 345}, {"from": "2020-01-01T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 775}, {"from": "2019-06-30T00:00:00.000Z", "to": "2020-06-29T00:00:00.000Z", "count": 1601}], "statuses": [{"context": "codecov/changes/integration", "state": "success"}, {"context": "codecov/changes/basic", "state": "success"}, {"context": "codecov/changes/lintunit", "state": "success"}, {"context": "codecov/project/basic", "state": "success"}, {"context": "codecov/project/integration", "state": "success"}, {"context": "codecov/project/lintunit", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 3514530}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"memory-fs": {"required": "^0.4.1", "stable": "0.5.0", "latest": "0.5.0"}, "loader-runner": {"required": "^2.4.0", "stable": "3.1.0", "latest": "3.1.0"}, "eslint-scope": {"required": "^4.0.3", "stable": "5.1.0", "latest": "5.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "micromatch": {"required": "^3.1.10", "stable": "4.0.2", "latest": "4.0.2"}, "terser-webpack-plugin": {"required": "^1.4.3", "stable": "3.0.6", "latest": "3.0.6"}, "acorn": {"required": "^6.4.1", "stable": "7.3.1", "latest": "7.3.1"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9864999999999999, "health": 0.5, "branding": 0}, "popularity": {"communityInterest": 64112, "downloadsCount": 47681335.666666664, "downloadsAcceleration": 84599.68373287673, "dependentsCount": 15869}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.1457365747136914}}, "score": {"final": 0.8361364992802094, "detail": {"quality": 0.7663611899434395, "popularity": 0.9203735089089362, "maintenance": 0.811706897654428}}}}, {"chai": {"analyzedAt": "2020-06-14T17:56:59.894Z", "collected": {"metadata": {"name": "chai", "scope": "unscoped", "version": "4.2.0", "description": "BDD/TDD assertion library for node.js and the browser. Test framework agnostic.", "keywords": ["test", "assertion", "assert", "testing", "chai"], "date": "2018-09-26T12:15:22.143Z", "author": {"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, "publisher": {"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}, "maintainers": [{"username": "chaijs", "email": "chaijs@keithcirkel.co.uk"}], "contributors": [{"name": "Jake Luer", "email": "jake@alogicalparadox.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com", "url": "http://domenicdenicola.com"}, {"name": "Veselin Todorov", "email": "hi@vesln.com"}, {"name": "John Firebaugh", "email": "john.firebaugh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chaijs/chai.git"}, "links": {"npm": "https://www.npmjs.com/package/chai", "homepage": "http://chaijs.com", "repository": "https://github.com/chaijs/chai", "bugs": "https://github.com/chaijs/chai/issues"}, "license": "MIT", "dependencies": {"assertion-error": "^1.1.0", "check-error": "^1.0.2", "deep-eql": "^3.0.1", "get-func-name": "^2.0.0", "pathval": "^1.1.0", "type-detect": "^4.0.5"}, "devDependencies": {"browserify": "^16.0.0", "bump-cli": "^1.1.3", "codecov": "^3.0.0", "istanbul": "^0.4.3", "karma": "^2.0.0", "karma-firefox-launcher": "^1.0.0", "karma-mocha": "^1.0.1", "karma-phantomjs-launcher": "^1.0.0", "karma-sauce-launcher": "^1.2.0", "mocha": "^5.0.0"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}], "hasTestScript": true, "readme": "<h1 align=center>\n  <a href=\"http://chaijs.com\" title=\"Chai Documentation\">\n    <img alt=\"ChaiJS\" src=\"http://chaijs.com/img/chai-logo.png\">\n  </a>\n  <br>\n  chai\n</h1>\n\n<p align=center>\n  Chai is a BDD / TDD assertion library for <a href=\"http://nodejs.org\">node</a> and the browser that can be delightfully paired with any javascript testing framework.\n</p>\n\n<p align=center>\n  <a href=\"./LICENSE\">\n    <img\n      alt=\"license:mit\"\n      src=\"https://img.shields.io/badge/license-mit-green.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://github.com/chaijs/chai/releases\">\n    <img\n      alt=\"tag:?\"\n      src=\"https://img.shields.io/github/tag/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://www.npmjs.com/package/chai\">\n    <img\n      alt=\"node:?\"\n      src=\"https://img.shields.io/badge/node-%3E=4.0-blue.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://saucelabs.com/u/chaijs\">\n    <img\n      alt=\"Selenium Test Status\"\n      src=\"https://saucelabs.com/browser-matrix/chaijs.svg\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://www.npmjs.com/packages/chai\">\n    <img\n      alt=\"downloads:?\"\n      src=\"https://img.shields.io/npm/dm/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://travis-ci.org/chaijs/chai\">\n    <img\n      alt=\"build:?\"\n      src=\"https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://codecov.io/gh/chaijs/chai\">\n    <img\n      alt=\"coverage:?\"\n      src=\"https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"\">\n    <img\n      alt=\"devDependencies:?\"\n      src=\"https://img.shields.io/david/chaijs/chai.svg?style=flat-square\"\n    />\n  </a>\n  <br/>\n  <a href=\"https://chai-slack.herokuapp.com/\">\n    <img\n      alt=\"Join the Slack chat\"\n      src=\"https://img.shields.io/badge/slack-join%20chat-E2206F.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://gitter.im/chaijs/chai\">\n    <img\n      alt=\"Join the Gitter chat\"\n      src=\"https://img.shields.io/badge/gitter-join%20chat-D0104D.svg?style=flat-square\"\n    />\n  </a>\n  <a href=\"https://opencollective.com/chaijs\">\n    <img\n      alt=\"OpenCollective Backers\"\n      src=\"https://opencollective.com/chaijs/backers/badge.svg?style=flat-square\"\n    />\n  </a>\n</p>\n\nFor more information or to download plugins, view the [documentation](http://chaijs.com).\n\n## What is Chai?\n\nChai is an _assertion library_, similar to Node's built-in `assert`. It makes testing much easier by giving you lots of assertions you can run against your code.\n\n## Installation\n\n### Node.js\n\n`chai` is available on [npm](http://npmjs.org). To install it, type:\n\n    $ npm install chai\n\n### Browsers\n\nYou can also use it within the browser; install via npm and use the `chai.js` file found within the download. For example:\n\n```html\n<script src=\"./node_modules/chai/chai.js\"></script>\n```\n\n## Usage\n\nImport the library in your code, and then pick one of the styles you'd like to use - either `assert`, `expect` or `should`:\n\n```js\nvar chai = require('chai');  \nvar assert = chai.assert;    // Using Assert style\nvar expect = chai.expect;    // Using Expect style\nvar should = chai.should();  // Using Should style\n```\n\n### Pre-Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nrequire('chai/register-assert');  // Using Assert style\nrequire('chai/register-expect');  // Using Expect style\nrequire('chai/register-should');  // Using Should style\n```\n\n### Pre-Native Modules Usage (_as local variables_)\n\n```js\nconst { assert } = require('chai');  // Using Assert style\nconst { expect } = require('chai');  // Using Expect style\nconst { should } = require('chai');  // Using Should style\nshould();  // Modifies `Object.prototype`\n\nconst { expect, use } = require('chai');  // Creates local variables `expect` and `use`; useful for plugin use\n```\n\n### Native Modules Usage (_registers the chai testing style globally_)\n\n```js\nimport 'chai/register-assert';  // Using Assert style\nimport 'chai/register-expect';  // Using Expect style\nimport 'chai/register-should';  // Using Should style\n```\n\n### Native Modules Usage (_local import only_)\n\n```js\nimport { assert } from 'chai';  // Using Assert style\nimport { expect } from 'chai';  // Using Expect style\nimport { should } from 'chai';  // Using Should style\nshould();  // Modifies `Object.prototype`\n```\n\n### Usage with Mocha\n\n```bash\nmocha spec.js -r chai/register-assert  # Using Assert style\nmocha spec.js -r chai/register-expect  # Using Expect style\nmocha spec.js -r chai/register-should  # Using Should style\n```\n\n[Read more about these styles in our docs](http://chaijs.com/guide/styles/).\n\n## Plugins\n\nChai offers a robust Plugin architecture for extending Chai's assertions and interfaces.\n\n- Need a plugin? View the [official plugin list](http://chaijs.com/plugins).\n- Want to build a plugin? Read the [plugin api documentation](http://chaijs.com/guide/plugins/).\n- Have a plugin and want it listed? Simply add the following keywords to your package.json:\n  -  `chai-plugin`\n  -  `browser` if your plugin works in the browser as well as Node.js\n  -  `browser-only` if your plugin does not work with Node.js\n\n### Related Projects\n\n- [chaijs / chai-docs](https://github.com/chaijs/chai-docs): The chaijs.com website source code.\n- [chaijs / assertion-error](https://github.com/chaijs/assertion-error): Custom `Error` constructor thrown upon an assertion failing.\n- [chaijs / deep-eql](https://github.com/chaijs/deep-eql): Improved deep equality testing for Node.js and the browser.\n- [chaijs / type-detect](https://github.com/chaijs/type-detect): Improved typeof detection for Node.js and the browser.\n- [chaijs / check-error](https://github.com/chaijs/check-error): Error comparison and information related utility for Node.js and the browser.\n- [chaijs / loupe](https://github.com/chaijs/loupe): Inspect utility for Node.js and browsers.\n- [chaijs / pathval](https://github.com/chaijs/pathval): Object value retrieval given a string path.\n- [chaijs / get-func-name](https://github.com/chaijs/get-func-name): Utility for getting a function's name for node and the browser.\n\n### Contributing\n\nThank you very much for considering to contribute!\n\nPlease make sure you follow our [Code Of Conduct](https://github.com/chaijs/chai/blob/master/CODE_OF_CONDUCT.md) and we also strongly recommend reading our [Contributing Guide](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md).\n\nHere are a few issues other contributors frequently ran into when opening pull requests:\n\n- Please do not commit changes to the `chai.js` build. We do it once per release.\n- Before pushing your commits, please make sure you [rebase](https://github.com/chaijs/chai/blob/master/CONTRIBUTING.md#pull-requests) them.\n\n### Contributors\n\nPlease see the full\n[Contributors Graph](https://github.com/chaijs/chai/graphs/contributors) for our\nlist of contributors.\n\n### Core Contributors\n\nFeel free to reach out to any of the core contributors with your questions or\nconcerns. We will do our best to respond in a timely manner.\n\n[![Jake Luer](https://avatars3.githubusercontent.com/u/58988?v=3&s=50)](https://github.com/logicalparadox)\n[![Veselin Todorov](https://avatars3.githubusercontent.com/u/330048?v=3&s=50)](https://github.com/vesln)\n[![Keith Cirkel](https://avatars3.githubusercontent.com/u/118266?v=3&s=50)](https://github.com/keithamus)\n[![Lucas Fernandes da Costa](https://avatars3.githubusercontent.com/u/6868147?v=3&s=50)](https://github.com/lucasfcosta)\n[![Grant Snodgrass](https://avatars3.githubusercontent.com/u/17260989?v=3&s=50)](https://github.com/meeber)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 180355}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 3604157}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 14923649}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 45825630}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 83642615}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 156130988}], "dependentsCount": 5314, "starsCount": 316}, "github": {"homepage": "http://chaijs.com", "starsCount": 6858, "forksCount": 622, "subscribersCount": 132, "issues": {"count": 1346, "openCount": 60, "distribution": {"3600": 178, "10800": 109, "32400": 129, "97200": 191, "291600": 116, "874800": 132, "2624400": 124, "7873200": 120, "23619600": 134, "70858800": 96, "212576400": 17}, "isDisabled": false}, "contributors": [{"username": "logicalparadox", "commitsCount": 455}, {"username": "vesln", "commitsCount": 74}, {"username": "meeber", "commitsCount": 70}, {"username": "keithamus", "commitsCount": 52}, {"username": "lucasfcosta", "commitsCount": 52}, {"username": "domenic", "commitsCount": 40}, {"username": "astorije", "commitsCount": 27}, {"username": "vieiralucas", "commitsCount": 22}, {"username": "shvaikalesh", "commitsCount": 18}, {"username": "joshperry", "commitsCount": 14}, {"username": "greenkeeperio-bot", "commitsCount": 11}, {"username": "zetamorph", "commitsCount": 11}, {"username": "Turbo87", "commitsCount": 9}, {"username": "cmpolis", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 8}, {"username": "RubenVerborgh", "commitsCount": 6}, {"username": "abetomo", "commitsCount": 6}, {"username": "brutalcrozt", "commitsCount": 5}, {"username": "jgonera", "commitsCount": 5}, {"username": "joliss", "commitsCount": 5}, {"username": "jsoref", "commitsCount": 5}, {"username": "leider", "commitsCount": 5}, {"username": "scottnonnenberg", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 4}, {"username": "aaronsofaly", "commitsCount": 4}, {"username": "dasilvacontin", "commitsCount": 4}, {"username": "jfirebaugh", "commitsCount": 4}, {"username": "josher19", "commitsCount": 4}, {"username": "sonicdoe", "commitsCount": 4}, {"username": "umireon", "commitsCount": 4}, {"username": "Droogans", "commitsCount": 3}, {"username": "andreineculau", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "flaambe", "commitsCount": 3}, {"username": "gregglind", "commitsCount": 3}, {"username": "jasonkarns", "commitsCount": 3}, {"username": "jeffbski", "commitsCount": 3}, {"username": "jkroso", "commitsCount": 3}, {"username": "jurko-gospodnetic", "commitsCount": 3}, {"username": "ljharb", "commitsCount": 3}, {"username": "matthewlucock", "commitsCount": 3}, {"username": "piamancini", "commitsCount": 3}, {"username": "tricknotes", "commitsCount": 3}, {"username": "voliva", "commitsCount": 3}, {"username": "Alhadis", "commitsCount": 2}, {"username": "Bartvds", "commitsCount": 2}, {"username": "cezarykluczynski", "commitsCount": 2}, {"username": "eouw0o83hf", "commitsCount": 2}, {"username": "eshao", "commitsCount": 2}, {"username": "kkirsche", "commitsCount": 2}, {"username": "matthew-n", "commitsCount": 2}, {"username": "romario333", "commitsCount": 2}, {"username": "rpgeeganage", "commitsCount": 2}, {"username": "tkazec", "commitsCount": 2}, {"username": "v1adko", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "wyvernzora", "commitsCount": 2}, {"username": "zzen", "commitsCount": 2}, {"username": "ColinEberhardt", "commitsCount": 1}, {"username": "Hpauric", "commitsCount": 1}, {"username": "PauloGoncalvesBH", "commitsCount": 1}, {"username": "Pklong", "commitsCount": 1}, {"username": "Powell-v2", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "StPeng", "commitsCount": 1}, {"username": "andersonaguiar", "commitsCount": 1}, {"username": "aryzing", "commitsCount": 1}, {"username": "asbish", "commitsCount": 1}, {"username": "bdadam", "commitsCount": 1}, {"username": "bmeurer", "commitsCount": 1}, {"username": "callumlocke", "commitsCount": 1}, {"username": "curtisgibby", "commitsCount": 1}, {"username": "dinostheo", "commitsCount": 1}, {"username": "gdelmas", "commitsCount": 1}, {"username": "generalandrew", "commitsCount": 1}, {"username": "giltayar", "commitsCount": 1}, {"username": "hadighattas", "commitsCount": 1}, {"username": "haykam821", "commitsCount": 1}, {"username": "kharandziuk", "commitsCount": 1}, {"username": "kidmillions", "commitsCount": 1}, {"username": "kumarmj", "commitsCount": 1}, {"username": "lizhengnacl", "commitsCount": 1}, {"username": "not-an-aardvark", "commitsCount": 1}, {"username": "ossdev07", "commitsCount": 1}, {"username": "outsideris", "commitsCount": 1}, {"username": "piranna", "commitsCount": 1}, {"username": "polomsky", "commitsCount": 1}, {"username": "qbolec", "commitsCount": 1}, {"username": "s-leroux", "commitsCount": 1}, {"username": "s0", "commitsCount": 1}, {"username": "simonewebdesign", "commitsCount": 1}, {"username": "solodynamo", "commitsCount": 1}, {"username": "sophiebits", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tusbar", "commitsCount": 1}, {"username": "unional", "commitsCount": 1}, {"username": "wadie", "commitsCount": 1}, {"username": "yanca018", "commitsCount": 1}, {"username": "zetaben", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 4}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 7}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7626, "testsSize": 424953, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/chai.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/chai.svg", "content": "https://img.shields.io/npm/dm/chai.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/chaijs/chai/master.svg?style=flat-square", "service": "https://api.travis-ci.org/chaijs/chai.svg?branch=master", "shields": "https://img.shields.io/travis/chaijs/chai/master.svg", "content": "https://img.shields.io/travis/chaijs/chai/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/chaijs/chai.svg?style=flat-square", "service": "https://codecov.io/github/chaijs/chai/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/chaijs/chai.svg", "content": "https://img.shields.io/codecov/c/github/chaijs/chai.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/chaijs/chai.svg?style=flat-square", "service": "https://david-dm.org/chaijs/chai.svg", "shields": "https://img.shields.io/david/chaijs/chai.svg", "content": "https://img.shields.io/david/chaijs/chai.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "coverage": 0.94, "outdatedDependencies": {"deep-eql": {"required": "^3.0.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.991, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 8028, "downloadsCount": 15275210, "downloadsAcceleration": 26655.97452435312, "dependentsCount": 5314}, "maintenance": {"releasesFrequency": 0.07397260273972603, "commitsFrequency": 0.7552910958904109, "openIssues": 1, "issuesDistribution": 0.4425492395514394}}, "score": {"final": 0.8027626515279422, "detail": {"quality": 0.9733400672041111, "popularity": 0.739617555254551, "maintenance": 0.7196985343646172}}}}, {"babel-core": {"analyzedAt": "2020-06-27T14:26:34.646Z", "collected": {"metadata": {"name": "babel-core", "scope": "unscoped", "version": "6.26.3", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2018-04-27T09:47:04.101Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-core", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-code-frame": "^6.26.0", "babel-generator": "^6.26.0", "babel-helpers": "^6.24.1", "babel-messages": "^6.23.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "babel-template": "^6.26.0", "babel-traverse": "^6.26.0", "babel-types": "^6.26.0", "babylon": "^6.18.0", "convert-source-map": "^1.5.1", "debug": "^2.6.9", "json5": "^0.5.1", "lodash": "^4.17.4", "minimatch": "^3.0.4", "path-is-absolute": "^1.0.1", "private": "^0.1.8", "slash": "^1.0.0", "source-map": "^0.5.7"}, "devDependencies": {"babel-helper-fixtures": "^6.26.2", "babel-helper-transform-fixture-test-runner": "^6.26.2", "babel-polyfill": "^6.26.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-core\n\n> Babel compiler core.\n\n\n```javascript\nvar babel = require(\"babel-core\");\nimport { transform } from 'babel-core';\nimport * as babel from 'babel-core';\n```\n\nAll transformations will use your local configuration files (.babelrc or in package.json). See [options](#options) to disable it.\n\n## babel.transform(code: string, [options?](#options): Object)\n\nTransforms the passed in `code`. Returning an object with the generated code,\nsource map, and AST.\n\n```js\nbabel.transform(code, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nvar result = babel.transform(\"code();\", options);\nresult.code;\nresult.map;\nresult.ast;\n```\n\n## babel.transformFile(filename: string, [options?](#options): Object, callback: Function)\n\nAsynchronously transforms the entire contents of a file.\n\n```js\nbabel.transformFile(filename, options, callback)\n```\n\n**Example**\n\n```js\nbabel.transformFile(\"filename.js\", options, function (err, result) {\n  result; // => { code, map, ast }\n});\n```\n\n## babel.transformFileSync(filename: string, [options?](#options): Object)\n\nSynchronous version of `babel.transformFile`. Returns the transformed contents of\nthe `filename`.\n\n```js\nbabel.transformFileSync(filename, options) // => { code, map, ast }\n```\n\n**Example**\n\n```js\nbabel.transformFileSync(\"filename.js\", options).code;\n```\n\n## babel.transformFromAst(ast: Object, code?: string, [options?](#options): Object)\n\nGiven, an [AST](https://astexplorer.net/), transform it.\n\n```js\nconst code = \"if (true) return;\";\nconst ast = babylon.parse(code, { allowReturnOutsideFunction: true });\nconst { code, map, ast } = babel.transformFromAst(ast, code, options);\n```\n\n## Options\n\n> #### Babel CLI\n> \n> You can pass these options from the Babel CLI like so:\n> \n> `babel --name=value`\n\nFollowing is a table of the options you can use:\n\n| Option                   | Default              | Description                     |\n| ------------------------ | -------------------- | ------------------------------- |\n| `ast`                    | `true`               | Include the AST in the returned object |\n| `auxiliaryCommentAfter`  | `null`               | Attach a comment after all non-user injected code. |\n| `auxiliaryCommentBefore` | `null`               | Attach a comment before all non-user injected code. |\n| `babelrc`                | `true`               | Specify whether or not to use .babelrc and .babelignore files. Not available when using the CLI, [use `--no-babelrc` instead](https://babeljs.io/docs/en/babel-cli#ignoring-babelrc). |\n| `code`                   | `true`               | Enable code generation |\n| `comments`               | `true`               | Output comments in generated output. |\n| `compact`                | `\"auto\"`             | Do not include superfluous whitespace characters and line terminators. When set to `\"auto\"` compact is set to `true` on input sizes of >500KB. |\n| `env`                    | `{}`                 | This is an object of keys that represent different environments. For example, you may have: `{ env: { production: { /* specific options */ } } }` which will use those options when the environment variable `BABEL_ENV` is set to `\"production\"`. If `BABEL_ENV` isn't set then `NODE_ENV` will be used, if it's not set then it defaults to `\"development\"` |\n| `extends`                | `null`               | A path to an `.babelrc` file to extend |\n| `filename`               | `\"unknown\"`          | Filename for use in errors etc. |\n| `filenameRelative`       | `(filename)`         | Filename relative to `sourceRoot`. |\n| `generatorOpts`          | `{}`                 | An object containing the options to be passed down to the babel code generator, babel-generator |\n| `getModuleId`            | `null`               | Specify a custom callback to generate a module id with. Called as `getModuleId(moduleName)`. If falsy value is returned then the generated module id is used. |\n| `highlightCode`          | `true`               | ANSI highlight syntax error code frames |\n| `ignore`                 | `null`               | Opposite to the `only` option. `ignore` is disregarded if `only` is specified. |\n| `inputSourceMap`         | `null`               | A source map object that the output source map will be based on. |\n| `minified`               | `false`              | Should the output be minified (not printing last semicolons in blocks, printing literal string values instead of escaped ones, stripping `()` from `new` when safe) |\n| `moduleId`               | `null`               | Specify a custom name for module ids. |\n| `moduleIds`              | `false`              | If truthy, insert an explicit id for modules. By default, all modules are anonymous. (Not available for `common` modules) |\n| `moduleRoot`             | `(sourceRoot)`       | Optional prefix for the AMD module formatter that will be prepend to the filename on module definitions. |\n| `only`                   | `null`               | A [glob](https://github.com/isaacs/minimatch), regex, or mixed array of both, matching paths to **only** compile. Can also be an array of arrays containing paths to explicitly match. When attempting to compile a non-matching file it's returned verbatim. |\n| `parserOpts`             | `{}`                 | An object containing the options to be passed down to the babel parser, babylon |\n| `plugins`                | `[]`                 | List of [plugins](https://babeljs.io/docs/en/plugins) to load and use. |\n| `presets`                | `[]`                 | List of [presets](https://babeljs.io/docs/en/plugins#presets) (a set of plugins) to load and use. |\n| `retainLines`            | `false`              | Retain line numbers. This will lead to wacky code but is handy for scenarios where you can't use source maps. (**NOTE:** This will not retain the columns) |\n| `resolveModuleSource`    | `null`               | Resolve a module source ie. `import \"SOURCE\";` to a custom value. Called as `resolveModuleSource(source, filename)`. |\n| `shouldPrintComment`     | `null`               | An optional callback that controls whether a comment should be output or not. Called as `shouldPrintComment(commentContents)`. **NOTE:** This overrides the `comment` option when used. |\n| `sourceFileName`         | `(filenameRelative)` | Set `sources[0]` on returned source map. |\n| `sourceMaps`             | `false`              | If truthy, adds a `map` property to returned output. If set to `\"inline\"`, a comment with a sourceMappingURL directive is added to the bottom of the returned code. If set to `\"both\"` then a `map` property is returned as well as a source map comment appended. **This does not emit sourcemap files by itself!** To have sourcemaps emitted using the CLI, you must pass it the `--source-maps` option. |\n| `sourceMapTarget`        | `(filenameRelative)` | Set `file` on returned source map. |\n| `sourceRoot`             | `(moduleRoot)`       | The root from which all sources are relative. |\n| `sourceType`             | `\"module\"`           | Indicate the mode the code should be parsed in. Can be either \"script\" or \"module\". |\n| `wrapPluginVisitorMethod`| `null`               | An optional callback that can be used to wrap visitor methods. **NOTE:** This is useful for things like introspection, and not really needed for implementing anything. Called as `wrapPluginVisitorMethod(pluginAlias, visitorType, callback)`."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 897598}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4540333}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 23315197}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 74227455}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 146263582}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 296343081}], "dependentsCount": 9684, "starsCount": 149}, "github": {"homepage": "https://babel.dev", "starsCount": 36884, "forksCount": 4345, "subscribersCount": 863, "issues": {"count": 11667, "openCount": 796, "distribution": {"3600": 2465, "10800": 920, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1008, "2624400": 844, "7873200": 838, "23619600": 850, "70858800": 1090, "212576400": 275}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 481}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 200}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 32}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 151}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 381}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 800}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8026, "testsSize": 12417762, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "json5": {"required": "^0.5.1", "stable": "2.1.3", "latest": "2.1.3"}, "debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "source-map": {"required": "^0.5.7", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 42340, "downloadsCount": 24742485, "downloadsAcceleration": -8512.253805175074, "dependentsCount": 9684}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23764412920182798}}, "score": {"final": 0.7391184994691745, "detail": {"quality": 0.9252009260476962, "popularity": 0.7501758651555134, "maintenance": 0.5685619110012458}}}}, {"react": {"analyzedAt": "2020-07-01T14:28:44.297Z", "collected": {"metadata": {"name": "react", "scope": "unscoped", "version": "16.13.1", "description": "React is a JavaScript library for building user interfaces.", "keywords": ["react"], "date": "2020-03-19T19:53:13.309Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react"}, "links": {"npm": "https://www.npmjs.com/package/react", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2"}, "releases": [{"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 2}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 5}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 27}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 66}, {"from": "2018-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 124}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-30T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1499597}, {"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 7707598}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 32524936}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 100543764}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 190360532}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 337990424}], "dependentsCount": 41602, "starsCount": 754}, "github": {"homepage": "https://reactjs.org", "starsCount": 151317, "forksCount": 29550, "subscribersCount": 6659, "issues": {"count": 19003, "openCount": 615, "distribution": {"3600": 3839, "10800": 1835, "32400": 1879, "97200": 2359, "291600": 1812, "874800": 1677, "2624400": 1364, "7873200": 1236, "23619600": 1440, "70858800": 1203, "212576400": 359}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1385}, {"username": "bvaughn", "commitsCount": 1220}, {"username": "sophiebits", "commitsCount": 875}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 700}, {"username": "acdlite", "commitsCount": 692}, {"username": "trueadm", "commitsCount": 393}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 56}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 28}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "rickhanlonii", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "jddxf", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 8}, {"from": "2020-06-01T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 27}, {"from": "2020-04-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 277}, {"from": "2020-01-03T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 617}, {"from": "2019-07-02T00:00:00.000Z", "to": "2020-07-01T00:00:00.000Z", "count": 1300}], "statuses": [{"context": "ci/circleci: test_fuzz", "state": "success"}, {"context": "ci/circleci: setup", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 447753, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.679, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 188380, "downloadsCount": 33514588, "downloadsAcceleration": 72430.18028919335, "dependentsCount": 41602}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.42747533275912825}}, "score": {"final": 0.938238091102586, "detail": {"quality": 0.9000289216649932, "popularity": 0.9353058515018497, "maintenance": 0.9739210473641162}}}}, {"babel-loader": {"analyzedAt": "2020-06-14T06:24:38.180Z", "collected": {"metadata": {"name": "babel-loader", "scope": "unscoped", "version": "8.1.0", "description": "babel module loader for webpack", "keywords": ["webpack", "loader", "babel", "es6", "transpiler", "module"], "date": "2020-03-20T14:51:00.743Z", "author": {"name": "Luis Couto", "email": "hello@luiscouto.pt"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-loader", "homepage": "https://github.com/babel/babel-loader", "repository": "https://github.com/babel/babel-loader", "bugs": "https://github.com/babel/babel-loader/issues"}, "license": "MIT", "dependencies": {"find-cache-dir": "^2.1.0", "loader-utils": "^1.4.0", "mkdirp": "^0.5.3", "pify": "^4.0.1", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.2.0", "@babel/core": "^7.2.0", "@babel/preset-env": "^7.2.0", "ava": "^2.4.0", "babel-eslint": "^10.0.1", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-react-intl": "^4.1.19", "cross-env": "^6.0.0", "eslint": "^6.5.1", "eslint-config-babel": "^9.0.0", "eslint-config-prettier": "^6.3.0", "eslint-plugin-flowtype": "^4.3.0", "eslint-plugin-prettier": "^3.0.0", "husky": "^3.0.7", "lint-staged": "^9.4.1", "nyc": "^14.1.1", "prettier": "^1.15.3", "react": "^16.0.0", "react-intl": "^3.3.2", "react-intl-webpack-plugin": "^0.3.0", "rimraf": "^3.0.0", "webpack": "^4.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0", "webpack": ">=2"}, "releases": [{"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 2}, {"from": "2018-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "> This README is for babel-loader v8 + Babel v7\n> Check the [7.x branch](https://github.com/babel/babel-loader/tree/7.x) for docs with Babel v6\n\n[![NPM Status](https://img.shields.io/npm/v/babel-loader.svg?style=flat)](https://www.npmjs.com/package/babel-loader)\n[![Build Status](https://travis-ci.org/babel/babel-loader.svg?branch=master)](https://travis-ci.org/babel/babel-loader)\n[![Build Status](https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true)](https://ci.appveyor.com/project/babel/babel-loader/branch/master)\n[![codecov](https://codecov.io/gh/babel/babel-loader/branch/master/graph/badge.svg)](https://codecov.io/gh/babel/babel-loader)\n\n<div align=\"center\">\n  <a href=\"https://github.com/babel/babel\">\n    <img src=\"https://rawgit.com/babel/logo/master/babel.svg\" alt=\"Babel logo\" width=\"200\" height=\"200\">\n  </a>\n  <a href=\"https://github.com/webpack/webpack\">\n    <img src=\"https://webpack.js.org/assets/icon-square-big.svg\" alt=\"webpack logo\" width=\"200\" height=\"200\">\n  </a>\n</div>\n\n<h1 align=\"center\">Babel Loader</h1>\n\nThis package allows transpiling JavaScript files using [Babel](https://github.com/babel/babel) and [webpack](https://github.com/webpack/webpack).\n\n**Note**: Issues with the output should be reported on the Babel [Issues](https://github.com/babel/babel/issues) tracker.\n\n<h2 align=\"center\">Install</h2>\n\n> webpack 4.x | babel-loader 8.x | babel 7.x\n\n```bash\nnpm install -D babel-loader @babel/core @babel/preset-env webpack\n```\n\n<h2 align=\"center\">Usage</h2>\n\nwebpack documentation: [Loaders](https://webpack.js.org/loaders/)\n\nWithin your webpack configuration object, you'll need to add the babel-loader to the list of modules, like so:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env']\n        }\n      }\n    }\n  ]\n}\n```\n\n### Options\n\nSee the `babel` [options](https://babeljs.io/docs/en/options).\n\nYou can pass options to the loader by using the [`options`](https://webpack.js.org/configuration/module/#rule-options-rule-query) property:\n\n```javascript\nmodule: {\n  rules: [\n    {\n      test: /\\.m?js$/,\n      exclude: /(node_modules|bower_components)/,\n      use: {\n        loader: 'babel-loader',\n        options: {\n          presets: ['@babel/preset-env'],\n          plugins: ['@babel/plugin-proposal-object-rest-spread']\n        }\n      }\n    }\n  ]\n}\n```\n\nThis loader also supports the following loader-specific option:\n\n* `cacheDirectory`: Default `false`. When set, the given directory will be used to cache the results of the loader. Future webpack builds will attempt to read from the cache to avoid needing to run the potentially expensive Babel recompilation process on each run. If the value is set to `true` in options (`{cacheDirectory: true}`), the loader will use the default cache directory in `node_modules/.cache/babel-loader` or fallback to the default OS temporary file directory if no `node_modules` folder could be found in any root directory.\n\n* `cacheIdentifier`: Default is a string composed by the `@babel/core`'s version, the `babel-loader`'s version, the contents of `.babelrc` file if it exists, and the value of the environment variable `BABEL_ENV` with a fallback to the `NODE_ENV` environment variable. This can be set to a custom value to force cache busting if the identifier changes.\n\n* `cacheCompression`: Default `true`. When set, each Babel transform output will be compressed with Gzip. If you want to opt-out of cache compression, set it to `false` -- your project may benefit from this if it transpiles thousands of files.\n\n* `customize`: Default `null`. The path of a module that exports a `custom` callback [like the one that you'd pass to `.custom()`](#customized-loader). Since you already have to make a new file to use this, it is recommended that you instead use `.custom` to create a wrapper loader. Only use this if you _must_ continue using `babel-loader` directly, but still want to customize.\n\n## Troubleshooting\n\n### babel-loader is slow!\n\nMake sure you are transforming as few files as possible. Because you are probably matching `/\\.m?js$/`, you might be transforming the `node_modules` folder or other unwanted source.\n\nTo exclude `node_modules`, see the `exclude` option in the `loaders` config as documented above.\n\nYou can also speed up babel-loader by as much as 2x by using the `cacheDirectory` option. This will cache transformations to the filesystem.\n\n### Babel is injecting helpers into each file and bloating my code!\n\nBabel uses very small helpers for common functions such as `_extend`. By default, this will be added to every file that requires it.\n\nYou can instead require the Babel runtime as a separate module to avoid the duplication.\n\nThe following configuration disables automatic per-file runtime injection in Babel, requiring `@babel/plugin-transform-runtime` instead and making all helper references use it.\n\nSee the [docs](https://babeljs.io/docs/plugins/transform-runtime/) for more information.\n\n**NOTE**: You must run `npm install -D @babel/plugin-transform-runtime` to include this in your project and `@babel/runtime` itself as a dependency with `npm install @babel/runtime`.\n\n```javascript\nrules: [\n  // the 'transform-runtime' plugin tells Babel to\n  // require the runtime instead of inlining it.\n  {\n    test: /\\.m?js$/,\n    exclude: /(node_modules|bower_components)/,\n    use: {\n      loader: 'babel-loader',\n      options: {\n        presets: ['@babel/preset-env'],\n        plugins: ['@babel/plugin-transform-runtime']\n      }\n    }\n  }\n]\n```\n\n#### **NOTE**: transform-runtime & custom polyfills (e.g. Promise library)\n\nSince [@babel/plugin-transform-runtime](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-runtime) includes a polyfill that includes a custom [regenerator-runtime](https://github.com/facebook/regenerator/blob/master/packages/regenerator-runtime/runtime.js) and [core-js](https://github.com/zloirock/core-js), the following usual shimming method using `webpack.ProvidePlugin` will not work:\n\n```javascript\n// ...\n        new webpack.ProvidePlugin({\n            'Promise': 'bluebird'\n        }),\n// ...\n```\n\nThe following approach will not work either:\n\n```javascript\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\nvar promise = new Promise;\n```\n\nwhich outputs to (using `runtime`):\n\n```javascript\n'use strict';\n\nvar _Promise = require('@babel/runtime/core-js/promise')['default'];\n\nrequire('@babel/runtime/core-js/promise')['default'] = require('bluebird');\n\nvar promise = new _Promise();\n```\n\nThe previous `Promise` library is referenced and used before it is overridden.\n\nOne approach is to have a \"bootstrap\" step in your application that would first override the default globals before your application:\n\n```javascript\n// bootstrap.js\n\nrequire('@babel/runtime/core-js/promise').default = require('bluebird');\n\n// ...\n\nrequire('./app');\n```\n\n### The Node.js API for `babel` has been moved to `babel-core`.\n\nIf you receive this message, it means that you have the npm package `babel` installed and are using the short notation of the loader in the webpack config (which is not valid anymore as of webpack 2.x):\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel',\n  }\n```\n\nwebpack then tries to load the `babel` package instead of the `babel-loader`.\n\nTo fix this, you should uninstall the npm package `babel`, as it is deprecated in Babel v6. (Instead, install `@babel/cli` or `@babel/core`.)\nIn the case one of your dependencies is installing `babel` and you cannot uninstall it yourself, use the complete name of the loader in the webpack config:\n```javascript\n  {\n    test: /\\.m?js$/,\n    loader: 'babel-loader',\n  }\n```\n\n## Customize config based on webpack target\n\nWebpack supports bundling multiple [targets](https://webpack.js.org/concepts/targets/). For cases where you may want different Babel configurations for each target (like `web` _and_ `node`), this loader provides a `target` property via Babel's [caller](https://babeljs.io/docs/en/config-files#apicallercb) API.\n\nFor example, to change the environment targets passed to `@babel/preset-env` based on the webpack target:\n\n```javascript\n// babel.config.js\n\nmodule.exports = api => {\n  return {\n    plugins: [\n      \"@babel/plugin-proposal-nullish-coalescing-operator\",\n      \"@babel/plugin-proposal-optional-chaining\"\n    ],\n    presets: [\n      [\n        \"@babel/preset-env\",\n        {\n          useBuiltIns: \"entry\",\n          // caller.target will be the same as the target option from webpack\n          targets: api.caller(caller => caller && caller.target === \"node\")\n            ? { node: \"current\" }\n            : { chrome: \"58\", ie: \"11\" }\n        }\n      ]\n    ]\n  }\n}\n```\n\n## Customized Loader\n\n`babel-loader` exposes a loader-builder utility that allows users to add custom handling\nof Babel's configuration for each file that it processes.\n\n`.custom` accepts a callback that will be called with the loader's instance of\n`babel` so that tooling can ensure that it using exactly the same `@babel/core`\ninstance as the loader itself.\n\nIn cases where you want to customize without actually having a file to call `.custom`, you\nmay also pass the `customize` option with a string pointing at a file that exports\nyour `custom` callback function.\n\n### Example\n\n```js\n// Export from \"./my-custom-loader.js\" or whatever you want.\nmodule.exports = require(\"babel-loader\").custom(babel => {\n  function myPlugin() {\n    return {\n      visitor: {},\n    };\n  }\n\n  return {\n    // Passed the loader options.\n    customOptions({ opt1, opt2, ...loader }) {\n      return {\n        // Pull out any custom options that the loader might have.\n        custom: { opt1, opt2 },\n\n        // Pass the options back with the two custom options removed.\n        loader,\n      };\n    },\n\n    // Passed Babel's 'PartialConfig' object.\n    config(cfg) {\n      if (cfg.hasFilesystemConfig()) {\n        // Use the normal config\n        return cfg.options;\n      }\n\n      return {\n        ...cfg.options,\n        plugins: [\n          ...(cfg.options.plugins || []),\n\n          // Include a custom plugin in the options.\n          myPlugin,\n        ],\n      };\n    },\n\n    result(result) {\n      return {\n        ...result,\n        code: result.code + \"\\n// Generated by some custom loader\",\n      };\n    },\n  };\n});\n```\n\n```js\n// And in your Webpack config\nmodule.exports = {\n  // ..\n  module: {\n    rules: [{\n      // ...\n      loader: path.join(__dirname, 'my-custom-loader.js'),\n      // ...\n    }]\n  }\n};\n```\n\n### `customOptions(options: Object): { custom: Object, loader: Object }`\n\nGiven the loader's options, split custom options out of `babel-loader`'s\noptions.\n\n\n### `config(cfg: PartialConfig): Object`\n\nGiven Babel's `PartialConfig` object, return the `options` object that should\nbe passed to `babel.transform`.\n\n\n### `result(result: Result): Result`\n\nGiven Babel's result object, allow loaders to make additional tweaks to it.\n\n\n## License\n[MIT](https://couto.mit-license.org/)"}, "npm": {"downloads": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 363199}, {"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8337418}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 34678955}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 106350422}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 183673512}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 330703324}], "dependentsCount": 10739, "starsCount": 119}, "github": {"starsCount": 4211, "forksCount": 386, "subscribersCount": 78, "issues": {"count": 834, "openCount": 52, "distribution": {"3600": 148, "10800": 65, "32400": 66, "97200": 66, "291600": 69, "874800": 69, "2624400": 74, "7873200": 71, "23619600": 81, "70858800": 94, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "danez", "commitsCount": 107}, {"username": "Couto", "commitsCount": 86}, {"username": "loganfsmyth", "commitsCount": 26}, {"username": "greenkeeper[bot]", "commitsCount": 25}, {"username": "hzoo", "commitsCount": 16}, {"username": "sebmck", "commitsCount": 14}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "shinnn", "commitsCount": 5}, {"username": "existentialism", "commitsCount": 4}, {"username": "STRML", "commitsCount": 3}, {"username": "d3viant0ne", "commitsCount": 3}, {"username": "jupl", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "JLHwung", "commitsCount": 2}, {"username": "Turbo87", "commitsCount": 2}, {"username": "evilebottnawi", "commitsCount": 2}, {"username": "gaearon", "commitsCount": 2}, {"username": "hawkrives", "commitsCount": 2}, {"username": "hiroppy", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "mlegenhausen", "commitsCount": 2}, {"username": "tricknotes", "commitsCount": 2}, {"username": "yuyokk", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "DanielApt", "commitsCount": 1}, {"username": "Delagen", "commitsCount": 1}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "JPeer264", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "MoOx", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Ognian", "commitsCount": 1}, {"username": "Oliboy50", "commitsCount": 1}, {"username": "PatNeedham", "commitsCount": 1}, {"username": "Rob-ot", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "YonatanKra", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adrienharnay", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "alexander-schranz", "commitsCount": 1}, {"username": "alexturpin", "commitsCount": 1}, {"username": "andreypopp", "commitsCount": 1}, {"username": "anilanar", "commitsCount": 1}, {"username": "bfanger", "commitsCount": 1}, {"username": "bjornstar", "commitsCount": 1}, {"username": "chrisvasz", "commitsCount": 1}, {"username": "creeperyang", "commitsCount": 1}, {"username": "dashed", "commitsCount": 1}, {"username": "davidtheclark", "commitsCount": 1}, {"username": "dferber90", "commitsCount": 1}, {"username": "didoarellano", "commitsCount": 1}, {"username": "eubenesa", "commitsCount": 1}, {"username": "eur00t", "commitsCount": 1}, {"username": "frederickfogerty", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gpbl", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "hantq", "commitsCount": 1}, {"username": "hedgepigdaniel", "commitsCount": 1}, {"username": "iansu", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jagzviruz", "commitsCount": 1}, {"username": "jennings", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "jonathanong", "commitsCount": 1}, {"username": "jrios", "commitsCount": 1}, {"username": "jscheid", "commitsCount": 1}, {"username": "koalex", "commitsCount": 1}, {"username": "leonaves", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "lukejagodzinski", "commitsCount": 1}, {"username": "moimael", "commitsCount": 1}, {"username": "nicolo-ribaudo", "commitsCount": 1}, {"username": "nikopavlica", "commitsCount": 1}, {"username": "ogonkov", "commitsCount": 1}, {"username": "philipwalton", "commitsCount": 1}, {"username": "pierreneter", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "popuguytheparrot", "commitsCount": 1}, {"username": "privatenumber", "commitsCount": 1}, {"username": "ramasilveyra", "commitsCount": 1}, {"username": "rvgrinsven", "commitsCount": 1}, {"username": "sandofvega", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sidraval", "commitsCount": 1}, {"username": "sohkai", "commitsCount": 1}, {"username": "taion", "commitsCount": 1}, {"username": "thymikee", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "timse", "commitsCount": 1}], "commits": [{"from": "2020-06-07T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-05-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 0}, {"from": "2020-03-16T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 1}, {"from": "2019-12-17T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 8}, {"from": "2019-06-15T00:00:00.000Z", "to": "2020-06-14T00:00:00.000Z", "count": 17}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 11142, "testsSize": 27135, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-loader.svg?style=flat", "shields": "https://img.shields.io/npm/v/babel-loader.svg", "content": "https://img.shields.io/npm/v/babel-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://travis-ci.org/babel/babel-loader.svg?branch=master", "service": "https://api.travis-ci.org/babel/babel-loader.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-loader/master.svg", "content": "https://img.shields.io/travis/babel/babel-loader/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/77y5mk6amwqt0q88/branch/master", "shields": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/77y5mk6amwqt0q88/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.64, "outdatedDependencies": {"pify": {"required": "^4.0.1", "stable": "5.0.0", "latest": "5.0.0"}, "loader-utils": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "find-cache-dir": {"required": "^2.1.0", "stable": "3.3.1", "latest": "3.3.1"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.946, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4886, "downloadsCount": 35450140.666666664, "downloadsAcceleration": 91075.13961187218, "dependentsCount": 10739}, "maintenance": {"releasesFrequency": 0.6044520547945206, "commitsFrequency": 0.6156164383561644, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7917115194776204, "detail": {"quality": 0.9305566395059038, "popularity": 0.8040415225003457, "maintenance": 0.6603714135735093}}}}, {"jest": {"analyzedAt": "2020-06-23T17:11:28.446Z", "collected": {"metadata": {"name": "jest", "scope": "unscoped", "version": "26.1.0", "description": "Delightful JavaScript Testing.", "keywords": ["ava", "babel", "coverage", "easy", "expect", "facebook", "immersive", "instant", "jasmine", "jest", "jsdom", "mocha", "mocking", "painless", "qunit", "runner", "sandboxed", "snapshot", "tap", "tape", "test", "testing", "typescript", "watch"], "date": "2020-06-23T15:16:03.909Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git"}, "links": {"npm": "https://www.npmjs.com/package/jest", "homepage": "https://jestjs.io/", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/core": "^26.1.0", "import-local": "^3.0.2", "jest-cli": "^26.1.0"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 23}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 24}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 26}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 61}], "readme": "# Jest\n\n\ud83c\udccf Delightful JavaScript Testing\n\n- **\ud83d\udc69\ud83c\udffb\u200d\ud83d\udcbb Developer Ready**: Complete and ready to set-up JavaScript testing solution. Works out of the box for any React project.\n\n- **\ud83c\udfc3\ud83c\udffd Instant Feedback**: Failed tests run first. Fast interactive mode can switch between running all tests or only test files related to changed files.\n\n- **\ud83d\udcf8 Snapshot Testing**: Jest can [capture snapshots](https://jestjs.io/docs/snapshot-testing.html) of React trees or other serializable values to simplify UI testing.\n\nRead More: https://jestjs.io/"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 6227853}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 30309951}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 93656689}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 166936625}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 291226993}], "dependentsCount": 5658, "starsCount": 91}, "github": {"homepage": "https://jestjs.io", "starsCount": 31480, "forksCount": 4470, "subscribersCount": 527, "issues": {"count": 10149, "openCount": 1108, "distribution": {"3600": 2114, "10800": 934, "32400": 937, "97200": 1307, "291600": 936, "874800": 814, "2624400": 736, "7873200": 739, "23619600": 663, "70858800": 812, "212576400": 157}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 629}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "jeysal", "commitsCount": 55}, {"username": "rubennorte", "commitsCount": 55}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "Connormiha", "commitsCount": 38}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "kenrick95", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 207}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 331}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 588}], "statuses": [{"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 551, "testsSize": 2251281, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 36668, "downloadsCount": 31218896.333333332, "downloadsAcceleration": 85498.26230974123, "dependentsCount": 5658}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.41009684640616173}}, "score": {"final": 0.9229637631154317, "detail": {"quality": 0.9487843908839052, "popularity": 0.8539169337998949, "maintenance": 0.969878625772277}}}}, {"lodash": {"analyzedAt": "2020-06-26T20:59:44.601Z", "collected": {"metadata": {"name": "lodash", "scope": "unscoped", "version": "4.17.15", "description": "Lodash modular utilities.", "keywords": ["modules", "stdlib", "util"], "date": "2019-07-19T02:28:46.584Z", "author": {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com", "username": "jdalton"}, "publisher": {"username": "jdalton", "email": "john.david.dalton@gmail.com"}, "maintainers": [{"username": "jdalton", "email": "john.david.dalton@gmail.com"}, {"username": "mathias", "email": "mathias@qiwi.be"}], "contributors": [{"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Mathias Bynens", "email": "mathias@qiwi.be"}], "repository": {"type": "git", "url": "git+https://github.com/lodash/lodash.git"}, "links": {"npm": "https://www.npmjs.com/package/lodash", "homepage": "https://lodash.com/", "repository": "https://github.com/lodash/lodash", "bugs": "https://github.com/lodash/lodash/issues"}, "license": "MIT", "devDependencies": {"async": "^2.1.4", "benchmark": "^2.1.3", "chalk": "^1.1.3", "cheerio": "^0.22.0", "codecov.io": "~0.1.6", "coveralls": "^2.11.15", "curl-amd": "~0.8.12", "docdown": "~0.7.2", "dojo": "^1.12.1", "ecstatic": "^2.2.2", "eslint": "^6.2.0", "eslint-plugin-import": "^2.18.2", "esm": "^3.1.3", "fs-extra": "~1.0.0", "glob": "^7.1.1", "istanbul": "0.4.5", "jquery": "^3.4.1", "lodash": "4.17.11", "lodash-doc-globals": "^0.1.1", "markdown-doctest": "^0.9.1", "mocha": "^5.2.0", "optional-dev-dependency": "^2.0.0", "platform": "^1.3.3", "qunit-extras": "^3.0.0", "qunitjs": "^2.1.0", "request": "^2.79.0", "requirejs": "^2.3.2", "sauce-tunnel": "^2.5.0", "uglify-js": "2.7.5", "webpack": "^1.14.0"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "readme": "# lodash v4.17.15\n\nThe [Lodash](https://lodash.com/) library exported as [Node.js](https://nodejs.org/) modules.\n\n## Installation\n\nUsing npm:\n```shell\n$ npm i -g npm\n$ npm i --save lodash\n```\n\nIn Node.js:\n```js\n// Load the full build.\nvar _ = require('lodash');\n// Load the core build.\nvar _ = require('lodash/core');\n// Load the FP build for immutable auto-curried iteratee-first data-last methods.\nvar fp = require('lodash/fp');\n\n// Load method categories.\nvar array = require('lodash/array');\nvar object = require('lodash/fp/object');\n\n// Cherry-pick methods for smaller browserify/rollup/webpack bundles.\nvar at = require('lodash/at');\nvar curryN = require('lodash/fp/curryN');\n```\n\nSee the [package source](https://github.com/lodash/lodash/tree/4.17.15-npm) for more details.\n\n**Note:**<br>\nInstall [n_](https://www.npmjs.com/package/n_) for Lodash use in the Node.js < 6 REPL.\n\n## Support\n\nTested in Chrome 74-75, Firefox 66-67, IE 11, Edge 18, Safari 11-12, & Node.js 8-12.<br>\nAutomated [browser](https://saucelabs.com/u/lodash) & [CI](https://travis-ci.org/lodash/lodash/) test runs are available."}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4863595}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 21777227}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 111803197}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 341866516}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 675547728}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1322948506}], "dependentsCount": 82036, "starsCount": 1499}, "github": {"homepage": "https://lodash.com/", "starsCount": 45353, "forksCount": 5010, "subscribersCount": 868, "issues": {"count": 4816, "openCount": 135, "distribution": {"3600": 2144, "10800": 848, "32400": 950, "97200": 312, "291600": 205, "874800": 139, "2624400": 69, "7873200": 66, "23619600": 71, "70858800": 11, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "jdalton", "commitsCount": 6643}, {"username": "jashkenas", "commitsCount": 314}, {"username": "falsyvalues", "commitsCount": 77}, {"username": "greenkeeperio-bot", "commitsCount": 46}, {"username": "bnjmnt4n", "commitsCount": 39}, {"username": "blikblum", "commitsCount": 38}, {"username": "ratbeard", "commitsCount": 22}, {"username": "ryantenney", "commitsCount": 22}, {"username": "braddunbar", "commitsCount": 21}, {"username": "megawac", "commitsCount": 19}, {"username": "jfmengels", "commitsCount": 18}, {"username": "mathiasbynens", "commitsCount": 10}, {"username": "octatone", "commitsCount": 9}, {"username": "phated", "commitsCount": 8}, {"username": "iamnoah", "commitsCount": 7}, {"username": "jridgewell", "commitsCount": 7}, {"username": "michaelficarra", "commitsCount": 7}, {"username": "samuelclay", "commitsCount": 7}, {"username": "rheh", "commitsCount": 6}, {"username": "AdamCraven", "commitsCount": 5}, {"username": "FilipZawada", "commitsCount": 5}, {"username": "danallison", "commitsCount": 5}, {"username": "danheberden", "commitsCount": 5}, {"username": "octref", "commitsCount": 5}, {"username": "pimterry", "commitsCount": 5}, {"username": "billyjanitsch", "commitsCount": 4}, {"username": "dr-skot", "commitsCount": 4}, {"username": "jasondavies", "commitsCount": 4}, {"username": "shinuza", "commitsCount": 4}, {"username": "tomByrer", "commitsCount": 4}, {"username": "younesfkihi", "commitsCount": 4}, {"username": "102", "commitsCount": 3}, {"username": "aretecode", "commitsCount": 3}, {"username": "captbaritone", "commitsCount": 3}, {"username": "craigmichaelmartin", "commitsCount": 3}, {"username": "danjm", "commitsCount": 3}, {"username": "jamiebuilds", "commitsCount": 3}, {"username": "kentcdodds", "commitsCount": 3}, {"username": "kishanov", "commitsCount": 3}, {"username": "lifesinger", "commitsCount": 3}, {"username": "moonformeli", "commitsCount": 3}, {"username": "rfletcher", "commitsCount": 3}, {"username": "Delapouite", "commitsCount": 2}, {"username": "DmitryBaranovskiy", "commitsCount": 2}, {"username": "JeffAMcGee", "commitsCount": 2}, {"username": "Keith-CY", "commitsCount": 2}, {"username": "Stuk", "commitsCount": 2}, {"username": "alanhogan", "commitsCount": 2}, {"username": "alireza-mh", "commitsCount": 2}, {"username": "aseemk", "commitsCount": 2}, {"username": "beaugunderson", "commitsCount": 2}, {"username": "bjh", "commitsCount": 2}, {"username": "brianhaveri", "commitsCount": 2}, {"username": "chaoflow", "commitsCount": 2}, {"username": "esamattis", "commitsCount": 2}, {"username": "greenkeeper[bot]", "commitsCount": 2}, {"username": "gu-xionghong", "commitsCount": 2}, {"username": "h7lin", "commitsCount": 2}, {"username": "islemaster", "commitsCount": 2}, {"username": "jayphelps", "commitsCount": 2}, {"username": "jpiccari", "commitsCount": 2}, {"username": "jrburke", "commitsCount": 2}, {"username": "kevinji", "commitsCount": 2}, {"username": "kriskowal", "commitsCount": 2}, {"username": "malclocke", "commitsCount": 2}, {"username": "mark-rushakoff", "commitsCount": 2}, {"username": "maw", "commitsCount": 2}, {"username": "mcmire", "commitsCount": 2}, {"username": "saravyas", "commitsCount": 2}, {"username": "steelsojka", "commitsCount": 2}, {"username": "terinjokes", "commitsCount": 2}, {"username": "think2011", "commitsCount": 2}, {"username": "timmywil", "commitsCount": 2}, {"username": "tonylukasavage", "commitsCount": 2}, {"username": "yuchi", "commitsCount": 2}, {"username": "yuxino", "commitsCount": 2}, {"username": "43081j", "commitsCount": 1}, {"username": "Jack-Works", "commitsCount": 1}, {"username": "Mohit21GoJs", "commitsCount": 1}, {"username": "RajuPedda", "commitsCount": 1}, {"username": "abdullahtariq1171", "commitsCount": 1}, {"username": "anatoliy8493", "commitsCount": 1}, {"username": "asilinwei", "commitsCount": 1}, {"username": "camjc", "commitsCount": 1}, {"username": "carbureted", "commitsCount": 1}, {"username": "cooperka", "commitsCount": 1}, {"username": "dracos", "commitsCount": 1}, {"username": "dwelle", "commitsCount": 1}, {"username": "dwesty17", "commitsCount": 1}, {"username": "fs-projects", "commitsCount": 1}, {"username": "futurist", "commitsCount": 1}, {"username": "gwwar", "commitsCount": 1}, {"username": "jacob87o2", "commitsCount": 1}, {"username": "lirantal", "commitsCount": 1}, {"username": "lvzhenbang", "commitsCount": 1}, {"username": "niexias", "commitsCount": 1}, {"username": "phapdinh", "commitsCount": 1}, {"username": "prog1dev", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tkrugg", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 42}]}, "source": {"files": {"readmeSize": 3208, "testsSize": 701226, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 0.33}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.6495, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 52830, "downloadsCount": 113955505.33333333, "downloadsAcceleration": 57695.81426940637, "dependentsCount": 82036}, "maintenance": {"releasesFrequency": 0.25890410958904114, "commitsFrequency": 0.7282705479452054, "openIssues": 1, "issuesDistribution": 1}}, "score": {"final": 0.9312210877482308, "detail": {"quality": 0.9394630038766539, "popularity": 0.9495414150364425, "maintenance": 0.9058362609213706}}}}, {"babel-eslint": {"analyzedAt": "2020-05-05T01:52:29.234Z", "collected": {"metadata": {"name": "babel-eslint", "scope": "unscoped", "version": "10.1.0", "description": "Custom parser for ESLint", "date": "2020-02-26T00:13:23.677Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jameshenry", "email": "npm@jameshenry.email"}, {"username": "kaicataldo", "email": "kai@kaicataldo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "monastic.panic", "email": "monastic.panic@gmail.com"}, {"username": "mysticatea", "email": "public@mysticatea.dev"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}, {"username": "not-an-aardvark", "email": "teddy.katz@gmail.com"}, {"username": "sebmck", "email": "npm@sebastian.barretomckenzie.com"}, {"username": "zertosh", "email": "zertosh@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-eslint.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-eslint", "homepage": "https://github.com/babel/babel-eslint", "repository": "https://github.com/babel/babel-eslint", "bugs": "https://github.com/babel/babel-eslint/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.0.0", "@babel/parser": "^7.7.0", "@babel/traverse": "^7.7.0", "@babel/types": "^7.7.0", "eslint-visitor-keys": "^1.0.0", "resolve": "^1.12.0"}, "devDependencies": {"babel-eslint": "^8.2.6", "dedent": "^0.7.0", "eslint": "^5.6.0", "eslint-config-babel": "^7.0.1", "eslint-plugin-flowtype": "^2.30.3", "eslint-plugin-import": "^2.14.0", "eslint-plugin-prettier": "^2.1.2", "espree": "^3.5.2", "husky": "^1.0.0-rc.13", "lint-staged": "^7.2.2", "mocha": "^5.0.1", "prettier": "^1.4.4"}, "peerDependencies": {"eslint": ">= 4.12.1"}, "releases": [{"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 4}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 6}, {"from": "2018-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# babel-eslint [![npm](https://img.shields.io/npm/v/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint) [![travis](https://img.shields.io/travis/babel/babel-eslint/master.svg)](https://travis-ci.org/babel/babel-eslint) [![npm-downloads](https://img.shields.io/npm/dm/babel-eslint.svg)](https://www.npmjs.com/package/babel-eslint)\n\n**babel-eslint** allows you to lint **ALL** valid Babel code with the fantastic\n[ESLint](https://github.com/eslint/eslint).\n\n### Why Use babel-eslint\n\nYou only need to use babel-eslint if you are using types (Flow) or experimental features not supported in ESLint itself yet. Otherwise try the default parser (you don't have to use it just because you are using Babel).\n\n---\n\n> If there is an issue, first check if it can be reproduced with the regular parser or with the latest versions of `eslint` and `babel-eslint`!\n\nFor questions and support please visit the [`#discussion`](https://babeljs.slack.com/messages/discussion/) babel slack channel (sign up [here](https://github.com/babel/notes/issues/38)) or eslint [gitter](https://gitter.im/eslint/eslint)!\n\n> Note that the `ecmaFeatures` config property may still be required for ESLint to work properly with features not in ECMAScript 5 by default. Examples are `globalReturn` and `modules`).\n\n## Known Issues\n\nFlow:\n> Check out [eslint-plugin-flowtype](https://github.com/gajus/eslint-plugin-flowtype): An `eslint` plugin that makes flow type annotations global variables and marks declarations as used. Solves the problem of false positives with `no-undef` and `no-unused-vars`.\n- `no-undef` for global flow types: `ReactElement`, `ReactClass` [#130](https://github.com/babel/babel-eslint/issues/130#issuecomment-111215076)\n  - Workaround: define types as globals in `.eslintrc` or define types and import them `import type ReactElement from './types'`\n- `no-unused-vars/no-undef` with Flow declarations (`declare module A {}`) [#132](https://github.com/babel/babel-eslint/issues/132#issuecomment-112815926)\n\nModules/strict mode\n- `no-unused-vars: [2, {vars: local}]` [#136](https://github.com/babel/babel-eslint/issues/136)\n\nPlease check out [eslint-plugin-react](https://github.com/yannickcr/eslint-plugin-react) for React/JSX issues\n- `no-unused-vars` with jsx\n\nPlease check out [eslint-plugin-babel](https://github.com/babel/eslint-plugin-babel) for other issues\n\n## How does it work?\n\nESLint allows custom parsers. This is great but some of the syntax nodes that Babel supports\naren't supported by ESLint. When using this plugin, ESLint is monkeypatched and your code is\ntransformed into code that ESLint can understand. All location info such as line numbers,\ncolumns is also retained so you can track down errors with ease.\n\nBasically `babel-eslint` exports an [`index.js`](/index.js) that a linter can use.\nIt just needs to export a `parse` method that takes in a string of code and outputs an AST.\n\n## Usage\n\n### Supported ESLint versions\n\nESLint | babel-eslint\n------------ | -------------\n4.x | >= 6.x\n3.x | >= 6.x\n2.x | >= 6.x\n1.x | >= 5.x\n\n### Install\n\nEnsure that you have substituted the correct version lock for `eslint` and `babel-eslint` into this command:\n\n```sh\n$ npm install eslint@4.x babel-eslint@8 --save-dev\n# or\n$ yarn add eslint@4.x babel-eslint@8 -D\n```\n\n### Setup\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"rules\": {\n    \"strict\": 0\n  }\n}\n```\n\nCheck out the [ESLint docs](http://eslint.org/docs/rules/) for all possible rules.\n\n### Configuration\n\n- `sourceType` can be set to `'module'`(default) or `'script'` if your code isn't using ECMAScript modules.\n- `allowImportExportEverywhere` (default `false`) can be set to `true` to allow import and export declarations to appear anywhere a statement is allowed if your build environment supports that. Otherwise import and export declarations can only appear at a program's top level.\n- `codeFrame` (default `true`) can be set to `false` to disable the code frame in the reporter. This is useful since some eslint formatters don't play well with it.\n\n**.eslintrc**\n\n```json\n{\n  \"parser\": \"babel-eslint\",\n  \"parserOptions\": {\n    \"sourceType\": \"module\",\n    \"allowImportExportEverywhere\": false,\n    \"codeFrame\": true\n  }\n}\n```\n\n### Run\n\n```sh\n$ eslint your-files-here\n```"}, "npm": {"downloads": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 1064340}, {"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5887517}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 25189796}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 73192669}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 127732226}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 239659761}], "dependentsCount": 7671, "starsCount": 75}, "github": {"homepage": "https://github.com/babel/babel-eslint/issues/88", "starsCount": 2916, "forksCount": 220, "subscribersCount": 57, "issues": {"count": 820, "openCount": 108, "distribution": {"3600": 149, "10800": 48, "32400": 65, "97200": 83, "291600": 68, "874800": 70, "2624400": 76, "7873200": 81, "23619600": 67, "70858800": 76, "212576400": 37}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 222}, {"username": "sebmck", "commitsCount": 66}, {"username": "danez", "commitsCount": 30}, {"username": "kaicataldo", "commitsCount": 17}, {"username": "zertosh", "commitsCount": 17}, {"username": "existentialism", "commitsCount": 16}, {"username": "mysticatea", "commitsCount": 9}, {"username": "BenoitZugmeyer", "commitsCount": 8}, {"username": "greenkeeper[bot]", "commitsCount": 7}, {"username": "greenkeeperio-bot", "commitsCount": 5}, {"username": "rubennorte", "commitsCount": 5}, {"username": "fatfisz", "commitsCount": 4}, {"username": "josh", "commitsCount": 4}, {"username": "loganfsmyth", "commitsCount": 3}, {"username": "not-an-aardvark", "commitsCount": 3}, {"username": "soda0289", "commitsCount": 3}, {"username": "Cellule", "commitsCount": 2}, {"username": "Couto", "commitsCount": 2}, {"username": "bgw", "commitsCount": 2}, {"username": "douglasduteil", "commitsCount": 2}, {"username": "kesne", "commitsCount": 2}, {"username": "leebyron", "commitsCount": 2}, {"username": "Constellation", "commitsCount": 1}, {"username": "Globegitter", "commitsCount": 1}, {"username": "JLHwung", "commitsCount": 1}, {"username": "MethodGrab", "commitsCount": 1}, {"username": "Standard8", "commitsCount": 1}, {"username": "UltCombo", "commitsCount": 1}, {"username": "ahomu", "commitsCount": 1}, {"username": "alexkuz", "commitsCount": 1}, {"username": "aoberoi", "commitsCount": 1}, {"username": "bary12", "commitsCount": 1}, {"username": "borela", "commitsCount": 1}, {"username": "bryanrsmith", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "clemmy", "commitsCount": 1}, {"username": "danharper", "commitsCount": 1}, {"username": "ecbrodie", "commitsCount": 1}, {"username": "edmorley", "commitsCount": 1}, {"username": "emersonlaurentino", "commitsCount": 1}, {"username": "evocateur", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "gmaclennan", "commitsCount": 1}, {"username": "golopot", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "jmurretxactly", "commitsCount": 1}, {"username": "joa", "commitsCount": 1}, {"username": "jony89", "commitsCount": 1}, {"username": "kevva", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "neverendingqs", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "ota-meshi", "commitsCount": 1}, {"username": "paramaggarwal", "commitsCount": 1}, {"username": "rattrayalex", "commitsCount": 1}, {"username": "rhettlivingston", "commitsCount": 1}, {"username": "skyrpex", "commitsCount": 1}, {"username": "stevenjob", "commitsCount": 1}, {"username": "vaibhavmule", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "viztor", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-04-28T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-04-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 0}, {"from": "2020-02-05T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 2}, {"from": "2019-11-07T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 5}, {"from": "2019-05-06T00:00:00.000Z", "to": "2020-05-05T00:00:00.000Z", "count": 11}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 4261, "testsSize": 69362}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-eslint.svg", "shields": "https://img.shields.io/npm/v/babel-eslint.svg", "content": "https://img.shields.io/npm/v/babel-eslint.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "service": "https://api.travis-ci.org/babel/babel-eslint.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-eslint/master.svg", "content": "https://img.shields.io/travis/babel/babel-eslint/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-eslint.svg", "shields": "https://img.shields.io/npm/dm/babel-eslint.svg", "content": "https://img.shields.io/npm/dm/babel-eslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3330, "downloadsCount": 24397556.333333332, "downloadsAcceleration": 59019.793645357684, "dependentsCount": 7671}, "maintenance": {"releasesFrequency": 0.8482876712328767, "commitsFrequency": 0.3890753424657534, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7846220262267618, "detail": {"quality": 0.9681725440576688, "popularity": 0.7533703359570015, "maintenance": 0.6585447012128876}}}}, {"@types/node": {"analyzedAt": "2019-10-30T15:45:53.550Z", "collected": {"metadata": {"name": "@types/node", "scope": "types", "version": "12.12.2", "description": "TypeScript definitions for Node.js", "date": "2019-10-30T15:45:00.019Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Microsoft TypeScript", "url": "https://github.com/Microsoft"}, {"name": "DefinitelyTyped", "url": "https://github.com/DefinitelyTyped"}, {"name": "Alberto Schiabel", "url": "https://github.com/jkomyno"}, {"name": "Alexander T.", "url": "https://github.com/a-tarasyuk"}, {"name": "Alvis HT Tang", "url": "https://github.com/alvis"}, {"name": "Andrew Makarov", "url": "https://github.com/r3nya"}, {"name": "Benjamin Toueg", "url": "https://github.com/btoueg"}, {"name": "Bruno Scheufler", "url": "https://github.com/brunoscheufler"}, {"name": "Chigozirim C.", "url": "https://github.com/smac89"}, {"name": "Christian Vaagland Tellnes", "url": "https://github.com/tellnes"}, {"name": "David Junger", "url": "https://github.com/touffy"}, {"name": "Deividas Bakanas", "url": "https://github.com/DeividasBakanas"}, {"name": "Eugene Y. Q. Shen", "url": "https://github.com/eyqs"}, {"name": "Flarna", "url": "https://github.com/Flarna"}, {"name": "Hannes Magnusson", "url": "https://github.com/Hannes-Magnusson-CK"}, {"name": "Ho\u00e0ng V\u0103n Kh\u1ea3i", "url": "https://github.com/KSXGitHub"}, {"name": "Huw", "url": "https://github.com/hoo29"}, {"name": "Kelvin Jin", "url": "https://github.com/kjin"}, {"name": "Klaus Meinhardt", "url": "https://github.com/ajafff"}, {"name": "Lishude", "url": "https://github.com/islishude"}, {"name": "Mariusz Wiktorczyk", "url": "https://github.com/mwiktorczyk"}, {"name": "Mohsen Azimi", "url": "https://github.com/mohsen1"}, {"name": "Nicolas Even", "url": "https://github.com/n-e"}, {"name": "Nicolas Voigt", "url": "https://github.com/octo-sniffle"}, {"name": "Nikita Galkin", "url": "https://github.com/galkin"}, {"name": "Parambir Singh", "url": "https://github.com/parambirs"}, {"name": "Sebastian Silbermann", "url": "https://github.com/eps1lon"}, {"name": "Simon Schick", "url": "https://github.com/SimonSchick"}, {"name": "Thomas den Hollander", "url": "https://github.com/ThomasdenH"}, {"name": "Wilco Bakker", "url": "https://github.com/WilcoBakker"}, {"name": "wwwy3y3", "url": "https://github.com/wwwy3y3"}, {"name": "Zane Hannan AU", "url": "https://github.com/ZaneHannanAU"}, {"name": "Samuel Ainsworth", "url": "https://github.com/samuela"}, {"name": "Kyle Uehlein", "url": "https://github.com/kuehlein"}, {"name": "Jordi Oliveras Rovira", "url": "https://github.com/j-oliveras"}, {"name": "Thanik Bhongbhibhat", "url": "https://github.com/bhongy"}, {"name": "Marcin Kopacz", "url": "https://github.com/chyzwar"}, {"name": "Trivikram Kamat", "url": "https://github.com/trivikr"}, {"name": "Minh Son Nguyen", "url": "https://github.com/nguymin4"}], "repository": {"type": "git", "url": "git+https://github.com/DefinitelyTyped/DefinitelyTyped.git", "directory": "types/node"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fnode", "homepage": "https://github.com/DefinitelyTyped/DefinitelyTyped#readme", "repository": "https://github.com/DefinitelyTyped/DefinitelyTyped", "bugs": "https://github.com/DefinitelyTyped/DefinitelyTyped/issues"}, "license": "MIT", "releases": [{"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 27}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 50}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 96}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 212}, {"from": "2017-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 462}], "readme": "# Installation\r\n> `npm install --save @types/node`\r\n\r\n# Summary\r\nThis package contains type definitions for Node.js (http://nodejs.org/).\r\n\r\n# Details\r\nFiles were exported from https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/node\r\n\r\nAdditional Details\r\n * Last updated: Wed, 30 Oct 2019 15:44:41 GMT\r\n * Dependencies: none\r\n * Global values: Buffer, NodeJS, Symbol, __dirname, __filename, clearImmediate, clearInterval, clearTimeout, console, exports, global, module, process, queueMicrotask, require, setImmediate, setInterval, setTimeout\r\n\r\n# Credits\r\nThese definitions were written by Microsoft TypeScript <https://github.com/Microsoft>, DefinitelyTyped <https://github.com/DefinitelyTyped>, Alberto Schiabel <https://github.com/jkomyno>, Alexander T. <https://github.com/a-tarasyuk>, Alvis HT Tang <https://github.com/alvis>, Andrew Makarov <https://github.com/r3nya>, Benjamin Toueg <https://github.com/btoueg>, Bruno Scheufler <https://github.com/brunoscheufler>, Chigozirim C. <https://github.com/smac89>, Christian Vaagland Tellnes <https://github.com/tellnes>, David Junger <https://github.com/touffy>, Deividas Bakanas <https://github.com/DeividasBakanas>, Eugene Y. Q. Shen <https://github.com/eyqs>, Flarna <https://github.com/Flarna>, Hannes Magnusson <https://github.com/Hannes-Magnusson-CK>, Ho\u00e0ng V\u0103n Kh\u1ea3i <https://github.com/KSXGitHub>, Huw <https://github.com/hoo29>, Kelvin Jin <https://github.com/kjin>, Klaus Meinhardt <https://github.com/ajafff>, Lishude <https://github.com/islishude>, Mariusz Wiktorczyk <https://github.com/mwiktorczyk>, Mohsen Azimi <https://github.com/mohsen1>, Nicolas Even <https://github.com/n-e>, Nicolas Voigt <https://github.com/octo-sniffle>, Nikita Galkin <https://github.com/galkin>, Parambir Singh <https://github.com/parambirs>, Sebastian Silbermann <https://github.com/eps1lon>, Simon Schick <https://github.com/SimonSchick>, Thomas den Hollander <https://github.com/ThomasdenH>, Wilco Bakker <https://github.com/WilcoBakker>, wwwy3y3 <https://github.com/wwwy3y3>, Zane Hannan AU <https://github.com/ZaneHannanAU>, Samuel Ainsworth <https://github.com/samuela>, Kyle Uehlein <https://github.com/kuehlein>, Jordi Oliveras Rovira <https://github.com/j-oliveras>, Thanik Bhongbhibhat <https://github.com/bhongy>, Marcin Kopacz <https://github.com/chyzwar>, Trivikram Kamat <https://github.com/trivikr>, and Minh Son Nguyen <https://github.com/nguymin4>."}, "npm": {"downloads": [{"from": "2019-10-29T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 3322016}, {"from": "2019-10-23T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 17892909}, {"from": "2019-09-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 74095524}, {"from": "2019-08-01T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 209443714}, {"from": "2019-05-03T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 391479005}, {"from": "2018-10-30T00:00:00.000Z", "to": "2019-10-30T00:00:00.000Z", "count": 656625029}], "dependentsCount": 8111, "starsCount": 22}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 0, "branding": 0}, "popularity": {"communityInterest": 22, "downloadsCount": 69814571.33333333, "downloadsAcceleration": 261697.19918188732, "dependentsCount": 8111}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-node-9knchk0mndn/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-24T10:33:01.003Z"}, "score": {"final": 0.4167585025841909, "detail": {"quality": 0.19891579971391418, "popularity": 0.686905988581, "maintenance": 0.3333333333333333}}}}, {"eslint-plugin-import": {"analyzedAt": "2020-06-27T06:22:07.548Z", "collected": {"metadata": {"name": "eslint-plugin-import", "scope": "unscoped", "version": "2.22.0", "description": "Import with sanity.", "keywords": ["eslint", "eslintplugin", "es6", "jsnext", "modules", "import", "export"], "date": "2020-06-27T06:21:36.457Z", "author": {"name": "Ben Mosher", "email": "me@benmosher.com", "username": "benmosher"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "benmosher", "email": "me@benmosher.com"}, {"username": "jfmengels", "email": "jfm.engels@gmail.com"}, {"username": "ljharb", "email": "ljharb@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/benmosher/eslint-plugin-import.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-import", "homepage": "https://github.com/benmosher/eslint-plugin-import", "repository": "https://github.com/benmosher/eslint-plugin-import", "bugs": "https://github.com/benmosher/eslint-plugin-import/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "array.prototype.flat": "^1.2.3", "contains-path": "^0.1.0", "debug": "^2.6.9", "doctrine": "1.5.0", "eslint-import-resolver-node": "^0.3.3", "eslint-module-utils": "^2.6.0", "has": "^1.0.3", "minimatch": "^3.0.4", "object.values": "^1.1.1", "read-pkg-up": "^2.0.0", "resolve": "^1.17.0", "tsconfig-paths": "^3.9.0"}, "devDependencies": {"@eslint/import-test-order-redirect-scoped": "file:./tests/files/order-redirect-scoped", "@test-scope/some-module": "file:./tests/files/symlinked-module", "@typescript-eslint/parser": "^2.23.0 || ^3.3.0", "array.prototype.flatmap": "^1.2.3", "babel-cli": "^6.26.0", "babel-core": "^6.26.3", "babel-eslint": "^8.2.6", "babel-plugin-istanbul": "^4.1.6", "babel-plugin-module-resolver": "^2.7.1", "babel-preset-es2015-argon": "latest", "babel-preset-flow": "^6.23.0", "babel-register": "^6.26.0", "babylon": "^6.18.0", "chai": "^4.2.0", "coveralls": "^3.0.6", "cross-env": "^4.0.0", "eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0", "eslint-import-resolver-node": "file:./resolvers/node", "eslint-import-resolver-typescript": "^1.0.2", "eslint-import-resolver-webpack": "file:./resolvers/webpack", "eslint-import-test-order-redirect": "file:./tests/files/order-redirect", "eslint-module-utils": "file:./utils", "eslint-plugin-eslint-plugin": "^2.2.1", "eslint-plugin-import": "2.x", "eslint-plugin-json": "^2.1.1", "fs-copy-file-sync": "^1.1.1", "glob": "^7.1.6", "in-publish": "^2.0.1", "linklocal": "^2.8.2", "lodash.isarray": "^4.0.0", "mocha": "^3.5.3", "npm-which": "^3.0.1", "nyc": "^11.9.0", "redux": "^3.7.2", "rimraf": "^2.7.1", "semver": "^6.3.0", "sinon": "^2.4.1", "typescript": "~3.9.5", "typescript-eslint-parser": "^22.0.0"}, "peerDependencies": {"eslint": "^2 || ^3 || ^4 || ^5 || ^6 || ^7.2.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 10}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 18}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# eslint-plugin-import\n\n[![build status](https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master)](https://travis-ci.org/benmosher/eslint-plugin-import)\n[![Coverage Status](https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master)](https://coveralls.io/github/benmosher/eslint-plugin-import?branch=master)\n[![win32 build status](https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true)](https://ci.appveyor.com/project/benmosher/eslint-plugin-import/branch/master)\n[![npm](https://img.shields.io/npm/v/eslint-plugin-import.svg)](https://www.npmjs.com/package/eslint-plugin-import)\n[![npm downloads](https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000)](http://www.npmtrends.com/eslint-plugin-import)\n\nThis plugin intends to support linting of ES2015+ (ES6+) import/export syntax, and prevent issues with misspelling of file paths and import names. All the goodness that the ES2015+ static module syntax intends to provide, marked up in your editor.\n\n**IF YOU ARE USING THIS WITH SUBLIME**: see the [bottom section](#sublimelinter-eslint) for important info.\n\n## Rules\n\n### Static analysis\n\n* Ensure imports point to a file/module that can be resolved. ([`no-unresolved`])\n* Ensure named imports correspond to a named export in the remote file. ([`named`])\n* Ensure a default export is present, given a default import. ([`default`])\n* Ensure imported namespaces contain dereferenced properties as they are dereferenced. ([`namespace`])\n* Restrict which files can be imported in a given folder ([`no-restricted-paths`])\n* Forbid import of modules using absolute paths ([`no-absolute-path`])\n* Forbid `require()` calls with expressions ([`no-dynamic-require`])\n* Prevent importing the submodules of other modules ([`no-internal-modules`])\n* Forbid webpack loader syntax in imports ([`no-webpack-loader-syntax`])\n* Forbid a module from importing itself ([`no-self-import`])\n* Forbid a module from importing a module with a dependency path back to itself ([`no-cycle`])\n* Prevent unnecessary path segments in import and require statements ([`no-useless-path-segments`])\n* Forbid importing modules from parent directories ([`no-relative-parent-imports`])\n\n[`no-unresolved`]: ./docs/rules/no-unresolved.md\n[`named`]: ./docs/rules/named.md\n[`default`]: ./docs/rules/default.md\n[`namespace`]: ./docs/rules/namespace.md\n[`no-restricted-paths`]: ./docs/rules/no-restricted-paths.md\n[`no-absolute-path`]: ./docs/rules/no-absolute-path.md\n[`no-dynamic-require`]: ./docs/rules/no-dynamic-require.md\n[`no-internal-modules`]: ./docs/rules/no-internal-modules.md\n[`no-webpack-loader-syntax`]: ./docs/rules/no-webpack-loader-syntax.md\n[`no-self-import`]: ./docs/rules/no-self-import.md\n[`no-cycle`]: ./docs/rules/no-cycle.md\n[`no-useless-path-segments`]: ./docs/rules/no-useless-path-segments.md\n[`no-relative-parent-imports`]: ./docs/rules/no-relative-parent-imports.md\n\n### Helpful warnings\n\n\n* Report any invalid exports, i.e. re-export of the same name ([`export`])\n* Report use of exported name as identifier of default export ([`no-named-as-default`])\n* Report use of exported name as property of default export ([`no-named-as-default-member`])\n* Report imported names marked with `@deprecated` documentation tag ([`no-deprecated`])\n* Forbid the use of extraneous packages ([`no-extraneous-dependencies`])\n* Forbid the use of mutable exports with `var` or `let`. ([`no-mutable-exports`])\n* Report modules without exports, or exports without matching import in another module ([`no-unused-modules`])\n\n[`export`]: ./docs/rules/export.md\n[`no-named-as-default`]: ./docs/rules/no-named-as-default.md\n[`no-named-as-default-member`]: ./docs/rules/no-named-as-default-member.md\n[`no-deprecated`]: ./docs/rules/no-deprecated.md\n[`no-extraneous-dependencies`]: ./docs/rules/no-extraneous-dependencies.md\n[`no-mutable-exports`]: ./docs/rules/no-mutable-exports.md\n[`no-unused-modules`]: ./docs/rules/no-unused-modules.md\n\n### Module systems\n\n* Report potentially ambiguous parse goal (`script` vs. `module`) ([`unambiguous`])\n* Report CommonJS `require` calls and `module.exports` or `exports.*`. ([`no-commonjs`])\n* Report AMD `require` and `define` calls. ([`no-amd`])\n* No Node.js builtin modules. ([`no-nodejs-modules`])\n\n[`unambiguous`]: ./docs/rules/unambiguous.md\n[`no-commonjs`]: ./docs/rules/no-commonjs.md\n[`no-amd`]: ./docs/rules/no-amd.md\n[`no-nodejs-modules`]: ./docs/rules/no-nodejs-modules.md\n\n\n### Style guide\n\n* Ensure all imports appear before other statements ([`first`])\n* Ensure all exports appear after other statements ([`exports-last`])\n* Report repeated import of the same module in multiple places ([`no-duplicates`])\n* Forbid namespace (a.k.a. \"wildcard\" `*`) imports ([`no-namespace`])\n* Ensure consistent use of file extension within the import path ([`extensions`])\n* Enforce a convention in module import order ([`order`])\n* Enforce a newline after import statements ([`newline-after-import`])\n* Prefer a default export if module exports a single name ([`prefer-default-export`])\n* Limit the maximum number of dependencies a module can have ([`max-dependencies`])\n* Forbid unassigned imports ([`no-unassigned-import`])\n* Forbid named default exports ([`no-named-default`])\n* Forbid default exports ([`no-default-export`])\n* Forbid named exports ([`no-named-export`])\n* Forbid anonymous values as default exports ([`no-anonymous-default-export`])\n* Prefer named exports to be grouped together in a single export declaration ([`group-exports`])\n* Enforce a leading comment with the webpackChunkName for dynamic imports ([`dynamic-import-chunkname`])\n\n[`first`]: ./docs/rules/first.md\n[`exports-last`]: ./docs/rules/exports-last.md\n[`no-duplicates`]: ./docs/rules/no-duplicates.md\n[`no-namespace`]: ./docs/rules/no-namespace.md\n[`extensions`]: ./docs/rules/extensions.md\n[`order`]: ./docs/rules/order.md\n[`newline-after-import`]: ./docs/rules/newline-after-import.md\n[`prefer-default-export`]: ./docs/rules/prefer-default-export.md\n[`max-dependencies`]: ./docs/rules/max-dependencies.md\n[`no-unassigned-import`]: ./docs/rules/no-unassigned-import.md\n[`no-named-default`]: ./docs/rules/no-named-default.md\n[`no-anonymous-default-export`]: ./docs/rules/no-anonymous-default-export.md\n[`group-exports`]: ./docs/rules/group-exports.md\n[`no-default-export`]: ./docs/rules/no-default-export.md\n[`no-named-export`]: ./docs/rules/no-named-export.md\n[`dynamic-import-chunkname`]: ./docs/rules/dynamic-import-chunkname.md\n\n## `eslint-plugin-import` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `eslint-plugin-import` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-eslint-plugin-import?utm_source=npm-eslint-plugin-import&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Installation\n\n```sh\nnpm install eslint-plugin-import -g\n```\n\nor if you manage ESLint as a dev dependency:\n\n```sh\n# inside your project's working tree\nnpm install eslint-plugin-import --save-dev\n```\n\nAll rules are off by default. However, you may configure them manually\nin your `.eslintrc.(yml|json|js)`, or extend one of the canned configs:\n\n```yaml\n---\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n\n# or configure manually:\nplugins:\n  - import\n\nrules:\n  import/no-unresolved: [2, {commonjs: true, amd: true}]\n  import/named: 2\n  import/namespace: 2\n  import/default: 2\n  import/export: 2\n  # etc...\n```\n\n# TypeScript\n\nYou may use the following shortcut or assemble your own config using the granular settings described below.\n\nMake sure you have installed [`@typescript-eslint/parser`] which is used in the following configuration. Unfortunately NPM does not allow to list optional peer dependencies.\n\n```yaml\nextends:\n  - eslint:recommended\n  - plugin:import/errors\n  - plugin:import/warnings\n  - plugin:import/typescript # this line does the trick\n```\n\n[`@typescript-eslint/parser`]: https://github.com/typescript-eslint/typescript-eslint/tree/master/packages/parser\n\n# Resolvers\n\nWith the advent of module bundlers and the current state of modules and module\nsyntax specs, it's not always obvious where `import x from 'module'` should look\nto find the file behind `module`.\n\nUp through v0.10ish, this plugin has directly used substack's [`resolve`] plugin,\nwhich implements Node's import behavior. This works pretty well in most cases.\n\nHowever, webpack allows a number of things in import module source strings that\nNode does not, such as loaders (`import 'file!./whatever'`) and a number of\naliasing schemes, such as [`externals`]: mapping a module id to a global name at\nruntime (allowing some modules to be included more traditionally via script tags).\n\nIn the interest of supporting both of these, v0.11 introduces resolvers.\n\nCurrently [Node] and [webpack] resolution have been implemented, but the\nresolvers are just npm packages, so [third party packages are supported](https://github.com/benmosher/eslint-plugin-import/wiki/Resolvers) (and encouraged!).\n\nYou can reference resolvers in several ways (in order of precedence):\n\n- as a conventional `eslint-import-resolver` name, like `eslint-import-resolver-foo`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  # uses 'eslint-import-resolver-foo':\n  import/resolver: foo\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      foo: { someConfig: value }\n    }\n  }\n}\n```\n\n- with a full npm module name, like `my-awesome-npm-module`:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/resolver: 'my-awesome-npm-module'\n```\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      'my-awesome-npm-module': { someConfig: value }\n    }\n  }\n}\n```\n\n- with a filesystem path to resolver, defined in this example as a `computed property` name:\n\n```js\n// .eslintrc.js\nmodule.exports = {\n  settings: {\n    'import/resolver': {\n      [path.resolve('../../../my-resolver')]: { someConfig: value }\n    }\n  }\n}\n```\n\nRelative paths will be resolved relative to the source's nearest `package.json` or\nthe process's current working directory if no `package.json` is found.\n\n\n\nIf you are interesting in writing a resolver, see the [spec](./resolvers/README.md) for more details.\n\n[`resolve`]: https://www.npmjs.com/package/resolve\n[`externals`]: http://webpack.github.io/docs/library-and-externals.html\n\n[Node]: https://www.npmjs.com/package/eslint-import-resolver-node\n[webpack]: https://www.npmjs.com/package/eslint-import-resolver-webpack\n\n# Settings\n\nYou may set the following settings in your `.eslintrc`:\n\n#### `import/extensions`\n\nA list of file extensions that will be parsed as modules and inspected for\n`export`s.\n\nThis defaults to `['.js']`, unless you are using the `react` shared config,\nin which case it is specified as `['.js', '.jsx']`.\n\n```js\n\"settings\": {\n  \"import/extensions\": [\n    \".js\",\n    \".jsx\"\n  ]\n}\n```\n\nIf you require more granular extension definitions, you can use:\n\n```js\n\"settings\": {\n  \"import/resolver\": {\n    \"node\": {\n      \"extensions\": [\n        \".js\",\n        \".jsx\"\n      ]\n    }\n  }\n}\n```\n\nNote that this is different from (and likely a subset of) any `import/resolver`\nextensions settings, which may include `.json`, `.coffee`, etc. which will still\nfactor into the `no-unresolved` rule.\n\nAlso, the following `import/ignore` patterns will overrule this list.\n\n#### `import/ignore`\n\nA list of regex strings that, if matched by a path, will\nnot report the matching module if no `export`s are found.\nIn practice, this means rules other than [`no-unresolved`](./docs/rules/no-unresolved.md#ignore) will not report on any\n`import`s with (absolute filesystem) paths matching this pattern.\n\n`no-unresolved` has its own [`ignore`](./docs/rules/no-unresolved.md#ignore) setting.\n\n```yaml\nsettings:\n  import/ignore:\n    - \\.coffee$          # fraught with parse errors\n    - \\.(scss|less|css)$ # can't parse unprocessed CSS modules, either\n```\n\n#### `import/core-modules`\n\nAn array of additional modules to consider as \"core\" modules--modules that should\nbe considered resolved but have no path on the filesystem. Your resolver may\nalready define some of these (for example, the Node resolver knows about `fs` and\n`path`), so you need not redefine those.\n\nFor example, Electron exposes an `electron` module:\n\n```js\nimport 'electron'  // without extra config, will be flagged as unresolved!\n```\n\nthat would otherwise be unresolved. To avoid this, you may provide `electron` as a\ncore module:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/core-modules: [ electron ]\n```\n\nIn Electron's specific case, there is a shared config named `electron`\nthat specifies this for you.\n\nContribution of more such shared configs for other platforms are welcome!\n\n#### `import/external-module-folders`\n\nAn array of folders. Resolved modules only from those folders will be considered as \"external\". By default - `[\"node_modules\"]`. Makes sense if you have configured your path or webpack to handle your internal paths differently and want to consider modules from some folders, for example `bower_components` or `jspm_modules`, as \"external\".\n\nThis option is also useful in a monorepo setup: list here all directories that contain monorepo's packages and they will be treated as external ones no matter which resolver is used.\n\nEach item in this array is either a folder's name, its subpath, or its absolute prefix path:\n\n- `jspm_modules` will match any file or folder named `jspm_modules` or which has a direct or non-direct parent named `jspm_modules`, e.g. `/home/me/project/jspm_modules` or `/home/me/project/jspm_modules/some-pkg/index.js`.\n\n- `packages/core` will match any path that contains these two segments, for example `/home/me/project/packages/core/src/utils.js`.\n\n- `/home/me/project/packages` will only match files and directories inside this directory, and the directory itself.\n\nPlease note that incomplete names are not allowed here so `components` won't match `bower_components` and `packages/ui` won't match `packages/ui-utils` (but will match `packages/ui/utils`).\n\n#### `import/parsers`\n\nA map from parsers to file extension arrays. If a file extension is matched, the\ndependency parser will require and use the map key as the parser instead of the\nconfigured ESLint parser. This is useful if you're inter-op-ing with TypeScript\ndirectly using webpack, for example:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/parsers:\n    @typescript-eslint/parser: [ .ts, .tsx ]\n```\n\nIn this case, [`@typescript-eslint/parser`](https://www.npmjs.com/package/@typescript-eslint/parser)\nmust be installed and require-able from the running `eslint` module's location\n(i.e., install it as a peer of ESLint).\n\nThis is currently only tested with `@typescript-eslint/parser` (and its predecessor,\n`typescript-eslint-parser`) but should theoretically work with any moderately\nESTree-compliant parser.\n\nIt's difficult to say how well various plugin features will be supported, too,\ndepending on how far down the rabbit hole goes. Submit an issue if you find strange\nbehavior beyond here, but steel your heart against the likely outcome of closing\nwith `wontfix`.\n\n\n#### `import/resolver`\n\nSee [resolvers](#resolvers).\n\n#### `import/cache`\n\nSettings for cache behavior. Memoization is used at various levels to avoid the copious amount of `fs.statSync`/module parse calls required to correctly report errors.\n\nFor normal `eslint` console runs, the cache lifetime is irrelevant, as we can strongly assume that files should not be changing during the lifetime of the linter process (and thus, the cache in memory)\n\nFor long-lasting processes, like [`eslint_d`] or [`eslint-loader`], however, it's important that there be some notion of staleness.\n\nIf you never use [`eslint_d`] or [`eslint-loader`], you may set the cache lifetime to `Infinity` and everything should be fine:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: \u221e  # or Infinity\n```\n\nOtherwise, set some integer, and cache entries will be evicted after that many seconds have elapsed:\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/cache:\n    lifetime: 5  # 30 is the default\n```\n\n[`eslint_d`]: https://www.npmjs.com/package/eslint_d\n[`eslint-loader`]: https://www.npmjs.com/package/eslint-loader\n\n#### `import/internal-regex`\n\nA regex for packages should be treated as internal. Useful when you are utilizing a monorepo setup or developing a set of packages that depend on each other.\n\nBy default, any package referenced from [`import/external-module-folders`](#importexternal-module-folders) will be considered as \"external\", including packages in a monorepo like yarn workspace or lerna environment. If you want to mark these packages as \"internal\" this will be useful.\n\nFor example, if your packages in a monorepo are all in `@scope`, you can configure `import/internal-regex` like this\n\n```yaml\n# .eslintrc.yml\nsettings:\n  import/internal-regex: ^@scope/\n```\n\n\n## SublimeLinter-eslint\n\nSublimeLinter-eslint introduced a change to support `.eslintignore` files\nwhich altered the way file paths are passed to ESLint when linting during editing.\nThis change sends a relative path instead of the absolute path to the file (as ESLint\nnormally provides), which can make it impossible for this plugin to resolve dependencies\non the filesystem.\n\nThis workaround should no longer be necessary with the release of ESLint 2.0, when\n`.eslintignore` will be updated to work more like a `.gitignore`, which should\nsupport proper ignoring of absolute paths via `--stdin-filename`.\n\nIn the meantime, see [roadhump/SublimeLinter-eslint#58](https://github.com/roadhump/SublimeLinter-eslint/issues/58)\nfor more details and discussion, but essentially, you may find you need to add the following\n`SublimeLinter` config to your Sublime project file:\n\n```json\n{\n    \"folders\":\n    [\n        {\n            \"path\": \"code\"\n        }\n    ],\n    \"SublimeLinter\":\n    {\n        \"linters\":\n        {\n            \"eslint\":\n            {\n                \"chdir\": \"${project}/code\"\n            }\n        }\n    }\n}\n```\n\nNote that `${project}/code` matches the `code` provided at `folders[0].path`.\n\nThe purpose of the `chdir` setting, in this case, is to set the working directory\nfrom which ESLint is executed to be the same as the directory on which SublimeLinter-eslint\nbases the relative path it provides.\n\nSee the SublimeLinter docs on [`chdir`](http://www.sublimelinter.com/en/latest/linter_settings.html#chdir)\nfor more information, in case this does not work with your project.\n\nIf you are not using `.eslintignore`, or don't have a Sublime project file, you can also\ndo the following via a `.sublimelinterrc` file in some ancestor directory of your\ncode:\n\n```json\n{\n  \"linters\": {\n    \"eslint\": {\n      \"args\": [\"--stdin-filename\", \"@\"]\n    }\n  }\n}\n```\n\nI also found that I needed to set `rc_search_limit` to `null`, which removes the file\nhierarchy search limit when looking up the directory tree for `.sublimelinterrc`:\n\nIn Package Settings / SublimeLinter / User Settings:\n```json\n{\n  \"user\": {\n    \"rc_search_limit\": null\n  }\n}\n```\n\nI believe this defaults to `3`, so you may not need to alter it depending on your\nproject folder max depth."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1201169}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6112263}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 30955610}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 92423529}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 167808087}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 287666085}], "dependentsCount": 7670, "starsCount": 48}, "github": {"starsCount": 2610, "forksCount": 886, "subscribersCount": 30, "issues": {"count": 1806, "openCount": 298, "distribution": {"3600": 146, "10800": 89, "32400": 116, "97200": 222, "291600": 154, "874800": 187, "2624400": 180, "7873200": 197, "23619600": 193, "70858800": 177, "212576400": 145}, "isDisabled": false}, "contributors": [{"username": "benmosher", "commitsCount": 835}, {"username": "ljharb", "commitsCount": 130}, {"username": "jfmengels", "commitsCount": 35}, {"username": "greenkeeperio-bot", "commitsCount": 28}, {"username": "rfermann", "commitsCount": 27}, {"username": "golopot", "commitsCount": 18}, {"username": "sompylasar", "commitsCount": 17}, {"username": "graingert", "commitsCount": 12}, {"username": "josh", "commitsCount": 9}, {"username": "le0nik", "commitsCount": 9}, {"username": "sheepsteak", "commitsCount": 9}, {"username": "k15a", "commitsCount": 8}, {"username": "manuth", "commitsCount": 8}, {"username": "christophercurrie", "commitsCount": 7}, {"username": "knpwrs", "commitsCount": 7}, {"username": "Arcanemagus", "commitsCount": 6}, {"username": "lydell", "commitsCount": 6}, {"username": "singles", "commitsCount": 6}, {"username": "byteme980", "commitsCount": 5}, {"username": "futpib", "commitsCount": 5}, {"username": "j-f1", "commitsCount": 5}, {"username": "ljqx", "commitsCount": 5}, {"username": "millerized", "commitsCount": 5}, {"username": "tizmagik", "commitsCount": 5}, {"username": "yp", "commitsCount": 5}, {"username": "bmish", "commitsCount": 4}, {"username": "danny-andrews", "commitsCount": 4}, {"username": "kevin940726", "commitsCount": 4}, {"username": "mplewis", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "zloirock", "commitsCount": 4}, {"username": "1pete", "commitsCount": 3}, {"username": "bradzacher", "commitsCount": 3}, {"username": "gajus", "commitsCount": 3}, {"username": "lencioni", "commitsCount": 3}, {"username": "lo1tuma", "commitsCount": 3}, {"username": "lukeapage", "commitsCount": 3}, {"username": "preco21", "commitsCount": 3}, {"username": "schmod", "commitsCount": 3}, {"username": "scottnonnenberg", "commitsCount": 3}, {"username": "silvenon", "commitsCount": 3}, {"username": "spencerhakim", "commitsCount": 3}, {"username": "swernerx", "commitsCount": 3}, {"username": "syymza", "commitsCount": 3}, {"username": "timkraut", "commitsCount": 3}, {"username": "AamuLumi", "commitsCount": 2}, {"username": "AdamSelene", "commitsCount": 2}, {"username": "Kiwka", "commitsCount": 2}, {"username": "Mairu", "commitsCount": 2}, {"username": "Satyam", "commitsCount": 2}, {"username": "adjerbetian", "commitsCount": 2}, {"username": "arcanis", "commitsCount": 2}, {"username": "beatrizrezener", "commitsCount": 2}, {"username": "brendo", "commitsCount": 2}, {"username": "briandipalma", "commitsCount": 2}, {"username": "chrislloyd", "commitsCount": 2}, {"username": "daltones", "commitsCount": 2}, {"username": "duncanbeevers", "commitsCount": 2}, {"username": "echenley", "commitsCount": 2}, {"username": "eventualbuddha", "commitsCount": 2}, {"username": "giodamelio", "commitsCount": 2}, {"username": "gmathieu", "commitsCount": 2}, {"username": "isiahmeadows", "commitsCount": 2}, {"username": "jameslnewell", "commitsCount": 2}, {"username": "jeffshaver", "commitsCount": 2}, {"username": "joaovieira", "commitsCount": 2}, {"username": "jquense", "commitsCount": 2}, {"username": "julien1619", "commitsCount": 2}, {"username": "justinanastos", "commitsCount": 2}, {"username": "kamalbennani", "commitsCount": 2}, {"username": "kirill-konshin", "commitsCount": 2}, {"username": "kmui2", "commitsCount": 2}, {"username": "laysent", "commitsCount": 2}, {"username": "manovotny", "commitsCount": 2}, {"username": "nevir", "commitsCount": 2}, {"username": "nosnickid", "commitsCount": 2}, {"username": "ntdb", "commitsCount": 2}, {"username": "patrick-steele-idem", "commitsCount": 2}, {"username": "pcorpet", "commitsCount": 2}, {"username": "saschanaz", "commitsCount": 2}, {"username": "sharmilajesupaul", "commitsCount": 2}, {"username": "skozin", "commitsCount": 2}, {"username": "sonicdoe", "commitsCount": 2}, {"username": "spalger", "commitsCount": 2}, {"username": "sveyret", "commitsCount": 2}, {"username": "tihonove", "commitsCount": 2}, {"username": "toshafed", "commitsCount": 2}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 2}, {"username": "xjamundx", "commitsCount": 2}, {"username": "AndrewLeedham", "commitsCount": 1}, {"username": "Maxim-Mazurok", "commitsCount": 1}, {"username": "MikeyBeLike", "commitsCount": 1}, {"username": "adamborowski", "commitsCount": 1}, {"username": "barbogast", "commitsCount": 1}, {"username": "be5invis", "commitsCount": 1}, {"username": "fernandopasik", "commitsCount": 1}, {"username": "malykhinvi", "commitsCount": 1}, {"username": "nicolashenry", "commitsCount": 1}, {"username": "noelebrun", "commitsCount": 1}, {"username": "taye", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 10}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 39}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 68}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 114}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 190}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 19447, "testsSize": 428856, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "service": "https://api.travis-ci.org/benmosher/eslint-plugin-import.svg?branch=master", "shields": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/travis/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/benmosher/eslint-plugin-import/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.svg", "content": "https://img.shields.io/coveralls/benmosher/eslint-plugin-import/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/3mw2fifalmjlqf56/branch/master", "shields": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/3mw2fifalmjlqf56/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dt/eslint-plugin-import.svg?maxAge=2592000", "shields": "https://img.shields.io/npm/dt/eslint-plugin-import.svg", "content": "https://img.shields.io/npm/dt/eslint-plugin-import.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dt"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"contains-path": {"required": "^0.1.0", "stable": "1.0.0", "latest": "1.0.0"}, "read-pkg-up": {"required": "^2.0.0", "stable": "7.0.1", "latest": "7.0.1"}, "doctrine": {"required": "1.5.0", "stable": "3.0.0", "latest": "3.0.0"}, "debug": {"required": "^2.6.9", "stable": "4.1.1", "latest": "4.2.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9095, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 3674, "downloadsCount": 30807843, "downloadsAcceleration": 96967.07402968034, "dependentsCount": 7670}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.7829639595055572, "detail": {"quality": 0.9268120363639036, "popularity": 0.7759629007515797, "maintenance": 0.6666666666666666}}}}, {"react-dom": {"analyzedAt": "2020-06-19T18:12:45.351Z", "collected": {"metadata": {"name": "react-dom", "scope": "unscoped", "version": "16.13.1", "description": "React package for working with the DOM.", "keywords": ["react"], "date": "2020-03-19T19:53:23.004Z", "publisher": {"username": "acdlite", "email": "npm@andrewclark.io"}, "maintainers": [{"username": "acdlite", "email": "npm@andrewclark.io"}, {"username": "brianvaughn", "email": "briandavidvaughn@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "gaearon", "email": "dan.abramov@gmail.com"}, {"username": "lunaruan", "email": "lunaris.ruan@gmail.com"}, {"username": "sebmarkbage", "email": "sebastian@calyptus.eu"}, {"username": "sophiebits", "email": "npm@sophiebits.com"}, {"username": "trueadm", "email": "dg@domgan.com"}, {"username": "zpao", "email": "paul@oshannessy.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/react.git", "directory": "packages/react-dom"}, "links": {"npm": "https://www.npmjs.com/package/react-dom", "homepage": "https://reactjs.org/", "repository": "https://github.com/facebook/react", "bugs": "https://github.com/facebook/react/issues"}, "license": "MIT", "dependencies": {"loose-envify": "^1.1.0", "object-assign": "^4.1.1", "prop-types": "^15.6.2", "scheduler": "^0.19.1"}, "peerDependencies": {"react": "^16.13.1"}, "releases": [{"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 0}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 5}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 25}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 64}, {"from": "2018-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 125}], "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1340722}, {"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 7140428}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 30998379}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 94831472}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 168640698}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 303312991}], "dependentsCount": 28246, "starsCount": 214}, "github": {"homepage": "https://reactjs.org", "starsCount": 150746, "forksCount": 29399, "subscribersCount": 6668, "issues": {"count": 18948, "openCount": 642, "distribution": {"3600": 3832, "10800": 1831, "32400": 1872, "97200": 2348, "291600": 1810, "874800": 1675, "2624400": 1369, "7873200": 1219, "23619600": 1437, "70858800": 1197, "212576400": 358}, "isDisabled": false}, "contributors": [{"username": "gaearon", "commitsCount": 1382}, {"username": "bvaughn", "commitsCount": 1216}, {"username": "sophiebits", "commitsCount": 874}, {"username": "zpao", "commitsCount": 821}, {"username": "sebmarkbage", "commitsCount": 700}, {"username": "acdlite", "commitsCount": 692}, {"username": "trueadm", "commitsCount": 392}, {"username": "petehunt", "commitsCount": 205}, {"username": "chenglou", "commitsCount": 152}, {"username": "vjeux", "commitsCount": 140}, {"username": "jimfb", "commitsCount": 116}, {"username": "jeffmo", "commitsCount": 111}, {"username": "subtleGradient", "commitsCount": 110}, {"username": "nhunzaker", "commitsCount": 94}, {"username": "necolas", "commitsCount": 92}, {"username": "benjamn", "commitsCount": 89}, {"username": "yungsters", "commitsCount": 82}, {"username": "syranide", "commitsCount": 69}, {"username": "flarnie", "commitsCount": 67}, {"username": "koba04", "commitsCount": 63}, {"username": "aweary", "commitsCount": 61}, {"username": "cpojer", "commitsCount": 55}, {"username": "marocchino", "commitsCount": 45}, {"username": "kohei-takata", "commitsCount": 39}, {"username": "TheSavior", "commitsCount": 30}, {"username": "chicoxyzzy", "commitsCount": 29}, {"username": "lunaruan", "commitsCount": 28}, {"username": "keyz", "commitsCount": 26}, {"username": "NE-SmallTown", "commitsCount": 22}, {"username": "joshduck", "commitsCount": 21}, {"username": "mcsheffrey", "commitsCount": 21}, {"username": "Daniel15", "commitsCount": 18}, {"username": "aickin", "commitsCount": 18}, {"username": "jquense", "commitsCount": 18}, {"username": "SimenB", "commitsCount": 17}, {"username": "hellendag", "commitsCount": 17}, {"username": "iamdustan", "commitsCount": 17}, {"username": "philipp-spiess", "commitsCount": 17}, {"username": "threepointone", "commitsCount": 16}, {"username": "Simek", "commitsCount": 15}, {"username": "fabiomcosta", "commitsCount": 15}, {"username": "raphamorim", "commitsCount": 15}, {"username": "sompylasar", "commitsCount": 15}, {"username": "arkist", "commitsCount": 14}, {"username": "bgw", "commitsCount": 14}, {"username": "cody", "commitsCount": 14}, {"username": "iamchenxin", "commitsCount": 13}, {"username": "tomocchino", "commitsCount": 13}, {"username": "bl00mber", "commitsCount": 12}, {"username": "mroch", "commitsCount": 12}, {"username": "ivanzotov", "commitsCount": 11}, {"username": "DarkScorpion", "commitsCount": 10}, {"username": "eps1lon", "commitsCount": 10}, {"username": "fisherwebdev", "commitsCount": 10}, {"username": "kmeht", "commitsCount": 10}, {"username": "lucasecdb", "commitsCount": 10}, {"username": "rickhanlonii", "commitsCount": 10}, {"username": "yangshun", "commitsCount": 10}, {"username": "AnSavvides", "commitsCount": 9}, {"username": "Andarist", "commitsCount": 9}, {"username": "RReverser", "commitsCount": 9}, {"username": "andreypopp", "commitsCount": 9}, {"username": "clemmy", "commitsCount": 9}, {"username": "fxxkscript", "commitsCount": 9}, {"username": "hristo-kanchev", "commitsCount": 9}, {"username": "jaredly", "commitsCount": 9}, {"username": "joecritch", "commitsCount": 9}, {"username": "raunofreiberg", "commitsCount": 9}, {"username": "rickbeerendonk", "commitsCount": 9}, {"username": "yiminghe", "commitsCount": 9}, {"username": "SanderSpies", "commitsCount": 8}, {"username": "bhamodi", "commitsCount": 8}, {"username": "camsong", "commitsCount": 8}, {"username": "dittos", "commitsCount": 8}, {"username": "elas7", "commitsCount": 8}, {"username": "hzoo", "commitsCount": 8}, {"username": "jddxf", "commitsCount": 8}, {"username": "jgebhardt", "commitsCount": 8}, {"username": "kassens", "commitsCount": 8}, {"username": "motiz88", "commitsCount": 8}, {"username": "zertosh", "commitsCount": 8}, {"username": "RaitoBezarius", "commitsCount": 7}, {"username": "alexeyraspopov", "commitsCount": 7}, {"username": "andrewdavey", "commitsCount": 7}, {"username": "hramos", "commitsCount": 7}, {"username": "ianobermiller", "commitsCount": 7}, {"username": "Jessidhia", "commitsCount": 6}, {"username": "Pouja", "commitsCount": 6}, {"username": "aaronabramov", "commitsCount": 6}, {"username": "alexmckenley", "commitsCount": 6}, {"username": "awwright", "commitsCount": 6}, {"username": "brigand", "commitsCount": 6}, {"username": "bspaulding", "commitsCount": 6}, {"username": "jontewks", "commitsCount": 6}, {"username": "lyip1992", "commitsCount": 6}, {"username": "makky3939", "commitsCount": 6}, {"username": "mmarkelov", "commitsCount": 6}, {"username": "mxstbr", "commitsCount": 6}, {"username": "mzabriskie", "commitsCount": 6}, {"username": "dependabot[bot]", "commitsCount": 1}], "commits": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 5}, {"from": "2020-05-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 42}, {"from": "2020-03-21T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 336}, {"from": "2019-12-22T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 626}, {"from": "2019-06-20T00:00:00.000Z", "to": "2020-06-19T00:00:00.000Z", "count": 1322}], "statuses": [{"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_persistent", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_flow", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod_www", "state": "pending"}, {"context": "ci/circleci: yarn_lint", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_build", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_www", "state": "pending"}, {"context": "ci/circleci: RELEASE_CHANNEL_stable_yarn_test_prod_www_variant", "state": "pending"}, {"context": "ci/circleci: setup", "state": "success"}, {"context": "ci/circleci: yarn_test", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod_www", "state": "pending"}, {"context": "ci/circleci: yarn_test_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_test_www", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod", "state": "pending"}, {"context": "ci/circleci: yarn_test_prod_www_variant", "state": "pending"}, {"context": "ci/circleci: yarn_build", "state": "pending"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 1776390, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.86}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 0.5137222222222222, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 187127, "downloadsCount": 31610490.666666668, "downloadsAcceleration": 77045.76872146121, "dependentsCount": 28246}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4280582849715589}}, "score": {"final": 0.9284467357237989, "detail": {"quality": 0.8744502388763594, "popularity": 0.9291285880987417, "maintenance": 0.9740475949323755}}}}, {"babel-cli": {"analyzedAt": "2020-06-23T02:42:54.834Z", "collected": {"metadata": {"name": "babel-cli", "scope": "unscoped", "version": "6.26.0", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2017-08-16T15:54:25.041Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-cli", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-core": "^6.26.0", "babel-polyfill": "^6.26.0", "babel-register": "^6.26.0", "babel-runtime": "^6.26.0", "commander": "^2.11.0", "convert-source-map": "^1.5.0", "fs-readdir-recursive": "^1.0.0", "glob": "^7.1.2", "lodash": "^4.17.4", "output-file-sync": "^1.1.2", "path-is-absolute": "^1.0.1", "slash": "^1.0.0", "source-map": "^0.5.6", "v8flags": "^2.1.1", "chokidar": "^1.6.1"}, "devDependencies": {"babel-helper-fixtures": "^6.26.0"}, "optionalDependencies": {"chokidar": "^1.6.1"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-cli\n\n> Babel command line.\n \nIn addition, various entry point scripts live in the top-level package at `babel-cli/bin`.\n\nThere are some shell-executable utility scripts, `babel-external-helpers.js` and `babel-node.js`, and the main Babel cli script, `babel.js`.\n\n## Install\n\n```sh\nnpm install --save-dev babel-cli\n```\n\n## Usage \n\n```sh\nbabel script.js\n```\n\nFor more in depth documentation see: http://babeljs.io/docs/usage/cli/"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 440504}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 2093216}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 6630270}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 13043145}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 29173234}], "dependentsCount": 3044, "starsCount": 92}, "github": {"homepage": "https://babel.dev", "starsCount": 36859, "forksCount": 4333, "subscribersCount": 867, "issues": {"count": 11653, "openCount": 794, "distribution": {"3600": 2464, "10800": 919, "32400": 1071, "97200": 1242, "291600": 1057, "874800": 1005, "2624400": 851, "7873200": 832, "23619600": 849, "70858800": 1088, "212576400": 275}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 481}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 199}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 3}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 66}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 149}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 395}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 798}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 8026, "testsSize": 12368687, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^1.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "output-file-sync": {"required": "^1.1.2", "stable": "2.0.1", "latest": "2.0.1"}, "path-is-absolute": {"required": "^1.0.1", "stable": "2.0.0", "latest": "2.0.0"}, "v8flags": {"required": "^2.1.1", "stable": "3.2.0", "latest": "3.2.0"}, "source-map": {"required": "^0.5.6", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "chokidar": {"required": "^1.6.1", "stable": "3.4.0", "latest": "3.4.0"}, "commander": {"required": "^2.11.0", "stable": "5.1.0", "latest": "6.0.0-0"}}}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 42250, "downloadsCount": 2210090, "downloadsAcceleration": -4404.38841324201, "dependentsCount": 3044}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2375836089673662}}, "score": {"final": 0.6883625671035501, "detail": {"quality": 0.9252009260476962, "popularity": 0.6052028595223644, "maintenance": 0.5685179670183249}}}}, {"rimraf": {"analyzedAt": "2020-06-27T01:49:53.219Z", "collected": {"metadata": {"name": "rimraf", "scope": "unscoped", "version": "3.0.2", "description": "A deep deletion module for node (like `rm -rf`)", "date": "2020-02-09T06:18:37.504Z", "author": {"name": "Isaac Z. Schlueter", "email": "i@izs.me", "url": "http://blog.izs.me/", "username": "isaacs"}, "publisher": {"username": "isaacs", "email": "i@izs.me"}, "maintainers": [{"username": "isaacs", "email": "i@izs.me"}], "repository": {"type": "git", "url": "git://github.com/isaacs/rimraf.git"}, "links": {"npm": "https://www.npmjs.com/package/rimraf", "homepage": "https://github.com/isaacs/rimraf#readme", "repository": "https://github.com/isaacs/rimraf", "bugs": "https://github.com/isaacs/rimraf/issues"}, "license": "ISC", "dependencies": {"glob": "^7.1.3"}, "devDependencies": {"mkdirp": "^0.5.1", "tap": "^12.1.1"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 7}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![Build Status](https://travis-ci.org/isaacs/rimraf.svg?branch=master)](https://travis-ci.org/isaacs/rimraf) [![Dependency Status](https://david-dm.org/isaacs/rimraf.svg)](https://david-dm.org/isaacs/rimraf) [![devDependency Status](https://david-dm.org/isaacs/rimraf/dev-status.svg)](https://david-dm.org/isaacs/rimraf#info=devDependencies)\n\nThe [UNIX command](http://en.wikipedia.org/wiki/Rm_(Unix)) `rm -rf` for node.\n\nInstall with `npm install rimraf`, or just drop rimraf.js somewhere.\n\n## API\n\n`rimraf(f, [opts], callback)`\n\nThe first parameter will be interpreted as a globbing pattern for files. If you\nwant to disable globbing you can do so with `opts.disableGlob` (defaults to\n`false`). This might be handy, for instance, if you have filenames that contain\nglobbing wildcard characters.\n\nThe callback will be called with an error if there is one.  Certain\nerrors are handled for you:\n\n* Windows: `EBUSY` and `ENOTEMPTY` - rimraf will back off a maximum of\n  `opts.maxBusyTries` times before giving up, adding 100ms of wait\n  between each attempt.  The default `maxBusyTries` is 3.\n* `ENOENT` - If the file doesn't exist, rimraf will return\n  successfully, since your desired outcome is already the case.\n* `EMFILE` - Since `readdir` requires opening a file descriptor, it's\n  possible to hit `EMFILE` if too many file descriptors are in use.\n  In the sync case, there's nothing to be done for this.  But in the\n  async case, rimraf will gradually back off with timeouts up to\n  `opts.emfileWait` ms, which defaults to 1000.\n\n## options\n\n* unlink, chmod, stat, lstat, rmdir, readdir,\n  unlinkSync, chmodSync, statSync, lstatSync, rmdirSync, readdirSync\n\n    In order to use a custom file system library, you can override\n    specific fs functions on the options object.\n\n    If any of these functions are present on the options object, then\n    the supplied function will be used instead of the default fs\n    method.\n\n    Sync methods are only relevant for `rimraf.sync()`, of course.\n\n    For example:\n\n    ```javascript\n    var myCustomFS = require('some-custom-fs')\n\n    rimraf('some-thing', myCustomFS, callback)\n    ```\n\n* maxBusyTries\n\n    If an `EBUSY`, `ENOTEMPTY`, or `EPERM` error code is encountered\n    on Windows systems, then rimraf will retry with a linear backoff\n    wait of 100ms longer on each try.  The default maxBusyTries is 3.\n\n    Only relevant for async usage.\n\n* emfileWait\n\n    If an `EMFILE` error is encountered, then rimraf will retry\n    repeatedly with a linear backoff of 1ms longer on each try, until\n    the timeout counter hits this max.  The default limit is 1000.\n\n    If you repeatedly encounter `EMFILE` errors, then consider using\n    [graceful-fs](http://npm.im/graceful-fs) in your program.\n\n    Only relevant for async usage.\n\n* glob\n\n    Set to `false` to disable [glob](http://npm.im/glob) pattern\n    matching.\n\n    Set to an object to pass options to the glob module.  The default\n    glob options are `{ nosort: true, silent: true }`.\n\n    Glob version 6 is used in this module.\n\n    Relevant for both sync and async usage.\n\n* disableGlob\n\n    Set to any non-falsey value to disable globbing entirely.\n    (Equivalent to setting `glob: false`.)\n\n## rimraf.sync\n\nIt can remove stuff synchronously, too.  But that's not so good.  Use\nthe async API.  It's better.\n\n## CLI\n\nIf installed with `npm install rimraf -g` it can be used as a global\ncommand `rimraf <path> [<path> ...]` which is useful for cross platform support.\n\n## mkdirp\n\nIf you need to create a directory recursively, check out\n[mkdirp](https://github.com/substack/node-mkdirp)."}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5604655}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 28643478}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 144048218}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 420646935}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 757698330}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1235905940}], "dependentsCount": 9486, "starsCount": 320}, "github": {"starsCount": 3816, "forksCount": 213, "subscribersCount": 43, "issues": {"count": 215, "openCount": 55, "distribution": {"3600": 17, "10800": 21, "32400": 11, "97200": 19, "291600": 18, "874800": 9, "2624400": 6, "7873200": 23, "23619600": 28, "70858800": 31, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "isaacs", "commitsCount": 154}, {"username": "PeterDaveHello", "commitsCount": 3}, {"username": "yosefd", "commitsCount": 3}, {"username": "ForbesLindesay", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "Tidyzq", "commitsCount": 1}, {"username": "aslushnikov", "commitsCount": 1}, {"username": "bcoe", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "cowboy", "commitsCount": 1}, {"username": "jkozera", "commitsCount": 1}, {"username": "josiasmontag", "commitsCount": 1}, {"username": "marr", "commitsCount": 1}, {"username": "mmalecki", "commitsCount": 1}, {"username": "paulmillr", "commitsCount": 1}, {"username": "quetzalcoatl", "commitsCount": 1}, {"username": "ritch", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "tomByrer", "commitsCount": 1}, {"username": "wvl", "commitsCount": 1}, {"username": "zerok", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 4}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 16}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 3600, "testsSize": 10271, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/isaacs/rimraf.svg?branch=master", "service": "https://api.travis-ci.org/isaacs/rimraf.svg?branch=master", "shields": "https://img.shields.io/travis/isaacs/rimraf/master.svg", "content": "https://img.shields.io/travis/isaacs/rimraf/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf.svg", "service": "https://david-dm.org/isaacs/rimraf.svg", "shields": "https://img.shields.io/david/isaacs/rimraf.svg", "content": "https://img.shields.io/david/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "service": "https://david-dm.org/isaacs/rimraf/dev-status.svg", "shields": "https://img.shields.io/david/dev/isaacs/rimraf.svg", "content": "https://img.shields.io/david/dev/isaacs/rimraf.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}], "coverage": 0.73}}, "evaluation": {"quality": {"carefulness": 0.8699999999999999, "tests": 0.9595, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4414, "downloadsCount": 140215645, "downloadsAcceleration": 559738.772716895, "dependentsCount": 9486}, "maintenance": {"releasesFrequency": 0.7642979452054794, "commitsFrequency": 0.39410958904109594, "openIssues": 0.9069767441860466, "issuesDistribution": 0}}, "score": {"final": 0.8203282022634395, "detail": {"quality": 0.9765198666982468, "popularity": 0.8485459598039049, "maintenance": 0.6582318752074253}}}}, {"babel-preset-es2015": {"analyzedAt": "2020-06-12T08:06:30.193Z", "collected": {"metadata": {"name": "babel-preset-es2015", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all es2015 plugins.", "date": "2017-04-07T15:19:43.605Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-es2015", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.24.1", "babel-plugin-transform-es2015-classes": "^6.24.1", "babel-plugin-transform-es2015-computed-properties": "^6.24.1", "babel-plugin-transform-es2015-destructuring": "^6.22.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.24.1", "babel-plugin-transform-es2015-for-of": "^6.22.0", "babel-plugin-transform-es2015-function-name": "^6.24.1", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.24.1", "babel-plugin-transform-es2015-modules-commonjs": "^6.24.1", "babel-plugin-transform-es2015-modules-systemjs": "^6.24.1", "babel-plugin-transform-es2015-modules-umd": "^6.24.1", "babel-plugin-transform-es2015-object-super": "^6.24.1", "babel-plugin-transform-es2015-parameters": "^6.24.1", "babel-plugin-transform-es2015-shorthand-properties": "^6.24.1", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.24.1", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.22.0", "babel-plugin-transform-es2015-unicode-regex": "^6.24.1", "babel-plugin-transform-regenerator": "^6.24.1"}, "devDependencies": {"babel-helper-transform-fixture-test-runner": "^6.24.1", "babel-helper-plugin-test-runner": "^6.24.1"}, "releases": [{"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 0}, {"from": "2018-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 1}], "deprecated": "\ud83d\ude4c  Thanks for using Babel: we recommend using babel-preset-env now: please read https://babeljs.io/env to update!", "hasTestScript": true, "readme": "# babel-preset-es2015\n\n> Babel preset for all es2015 plugins.\n\n## Install\n\n```sh\nnpm install --save-dev babel-preset-es2015\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"es2015\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets es2015\n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"es2015\"]\n});\n```\n\n## Options\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable \"spec\" transformations for any plugins in this preset that allow them."}, "npm": {"downloads": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 169343}, {"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 916623}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 4041305}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 12503299}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 24208530}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 51603138}], "dependentsCount": 5333, "starsCount": 84}, "github": {"homepage": "https://babel.dev", "starsCount": 36772, "forksCount": 4311, "subscribersCount": 867, "issues": {"count": 11632, "openCount": 793, "distribution": {"3600": 2464, "10800": 919, "32400": 1067, "97200": 1242, "291600": 1060, "874800": 1009, "2624400": 849, "7873200": 813, "23619600": 847, "70858800": 1091, "212576400": 271}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 479}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 194}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-05T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 6}, {"from": "2020-05-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 61}, {"from": "2020-03-14T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 208}, {"from": "2019-12-15T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 416}, {"from": "2019-06-13T00:00:00.000Z", "to": "2020-06-12T00:00:00.000Z", "count": 795}]}, "source": {"files": {"readmeSize": 8034, "testsSize": 12325222, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.7364999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42133, "downloadsCount": 4167766.3333333335, "downloadsAcceleration": -3388.730136986298, "dependentsCount": 5333}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.23995269539214686}}, "score": {"final": 0.6117168933539002, "detail": {"quality": 0.611940592934839, "popularity": 0.6530120239182591, "maintenance": 0.5702300202915939}}}}, {"@babel/core": {"analyzedAt": "2020-06-30T13:41:49.413Z", "collected": {"metadata": {"name": "@babel/core", "scope": "babel", "version": "7.10.4", "description": "Babel compiler core.", "keywords": ["6to5", "babel", "classes", "const", "es6", "harmony", "let", "modules", "transpile", "transpiler", "var", "babel-core", "compiler"], "date": "2020-06-30T13:13:27.496Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-core"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcore", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/code-frame": "^7.10.4", "@babel/generator": "^7.10.4", "@babel/helper-module-transforms": "^7.10.4", "@babel/helpers": "^7.10.4", "@babel/parser": "^7.10.4", "@babel/template": "^7.10.4", "@babel/traverse": "^7.10.4", "@babel/types": "^7.10.4", "convert-source-map": "^1.7.0", "debug": "^4.1.0", "gensync": "^1.0.0-beta.1", "json5": "^2.1.2", "lodash": "^4.17.13", "resolve": "^1.3.2", "semver": "^5.4.1", "source-map": "^0.5.0"}, "devDependencies": {"@babel/helper-transform-fixture-test-runner": "^7.10.4"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 5}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 11}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 23}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 50}], "readme": "# @babel/core\n\n> Babel compiler core.\n\nSee our website [@babel/core](https://babeljs.io/docs/en/next/babel-core.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20core%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/core\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/core --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3130276}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 17845177}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 71129326}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 211049227}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 386930752}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 626876553}], "dependentsCount": 8500, "starsCount": 3}, "github": {"homepage": "https://babel.dev", "starsCount": 36907, "forksCount": 4352, "subscribersCount": 865, "issues": {"count": 11675, "openCount": 796, "distribution": {"3600": 2467, "10800": 919, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1011, "2624400": 845, "7873200": 837, "23619600": 854, "70858800": 1089, "212576400": 276}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 482}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 201}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 36}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 145}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 385}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 414, "testsSize": 164345, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.4.1", "stable": "7.3.2", "latest": "7.3.2"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.75, "branding": 1}, "popularity": {"communityInterest": 42226, "downloadsCount": 70349742.33333333, "downloadsAcceleration": 271413.2014459665, "dependentsCount": 8500}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2370762220708152}}, "score": {"final": 0.9165289486221377, "detail": {"quality": 0.9482025266717101, "popularity": 0.9172004643125441, "maintenance": 0.8887086517463834}}}}, {"prettier": {"analyzedAt": "2020-06-07T08:21:12.524Z", "collected": {"metadata": {"name": "prettier", "scope": "unscoped", "version": "2.0.5", "description": "Prettier is an opinionated code formatter", "date": "2020-04-21T17:05:57.825Z", "author": {"name": "James Long"}, "publisher": {"username": "thorn0", "email": "georgii.dolzhykov@gmail.com"}, "maintainers": [{"username": "azz", "email": "derflatulator@gmail.com"}, {"username": "duailibe", "email": "lucasds@gmail.com"}, {"username": "ikatyang", "email": "ikatyang@gmail.com"}, {"username": "jlongster", "email": "longster@gmail.com"}, {"username": "suchipi", "email": "me@suchipi.com"}, {"username": "vjeux", "email": "vjeuxx@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/prettier/prettier.git"}, "links": {"npm": "https://www.npmjs.com/package/prettier", "homepage": "https://prettier.io", "repository": "https://github.com/prettier/prettier", "bugs": "https://github.com/prettier/prettier/issues"}, "license": "MIT", "dependencies": {"@angular/compiler": "9.1.9", "@babel/code-frame": "7.10.1", "@babel/parser": "7.10.2", "@glimmer/syntax": "0.53.0", "@iarna/toml": "2.2.5", "@typescript-eslint/typescript-estree": "3.1.0", "angular-estree-parser": "2.0.3", "angular-html-parser": "1.7.0", "camelcase": "6.0.0", "chalk": "4.0.0", "ci-info": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "cjk-regex": "2.0.0", "cosmiconfig": "6.0.0", "dashify": "2.0.0", "diff": "4.0.2", "editorconfig": "0.15.3", "editorconfig-to-prettier": "0.1.1", "escape-string-regexp": "4.0.0", "esutils": "2.0.3", "fast-glob": "3.2.2", "find-parent-dir": "0.3.0", "find-project-root": "1.1.1", "flow-parser": "0.126.1", "get-stream": "5.1.0", "globby": "11.0.1", "graphql": "15.0.0", "html-element-attributes": "2.2.1", "html-styles": "1.0.0", "html-tag-names": "1.1.5", "ignore": "4.0.6", "jest-docblock": "26.0.0", "json-stable-stringify": "1.0.1", "leven": "3.1.0", "lines-and-columns": "1.1.6", "linguist-languages": "7.9.0", "lodash": "4.17.15", "mem": "6.1.0", "minimatch": "3.0.4", "minimist": "1.2.5", "n-readlines": "1.0.0", "outdent": "0.7.1", "parse-srcset": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "please-upgrade-node": "3.2.0", "postcss-less": "3.1.4", "postcss-media-query-parser": "0.2.3", "postcss-scss": "2.1.1", "postcss-selector-parser": "2.2.3", "postcss-values-parser": "2.0.1", "regexp-util": "1.2.2", "remark-math": "1.0.6", "remark-parse": "5.0.0", "resolve": "1.17.0", "semver": "7.3.2", "string-width": "4.2.0", "tslib": "1.13.0", "typescript": "3.9.5", "unicode-regex": "3.0.0", "unified": "9.0.0", "vnopts": "1.0.2", "yaml-unist-parser": "1.2.1"}, "devDependencies": {"@babel/core": "7.10.2", "@babel/preset-env": "7.10.2", "@rollup/plugin-alias": "3.1.0", "@rollup/plugin-babel": "5.0.2", "@rollup/plugin-commonjs": "12.0.0", "@rollup/plugin-json": "4.0.3", "@rollup/plugin-node-resolve": "8.0.0", "@rollup/plugin-replace": "2.3.2", "babel-loader": "8.1.0", "benchmark": "2.1.4", "builtin-modules": "3.1.0", "codecov": "3.7.0", "cross-env": "7.0.2", "cspell": "4.0.63", "eslint": "7.1.0", "eslint-config-prettier": "6.11.0", "eslint-formatter-friendly": "7.0.0", "eslint-plugin-import": "2.20.2", "eslint-plugin-prettier": "3.1.3", "eslint-plugin-react": "7.20.0", "eslint-plugin-unicorn": "20.1.0", "execa": "4.0.2", "jest": "26.0.1", "jest-snapshot-serializer-ansi": "1.0.0", "jest-snapshot-serializer-raw": "1.1.0", "jest-watch-typeahead": "0.6.0", "prettier": "2.0.5", "rimraf": "3.0.2", "rollup": "2.13.1", "rollup-plugin-node-globals": "1.4.0", "rollup-plugin-terser": "6.1.0", "shelljs": "0.8.4", "snapshot-diff": "0.8.0", "strip-ansi": "6.0.0", "synchronous-promise": "2.0.13", "tempy": "0.5.0", "terser-webpack-plugin": "3.0.3", "webpack": "4.43.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 30}], "hasSelectiveFiles": true, "readme": "![Prettier Banner](https://raw.githubusercontent.com/prettier/prettier-logo/master/images/prettier-banner-light.png)\n\n<h2 align=\"center\">Opinionated Code Formatter</h2>\n\n<p align=\"center\">\n  <em>\n    JavaScript\n    \u00b7 TypeScript\n    \u00b7 Flow\n    \u00b7 JSX\n    \u00b7 JSON\n  </em>\n  <br />\n  <em>\n    CSS\n    \u00b7 SCSS\n    \u00b7 Less\n  </em>\n  <br />\n  <em>\n    HTML\n    \u00b7 Vue\n    \u00b7 Angular\n  </em>\n  <br />\n  <em>\n    GraphQL\n    \u00b7 Markdown\n    \u00b7 YAML\n  </em>\n  <br />\n  <em>\n    <a href=\"https://prettier.io/docs/en/plugins.html\">\n      Your favorite language?\n    </a>\n  </em>\n</p>\n\n<p align=\"center\">\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3AProd+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Prod?label=Prod&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ADev+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Dev?label=Dev&style=flat-square\"></a>\n  <a href=\"https://github.com/prettier/prettier/actions?query=workflow%3ALint+branch%3Amaster\">\n    <img alt=\"Github Actions Build Status\" src=\"https://img.shields.io/github/workflow/status/prettier/prettier/Lint?label=Lint&style=flat-square\"></a>\n  <a href=\"https://codecov.io/gh/prettier/prettier\">\n    <img alt=\"Codecov Coverage Status\" src=\"https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/acdlite/status/974390255393505280\">\n    <img alt=\"Blazing Fast\" src=\"https://img.shields.io/badge/speed-blazing%20%F0%9F%94%A5-brightgreen.svg?style=flat-square\"></a>\n  <br/>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"npm version\" src=\"https://img.shields.io/npm/v/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://www.npmjs.com/package/prettier\">\n    <img alt=\"weekly downloads from npm\" src=\"https://img.shields.io/npm/dw/prettier.svg?style=flat-square\"></a>\n  <a href=\"#badge\">\n    <img alt=\"code style: prettier\" src=\"https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square\"></a>\n  <a href=\"https://gitter.im/jlongster/prettier\">\n    <img alt=\"Chat on Gitter\" src=\"https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square\"></a>\n  <a href=\"https://twitter.com/PrettierCode\">\n    <img alt=\"Follow Prettier on Twitter\" src=\"https://img.shields.io/twitter/follow/prettiercode.svg?label=follow+prettier&style=flat-square\"></a>\n</p>\n\n## Intro\n\nPrettier is an opinionated code formatter. It enforces a consistent style by parsing your code and re-printing it with its own rules that take the maximum line length into account, wrapping code when necessary.\n\n### Input\n\n<!-- prettier-ignore -->\n```js\nfoo(reallyLongArg(), omgSoManyParameters(), IShouldRefactorThis(), isThereSeriouslyAnotherOne());\n```\n\n### Output\n\n```js\nfoo(\n  reallyLongArg(),\n  omgSoManyParameters(),\n  IShouldRefactorThis(),\n  isThereSeriouslyAnotherOne()\n);\n```\n\nPrettier can be run [in your editor](http://prettier.io/docs/en/editors.html) on-save, in a [pre-commit hook](https://prettier.io/docs/en/precommit.html), or in [CI environments](https://prettier.io/docs/en/cli.html#list-different) to ensure your codebase has a consistent style without devs ever having to post a nit-picky comment on a code review ever again!\n\n---\n\n**[Documentation](https://prettier.io/docs/en/)**\n\n<!-- prettier-ignore -->\n[Install](https://prettier.io/docs/en/install.html) \u00b7\n[Options](https://prettier.io/docs/en/options.html) \u00b7\n[CLI](https://prettier.io/docs/en/cli.html) \u00b7\n[API](https://prettier.io/docs/en/api.html)\n\n**[Playground](https://prettier.io/playground/)**\n\n---\n\n## Badge\n\nShow the world you're using _Prettier_ \u2192 [![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n\n```md\n[![code style: prettier](https://img.shields.io/badge/code_style-prettier-ff69b4.svg?style=flat-square)](https://github.com/prettier/prettier)\n```\n\n## Contributing\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md)."}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 450346}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8908846}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 37274581}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 108918013}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 187419957}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 325686336}], "dependentsCount": 4178, "starsCount": 62}, "github": {"homepage": "https://prettier.io", "starsCount": 36715, "forksCount": 2359, "subscribersCount": 415, "issues": {"count": 8413, "openCount": 700, "distribution": {"3600": 1643, "10800": 928, "32400": 902, "97200": 1153, "291600": 910, "874800": 711, "2624400": 633, "7873200": 485, "23619600": 380, "70858800": 498, "212576400": 170}, "isDisabled": false}, "contributors": [{"username": "vjeux", "commitsCount": 570}, {"username": "ikatyang", "commitsCount": 430}, {"username": "fisker", "commitsCount": 352}, {"username": "duailibe", "commitsCount": 284}, {"username": "azz", "commitsCount": 241}, {"username": "thorn0", "commitsCount": 150}, {"username": "lydell", "commitsCount": 146}, {"username": "jlongster", "commitsCount": 128}, {"username": "evilebottnawi", "commitsCount": 116}, {"username": "josephfrazier", "commitsCount": 92}, {"username": "existentialism", "commitsCount": 80}, {"username": "sosukesuzuki", "commitsCount": 63}, {"username": "j-f1", "commitsCount": 46}, {"username": "lipis", "commitsCount": 46}, {"username": "suchipi", "commitsCount": 35}, {"username": "yamafaktory", "commitsCount": 34}, {"username": "despairblue", "commitsCount": 27}, {"username": "bakkot", "commitsCount": 24}, {"username": "JamesHenry", "commitsCount": 22}, {"username": "rattrayalex", "commitsCount": 22}, {"username": "karl", "commitsCount": 19}, {"username": "dcyriller", "commitsCount": 17}, {"username": "kachkaev", "commitsCount": 17}, {"username": "SimenB", "commitsCount": 14}, {"username": "mitermayer", "commitsCount": 12}, {"username": "bnjmnt4n", "commitsCount": 11}, {"username": "stubailo", "commitsCount": 9}, {"username": "okonet", "commitsCount": 8}, {"username": "rogeliog", "commitsCount": 8}, {"username": "JounQin", "commitsCount": 7}, {"username": "Shinigami92", "commitsCount": 7}, {"username": "ad1992", "commitsCount": 7}, {"username": "hzoo", "commitsCount": 7}, {"username": "sasurau4", "commitsCount": 7}, {"username": "knowbody", "commitsCount": 6}, {"username": "tchak", "commitsCount": 6}, {"username": "thymikee", "commitsCount": 6}, {"username": "Cryrivers", "commitsCount": 5}, {"username": "GavinJoyce", "commitsCount": 5}, {"username": "asottile", "commitsCount": 5}, {"username": "dependabot[bot]", "commitsCount": 5}, {"username": "jackyho112", "commitsCount": 5}, {"username": "karlhorky", "commitsCount": 5}, {"username": "umidbekkarimov", "commitsCount": 5}, {"username": "yangsu", "commitsCount": 5}, {"username": "czosel", "commitsCount": 4}, {"username": "jridgewell", "commitsCount": 4}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "prigara", "commitsCount": 4}, {"username": "rcoedo", "commitsCount": 4}, {"username": "sompylasar", "commitsCount": 4}, {"username": "taion", "commitsCount": 4}, {"username": "voithos", "commitsCount": 4}, {"username": "warrenseine", "commitsCount": 4}, {"username": "BPScott", "commitsCount": 3}, {"username": "CiGit", "commitsCount": 3}, {"username": "Haroenv", "commitsCount": 3}, {"username": "amasad", "commitsCount": 3}, {"username": "bd82", "commitsCount": 3}, {"username": "brainkim", "commitsCount": 3}, {"username": "cola119", "commitsCount": 3}, {"username": "coliff", "commitsCount": 3}, {"username": "danez", "commitsCount": 3}, {"username": "danharper", "commitsCount": 3}, {"username": "darahak", "commitsCount": 3}, {"username": "ericsakmar", "commitsCount": 3}, {"username": "johann-sonntagbauer", "commitsCount": 3}, {"username": "mattleff", "commitsCount": 3}, {"username": "michaelficarra", "commitsCount": 3}, {"username": "ntotten", "commitsCount": 3}, {"username": "onurtemizkan", "commitsCount": 3}, {"username": "rhengles", "commitsCount": 3}, {"username": "shisama", "commitsCount": 3}, {"username": "tgriesser", "commitsCount": 3}, {"username": "adek05", "commitsCount": 2}, {"username": "aquibm", "commitsCount": 2}, {"username": "beausmith", "commitsCount": 2}, {"username": "chadian", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "dangmai", "commitsCount": 2}, {"username": "fvictorio", "commitsCount": 2}, {"username": "g-harel", "commitsCount": 2}, {"username": "gkz", "commitsCount": 2}, {"username": "gnapse", "commitsCount": 2}, {"username": "jablko", "commitsCount": 2}, {"username": "jaideng123", "commitsCount": 2}, {"username": "jamesgeorge007", "commitsCount": 2}, {"username": "jbrown215", "commitsCount": 2}, {"username": "jsnajdr", "commitsCount": 2}, {"username": "kaicataldo", "commitsCount": 2}, {"username": "kddeisz", "commitsCount": 2}, {"username": "mahirshah", "commitsCount": 2}, {"username": "matthew-gerstman", "commitsCount": 2}, {"username": "nmussy", "commitsCount": 2}, {"username": "robert-j-webb", "commitsCount": 2}, {"username": "selvazhagan", "commitsCount": 2}, {"username": "sh7dm", "commitsCount": 2}, {"username": "wuweiweiwu", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 142}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 448}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 791}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1174}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 4159, "testsSize": 8528172, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/codecov/c/github/prettier/prettier.svg?style=flat-square", "service": "https://codecov.io/github/prettier/prettier/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/prettier/prettier.svg", "content": "https://img.shields.io/codecov/c/github/prettier/prettier.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/prettier.svg", "content": "https://img.shields.io/npm/v/prettier.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/prettier.svg?style=flat-square", "shields": "https://img.shields.io/npm/dw/prettier.svg", "content": "https://img.shields.io/npm/dw/prettier.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/gitter/room/jlongster/prettier.svg?style=flat-square", "service": "https://badges.gitter.im/jlongster/prettier.svg", "shields": "https://img.shields.io/gitter/room/jlongster/prettier.svg", "content": "https://img.shields.io/gitter/room/jlongster/prettier.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"parse-srcset": {"required": "github:ikatyang/parse-srcset#54eb9c1cb21db5c62b4d0e275d7249516df6f0ee", "stable": "1.0.2", "latest": "1.0.2"}, "ci-info": {"required": "github:watson/ci-info#f43f6a1cefff47fb361c88cf4b943fdbcaafe540", "stable": "2.0.0", "latest": "2.0.0"}, "tslib": {"required": "1.13.0", "stable": "2.0.0", "latest": "2.0.0"}, "remark-math": {"required": "1.0.6", "stable": "2.0.1", "latest": "2.0.1"}, "remark-parse": {"required": "5.0.0", "stable": "8.0.2", "latest": "8.0.2"}, "postcss-selector-parser": {"required": "2.2.3", "stable": "6.0.2", "latest": "3.1.2"}, "postcss-values-parser": {"required": "2.0.1", "stable": "3.2.1", "latest": "3.2.1"}, "ignore": {"required": "4.0.6", "stable": "5.1.8", "latest": "5.1.8"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6955, "health": 0.7333333333333334, "branding": 1}, "popularity": {"communityInterest": 39649, "downloadsCount": 36306004.333333336, "downloadsAcceleration": 124781.33841324205, "dependentsCount": 4178}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.46399702138277754}}, "score": {"final": 0.9271386440562006, "detail": {"quality": 0.9473681735749978, "popularity": 0.856090465652567, "maintenance": 0.9808472257294365}}}}, {"babel-preset-env": {"analyzedAt": "2020-06-10T15:15:14.576Z", "collected": {"metadata": {"name": "babel-preset-env", "scope": "unscoped", "version": "1.7.0", "description": "A Babel preset for each environment.", "date": "2018-05-10T14:31:21.930Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "existentialism", "email": "bng412@gmail.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel-preset-env.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel-preset-env", "bugs": "https://github.com/babel/babel-preset-env/issues"}, "license": "MIT", "dependencies": {"babel-plugin-check-es2015-constants": "^6.22.0", "babel-plugin-syntax-trailing-function-commas": "^6.22.0", "babel-plugin-transform-async-to-generator": "^6.22.0", "babel-plugin-transform-es2015-arrow-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoped-functions": "^6.22.0", "babel-plugin-transform-es2015-block-scoping": "^6.23.0", "babel-plugin-transform-es2015-classes": "^6.23.0", "babel-plugin-transform-es2015-computed-properties": "^6.22.0", "babel-plugin-transform-es2015-destructuring": "^6.23.0", "babel-plugin-transform-es2015-duplicate-keys": "^6.22.0", "babel-plugin-transform-es2015-for-of": "^6.23.0", "babel-plugin-transform-es2015-function-name": "^6.22.0", "babel-plugin-transform-es2015-literals": "^6.22.0", "babel-plugin-transform-es2015-modules-amd": "^6.22.0", "babel-plugin-transform-es2015-modules-commonjs": "^6.23.0", "babel-plugin-transform-es2015-modules-systemjs": "^6.23.0", "babel-plugin-transform-es2015-modules-umd": "^6.23.0", "babel-plugin-transform-es2015-object-super": "^6.22.0", "babel-plugin-transform-es2015-parameters": "^6.23.0", "babel-plugin-transform-es2015-shorthand-properties": "^6.22.0", "babel-plugin-transform-es2015-spread": "^6.22.0", "babel-plugin-transform-es2015-sticky-regex": "^6.22.0", "babel-plugin-transform-es2015-template-literals": "^6.22.0", "babel-plugin-transform-es2015-typeof-symbol": "^6.23.0", "babel-plugin-transform-es2015-unicode-regex": "^6.22.0", "babel-plugin-transform-exponentiation-operator": "^6.22.0", "babel-plugin-transform-regenerator": "^6.22.0", "browserslist": "^3.2.6", "invariant": "^2.2.2", "semver": "^5.3.0"}, "devDependencies": {"babel-cli": "^6.23.0", "babel-eslint": "^7.1.1", "babel-helper-fixtures": "^6.22.0", "babel-helper-plugin-test-runner": "^6.22.0", "babel-plugin-istanbul": "^3.1.2", "babel-preset-env": "^1.4.0", "babel-register": "^6.23.0", "chai": "^3.5.0", "codecov": "^1.0.1", "compat-table": "github:kangax/compat-table#957f1ff15972e8fb2892a172f985e9af27bf1c75", "eslint": "^3.17.1", "eslint-config-babel": "^6.0.0", "eslint-plugin-flowtype": "^2.29.1", "fs-extra": "~2.0.0", "lodash": "^4.17.4", "mocha": "^3.2.0", "nyc": "^10.1.2", "electron-to-chromium": "^1.3.11", "rimraf": "^2.6.1"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# Now that `babel-preset-env` has stabilized, it has been [moved into the main Babel mono-repo](https://github.com/babel/babel/tree/master/packages/babel-preset-env) and this repo has been archived.\n\nThe move makes it much easier to release and develop in sync with the rest of Babel!\n\nThis repo will be made read-only, as all of the issues/labels have been moved over as well. Please report any bugs and open pull requests over on the [main mono-repo](https://github.com/babel/babel).\n\n---\n\n# babel-preset-env [![npm](https://img.shields.io/npm/v/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![travis](https://img.shields.io/travis/babel/babel-preset-env/master.svg)](https://travis-ci.org/babel/babel-preset-env) [![npm-downloads](https://img.shields.io/npm/dm/babel-preset-env.svg)](https://www.npmjs.com/package/babel-preset-env) [![codecov](https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200)](https://codecov.io/github/babel/babel-preset-env)\n\n> A Babel preset that compiles [ES2015+](https://github.com/tc39/proposals/blob/master/finished-proposals.md) down to ES5 by automatically determining the Babel plugins and polyfills you need based on your targeted browser or runtime environments.\n\n```sh\nnpm install babel-preset-env --save-dev\n```\n\nWithout any configuration options, babel-preset-env behaves exactly the same as babel-preset-latest (or babel-preset-es2015, babel-preset-es2016, and babel-preset-es2017 together).\n\n> However, we don't recommend using `preset-env` this way because it doesn't take advantage of it's greater capabilities of targeting specific browsers.\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\nYou can also configure it to only include the polyfills and transforms needed for the browsers you support. Compiling only what's needed can make your bundles smaller and your life easier.\n\nThis example only includes the polyfills and code transforms needed for coverage of users > 0.25%, ignoring Internet Explorer 11 and Opera Mini.. We use [browserslist](https://github.com/ai/browserslist) to parse this information, so you can use [any valid query format supported by browserslist](https://github.com/ai/browserslist#queries).\n\n```js\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        // The % refers to the global coverage of users from browserslist\n        \"browsers\": [ \">0.25%\", \"not ie 11\", \"not op_mini all\"]\n      }\n    }]\n  ]\n}\n```\n\n> You can also target individual versions of browsers instead of using a query with `\"targets\": { \"chrome\": \"52\" }`.\n\nSimilarly, if you're targeting Node.js instead of the browser, you can configure babel-preset-env to only include the polyfills and transforms necessary for a particular version:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"6.10\"\n      }\n    }]\n  ]\n}\n```\n\nFor convenience, you can use `\"node\": \"current\"` to only include the necessary polyfills and transforms for the Node.js version that you use to run Babel:\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\nCheck out the many options (especially `useBuiltIns` to polyfill less)!\n\n- [How it Works](#how-it-works)\n- [Install](#install)\n- [Usage](#usage)\n- [Options](#options)\n- [Examples](#examples)\n- [Caveats](#caveats)\n- [Other Cool Projects](#other-cool-projects)\n\n## How it Works\n\n### Determine environment support for ECMAScript features\n\nUse external data such as [`compat-table`](https://github.com/kangax/compat-table) to determine browser support. (We should create PRs there when necessary)\n\n![](https://cloud.githubusercontent.com/assets/588473/19214029/58deebce-8d48-11e6-9004-ee3fbcb75d8b.png)\n\nWe can periodically run [build-data.js](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which generates [plugins.json](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json).\n\nRef: [#7](https://github.com/babel/babel-preset-env/issues/7)\n\n### Maintain a mapping between JavaScript features and Babel plugins\n\n> Currently located at [plugin-features.js](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js).\n\nThis should be straightforward to do in most cases. There might be cases where plugins should be split up more or certain plugins aren't standalone enough (or impossible to do).\n\n### Support all plugins in Babel that are considered `latest`\n\n> Default behavior without options is the same as `babel-preset-latest`.\n\nIt won't include `stage-x` plugins. env will support all plugins in what we consider the latest version of JavaScript (by matching what we do in [`babel-preset-latest`](http://babeljs.io/docs/plugins/preset-latest/)).\n\nRef: [#14](https://github.com/babel/babel-preset-env/issues/14)\n\n### Determine the lowest common denominator of plugins to be included in the preset\n\nIf you are targeting IE 8 and Chrome 55 it will include all plugins required by IE 8 since you would need to support both still.\n\n### Support a target option `\"node\": \"current\"` to compile for the currently running node version.\n\nFor example, if you are building on Node 6, arrow functions won't be converted, but they will if you build on Node 0.12.\n\n### Support a `browsers` option like autoprefixer\n\nUse [browserslist](https://github.com/ai/browserslist) to declare supported environments by performing queries like `> 1%, last 2 versions`.\n\nRef: [#19](https://github.com/babel/babel-preset-env/pull/19)\n\n## Install\n\nWith [npm](https://www.npmjs.com):\n\n```sh\nnpm install --save-dev babel-preset-env\n```\n\nOr [yarn](https://yarnpkg.com):\n\n```sh\nyarn add babel-preset-env --dev\n```\n\n## Usage\n\nThe default behavior without options runs all transforms (behaves the same as [babel-preset-latest](https://babeljs.io/docs/plugins/preset-latest/)).\n\n```json\n{\n  \"presets\": [\"env\"]\n}\n```\n\n## Options\n\nFor more information on setting options for a preset, refer to the [plugin/preset options](http://babeljs.io/docs/plugins/#plugin-preset-options) documentation.\n\n### `targets`\n\n`{ [string]: number | string }`, defaults to `{}`.\n\nTakes an object of environment versions to support.\n\nEach target environment takes a number or a string (we recommend using a string when specifying minor versions like `node: \"6.10\"`).\n\nExample environments: `chrome`, `opera`, `edge`, `firefox`, `safari`, `ie`, `ios`, `android`, `node`, `electron`.\n\nThe [data](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) for this is generated by running the [build-data script](https://github.com/babel/babel-preset-env/blob/master/scripts/build-data.js) which pulls in data from [compat-table](https://kangax.github.io/compat-table).\n\n### `targets.node`\n\n`number | string | \"current\" | true`\n\nIf you want to compile against the current node version, you can specify `\"node\": true` or `\"node\": \"current\"`, which would be the same as `\"node\": process.versions.node`.\n\n### `targets.browsers`\n\n`Array<string> | string`\n\nA query to select browsers (ex: last 2 versions, > 5%) using [browserslist](https://github.com/ai/browserslist).\n\nNote, browsers' results are overridden by explicit items from `targets`.\n\n### `targets.uglify`\n\n`true`\n\nWhen using `uglify-js` to minify your code, you may run into syntax errors when targeting later browsers since `uglify-js` does not support any ES2015+ syntax.\n\nTo prevent these errors - set the `uglify` option to `true`, which enables all transformation plugins and as a result, your code is fully compiled to ES5. However, the `useBuiltIns` option will still work as before and only include the polyfills that your target(s) need.\n\n> Uglify has support for ES2015 syntax via [uglify-es](https://github.com/mishoo/UglifyJS2/tree/harmony). If you are using syntax unsupported by `uglify-es`, we recommend using [babel-minify](https://github.com/babel/minify).\n\n> Note: This option is deprecated in 2.x and replaced with a [`forceAllTransforms` option](https://github.com/babel/babel-preset-env/pull/264).\n\n### `spec`\n\n`boolean`, defaults to `false`.\n\nEnable more spec compliant, but potentially slower, transformations for any plugins in this preset that support them.\n\n### `loose`\n\n`boolean`, defaults to `false`.\n\nEnable \"loose\" transformations for any plugins in this preset that allow them.\n\n### `modules`\n\n`\"amd\" | \"umd\" | \"systemjs\" | \"commonjs\" | false`, defaults to `\"commonjs\"`.\n\nEnable transformation of ES6 module syntax to another module type.\n\nSetting this to `false` will not transform modules.\n\n### `debug`\n\n`boolean`, defaults to `false`.\n\nOutputs the targets/plugins used and the version specified in [plugin data version](https://github.com/babel/babel-preset-env/blob/master/data/plugins.json) to `console.log`.\n\n### `include`\n\n`Array<string>`, defaults to `[]`.\n\n> NOTE: `whitelist` is deprecated and will be removed in the next major in favor of this.\n\nAn array of plugins to always include.\n\nValid options include any:\n\n- [Babel plugins](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js) - both with (`babel-plugin-transform-es2015-spread`) and without prefix (`transform-es2015-spread`) are supported.\n\n- [Built-ins](https://github.com/babel/babel-preset-env/blob/master/data/built-in-features.js), such as `map`, `set`, or `object.assign`.\n\nThis option is useful if there is a bug in a native implementation, or a combination of a non-supported feature + a supported one doesn't work.\n\nFor example, Node 4 supports native classes but not spread. If `super` is used with a spread argument, then the `transform-es2015-classes` transform needs to be `include`d, as it is not possible to transpile a spread with `super` otherwise.\n\n> NOTE: The `include` and `exclude` options _only_ work with the [plugins included with this preset](https://github.com/babel/babel-preset-env/blob/master/data/plugin-features.js); so, for example, including `transform-do-expressions` or excluding `transform-function-bind` will throw errors. To use a plugin _not_ included with this preset, add them to your [config](https://babeljs.io/docs/usage/babelrc/) directly.\n\n### `exclude`\n\n`Array<string>`, defaults to `[]`.\n\nAn array of plugins to always exclude/remove.\n\nThe possible options are the same as the `include` option.\n\nThis option is useful for \"blacklisting\" a transform like `transform-regenerator` if you don't use generators and don't want to include `regeneratorRuntime` (when using `useBuiltIns`) or for using another plugin like [fast-async](https://github.com/MatAtBread/fast-async) instead of [Babel's async-to-gen](http://babeljs.io/docs/plugins/transform-async-generator-functions/).\n\n### `useBuiltIns`\n\n`boolean`, defaults to `false`.\n\nA way to apply `babel-preset-env` for polyfills (via \"babel-polyfill\").\n\n> NOTE: This does not currently polyfill experimental/stage-x built-ins like the regular \"babel-polyfill\" does.\n> This will only work with npm >= 3 (which should be used with Babel 6 anyway)\n\n```\nnpm install babel-polyfill --save\n```\n\nThis option enables a new plugin that replaces the statement `import \"babel-polyfill\"` or `require(\"babel-polyfill\")` with individual requires for `babel-polyfill` based on environment.\n\n> NOTE: Only use `require(\"babel-polyfill\");` once in your whole app.\n> Multiple imports or requires of `babel-polyfill` will throw an error since it can cause global collisions and other issues that are hard to trace.\n> We recommend creating a single entry file that only contains the `require` statement.\n\n**In**\n\n```js\nimport \"babel-polyfill\";\n```\n\n**Out (different based on environment)**\n\n```js\nimport \"core-js/modules/es7.string.pad-start\";\nimport \"core-js/modules/es7.string.pad-end\";\nimport \"core-js/modules/web.timers\";\nimport \"core-js/modules/web.immediate\";\nimport \"core-js/modules/web.dom.iterable\";\n```\n\nThis will also work for `core-js` directly (`import \"core-js\";`)\n\n```\nnpm install core-js --save\n```\n\n---\n\n## Examples\n\n### Export with various targets\n\n```js\nexport class A {}\n```\n\n#### Target only Chrome 52\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n#### Target Chrome 52 with webpack 2/rollup and loose mode\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52\n      },\n      \"modules\": false,\n      \"loose\": true\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport class A {}\n```\n\n#### Target specific browsers via browserslist\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"chrome\": 52,\n        \"browsers\": [\"last 2 versions\", \"safari 7\"]\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nexport var A = function A() {\n  _classCallCheck(this, A);\n};\n```\n\n#### Target latest node via `node: true` or `node: \"current\"`\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"node\": \"current\"\n      }\n    }]\n  ]\n}\n```\n\n**Out**\n\n```js\nclass A {}\nexports.A = A;\n```\n\n### Show debug output\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\n    [ \"env\", {\n      \"targets\": {\n        \"safari\": 10\n      },\n      \"modules\": false,\n      \"useBuiltIns\": true,\n      \"debug\": true\n    }]\n  ]\n}\n```\n\n**stdout**\n\n```sh\nUsing targets:\n{\n  \"safari\": 10\n}\n\nModules transform: false\n\nUsing plugins:\n  transform-exponentiation-operator {}\n  transform-async-to-generator {}\n\nUsing polyfills:\n  es7.object.values {}\n  es7.object.entries {}\n  es7.object.get-own-property-descriptors {}\n  web.timers {}\n  web.immediate {}\n  web.dom.iterable {}\n```\n\n### Include and exclude specific plugins/built-ins\n\n> always include arrow functions, explicitly exclude generators\n\n```json\n{\n  \"presets\": [\n    [\"env\", {\n      \"targets\": {\n        \"browsers\": [\"last 2 versions\", \"safari >= 7\"]\n      },\n      \"include\": [\"transform-es2015-arrow-functions\", \"es6.map\"],\n      \"exclude\": [\"transform-regenerator\", \"es6.set\"]\n    }]\n  ]\n}\n```\n\n## Caveats\n\nIf you get a `SyntaxError: Unexpected token ...` error when using the [object-rest-spread](https://github.com/babel/babel/tree/master/packages/babel-plugin-transform-object-rest-spread) transform then make sure the plugin has been updated to, at least, `v6.19.0`.\n\n## Other Cool Projects\n\n- [babel-preset-modern-browsers](https://github.com/christophehurpeau/babel-preset-modern-browsers)\n- ?"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 316148}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1672594}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 7148841}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 22040524}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 42275200}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 90852689}], "dependentsCount": 3547, "starsCount": 71}, "github": {"homepage": "https://github.com/babel/babel/tree/master/packages/babel-preset-env", "starsCount": 3570, "forksCount": 192, "subscribersCount": 65, "issues": {"count": 458, "openCount": 1, "distribution": {"3600": 111, "10800": 36, "32400": 42, "97200": 54, "291600": 43, "874800": 41, "2624400": 38, "7873200": 36, "23619600": 44, "70858800": 12, "212576400": 1}, "isDisabled": false}, "contributors": [{"username": "hzoo", "commitsCount": 121}, {"username": "existentialism", "commitsCount": 77}, {"username": "yavorsky", "commitsCount": 31}, {"username": "baer", "commitsCount": 10}, {"username": "alxpy", "commitsCount": 3}, {"username": "chicoxyzzy", "commitsCount": 2}, {"username": "Gerhut", "commitsCount": 1}, {"username": "Kilian", "commitsCount": 1}, {"username": "aaronang", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "bakkot", "commitsCount": 1}, {"username": "basicdays", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "corysimmons", "commitsCount": 1}, {"username": "darahak", "commitsCount": 1}, {"username": "devdevil666", "commitsCount": 1}, {"username": "devongovett", "commitsCount": 1}, {"username": "evilebottnawi", "commitsCount": 1}, {"username": "fson", "commitsCount": 1}, {"username": "imrobinized", "commitsCount": 1}, {"username": "josephrexme", "commitsCount": 1}, {"username": "jthegedus", "commitsCount": 1}, {"username": "kaicataldo", "commitsCount": 1}, {"username": "leggiero", "commitsCount": 1}, {"username": "matthiaskern", "commitsCount": 1}, {"username": "mikegreiling", "commitsCount": 1}, {"username": "nhajidin", "commitsCount": 1}, {"username": "rmariuzzo", "commitsCount": 1}, {"username": "rohmanhm", "commitsCount": 1}, {"username": "roman-yakobnyuk", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suchipi", "commitsCount": 1}, {"username": "valscion", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "xtuc", "commitsCount": 1}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}]}, "source": {"files": {"readmeSize": 14306, "testsSize": 77503, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/babel-preset-env.svg", "shields": "https://img.shields.io/npm/v/babel-preset-env.svg", "content": "https://img.shields.io/npm/v/babel-preset-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "service": "https://api.travis-ci.org/babel/babel-preset-env.svg?branch=master", "shields": "https://img.shields.io/travis/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/travis/babel/babel-preset-env/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-preset-env.svg", "shields": "https://img.shields.io/npm/dm/babel-preset-env.svg", "content": "https://img.shields.io/npm/dm/babel-preset-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel-preset-env/branch/master/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel-preset-env/master.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["eslint"], "outdatedDependencies": {"semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "browserslist": {"required": "^3.2.6", "stable": "4.12.0", "latest": "4.12.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6, "health": 0.8666666666666667, "branding": 1}, "popularity": {"communityInterest": 3934, "downloadsCount": 7346841.333333333, "downloadsAcceleration": -6166.507800608822, "dependentsCount": 3547}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.83104571695586, "detail": {"quality": 0.9434215266992355, "popularity": 0.5658759470806494, "maintenance": 0.9998933641938921}}}}, {"css-loader": {"analyzedAt": "2020-06-13T14:27:25.197Z", "collected": {"metadata": {"name": "css-loader", "scope": "unscoped", "version": "3.6.0", "description": "css loader module for webpack", "keywords": ["webpack", "css", "loader", "url", "import"], "date": "2020-06-13T14:27:06.915Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/css-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/css-loader", "homepage": "https://github.com/webpack-contrib/css-loader", "repository": "https://github.com/webpack-contrib/css-loader", "bugs": "https://github.com/webpack-contrib/css-loader/issues"}, "license": "MIT", "dependencies": {"camelcase": "^5.3.1", "cssesc": "^3.0.0", "icss-utils": "^4.1.1", "loader-utils": "^1.2.3", "normalize-path": "^3.0.0", "postcss": "^7.0.32", "postcss-modules-extract-imports": "^2.0.0", "postcss-modules-local-by-default": "^3.0.2", "postcss-modules-scope": "^2.2.0", "postcss-modules-values": "^3.0.0", "postcss-value-parser": "^4.1.0", "schema-utils": "^2.7.0", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/preset-env": "^7.10.2", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.5.1", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.1", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.21.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.5.4", "lint-staged": "^10.2.10", "memfs": "^3.2.0", "npm-run-all": "^4.1.5", "postcss-loader": "^3.0.0", "postcss-preset-env": "^6.7.0", "prettier": "^2.0.5", "sass": "^1.26.8", "sass-loader": "^8.0.2", "standard-version": "^8.0.0", "strip-ansi": "^6.0.0", "url-loader": "^4.1.0", "webpack": "^4.43.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 7}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 21}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img width=\"180\" height=\"180\" vspace=\"20\"\n    src=\"https://cdn.worldvectorlogo.com/logos/css-3.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# css-loader\n\nThe `css-loader` interprets `@import` and `url()` like `import/require()` and will resolve them.\n\n## Getting Started\n\nTo begin, you'll need to install `css-loader`:\n\n```console\nnpm install --save-dev css-loader\n```\n\nThen add the plugin to your `webpack` config. For example:\n\n**file.js**\n\n```js\nimport css from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nGood loaders for requiring your assets are the [file-loader](https://github.com/webpack/file-loader) and the [url-loader](https://github.com/webpack/url-loader) which you should specify in your config (see [below](https://github.com/webpack-contrib/css-loader#assets)).\n\nAnd run `webpack` via your preferred method.\n\n### `toString`\n\nYou can also use the css-loader results directly as a string, such as in Angular's component style.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['to-string-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nor\n\n```js\nconst css = require('./test.css').toString();\n\nconsole.log(css); // {String}\n```\n\nIf there are SourceMaps, they will also be included in the result string.\n\nIf, for one reason or another, you need to extract CSS as a\nplain string resource (i.e. not wrapped in a JS module) you\nmight want to check out the [extract-loader](https://github.com/peerigon/extract-loader).\nIt's useful when you, for instance, need to post process the CSS as a string.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'handlebars-loader', // handlebars loader expects raw resource string\n          'extract-loader',\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|                    Name                     |            Type             | Default  | Description                                                            |\n| :-----------------------------------------: | :-------------------------: | :------: | :--------------------------------------------------------------------- |\n|              **[`url`](#url)**              |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `url`/`image-set` functions handling                  |\n|           **[`import`](#import)**           |    `{Boolean\\|Function}`    |  `true`  | Enables/Disables `@import` at-rules handling                           |\n|          **[`modules`](#modules)**          | `{Boolean\\|String\\|Object}` | `false`  | Enables/Disables CSS Modules and their configuration                   |\n|        **[`sourceMap`](#sourcemap)**        |         `{Boolean}`         | `false`  | Enables/Disables generation of source maps                             |\n|    **[`importLoaders`](#importloaders)**    |         `{Number}`          |   `0`    | Enables/Disables or setups number of loaders applied before CSS loader |\n| **[`localsConvention`](#localsconvention)** |         `{String}`          | `'asIs'` | Style of exported classnames                                           |\n|       **[`onlyLocals`](#onlylocals)**       |         `{Boolean}`         | `false`  | Export only locals                                                     |\n|         **[`esModule`](#esmodule)**         |         `{Boolean}`         | `false`  | Use ES modules syntax                                                  |\n\n### `url`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `url`/`image-set` functions handling.\nControl `url()` resolving. Absolute URLs and root-relative URLs are not resolving.\n\nExamples resolutions:\n\n```\nurl(image.png) => require('./image.png')\nurl('image.png') => require('./image.png')\nurl(./image.png) => require('./image.png')\nurl('./image.png') => require('./image.png')\nurl('http://dontwritehorriblecode.com/2112.png') => require('http://dontwritehorriblecode.com/2112.png')\nimage-set(url('image2x.png') 1x, url('image1x.png') 2x) => require('./image1x.png') and require('./image2x.png')\n```\n\nTo import assets from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\nurl(~module/image.png) => require('module/image.png')\nurl('~module/image.png') => require('module/image.png')\nurl(~aliasDirectory/image.png) => require('otherDirectory/image.png')\n```\n\n#### `Boolean`\n\nEnable/disable `url()` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `url()`. All filtered `url()` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          url: (url, resourcePath) => {\n            // resourcePath - path to css file\n\n            // Don't handle `img.png` urls\n            if (url.includes('img.png')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `import`\n\nType: `Boolean|Function`\nDefault: `true`\n\nEnables/Disables `@import` at-rules handling.\nControl `@import` resolving. Absolute urls in `@import` will be moved in runtime code.\n\nExamples resolutions:\n\n```\n@import 'style.css' => require('./style.css')\n@import url(style.css) => require('./style.css')\n@import url('style.css') => require('./style.css')\n@import './style.css' => require('./style.css')\n@import url(./style.css) => require('./style.css')\n@import url('./style.css') => require('./style.css')\n@import url('http://dontwritehorriblecode.com/style.css') => @import url('http://dontwritehorriblecode.com/style.css') in runtime\n```\n\nTo import styles from a `node_modules` path (include `resolve.modules`) and for `alias`, prefix it with a `~`:\n\n```\n@import url(~module/style.css) => require('module/style.css')\n@import url('~module/style.css') => require('module/style.css')\n@import url(~aliasDirectory/style.css) => require('otherDirectory/style.css')\n```\n\n#### `Boolean`\n\nEnable/disable `@import` resolving.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllow to filter `@import`. All filtered `@import` will not be resolved (left in the code as they were written).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          import: (parsedImport, resourcePath) => {\n            // parsedImport.url - url of `@import`\n            // parsedImport.media - media query of `@import`\n            // resourcePath - path to css file\n\n            // Don't handle `style.css` import\n            if (parsedImport.url.includes('style.css')) {\n              return false;\n            }\n\n            return true;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `modules`\n\nType: `Boolean|String|Object`\nDefault: `false`\n\nEnables/Disables CSS Modules and their configuration.\n\nThe `modules` option enables/disables the **[CSS Modules](https://github.com/css-modules/css-modules)** specification and setup basic behaviour.\n\nUsing `false` value increase performance because we avoid parsing **CSS Modules** features, it will be useful for developers who use vanilla css or use other technologies.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Features`\n\n##### `Scope`\n\nUsing `local` value requires you to specify `:global` classes.\nUsing `global` value requires you to specify `:local` classes.\nUsing `pure` value requires selectors must contain at least one local class or id.\n\nYou can find more information [here](https://github.com/css-modules/css-modules).\n\nStyles can be locally scoped to avoid globally scoping styles.\n\nThe syntax `:local(.className)` can be used to declare `className` in the local scope. The local identifiers are exported by the module.\n\nWith `:local` (without brackets) local mode can be switched on for this selector.\nThe `:global(.className)` notation can be used to declare an explicit global selector.\nWith `:global` (without brackets) global mode can be switched on for this selector.\n\nThe loader replaces local selectors with unique identifiers. The chosen unique identifiers are exported by the module.\n\n```css\n:local(.className) {\n  background: red;\n}\n:local .className {\n  color: green;\n}\n:local(.className .subClass) {\n  color: green;\n}\n:local .className .subClass :global(.global-class-name) {\n  color: blue;\n}\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n}\n._23_aKvs-b8bW2Vg3fwHozO {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 {\n  color: green;\n}\n._23_aKvs-b8bW2Vg3fwHozO ._13LGdX8RMStbBE9w-t0gZ1 .global-class-name {\n  color: blue;\n}\n```\n\n> \u2139\ufe0f Identifiers are exported\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1',\n};\n```\n\nCamelCase is recommended for local selectors. They are easier to use within the imported JS module.\n\nYou can use `:local(#someId)`, but this is not recommended. Use classes instead of ids.\n\n##### `Composing`\n\nWhen declaring a local classname you can compose a local class from another local classname.\n\n```css\n:local(.className) {\n  background: red;\n  color: yellow;\n}\n\n:local(.subClass) {\n  composes: className;\n  background: blue;\n}\n```\n\nThis doesn't result in any change to the CSS itself but exports multiple classnames.\n\n```js\nexports.locals = {\n  className: '_23_aKvs-b8bW2Vg3fwHozO',\n  subClass: '_13LGdX8RMStbBE9w-t0gZ1 _23_aKvs-b8bW2Vg3fwHozO',\n};\n```\n\n```css\n._23_aKvs-b8bW2Vg3fwHozO {\n  background: red;\n  color: yellow;\n}\n\n._13LGdX8RMStbBE9w-t0gZ1 {\n  background: blue;\n}\n```\n\n##### `Importing`\n\nTo import a local classname from another module.\n\n```css\n:local(.continueButton) {\n  composes: button from 'library/button.css';\n  background: red;\n}\n```\n\n```css\n:local(.nameEdit) {\n  composes: edit highlight from './edit.css';\n  background: red;\n}\n```\n\nTo import from multiple modules use multiple `composes:` rules.\n\n```css\n:local(.className) {\n  composes: edit hightlight from './edit.css';\n  composes: button from 'module/button.css';\n  composes: classFromThisModule;\n  background: red;\n}\n```\n\n##### `Values`\n\nYou can use `@value` to specific values to be reused throughout a document.\n\nWe recommend use prefix `v-` for values, `s-` for selectors and `m-` for media at-rules.\n\n```css\n@value v-primary: #BF4040;\n@value s-black: black-selector;\n@value m-large: (min-width: 960px);\n\n.header {\n  color: v-primary;\n  padding: 0 10px;\n}\n\n.s-black {\n  color: black;\n}\n\n@media m-large {\n  .header {\n    padding: 0 20px;\n  }\n}\n```\n\n#### `Boolean`\n\nEnable **CSS Modules** features.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `String`\n\nEnable **CSS Modules** features and setup `mode`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          // Using `local` value has same effect like using `modules: true`\n          modules: 'global',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Object`\n\nEnable **CSS Modules** features and setup options for them.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'local',\n            exportGlobals: true,\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n            context: path.resolve(__dirname, 'src'),\n            hashPrefix: 'my-custom-hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `auto`\n\nType: `Boolean|RegExp|Function`\nDefault: `'undefined'`\n\nAllows auto enable css modules based on filename.\n\n###### `Boolean`\n\nPossible values:\n\n- `true` - enable css modules for all files for which `/\\.module\\.\\w+$/i.test(filename)` return true\n- `false` - disable css modules\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `RegExp`\n\nEnable css modules for files based on the filename satisfying your regex check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: /\\.custom-module\\.\\w+$/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nEnable css modules for files based on the filename satisfying your filter function check.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            auto: (resourcePath) => resourcePath.endsWith('.custom-module.css'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `mode`\n\nType: `String|Function`\nDefault: `'local'`\n\nSetup `mode` option. You can omit the value when you want `local` mode.\n\n###### `String`\n\nPossible values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            mode: 'global',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n###### `Function`\n\nAllows set different values for the `mode` option based on a filename\n\nPossible return values - `local`, `global`, and `pure`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            // Callback must return \"local\", \"global\", or \"pure\" values\n            mode: (resourcePath) => {\n              if (/pure.css$/i.test(resourcePath)) {\n                return 'pure';\n              }\n\n              if (/global.css$/i.test(resourcePath)) {\n                return 'global';\n              }\n\n              return 'local';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `exportGlobals`\n\nType: `Boolean`\nDefault: `false`\n\nAllow `css-loader` to export names from global class or id, so you can use that as local name.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            exportGlobals: true,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentName`\n\nType: `String`\nDefault: `'[hash:base64]'`\n\nYou can configure the generated ident with the `localIdentName` query parameter.\nSee [loader-utils's documentation](https://github.com/webpack/loader-utils#interpolatename) for more information on options.\n\nRecommendations:\n\n- use `'[path][name]__[local]'` for development\n- use `'[hash:base64]'` for production\n\nThe `[local]` placeholder contains original class.\n\n**Note:** all reserved (`<>:\"/\\|?*`) and control filesystem characters (excluding characters in the `[local]` placeholder) will be converted to `-`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentName: '[path][name]__[local]--[hash:base64:5]',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `context`\n\nType: `String`\nDefault: `undefined`\n\nAllow to redefine basic loader context for local ident name.\nBy default we use `rootContext` of loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            context: path.resolve(__dirname, 'context'),\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `hashPrefix`\n\nType: `String`\nDefault: `undefined`\n\nAllow to add custom hash to generate more unique classes.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            hashPrefix: 'hash',\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `getLocalIdent`\n\nType: `Function`\nDefault: `undefined`\n\nYou can also specify the absolute path to your custom `getLocalIdent` function to generate classname based on a different schema.\nBy default we use built-in function to generate a classname.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            getLocalIdent: (context, localIdentName, localName, options) => {\n              return 'whatever_random_class_name';\n            },\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n##### `localIdentRegExp`\n\nType: `String|RegExp`\nDefault: `undefined`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          modules: {\n            localIdentRegExp: /page-(.*)\\.css/i,\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: `false`\n\nEnables/Disables generation of source maps.\n\nTo include source maps set the `sourceMap` option.\n\nThey are not enabled by default because they expose a runtime overhead and increase in bundle size (JS source maps do not).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          sourceMap: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `importLoaders`\n\nType: `Number`\nDefault: `0`\n\nEnables/Disables or setups number of loaders applied before CSS loader.\n\nThe option `importLoaders` allows you to configure how many loaders before `css-loader` should be applied to `@import`ed resources.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              importLoaders: 2,\n              // 0 => no loaders (default);\n              // 1 => postcss-loader;\n              // 2 => postcss-loader, sass-loader\n            },\n          },\n          'postcss-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThis may change in the future when the module system (i. e. webpack) supports loader matching by origin.\n\n### `localsConvention`\n\nType: `String`\nDefault: `'asIs'`\n\nStyle of exported classnames.\n\nBy default, the exported JSON keys mirror the class names (i.e `asIs` value).\n\n|         Name          |    Type    | Description                                                                                      |\n| :-------------------: | :--------: | :----------------------------------------------------------------------------------------------- |\n|     **`'asIs'`**      | `{String}` | Class names will be exported as is.                                                              |\n|   **`'camelCase'`**   | `{String}` | Class names will be camelized, the original class name will not to be removed from the locals    |\n| **`'camelCaseOnly'`** | `{String}` | Class names will be camelized, the original class name will be removed from the locals           |\n|    **`'dashes'`**     | `{String}` | Only dashes in class names will be camelized                                                     |\n|  **`'dashesOnly'`**   | `{String}` | Dashes in class names will be camelized, the original class name will be removed from the locals |\n\n**file.css**\n\n```css\n.class-name {\n}\n```\n\n**file.js**\n\n```js\nimport { className } from 'file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          localsConvention: 'camelCase',\n        },\n      },\n    ],\n  },\n};\n```\n\n### `onlyLocals`\n\nType: `Boolean`\nDefault: `false`\n\nExport only locals.\n\n**Useful** when you use **css modules** for pre-rendering (for example SSR).\nFor pre-rendering with `mini-css-extract-plugin` you should use this option instead of `style-loader!css-loader` **in the pre-rendering bundle**.\nIt doesn't embed CSS but only exports the identifier mappings.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          onlyLocals: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `css-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Assets\n\nThe following `webpack.config.js` can load CSS files, embed small PNG/JPG/GIF/SVG images as well as fonts as [Data URLs](https://tools.ietf.org/html/rfc2397) and copy larger files to the output directory.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n### Extract\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\n- This can be achieved by using the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract the CSS when running in production mode.\n\n- As an alternative, if seeking better development performance and css outputs that mimic production. [extract-css-chunks-webpack-plugin](https://github.com/faceyspacey/extract-css-chunks-webpack-plugin) offers a hot module reload friendly, extended version of mini-css-extract-plugin. HMR real CSS files in dev, works like mini-css in non-dev\n\n### Pure CSS, CSS modules and PostCSS\n\nWhen you have pure CSS (without CSS modules), CSS modules and PostCSS in your project you can use this setup:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        // For CSS modules\n        // For pure CSS - /\\.css$/i,\n        // For Sass/SCSS - /\\.((c|sa|sc)ss)$/i,\n        // For Less - /\\.((c|le)ss)$/i,\n        test: /\\.((c|sa|sc)ss)$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              // Run `postcss-loader` on each CSS `@import`, do not forget that `sass-loader` compile non CSS `@import`'s into a single file\n              // If you need run `sass-loader` and `postcss-loader` on each CSS `@import` please set it to `2`\n              importLoaders: 1,\n              // Automatically enable css modules for files satisfying `/\\.module\\.\\w+$/i` RegExp.\n              modules: { auto: true },\n            },\n          },\n          {\n            loader: 'postcss-loader',\n            options: { plugins: () => [postcssPresetEnv({ stage: 0 })] },\n          },\n          // Can be `less-loader`\n          // The `test` property should be `\\.less/i`\n          {\n            test: /\\.s[ac]ss$/i,\n            loader: 'sass-loader',\n          },\n        ],\n      },\n      {\n        test: /\\.(png|jpe?g|gif|svg|eot|ttf|woff|woff2)$/i,\n        loader: 'url-loader',\n        options: {\n          limit: 8192,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/css-loader.svg\n[npm-url]: https://npmjs.com/package/css-loader\n[node]: https://img.shields.io/node/v/css-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/css-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/css-loader\n[tests]: https://github.com/webpack-contrib/css-loader/workflows/css-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/css-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/css-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/css-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1460626}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9265212}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 39645508}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 115235161}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 201782007}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 351014965}], "dependentsCount": 9729, "starsCount": 99}, "github": {"starsCount": 3800, "forksCount": 538, "subscribersCount": 59, "issues": {"count": 1091, "openCount": 24, "distribution": {"3600": 250, "10800": 63, "32400": 63, "97200": 80, "291600": 64, "874800": 71, "2624400": 84, "7873200": 98, "23619600": 127, "70858800": 176, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 200}, {"username": "sokra", "commitsCount": 132}, {"username": "d3viant0ne", "commitsCount": 15}, {"username": "michael-ciniawsky", "commitsCount": 13}, {"username": "bebraw", "commitsCount": 8}, {"username": "SpaceK33z", "commitsCount": 6}, {"username": "markdalgleish", "commitsCount": 6}, {"username": "ShyykoSerhiy", "commitsCount": 5}, {"username": "joscha", "commitsCount": 5}, {"username": "jhnns", "commitsCount": 3}, {"username": "nkt", "commitsCount": 3}, {"username": "BPScott", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "andreypopp", "commitsCount": 2}, {"username": "ben-eb", "commitsCount": 2}, {"username": "cap-Bernardito", "commitsCount": 2}, {"username": "kgram", "commitsCount": 2}, {"username": "kud", "commitsCount": 2}, {"username": "lemieux", "commitsCount": 2}, {"username": "liambuchanan", "commitsCount": 2}, {"username": "mrsteele", "commitsCount": 2}, {"username": "shama", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "Antonio-Laguna", "commitsCount": 1}, {"username": "Atinux", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "ScriptedAlchemy", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "Solant", "commitsCount": 1}, {"username": "Stephanemw", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "ahoym", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alreadyExisted", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "bbtfr", "commitsCount": 1}, {"username": "briandipalma", "commitsCount": 1}, {"username": "brokenmass", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "charlesponti", "commitsCount": 1}, {"username": "christianvuerings", "commitsCount": 1}, {"username": "danny-andrews-snap", "commitsCount": 1}, {"username": "diagramatics", "commitsCount": 1}, {"username": "diegofaria", "commitsCount": 1}, {"username": "dreyescat", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "faergeek", "commitsCount": 1}, {"username": "fresheneesz", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "helloyou2012", "commitsCount": 1}, {"username": "hugihlynsson", "commitsCount": 1}, {"username": "jkiimm", "commitsCount": 1}, {"username": "joelgallant", "commitsCount": 1}, {"username": "jquense", "commitsCount": 1}, {"username": "jwalton", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "lamhieu-vk", "commitsCount": 1}, {"username": "lettertwo", "commitsCount": 1}, {"username": "liuliangsir", "commitsCount": 1}, {"username": "longlho", "commitsCount": 1}, {"username": "manuelbieh", "commitsCount": 1}, {"username": "mareksuscak", "commitsCount": 1}, {"username": "maxlapides", "commitsCount": 1}, {"username": "mjackson", "commitsCount": 1}, {"username": "mmrko", "commitsCount": 1}, {"username": "monteiz", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "moretti", "commitsCount": 1}, {"username": "mweibel", "commitsCount": 1}, {"username": "ndresx", "commitsCount": 1}, {"username": "no1melman", "commitsCount": 1}, {"username": "oliverwoodings", "commitsCount": 1}, {"username": "petehunt", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "philipbordallo", "commitsCount": 1}, {"username": "princed", "commitsCount": 1}, {"username": "rtsao", "commitsCount": 1}, {"username": "sanpoChew", "commitsCount": 1}, {"username": "seuros", "commitsCount": 1}, {"username": "skipjack", "commitsCount": 1}, {"username": "sodatea", "commitsCount": 1}, {"username": "spencerbyw", "commitsCount": 1}, {"username": "swernerx", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}, {"username": "yavorsky", "commitsCount": 1}, {"username": "ziir", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 25}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 31}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 72}]}, "source": {"files": {"readmeSize": 26212, "testsSize": 2680041, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/css-loader.svg", "shields": "https://img.shields.io/npm/v/css-loader.svg", "content": "https://img.shields.io/npm/v/css-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/css-loader.svg", "service": "https://david-dm.org/webpack-contrib/css-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/css-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/css-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.97, "outdatedDependencies": {"camelcase": {"required": "^5.3.1", "stable": "6.0.0", "latest": "6.0.0"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.7454999999999999, "health": 0.5384615384615384, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 4582, "downloadsCount": 38411720.333333336, "downloadsAcceleration": 129789.60302511416, "dependentsCount": 9729}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8954280821917808, "openIssues": 1, "issuesDistribution": 0.018372403247356672}}, "score": {"final": 0.7962621213280523, "detail": {"quality": 0.9131107769559872, "popularity": 0.806985994232435, "maintenance": 0.6853822578854399}}}}, {"chalk": {"analyzedAt": "2020-06-20T17:33:57.453Z", "collected": {"metadata": {"name": "chalk", "scope": "unscoped", "version": "4.1.0", "description": "Terminal string styling done right", "keywords": ["color", "colour", "colors", "terminal", "console", "cli", "string", "str", "ansi", "style", "styles", "tty", "formatting", "rgb", "256", "shell", "xterm", "log", "logging", "command-line", "text"], "date": "2020-06-09T07:43:42.525Z", "publisher": {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}, "maintainers": [{"username": "qix", "email": "i.am.qix@gmail.com"}, {"username": "sindresorhus", "email": "sindresorhus@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/chalk/chalk.git"}, "links": {"npm": "https://www.npmjs.com/package/chalk", "homepage": "https://github.com/chalk/chalk#readme", "repository": "https://github.com/chalk/chalk", "bugs": "https://github.com/chalk/chalk/issues"}, "license": "MIT", "dependencies": {"ansi-styles": "^4.1.0", "supports-color": "^7.1.0"}, "devDependencies": {"ava": "^2.4.0", "coveralls": "^3.0.7", "execa": "^4.0.0", "import-fresh": "^3.1.0", "matcha": "^0.7.0", "nyc": "^15.0.0", "resolve-from": "^5.0.0", "tsd": "^0.7.4", "xo": "^0.28.2"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=\"center\">\n\t<br>\n\t<br>\n\t<img width=\"320\" src=\"media/logo.svg\" alt=\"Chalk\">\n\t<br>\n\t<br>\n\t<br>\n</h1>\n\n> Terminal string styling done right\n\n[![Build Status](https://travis-ci.org/chalk/chalk.svg?branch=master)](https://travis-ci.org/chalk/chalk) [![Coverage Status](https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master)](https://coveralls.io/github/chalk/chalk?branch=master) [![npm dependents](https://badgen.net/npm/dependents/chalk)](https://www.npmjs.com/package/chalk?activeTab=dependents) [![Downloads](https://badgen.net/npm/dt/chalk)](https://www.npmjs.com/package/chalk) [![](https://img.shields.io/badge/unicorn-approved-ff69b4.svg)](https://www.youtube.com/watch?v=9auOCbH5Ns4) [![XO code style](https://img.shields.io/badge/code_style-XO-5ed9c7.svg)](https://github.com/xojs/xo) ![TypeScript-ready](https://img.shields.io/npm/types/chalk.svg) [![run on repl.it](https://repl.it/badge/github/chalk/chalk)](https://repl.it/github/chalk/chalk)\n\n<img src=\"https://cdn.jsdelivr.net/gh/chalk/ansi-styles@8261697c95bf34b6c7767e2cbe9941a851d59385/screenshot.svg\" width=\"900\">\n\n## Highlights\n\n- Expressive API\n- Highly performant\n- Ability to nest styles\n- [256/Truecolor color support](#256-and-truecolor-color-support)\n- Auto-detects color support\n- Doesn't extend `String.prototype`\n- Clean and focused\n- Actively maintained\n- [Used by ~50,000 packages](https://www.npmjs.com/browse/depended/chalk) as of January 1, 2020\n\n## Install\n\n```console\n$ npm install chalk\n```\n\n## Usage\n\n```js\nconst chalk = require('chalk');\n\nconsole.log(chalk.blue('Hello world!'));\n```\n\nChalk comes with an easy to use composable API where you just chain and nest the styles you want.\n\n```js\nconst chalk = require('chalk');\nconst log = console.log;\n\n// Combine styled and normal strings\nlog(chalk.blue('Hello') + ' World' + chalk.red('!'));\n\n// Compose multiple styles using the chainable API\nlog(chalk.blue.bgRed.bold('Hello world!'));\n\n// Pass in multiple arguments\nlog(chalk.blue('Hello', 'World!', 'Foo', 'bar', 'biz', 'baz'));\n\n// Nest styles\nlog(chalk.red('Hello', chalk.underline.bgBlue('world') + '!'));\n\n// Nest styles of the same type even (color, underline, background)\nlog(chalk.green(\n\t'I am a green line ' +\n\tchalk.blue.underline.bold('with a blue substring') +\n\t' that becomes green again!'\n));\n\n// ES2015 template literal\nlog(`\nCPU: ${chalk.red('90%')}\nRAM: ${chalk.green('40%')}\nDISK: ${chalk.yellow('70%')}\n`);\n\n// ES2015 tagged template literal\nlog(chalk`\nCPU: {red ${cpu.totalPercent}%}\nRAM: {green ${ram.used / ram.total * 100}%}\nDISK: {rgb(255,131,0) ${disk.used / disk.total * 100}%}\n`);\n\n// Use RGB colors in terminal emulators that support it.\nlog(chalk.keyword('orange')('Yay for orange colored text!'));\nlog(chalk.rgb(123, 45, 67).underline('Underlined reddish color'));\nlog(chalk.hex('#DEADED').bold('Bold gray!'));\n```\n\nEasily define your own themes:\n\n```js\nconst chalk = require('chalk');\n\nconst error = chalk.bold.red;\nconst warning = chalk.keyword('orange');\n\nconsole.log(error('Error!'));\nconsole.log(warning('Warning!'));\n```\n\nTake advantage of console.log [string substitution](https://nodejs.org/docs/latest/api/console.html#console_console_log_data_args):\n\n```js\nconst name = 'Sindre';\nconsole.log(chalk.green('Hello %s'), name);\n//=> 'Hello Sindre'\n```\n\n## API\n\n### chalk.`<style>[.<style>...](string, [string...])`\n\nExample: `chalk.red.bold.underline('Hello', 'world');`\n\nChain [styles](#styles) and call the last one as a method with a string argument. Order doesn't matter, and later styles take precedent in case of a conflict. This simply means that `chalk.red.yellow.green` is equivalent to `chalk.green`.\n\nMultiple arguments will be separated by space.\n\n### chalk.level\n\nSpecifies the level of color support.\n\nColor support is automatically detected, but you can override it by setting the `level` property. You should however only do this in your own code as it applies globally to all Chalk consumers.\n\nIf you need to change this in a reusable module, create a new instance:\n\n```js\nconst ctx = new chalk.Instance({level: 0});\n```\n\n| Level | Description |\n| :---: | :--- |\n| `0` | All colors disabled |\n| `1` | Basic color support (16 colors) |\n| `2` | 256 color support |\n| `3` | Truecolor support (16 million colors) |\n\n### chalk.supportsColor\n\nDetect whether the terminal [supports color](https://github.com/chalk/supports-color). Used internally and handled for you, but exposed for convenience.\n\nCan be overridden by the user with the flags `--color` and `--no-color`. For situations where using `--color` is not possible, use the environment variable `FORCE_COLOR=1` (level 1), `FORCE_COLOR=2` (level 2), or `FORCE_COLOR=3` (level 3) to forcefully enable color, or `FORCE_COLOR=0` to forcefully disable. The use of `FORCE_COLOR` overrides all other color support checks.\n\nExplicit 256/Truecolor mode can be enabled using the `--color=256` and `--color=16m` flags, respectively.\n\n### chalk.stderr and chalk.stderr.supportsColor\n\n`chalk.stderr` contains a separate instance configured with color support detected for `stderr` stream instead of `stdout`. Override rules from `chalk.supportsColor` apply to this too. `chalk.stderr.supportsColor` is exposed for convenience.\n\n## Styles\n\n### Modifiers\n\n- `reset` - Resets the current color chain.\n- `bold` - Make text bold.\n- `dim` - Emitting only a small amount of light.\n- `italic` - Make text italic. *(Not widely supported)*\n- `underline` - Make text underline. *(Not widely supported)*\n- `inverse`- Inverse background and foreground colors.\n- `hidden` - Prints the text, but makes it invisible.\n- `strikethrough` - Puts a horizontal line through the center of the text. *(Not widely supported)*\n- `visible`- Prints the text only when Chalk has a color level > 0. Can be useful for things that are purely cosmetic.\n\n### Colors\n\n- `black`\n- `red`\n- `green`\n- `yellow`\n- `blue`\n- `magenta`\n- `cyan`\n- `white`\n- `blackBright` (alias: `gray`, `grey`)\n- `redBright`\n- `greenBright`\n- `yellowBright`\n- `blueBright`\n- `magentaBright`\n- `cyanBright`\n- `whiteBright`\n\n### Background colors\n\n- `bgBlack`\n- `bgRed`\n- `bgGreen`\n- `bgYellow`\n- `bgBlue`\n- `bgMagenta`\n- `bgCyan`\n- `bgWhite`\n- `bgBlackBright` (alias: `bgGray`, `bgGrey`)\n- `bgRedBright`\n- `bgGreenBright`\n- `bgYellowBright`\n- `bgBlueBright`\n- `bgMagentaBright`\n- `bgCyanBright`\n- `bgWhiteBright`\n\n## Tagged template literal\n\nChalk can be used as a [tagged template literal](https://exploringjs.com/es6/ch_template-literals.html#_tagged-template-literals).\n\n```js\nconst chalk = require('chalk');\n\nconst miles = 18;\nconst calculateFeet = miles => miles * 5280;\n\nconsole.log(chalk`\n\tThere are {bold 5280 feet} in a mile.\n\tIn {bold ${miles} miles}, there are {green.bold ${calculateFeet(miles)} feet}.\n`);\n```\n\nBlocks are delimited by an opening curly brace (`{`), a style, some content, and a closing curly brace (`}`).\n\nTemplate styles are chained exactly like normal Chalk styles. The following three statements are equivalent:\n\n```js\nconsole.log(chalk.bold.rgb(10, 100, 200)('Hello!'));\nconsole.log(chalk.bold.rgb(10, 100, 200)`Hello!`);\nconsole.log(chalk`{bold.rgb(10,100,200) Hello!}`);\n```\n\nNote that function styles (`rgb()`, `hsl()`, `keyword()`, etc.) may not contain spaces between parameters.\n\nAll interpolated values (`` chalk`${foo}` ``) are converted to strings via the `.toString()` method. All curly braces (`{` and `}`) in interpolated value strings are escaped.\n\n## 256 and Truecolor color support\n\nChalk supports 256 colors and [Truecolor](https://gist.github.com/XVilka/8346728) (16 million colors) on supported terminal apps.\n\nColors are downsampled from 16 million RGB values to an ANSI color format that is supported by the terminal emulator (or by specifying `{level: n}` as a Chalk option). For example, Chalk configured to run at level 1 (basic color support) will downsample an RGB value of #FF0000 (red) to 31 (ANSI escape for red).\n\nExamples:\n\n- `chalk.hex('#DEADED').underline('Hello, world!')`\n- `chalk.keyword('orange')('Some orange text')`\n- `chalk.rgb(15, 100, 204).inverse('Hello!')`\n\nBackground versions of these models are prefixed with `bg` and the first level of the module capitalized (e.g. `keyword` for foreground colors and `bgKeyword` for background colors).\n\n- `chalk.bgHex('#DEADED').underline('Hello, world!')`\n- `chalk.bgKeyword('orange')('Some orange text')`\n- `chalk.bgRgb(15, 100, 204).inverse('Hello!')`\n\nThe following color models can be used:\n\n- [`rgb`](https://en.wikipedia.org/wiki/RGB_color_model) - Example: `chalk.rgb(255, 136, 0).bold('Orange!')`\n- [`hex`](https://en.wikipedia.org/wiki/Web_colors#Hex_triplet) - Example: `chalk.hex('#FF8800').bold('Orange!')`\n- [`keyword`](https://www.w3.org/wiki/CSS/Properties/color/keywords) (CSS keywords) - Example: `chalk.keyword('orange').bold('Orange!')`\n- [`hsl`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsl(32, 100, 50).bold('Orange!')`\n- [`hsv`](https://en.wikipedia.org/wiki/HSL_and_HSV) - Example: `chalk.hsv(32, 100, 100).bold('Orange!')`\n- [`hwb`](https://en.wikipedia.org/wiki/HWB_color_model) - Example: `chalk.hwb(32, 0, 50).bold('Orange!')`\n- [`ansi`](https://en.wikipedia.org/wiki/ANSI_escape_code#3/4_bit) - Example: `chalk.ansi(31).bgAnsi(93)('red on yellowBright')`\n- [`ansi256`](https://en.wikipedia.org/wiki/ANSI_escape_code#8-bit) - Example: `chalk.bgAnsi256(194)('Honeydew, more or less')`\n\n## Windows\n\nIf you're on Windows, do yourself a favor and use [Windows Terminal](https://github.com/microsoft/terminal) instead of `cmd.exe`.\n\n## Origin story\n\n[colors.js](https://github.com/Marak/colors.js) used to be the most popular string styling module, but it has serious deficiencies like extending `String.prototype` which causes all kinds of [problems](https://github.com/yeoman/yo/issues/68) and the package is unmaintained. Although there are other packages, they either do too much or not enough. Chalk is a clean and focused alternative.\n\n## chalk for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of chalk and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-chalk?utm_source=npm-chalk&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n## Related\n\n- [chalk-cli](https://github.com/chalk/chalk-cli) - CLI for this module\n- [ansi-styles](https://github.com/chalk/ansi-styles) - ANSI escape codes for styling strings in the terminal\n- [supports-color](https://github.com/chalk/supports-color) - Detect whether a terminal supports color\n- [strip-ansi](https://github.com/chalk/strip-ansi) - Strip ANSI escape codes\n- [strip-ansi-stream](https://github.com/chalk/strip-ansi-stream) - Strip ANSI escape codes from a stream\n- [has-ansi](https://github.com/chalk/has-ansi) - Check if a string has ANSI escape codes\n- [ansi-regex](https://github.com/chalk/ansi-regex) - Regular expression for matching ANSI escape codes\n- [wrap-ansi](https://github.com/chalk/wrap-ansi) - Wordwrap a string with ANSI escape codes\n- [slice-ansi](https://github.com/chalk/slice-ansi) - Slice a string with ANSI escape codes\n- [color-convert](https://github.com/qix-/color-convert) - Converts colors between different models\n- [chalk-animation](https://github.com/bokub/chalk-animation) - Animate strings in the terminal\n- [gradient-string](https://github.com/bokub/gradient-string) - Apply color gradients to strings\n- [chalk-pipe](https://github.com/LitoMore/chalk-pipe) - Create chalk style schemes with simpler style strings\n- [terminal-link](https://github.com/sindresorhus/terminal-link) - Create clickable links in the terminal\n\n## Maintainers\n\n- [Sindre Sorhus](https://github.com/sindresorhus)\n- [Josh Junon](https://github.com/qix-)"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7480506}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 48171335}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 201839494}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 570348872}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 977967889}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1687521108}], "dependentsCount": 49654, "starsCount": 933}, "github": {"starsCount": 14650, "forksCount": 561, "subscribersCount": 139, "issues": {"count": 406, "openCount": 12, "distribution": {"3600": 101, "10800": 40, "32400": 37, "97200": 40, "291600": 24, "874800": 32, "2624400": 35, "7873200": 37, "23619600": 41, "70858800": 19, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "sindresorhus", "commitsCount": 146}, {"username": "Qix-", "commitsCount": 34}, {"username": "kevva", "commitsCount": 3}, {"username": "pedrottimark", "commitsCount": 3}, {"username": "stevemao", "commitsCount": 3}, {"username": "stroncium", "commitsCount": 3}, {"username": "LitoMore", "commitsCount": 2}, {"username": "Richienb", "commitsCount": 2}, {"username": "bokub", "commitsCount": 2}, {"username": "calebboyd", "commitsCount": 2}, {"username": "nazrhyn", "commitsCount": 2}, {"username": "popey456963", "commitsCount": 2}, {"username": "seanmonstar", "commitsCount": 2}, {"username": "tunnckoCore", "commitsCount": 2}, {"username": "vadimdemedes", "commitsCount": 2}, {"username": "AndrewKvalheim", "commitsCount": 1}, {"username": "BendingBender", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "GeorgeGkas", "commitsCount": 1}, {"username": "Haroenv", "commitsCount": 1}, {"username": "KSXGitHub", "commitsCount": 1}, {"username": "L1fescape", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "apsknight", "commitsCount": 1}, {"username": "atifaziz", "commitsCount": 1}, {"username": "bmeck", "commitsCount": 1}, {"username": "brandon93s", "commitsCount": 1}, {"username": "danielhusar", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "eankeen", "commitsCount": 1}, {"username": "farnabaz", "commitsCount": 1}, {"username": "jamiebuilds", "commitsCount": 1}, {"username": "jbnicolai", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "keis", "commitsCount": 1}, {"username": "loilo", "commitsCount": 1}, {"username": "lukeapage", "commitsCount": 1}, {"username": "marado", "commitsCount": 1}, {"username": "marionebl", "commitsCount": 1}, {"username": "martinheidegger", "commitsCount": 1}, {"username": "mischah", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "partheseas", "commitsCount": 1}, {"username": "paulmelnikow", "commitsCount": 1}, {"username": "saadq", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "thefourtheye", "commitsCount": 1}, {"username": "tom-sherman", "commitsCount": 1}, {"username": "toonijn", "commitsCount": 1}, {"username": "vanbujm", "commitsCount": 1}, {"username": "weikinhuang", "commitsCount": 1}, {"username": "yungsters", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 8}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 9}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 31}]}, "source": {"files": {"readmeSize": 11949, "testsSize": 16265}, "badges": [{"urls": {"original": "https://travis-ci.org/chalk/chalk.svg?branch=master", "service": "https://api.travis-ci.org/chalk/chalk.svg?branch=master", "shields": "https://img.shields.io/travis/chalk/chalk/master.svg", "content": "https://img.shields.io/travis/chalk/chalk/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "service": "https://coveralls.io/repos/github/chalk/chalk/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/chalk/chalk/master.svg", "content": "https://img.shields.io/coveralls/chalk/chalk/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/types/chalk.svg", "shields": "https://img.shields.io/npm/types/chalk.svg", "content": "https://img.shields.io/npm/types/chalk.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "types"}}}], "linters": ["editorconfig", "xo"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.75, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 16335, "downloadsCount": 190116290.66666666, "downloadsAcceleration": 728611.7673706242, "dependentsCount": 49654}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9663707204366847, "detail": {"quality": 0.9544871811632935, "popularity": 0.9430339674852417, "maintenance": 0.9998933641938921}}}}, {"@babel/preset-env": {"analyzedAt": "2020-06-30T13:43:11.668Z", "collected": {"metadata": {"name": "@babel/preset-env", "scope": "babel", "version": "7.10.4", "description": "A Babel preset for each environment.", "date": "2020-06-30T13:13:44.282Z", "author": {"name": "Henry Zhu", "email": "hi@henryzoo.com", "username": "hzoo"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-preset-env"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fpreset-env", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"@babel/compat-data": "^7.10.4", "@babel/helper-compilation-targets": "^7.10.4", "@babel/helper-module-imports": "^7.10.4", "@babel/helper-plugin-utils": "^7.10.4", "@babel/plugin-proposal-async-generator-functions": "^7.10.4", "@babel/plugin-proposal-class-properties": "^7.10.4", "@babel/plugin-proposal-dynamic-import": "^7.10.4", "@babel/plugin-proposal-json-strings": "^7.10.4", "@babel/plugin-proposal-nullish-coalescing-operator": "^7.10.4", "@babel/plugin-proposal-numeric-separator": "^7.10.4", "@babel/plugin-proposal-object-rest-spread": "^7.10.4", "@babel/plugin-proposal-optional-catch-binding": "^7.10.4", "@babel/plugin-proposal-optional-chaining": "^7.10.4", "@babel/plugin-proposal-private-methods": "^7.10.4", "@babel/plugin-proposal-unicode-property-regex": "^7.10.4", "@babel/plugin-syntax-async-generators": "^7.8.0", "@babel/plugin-syntax-class-properties": "^7.10.4", "@babel/plugin-syntax-dynamic-import": "^7.8.0", "@babel/plugin-syntax-json-strings": "^7.8.0", "@babel/plugin-syntax-nullish-coalescing-operator": "^7.8.0", "@babel/plugin-syntax-numeric-separator": "^7.10.4", "@babel/plugin-syntax-object-rest-spread": "^7.8.0", "@babel/plugin-syntax-optional-catch-binding": "^7.8.0", "@babel/plugin-syntax-optional-chaining": "^7.8.0", "@babel/plugin-syntax-top-level-await": "^7.10.4", "@babel/plugin-transform-arrow-functions": "^7.10.4", "@babel/plugin-transform-async-to-generator": "^7.10.4", "@babel/plugin-transform-block-scoped-functions": "^7.10.4", "@babel/plugin-transform-block-scoping": "^7.10.4", "@babel/plugin-transform-classes": "^7.10.4", "@babel/plugin-transform-computed-properties": "^7.10.4", "@babel/plugin-transform-destructuring": "^7.10.4", "@babel/plugin-transform-dotall-regex": "^7.10.4", "@babel/plugin-transform-duplicate-keys": "^7.10.4", "@babel/plugin-transform-exponentiation-operator": "^7.10.4", "@babel/plugin-transform-for-of": "^7.10.4", "@babel/plugin-transform-function-name": "^7.10.4", "@babel/plugin-transform-literals": "^7.10.4", "@babel/plugin-transform-member-expression-literals": "^7.10.4", "@babel/plugin-transform-modules-amd": "^7.10.4", "@babel/plugin-transform-modules-commonjs": "^7.10.4", "@babel/plugin-transform-modules-systemjs": "^7.10.4", "@babel/plugin-transform-modules-umd": "^7.10.4", "@babel/plugin-transform-named-capturing-groups-regex": "^7.10.4", "@babel/plugin-transform-new-target": "^7.10.4", "@babel/plugin-transform-object-super": "^7.10.4", "@babel/plugin-transform-parameters": "^7.10.4", "@babel/plugin-transform-property-literals": "^7.10.4", "@babel/plugin-transform-regenerator": "^7.10.4", "@babel/plugin-transform-reserved-words": "^7.10.4", "@babel/plugin-transform-shorthand-properties": "^7.10.4", "@babel/plugin-transform-spread": "^7.10.4", "@babel/plugin-transform-sticky-regex": "^7.10.4", "@babel/plugin-transform-template-literals": "^7.10.4", "@babel/plugin-transform-typeof-symbol": "^7.10.4", "@babel/plugin-transform-unicode-escapes": "^7.10.4", "@babel/plugin-transform-unicode-regex": "^7.10.4", "@babel/preset-modules": "^0.1.3", "@babel/types": "^7.10.4", "browserslist": "^4.12.0", "core-js-compat": "^3.6.2", "invariant": "^2.2.2", "levenary": "^1.1.1", "semver": "^5.5.0"}, "devDependencies": {"@babel/cli": "^7.10.4", "@babel/core": "^7.10.4", "@babel/helper-fixtures": "^7.10.4", "@babel/helper-plugin-test-runner": "^7.10.4", "@babel/plugin-syntax-dynamic-import": "^7.2.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 13}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 27}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 52}], "readme": "# @babel/preset-env\n\n> A Babel preset for each environment.\n\nSee our website [@babel/preset-env](https://babeljs.io/docs/en/next/babel-preset-env.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20preset-env%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/preset-env\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/preset-env --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2173430}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 12345981}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 49626835}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 150312334}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 277812742}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 465609494}], "dependentsCount": 5348, "starsCount": 9}, "github": {"homepage": "https://babel.dev", "starsCount": 36907, "forksCount": 4352, "subscribersCount": 865, "issues": {"count": 11675, "openCount": 796, "distribution": {"3600": 2467, "10800": 919, "32400": 1070, "97200": 1244, "291600": 1063, "874800": 1011, "2624400": 845, "7873200": 837, "23619600": 854, "70858800": 1089, "212576400": 276}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 482}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 201}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 157}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 71}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "noahlemen", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 36}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 145}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 385}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 784}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 466, "testsSize": 723817, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"semver": {"required": "^5.5.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6865000000000001, "health": 0.96875, "branding": 1}, "popularity": {"communityInterest": 42232, "downloadsCount": 50104111.333333336, "downloadsAcceleration": 161586.76423135458, "dependentsCount": 5348}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.2370762220708152}}, "score": {"final": 0.9072503388611453, "detail": {"quality": 0.9572191160753015, "popularity": 0.8829616455066305, "maintenance": 0.8887086517463834}}}}, {"gulp": {"analyzedAt": "2020-06-26T20:54:39.938Z", "collected": {"metadata": {"name": "gulp", "scope": "unscoped", "version": "4.0.2", "description": "The streaming build system.", "keywords": ["build", "stream", "system", "make", "tool", "asset", "pipeline", "series", "parallel", "streaming"], "date": "2019-05-06T17:49:36.803Z", "author": {"name": "Gulp Team", "email": "team@gulpjs.com", "url": "https://gulpjs.com/"}, "publisher": {"username": "phated", "email": "blaine.bublitz@gmail.com"}, "maintainers": [{"username": "contra", "email": "yo@contra.io"}, {"username": "phated", "email": "blaine.bublitz@gmail.com"}], "contributors": [{"name": "Eric Schoffstall", "email": "yo@contra.io"}, {"name": "Blaine Bublitz", "email": "blaine.bublitz@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/gulpjs/gulp.git"}, "links": {"npm": "https://www.npmjs.com/package/gulp", "homepage": "https://gulpjs.com", "repository": "https://github.com/gulpjs/gulp", "bugs": "https://github.com/gulpjs/gulp/issues"}, "license": "MIT", "dependencies": {"glob-watcher": "^5.0.3", "gulp-cli": "^2.2.0", "undertaker": "^1.2.1", "vinyl-fs": "^3.0.0"}, "devDependencies": {"coveralls": "github:phated/node-coveralls#2.x", "eslint": "^2.13.1", "eslint-config-gulp": "^3.0.1", "expect": "^1.20.2", "mkdirp": "^0.5.1", "mocha": "^3.0.0", "nyc": "^10.3.2", "rimraf": "^2.6.3"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<p align=\"center\">\n  <a href=\"https://gulpjs.com\">\n    <img height=\"257\" width=\"114\" src=\"https://raw.githubusercontent.com/gulpjs/artwork/master/gulp-2x.png\">\n  </a>\n  <p align=\"center\">The streaming build system</p>\n</p>\n\n[![NPM version][npm-image]][npm-url] [![Downloads][downloads-image]][npm-url] [![Azure Pipelines Build Status][azure-pipelines-image]][azure-pipelines-url] [![Build Status][travis-image]][travis-url] [![AppVeyor Build Status][appveyor-image]][appveyor-url] [![Coveralls Status][coveralls-image]][coveralls-url] [![OpenCollective Backers][backer-badge]][backer-url] [![OpenCollective Sponsors][sponsor-badge]][sponsor-url] [![Gitter chat][gitter-image]][gitter-url]\n\n\n## What is gulp?\n\n- **Automation** - gulp is a toolkit that helps you automate painful or time-consuming tasks in your development workflow.\n- **Platform-agnostic** - Integrations are built into all major IDEs and people are using gulp with PHP, .NET, Node.js, Java, and other platforms.\n- **Strong Ecosystem** - Use npm modules to do anything you want + over 2000 curated plugins for streaming file transformations\n- **Simple** - By providing only a minimal API surface, gulp is easy to learn and simple to use\n\n## What's new in 4.0?!\n\n* The task system was rewritten from the ground-up, allowing task composition using `series()` and `parallel()` methods\n* The watcher was updated, now using chokidar (no more need for gulp-watch!), with feature parity to our task system\n* First-class support was added for incremental builds using `lastRun()`\n* A `symlink()` method was exposed to create symlinks instead of copying files\n* Built-in support for sourcemaps was added - the gulp-sourcemaps plugin is no longer necessary!\n* Task registration of exported functions - using node or ES exports - is now recommended\n* Custom registries were designed, allowing for shared tasks or augmented functionality\n* Stream implementations were improved, allowing for better conditional and phased builds\n\n## Installation\n\nFollow our [Quick Start guide][quick-start].\n\n## Roadmap\n\nFind out about all our work-in-progress and outstanding issues at https://github.com/orgs/gulpjs/projects.\n\n## Documentation\n\nCheck out the [Getting Started guide][getting-started-guide] and [API docs][api-docs] on our website!\n\n__Excuse our dust! All other docs will be behind until we get everything updated. Please open an issue if something isn't working.__\n\n## Sample `gulpfile.js`\n\nThis file will give you a taste of what gulp does.\n\n```js\nvar gulp = require('gulp');\nvar less = require('gulp-less');\nvar babel = require('gulp-babel');\nvar concat = require('gulp-concat');\nvar uglify = require('gulp-uglify');\nvar rename = require('gulp-rename');\nvar cleanCSS = require('gulp-clean-css');\nvar del = require('del');\n\nvar paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/* Not all tasks need to use streams, a gulpfile is just another node program\n * and you can use all packages available on npm, but it must return either a\n * Promise, a Stream or take a callback and call it\n */\nfunction clean() {\n  // You can use multiple globbing patterns as you would with `gulp.src`,\n  // for example if you are using del 2.0 or above, return its promise\n  return del([ 'assets' ]);\n}\n\n/*\n * Define our tasks using plain functions\n */\nfunction styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nfunction scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\n\n/*\n * Specify if tasks run in series or parallel using `gulp.series` and `gulp.parallel`\n */\nvar build = gulp.series(clean, gulp.parallel(styles, scripts));\n\n/*\n * You can use CommonJS `exports` module notation to declare tasks\n */\nexports.clean = clean;\nexports.styles = styles;\nexports.scripts = scripts;\nexports.watch = watch;\nexports.build = build;\n/*\n * Define default task that can be called by just running `gulp` from cli\n */\nexports.default = build;\n```\n\n## Use latest JavaScript version in your gulpfile\n\n__Most new versions of node support most features that Babel provides, except the `import`/`export` syntax. When only that syntax is desired, rename to `gulpfile.esm.js`, install the [esm][esm-module] module, and skip the Babel portion below.__\n\nNode already supports a lot of __ES2015+__ features, but to avoid compatibility problems we suggest to install Babel and rename your `gulpfile.js` to `gulpfile.babel.js`.\n\n```sh\nnpm install --save-dev @babel/register @babel/core @babel/preset-env\n```\n\nThen create a **.babelrc** file with the preset configuration.\n\n```js\n{\n  \"presets\": [ \"@babel/preset-env\" ]\n}\n```\n\nAnd here's the same sample from above written in **ES2015+**.\n\n```js\nimport gulp from 'gulp';\nimport less from 'gulp-less';\nimport babel from 'gulp-babel';\nimport concat from 'gulp-concat';\nimport uglify from 'gulp-uglify';\nimport rename from 'gulp-rename';\nimport cleanCSS from 'gulp-clean-css';\nimport del from 'del';\n\nconst paths = {\n  styles: {\n    src: 'src/styles/**/*.less',\n    dest: 'assets/styles/'\n  },\n  scripts: {\n    src: 'src/scripts/**/*.js',\n    dest: 'assets/scripts/'\n  }\n};\n\n/*\n * For small tasks you can export arrow functions\n */\nexport const clean = () => del([ 'assets' ]);\n\n/*\n * You can also declare named functions and export them as tasks\n */\nexport function styles() {\n  return gulp.src(paths.styles.src)\n    .pipe(less())\n    .pipe(cleanCSS())\n    // pass in options to the stream\n    .pipe(rename({\n      basename: 'main',\n      suffix: '.min'\n    }))\n    .pipe(gulp.dest(paths.styles.dest));\n}\n\nexport function scripts() {\n  return gulp.src(paths.scripts.src, { sourcemaps: true })\n    .pipe(babel())\n    .pipe(uglify())\n    .pipe(concat('main.min.js'))\n    .pipe(gulp.dest(paths.scripts.dest));\n}\n\n /*\n  * You could even use `export as` to rename exported tasks\n  */\nfunction watchFiles() {\n  gulp.watch(paths.scripts.src, scripts);\n  gulp.watch(paths.styles.src, styles);\n}\nexport { watchFiles as watch };\n\nconst build = gulp.series(clean, gulp.parallel(styles, scripts));\n/*\n * Export a default task\n */\nexport default build;\n```\n\n## Incremental Builds\n\nYou can filter out unchanged files between runs of a task using\nthe `gulp.src` function's `since` option and `gulp.lastRun`:\n```js\nconst paths = {\n  ...\n  images: {\n    src: 'src/images/**/*.{jpg,jpeg,png}',\n    dest: 'build/img/'\n  }\n}\n\nfunction images() {\n  return gulp.src(paths.images.src, {since: gulp.lastRun(images)})\n    .pipe(imagemin({optimizationLevel: 5}))\n    .pipe(gulp.dest(paths.images.dest));\n}\n\nfunction watch() {\n  gulp.watch(paths.images.src, images);\n}\n```\nTask run times are saved in memory and are lost when gulp exits. It will only\nsave time during the `watch` task when running the `images` task\nfor a second time.\n\n## Want to contribute?\n\nAnyone can help make this project better - check out our [Contributing guide](/CONTRIBUTING.md)!\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities.\n\n[![Backers][backers-image]][support-url]\n\n## Sponsors\n\nBecome a sponsor to get your logo on our README on Github.\n\n[![Sponsors][sponsors-image]][support-url]\n\n[downloads-image]: https://img.shields.io/npm/dm/gulp.svg\n[npm-url]: https://www.npmjs.com/package/gulp\n[npm-image]: https://img.shields.io/npm/v/gulp.svg\n\n[azure-pipelines-url]: https://dev.azure.com/gulpjs/gulp/_build/latest?definitionId=1&branchName=master\n[azure-pipelines-image]: https://dev.azure.com/gulpjs/gulp/_apis/build/status/gulp?branchName=master\n\n[travis-url]: https://travis-ci.org/gulpjs/gulp\n[travis-image]: https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci\n\n[appveyor-url]: https://ci.appveyor.com/project/gulpjs/gulp\n[appveyor-image]: https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor\n\n[coveralls-url]: https://coveralls.io/r/gulpjs/gulp\n[coveralls-image]: https://img.shields.io/coveralls/gulpjs/gulp/master.svg\n\n[gitter-url]: https://gitter.im/gulpjs/gulp\n[gitter-image]: https://badges.gitter.im/gulpjs/gulp.svg\n\n[backer-url]: #backers\n[backer-badge]: https://opencollective.com/gulpjs/backers/badge.svg?color=blue\n[sponsor-url]: #sponsors\n[sponsor-badge]: https://opencollective.com/gulpjs/sponsors/badge.svg?color=blue\n\n[support-url]: https://opencollective.com/gulpjs#support\n\n[backers-image]: https://opencollective.com/gulpjs/backers.svg\n[sponsors-image]: https://opencollective.com/gulpjs/sponsors.svg\n\n[quick-start]: https://gulpjs.com/docs/en/getting-started/quick-start\n[getting-started-guide]: https://gulpjs.com/docs/en/getting-started/quick-start\n[api-docs]: https://gulpjs.com/docs/en/api/concepts"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 251816}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1080284}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5595018}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 16731023}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 32914471}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 65850762}], "dependentsCount": 6709, "starsCount": 1429}, "github": {"homepage": "https://gulpjs.com", "starsCount": 31800, "forksCount": 4392, "subscribersCount": 1129, "issues": {"count": 2429, "openCount": 23, "distribution": {"3600": 724, "10800": 292, "32400": 373, "97200": 304, "291600": 188, "874800": 172, "2624400": 119, "7873200": 111, "23619600": 90, "70858800": 41, "212576400": 15}, "isDisabled": false}, "contributors": [{"username": "contra", "commitsCount": 284}, {"username": "phated", "commitsCount": 123}, {"username": "robrich", "commitsCount": 43}, {"username": "janiceilene", "commitsCount": 36}, {"username": "sindresorhus", "commitsCount": 23}, {"username": "tkellen", "commitsCount": 12}, {"username": "floatdrop", "commitsCount": 10}, {"username": "lubelski", "commitsCount": 10}, {"username": "stryju", "commitsCount": 10}, {"username": "stevemao", "commitsCount": 9}, {"username": "callumacrae", "commitsCount": 8}, {"username": "nalbion", "commitsCount": 6}, {"username": "arvindr21", "commitsCount": 5}, {"username": "dinoboff", "commitsCount": 5}, {"username": "jamescrowley", "commitsCount": 5}, {"username": "stevelacy", "commitsCount": 5}, {"username": "terinjokes", "commitsCount": 5}, {"username": "AntouanK", "commitsCount": 4}, {"username": "appleboy", "commitsCount": 4}, {"username": "kt3k", "commitsCount": 4}, {"username": "lazd", "commitsCount": 4}, {"username": "lisposter", "commitsCount": 4}, {"username": "pdehaan", "commitsCount": 4}, {"username": "pkozlowski-opensource", "commitsCount": 4}, {"username": "staxmanade", "commitsCount": 4}, {"username": "CaryLandholt", "commitsCount": 3}, {"username": "SyntaxRules", "commitsCount": 3}, {"username": "asfktz", "commitsCount": 3}, {"username": "beenanner", "commitsCount": 3}, {"username": "breyed", "commitsCount": 3}, {"username": "hughsk", "commitsCount": 3}, {"username": "jedmao", "commitsCount": 3}, {"username": "sanfords", "commitsCount": 3}, {"username": "subhaze", "commitsCount": 3}, {"username": "t3chnoboy", "commitsCount": 3}, {"username": "LoganArnett", "commitsCount": 2}, {"username": "PatrickJS", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "ajoslin", "commitsCount": 2}, {"username": "azu", "commitsCount": 2}, {"username": "azweb76", "commitsCount": 2}, {"username": "baer", "commitsCount": 2}, {"username": "bhough", "commitsCount": 2}, {"username": "carpasse", "commitsCount": 2}, {"username": "chalkers", "commitsCount": 2}, {"username": "cognitom", "commitsCount": 2}, {"username": "damccorm", "commitsCount": 2}, {"username": "darsain", "commitsCount": 2}, {"username": "devWayne", "commitsCount": 2}, {"username": "erquhart", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "fidian", "commitsCount": 2}, {"username": "fritx", "commitsCount": 2}, {"username": "grmlin", "commitsCount": 2}, {"username": "him2him2", "commitsCount": 2}, {"username": "jamiebuilds", "commitsCount": 2}, {"username": "kauegimenes", "commitsCount": 2}, {"username": "kimjoar", "commitsCount": 2}, {"username": "klausbayrhammer", "commitsCount": 2}, {"username": "laurelnaiad", "commitsCount": 2}, {"username": "mariuszskon", "commitsCount": 2}, {"username": "megakote", "commitsCount": 2}, {"username": "shakyShane", "commitsCount": 2}, {"username": "shinnn", "commitsCount": 2}, {"username": "tomByrer", "commitsCount": 2}, {"username": "willpracht", "commitsCount": 2}, {"username": "GAumala", "commitsCount": 1}, {"username": "Lucretiel", "commitsCount": 1}, {"username": "MattSturgeon", "commitsCount": 1}, {"username": "SomethingNew71", "commitsCount": 1}, {"username": "TrySound", "commitsCount": 1}, {"username": "aaronhooper", "commitsCount": 1}, {"username": "b3none", "commitsCount": 1}, {"username": "chalkygames123", "commitsCount": 1}, {"username": "chinhdo", "commitsCount": 1}, {"username": "chrisanderss0n", "commitsCount": 1}, {"username": "chrisjlee", "commitsCount": 1}, {"username": "cssmagic", "commitsCount": 1}, {"username": "dacodekid", "commitsCount": 1}, {"username": "ddprrt", "commitsCount": 1}, {"username": "demurgos", "commitsCount": 1}, {"username": "dirkpuge", "commitsCount": 1}, {"username": "erikkemperman", "commitsCount": 1}, {"username": "jakearchibald", "commitsCount": 1}, {"username": "jeremenichelli", "commitsCount": 1}, {"username": "jmm", "commitsCount": 1}, {"username": "limdauto", "commitsCount": 1}, {"username": "martinvd", "commitsCount": 1}, {"username": "mikestreety", "commitsCount": 1}, {"username": "mimoduo", "commitsCount": 1}, {"username": "nmccready", "commitsCount": 1}, {"username": "ptb", "commitsCount": 1}, {"username": "ralomach", "commitsCount": 1}, {"username": "rninne", "commitsCount": 1}, {"username": "schlpbch", "commitsCount": 1}, {"username": "sttk", "commitsCount": 1}, {"username": "tonyhallett", "commitsCount": 1}, {"username": "xiaoyu2er", "commitsCount": 1}, {"username": "yanxyz", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 9}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 13}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "error"}]}, "source": {"files": {"readmeSize": 9045, "testsSize": 15922, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/gulp.svg", "shields": "https://img.shields.io/npm/dm/gulp.svg", "content": "https://img.shields.io/npm/dm/gulp.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/v/gulp.svg", "shields": "https://img.shields.io/npm/v/gulp.svg", "content": "https://img.shields.io/npm/v/gulp.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/gulpjs/gulp.svg?label=travis-ci", "service": "https://api.travis-ci.org/gulpjs/gulp.svg", "shields": "https://img.shields.io/travis/gulpjs/gulp.svg", "content": "https://img.shields.io/travis/gulpjs/gulp.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg?label=appveyor", "service": "https://ci.appveyor.com/api/projects/status/gulpjs/gulp", "shields": "https://img.shields.io/appveyor/ci/gulpjs/gulp.svg", "content": "https://img.shields.io/appveyor/ci/gulpjs/gulp.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "service": "https://coveralls.io/repos/gulpjs/gulp/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/gulpjs/gulp/master.svg", "content": "https://img.shields.io/coveralls/gulpjs/gulp/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://badges.gitter.im/gulpjs/gulp.svg", "service": "https://badges.gitter.im/gulpjs/gulp.svg", "shields": "https://img.shields.io/gitter/room/gulpjs/gulp.svg", "content": "https://img.shields.io/gitter/room/gulpjs/gulp.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.875, "health": 1, "branding": 1}, "popularity": {"communityInterest": 38849, "downloadsCount": 5577007.666666667, "downloadsAcceleration": 2133.1697678843193, "dependentsCount": 6709}, "maintenance": {"releasesFrequency": 0.024657534246575345, "commitsFrequency": 0.7119349315068493, "openIssues": 1, "issuesDistribution": 0.8475218002972738}}, "score": {"final": 0.7896298203086066, "detail": {"quality": 0.9832341001871262, "popularity": 0.721707086813412, "maintenance": 0.6916060281936416}}}}, {"eslint-plugin-react": {"analyzedAt": "2020-06-30T20:22:51.485Z", "collected": {"metadata": {"name": "eslint-plugin-react", "scope": "unscoped", "version": "7.20.3", "description": "React specific linting rules for ESLint", "keywords": ["eslint", "eslint-plugin", "eslintplugin", "react"], "date": "2020-06-30T20:22:25.907Z", "author": {"name": "Yannick Croissant", "email": "yannick.croissant+npm@gmail.com", "username": "yannickcr"}, "publisher": {"username": "ljharb", "email": "ljharb@gmail.com"}, "maintainers": [{"username": "ljharb", "email": "ljharb@gmail.com"}, {"username": "yannickcr", "email": "yannick.croissant+npm@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/yannickcr/eslint-plugin-react.git"}, "links": {"npm": "https://www.npmjs.com/package/eslint-plugin-react", "homepage": "https://github.com/yannickcr/eslint-plugin-react", "repository": "https://github.com/yannickcr/eslint-plugin-react", "bugs": "https://github.com/yannickcr/eslint-plugin-react/issues"}, "license": "MIT", "dependencies": {"array-includes": "^3.1.1", "array.prototype.flatmap": "^1.2.3", "doctrine": "^2.1.0", "has": "^1.0.3", "jsx-ast-utils": "^2.4.1", "object.entries": "^1.1.2", "object.fromentries": "^2.0.2", "object.values": "^1.1.1", "prop-types": "^15.7.2", "resolve": "^1.17.0", "string.prototype.matchall": "^4.0.2"}, "devDependencies": {"@types/eslint": "^7.2.0", "@types/estree": "0.0.45", "@types/node": "^14.0.14", "@typescript-eslint/parser": "^2.34.0", "babel-eslint": "^8.2.6", "coveralls": "^3.1.0", "eslint": "^3 || ^4 || ^5 || ^6 || ^7", "eslint-config-airbnb-base": "^14.2.0", "eslint-plugin-eslint-plugin": "^2.3.0", "eslint-plugin-import": "^2.22.0", "espree": "^3.5.4", "istanbul": "^0.4.5", "markdown-magic": "^1.0.0", "mocha": "^5.2.0", "semver": "^6.3.0", "sinon": "^7.5.0", "typescript": "^3.9.5", "typescript-eslint-parser": "^20.1.1"}, "peerDependencies": {"eslint": "^3 || ^4 || ^5 || ^6 || ^7"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 8}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 13}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 24}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "ESLint-plugin-React\n===================\n\n[![Maintenance Status][status-image]][status-url] [![NPM version][npm-image]][npm-url] [![Build Status][travis-image]][travis-url] [![Dependency Status][deps-image]][deps-url] [![Coverage Status][coverage-image]][coverage-url] [![Code Climate][climate-image]][climate-url] [![Tidelift][tidelift-image]][tidelift-url]\n\nReact specific linting rules for ESLint\n\n# Installation\n\nInstall [ESLint](https://www.github.com/eslint/eslint) either locally or globally. (Note that locally, per project, is strongly preferred)\n\n```sh\n$ npm install eslint --save-dev\n```\n\nIf you installed `ESLint` globally, you have to install React plugin globally too. Otherwise, install it locally.\n\n```sh\n$ npm install eslint-plugin-react --save-dev\n```\n\n# Configuration\n\nUse [our preset](#recommended) to get reasonable defaults:\n\n```json\n  \"extends\": [\n    \"eslint:recommended\",\n    \"plugin:react/recommended\"\n  ]\n```\n\nYou should also specify settings that will be shared across all the plugin rules. ([More about eslint shared settings](https://eslint.org/docs/user-guide/configuring#adding-shared-settings))\n\n```json5\n{\n  \"settings\": {\n    \"react\": {\n      \"createClass\": \"createReactClass\", // Regex for Component Factory to use,\n                                         // default to \"createReactClass\"\n      \"pragma\": \"React\",  // Pragma to use, default to \"React\"\n      \"version\": \"detect\", // React version. \"detect\" automatically picks the version you have installed.\n                           // You can also use `16.0`, `16.3`, etc, if you want to override the detected value.\n                           // default to latest and warns if missing\n                           // It will default to \"detect\" in the future\n      \"flowVersion\": \"0.53\" // Flow version\n    },\n    \"propWrapperFunctions\": [\n        // The names of any function used to wrap propTypes, e.g. `forbidExtraProps`. If this isn't set, any propTypes wrapped in a function will be skipped.\n        \"forbidExtraProps\",\n        {\"property\": \"freeze\", \"object\": \"Object\"},\n        {\"property\": \"myFavoriteWrapper\"}\n    ],\n    \"linkComponents\": [\n      // Components used as alternatives to <a> for linking, eg. <Link to={ url } />\n      \"Hyperlink\",\n      {\"name\": \"Link\", \"linkAttribute\": \"to\"}\n    ]\n  }\n}\n```\n\nIf you do not use a preset you will need to specify individual rules and add extra configuration.\n\nAdd \"react\" to the plugins section.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ]\n}\n```\n\nEnable JSX support.\n\nWith ESLint 2+\n\n```json\n{\n  \"parserOptions\": {\n    \"ecmaFeatures\": {\n      \"jsx\": true\n    }\n  }\n}\n```\n\nEnable the rules that you would like to use.\n\n```json\n  \"rules\": {\n    \"react/jsx-uses-react\": \"error\",\n    \"react/jsx-uses-vars\": \"error\",\n  }\n```\n\n# List of supported rules\n\n<!-- AUTO-GENERATED-CONTENT:START (BASIC_RULES) -->\n* [react/boolean-prop-naming](docs/rules/boolean-prop-naming.md): Enforces consistent naming for boolean props\n* [react/button-has-type](docs/rules/button-has-type.md): Forbid \"button\" element without an explicit \"type\" attribute\n* [react/default-props-match-prop-types](docs/rules/default-props-match-prop-types.md): Enforce all defaultProps are defined and not \"required\" in propTypes.\n* [react/destructuring-assignment](docs/rules/destructuring-assignment.md): Enforce consistent usage of destructuring assignment of props, state, and context\n* [react/display-name](docs/rules/display-name.md): Prevent missing displayName in a React component definition\n* [react/forbid-component-props](docs/rules/forbid-component-props.md): Forbid certain props on components\n* [react/forbid-dom-props](docs/rules/forbid-dom-props.md): Forbid certain props on DOM Nodes\n* [react/forbid-elements](docs/rules/forbid-elements.md): Forbid certain elements\n* [react/forbid-foreign-prop-types](docs/rules/forbid-foreign-prop-types.md): Forbid using another component's propTypes\n* [react/forbid-prop-types](docs/rules/forbid-prop-types.md): Forbid certain propTypes\n* [react/function-component-definition](docs/rules/function-component-definition.md): Standardize the way function component get defined (fixable)\n* [react/no-access-state-in-setstate](docs/rules/no-access-state-in-setstate.md): Reports when this.state is accessed within setState\n* [react/no-adjacent-inline-elements](docs/rules/no-adjacent-inline-elements.md): Prevent adjacent inline elements not separated by whitespace.\n* [react/no-array-index-key](docs/rules/no-array-index-key.md): Prevent usage of Array index in keys\n* [react/no-children-prop](docs/rules/no-children-prop.md): Prevent passing of children as props.\n* [react/no-danger](docs/rules/no-danger.md): Prevent usage of dangerous JSX props\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md): Report when a DOM element is using both children and dangerouslySetInnerHTML\n* [react/no-deprecated](docs/rules/no-deprecated.md): Prevent usage of deprecated methods\n* [react/no-did-mount-set-state](docs/rules/no-did-mount-set-state.md): Prevent usage of setState in componentDidMount\n* [react/no-did-update-set-state](docs/rules/no-did-update-set-state.md): Prevent usage of setState in componentDidUpdate\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md): Prevent direct mutation of this.state\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md): Prevent usage of findDOMNode\n* [react/no-is-mounted](docs/rules/no-is-mounted.md): Prevent usage of isMounted\n* [react/no-multi-comp](docs/rules/no-multi-comp.md): Prevent multiple component definition per file\n* [react/no-redundant-should-component-update](docs/rules/no-redundant-should-component-update.md): Flag shouldComponentUpdate when extending PureComponent\n* [react/no-render-return-value](docs/rules/no-render-return-value.md): Prevent usage of the return value of React.render\n* [react/no-set-state](docs/rules/no-set-state.md): Prevent usage of setState\n* [react/no-string-refs](docs/rules/no-string-refs.md): Prevent string definitions for references and prevent referencing this.refs\n* [react/no-this-in-sfc](docs/rules/no-this-in-sfc.md): Report \"this\" being used in stateless components\n* [react/no-typos](docs/rules/no-typos.md): Prevent common typos\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md): Detect unescaped HTML entities, which might represent malformed tags\n* [react/no-unknown-property](docs/rules/no-unknown-property.md): Prevent usage of unknown DOM property (fixable)\n* [react/no-unsafe](docs/rules/no-unsafe.md): Prevent usage of unsafe lifecycle methods\n* [react/no-unused-prop-types](docs/rules/no-unused-prop-types.md): Prevent definitions of unused prop types\n* [react/no-unused-state](docs/rules/no-unused-state.md): Prevent definition of unused state fields\n* [react/no-will-update-set-state](docs/rules/no-will-update-set-state.md): Prevent usage of setState in componentWillUpdate\n* [react/prefer-es6-class](docs/rules/prefer-es6-class.md): Enforce ES5 or ES6 class for React Components\n* [react/prefer-read-only-props](docs/rules/prefer-read-only-props.md): Require read-only props. (fixable)\n* [react/prefer-stateless-function](docs/rules/prefer-stateless-function.md): Enforce stateless components to be written as a pure function\n* [react/prop-types](docs/rules/prop-types.md): Prevent missing props validation in a React component definition\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md): Prevent missing React when using JSX\n* [react/require-default-props](docs/rules/require-default-props.md): Enforce a defaultProps definition for every prop that is not a required prop.\n* [react/require-optimization](docs/rules/require-optimization.md): Enforce React components to have a shouldComponentUpdate method\n* [react/require-render-return](docs/rules/require-render-return.md): Enforce ES5 or ES6 class for returning value in render function\n* [react/self-closing-comp](docs/rules/self-closing-comp.md): Prevent extra closing tags for components without children (fixable)\n* [react/sort-comp](docs/rules/sort-comp.md): Enforce component methods order\n* [react/sort-prop-types](docs/rules/sort-prop-types.md): Enforce propTypes declarations alphabetical sorting\n* [react/state-in-constructor](docs/rules/state-in-constructor.md): State initialization in an ES6 class component should be in a constructor\n* [react/static-property-placement](docs/rules/static-property-placement.md): Defines where React component static properties should be positioned.\n* [react/style-prop-object](docs/rules/style-prop-object.md): Enforce style prop value is an object\n* [react/void-dom-elements-no-children](docs/rules/void-dom-elements-no-children.md): Prevent passing of children to void DOM elements (e.g. `<br />`).\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## JSX-specific rules\n\n<!-- AUTO-GENERATED-CONTENT:START (JSX_RULES) -->\n* [react/jsx-boolean-value](docs/rules/jsx-boolean-value.md): Enforce boolean attributes notation in JSX (fixable)\n* [react/jsx-child-element-spacing](docs/rules/jsx-child-element-spacing.md): Ensures inline tags are not rendered without spaces between them\n* [react/jsx-closing-bracket-location](docs/rules/jsx-closing-bracket-location.md): Validate closing bracket location in JSX (fixable)\n* [react/jsx-closing-tag-location](docs/rules/jsx-closing-tag-location.md): Validate closing tag location for multiline JSX (fixable)\n* [react/jsx-curly-brace-presence](docs/rules/jsx-curly-brace-presence.md): Disallow unnecessary JSX expressions when literals alone are sufficient or enfore JSX expressions on literals in JSX children or attributes (fixable)\n* [react/jsx-curly-newline](docs/rules/jsx-curly-newline.md): Enforce consistent line breaks inside jsx curly (fixable)\n* [react/jsx-curly-spacing](docs/rules/jsx-curly-spacing.md): Enforce or disallow spaces inside of curly braces in JSX attributes (fixable)\n* [react/jsx-equals-spacing](docs/rules/jsx-equals-spacing.md): Disallow or enforce spaces around equal signs in JSX attributes (fixable)\n* [react/jsx-filename-extension](docs/rules/jsx-filename-extension.md): Restrict file extensions that may contain JSX\n* [react/jsx-first-prop-new-line](docs/rules/jsx-first-prop-new-line.md): Ensure proper position of the first property in JSX (fixable)\n* [react/jsx-fragments](docs/rules/jsx-fragments.md): Enforce shorthand or standard form for React fragments (fixable)\n* [react/jsx-handler-names](docs/rules/jsx-handler-names.md): Enforce event handler naming conventions in JSX\n* [react/jsx-indent](docs/rules/jsx-indent.md): Validate JSX indentation (fixable)\n* [react/jsx-indent-props](docs/rules/jsx-indent-props.md): Validate props indentation in JSX (fixable)\n* [react/jsx-key](docs/rules/jsx-key.md): Report missing `key` props in iterators/collection literals\n* [react/jsx-max-depth](docs/rules/jsx-max-depth.md): Validate JSX maximum depth\n* [react/jsx-max-props-per-line](docs/rules/jsx-max-props-per-line.md): Limit maximum of props on a single line in JSX (fixable)\n* [react/jsx-no-bind](docs/rules/jsx-no-bind.md): Prevents usage of Function.prototype.bind and arrow functions in React component props\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md): Comments inside children section of tag should be placed inside braces\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md): Enforce no duplicate props\n* [react/jsx-no-literals](docs/rules/jsx-no-literals.md): Prevent using string literals in React component definition\n* [react/jsx-no-script-url](docs/rules/jsx-no-script-url.md): Forbid `javascript:` URLs\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md): Forbid `target=\"_blank\"` attribute without `rel=\"noreferrer\"`\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md): Disallow undeclared variables in JSX\n* [react/jsx-no-useless-fragment](docs/rules/jsx-no-useless-fragment.md): Disallow unnecessary fragments (fixable)\n* [react/jsx-one-expression-per-line](docs/rules/jsx-one-expression-per-line.md): Limit to one expression per line in JSX (fixable)\n* [react/jsx-pascal-case](docs/rules/jsx-pascal-case.md): Enforce PascalCase for user-defined JSX components\n* [react/jsx-props-no-multi-spaces](docs/rules/jsx-props-no-multi-spaces.md): Disallow multiple spaces between inline JSX props (fixable)\n* [react/jsx-props-no-spreading](docs/rules/jsx-props-no-spreading.md): Prevent JSX prop spreading\n* [react/jsx-sort-default-props](docs/rules/jsx-sort-default-props.md): Enforce default props alphabetical sorting\n* [react/jsx-sort-props](docs/rules/jsx-sort-props.md): Enforce props alphabetical sorting (fixable)\n* [react/jsx-space-before-closing](docs/rules/jsx-space-before-closing.md): Validate spacing before closing bracket in JSX (fixable)\n* [react/jsx-tag-spacing](docs/rules/jsx-tag-spacing.md): Validate whitespace in and around the JSX opening and closing brackets (fixable)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md): Prevent React to be marked as unused\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md): Prevent variables used in JSX to be marked as unused\n* [react/jsx-wrap-multilines](docs/rules/jsx-wrap-multilines.md): Prevent missing parentheses around multilines JSX (fixable)\n<!-- AUTO-GENERATED-CONTENT:END -->\n\n## Other useful plugins\n\n- Rules of Hooks: [eslint-plugin-react-hooks](https://github.com/facebook/react/tree/master/packages/eslint-plugin-react-hooks)\n- JSX accessibility: [eslint-plugin-jsx-a11y](https://github.com/evcohen/eslint-plugin-jsx-a11y)\n- React Native: [eslint-plugin-react-native](https://github.com/Intellicode/eslint-plugin-react-native)\n\n# Shareable configurations\n\n## Recommended\n\nThis plugin exports a `recommended` configuration that enforces React good practices.\n\nTo enable this configuration use the `extends` property in your `.eslintrc` config file:\n\n```json\n{\n  \"extends\": [\"eslint:recommended\", \"plugin:react/recommended\"]\n}\n```\n\nSee [ESLint documentation](http://eslint.org/docs/user-guide/configuring#extending-configuration-files) for more information about extending configuration files.\n\nThe rules enabled in this configuration are:\n\n* [react/display-name](docs/rules/display-name.md)\n* [react/jsx-key](docs/rules/jsx-key.md)\n* [react/jsx-no-comment-textnodes](docs/rules/jsx-no-comment-textnodes.md)\n* [react/jsx-no-duplicate-props](docs/rules/jsx-no-duplicate-props.md)\n* [react/jsx-no-target-blank](docs/rules/jsx-no-target-blank.md)\n* [react/jsx-no-undef](docs/rules/jsx-no-undef.md)\n* [react/jsx-uses-react](docs/rules/jsx-uses-react.md)\n* [react/jsx-uses-vars](docs/rules/jsx-uses-vars.md)\n* [react/no-children-prop](docs/rules/no-children-prop.md)\n* [react/no-danger-with-children](docs/rules/no-danger-with-children.md)\n* [react/no-deprecated](docs/rules/no-deprecated.md)\n* [react/no-direct-mutation-state](docs/rules/no-direct-mutation-state.md)\n* [react/no-find-dom-node](docs/rules/no-find-dom-node.md)\n* [react/no-is-mounted](docs/rules/no-is-mounted.md)\n* [react/no-render-return-value](docs/rules/no-render-return-value.md)\n* [react/no-string-refs](docs/rules/no-string-refs.md)\n* [react/no-unescaped-entities](docs/rules/no-unescaped-entities.md)\n* [react/no-unknown-property](docs/rules/no-unknown-property.md)\n* [react/prop-types](docs/rules/prop-types.md)\n* [react/react-in-jsx-scope](docs/rules/react-in-jsx-scope.md)\n* [react/require-render-return](docs/rules/require-render-return.md)\n\n## All\n\nThis plugin also exports an `all` configuration that includes every available rule.\nThis pairs well with the `eslint:all` rule.\n\n```json\n{\n  \"plugins\": [\n    \"react\"\n  ],\n  \"extends\": [\"eslint:all\", \"plugin:react/all\"]\n}\n```\n\n**Note**: These configurations will import `eslint-plugin-react` and enable JSX in [parser options](http://eslint.org/docs/user-guide/configuring#specifying-parser-options).\n\n# License\n\nESLint-plugin-React is licensed under the [MIT License](http://www.opensource.org/licenses/mit-license.php).\n\n\n[npm-url]: https://npmjs.org/package/eslint-plugin-react\n[npm-image]: https://img.shields.io/npm/v/eslint-plugin-react.svg\n\n[travis-url]: https://travis-ci.org/yannickcr/eslint-plugin-react\n[travis-image]: https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg\n\n[deps-url]: https://david-dm.org/yannickcr/eslint-plugin-react\n[deps-image]: https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg\n\n[coverage-url]: https://coveralls.io/r/yannickcr/eslint-plugin-react?branch=master\n[coverage-image]: https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg\n\n[climate-url]: https://codeclimate.com/github/yannickcr/eslint-plugin-react\n[climate-image]: https://img.shields.io/codeclimate/maintainability/yannickcr/eslint-plugin-react.svg\n\n[status-url]: https://github.com/yannickcr/eslint-plugin-react/pulse\n[status-image]: https://img.shields.io/github/last-commit/yannickcr/eslint-plugin-react.svg\n\n[tidelift-url]: https://tidelift.com/subscription/pkg/npm-eslint-plugin-react?utm_source=npm-eslint-plugin-react&utm_medium=referral&utm_campaign=readme\n[tidelift-image]: https://tidelift.com/badges/github/yannickcr/eslint-plugin-react?style=flat"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1128440}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6202887}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 24997677}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 77877082}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 146366200}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 251042837}], "dependentsCount": 7253, "starsCount": 95}, "github": {"starsCount": 6443, "forksCount": 1809, "subscribersCount": 92, "issues": {"count": 2690, "openCount": 487, "distribution": {"3600": 263, "10800": 174, "32400": 246, "97200": 278, "291600": 248, "874800": 256, "2624400": 250, "7873200": 180, "23619600": 224, "70858800": 288, "212576400": 283}, "isDisabled": false}, "contributors": [{"username": "yannickcr", "commitsCount": 510}, {"username": "ljharb", "commitsCount": 179}, {"username": "jseminck", "commitsCount": 87}, {"username": "alexzherdev", "commitsCount": 66}, {"username": "jackyho112", "commitsCount": 63}, {"username": "lencioni", "commitsCount": 51}, {"username": "golopot", "commitsCount": 45}, {"username": "jomasti", "commitsCount": 44}, {"username": "sergei-startsev", "commitsCount": 20}, {"username": "pfhayes", "commitsCount": 19}, {"username": "DianaSuvorova", "commitsCount": 18}, {"username": "TSMMark", "commitsCount": 15}, {"username": "petersendidit", "commitsCount": 14}, {"username": "webOS101", "commitsCount": 13}, {"username": "CalebMorris", "commitsCount": 12}, {"username": "ThiefMaster", "commitsCount": 12}, {"username": "snowypowers", "commitsCount": 12}, {"username": "fatfisz", "commitsCount": 11}, {"username": "yepninja", "commitsCount": 11}, {"username": "brettdh", "commitsCount": 10}, {"username": "jaaberg", "commitsCount": 10}, {"username": "AlexKVal", "commitsCount": 9}, {"username": "dustinsoftware", "commitsCount": 9}, {"username": "drx", "commitsCount": 8}, {"username": "justinanastos", "commitsCount": 8}, {"username": "deecewan", "commitsCount": 7}, {"username": "lukyth", "commitsCount": 7}, {"username": "zertosh", "commitsCount": 7}, {"username": "Daniel15", "commitsCount": 6}, {"username": "RDGthree", "commitsCount": 6}, {"username": "arperry", "commitsCount": 6}, {"username": "dfilipidisz", "commitsCount": 6}, {"username": "kentor", "commitsCount": 6}, {"username": "toshi-toma", "commitsCount": 6}, {"username": "vitorbal", "commitsCount": 6}, {"username": "Cellule", "commitsCount": 5}, {"username": "EvHaus", "commitsCount": 5}, {"username": "haridusenadeera", "commitsCount": 5}, {"username": "kaykayehnn", "commitsCount": 5}, {"username": "tanmoyopenroot", "commitsCount": 5}, {"username": "yuri-sakharov", "commitsCount": 5}, {"username": "Calyhre", "commitsCount": 4}, {"username": "ColCh", "commitsCount": 4}, {"username": "Hypnosphi", "commitsCount": 4}, {"username": "b0gok", "commitsCount": 4}, {"username": "benstepp", "commitsCount": 4}, {"username": "davazp", "commitsCount": 4}, {"username": "eelyafi", "commitsCount": 4}, {"username": "ferhatelmas", "commitsCount": 4}, {"username": "gbakernet", "commitsCount": 4}, {"username": "himynameisdave", "commitsCount": 4}, {"username": "nosilleg", "commitsCount": 4}, {"username": "pawelnvk", "commitsCount": 4}, {"username": "silvenon", "commitsCount": 4}, {"username": "vedadeepta", "commitsCount": 4}, {"username": "ManThursday", "commitsCount": 3}, {"username": "Miziak", "commitsCount": 3}, {"username": "MrHen", "commitsCount": 3}, {"username": "Slumber86", "commitsCount": 3}, {"username": "amerryma", "commitsCount": 3}, {"username": "benmosher", "commitsCount": 3}, {"username": "christophehurpeau", "commitsCount": 3}, {"username": "davidyorr", "commitsCount": 3}, {"username": "dguo", "commitsCount": 3}, {"username": "dreid", "commitsCount": 3}, {"username": "ethanjgoldberg", "commitsCount": 3}, {"username": "evcohen", "commitsCount": 3}, {"username": "gfx", "commitsCount": 3}, {"username": "gitim", "commitsCount": 3}, {"username": "glenjamin", "commitsCount": 3}, {"username": "jakemmarsh", "commitsCount": 3}, {"username": "jenil94", "commitsCount": 3}, {"username": "jetpacmonkey", "commitsCount": 3}, {"username": "jkimbo", "commitsCount": 3}, {"username": "jsnajdr", "commitsCount": 3}, {"username": "louisscruz", "commitsCount": 3}, {"username": "lynxtaa", "commitsCount": 3}, {"username": "marcelmokos", "commitsCount": 3}, {"username": "mathieumg", "commitsCount": 3}, {"username": "pwmckenna", "commitsCount": 3}, {"username": "randycoulman", "commitsCount": 3}, {"username": "shmuga", "commitsCount": 3}, {"username": "wbinnssmith", "commitsCount": 3}, {"username": "wyze", "commitsCount": 3}, {"username": "xeodou", "commitsCount": 3}, {"username": "ybiquitous", "commitsCount": 3}, {"username": "abhishekdev", "commitsCount": 2}, {"username": "coryhouse", "commitsCount": 2}, {"username": "dmason30", "commitsCount": 2}, {"username": "doochik", "commitsCount": 2}, {"username": "dozoisch", "commitsCount": 2}, {"username": "guliashvili", "commitsCount": 2}, {"username": "hank121314", "commitsCount": 2}, {"username": "jedwards1211", "commitsCount": 2}, {"username": "lukeapage", "commitsCount": 2}, {"username": "rafbgarcia", "commitsCount": 2}, {"username": "stevemao", "commitsCount": 2}, {"username": "tom-nexudus", "commitsCount": 2}, {"username": "vkrol", "commitsCount": 2}, {"username": "yacinehmito", "commitsCount": 2}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 10}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 17}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 29}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 69}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 150}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "pending"}]}, "source": {"files": {"readmeSize": 17091, "testsSize": 1339622, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "shields": "https://img.shields.io/npm/v/eslint-plugin-react.svg", "content": "https://img.shields.io/npm/v/eslint-plugin-react.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "service": "https://api.travis-ci.org/yannickcr/eslint-plugin-react.svg?branch=master", "shields": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/travis/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "service": "https://david-dm.org/yannickcr/eslint-plugin-react/dev-status.svg", "shields": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.svg", "content": "https://img.shields.io/david/dev/yannickcr/eslint-plugin-react.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "service": "https://coveralls.io/repos/yannickcr/eslint-plugin-react/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.svg", "content": "https://img.shields.io/coveralls/yannickcr/eslint-plugin-react/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.98, "outdatedDependencies": {"doctrine": {"required": "^2.1.0", "stable": "3.0.0", "latest": "3.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.822, "health": 0.8181818181818181, "branding": 0.6}, "popularity": {"communityInterest": 8539, "downloadsCount": 25959027.333333332, "downloadsAcceleration": 67706.06662861494, "dependentsCount": 7253}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8035596416438994, "detail": {"quality": 0.9725353444232684, "popularity": 0.7956162999531019, "maintenance": 0.6666666666666666}}}}, {"tslint": {"analyzedAt": "2020-05-15T19:40:45.240Z", "collected": {"metadata": {"name": "tslint", "scope": "unscoped", "version": "6.1.2", "description": "An extensible static analysis linter for the TypeScript language", "keywords": ["cli", "typescript", "linter"], "date": "2020-04-27T02:21:04.328Z", "publisher": {"username": "palantir", "email": "pt-vendor-npm@palantir.com"}, "maintainers": [{"username": "palantir", "email": "pt-vendor-npm@palantir.com"}], "repository": {"type": "git", "url": "git+https://github.com/palantir/tslint.git"}, "links": {"npm": "https://www.npmjs.com/package/tslint", "homepage": "https://palantir.github.io/tslint", "repository": "https://github.com/palantir/tslint", "bugs": "https://github.com/palantir/tslint/issues"}, "license": "Apache-2.0", "dependencies": {"@babel/code-frame": "^7.0.0", "builtin-modules": "^1.1.1", "chalk": "^2.3.0", "commander": "^2.12.1", "diff": "^4.0.1", "glob": "^7.1.1", "js-yaml": "^3.13.1", "minimatch": "^3.0.4", "mkdirp": "^0.5.3", "resolve": "^1.3.2", "semver": "^5.3.0", "tslib": "^1.10.0", "tsutils": "^2.29.0"}, "devDependencies": {"@octokit/rest": "^16.24.3", "@types/babel__code-frame": "^7.0.1", "@types/chai": "^3.5.0", "@types/diff": "^3.2.0", "@types/glob": "^5.0.30", "@types/js-yaml": "^3.5.31", "@types/minimatch": "^2.0.29", "@types/mkdirp": "^0.5.2", "@types/mocha": "^5.2.6", "@types/node": "^7.0.29", "@types/resolve": "^0.0.4", "@types/rimraf": "^2.0.2", "@types/semver": "^5.3.30", "chai": "^3.5.0", "husky": "^0.14.3", "json-stringify-pretty-compact": "^1.2.0", "mocha": "^6.1.4", "npm-run-all": "^4.0.2", "nyc": "^14.1.1", "prettier": "~1.16.4", "rimraf": "^2.5.4", "ts-node": "^3.3.0", "tslint": "~5.13.0", "tslint-config-prettier": "^1.18.0", "tslint-plugin-prettier": "^2.0.1", "tslint-test-config-non-relative": "file:test/external/tslint-test-config-non-relative", "typescript": "~3.8.2", "yarn-deduplicate": "^1.1.1"}, "peerDependencies": {"typescript": ">=2.3.0-dev || >=2.4.0-dev || >=2.5.0-dev || >=2.6.0-dev || >=2.7.0-dev || >=2.8.0-dev || >=2.9.0-dev || >=3.0.0-dev || >= 3.1.0-dev || >= 3.2.0-dev"}, "releases": [{"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 2}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 4}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 5}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 12}, {"from": "2018-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 20}], "deprecated": "TSLint has been deprecated in favor of ESLint. Please see https://github.com/palantir/tslint/issues/4534 for more information.", "hasTestScript": true, "readme": "[![NPM version](https://badge.fury.io/js/tslint.svg)](https://badge.fury.io/js/tslint)\n[![Downloads](https://img.shields.io/npm/dm/tslint.svg)](https://npmjs.org/package/tslint)\n[![Dependency Status](https://david-dm.org/palantir/tslint.svg)](https://david-dm.org/palantir/tslint)\n[![devDependency Status](https://david-dm.org/palantir/tslint/dev-status.svg)](https://david-dm.org/palantir/tslint/?type=dev)\n[![peerDependency Status](https://david-dm.org/palantir/tslint/peer-status.svg)](https://david-dm.org/palantir/tslint/?type=peer)\n[![Circle CI](https://circleci.com/gh/palantir/tslint.svg?style=svg)](https://circleci.com/gh/palantir/tslint)\n\n# TSLint\n\n:warning: __TSLint is deprecated.__\n\n> See this issue for more details: [Roadmap: TSLint &rarr; ESLint](https://github.com/palantir/tslint/issues/4534). If you're interested in helping with the TSLint/ESLint migration, please check out our [OSS Fellowship](https://medium.com/palantir/fellowships-for-open-source-developers-3892e6b75ee1) program.\n\nTSLint is an extensible static analysis tool that checks [TypeScript](https://github.com/Microsoft/TypeScript) code for readability, maintainability, and functionality errors. It is widely supported across modern editors & build systems and can be customized with your own lint rules, configurations, and formatters.\n\nTSLint currently supports:\n\n-   an extensive set of core rules\n-   custom lint rules\n-   custom formatters (failure reporters)\n-   inline disabling and enabling of rules with comment flags in source code\n-   configuration presets (`tslint:latest`, `tslint-react`, etc.) and plugin composition\n-   automatic fixing of formatting & style violations\n-   integration with [MSBuild](https://github.com/joshuakgoldberg/tslint.msbuild), [Grunt](https://github.com/palantir/grunt-tslint), [Gulp](https://github.com/panuhorsmalahti/gulp-tslint), [Atom](https://github.com/AtomLinter/linter-tslint), [Eclipse](https://github.com/palantir/eclipse-tslint), [Emacs](https://www.flycheck.org/), [Sublime](https://packagecontrol.io/packages/SublimeLinter-contrib-tslint), [Vim](https://github.com/scrooloose/syntastic), [Visual Studio 2015](https://marketplace.visualstudio.com/items?itemName=MadsKristensen.WebAnalyzer), [Visual Studio 2017](https://marketplace.visualstudio.com/items?itemName=RichNewman.TypeScriptAnalyzer), [Visual Studio code](https://marketplace.visualstudio.com/items?itemName=ms-vscode.vscode-typescript-tslint-plugin) (alternative: use [this extension](https://marketplace.visualstudio.com/items?itemName=eg2.tslint) for TS <3.2), [WebStorm](https://www.jetbrains.com/webstorm/help/tslint.html) and [more](https://palantir.github.io/tslint/usage/third-party-tools/)\n\n## Installation & Usage\n\nPlease refer to the full installation & usage documentation on the [TSLint website](https://palantir.github.io/tslint/). There, you'll find information about\n\n-   [configuration](https://palantir.github.io/tslint/usage/configuration/),\n-   [core rules](https://palantir.github.io/tslint/rules/),\n-   [core formatters](https://palantir.github.io/tslint/formatters/), and\n-   [customization of TSLint](https://palantir.github.io/tslint/develop/custom-rules/).\n-   [inline disabling and enabling of rules with comment flags](https://palantir.github.io/tslint/usage/rule-flags/)\n\n## TSLint Playground\n\nThere is a sandbox environment for TSLint at [palantir.github.io/tslint-playground](https://palantir.github.io/tslint-playground/), which can be used to test rules and see how TSLint works. Issues can be filed against `tslint-playground` [here](https://github.com/palantir/tslint-playground).\n\n## Custom Rules & Plugins\n\n#### Custom rule sets from Palantir\n\n-   [tslint-react](https://github.com/palantir/tslint-react) - Lint rules related to React & JSX.\n-   [tslint-blueprint](https://github.com/palantir/tslint-blueprint) - Lint rules to enforce best practices with [blueprintjs libraries](https://github.com/palantir/blueprint)\n\n#### Custom rule sets from the community\n\nIf we don't have all the rules you're looking for, you can either write your own [custom rules](https://palantir.github.io/tslint/develop/custom-rules/) or use rules implementations developed by the community. The repos below are a good source of custom rules:\n\n-   [ESLint rules for TSLint](https://github.com/buzinas/tslint-eslint-rules) - Improve your TSLint with the missing ESLint Rules\n-   [tslint-microsoft-contrib](https://github.com/Microsoft/tslint-microsoft-contrib) - A set of TSLint rules used on some Microsoft projects\n-   [codelyzer](https://github.com/mgechev/codelyzer) - A set of tslint rules for static code analysis of Angular TypeScript projects\n-   [vrsource-tslint-rules](https://github.com/vrsource/vrsource-tslint-rules)\n-   [tslint-immutable](https://github.com/jonaskello/tslint-immutable) - TSLint rules to disable mutation in TypeScript\n-   [tslint-consistent-codestyle](https://github.com/ajafff/tslint-consistent-codestyle) - TSLint rules to enforce consistent code style in TypeScript\n-   [tslint-sonarts](https://github.com/SonarSource/SonarTS) - Bug-finding rules based on advanced code models to spot hard to find errors in TypeScript\n-   [tslint-clean-code](https://github.com/Glavin001/tslint-clean-code) - A set of TSLint rules inspired by the Clean Code handbook\n-   [rxjs-tslint-rules](https://github.com/cartant/rxjs-tslint-rules) - TSLint rules for RxJS\n\n## Development\n\nPrerequisites:\n\n-   `node` v7+\n-   `yarn` v1.0+\n\n#### Quick Start\n\n```bash\ngit clone git@github.com:palantir/tslint.git --config core.autocrlf=input --config core.eol=lf\nyarn\nyarn compile\nyarn test\n```"}, "npm": {"downloads": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 630658}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3332258}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 14271845}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 42800393}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 78883606}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 149365889}], "dependentsCount": 1923, "starsCount": 69}, "github": {"homepage": "http://palantir.github.io/tslint/", "starsCount": 5758, "forksCount": 942, "subscribersCount": 115, "issues": {"count": 4903, "openCount": 4, "distribution": {"3600": 572, "10800": 306, "32400": 314, "97200": 497, "291600": 441, "874800": 553, "2624400": 516, "7873200": 433, "23619600": 453, "70858800": 622, "212576400": 196}, "isDisabled": false}, "contributors": [{"username": "ashwinr", "commitsCount": 349}, {"username": "adidahiya", "commitsCount": 274}, {"username": "ajafff", "commitsCount": 253}, {"username": "andy-hanson", "commitsCount": 187}, {"username": "nchen63", "commitsCount": 146}, {"username": "gscshoyru", "commitsCount": 130}, {"username": "JKillian", "commitsCount": 71}, {"username": "JoshuaKGoldberg", "commitsCount": 68}, {"username": "DickvdBrink", "commitsCount": 49}, {"username": "andy-ms", "commitsCount": 23}, {"username": "YuichiNukiyama", "commitsCount": 20}, {"username": "IllusionMH", "commitsCount": 19}, {"username": "leeavital", "commitsCount": 19}, {"username": "chrismbarr", "commitsCount": 18}, {"username": "michaelgmiller", "commitsCount": 13}, {"username": "mprobst", "commitsCount": 13}, {"username": "weswigham", "commitsCount": 13}, {"username": "johnwiseheart", "commitsCount": 10}, {"username": "rrogowski", "commitsCount": 10}, {"username": "tanmoyopenroot", "commitsCount": 10}, {"username": "bowenni", "commitsCount": 9}, {"username": "derekcicerone", "commitsCount": 9}, {"username": "nomaed", "commitsCount": 9}, {"username": "am11", "commitsCount": 8}, {"username": "fent", "commitsCount": 8}, {"username": "alexeagle", "commitsCount": 7}, {"username": "bjornstar", "commitsCount": 7}, {"username": "rwaskiewicz", "commitsCount": 7}, {"username": "thmiceli", "commitsCount": 7}, {"username": "HamletDRC", "commitsCount": 6}, {"username": "NaridaL", "commitsCount": 6}, {"username": "ScottSWu", "commitsCount": 6}, {"username": "VincentLanglet", "commitsCount": 6}, {"username": "ericbf", "commitsCount": 6}, {"username": "mohsen1", "commitsCount": 6}, {"username": "pe8ter", "commitsCount": 6}, {"username": "reduckted", "commitsCount": 6}, {"username": "xt0rted", "commitsCount": 6}, {"username": "bencoveney", "commitsCount": 5}, {"username": "calebegg", "commitsCount": 5}, {"username": "donaldpipowitch", "commitsCount": 5}, {"username": "gtanner", "commitsCount": 5}, {"username": "mateuszwitkowski", "commitsCount": 5}, {"username": "myitcv", "commitsCount": 5}, {"username": "pablobirukov", "commitsCount": 5}, {"username": "vvakame", "commitsCount": 5}, {"username": "304NotModified", "commitsCount": 4}, {"username": "ThomasdenH", "commitsCount": 4}, {"username": "cyrilgandon", "commitsCount": 4}, {"username": "danvk", "commitsCount": 4}, {"username": "ericanderson", "commitsCount": 4}, {"username": "mmv", "commitsCount": 4}, {"username": "neoGeneva", "commitsCount": 4}, {"username": "patsissons", "commitsCount": 4}, {"username": "sbj42", "commitsCount": 4}, {"username": "wereHamster", "commitsCount": 4}, {"username": "yyoshiki41", "commitsCount": 4}, {"username": "Pajn", "commitsCount": 3}, {"username": "aboyton", "commitsCount": 3}, {"username": "aprilrd", "commitsCount": 3}, {"username": "arusakov", "commitsCount": 3}, {"username": "bolatovumar", "commitsCount": 3}, {"username": "enessoylu", "commitsCount": 3}, {"username": "fisx", "commitsCount": 3}, {"username": "fondasimone", "commitsCount": 3}, {"username": "irfanhudda", "commitsCount": 3}, {"username": "ksvitkovsky", "commitsCount": 3}, {"username": "mgechev", "commitsCount": 3}, {"username": "nikklassen", "commitsCount": 3}, {"username": "olore", "commitsCount": 3}, {"username": "timocov", "commitsCount": 3}, {"username": "vedadeepta", "commitsCount": 3}, {"username": "vgrigoriu", "commitsCount": 3}, {"username": "ColCh", "commitsCount": 2}, {"username": "DanielKucal", "commitsCount": 2}, {"username": "NN---", "commitsCount": 2}, {"username": "abierbaum", "commitsCount": 2}, {"username": "amacleay", "commitsCount": 2}, {"username": "berickson1", "commitsCount": 2}, {"username": "cheeZery", "commitsCount": 2}, {"username": "ethanresnick", "commitsCount": 2}, {"username": "guidsdo", "commitsCount": 2}, {"username": "ikatyang", "commitsCount": 2}, {"username": "jbsingh", "commitsCount": 2}, {"username": "jez9999", "commitsCount": 2}, {"username": "jmlopez-rod", "commitsCount": 2}, {"username": "joscha", "commitsCount": 2}, {"username": "keradus", "commitsCount": 2}, {"username": "lijunle", "commitsCount": 2}, {"username": "mbelsky", "commitsCount": 2}, {"username": "mitchellwills", "commitsCount": 2}, {"username": "mogzol", "commitsCount": 2}, {"username": "no23reason", "commitsCount": 2}, {"username": "nrathi", "commitsCount": 2}, {"username": "piotrgajow", "commitsCount": 2}, {"username": "saberduck", "commitsCount": 2}, {"username": "ulrichb", "commitsCount": 2}, {"username": "vilic", "commitsCount": 2}, {"username": "vmk1vmk", "commitsCount": 2}], "commits": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 0}, {"from": "2020-04-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 3}, {"from": "2020-02-15T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 9}, {"from": "2019-11-17T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 15}, {"from": "2019-05-16T00:00:00.000Z", "to": "2020-05-15T00:00:00.000Z", "count": 84}], "statuses": [{"context": "ci/circleci: test2.4", "state": "success"}, {"context": "ci/circleci: test3.8", "state": "success"}, {"context": "ci/circleci: testNext", "state": "success"}, {"context": "ci/circleci: test2.8", "state": "success"}, {"context": "ci/circleci: test3.1", "state": "success"}, {"context": "ci/circleci: test3.4", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: testRc", "state": "success"}, {"context": "ci/circleci: test", "state": "success"}, {"context": "ci/circleci: test2.1", "state": "success"}]}, "source": {"files": {"readmeSize": 5617, "testsSize": 1252717, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/tslint.svg", "shields": "https://img.shields.io/npm/dm/tslint.svg", "content": "https://img.shields.io/npm/dm/tslint.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint.svg", "service": "https://david-dm.org/palantir/tslint.svg", "shields": "https://img.shields.io/david/palantir/tslint.svg", "content": "https://img.shields.io/david/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/dev-status.svg", "service": "https://david-dm.org/palantir/tslint/dev-status.svg", "shields": "https://img.shields.io/david/dev/palantir/tslint.svg", "content": "https://img.shields.io/david/dev/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://david-dm.org/palantir/tslint/peer-status.svg", "service": "https://david-dm.org/palantir/tslint/peer-status.svg", "shields": "https://img.shields.io/david/peer/palantir/tslint.svg", "content": "https://img.shields.io/david/peer/palantir/tslint.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "peer"}}}, {"urls": {"original": "https://circleci.com/gh/palantir/tslint.svg?style=svg", "service": "https://circleci.com/gh/palantir/tslint.svg", "shields": "https://img.shields.io/circleci/project/github/palantir/tslint.svg", "content": "https://img.shields.io/circleci/project/github/palantir/tslint.json"}, "info": {"service": "circleci", "type": "build"}}], "linters": ["editorconfig", "prettier", "tslint"], "outdatedDependencies": {"builtin-modules": {"required": "^1.1.1", "stable": "3.1.0", "latest": "3.1.0"}, "mkdirp": {"required": "^0.5.3", "stable": "1.0.4", "latest": "0.5.5"}, "tslib": {"required": "^1.10.0", "stable": "2.0.0", "latest": "2.0.0"}, "chalk": {"required": "^2.3.0", "stable": "4.0.0", "latest": "4.0.0"}, "semver": {"required": "^5.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "tsutils": {"required": "^2.29.0", "stable": "3.17.1", "latest": "3.17.1"}, "commander": {"required": "^2.12.1", "stable": "5.1.0", "latest": "5.1.0"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.85, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 6983, "downloadsCount": 14266797.666666666, "downloadsAcceleration": 23881.7987062405, "dependentsCount": 1923}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8277910958904109, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6441337141914631, "detail": {"quality": 0.5692737693360471, "popularity": 0.685840472243405, "maintenance": 0.6665926231584492}}}}, {"express": {"analyzedAt": "2020-06-26T20:55:57.196Z", "collected": {"metadata": {"name": "express", "scope": "unscoped", "version": "4.17.1", "description": "Fast, unopinionated, minimalist web framework", "keywords": ["express", "framework", "sinatra", "web", "rest", "restful", "router", "app", "api"], "date": "2019-05-26T04:25:34.606Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca"}, "publisher": {"username": "dougwilson", "email": "doug@somethingdoug.com"}, "maintainers": [{"username": "dougwilson", "email": "doug@somethingdoug.com"}, {"username": "jasnell", "email": "jasnell@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}], "contributors": [{"name": "Aaron Heckmann", "email": "aaron.heckmann+github@gmail.com"}, {"name": "Ciaran Jessup", "email": "ciaranj@gmail.com"}, {"name": "Douglas Christopher Wilson", "email": "doug@somethingdoug.com"}, {"name": "Guillermo Rauch", "email": "rauchg@gmail.com"}, {"name": "Jonathan Ong", "email": "me@jongleberry.com"}, {"name": "Roman Shtylman", "email": "shtylman+expressjs@gmail.com"}, {"name": "Young Jae Sim", "email": "hanul@hanul.me"}], "repository": {"type": "git", "url": "git+https://github.com/expressjs/express.git"}, "links": {"npm": "https://www.npmjs.com/package/express", "homepage": "http://expressjs.com/", "repository": "https://github.com/expressjs/express", "bugs": "https://github.com/expressjs/express/issues"}, "license": "MIT", "dependencies": {"accepts": "~1.3.7", "array-flatten": "1.1.1", "body-parser": "1.19.0", "content-disposition": "0.5.3", "content-type": "~1.0.4", "cookie": "0.4.0", "cookie-signature": "1.0.6", "debug": "2.6.9", "depd": "~1.1.2", "encodeurl": "~1.0.2", "escape-html": "~1.0.3", "etag": "~1.8.1", "finalhandler": "~1.1.2", "fresh": "0.5.2", "merge-descriptors": "1.0.1", "methods": "~1.1.2", "on-finished": "~2.3.0", "parseurl": "~1.3.3", "path-to-regexp": "0.1.7", "proxy-addr": "~2.0.5", "qs": "6.7.0", "range-parser": "~1.2.1", "safe-buffer": "5.1.2", "send": "0.17.1", "serve-static": "1.14.1", "setprototypeof": "1.1.1", "statuses": "~1.5.0", "type-is": "~1.6.18", "utils-merge": "1.0.1", "vary": "~1.1.2"}, "devDependencies": {"after": "0.8.2", "connect-redis": "3.4.1", "cookie-parser": "~1.4.4", "cookie-session": "1.3.3", "ejs": "2.6.1", "eslint": "2.13.1", "express-session": "1.16.1", "hbs": "4.0.4", "istanbul": "0.4.5", "marked": "0.6.2", "method-override": "3.0.0", "mocha": "5.2.0", "morgan": "1.9.1", "multiparty": "4.2.1", "pbkdf2-password": "1.2.1", "should": "13.2.3", "supertest": "3.3.0", "vhost": "~3.0.2"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 2359474}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 10658949}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 54269761}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 160279882}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 304141717}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 566469121}], "dependentsCount": 33637, "starsCount": 2566}, "github": {"homepage": "https://expressjs.com", "starsCount": 49098, "forksCount": 8194, "subscribersCount": 1808, "issues": {"count": 4304, "openCount": 149, "distribution": {"3600": 1099, "10800": 375, "32400": 433, "97200": 478, "291600": 349, "874800": 314, "2624400": 308, "7873200": 292, "23619600": 307, "70858800": 203, "212576400": 146}, "isDisabled": false}, "contributors": [{"username": "tj", "commitsCount": 3527}, {"username": "dougwilson", "commitsCount": 987}, {"username": "jonathanong", "commitsCount": 65}, {"username": "defunctzombie", "commitsCount": 54}, {"username": "aheckmann", "commitsCount": 49}, {"username": "slaskis", "commitsCount": 21}, {"username": "ciaranj", "commitsCount": 16}, {"username": "blakeembrey", "commitsCount": 8}, {"username": "notrab", "commitsCount": 8}, {"username": "gmethvin", "commitsCount": 6}, {"username": "rauchg", "commitsCount": 6}, {"username": "riadhchtara", "commitsCount": 6}, {"username": "hiowenluke", "commitsCount": 5}, {"username": "swrh", "commitsCount": 5}, {"username": "chainhelen", "commitsCount": 4}, {"username": "kapouer", "commitsCount": 4}, {"username": "sorribas", "commitsCount": 4}, {"username": "wesleytodd", "commitsCount": 4}, {"username": "Fishrock123", "commitsCount": 3}, {"username": "crandmck", "commitsCount": 3}, {"username": "davglass", "commitsCount": 3}, {"username": "nick", "commitsCount": 3}, {"username": "nullfirm", "commitsCount": 3}, {"username": "oliversalzburg", "commitsCount": 3}, {"username": "sakateka", "commitsCount": 3}, {"username": "Hanul", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "Zoramite", "commitsCount": 2}, {"username": "agchou", "commitsCount": 2}, {"username": "angelsanz", "commitsCount": 2}, {"username": "bartsqueezy", "commitsCount": 2}, {"username": "bdotdub", "commitsCount": 2}, {"username": "benatkin", "commitsCount": 2}, {"username": "damphat", "commitsCount": 2}, {"username": "dpatti", "commitsCount": 2}, {"username": "dshaw", "commitsCount": 2}, {"username": "eivindfjeldstad", "commitsCount": 2}, {"username": "ericf", "commitsCount": 2}, {"username": "felixbuenemann", "commitsCount": 2}, {"username": "hacksparrow", "commitsCount": 2}, {"username": "isaacs", "commitsCount": 2}, {"username": "jakeg", "commitsCount": 2}, {"username": "jonjenkins", "commitsCount": 2}, {"username": "kavu", "commitsCount": 2}, {"username": "matheusazzi", "commitsCount": 2}, {"username": "redsquirrel", "commitsCount": 2}, {"username": "relvao", "commitsCount": 2}, {"username": "roark31337", "commitsCount": 2}, {"username": "saintedlama", "commitsCount": 2}, {"username": "seanjsong", "commitsCount": 2}, {"username": "shime", "commitsCount": 2}, {"username": "tritonrc", "commitsCount": 2}, {"username": "watch-the-stars", "commitsCount": 2}, {"username": "weaver", "commitsCount": 2}, {"username": "yamatt", "commitsCount": 2}, {"username": "A1vinSmith", "commitsCount": 1}, {"username": "AScriver", "commitsCount": 1}, {"username": "HubCodes", "commitsCount": 1}, {"username": "Jianru-Lin", "commitsCount": 1}, {"username": "KoyamaSohei", "commitsCount": 1}, {"username": "Lysander6", "commitsCount": 1}, {"username": "TomHoss", "commitsCount": 1}, {"username": "WORMSS", "commitsCount": 1}, {"username": "adisrivas", "commitsCount": 1}, {"username": "amfern", "commitsCount": 1}, {"username": "amitzur", "commitsCount": 1}, {"username": "ankon", "commitsCount": 1}, {"username": "asafdav2", "commitsCount": 1}, {"username": "baslr", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chillypepper", "commitsCount": 1}, {"username": "cirosantilli", "commitsCount": 1}, {"username": "danez", "commitsCount": 1}, {"username": "davidwood", "commitsCount": 1}, {"username": "estrada9166", "commitsCount": 1}, {"username": "flxwu", "commitsCount": 1}, {"username": "g-k", "commitsCount": 1}, {"username": "gireeshpunathil", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iconoeugen", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "joshuacaron", "commitsCount": 1}, {"username": "kunalspathak", "commitsCount": 1}, {"username": "loganripplinger", "commitsCount": 1}, {"username": "lpage", "commitsCount": 1}, {"username": "mwanago", "commitsCount": 1}, {"username": "nacimgoura", "commitsCount": 1}, {"username": "oztune", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "potato4d", "commitsCount": 1}, {"username": "pravdomil", "commitsCount": 1}, {"username": "seppevs", "commitsCount": 1}, {"username": "stevenanthonyrevo", "commitsCount": 1}, {"username": "thevoidf", "commitsCount": 1}, {"username": "tonyspb", "commitsCount": 1}, {"username": "tunniclm", "commitsCount": 1}, {"username": "yaman-jain", "commitsCount": 1}, {"username": "yanokenken", "commitsCount": 1}, {"username": "zuohuadong", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 12}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 376367, "hasChangelog": true}, "linters": ["editorconfig", "eslint"], "coverage": 1, "outdatedDependencies": {"cookie-signature": {"required": "1.0.6", "stable": "1.1.0", "latest": "1.1.0"}, "array-flatten": {"required": "1.1.1", "stable": "3.0.0", "latest": "3.0.0"}, "setprototypeof": {"required": "1.1.1", "stable": "1.2.0", "latest": "1.2.0"}, "depd": {"required": "~1.1.2", "stable": "2.0.0", "latest": "2.0.0"}, "safe-buffer": {"required": "5.1.2", "stable": "5.2.1", "latest": "5.2.1"}, "statuses": {"required": "~1.5.0", "stable": "2.0.0", "latest": "2.0.0"}, "cookie": {"required": "0.4.0", "stable": "0.4.1", "latest": "0.4.1"}, "debug": {"required": "2.6.9", "stable": "4.1.1", "latest": "4.2.0"}, "path-to-regexp": {"required": "0.1.7", "stable": "6.1.0", "latest": "6.1.0"}, "qs": {"required": "6.7.0", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 0.5, "branding": 0.4}, "popularity": {"communityInterest": 61765, "downloadsCount": 53426627.333333336, "downloadsAcceleration": 98681.96246194828, "dependentsCount": 33637}, "maintenance": {"releasesFrequency": 0.33595890410958906, "commitsFrequency": 0.713904109589041, "openIssues": 1, "issuesDistribution": 0.30637650561177826}}, "score": {"final": 0.9022627676895811, "detail": {"quality": 0.883291673557033, "popularity": 0.9424652860530492, "maintenance": 0.8783211871540115}}}}, {"webpack-dev-server": {"analyzedAt": "2020-06-20T12:28:53.894Z", "collected": {"metadata": {"name": "webpack-dev-server", "scope": "unscoped", "version": "3.11.0", "description": "Serves a webpack app. Updates the browser on changes.", "date": "2020-05-08T15:17:35.787Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "hiroppy", "email": "hello@hiroppy.me"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "spacek33z", "email": "kees@webduck.nl"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-dev-server.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-dev-server", "homepage": "https://github.com/webpack/webpack-dev-server#readme", "repository": "https://github.com/webpack/webpack-dev-server", "bugs": "https://github.com/webpack/webpack-dev-server/issues"}, "license": "MIT", "dependencies": {"ansi-html": "0.0.7", "bonjour": "^3.5.0", "chokidar": "^2.1.8", "compression": "^1.7.4", "connect-history-api-fallback": "^1.6.0", "debug": "^4.1.1", "del": "^4.1.1", "express": "^4.17.1", "html-entities": "^1.3.1", "http-proxy-middleware": "0.19.1", "import-local": "^2.0.0", "internal-ip": "^4.3.0", "ip": "^1.1.5", "is-absolute-url": "^3.0.3", "killable": "^1.0.1", "loglevel": "^1.6.8", "opn": "^5.5.0", "p-retry": "^3.0.1", "portfinder": "^1.0.26", "schema-utils": "^1.0.0", "selfsigned": "^1.10.7", "semver": "^6.3.0", "serve-index": "^1.9.1", "sockjs": "0.3.20", "sockjs-client": "1.4.0", "spdy": "^4.0.2", "strip-ansi": "^3.0.1", "supports-color": "^6.1.0", "url": "^0.11.0", "webpack-dev-middleware": "^3.7.2", "webpack-log": "^2.0.0", "ws": "^6.2.1", "yargs": "^13.3.2"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.6", "@babel/plugin-transform-runtime": "^7.9.6", "@babel/preset-env": "^7.9.6", "@babel/runtime": "^7.9.6", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "babel-loader": "^8.1.0", "body-parser": "^1.19.0", "commitlint-azure-pipelines-cli": "^1.0.3", "copy-webpack-plugin": "^5.1.1", "css-loader": "^2.1.1", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-config-webpack": "^1.2.5", "eslint-plugin-import": "^2.20.2", "execa": "^1.0.0", "file-loader": "^5.1.0", "html-loader": "^0.5.5", "html-webpack-plugin": "^3.2.0", "husky": "^4.2.5", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.5.1", "less": "^3.11.1", "less-loader": "^5.0.0", "lint-staged": "^10.2.2", "marked": "^0.8.2", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "puppeteer": "^1.20.0", "rimraf": "^3.0.2", "standard-version": "^8.0.0", "style-loader": "^1.2.1", "supertest": "^4.0.2", "tcp-port-used": "^1.0.1", "typescript": "^3.8.3", "url-loader": "^3.0.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 10}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 35}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![downloads][downloads]][npm-url]\n[![contributors][contributors]][contributors-url]\n\n# webpack-dev-server\n\nUse [webpack](https://webpack.js.org) with a development server that provides\nlive reloading. This should be used for **development only**.\n\nIt uses [webpack-dev-middleware][middleware-url] under the hood, which provides\nfast in-memory access to the webpack assets.\n\n## Table of Contents\n\n- [Getting Started](#getting-started)\n- [Usage](#usage)\n  - [With the CLI](#with-the-cli)\n  - [With NPM Scripts](#with-npm-scripts)\n  - [The Result](#the-result)\n- [Browser Support](#browser-support)\n- [Support](#support)\n- [Contributing](#contributing)\n- [Attribution](#attribution)\n- [License](#license)\n\n## Getting Started\n\nFirst things first, install the module:\n\n```console\nnpm install webpack-dev-server --save-dev\n```\n\n_Note: While you can install and run webpack-dev-server globally, we recommend\ninstalling it locally. webpack-dev-server will always use a local installation\nover a global one._\n\n## Usage\n\nThere are two main, recommended methods of using the module:\n\n### With the CLI\n\nThe easiest way to use it is with the CLI. In the directory where your\n`webpack.config.js` is, run:\n\n```console\nnode_modules/.bin/webpack-dev-server\n```\n\n_**Note**: Many CLI options are available with `webpack-dev-server`. Explore this [link](https://webpack.js.org/configuration/dev-server/)._\n\n### With NPM Scripts\n\nNPM package.json scripts are a convenient and useful means to run locally installed\nbinaries without having to be concerned about their full paths. Simply define a\nscript as such:\n\n```json\n\"scripts\": {\n  \"start:dev\": \"webpack-dev-server\"\n}\n```\n\nAnd run the following in your terminal/console:\n\n```console\nnpm run start:dev\n```\n\nNPM will automagically reference the binary in `node_modules` for you, and\nexecute the file or command.\n\n### The Result\n\nEither method will start a server instance and begin listening for connections\nfrom `localhost` on port `8080`.\n\nwebpack-dev-server is configured by default to support live-reload of files as\nyou edit your assets while the server is running.\n\nSee [**the documentation**][docs-url] for more use cases and options.\n\n## Browser Support\n\nWhile `webpack-dev-server` transpiles the client (browser) scripts to an ES5\nstate, the project only officially supports the _last two versions of major\nbrowsers_. We simply don't have the resources to support every whacky\nbrowser out there.\n\nIf you find a bug with an obscure / old browser, we would actively welcome a\nPull Request to resolve the bug.\n\n## Support\n\nWe do our best to keep Issues in the repository focused on bugs, features, and\nneeded modifications to the code for the module. Because of that, we ask users\nwith general support, \"how-to\", or \"why isn't this working\" questions to try one\nof the other support channels that are available.\n\nYour first-stop-shop for support for webpack-dev-server should by the excellent\n[documentation][docs-url] for the module. If you see an opportunity for improvement\nof those docs, please head over to the [webpack.js.org repo][wjo-url] and open a\npull request.\n\nFrom there, we encourage users to visit the [webpack Gitter chat][chat-url] and\ntalk to the fine folks there. If your quest for answers comes up dry in chat,\nhead over to [StackOverflow][stack-url] and do a quick search or open a new\nquestion. Remember; It's always much easier to answer questions that include your\n`webpack.config.js` and relevant files!\n\nIf you're twitter-savvy you can tweet [#webpack][hash-url] with your question\nand someone should be able to reach out and lend a hand.\n\nIf you have discovered a :bug:, have a feature suggestion, or would like to see\na modification, please feel free to create an issue on Github. _Note: The issue\ntemplate isn't optional, so please be sure not to remove it, and please fill it\nout completely._\n\n## Contributing\n\nWe welcome your contributions! Please have a read of [CONTRIBUTING.md](CONTRIBUTING.md) for more information on how to get involved.\n\n## Attribution\n\nThis project is heavily inspired by [peerigon/nof5](https://github.com/peerigon/nof5).\n\n## License\n\n#### [MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/webpack-dev-server.svg\n[npm-url]: https://npmjs.com/package/webpack-dev-server\n[node]: https://img.shields.io/node/v/webpack-dev-server.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack/webpack-dev-server.svg\n[deps-url]: https://david-dm.org/webpack/webpack-dev-server\n[tests]: https://dev.azure.com/webpack/webpack-dev-server/_apis/build/status/webpack.webpack-dev-server?branchName=master\n[tests-url]: https://dev.azure.com/webpack/webpack-dev-server/_build/latest?definitionId=7&branchName=master\n[cover]: https://codecov.io/gh/webpack/webpack-dev-server/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack/webpack-dev-server\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[docs-url]: https://webpack.js.org/configuration/dev-server/#devserver\n[hash-url]: https://twitter.com/search?q=webpack\n[middleware-url]: https://github.com/webpack/webpack-dev-middleware\n[stack-url]: https://stackoverflow.com/questions/tagged/webpack-dev-server\n[uglify-url]: https://github.com/webpack-contrib/uglifyjs-webpack-plugin\n[wjo-url]: https://github.com/webpack/webpack.js.org\n[downloads]: https://img.shields.io/npm/dm/webpack-dev-server.svg\n[contributors-url]: https://github.com/webpack/webpack-dev-server/graphs/contributors\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-dev-server.svg"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1117271}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7176498}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 30823770}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 91596860}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 164654593}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 296782926}], "dependentsCount": 6918, "starsCount": 130}, "github": {"starsCount": 6316, "forksCount": 1105, "subscribersCount": 113, "issues": {"count": 2628, "openCount": 87, "distribution": {"3600": 361, "10800": 162, "32400": 194, "97200": 295, "291600": 275, "874800": 292, "2624400": 295, "7873200": 284, "23619600": 263, "70858800": 198, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "SpaceK33z", "commitsCount": 213}, {"username": "sokra", "commitsCount": 146}, {"username": "hiroppy", "commitsCount": 79}, {"username": "evilebottnawi", "commitsCount": 71}, {"username": "renovate[bot]", "commitsCount": 53}, {"username": "shellscape", "commitsCount": 48}, {"username": "Loonride", "commitsCount": 44}, {"username": "michael-ciniawsky", "commitsCount": 23}, {"username": "EslamHiko", "commitsCount": 11}, {"username": "SimenB", "commitsCount": 4}, {"username": "jamesgeorge007", "commitsCount": 4}, {"username": "lbogdan", "commitsCount": 4}, {"username": "mrsharpoblunto", "commitsCount": 4}, {"username": "nougad", "commitsCount": 4}, {"username": "yyx990803", "commitsCount": 4}, {"username": "3846masa", "commitsCount": 3}, {"username": "anikethsaha", "commitsCount": 3}, {"username": "arnihermann", "commitsCount": 3}, {"username": "filipesilva", "commitsCount": 3}, {"username": "jhnns", "commitsCount": 3}, {"username": "stutrek", "commitsCount": 3}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 3}, {"username": "MatthiasWinkelmann", "commitsCount": 2}, {"username": "Telokis", "commitsCount": 2}, {"username": "YoshinoriN", "commitsCount": 2}, {"username": "aves84", "commitsCount": 2}, {"username": "bhavya9107", "commitsCount": 2}, {"username": "chentsulin", "commitsCount": 2}, {"username": "coltonw", "commitsCount": 2}, {"username": "crohde7707", "commitsCount": 2}, {"username": "edi9999", "commitsCount": 2}, {"username": "elliottsj", "commitsCount": 2}, {"username": "everett1992", "commitsCount": 2}, {"username": "glenjamin", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koba04", "commitsCount": 2}, {"username": "mistic", "commitsCount": 2}, {"username": "mjackson", "commitsCount": 2}, {"username": "nekolab", "commitsCount": 2}, {"username": "odinho", "commitsCount": 2}, {"username": "orteth01", "commitsCount": 2}, {"username": "phairoh", "commitsCount": 2}, {"username": "radotzki", "commitsCount": 2}, {"username": "rishabh3112", "commitsCount": 2}, {"username": "ryanwholey", "commitsCount": 2}, {"username": "snitin315", "commitsCount": 2}, {"username": "svsool", "commitsCount": 2}, {"username": "troutowicz", "commitsCount": 2}, {"username": "usefulthink", "commitsCount": 2}, {"username": "watsoncj", "commitsCount": 2}, {"username": "yoannmoinet", "commitsCount": 2}, {"username": "zeen", "commitsCount": 2}, {"username": "zhangyuang", "commitsCount": 2}, {"username": "DylanPiercey", "commitsCount": 1}, {"username": "Ionaru", "commitsCount": 1}, {"username": "OliverJAsh", "commitsCount": 1}, {"username": "addaleax", "commitsCount": 1}, {"username": "akx", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "berthertogen", "commitsCount": 1}, {"username": "cben", "commitsCount": 1}, {"username": "chaos-git", "commitsCount": 1}, {"username": "digitaljohn", "commitsCount": 1}, {"username": "dmohns", "commitsCount": 1}, {"username": "elrumordelaluz", "commitsCount": 1}, {"username": "ematipico", "commitsCount": 1}, {"username": "ferdinando-ferreira", "commitsCount": 1}, {"username": "gabemeola", "commitsCount": 1}, {"username": "greim", "commitsCount": 1}, {"username": "heygrady", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jayjun", "commitsCount": 1}, {"username": "jdb8", "commitsCount": 1}, {"username": "jkrehm", "commitsCount": 1}, {"username": "jleifeld", "commitsCount": 1}, {"username": "jlguenego", "commitsCount": 1}, {"username": "joeldenning", "commitsCount": 1}, {"username": "joonas-lahtinen", "commitsCount": 1}, {"username": "jvasseur", "commitsCount": 1}, {"username": "lukebro", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "marcofugaro", "commitsCount": 1}, {"username": "mlrawlings", "commitsCount": 1}, {"username": "niedzielski", "commitsCount": 1}, {"username": "numb86", "commitsCount": 1}, {"username": "oNaiPs", "commitsCount": 1}, {"username": "orenfromberg", "commitsCount": 1}, {"username": "patrickhrastnik", "commitsCount": 1}, {"username": "pranshuchittora", "commitsCount": 1}, {"username": "rajkeshwar", "commitsCount": 1}, {"username": "rlamana", "commitsCount": 1}, {"username": "roblan", "commitsCount": 1}, {"username": "samsam2310", "commitsCount": 1}, {"username": "sarbbottam", "commitsCount": 1}, {"username": "smelukov", "commitsCount": 1}, {"username": "sottar", "commitsCount": 1}, {"username": "tarrall", "commitsCount": 1}, {"username": "trescenzi", "commitsCount": 1}, {"username": "wood1986", "commitsCount": 1}, {"username": "yi-ge", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 48}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 193}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 5925, "testsSize": 336126, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/v/webpack-dev-server.svg", "content": "https://img.shields.io/npm/v/webpack-dev-server.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack/webpack-dev-server.svg", "service": "https://david-dm.org/webpack/webpack-dev-server.svg", "shields": "https://img.shields.io/david/webpack/webpack-dev-server.svg", "content": "https://img.shields.io/david/webpack/webpack-dev-server.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "shields": "https://img.shields.io/npm/dm/webpack-dev-server.svg", "content": "https://img.shields.io/npm/dm/webpack-dev-server.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"strip-ansi": {"required": "^3.0.1", "stable": "6.0.0", "latest": "6.0.0"}, "import-local": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "p-retry": {"required": "^3.0.1", "stable": "4.2.0", "latest": "4.2.0"}, "webpack-log": {"required": "^2.0.0", "stable": "3.0.1", "latest": "3.0.1"}, "del": {"required": "^4.1.1", "stable": "5.1.0", "latest": "5.1.0"}, "internal-ip": {"required": "^4.3.0", "stable": "6.0.0", "latest": "6.0.0"}, "opn": {"required": "^5.5.0", "stable": "6.0.0", "latest": "6.0.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}, "schema-utils": {"required": "^1.0.0", "stable": "2.7.0", "latest": "2.7.0"}, "ws": {"required": "^6.2.1", "stable": "7.3.0", "latest": "7.3.0"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "http-proxy-middleware": {"required": "0.19.1", "stable": "1.0.4", "latest": "0.19.2"}, "yargs": {"required": "^13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 7764, "downloadsCount": 30532286.666666668, "downloadsAcceleration": 78999.7312975647, "dependentsCount": 6918}, "maintenance": {"releasesFrequency": 0.9561643835616438, "commitsFrequency": 0.9354520547945205, "openIssues": 1, "issuesDistribution": 0.540581968821347}}, "score": {"final": 0.9074740145659979, "detail": {"quality": 0.9375315118157597, "popularity": 0.7989126842435409, "maintenance": 0.9902717758172307}}}}, {"webpack-cli": {"analyzedAt": "2020-06-18T12:36:48.182Z", "collected": {"metadata": {"name": "webpack-cli", "scope": "unscoped", "version": "3.3.12", "description": "CLI for webpack & friends", "keywords": ["webpack", "cli", "scaffolding", "module", "bundler", "web"], "date": "2020-06-18T12:35:37.901Z", "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "ematipico", "email": "my.burning@gmail.com"}, {"username": "ev1stensberg", "email": "evenstensberg@gmail.com"}, {"username": "sendilkumarn", "email": "sendilkumarn@live.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack/webpack-cli.git"}, "links": {"npm": "https://www.npmjs.com/package/webpack-cli", "homepage": "https://github.com/webpack/webpack-cli#readme", "repository": "https://github.com/webpack/webpack-cli", "bugs": "https://github.com/webpack/webpack-cli/issues"}, "license": "MIT", "dependencies": {"chalk": "^2.4.2", "cross-spawn": "^6.0.5", "enhanced-resolve": "^4.1.1", "findup-sync": "^3.0.0", "global-modules": "^2.0.0", "import-local": "^2.0.0", "interpret": "^1.4.0", "loader-utils": "^1.4.0", "supports-color": "^6.1.0", "v8-compile-cache": "^2.1.1", "yargs": "^13.3.2"}, "devDependencies": {"@babel/preset-env": "^7.8.3", "@babel/register": "7.8.3", "@commitlint/cli": "8.1.0", "@commitlint/config-lerna-scopes": "8.0.0", "@commitlint/travis-cli": "8.0.0", "@strictsoftware/typedoc-plugin-monorepo": "0.2.1", "@types/jest": "24.9.1", "@types/node": "12.0.8", "@typescript-eslint/eslint-plugin": "1.10.2", "@typescript-eslint/parser": "1.10.2", "babel-preset-env": "^1.7.0", "babel-preset-jest": "24.9.0", "codecov": "3.5.0", "commitizen": "4.0.3", "commitlint": "^8.1.0", "commitlint-config-cz": "0.12.0", "conventional-changelog-cli": "2.0.21", "cz-customizable": "6.2.0", "eslint": "5.16.0", "eslint-config-prettier": "5.0.0", "eslint-plugin-node": "9.1.0", "eslint-plugin-prettier": "3.1.0", "esm": "3.2.25", "execa": "1.0.0", "husky": "2.4.1", "jest": "24.9.0", "jest-cli": "24.9.0", "jest-junit": "6.4.0", "lerna": "3.15.0", "lint-staged": "8.2.1", "nyc": "14.1.1", "prettier": "1.18.2", "prettier-eslint-cli": "5.0.0", "readable-stream": "3.4.0", "rimraf": "2.6.3", "schema-utils": "1.0.0", "ts-jest": "24.0.2", "ts-node": "8.3.0", "typescript": "3.5.2", "webpack": "4.x.x", "webpack-dev-server": "3.7.2"}, "peerDependencies": {"webpack": "4.x.x"}, "releases": [{"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 0}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 6}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 15}, {"from": "2018-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 32}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n    <a href=\"https://github.com/webpack/webpack-cli\">\n        <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n    </a>\n</div>\n\n<h1 align=\"center\">webpack CLI</h1>\n\n<p align=\"center\">\n  The official CLI of webpack\n</p>\n<br>\n\n[![npm][npm]][npm-url]\n[![Build Status][build-status]][build-status-url]\n[![Build2 Status][build-status-azure]][build-status-azure-url]\n[![deps][deps]][deps-url]\n[![Code Climate][maintainability]][maintainability-url]\n[![chat on gitter][chat]][chat-url]\n[![Install Size][size]][size-url]\n[![Downloads][downloads]][downloads-url]\n[![lerna][lerna]][lerna-url]\n[![GitHub contributors][contributors]][contributors-url]\n\n-   [About](#about)\n    -   [How to install](#how-to-install)\n-   [Packages](#packages)\n    -   [Commands](#commands)\n    -   [Utilities](#utilities)\n-   [Getting started](#getting-started)\n-   [webpack CLI Scaffolds](#webpack-cli-scaffolds)\n-   [Contributing and Internal Documentation](#contributing-and-internal-documentation)\n-   [Open Collective](#open-collective)\n\n## About\n\nwebpack CLI provides a flexible set of commands for developers to increase speed when setting up a custom webpack project. As of webpack v4, webpack is not expecting a configuration file, but often developers want to create a more custom webpack configuration based on their use-cases and needs. webpack CLI addresses these needs by providing a set of tools to improve the setup of custom webpack configuration.\n\n### How to install\n\nWhen you have followed the [Getting Started](https://webpack.js.org/guides/getting-started/) guide of webpack then webpack CLI is already installed!\n\nOtherwise `npm install --save-dev webpack-cli` or `yarn add webpack-cli --dev` will install it.\n\n## Packages\n\nWe organize webpack CLI as a multi-package repository using [lerna](https://github.com/lerna/lerna). Every command has a dedicated subfolder in the `packages` Folder. Here's a summary of commands provided by the CLI.\n\n### Commands\n\nSupporting developers is an important task for webpack CLI. Thus, webpack CLI provides different commands for many common tasks.\n\n-   [`webpack-cli init`](./packages/init/README.md#webpack-cli-init) - Create a new webpack configuration.\n-   [`webpack-cli info`](./packages/info/README.md#webpack-cli-info) - Returns information related to the local environment.\n-   [`webpack-cli migrate`](./packages/migrate/README.md#webpack-cli-migrate) - Migrate project from one version to another.\n-   [`webpack-cli generate-plugin`](./packages/generate-plugin/README.md#webpack-cli-generate-plugin) - Initiate new plugin project.\n-   [`webpack-cli generate-loader`](./packages/generate-loader/README.md#webpack-cli-generate-loader) - Initiate new loader project.\n-   [`webpack-cli serve`](./packages/serve/README.md#webpack-cli-serve) - Use webpack with a development server that provides live reloading.\n\n### Utilities\n\nThe project also has several utility packages which are used by other commands\n\n-   [`utils`](./packages/utils/README.md) - Several utilities used across webpack-cli.\n-   [`generators`](./packages/generators/README.md) - Contains all webpack-cli related yeoman generators.\n-   [`webpack-scaffold`](./packages/webpack-scaffold/README.md) - Utilities to create a webpack scaffold.\n\n## Getting started\n\nWhen you have followed the [Getting Started](https://webpack.js.org/guides/getting-started/) guide of webpack then webpack CLI is already installed! Otherwise, you would need to install webpack CLI and the packages you want to use. If we want to use the `init` command to create a new `webpack.config.js` configuration file:\n\n```sh\nnpm i webpack-cli @webpack-cli/init\nnpx webpack-cli init\n```\n\nYou will be prompted for some questions about what how you want to generate your config file when running the `init` command so webpack CLI can provide the best fitting configuration.\n\n## webpack CLI Scaffolds\n\nWith v3 of webpack CLI, we introduced scaffolding as an integral part of the CLI. Our goal is to simplify the creation of webpack configurations for different purposes. Additionally, sharing such solutions with the community is beneficial and with webpack, we want to allow this. We provide `webpack-scaffold` as a utility suite for creating these scaffolds. It contains functions that could be of use for creating a scaffold yourself.\n\nYou can read more about [Scaffolding](https://webpack.js.org/guides/scaffolding), learn [How to compose a webpack-scaffold?](https://webpack.js.org/contribute/writing-a-scaffold) or generate one with [webpack-scaffold-starter](https://github.com/rishabh3112/webpack-scaffold-starter).\n\n## Contributing and Internal Documentation\n\nThe webpack family welcomes any contributor, small or big. We are happy to elaborate, guide you through the source code and find issues you might want to work on! To get started have a look at our [documentation on contributing](./.github/CONTRIBUTING.md).\n\n## Open Collective\n\nIf you like **webpack**, please consider donating to our [Open Collective](https://opencollective.com/webpack) to help us maintain it.\n\n[build-status]: https://travis-ci.org/webpack/webpack-cli.svg\n[build-status-url]: https://travis-ci.org/webpack/webpack-cli\n[build-status-azure]: https://dev.azure.com/webpack/webpack/_apis/build/status/webpack.webpack-cli\n[build-status-azure-url]: https://dev.azure.com/webpack/webpack/_build/latest?definitionId=4\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[contributors]: https://img.shields.io/github/contributors/webpack/webpack-cli.svg\n[contributors-url]: https://github.com/webpack/webpack-cli/graphs/contributors\n[deps]: https://img.shields.io/david/webpack/webpack.svg\n[deps-url]: https://david-dm.org/webpack/webpack-cli\n[downloads]: https://img.shields.io/npm/dw/webpack-cli.svg\n[downloads-url]: https://www.npmjs.com/package/webpack-cli\n[lerna]: https://img.shields.io/badge/maintained%20with-lerna-cc00ff.svg\n[lerna-url]: http://www.lernajs.io/\n[npm]: https://img.shields.io/npm/v/webpack-cli.svg\n[npm-url]: https://www.npmjs.com/package/webpack-cli\n[maintainability]: https://codeclimate.com/github/webpack/webpack-cli/badges/gpa.svg\n[maintainability-url]: https://codeclimate.com/github/webpack/webpack-cli\n[size]: https://packagephobia.now.sh/badge?p=webpack-cli\n[size-url]: https://packagephobia.now.sh/result?p=webpack-cli"}, "npm": {"downloads": [{"from": "2020-06-17T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 762753}, {"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 3958237}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 16981839}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 50104116}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 89221701}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 158546018}], "dependentsCount": 2655, "starsCount": 10}, "github": {"homepage": "https://webpack.js.org/api/cli", "starsCount": 1865, "forksCount": 363, "subscribersCount": 52, "issues": {"count": 1631, "openCount": 93, "distribution": {"3600": 156, "10800": 66, "32400": 148, "97200": 233, "291600": 271, "874800": 236, "2624400": 184, "7873200": 170, "23619600": 103, "70858800": 59, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "evenstensberg", "commitsCount": 449}, {"username": "dhruvdutt", "commitsCount": 123}, {"username": "rishabh3112", "commitsCount": 112}, {"username": "anshumanv", "commitsCount": 81}, {"username": "jamesgeorge007", "commitsCount": 74}, {"username": "ematipico", "commitsCount": 66}, {"username": "misterdev", "commitsCount": 60}, {"username": "Loonride", "commitsCount": 58}, {"username": "snitin315", "commitsCount": 56}, {"username": "pranshuchittora", "commitsCount": 46}, {"username": "hemal7735", "commitsCount": 39}, {"username": "anikethsaha", "commitsCount": 22}, {"username": "abenezerabebe", "commitsCount": 19}, {"username": "okonet", "commitsCount": 19}, {"username": "lakatostamas", "commitsCount": 16}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "sendilkumarn", "commitsCount": 13}, {"username": "DanielaValero", "commitsCount": 10}, {"username": "kingdaro", "commitsCount": 10}, {"username": "pksjce", "commitsCount": 8}, {"username": "evilebottnawi", "commitsCount": 7}, {"username": "godcrampy", "commitsCount": 7}, {"username": "EvsChen", "commitsCount": 6}, {"username": "DanielRuf", "commitsCount": 5}, {"username": "EugeneHlushko", "commitsCount": 5}, {"username": "nilliams", "commitsCount": 5}, {"username": "PlayMa256", "commitsCount": 4}, {"username": "bitpshr", "commitsCount": 4}, {"username": "dylanonelson", "commitsCount": 4}, {"username": "sokra", "commitsCount": 4}, {"username": "TheLarkInn", "commitsCount": 3}, {"username": "anu-007", "commitsCount": 3}, {"username": "jbottigliero", "commitsCount": 3}, {"username": "ryanclark", "commitsCount": 3}, {"username": "smelukov", "commitsCount": 3}, {"username": "avivr", "commitsCount": 2}, {"username": "himanshu010", "commitsCount": 2}, {"username": "jayjun", "commitsCount": 2}, {"username": "julioxavierr", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "AjayPoshak", "commitsCount": 1}, {"username": "AviVahl", "commitsCount": 1}, {"username": "BrooonS", "commitsCount": 1}, {"username": "CroMarmot", "commitsCount": 1}, {"username": "FadySamirSadek", "commitsCount": 1}, {"username": "Mistyyyy", "commitsCount": 1}, {"username": "NaviMarella", "commitsCount": 1}, {"username": "Parikshit-Hooda", "commitsCount": 1}, {"username": "Zarthus", "commitsCount": 1}, {"username": "aman29271", "commitsCount": 1}, {"username": "amitport", "commitsCount": 1}, {"username": "andersk", "commitsCount": 1}, {"username": "armujahid", "commitsCount": 1}, {"username": "atenni", "commitsCount": 1}, {"username": "axe312ger", "commitsCount": 1}, {"username": "azure-pipelines[bot]", "commitsCount": 1}, {"username": "billyjanitsch", "commitsCount": 1}, {"username": "buoyantair", "commitsCount": 1}, {"username": "chaseadamsio", "commitsCount": 1}, {"username": "connorjclark", "commitsCount": 1}, {"username": "davidstaheli", "commitsCount": 1}, {"username": "dfederm", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eavichay", "commitsCount": 1}, {"username": "fokusferit", "commitsCount": 1}, {"username": "greenkeeperio-bot", "commitsCount": 1}, {"username": "harikrishnana2021", "commitsCount": 1}, {"username": "ianjsikes", "commitsCount": 1}, {"username": "izaakschroeder", "commitsCount": 1}, {"username": "jeffin143", "commitsCount": 1}, {"username": "jevancc", "commitsCount": 1}, {"username": "jsoref", "commitsCount": 1}, {"username": "kabirbaidhya", "commitsCount": 1}, {"username": "karanjthakkar", "commitsCount": 1}, {"username": "liquidslr", "commitsCount": 1}, {"username": "manu-chroma", "commitsCount": 1}, {"username": "maraisr", "commitsCount": 1}, {"username": "mohitm15", "commitsCount": 1}, {"username": "noscripter", "commitsCount": 1}, {"username": "ohana54", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "pastak", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "peter-mouland", "commitsCount": 1}, {"username": "prod3v3loper", "commitsCount": 1}, {"username": "qkdreyer", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "robertjmason", "commitsCount": 1}, {"username": "rossipedia", "commitsCount": 1}, {"username": "sfger", "commitsCount": 1}, {"username": "stephtr", "commitsCount": 1}, {"username": "sumit-gupta91", "commitsCount": 1}, {"username": "tabrindle", "commitsCount": 1}, {"username": "tbroadley", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "vagisha-nidhi", "commitsCount": 1}, {"username": "xlozinguez", "commitsCount": 1}, {"username": "xxczaki", "commitsCount": 1}], "commits": [{"from": "2020-06-11T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 8}, {"from": "2020-05-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 42}, {"from": "2020-03-20T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 154}, {"from": "2019-12-21T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 270}, {"from": "2019-06-19T00:00:00.000Z", "to": "2020-06-18T00:00:00.000Z", "count": 524}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 6400, "testsSize": 174483, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://travis-ci.org/webpack/webpack-cli.svg", "service": "https://api.travis-ci.org/webpack/webpack-cli.svg", "shields": "https://img.shields.io/travis/webpack/webpack-cli.svg", "content": "https://img.shields.io/travis/webpack/webpack-cli.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}, {"urls": {"original": "https://img.shields.io/david/webpack/webpack.svg", "service": "https://david-dm.org/webpack/webpack.svg", "shields": "https://img.shields.io/david/webpack/webpack.svg", "content": "https://img.shields.io/david/webpack/webpack.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://img.shields.io/npm/dw/webpack-cli.svg", "shields": "https://img.shields.io/npm/dw/webpack-cli.svg", "content": "https://img.shields.io/npm/dw/webpack-cli.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/npm/v/webpack-cli.svg", "shields": "https://img.shields.io/npm/v/webpack-cli.svg", "content": "https://img.shields.io/npm/v/webpack-cli.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.47, "outdatedDependencies": {"import-local": {"required": "^2.0.0", "stable": "3.0.2", "latest": "3.0.2"}, "findup-sync": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}, "loader-utils": {"required": "^1.4.0", "stable": "2.0.0", "latest": "2.0.0"}, "interpret": {"required": "^1.4.0", "stable": "2.2.0", "latest": "2.2.0"}, "supports-color": {"required": "^6.1.0", "stable": "7.1.0", "latest": "7.1.0"}, "cross-spawn": {"required": "^6.0.5", "stable": "7.0.3", "latest": "7.0.3"}, "chalk": {"required": "^2.4.2", "stable": "4.1.0", "latest": "4.1.0"}, "yargs": {"required": "^13.3.2", "stable": "15.3.1", "latest": "15.4.0-beta.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9205, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 2388, "downloadsCount": 16701372, "downloadsAcceleration": 48248.0281392694, "dependentsCount": 2655}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.7591154069240844}}, "score": {"final": 0.8651371288610925, "detail": {"quality": 0.9282886670037345, "popularity": 0.6769960771707568, "maintenance": 0.9991482907148783}}}}, {"rollup": {"analyzedAt": "2020-06-26T19:44:57.252Z", "collected": {"metadata": {"name": "rollup", "scope": "unscoped", "version": "2.18.1", "description": "Next-generation ES module bundler", "keywords": ["modules", "bundler", "bundling", "es6", "optimizer"], "date": "2020-06-26T19:44:06.908Z", "author": {"name": "Rich Harris"}, "publisher": {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, "maintainers": [{"username": "eventualbuddha", "email": "me@brian-donovan.com"}, {"username": "lukastaegert", "email": "lukas.taegert@tngtech.com"}, {"username": "rich_harris", "email": "richard.a.harris@gmail.com"}, {"username": "trysound", "email": "trysound@yandex.ru"}, {"username": "victorystick", "email": "victorystick@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/rollup/rollup.git"}, "links": {"npm": "https://www.npmjs.com/package/rollup", "homepage": "https://rollupjs.org/", "repository": "https://github.com/rollup/rollup", "bugs": "https://github.com/rollup/rollup/issues"}, "license": "MIT", "dependencies": {"fsevents": "~2.1.2"}, "devDependencies": {"@rollup/plugin-alias": "^3.1.1", "@rollup/plugin-buble": "^0.21.3", "@rollup/plugin-commonjs": "^13.0.0", "@rollup/plugin-json": "^4.1.0", "@rollup/plugin-node-resolve": "^8.0.1", "@rollup/plugin-replace": "^2.3.3", "@types/micromatch": "^4.0.1", "@types/node": "^14.0.11", "@types/require-relative": "^0.8.0", "@types/signal-exit": "^3.0.0", "@types/yargs-parser": "^15.0.0", "acorn": "^7.3.1", "acorn-class-fields": "^0.3.6", "acorn-jsx": "^5.2.0", "acorn-numeric-separator": "^0.3.2", "acorn-static-class-features": "^0.2.3", "acorn-walk": "^7.1.1", "buble": "^0.20.0", "chokidar": "^3.4.0", "codecov": "^3.7.0", "colorette": "^1.2.0", "core-js": "^3.6.5", "cross-os": "^1.3.0", "date-time": "^3.1.0", "es5-shim": "^4.5.14", "es6-shim": "^0.35.5", "eslint": "^7.2.0", "eslint-plugin-import": "^2.21.1", "execa": "^4.0.2", "fixturify": "^2.1.0", "hash.js": "^1.1.7", "husky": "^4.2.5", "is-reference": "^1.2.0", "lint-staged": "^10.2.9", "locate-character": "^2.0.5", "magic-string": "^0.25.7", "markdownlint-cli": "^0.23.1", "micromatch": "^4.0.2", "mocha": "^7.2.0", "node-fetch": "^2.6.0", "nyc": "^15.1.0", "prettier": "^2.0.5", "pretty-bytes": "^5.3.0", "pretty-ms": "^7.0.0", "require-relative": "^0.8.7", "requirejs": "^2.3.6", "rollup": "^2.18.0", "rollup-plugin-license": "^2.1.0", "rollup-plugin-string": "^3.0.0", "rollup-plugin-terser": "^6.1.0", "rollup-plugin-thatworks": "^1.0.4", "rollup-plugin-typescript": "^1.0.1", "rollup-pluginutils": "^2.8.2", "sander": "^0.6.0", "shx": "^0.3.2", "signal-exit": "^3.0.3", "source-map": "^0.7.3", "source-map-support": "^0.5.19", "sourcemap-codec": "^1.4.8", "systemjs": "^6.3.2", "terser": "^4.7.0", "tslib": "^2.0.0", "tslint": "^6.1.2", "typescript": "^3.9.5", "url-parse": "^1.4.7", "yargs-parser": "^18.1.3"}, "optionalDependencies": {"fsevents": "~2.1.2"}, "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 14}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 46}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 67}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 116}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 206}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Rollup\n\n<p align=\"center\">\n  <a href=\"https://www.npmjs.com/package/rollup\">\n    <img src=\"https://img.shields.io/npm/v/rollup.svg\" alt=\"npm version\" >\n  </a>\n  <a href=\"https://packagephobia.now.sh/result?p=rollup\">\n    <img src=\"https://packagephobia.now.sh/badge?p=rollup\" alt=\"install size\" >\n  </a>\n  <a href=\"https://codecov.io/gh/rollup/rollup\">\n    <img src=\"https://codecov.io/gh/rollup/rollup/graph/badge.svg\" alt=\"code coverage\" >\n  </a>\n  <a href=\"#backers\" alt=\"sponsors on Open Collective\">\n      <img src=\"https://opencollective.com/rollup/backers/badge.svg\" alt=\"backers\" >\n  </a> \n  <a href=\"#sponsors\" alt=\"Sponsors on Open Collective\">\n    <img src=\"https://opencollective.com/rollup/sponsors/badge.svg\" alt=\"sponsors\" >\n  </a> \n  <a href=\"https://github.com/rollup/rollup/blob/master/LICENSE.md\">\n    <img src=\"https://img.shields.io/npm/l/rollup.svg\" alt=\"license\">\n  </a>\n  <a href=\"https://david-dm.org/rollup/rollup\">\n    <img src=\"https://david-dm.org/rollup/rollup/status.svg\" alt=\"dependency status\">\n  </a>\n  <a href='https://gitter.im/rollup/rollup?utm_source=badge&utm_medium=badge&utm_campaign=pr-badge&utm_content=badge'>\n    <img src='https://badges.gitter.im/rollup/rollup.svg' alt='Join the chat at https://gitter.im/rollup/rollup'>\n  </a>\n</p>\n\n\n## Overview\n\nRollup is a module bundler for JavaScript which compiles small pieces of code into something larger and more complex, such as a library or application. It uses the standardized ES module format for code, instead of previous idiosyncratic solutions such as CommonJS and AMD. ES modules let you freely and seamlessly combine the most useful individual functions from your favorite libraries. Rollup can optimize ES modules for faster native loading in modern browsers, or output a legacy module format allowing ES module workflows today.\n\n## Quick Start Guide\n\nInstall with `npm install --global rollup`. Rollup can be used either through a [command line interface](https://rollupjs.org/#command-line-reference) with an optional configuration file, or else through its [JavaScript API](https://rollupjs.org/guide/en/#javascript-api). Run `rollup --help` to see the available options and parameters. The starter project templates, [rollup-starter-lib](https://github.com/rollup/rollup-starter-lib) and [rollup-starter-app](https://github.com/rollup/rollup-starter-app), demonstrate common configuration options, and more detailed instructions are available throughout the [user guide](https://rollupjs.org/).\n\n### Commands\n\nThese commands assume the entry point to your application is named main.js, and that you'd like all imports compiled into a single file named bundle.js.\n\nFor browsers:\n\n```bash\n# compile to a <script> containing a self-executing function\nrollup main.js --format iife --name \"myBundle\" --file bundle.js\n```\n\nFor Node.js:\n\n```bash\n# compile to a CommonJS module\nrollup main.js --format cjs --file bundle.js\n```\n\nFor both browsers and Node.js:\n\n```bash\n# UMD format requires a bundle name\nrollup main.js --format umd --name \"myBundle\" --file bundle.js\n```\n\n## Why\n\nDeveloping software is usually easier if you break your project into smaller separate pieces, since that often removes unexpected interactions and dramatically reduces the complexity of the problems you'll need to solve, and simply writing smaller projects in the first place [isn't necessarily the answer](https://medium.com/@Rich_Harris/small-modules-it-s-not-quite-that-simple-3ca532d65de4). Unfortunately, JavaScript has not historically included this capability as a core feature in the language.\n\nThis finally changed with ES modules support in JavaScript, which provides a syntax for importing and exporting functions and data so they can be shared between separate scripts. The specification is now implemented in all major browsers and in Node.js behind the --experimental-modules flag for \".mjs\" files. Rollup allows you to write your code using this module system, either outputting optimized ES modules for use in these native environments, or compiling it back down to existing supported formats such as CommonJS modules, AMD modules, and IIFE-style scripts. This means that you get to *write future-proof code*, and you also get the tremendous benefits of...\n\n## Tree Shaking\n\nIn addition to enabling the use of ES modules, Rollup also statically analyzes and optimizes the code you are importing, and will exclude anything that isn't actually used. This allows you to build on top of existing tools and modules without adding extra dependencies or bloating the size of your project.\n\nFor example, with CommonJS, the *entire tool or library must be imported*.\n\n```js\n// import the entire utils object with CommonJS\nvar utils = require( 'utils' );\nvar query = 'Rollup';\n// use the ajax method of the utils object\nutils.ajax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBut with ES modules, instead of importing the whole `utils` object, we can just import the one `ajax` function we need:\n\n```js\n// import the ajax function with an ES import statement\nimport { ajax } from 'utils';\nvar query = 'Rollup';\n// call the ajax function\najax( 'https://api.example.com?search=' + query ).then( handleResponse );\n```\n\nBecause Rollup includes the bare minimum, it results in lighter, faster, and less complicated libraries and applications. Since this approach is based on explicit `import` and `export` statements, it is vastly more effective than simply running an automated minifier to detect unused variables in the compiled output code.\n\n## Compatibility\n\n### Importing CommonJS\n\nRollup can import existing CommonJS modules [through a plugin](https://github.com/rollup/plugins/tree/master/packages/commonjs).\n\n### Publishing ES Modules\n\nTo make sure your ES modules are immediately usable by tools that work with CommonJS such as Node.js and webpack, you can use Rollup to compile to UMD or CommonJS format, and then point to that compiled version with the `main` property in your `package.json` file. If your `package.json` file also has a `module` field, ES-module-aware tools like Rollup and [webpack 2](https://webpack.js.org/) will [import the ES module version](https://github.com/rollup/rollup/wiki/pkg.module) directly.\n\n## Contributors\n\nThis project exists thanks to all the people who contribute. [[Contribute](CONTRIBUTING.md)].\n<a href=\"https://github.com/rollup/rollup/graphs/contributors\"><img src=\"https://opencollective.com/rollup/contributors.svg?width=890\" /></a>\n\n\n## Backers\n\nThank you to all our backers! \ud83d\ude4f [[Become a backer](https://opencollective.com/rollup#backer)]\n\n<a href=\"https://opencollective.com/rollup#backers\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/backers.svg?width=890\"></a>\n\n\n## Sponsors\n\nSupport this project by becoming a sponsor. Your logo will show up here with a link to your website. [[Become a sponsor](https://opencollective.com/rollup#sponsor)]\n\n<a href=\"https://opencollective.com/rollup/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/rollup/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/rollup/sponsor/9/avatar.svg\"></a>\n\n\n\n## License\n\n[MIT](https://github.com/rollup/rollup/blob/master/LICENSE.md)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 398794}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 1701445}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8550407}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 23984647}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 39814893}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 62471528}], "dependentsCount": 1921, "starsCount": 84}, "github": {"homepage": "https://rollupjs.org", "starsCount": 18423, "forksCount": 887, "subscribersCount": 270, "issues": {"count": 3641, "openCount": 198, "distribution": {"3600": 409, "10800": 183, "32400": 205, "97200": 421, "291600": 450, "874800": 521, "2624400": 354, "7873200": 324, "23619600": 368, "70858800": 363, "212576400": 43}, "isDisabled": false}, "contributors": [{"username": "lukastaegert", "commitsCount": 1298}, {"username": "Rich-Harris", "commitsCount": 1088}, {"username": "guybedford", "commitsCount": 345}, {"username": "Victorystick", "commitsCount": 134}, {"username": "TrySound", "commitsCount": 51}, {"username": "eventualbuddha", "commitsCount": 26}, {"username": "kellyselden", "commitsCount": 22}, {"username": "Andarist", "commitsCount": 20}, {"username": "Permutatrix", "commitsCount": 19}, {"username": "alan-agius4", "commitsCount": 17}, {"username": "greenkeeperio-bot", "commitsCount": 17}, {"username": "ankeetmaini", "commitsCount": 16}, {"username": "kzc", "commitsCount": 14}, {"username": "unstubbable", "commitsCount": 14}, {"username": "mbostock", "commitsCount": 13}, {"username": "nicolo-ribaudo", "commitsCount": 13}, {"username": "shellscape", "commitsCount": 9}, {"username": "mnater", "commitsCount": 8}, {"username": "LongTengDao", "commitsCount": 7}, {"username": "adrianheine", "commitsCount": 7}, {"username": "mourner", "commitsCount": 7}, {"username": "bigtimebuddy", "commitsCount": 6}, {"username": "tivac", "commitsCount": 6}, {"username": "vijithassar", "commitsCount": 6}, {"username": "Comandeer", "commitsCount": 5}, {"username": "Swatinem", "commitsCount": 5}, {"username": "btd", "commitsCount": 5}, {"username": "lukeapage", "commitsCount": 5}, {"username": "monkeywithacupcake", "commitsCount": 5}, {"username": "tjenkinson", "commitsCount": 5}, {"username": "NaridaL", "commitsCount": 4}, {"username": "NotWoods", "commitsCount": 4}, {"username": "anandthakker", "commitsCount": 4}, {"username": "caccialdo", "commitsCount": 4}, {"username": "emilos", "commitsCount": 4}, {"username": "fatfisz", "commitsCount": 4}, {"username": "hh10k", "commitsCount": 4}, {"username": "kyle1320", "commitsCount": 4}, {"username": "manucorporat", "commitsCount": 4}, {"username": "nathancahill", "commitsCount": 4}, {"username": "FredyC", "commitsCount": 3}, {"username": "alalonde", "commitsCount": 3}, {"username": "brandonocasey", "commitsCount": 3}, {"username": "christopherthielen", "commitsCount": 3}, {"username": "futurist", "commitsCount": 3}, {"username": "gkatsev", "commitsCount": 3}, {"username": "jakearchibald", "commitsCount": 3}, {"username": "joeldenning", "commitsCount": 3}, {"username": "klaascuvelier", "commitsCount": 3}, {"username": "krzksz", "commitsCount": 3}, {"username": "marijnh", "commitsCount": 3}, {"username": "operandom", "commitsCount": 3}, {"username": "roastlechon", "commitsCount": 3}, {"username": "skeggse", "commitsCount": 3}, {"username": "vanruesc", "commitsCount": 3}, {"username": "IvanSanchez", "commitsCount": 2}, {"username": "KSXGitHub", "commitsCount": 2}, {"username": "MattiasBuelens", "commitsCount": 2}, {"username": "aearly", "commitsCount": 2}, {"username": "alippai", "commitsCount": 2}, {"username": "askbeka", "commitsCount": 2}, {"username": "asmockler", "commitsCount": 2}, {"username": "bfred-it", "commitsCount": 2}, {"username": "bitjson", "commitsCount": 2}, {"username": "brianmhunt", "commitsCount": 2}, {"username": "cameron-martin", "commitsCount": 2}, {"username": "chyzwar", "commitsCount": 2}, {"username": "cprecioso", "commitsCount": 2}, {"username": "curran", "commitsCount": 2}, {"username": "danez", "commitsCount": 2}, {"username": "diervo", "commitsCount": 2}, {"username": "dmitrage", "commitsCount": 2}, {"username": "erikdesjardins", "commitsCount": 2}, {"username": "evocateur", "commitsCount": 2}, {"username": "evs-chris", "commitsCount": 2}, {"username": "giraffate", "commitsCount": 2}, {"username": "jacksonrayhamilton", "commitsCount": 2}, {"username": "jeffjewiss", "commitsCount": 2}, {"username": "keithamus", "commitsCount": 2}, {"username": "ksvitkovsky", "commitsCount": 2}, {"username": "lukeed", "commitsCount": 2}, {"username": "maranomynet", "commitsCount": 2}, {"username": "misoguy", "commitsCount": 2}, {"username": "nolanlawson", "commitsCount": 2}, {"username": "phter", "commitsCount": 2}, {"username": "rail44", "commitsCount": 2}, {"username": "stasm", "commitsCount": 2}, {"username": "styfle", "commitsCount": 2}, {"username": "tehvgg", "commitsCount": 2}, {"username": "tu4mo", "commitsCount": 2}, {"username": "vforvova", "commitsCount": 2}, {"username": "Heerschop", "commitsCount": 1}, {"username": "dgoldstein0", "commitsCount": 1}, {"username": "jacksteamdev", "commitsCount": 1}, {"username": "jgravois", "commitsCount": 1}, {"username": "joeljeske", "commitsCount": 1}, {"username": "luwol03", "commitsCount": 1}, {"username": "mangs", "commitsCount": 1}, {"username": "zlamma", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 48}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 174}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 276}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 507}], "statuses": [{"context": "ci/circleci: analysis", "state": "pending"}]}, "source": {"files": {"readmeSize": 8500, "testsSize": 2637719, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/rollup.svg", "shields": "https://img.shields.io/npm/v/rollup.svg", "content": "https://img.shields.io/npm/v/rollup.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/rollup.svg", "shields": "https://img.shields.io/npm/l/rollup.svg", "content": "https://img.shields.io/npm/l/rollup.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://david-dm.org/rollup/rollup/status.svg", "service": "https://david-dm.org/rollup/rollup/status.svg", "shields": "https://img.shields.io/david/rollup/rollup/status.svg", "content": "https://img.shields.io/david/rollup/rollup/status.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/rollup/rollup.svg%27", "service": "https://badges.gitter.im/rollup/rollup.svg", "shields": "https://img.shields.io/gitter/room/rollup/rollup.svg", "content": "https://img.shields.io/gitter/room/rollup/rollup.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier", "tslint"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.819, "health": 1, "branding": 1}, "popularity": {"communityInterest": 19763, "downloadsCount": 7994882.333333333, "downloadsAcceleration": 40974.418550228314, "dependentsCount": 1921}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.3274154347521145}}, "score": {"final": 0.8728625064989397, "detail": {"quality": 0.9756520015029618, "popularity": 0.7158868688590081, "maintenance": 0.9417328627068526}}}}, {"sinon": {"analyzedAt": "2020-06-07T05:32:28.191Z", "collected": {"metadata": {"name": "sinon", "scope": "unscoped", "version": "9.0.2", "description": "JavaScript test spies, stubs and mocks.", "date": "2020-04-08T11:42:23.802Z", "author": {"name": "Christian Johansen"}, "publisher": {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}, "maintainers": [{"username": "cjohansen", "email": "christian@cjohansen.no"}, {"username": "fatso83", "email": "carlerik@gmail.com"}, {"username": "mantoni", "email": "mail@maxantoni.de"}, {"username": "mrgnrdrck", "email": "morgan@roderick.dk"}], "contributors": [{"name": "Morgan Roderick", "email": "morgan@roderick.dk"}, {"name": "Christian Johansen", "email": "christian@cjohansen.no"}, {"name": "Carl-Erik Kopseng", "email": "carlerik@gmail.com"}, {"name": "Maximilian Antoni", "email": "mail@maxantoni.de"}, {"name": "Phred", "email": "fearphage@gmail.com"}, {"name": "Jonny Reeves", "email": "github@jonnyreeves.co.uk"}, {"name": "lucasfcosta", "email": "fernandesdacostalucas@gmail.com"}, {"name": "dependabot-preview[bot]", "email": "27856297+dependabot-preview[bot]@users.noreply.github.com"}, {"name": "ben hockey", "email": "neonstalwart@gmail.com"}, {"name": "takasmiley", "email": "takasmiley@live.jp"}, {"name": "Tim Fischbach", "email": "mail@timfischbach.de"}, {"name": "H\u00e5vard Wormdal H\u00f8iby", "email": "havardwhoiby@gmail.com"}, {"name": "Tim Ruffles", "email": "timruffles@googlemail.com"}, {"name": "Piotr Jamroz", "email": "piotr.jamroz@ig.com"}, {"name": "Jonathan Sokolowski", "email": "jonathan.sokolowski@gmail.com"}, {"name": "Domenic Denicola", "email": "domenic@domenicdenicola.com"}, {"name": "Andreas Lind", "email": "andreas@one.com"}, {"name": "William Sears", "email": "MrBigDog2U@gmail.com"}, {"name": "Tim Perry", "email": "pimterry@gmail.com"}, {"name": "Mikhail Gusarov", "email": "mikhail@hola.org"}, {"name": "Marc Redemske", "email": "marc.redemske@gmail.com"}, {"name": "Dominykas Blyz\u030ce\u0307", "email": "hello@dominykas.com"}, {"name": "Felix Geisendo\u0308rfer", "email": "felix@debuggable.com"}, {"name": "kpdecker", "email": "kpdecker@gmail.com"}, {"name": "Bryan Donovan", "email": "bdondo@gmail.com"}, {"name": "Cory", "email": "seeflanigan@gmail.com"}, {"name": "Tobias Ebno\u0308ther", "email": "ebi@gorn.ch"}, {"name": "Luis Cardoso", "email": "luis.cardoso@feedzai.com"}, {"name": "Tristan Koch", "email": "tristan.koch@1und1.de"}, {"name": "Adam Hull", "email": "adam@hmlad.com"}, {"name": "Keith Cirkel", "email": "github@keithcirkel.co.uk"}, {"name": "Aleck Greenham", "email": "greenhama13@gmail.com"}, {"name": "Flarna", "email": "deb2001-github@yahoo.de"}, {"name": "Doug Orleans", "email": "dougorleans@gmail.com"}, {"name": "Martin Sander", "email": "forke@uni-bonn.de"}, {"name": "Andrew Gurinovich", "email": "altmind@gmail.com"}, {"name": "Travis Kaufman", "email": "travis.kaufman@gmail.com"}, {"name": "Viktor Zozulyak", "email": "zozulyakviktor@gmail.com"}, {"name": "Mahmoud Gamal", "email": "mgamal@babbel.com"}, {"name": "Dustin Farris", "email": "dustin@farris.io"}, {"name": "Eyal Arubas", "email": "eyalarubas@gmail.com"}, {"name": "ben fleis", "email": "ben.fleis@gmail.com"}, {"name": "Benjamin Coe", "email": "ben@yesware.com"}, {"name": "dependabot[bot]", "email": "49699333+dependabot[bot]@users.noreply.github.com"}, {"name": "Marten Lienen", "email": "marten.lienen@gmail.com"}, {"name": "GCHQDeveloper500", "email": "32099399+GCHQDeveloper500@users.noreply.github.com"}, {"name": "Carolyn Stransky", "email": "carolynstransky@gmail.com"}, {"name": "zcicala", "email": "zcicala@fitbit.com"}, {"name": "Garrick Cheung", "email": "garrick@garrickcheung.com"}, {"name": "Konrad Holowinski", "email": "konrad.holowinski@gmail.com"}, {"name": "Jay Sherby", "email": "jaysherby@gmail.com"}, {"name": "Gavin Huang", "email": "gravof@gmail.com"}, {"name": "Krzysztof Kaczor", "email": "chris@kaczor.io"}, {"name": "Roman Potashow", "email": "justgook@gmail.com"}, {"name": "Soutaro Matsumoto", "email": "matsumoto@soutaro.com"}, {"name": "Rae Liu", "email": "happyaray@gmail.com"}, {"name": "Cormac Flynn", "email": "cormac.flynn@viadeoteam.com"}, {"name": "Ming Liu", "email": "vmliu1@gmail.com"}, {"name": "Garrick", "email": "gcheung@fitbit.com"}, {"name": "George Schneeloch", "email": "gschneel@mit.edu"}, {"name": "Jmeas", "email": "jellyes2@gmail.com"}, {"name": "Robin Pedersen", "email": "robinp@snap.tv"}, {"name": "Kir Chou", "email": "note351@hotmail.com"}, {"name": "Thomas Meyer", "email": "meyertee@gmail.com"}, {"name": "Duncan Beevers", "email": "duncan@dweebd.com"}, {"name": "Dmitriy Kubyshkin", "email": "grassator@gmail.com"}, {"name": "Glen Mailer", "email": "glen.mailer@bskyb.com"}, {"name": "Tim Costa", "email": "tcosta@2u.com"}, {"name": "Florent Jaby", "email": "florent.jaby@gmail.com"}, {"name": "Islam Sharabash", "email": "islam.sharabash@gmail.com"}, {"name": "Scott Andrews", "email": "scothis@gmail.com"}, {"name": "geries", "email": "geries.handal@videoplaza.com"}, {"name": "M\u00e1rton Salomv\u00e1ry", "email": "salomvary@gmail.com"}, {"name": "August Lilleaas", "email": "august.lilleaas@gmail.com"}, {"name": "Tamas Szebeni", "email": "tamas_szebeni@epam.com"}, {"name": "Adhya Pranata", "email": "adhyapranata@gmail.com"}, {"name": "\u306a\u3064\u304d", "email": "i@ntk.me"}, {"name": "Devin Weaver", "email": "suki@tritarget.org"}, {"name": "James Garbutt", "email": "43081j@users.noreply.github.com"}, {"name": "Nathan Friedly", "email": "nathan@nfriedly.com"}, {"name": "Nathan Mahdavi", "email": "mail@nathanmahdavi.com"}, {"name": "Nathan Perry", "email": "nateperry333@gmail.com"}, {"name": "Nicholas Hinds", "email": "hindsn@gmail.com"}, {"name": "Nico Jansen", "email": "jansennico@gmail.com"}, {"name": "Alex Urbano", "email": "asgaroth.belem@gmail.com"}, {"name": "Jason Karns", "email": "jason.karns@gmail.com"}, {"name": "Jeffrey Falgout", "email": "jeffrey.falgout@gmail.com"}, {"name": "Jimmy Shimizu", "email": "jimmy.shimizu@springworks.se"}, {"name": "Elad Nachmias", "email": "theman@elad.im"}, {"name": "Andrzej Porebski", "email": "fkuciapa@yahoo.com"}, {"name": "Piotr Jamr\u00f3z", "email": "pm.jamroz@gmail.com"}, {"name": "John-David Dalton", "email": "john.david.dalton@gmail.com"}, {"name": "Jonathan Freeman", "email": "freethejazz@gmail.com"}, {"name": "Emma Bukacek", "email": "emma.bukacek@gmail.com"}, {"name": "Brandon Heyer", "email": "brandonheyer@gmail.com"}, {"name": "RealZogger", "email": "49367953+RealZogger@users.noreply.github.com"}, {"name": "Rens Groothuijsen", "email": "l.groothuijsen@alumni.maastrichtuniversity.nl"}, {"name": "Aaron", "email": "aaron.todd@gmail.com"}, {"name": "Alexander Schmidt", "email": "alexanderschmidt1@gmail.com"}, {"name": "Evan Lloyd", "email": "evan.u.lloyd@gmail.com"}, {"name": "Farid Neshat", "email": "FaridN_SOAD@yahoo.com"}, {"name": "Josh Graham", "email": "josh@canva.com"}, {"name": "Josh Greenberger", "email": "jdgreenb@usc.edu"}, {"name": "Satoshi Nakamura", "email": "snakamura@infoteria.com"}, {"name": "Sebastian Van Sande", "email": "sebastian@vansande.org"}, {"name": "Simen Bekkhus", "email": "sbekkhus91@gmail.com"}, {"name": "G.Serebryanskyi", "email": "x5x3x5x@gmail.com"}, {"name": "Spencer Elliott", "email": "me@elliottsj.com"}, {"name": "Szymon Przybylski", "email": "szymon.przybylski@gmail.com"}, {"name": "Chris Breiding", "email": "chrisbreiding@gmail.com"}, {"name": "Tarjei Huse", "email": "tarjei.huse@gmail.com"}, {"name": "Louis Brunner", "email": "louis.brunner.fr@gmail.com"}, {"name": "Christoph Guttandin", "email": "chrisguttandin@media-codings.com"}, {"name": "Victor Costan", "email": "costan@gmail.com"}, {"name": "Gyandeep Singh", "email": "gyandeeps@gmail.com"}, {"name": "Zach Bloomquist", "email": "github@chary.us"}, {"name": "Marcus H\u00fcsgen", "email": "marcus.huesgen@lusini.com"}, {"name": "Henry Tung", "email": "henryptung@gmail.com"}, {"name": "Hugo Muller", "email": "hugo.muller@free.fr"}, {"name": "blacksun1", "email": "simon@blacksun.cx"}, {"name": "Mark Stacey", "email": "mark.stacey@amecfw.com"}, {"name": "Daniel Rey Lopez", "email": "daniel.rey.lopez@automattic.com"}, {"name": "gtothesquare", "email": "me@gerieshandal.com"}, {"name": "Afnizar Nur Ghifari", "email": "afnizarnur@users.noreply.github.com"}, {"name": "Martin Hansen", "email": "martin@martinhansen.no"}, {"name": "Igor Savin", "email": "kibertoad@gmail.com"}, {"name": "Matt Kern", "email": "matt@bloomcrush.com"}, {"name": "Irina Dumitrascu", "email": "me@dira.ro"}, {"name": "mohayonao", "email": "mohayonao@gmail.com"}, {"name": "Max Calabrese", "email": "max.calabrese@ymail.com"}, {"name": "nivsherf", "email": "nivsherf@gmail.com"}, {"name": "Alex Puchades", "email": "alex94puchades@gmail.com"}, {"name": "Michael Herman", "email": "hermanmu@gmail.com"}, {"name": "David Mott", "email": "dpmott@sep.com"}, {"name": "vitalets", "email": "vitalets@yandex-team.ru"}, {"name": "Jakob J\u00f3nasson", "email": "jakob.jonasson@gmail.com"}, {"name": "yoshimura-toshihide", "email": "toshihide0105yoshimura@gmail.com"}, {"name": "James Barwell", "email": "jb@jamesbarwell.co.uk"}, {"name": "Revath S Kumar", "email": "revathskumar@users.noreply.github.com"}, {"name": "Rich Hodgkins", "email": "rhodgkins@gmail.com"}, {"name": "Rodion Vynnychenko", "email": "roddiku@gmail.com"}, {"name": "Rodrigo Garc\u00eda", "email": "yo@rodrigogarcia.me"}, {"name": "Roland Warmerdam", "email": "roland@segment.com"}, {"name": "Ruwan Pradeep Geeganage", "email": "rpgeeganage@users.noreply.github.com"}, {"name": "Ryan Roemer", "email": "ryan@loose-bits.com"}, {"name": "Ryan Wholey", "email": "rjwholey@gmail.com"}, {"name": "STuFF", "email": "nchalleil@gmail.com"}, {"name": "Sam Landfried", "email": "samlandfried@gmail.com"}, {"name": "Scott Rudiger", "email": "scottrudiger@gmail.com"}, {"name": "Sergio Cinos", "email": "scinos@atlassian.com"}, {"name": "Shaine Hatch", "email": "shainehatch@overstock.com"}, {"name": "Shawn Krisman", "email": "skrisman@nodelings"}, {"name": "Shinnosuke Watanabe", "email": "snnskwtnb@gmail.com"}, {"name": "Simone Fonda", "email": "fonda@netseven.it"}, {"name": "Sinan Bolel", "email": "1915925+sbolel@users.noreply.github.com"}, {"name": "Stefan Weil", "email": "sw@weilnetz.de"}, {"name": "Stefan du Fresne", "email": "stefan@sdufresne.info"}, {"name": "StefanSchoof", "email": "Stefan.Schoof@direkt-gruppe.de"}, {"name": "Stephen Burrows", "email": "stephen.r.burrows@gmail.com"}, {"name": "Steven Lu", "email": "stevenlu443@gmail.com"}, {"name": "Sven Fuchs", "email": "svenfuchs@artweb-design.de"}, {"name": "S\u00f8ren Enem\u00e6rke", "email": "soren.enemaerke@gmail.com"}, {"name": "T1st3", "email": "contact@tiste.org"}, {"name": "TEHEK Firefox", "email": "tehek@tehek.net"}, {"name": "Tek Nynja", "email": "github@teknynja.com"}, {"name": "The Gitter Badger", "email": "badger@gitter.im"}, {"name": "Tieme van Veen", "email": "tiemevanveen@hotmail.com"}, {"name": "Tim Branyen", "email": "tim@tabdeveloper.com"}, {"name": "Tim Li", "email": "zhengang@sine.co"}, {"name": "Tim Wienk", "email": "tim@wienk.name"}, {"name": "Timo Tijhof", "email": "krinklemail@gmail.com"}, {"name": "Tobias Mansfield-Williams", "email": "tmansfield-williams@esri.com"}, {"name": "Valentin Agachi", "email": "github-com@agachi.name"}, {"name": "Volkan Ozcelik", "email": "volkan.ozcelik@jivesoftware.com"}, {"name": "Vynce Montgomery", "email": "vynce.montgomery@gmail.com"}, {"name": "White, Ben", "email": "ben.white@jpmchase.com"}, {"name": "Whymarrh Whitby", "email": "whymarrh.whitby@gmail.com"}, {"name": "Will Butler", "email": "will@butlerhq.com"}, {"name": "William Meleyal", "email": "w.meleyal@wollzelle.com"}, {"name": "Yury Fedorov", "email": "10244414+orlangure@users.noreply.github.com"}, {"name": "Zakir", "email": "zak.saifi7@gmail.com"}, {"name": "Zhengang Li", "email": "huttli@users.noreply.github.com"}, {"name": "andrew", "email": "andrew.derozario@online-pajak.com"}, {"name": "charlierudolph", "email": "charles.w.rudolph@gmail.com"}, {"name": "clint", "email": "clint@wealthfront.com"}, {"name": "ehmicky", "email": "ehmicky@gmail.com"}, {"name": "goligo", "email": "ich@malte.de"}, {"name": "hannes", "email": "github@htmlcss.de"}, {"name": "hashchange", "email": "heim@zeilenwechsel.de"}, {"name": "ichthala", "email": "alice.mottola@gmail.com"}, {"name": "jamestalmage", "email": "james.talmage@jrtechnical.com"}, {"name": "jshayes", "email": "justin@yolk.ai"}, {"name": "kbackowski", "email": "kbackowski@gmail.com"}, {"name": "mareq", "email": "mareq@balint.eu"}, {"name": "mbehboodian", "email": "morteza6909@gmail.com"}, {"name": "ngryman", "email": "ngryman@gmail.com"}, {"name": "niftylettuce", "email": "niftylettuce@gmail.com"}, {"name": "simonzack", "email": "simonzack@gmail.com"}, {"name": "stevesouth", "email": "stephen.south@caplin.com"}, {"name": "stoically", "email": "stoically@protonmail.com"}, {"name": "thefourtheye", "email": "thefourtheye@users.noreply.github.com"}, {"name": "till", "email": "till@php.net"}, {"name": "vsa", "email": "vsa@users.noreply.github.com"}, {"name": "wwalser", "email": "waw325@gmail.com"}, {"name": "Xiao Ma", "email": "x@medium.com"}, {"name": "AJ Ortega", "email": "ajo@google.com"}, {"name": "AdilKhn", "email": "AdilKhn@users.noreply.github.com"}, {"name": "Aditya Vohra", "email": "avohra@yelp.com"}, {"name": "Adrian Phinney", "email": "adrian.phinney@bellaliant.net"}, {"name": "Adrian Schmidt", "email": "adrian.schmidt@lime.tech"}, {"name": "Akira Matsuda", "email": "ronnie@dio.jp"}, {"name": "Aleksey Bobyr", "email": "aleksey.bobyr@beetroot.se"}, {"name": "Alex Ghiculescu", "email": "alex@tanda.co"}, {"name": "Alex Kessaris", "email": "alex@artsy.ca"}, {"name": "Alex Tran", "email": "alex@Alexs-MacBook-Pro-2.local"}, {"name": "Alexander Aivars", "email": "alex@aivars.se"}, {"name": "Alexey Kucherenko", "email": "alexei.kucherenko@gmail.com"}, {"name": "Alexsey", "email": "agat00@gmail.com"}, {"name": "Alfonso Boza", "email": "alfonso@cloud.com"}, {"name": "Ali Shakiba", "email": "ali@shakiba.me"}, {"name": "Andrew Fong", "email": "afong@slack-corp.com"}, {"name": "Andrew Leschinsky", "email": "andrew@leschinsky.com"}, {"name": "Andrew Shirley", "email": "andrew@als-bi.com"}, {"name": "Antonio D'Ettole", "email": "antonio@brandwatch.com"}, {"name": "Auclair Emmanuel", "email": "auclair.emmanuel.prestataire@sfr.com"}, {"name": "Aziz Punjani", "email": "aziz.punjani@gmail.com"}, {"name": "Ben Brostoff", "email": "ben.brostoff@gmail.com"}, {"name": "Ben Lertlumprasertkul", "email": "Ben.Lertlumprasertkul@ig.com"}, {"name": "Bing Ren", "email": "bingtimren@gmail.com"}, {"name": "Blaine Bublitz", "email": "blaine@iceddev.com"}, {"name": "Blake Embrey", "email": "hello@blakeembrey.com"}, {"name": "Blake Israel", "email": "blake.israel@gatech.edu"}, {"name": "Boshen Chen", "email": "boshenc@gmail.com"}, {"name": "Brandon Au", "email": "brandon.au@drexel.edu"}, {"name": "Brett Zamir", "email": "brettz9@yahoo.com"}, {"name": "Brian Bleakley", "email": "brianbleakley@gmail.com"}, {"name": "Brian M Hunt", "email": "brianmhunt@gmail.com"}, {"name": "Burak Yi\u011fit Kaya", "email": "ben@byk.im"}, {"name": "C. T. Lin", "email": "chentsulin@gmail.com"}, {"name": "Dan Bird", "email": "danielsbird@gmail.com"}, {"name": "Dan Peddle", "email": "dazld@users.noreply.github.com"}, {"name": "Daryl Lau", "email": "daryl@goodeggs.com"}, {"name": "David Colucci", "email": "davidanthonycolucci@gmail.com"}, {"name": "David Hayes", "email": "drhayes@users.noreply.github.com"}, {"name": "David Hunt", "email": "davidhunt@Davids-MBP.local"}, {"name": "Dean Sofer", "email": "ProLoser@users.noreply.github.com"}, {"name": "Duc Tri Le", "email": "duc1@email.tiger-inc.com"}, {"name": "Eli White", "email": "github@eli-white.com"}, {"name": "Eric Stobbart", "email": "Eric_Stobbart@comcast.com"}, {"name": "Eric Wendelin", "email": "ewendelin@twitter.com"}, {"name": "Ericat", "email": "erica.salvaneschi@gmail.com"}, {"name": "Feiyang1", "email": "plane1113@gmail.com"}, {"name": "Felipe Carasso", "email": "felipe@carassonet.org"}, {"name": "Franck Romano", "email": "fra@octo.com"}, {"name": "GProst", "email": "gprostmail@gmail.com"}, {"name": "Gabe Jackson", "email": "gj@mail.co.de"}, {"name": "Gavin Boulton", "email": "gavin.boulton@digital.cabinet-office.gov.uk"}, {"name": "Gerhard St\u00f6bich", "email": "18708370+Flarna@users.noreply.github.com"}, {"name": "Gilad Peleg", "email": "giladp007@gmail.com"}, {"name": "Giorgos Giannoutsos", "email": "contact@nuc.gr"}, {"name": "Gord Tanner", "email": "gord@tinyhippos.com"}, {"name": "Gordon L. Hempton", "email": "ghempton@gmail.com"}, {"name": "Gvozd", "email": "gvozdev.viktor@gmail.com"}, {"name": "Harry Wolff", "email": "hswolff@gmail.com"}, {"name": "HugoMuller", "email": "hmu@debian-hmu-dev"}, {"name": "Ian Lewis", "email": "IanMLewis@gmail.com"}, {"name": "Ian Thomas", "email": "ian@ian-thomas.net"}, {"name": "Irving", "email": "Irvingb232@gmail.com"}, {"name": "Jack Brown", "email": "jack.brown@mi9.com.au"}, {"name": "Jacob Page", "email": "jpage@godaddy.com"}, {"name": "Jahangir Iqbal", "email": "35706211+jiqbal48@users.noreply.github.com"}, {"name": "Jake Champion", "email": "me@jakechampion.name"}, {"name": "James Beavers", "email": "jamesjbeavers@gmail.com"}, {"name": "James M. Greene", "email": "james.m.greene@gmail.com"}, {"name": "Jan Kopriva", "email": "jan.kopriva@gooddata.com"}, {"name": "Jan Such\u00fd", "email": "jan.sandokan@gmail.com"}, {"name": "Jani Hartikainen", "email": "jani.hartikainen@gmail.com"}, {"name": "Jason Anderson", "email": "diurnalist@gmail.com"}, {"name": "Joakim Wimmerstedt", "email": "joakim.wimmerstedt@gmail.com"}, {"name": "Jochen Preusche", "email": "iilei@users.noreply.github.com"}, {"name": "Johann Hubert Sonntagbauer", "email": "johann.sonntagbauer@gmx.at"}, {"name": "John Bernardo", "email": "jbernardo@linkedin.com"}, {"name": "Jonathan Roitgrund", "email": "jroitgrund@gmail.com"}, {"name": "Jordan Harband", "email": "ljharb@gmail.com"}, {"name": "Jordan Hawker", "email": "hawker.jordan@gmail.com"}, {"name": "Joseph Evans", "email": "evonsdesigns@gmail.com"}, {"name": "Joseph Spens", "email": "joseph@workmarket.com"}, {"name": "Josh Goldberg", "email": "josh@fullscreenmario.com"}, {"name": "JoshuaCWebDeveloper", "email": "coosriverjoshua1@outlook.com"}, {"name": "Juntao Zeng", "email": "31234156+juntaozeng@users.noreply.github.com"}, {"name": "Kalisa Falzone", "email": "KalisaFalzone@users.noreply.github.com"}, {"name": "Katrina Theodosopoulos", "email": "katrinaelaine6@gmail.com"}, {"name": "Keith Rogers", "email": "git@keithrogers.eu"}, {"name": "Kelly Selden", "email": "kellyselden@gmail.com"}, {"name": "Kenneth Williams", "email": "scriptdaemon@gmail.com"}, {"name": "Kev", "email": "lineus@gmail.com"}, {"name": "Kevin Bosman", "email": "kevinbosman@users.noreply.github.com"}, {"name": "Kevin Ennis", "email": "kennis84@gmail.com"}, {"name": "Kevin Turner", "email": "kevin@decipherinc.com"}, {"name": "Kim Joar Bekkelund", "email": "kjbekkelund@gmail.com"}, {"name": "Kris Kowal", "email": "kris.kowal@cixar.com"}, {"name": "Kristian", "email": "krisham87@hotmail.com"}, {"name": "Kuba Orlik", "email": "kontakt@jakub-orlik.pl"}, {"name": "Kurt Ruppel", "email": "me@kurtruppel.com"}, {"name": "Lars Thorup", "email": "lars@zealake.com"}, {"name": "LboAnn", "email": "extend1994@gmail.com"}, {"name": "LostArchives", "email": "valentin.mullet@gmail.com"}, {"name": "Lucas Vieira", "email": "vieiralucas@users.noreply.github.com"}, {"name": "Luchs", "email": "Luchs@euirc.eu"}, {"name": "Maarten Tromp", "email": "maarten@nouncy.com"}, {"name": "Marco Ramirez", "email": "marco-ramirez@bankofamerica.com"}, {"name": "Marcos Vanetta", "email": "marcos_vanetta@condenast.com"}, {"name": "Mario Pareja", "email": "mpareja@360incentives.com"}, {"name": "Mark Banner", "email": "standard8@mozilla.com"}, {"name": "Mark Gibson", "email": "mgibson@adaptavist.com"}, {"name": "Mark Stickley", "email": "markstickley@users.noreply.github.com"}, {"name": "Martin Brochhaus", "email": "mbrochh@gmail.com"}, {"name": "Martin K\u00f6rner", "email": "martin.koerner@objectfab.de"}, {"name": "Matthew Gabeler-Lee", "email": "mgabeler-lee@6river.com"}, {"name": "Matthew Williams", "email": "mrwillihog@users.noreply.github.com"}, {"name": "Max Klymyshyn", "email": "klymyshyn@gmail.com"}, {"name": "Michael David Kuckuk", "email": "mdk@kuckuk.com"}, {"name": "Michael Jackson", "email": "mjijackson@gmail.com"}, {"name": "Michael Paulukonis", "email": "xraysmalevich@gmail.com"}, {"name": "Micha\u0142 Per\u0142akowski", "email": "michal@perlakowski.pl"}, {"name": "Mike Eve", "email": "ungrim97@gmail.com"}, {"name": "Mike Flanigan", "email": "mkflan@gmail.com"}, {"name": "Mikolaj Banasik", "email": "d1sover@gmail.com"}, {"name": "MouseZero", "email": "rm@mousezero.com"}, {"name": "Mustafa Sak", "email": "mustafa.sak@1und1.de"}, {"name": "Nelson Silva", "email": "nelson.silva@inevo.pt"}, {"name": "Nicholas Stephan", "email": "nicholas.stephan@gmail.com"}, {"name": "Nicu Micleu\u0219anu", "email": "micnic90@gmail.com"}, {"name": "Nikita Litvin", "email": "deltaidea@derpy.ru"}, {"name": "Niklas Andreasson", "email": "eaglus_@hotmail.com"}, {"name": "Noam Paz", "email": "noam.paz@gmail.com"}, {"name": "Olmo Maldonado", "email": "olmo.maldonado@gmail.com"}, {"name": "Paul Barry", "email": "paul@Pauls-Air.fios-router.home"}, {"name": "Pelle Wessman", "email": "pelle@kodfabrik.se"}, {"name": "Petar Dochev", "email": "dotchev@gmail.com"}, {"name": "Peter Grainger", "email": "peter@grainger.xyz"}, {"name": "Peter Zsoldos", "email": "peter.zsoldos@gmail.com"}, {"name": "Pia Mancini", "email": "piamancini@gmail.com"}, {"name": "Piper Chester", "email": "piperchester@users.noreply.github.com"}, {"name": "Prayag Verma", "email": "prayag.verma@gmail.com"}, {"name": "Rajeesh C V", "email": "cvrajeesh@gmail.com"}, {"name": "Raul Matei", "email": "raul.matei@8x8.com"}, {"name": "Raynos", "email": "raynos2@gmail.com"}, {"name": "ReadmeCritic", "email": "frankensteinbot@gmail.com"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/sinonjs/sinon.git"}, "links": {"npm": "https://www.npmjs.com/package/sinon", "homepage": "https://sinonjs.org/", "repository": "https://github.com/sinonjs/sinon", "bugs": "http://github.com/sinonjs/sinon/issues"}, "license": "BSD-3-Clause", "dependencies": {"@sinonjs/commons": "^1.7.2", "@sinonjs/fake-timers": "^6.0.1", "@sinonjs/formatio": "^5.0.1", "@sinonjs/samsam": "^5.0.3", "diff": "^4.0.2", "nise": "^4.0.1", "supports-color": "^7.1.0"}, "devDependencies": {"@babel/core": "^7.8.3", "@sinonjs/referee": "^4.0.0", "babel-plugin-istanbul": "^6.0.0", "babelify": "^10.0.0", "browserify": "^16.5.0", "dependency-check": "^4.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-config-sinon": "^3.0.0", "eslint-plugin-ie11": "^1.0.0", "eslint-plugin-local-rules": "^0.1.0", "eslint-plugin-mocha": "^6.1.0", "eslint-plugin-prettier": "^3.1.0", "esm": "^3.2.25", "husky": "^4.2.1", "lint-staged": "^10.0.7", "markdownlint-cli": "^0.22.0", "mocha": "^6.2.0", "mochify": "^6.6.0", "npm-run-all": "^4.1.5", "nyc": "^15.0.0", "prettier": "^1.18.2", "proxyquire": "^2.1.3", "proxyquire-universal": "^2.1.0", "proxyquireify": "^3.2.1", "puppeteer": "^2.1.0", "rimraf": "^3.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 46}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<h1 align=center>\n    <a href=\"https://sinonjs.org\" title=\"Sinon.JS\">\n        <img alt=\"Sinon.JS\" src=\"https://sinonjs.org/assets/images/logo.png\">\n    </a>\n    <br>\n    Sinon.JS\n</h1>\n\n<p align=center>\n    Standalone and test framework agnostic JavaScript test spies, stubs and mocks (pronounced \"sigh-non\", named after <a href=\"https://en.wikipedia.org/wiki/Sinon\">Sinon, the warrior</a>).\n</p>\n\n<p align=center>\n<a href=\"https://www.npmjs.com/package/sinon\"><img src=\"https://img.shields.io/npm/v/sinon.svg?style=flat\" alt=\"npm version\"></a>\n<a href=\"https://gitter.im/sinonjs/sinon?utm_source=badge&amp;utm_medium=badge&amp;utm_campaign=pr-badge&amp;utm_content=badge\"><img src=\"https://badges.gitter.im/Join%20Chat.svg\" alt=\"Join the chat at https://gitter.im/sinonjs/sinon\"></a>\n<a href=\"http://travis-ci.org/sinonjs/sinon\"><img src=\"https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master\" alt=\"Build status\"></a>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/buildstatus/sinonjs\" alt=\"Sauce Test Status\"/></a>\n<a href=\"https://codecov.io/gh/sinonjs/sinon\"><img src=\"https://codecov.io/gh/sinonjs/sinon/branch/master/graph/badge.svg\" alt=\"Codecov status\"></a>\n<a href=\"#backers\"><img src=\"https://opencollective.com/sinon/backers/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"#sponsors\"><img src=\"https://opencollective.com/sinon/sponsors/badge.svg\" alt=\"OpenCollective\"></a>\n<a href=\"https://www.npmjs.com/package/sinon\" target=\"_blank\"><img src=\"https://img.shields.io/npm/dm/sinon.svg\" alt=\"npm downloads per month\"></a>\n<a href=\"https://cdnjs.com/libraries/sinon.js\" target=\"_blank\"><img src=\"https://img.shields.io/cdnjs/v/sinon.js.svg\" alt=\"CDNJS version\"></a>\n<a href=\"CODE_OF_CONDUCT.md\"><img src=\"https://img.shields.io/badge/Contributor%20Covenant-v2.0%20adopted-ff69b4.svg\" alt=\"Contributor Covenant\" /></a>\n</p>\n\n<p align=center>\n<a href=\"https://saucelabs.com/u/sinonjs\"><img src=\"https://saucelabs.com/browser-matrix/sinonjs.svg\" alt=\"Sauce Test Status\"></a>\n</p>\n\n## Better docs?\n\nDo you wish that Sinon had better documentation?\n\nSo do we!\n\nWith your support, we can improve the documentation for everyone.\n\n1. [Donate to the campaign for better documentation](https://www.gofundme.com/f/sinon-docs)\n1. Spread the word of the campaign in your companies and on social media\n\nThank you!\n\n## Compatibility\n\nFor details on compatibility and browser support, please see [`COMPATIBILITY.md`](COMPATIBILITY.md)\n\n## Installation\n\nvia [npm](https://github.com/npm/npm)\n\n    $ npm install sinon\n\nor via sinon's browser builds available for download on the [homepage](https://sinonjs.org/releases/). There are also [npm based CDNs](https://sinonjs.org/releases#npm-cdns) one can use.\n\n## Usage\n\nSee the [sinon project homepage](https://sinonjs.org/) for documentation on usage.\n\nIf you have questions that are not covered by the documentation, you can [check out the `sinon` tag on Stack Overflow](https://stackoverflow.com/questions/tagged/sinon) or drop by <a href=\"irc://irc.freenode.net:6667/sinon.js\">#sinon.js on irc.freenode.net:6667</a>.\n\nYou can also search through the [Sinon.JS mailing list archives](http://groups.google.com/group/sinonjs).\n\n## Goals\n\n* No global pollution\n* Easy to use\n* Require minimal \u201cintegration\u201d\n* Easy to embed seamlessly with any testing framework\n* Easily fake any interface\n* Ship with ready-to-use fakes for XMLHttpRequest, timers and more\n\n## Contribute?\n\nSee [CONTRIBUTING.md](CONTRIBUTING.md) for details on how you can contribute to Sinon.JS\n\n## Backers\n\nSupport us with a monthly donation and help us continue our activities. [[Become a backer](https://opencollective.com/sinon#backer)]\n\n<a href=\"https://opencollective.com/sinon/backer/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/backer/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/backer/29/avatar.svg\"></a>\n\n\n## Sponsors\n\nBecome a sponsor and get your logo on our README on GitHub with a link to your site. [[Become a sponsor](https://opencollective.com/sinon#sponsor)]\n\n<a href=\"https://opencollective.com/sinon/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/9/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/10/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/10/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/11/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/11/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/12/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/12/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/13/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/13/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/14/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/14/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/15/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/15/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/16/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/16/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/17/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/17/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/18/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/18/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/19/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/19/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/20/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/20/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/21/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/21/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/22/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/22/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/23/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/23/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/24/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/24/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/25/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/25/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/26/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/26/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/27/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/27/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/28/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/28/avatar.svg\"></a>\n<a href=\"https://opencollective.com/sinon/sponsor/29/website\" target=\"_blank\"><img src=\"https://opencollective.com/sinon/sponsor/29/avatar.svg\"></a>\n\n## Licence\n\nSinon.js was released under [BSD-3](LICENSE)"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 127648}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2662347}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 11110439}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 33775029}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 61957610}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 116476267}], "dependentsCount": 1517, "starsCount": 192}, "github": {"homepage": "https://sinonjs.org/", "starsCount": 7991, "forksCount": 754, "subscribersCount": 101, "issues": {"count": 2265, "openCount": 41, "distribution": {"3600": 280, "10800": 174, "32400": 196, "97200": 282, "291600": 269, "874800": 247, "2624400": 193, "7873200": 202, "23619600": 149, "70858800": 180, "212576400": 93}, "isDisabled": false}, "contributors": [{"username": "mroderick", "commitsCount": 765}, {"username": "cjohansen", "commitsCount": 410}, {"username": "fatso83", "commitsCount": 292}, {"username": "mantoni", "commitsCount": 180}, {"username": "fearphage", "commitsCount": 102}, {"username": "jonnyreeves", "commitsCount": 65}, {"username": "lucasfcosta", "commitsCount": 48}, {"username": "neonstalwart", "commitsCount": 32}, {"username": "pimterry", "commitsCount": 14}, {"username": "tf", "commitsCount": 14}, {"username": "havardh", "commitsCount": 12}, {"username": "ig-pj", "commitsCount": 11}, {"username": "timruffles", "commitsCount": 11}, {"username": "jsok", "commitsCount": 10}, {"username": "mgred", "commitsCount": 10}, {"username": "domenic", "commitsCount": 9}, {"username": "papandreou", "commitsCount": 9}, {"username": "MrBigDog2U", "commitsCount": 8}, {"username": "dominykas", "commitsCount": 7}, {"username": "felixge", "commitsCount": 7}, {"username": "BryanDonovan", "commitsCount": 6}, {"username": "Flarna", "commitsCount": 6}, {"username": "kpdecker", "commitsCount": 6}, {"username": "altmind", "commitsCount": 5}, {"username": "dougo", "commitsCount": 5}, {"username": "ebi", "commitsCount": 5}, {"username": "greena13", "commitsCount": 5}, {"username": "hurrymaplelad", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "lfac-pt", "commitsCount": 5}, {"username": "marvinthepa", "commitsCount": 5}, {"username": "mhmoudgmal", "commitsCount": 5}, {"username": "seeflanigan", "commitsCount": 5}, {"username": "43081j", "commitsCount": 4}, {"username": "EyalAr", "commitsCount": 4}, {"username": "GCHQDeveloper500", "commitsCount": 4}, {"username": "benfleis", "commitsCount": 4}, {"username": "carolstran", "commitsCount": 4}, {"username": "cqql", "commitsCount": 4}, {"username": "dustinfarris", "commitsCount": 4}, {"username": "holowinski", "commitsCount": 4}, {"username": "krzkaczor", "commitsCount": 4}, {"username": "traviskaufman", "commitsCount": 4}, {"username": "zuzusik", "commitsCount": 4}, {"username": "Floby", "commitsCount": 3}, {"username": "GCheung55", "commitsCount": 3}, {"username": "adhyapranata", "commitsCount": 3}, {"username": "alex94cp", "commitsCount": 3}, {"username": "augustl", "commitsCount": 3}, {"username": "brandonheyer", "commitsCount": 3}, {"username": "duncanbeevers", "commitsCount": 3}, {"username": "grassator", "commitsCount": 3}, {"username": "ibash", "commitsCount": 3}, {"username": "jamesplease", "commitsCount": 3}, {"username": "ming-codes", "commitsCount": 3}, {"username": "nivsherf", "commitsCount": 3}, {"username": "noisecapella", "commitsCount": 3}, {"username": "note35", "commitsCount": 3}, {"username": "raejin", "commitsCount": 3}, {"username": "ropez", "commitsCount": 3}, {"username": "salomvary", "commitsCount": 3}, {"username": "scothis", "commitsCount": 3}, {"username": "sky-glenjamin", "commitsCount": 3}, {"username": "soutaro", "commitsCount": 3}, {"username": "tszebeni", "commitsCount": 3}, {"username": "Alexsey", "commitsCount": 2}, {"username": "DanReyLop", "commitsCount": 2}, {"username": "HugoMuller", "commitsCount": 2}, {"username": "JoshuaKGoldberg", "commitsCount": 2}, {"username": "LouisBrunner", "commitsCount": 2}, {"username": "acud", "commitsCount": 2}, {"username": "afnizarnur", "commitsCount": 2}, {"username": "blacksun1", "commitsCount": 2}, {"username": "chrisbreiding", "commitsCount": 2}, {"username": "chrisguttandin", "commitsCount": 2}, {"username": "dependabot[bot]", "commitsCount": 2}, {"username": "dpmott", "commitsCount": 2}, {"username": "emmabukacek", "commitsCount": 2}, {"username": "evan-007", "commitsCount": 2}, {"username": "flotwig", "commitsCount": 2}, {"username": "genetique-techno", "commitsCount": 2}, {"username": "gyandeeps", "commitsCount": 2}, {"username": "ifrost", "commitsCount": 2}, {"username": "jdalton", "commitsCount": 2}, {"username": "jdgreenberger", "commitsCount": 2}, {"username": "johnfakerjohn", "commitsCount": 2}, {"username": "kobbikobb", "commitsCount": 2}, {"username": "mjcrouch", "commitsCount": 2}, {"username": "mjhea0", "commitsCount": 2}, {"username": "nfriedly", "commitsCount": 2}, {"username": "nhinds", "commitsCount": 2}, {"username": "nicojs", "commitsCount": 2}, {"username": "revathskumar", "commitsCount": 2}, {"username": "rgroothuijsen", "commitsCount": 2}, {"username": "scripter-co", "commitsCount": 2}, {"username": "seppevs", "commitsCount": 2}, {"username": "servel333", "commitsCount": 2}, {"username": "sprzybylski", "commitsCount": 2}, {"username": "tarjei", "commitsCount": 2}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 32}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 135}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 290}], "statuses": [{"context": "ci/circleci: saucelabs", "state": "success"}, {"context": "ci/circleci: integration-tests", "state": "success"}, {"context": "ci/circleci: node-10", "state": "success"}, {"context": "ci/circleci: lint", "state": "success"}, {"context": "ci/circleci: node-12", "state": "success"}, {"context": "ci/circleci: node-13", "state": "success"}, {"context": "ci/circleci: install-dependencies", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 12745, "testsSize": 647315, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sinon.svg?style=flat", "shields": "https://img.shields.io/npm/v/sinon.svg", "content": "https://img.shields.io/npm/v/sinon.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://secure.travis-ci.org/sinonjs/sinon.svg?branch=master", "service": "https://api.travis-ci.org/sinonjs/sinon.svg?branch=master", "shields": "https://img.shields.io/travis/sinonjs/sinon/master.svg", "content": "https://img.shields.io/travis/sinonjs/sinon/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/sinon.svg", "shields": "https://img.shields.io/npm/dm/sinon.svg", "content": "https://img.shields.io/npm/dm/sinon.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.96}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.994, "health": 1, "branding": 0.85}, "popularity": {"communityInterest": 9137, "downloadsCount": 11258343, "downloadsAcceleration": 19082.697640791463, "dependentsCount": 1517}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.07446915345508076}}, "score": {"final": 0.7950062827489086, "detail": {"quality": 0.9991792301164556, "popularity": 0.6727799797377085, "maintenance": 0.7422272023022113}}}}, {"style-loader": {"analyzedAt": "2020-06-07T15:29:42.697Z", "collected": {"metadata": {"name": "style-loader", "scope": "unscoped", "version": "1.2.1", "description": "style loader module for webpack", "keywords": ["webpack"], "date": "2020-04-28T13:33:15.533Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/style-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/style-loader", "homepage": "https://github.com/webpack-contrib/style-loader", "repository": "https://github.com/webpack-contrib/style-loader", "bugs": "https://github.com/webpack-contrib/style-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.6"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.9.0", "@babel/preset-env": "^7.9.5", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.4.0", "cross-env": "^7.0.2", "css-loader": "^3.5.3", "del": "^5.1.0", "del-cli": "^3.0.0", "es-check": "^5.1.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.11.0", "eslint-plugin-import": "^2.20.2", "file-loader": "^6.0.0", "husky": "^4.2.5", "jest": "^25.4.0", "jsdom": "^15.2.1", "lint-staged": "^10.1.7", "memfs": "^3.1.2", "npm-run-all": "^4.1.5", "prettier": "^2.0.5", "sass": "^1.26.5", "sass-loader": "^8.0.2", "semver": "^7.3.2", "standard-version": "^7.1.0", "webpack": "^4.43.0", "webpack-cli": "^3.3.11", "webpack-dev-server": "^3.10.3"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 4}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <h1>Style Loader</h1>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# style-loader\n\nInject CSS into the DOM.\n\n## Getting Started\n\nTo begin, you'll need to install `style-loader`:\n\n```console\nnpm install --save-dev style-loader\n```\n\nIt's recommended to combine `style-loader` with the [`css-loader`](https://github.com/webpack-contrib/css-loader)\n\nThen add the loader to your `webpack` config. For example:\n\n**style.css**\n\n```css\nbody {\n  background: green;\n}\n```\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n## Options\n\n|              Name               |         Type         |  Default   | Description                                              |\n| :-----------------------------: | :------------------: | :--------: | :------------------------------------------------------- |\n| [**`injectType`**](#injecttype) |      `{String}`      | `styleTag` | Allows to setup how styles will be injected into the DOM |\n| [**`attributes`**](#attributes) |      `{Object}`      |    `{}`    | Adds custom attributes to tag                            |\n|     [**`insert`**](#insert)     | `{String\\|Function}` |   `head`   | Inserts tag at the given position into the DOM           |\n|       [**`base`**](#base)       |      `{Number}`      |   `true`   | Sets module ID base (DLLPlugin)                          |\n|   [**`esModule`**](#esmodule)   |     `{Boolean}`      |  `false`   | Use ES modules syntax                                    |\n\n### `injectType`\n\nType: `String`\nDefault: `styleTag`\n\nAllows to setup how styles will be injected into the DOM.\n\nPossible values:\n\n- `styleTag`\n- `singletonStyleTag`\n- `lazyStyleTag`\n- `lazySingletonStyleTag`\n- `linkTag`\n\n#### `styleTag`\n\nAutomatically injects styles into the DOM using multiple `<style></style>`. It is **default** behaviour.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\nExample with Locals (CSS Modules):\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          // The `injectType`  option can be avoided because it is default behaviour\n          { loader: 'style-loader', options: { injectType: 'styleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `singletonStyleTag`\n\nAutomatically injects styles into the DOM using one `<style></style>`.\n\n> \u26a0 Source maps do not work.\n\n**component.js**\n\n```js\nimport './styles.css';\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.css';\n\nconst divElement = document.createElement('div');\ndivElement.className = styles['my-class'];\n```\n\nAll locals (class names) stored in imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'singletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazyStyleTag`\n\nInjects styles into the DOM using multiple `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazyStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'lazyStyleTag' } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader inject styles like:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n</style>\n<style>\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `lazySingletonStyleTag`\n\nInjects styles into the DOM using one `<style></style>` on demand.\nWe recommend following `.lazy.css` naming convention for lazy styles and the `.css` for basic `style-loader` usage (similar to other file types, i.e. `.lazy.less` and `.less`).\nWhen you `lazySingletonStyleTag` value the `style-loader` injects the styles lazily making them useable on-demand via `style.use()` / `style.unuse()`.\n\n> \u26a0\ufe0f Source maps do not work.\n\n> \u26a0\ufe0f Behavior is undefined when `unuse` is called more often than `use`. Don't do that.\n\n**component.js**\n\n```js\nimport styles from './styles.css';\n\nstyles.use();\n// For removing styles you can use\n// styles.unuse();\n```\n\n**component-with-css-modules.js**\n\n```js\nimport styles from './styles.lazy.css';\n\nstyles.use();\n\nconst divElement = document.createElement('div');\ndivElement.className = styles.locals['my-class'];\n```\n\nAll locals (class names) stored in `locals` property of imported object.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        exclude: /\\.lazy\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n      {\n        test: /\\.lazy\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: { injectType: 'lazySingletonStyleTag' },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<style>\n  .foo {\n    color: red;\n  }\n  .bar {\n    color: blue;\n  }\n</style>\n```\n\n#### `linkTag`\n\nInjects styles into the DOM using multiple `<link rel=\"stylesheet\" href=\"path/to/file.css\">` .\n\n> \u2139\ufe0f The loader will dynamically insert the `<link href=\"path/to/file.css\" rel=\"stylesheet\">` tag at runtime via JavaScript. You should use [MiniCssExtractPlugin](https://webpack.js.org/plugins/mini-css-extract-plugin/) if you want to include a static `<link href=\"path/to/file.css\" rel=\"stylesheet\">`.\n\n```js\nimport './styles.css';\nimport './other-styles.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.link\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { injectType: 'linkTag' } },\n          { loader: 'file-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate this:\n\n```html\n<link rel=\"stylesheet\" href=\"path/to/style.css\" />\n<link rel=\"stylesheet\" href=\"path/to/other-styles.css\" />\n```\n\n### `attributes`\n\nType: `Object`\nDefault: `{}`\n\nIf defined, the `style-loader` will attach given attributes with their values on `<style>` / `<link>` element.\n\n**component.js**\n\n```js\nimport style from './file.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { attributes: { id: 'id' } } },\n          { loader: 'css-loader' },\n        ],\n      },\n    ],\n  },\n};\n```\n\n```html\n<style id=\"id\"></style>\n```\n\n### `insert`\n\nType: `String|Function`\nDefault: `head`\n\nBy default, the `style-loader` appends `<style>`/`<link>` elements to the end of the style target, which is the `<head>` tag of the page unless specified by `insert`.\nThis will cause CSS created by the loader to take priority over CSS already present in the target.\nYou can use other values if the standard behavior is not suitable for you, but we do not recommend doing this.\nIf you target an [iframe](https://developer.mozilla.org/en-US/docs/Web/API/HTMLIFrameElement) make sure you have sufficient access rights, the styles will be injected into the content document head.\n\n#### `String`\n\nAllows to setup custom [query selector](https://developer.mozilla.org/en-US/docs/Web/API/Document/querySelector) where styles inject into the DOM.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: 'body',\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nA new `<style>`/`<link>` elements will be inserted into at bottom of `body` tag.\n\n#### `Function`\n\nAllows to override default behavior and insert styles at any position.\n\n> \u26a0 Do not forget that this code will be used in the browser and not all browsers support latest ECMA features like `let`, `const`, `arrow function expression` and etc, we recommend use only ECMA 5 features, but it is depends what browsers you want to support\n> \u26a0 Do not forget that some DOM methods may not be available in older browsers, we recommended use only [DOM core level 2 properties](https://caniuse.com/#search=DOM%20Core), but it is depends what browsers you want to support\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                // eslint-disable-next-line no-underscore-dangle\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                // eslint-disable-next-line no-underscore-dangle\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nInsert styles at top of `head` tag.\n\n### `base`\n\nThis setting is primarily used as a workaround for [css clashes](https://github.com/webpack-contrib/style-loader/issues/163) when using one or more [DllPlugin](https://robertknight.github.io/posts/webpack-dll-plugins/)'s. `base` allows you to prevent either the _app_'s css (or _DllPlugin2_'s css) from overwriting _DllPlugin1_'s css by specifying a css module id base which is greater than the range used by _DllPlugin1_ e.g.:\n\n**webpack.dll1.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\n**webpack.dll2.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 1000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n**webpack.app.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          { loader: 'style-loader', options: { base: 2000 } },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `esModule`\n\nType: `Boolean`\nDefault: `false`\n\nBy default, `style-loader` generates JS modules that use the CommonJS modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a ES module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        loader: 'css-loader',\n        options: {\n          esModule: true,\n        },\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Source maps\n\nThe loader automatically inject source maps when previous loader emit them.\nTherefore, to generate source maps, set the `sourceMap` option to `true` for the previous loader.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          'style-loader',\n          { loader: 'css-loader', options: { sourceMap: true } },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### Nonce\n\nThere are two ways to work with `nonce`:\n\n- using the `attributes` option\n- using the `__webpack_nonce__` variable\n\n> \u26a0 the `attributes` option takes precedence over the `__webpack_nonce__` variable\n\n#### `attributes`\n\n**component.js**\n\n```js\nimport './style.css';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              attributes: {\n                nonce: '12345678',\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### `__webpack_nonce__`\n\n**create-nonce.js**\n\n```js\n__webpack_nonce__ = '12345678';\n```\n\n**component.js**\n\n```js\nimport './create-nonce.js';\nimport './style.css';\n```\n\nAlternative example for `require`:\n\n**component.js**\n\n```js\n__webpack_nonce__ = '12345678';\n\nrequire('./style.css');\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: ['style-loader', 'css-loader'],\n      },\n    ],\n  },\n};\n```\n\nThe loader generate:\n\n```html\n<style nonce=\"12345678\">\n  .foo {\n    color: red;\n  }\n</style>\n```\n\n#### Insert styles at top\n\nInserts styles at top of `head` tag.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertAtTop(element) {\n                var parent = document.querySelector('head');\n                var lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, parent.firstChild);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### Insert styles before target element\n\nInserts styles before `#id` element.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'style-loader',\n            options: {\n              insert: function insertBeforeAt(element) {\n                const parent = document.querySelector('head');\n                const target = document.querySelector('#id');\n\n                const lastInsertedElement =\n                  window._lastElementInsertedByStyleLoader;\n\n                if (!lastInsertedElement) {\n                  parent.insertBefore(element, target);\n                } else if (lastInsertedElement.nextSibling) {\n                  parent.insertBefore(element, lastInsertedElement.nextSibling);\n                } else {\n                  parent.appendChild(element);\n                }\n\n                window._lastElementInsertedByStyleLoader = element;\n              },\n            },\n          },\n          'css-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/style-loader.svg\n[npm-url]: https://npmjs.com/package/style-loader\n[node]: https://img.shields.io/node/v/style-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/style-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/style-loader\n[tests]: https://github.com/webpack-contrib/style-loader/workflows/style-loader/badge.svg\n[tests-url]: https://github.com/webpack-contrib/style-loader/actions\n[cover]: https://codecov.io/gh/webpack-contrib/style-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/style-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=style-loader\n[size-url]: https://packagephobia.now.sh/result?p=style-loader"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 416402}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 8364092}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 34709213}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 103510726}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 182129839}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 323331817}], "dependentsCount": 8707, "starsCount": 97}, "github": {"starsCount": 1438, "forksCount": 429, "subscribersCount": 28, "issues": {"count": 472, "openCount": 14, "distribution": {"3600": 108, "10800": 23, "32400": 22, "97200": 46, "291600": 31, "874800": 32, "2624400": 26, "7873200": 37, "23619600": 66, "70858800": 72, "212576400": 9}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 70}, {"username": "sokra", "commitsCount": 53}, {"username": "d3viant0ne", "commitsCount": 21}, {"username": "michael-ciniawsky", "commitsCount": 20}, {"username": "diurnalist", "commitsCount": 7}, {"username": "elsbree", "commitsCount": 6}, {"username": "ekulabuhov", "commitsCount": 3}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "jonathantneal", "commitsCount": 2}, {"username": "lydell", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "sontek", "commitsCount": 2}, {"username": "svenheden", "commitsCount": 2}, {"username": "tgriesser", "commitsCount": 2}, {"username": "2color", "commitsCount": 1}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Et3rnel", "commitsCount": 1}, {"username": "FlyingDR", "commitsCount": 1}, {"username": "KonstantinKai", "commitsCount": 1}, {"username": "Lin84", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Nouzbe", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "TaopaiC", "commitsCount": 1}, {"username": "Vasikaran", "commitsCount": 1}, {"username": "ahstro", "commitsCount": 1}, {"username": "akki-jat", "commitsCount": 1}, {"username": "alexbaumgertner", "commitsCount": 1}, {"username": "amoshydra", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "arseniew", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "backjo", "commitsCount": 1}, {"username": "blainekasten", "commitsCount": 1}, {"username": "brafdlog", "commitsCount": 1}, {"username": "brandondurham", "commitsCount": 1}, {"username": "crucialfelix", "commitsCount": 1}, {"username": "danielberndt", "commitsCount": 1}, {"username": "dimitarivanov", "commitsCount": 1}, {"username": "dkaoster", "commitsCount": 1}, {"username": "dlwalsh", "commitsCount": 1}, {"username": "drawyan", "commitsCount": 1}, {"username": "edave64", "commitsCount": 1}, {"username": "erictheswift", "commitsCount": 1}, {"username": "felixmosh", "commitsCount": 1}, {"username": "gregaou", "commitsCount": 1}, {"username": "gryzzly", "commitsCount": 1}, {"username": "hiroppy", "commitsCount": 1}, {"username": "iamdavidfrancis", "commitsCount": 1}, {"username": "iancw", "commitsCount": 1}, {"username": "ilanc", "commitsCount": 1}, {"username": "jaesung2061", "commitsCount": 1}, {"username": "jasonenglish", "commitsCount": 1}, {"username": "jhnns", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kabab", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "krail", "commitsCount": 1}, {"username": "krrg", "commitsCount": 1}, {"username": "liady", "commitsCount": 1}, {"username": "marcogrcr", "commitsCount": 1}, {"username": "mistadikay", "commitsCount": 1}, {"username": "nickdima", "commitsCount": 1}, {"username": "oskarer", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "pleunv", "commitsCount": 1}, {"username": "savelichalex", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sirlancelot", "commitsCount": 1}, {"username": "tigt", "commitsCount": 1}, {"username": "tomasAlabes", "commitsCount": 1}, {"username": "undoZen", "commitsCount": 1}, {"username": "verticalpalette", "commitsCount": 1}, {"username": "winterbe", "commitsCount": 1}, {"username": "xyuzh", "commitsCount": 1}, {"username": "zachlysobey", "commitsCount": 1}, {"username": "zxcabs", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 27}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 70}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 17830, "testsSize": 301065, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/style-loader.svg", "shields": "https://img.shields.io/npm/v/style-loader.svg", "content": "https://img.shields.io/npm/v/style-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/style-loader.svg", "service": "https://david-dm.org/webpack-contrib/style-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/style-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/style-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.997, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 2070, "downloadsCount": 34503575.333333336, "downloadsAcceleration": 99281.25412861494, "dependentsCount": 8707}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9163614225473866, "detail": {"quality": 0.9979687284558839, "popularity": 0.7628341617166023, "maintenance": 0.9999395640280305}}}}, {"@types/jest": {"analyzedAt": "2018-05-18T00:17:51.042Z", "collected": {"metadata": {"name": "@types/jest", "scope": "types", "version": "22.2.3", "description": "TypeScript definitions for Jest", "date": "2018-04-11T19:13:04.094Z", "publisher": {"username": "types", "email": "ts-npm-types@microsoft.com"}, "maintainers": [{"username": "types", "email": "ts-npm-types@microsoft.com"}], "contributors": [{"name": "Asana", "url": "https://asana.com"}, {"name": "Ivo Stratev", "url": "https://github.com/NoHomey"}, {"name": "jwbay", "url": "https://github.com/jwbay"}, {"name": "Alexey Svetliakov", "url": "https://github.com/asvetliakov"}, {"name": "Alex Jover Morales", "url": "https://github.com/alexjoverm"}, {"name": "Allan Lukwago", "url": "https://github.com/epicallan"}, {"name": "Ika", "url": "https://github.com/ikatyang"}, {"name": "Waseem Dahman", "url": "https://github.com/wsmd"}, {"name": "Jamie Mason", "url": "https://github.com/JamieMason"}, {"name": "Douglas Duteil", "url": "https://github.com/douglasduteil"}, {"name": "Ahn", "url": "https://github.com/AhnpGit"}, {"name": "Josh Goldberg", "url": "https://github.com/joshuakgoldberg"}, {"name": "Bradley Ayers", "url": "https://github.com/bradleyayers"}], "repository": {"type": "git", "url": "https://www.github.com/DefinitelyTyped/DefinitelyTyped.git"}, "links": {"npm": "https://www.npmjs.com/package/%40types%2Fjest"}, "license": "MIT", "releases": [{"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 6}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 16}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 33}, {"from": "2016-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 62}], "readme": "# Installation\r\n> `npm install --save @types/jest`\r\n\r\n# Summary\r\nThis package contains type definitions for Jest (http://facebook.github.io/jest/).\r\n\r\n# Details\r\nFiles were exported from https://www.github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/jest\r\n\r\nAdditional Details\r\n * Last updated: Wed, 11 Apr 2018 19:11:59 GMT\r\n * Dependencies: none\r\n * Global values: afterAll, afterEach, beforeAll, beforeEach, describe, expect, fail, fdescribe, fit, it, jasmine, jest, pending, spyOn, test, xdescribe, xit, xtest\r\n\r\n# Credits\r\nThese definitions were written by Asana <https://asana.com>, Ivo Stratev <https://github.com/NoHomey>, jwbay <https://github.com/jwbay>, Alexey Svetliakov <https://github.com/asvetliakov>, Alex Jover Morales <https://github.com/alexjoverm>, Allan Lukwago <https://github.com/epicallan>, Ika <https://github.com/ikatyang>, Waseem Dahman <https://github.com/wsmd>, Jamie Mason <https://github.com/JamieMason>, Douglas Duteil <https://github.com/douglasduteil>, Ahn <https://github.com/AhnpGit>, Josh Goldberg <https://github.com/joshuakgoldberg>, Bradley Ayers <https://github.com/bradleyayers>."}, "npm": {"downloads": [{"from": "2018-05-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 0}, {"from": "2018-05-11T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 252371}, {"from": "2018-04-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 1287714}, {"from": "2018-02-17T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 3675932}, {"from": "2017-11-19T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 5931806}, {"from": "2017-05-18T00:00:00.000Z", "to": "2018-05-18T00:00:00.000Z", "count": 8436358}], "dependentsCount": 157, "starsCount": 0}, "source": {"files": {"readmeSize": 0, "testsSize": 0}}}, "evaluation": {"quality": {"carefulness": 0.33, "tests": 0, "health": 1, "branding": 0}, "popularity": {"communityInterest": 0, "downloadsCount": 1225310.6666666667, "downloadsAcceleration": 7412.914649923898, "dependentsCount": 157}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "error": {"unrecoverable": true, "tarballFile": "/tmp/npms-analyzer/types-jest-1mk3roru7vu/tarball.tar.gz", "name": "Error", "message": "Tarball has too many files", "stack": "Error: Tarball has too many files\n    at exec.spread.tap (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:46:33)\nFrom previous event:\n    at assertFilesCount (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:39:6)\n    at untar (/home/analyzer/npms-analyzer/source/lib/analyze/download/util/untar.js:94:12)\n    at tokenDealer.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:89:16)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:86:6)\n    at /home/analyzer/npms-analyzer/source/lib/analyze/download/github.js:160:16\n    at createTmpDir.then (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:92:9)\n    at Immediate.args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processImmediate (internal/timers.js:443:21)\nFrom previous event:\n    at download (/home/analyzer/npms-analyzer/source/lib/analyze/download/index.js:91:6)\n    at npmNano.getAsync.catch.then (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:160:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\n    at Request.emit (events.js:193:13)\n    at Request.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1161:10)\n    at Request.emit (events.js:193:13)\n    at IncomingMessage.<anonymous> (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:1083:12)\nFrom previous event:\n    at analyze (/home/analyzer/npms-analyzer/source/lib/analyze/index.js:156:6)\n    at analyze.get.catch.then (/home/analyzer/npms-analyzer/source/cmd/consume.js:52:16)\n    at Request._callback (/home/analyzer/npms-analyzer/source/node_modules/nano/lib/nano.js:118:11)\n    at Request.self.callback (/home/analyzer/npms-analyzer/source/node_modules/request/request.js:185:22)\nFrom previous event:\n    at onMessage (/home/analyzer/npms-analyzer/source/cmd/consume.js:44:6)\n    at Object.queue.consume [as fn] (/home/analyzer/npms-analyzer/source/cmd/consume.js:117:40)\n    at Promise.try (/home/analyzer/npms-analyzer/source/lib/queue.js:308:46)\nFrom previous event:\n    at Promise.resolve._channel.consume (/home/analyzer/npms-analyzer/source/lib/queue.js:308:24)\n    at ConfirmChannel.BaseChannel.dispatchMessage (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:484:12)\n    at ConfirmChannel.BaseChannel.handleDelivery (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:493:15)\n    at ConfirmChannel.emit (events.js:193:13)\n    at /home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:279:10\n    at ConfirmChannel.content (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:332:9)\n    at ConfirmChannel.C.acceptMessageFrame (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:247:31)\n    at ConfirmChannel.C.accept (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/channel.js:400:17)\n    at Connection.mainAccept [as accept] (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:64:33)\n    at Socket.go (/home/analyzer/npms-analyzer/source/node_modules/amqplib/lib/connection.js:478:48)\n    at Socket.emit (events.js:193:13)\n    at emitReadable_ (_stream_readable.js:550:12)\n    at args.(anonymous function) (/usr/lib/node_modules/pm2/node_modules/event-loop-inspector/index.js:138:29)\n    at processTicksAndRejections (internal/process/task_queues.js:81:17)", "caughtAt": "2020-06-24T17:26:06.717Z"}, "score": {"final": 0.33558204999802227, "detail": {"quality": 0.3989157997139142, "popularity": 0.283544695477661, "maintenance": 0.3333333333333333}}}}, {"request": {"analyzedAt": "2020-05-11T15:30:57.526Z", "collected": {"metadata": {"name": "request", "scope": "unscoped", "version": "2.88.2", "description": "Simplified HTTP request client.", "keywords": ["http", "simple", "util", "utility"], "date": "2020-02-11T16:35:36.122Z", "author": {"name": "Mikeal Rogers", "email": "mikeal.rogers@gmail.com", "username": "mikeal"}, "publisher": {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, "maintainers": [{"username": "fredkschott", "email": "fkschott@gmail.com"}, {"username": "mikeal", "email": "mikeal.rogers@gmail.com"}, {"username": "nylen", "email": "jnylen@gmail.com"}, {"username": "simov", "email": "simeonvelichkov@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/request/request.git"}, "links": {"npm": "https://www.npmjs.com/package/request", "homepage": "https://github.com/request/request#readme", "repository": "https://github.com/request/request", "bugs": "http://github.com/request/request/issues"}, "license": "Apache-2.0", "dependencies": {"aws-sign2": "~0.7.0", "aws4": "^1.8.0", "caseless": "~0.12.0", "combined-stream": "~1.0.6", "extend": "~3.0.2", "forever-agent": "~0.6.1", "form-data": "~2.3.2", "har-validator": "~5.1.3", "http-signature": "~1.2.0", "is-typedarray": "~1.0.0", "isstream": "~0.1.2", "json-stringify-safe": "~5.0.1", "mime-types": "~2.1.19", "oauth-sign": "~0.9.0", "performance-now": "^2.1.0", "qs": "~6.5.2", "safe-buffer": "^5.1.2", "tough-cookie": "~2.5.0", "tunnel-agent": "^0.6.0", "uuid": "^3.3.2"}, "devDependencies": {"bluebird": "^3.2.1", "browserify": "^13.0.1", "browserify-istanbul": "^2.0.0", "buffer-equal": "^1.0.0", "codecov": "^3.0.4", "coveralls": "^3.0.2", "function-bind": "^1.0.2", "karma": "^3.0.0", "karma-browserify": "^5.0.1", "karma-cli": "^1.0.0", "karma-coverage": "^1.0.0", "karma-phantomjs-launcher": "^1.0.0", "karma-tap": "^3.0.1", "nyc": "^14.1.1", "phantomjs-prebuilt": "^2.1.3", "rimraf": "^2.2.8", "server-destroy": "^1.0.1", "standard": "^9.0.0", "tape": "^4.6.0", "taper": "^0.5.0"}, "releases": [{"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1}, {"from": "2018-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 4}], "deprecated": "request has been deprecated, see https://github.com/request/request/issues/3142", "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# Deprecated!\n\nAs of Feb 11th 2020, request is fully deprecated. No new changes are expected land. In fact, none have landed for some time.\n\nFor more information about why request is deprecated and possible alternatives refer to\n[this issue](https://github.com/request/request/issues/3142).\n\n# Request - Simplified HTTP client\n\n[![npm package](https://nodei.co/npm/request.png?downloads=true&downloadRank=true&stars=true)](https://nodei.co/npm/request/)\n\n[![Build status](https://img.shields.io/travis/request/request/master.svg?style=flat-square)](https://travis-ci.org/request/request)\n[![Coverage](https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square)](https://codecov.io/github/request/request?branch=master)\n[![Coverage](https://img.shields.io/coveralls/request/request.svg?style=flat-square)](https://coveralls.io/r/request/request)\n[![Dependency Status](https://img.shields.io/david/request/request.svg?style=flat-square)](https://david-dm.org/request/request)\n[![Known Vulnerabilities](https://snyk.io/test/npm/request/badge.svg?style=flat-square)](https://snyk.io/test/npm/request)\n[![Gitter](https://img.shields.io/badge/gitter-join_chat-blue.svg?style=flat-square)](https://gitter.im/request/request?utm_source=badge)\n\n\n## Super simple to use\n\nRequest is designed to be the simplest way possible to make http calls. It supports HTTPS and follows redirects by default.\n\n```js\nconst request = require('request');\nrequest('http://www.google.com', function (error, response, body) {\n  console.error('error:', error); // Print the error if one occurred\n  console.log('statusCode:', response && response.statusCode); // Print the response status code if a response was received\n  console.log('body:', body); // Print the HTML for the Google homepage.\n});\n```\n\n\n## Table of contents\n\n- [Streaming](#streaming)\n- [Promises & Async/Await](#promises--asyncawait)\n- [Forms](#forms)\n- [HTTP Authentication](#http-authentication)\n- [Custom HTTP Headers](#custom-http-headers)\n- [OAuth Signing](#oauth-signing)\n- [Proxies](#proxies)\n- [Unix Domain Sockets](#unix-domain-sockets)\n- [TLS/SSL Protocol](#tlsssl-protocol)\n- [Support for HAR 1.2](#support-for-har-12)\n- [**All Available Options**](#requestoptions-callback)\n\nRequest also offers [convenience methods](#convenience-methods) like\n`request.defaults` and `request.post`, and there are\nlots of [usage examples](#examples) and several\n[debugging techniques](#debugging).\n\n\n---\n\n\n## Streaming\n\nYou can stream any response to a file stream.\n\n```js\nrequest('http://google.com/doodle.png').pipe(fs.createWriteStream('doodle.png'))\n```\n\nYou can also stream a file to a PUT or POST request. This method will also check the file extension against a mapping of file extensions to content-types (in this case `application/json`) and use the proper `content-type` in the PUT request (if the headers don\u2019t already provide one).\n\n```js\nfs.createReadStream('file.json').pipe(request.put('http://mysite.com/obj.json'))\n```\n\nRequest can also `pipe` to itself. When doing so, `content-type` and `content-length` are preserved in the PUT headers.\n\n```js\nrequest.get('http://google.com/img.png').pipe(request.put('http://mysite.com/img.png'))\n```\n\nRequest emits a \"response\" event when a response is received. The `response` argument will be an instance of [http.IncomingMessage](https://nodejs.org/api/http.html#http_class_http_incomingmessage).\n\n```js\nrequest\n  .get('http://google.com/img.png')\n  .on('response', function(response) {\n    console.log(response.statusCode) // 200\n    console.log(response.headers['content-type']) // 'image/png'\n  })\n  .pipe(request.put('http://mysite.com/img.png'))\n```\n\nTo easily handle errors when streaming requests, listen to the `error` event before piping:\n\n```js\nrequest\n  .get('http://mysite.com/doodle.png')\n  .on('error', function(err) {\n    console.error(err)\n  })\n  .pipe(fs.createWriteStream('doodle.png'))\n```\n\nNow let\u2019s get fancy.\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    if (req.method === 'PUT') {\n      req.pipe(request.put('http://mysite.com/doodle.png'))\n    } else if (req.method === 'GET' || req.method === 'HEAD') {\n      request.get('http://mysite.com/doodle.png').pipe(resp)\n    }\n  }\n})\n```\n\nYou can also `pipe()` from `http.ServerRequest` instances, as well as to `http.ServerResponse` instances. The HTTP method, headers, and entity-body data will be sent. Which means that, if you don't really care about security, you can do:\n\n```js\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    const x = request('http://mysite.com/doodle.png')\n    req.pipe(x)\n    x.pipe(resp)\n  }\n})\n```\n\nAnd since `pipe()` returns the destination stream in \u2265 Node 0.5.x you can do one line proxying. :)\n\n```js\nreq.pipe(request('http://mysite.com/doodle.png')).pipe(resp)\n```\n\nAlso, none of this new functionality conflicts with requests previous features, it just expands them.\n\n```js\nconst r = request.defaults({'proxy':'http://localproxy.com'})\n\nhttp.createServer(function (req, resp) {\n  if (req.url === '/doodle.png') {\n    r.get('http://google.com/doodle.png').pipe(resp)\n  }\n})\n```\n\nYou can still use intermediate proxies, the requests will still follow HTTP forwards, etc.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Promises & Async/Await\n\n`request` supports both streaming and callback interfaces natively. If you'd like `request` to return a Promise instead, you can use an alternative interface wrapper for `request`. These wrappers can be useful if you prefer to work with Promises, or if you'd like to use `async`/`await` in ES2017.\n\nSeveral alternative interfaces are provided by the request team, including:\n- [`request-promise`](https://github.com/request/request-promise) (uses [Bluebird](https://github.com/petkaantonov/bluebird) Promises)\n- [`request-promise-native`](https://github.com/request/request-promise-native) (uses native Promises)\n- [`request-promise-any`](https://github.com/request/request-promise-any) (uses [any-promise](https://www.npmjs.com/package/any-promise) Promises)\n\nAlso, [`util.promisify`](https://nodejs.org/api/util.html#util_util_promisify_original), which is available from Node.js v8.0 can be used to convert a regular function that takes a callback to return a promise instead.\n\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Forms\n\n`request` supports `application/x-www-form-urlencoded` and `multipart/form-data` form uploads. For `multipart/related` refer to the `multipart` API.\n\n\n#### application/x-www-form-urlencoded (URL-Encoded Forms)\n\nURL-encoded forms are simple.\n\n```js\nrequest.post('http://service.com/upload', {form:{key:'value'}})\n// or\nrequest.post('http://service.com/upload').form({key:'value'})\n// or\nrequest.post({url:'http://service.com/upload', form: {key:'value'}}, function(err,httpResponse,body){ /* ... */ })\n```\n\n\n#### multipart/form-data (Multipart Form Uploads)\n\nFor `multipart/form-data` we use the [form-data](https://github.com/form-data/form-data) library by [@felixge](https://github.com/felixge). For the most cases, you can pass your upload form data via the `formData` option.\n\n\n```js\nconst formData = {\n  // Pass a simple key-value pair\n  my_field: 'my_value',\n  // Pass data via Buffers\n  my_buffer: Buffer.from([1, 2, 3]),\n  // Pass data via Streams\n  my_file: fs.createReadStream(__dirname + '/unicycle.jpg'),\n  // Pass multiple values /w an Array\n  attachments: [\n    fs.createReadStream(__dirname + '/attachment1.jpg'),\n    fs.createReadStream(__dirname + '/attachment2.jpg')\n  ],\n  // Pass optional meta-data with an 'options' object with style: {value: DATA, options: OPTIONS}\n  // Use case: for some types of streams, you'll need to provide \"file\"-related information manually.\n  // See the `form-data` README for more information about options: https://github.com/form-data/form-data\n  custom_file: {\n    value:  fs.createReadStream('/dev/urandom'),\n    options: {\n      filename: 'topsecret.jpg',\n      contentType: 'image/jpeg'\n    }\n  }\n};\nrequest.post({url:'http://service.com/upload', formData: formData}, function optionalCallback(err, httpResponse, body) {\n  if (err) {\n    return console.error('upload failed:', err);\n  }\n  console.log('Upload successful!  Server responded with:', body);\n});\n```\n\nFor advanced cases, you can access the form-data object itself via `r.form()`. This can be modified until the request is fired on the next cycle of the event-loop. (Note that this calling `form()` will clear the currently set form data for that request.)\n\n```js\n// NOTE: Advanced use-case, for normal use see 'formData' usage above\nconst r = request.post('http://service.com/upload', function optionalCallback(err, httpResponse, body) {...})\nconst form = r.form();\nform.append('my_field', 'my_value');\nform.append('my_buffer', Buffer.from([1, 2, 3]));\nform.append('custom_file', fs.createReadStream(__dirname + '/unicycle.jpg'), {filename: 'unicycle.jpg'});\n```\nSee the [form-data README](https://github.com/form-data/form-data) for more information & examples.\n\n\n#### multipart/related\n\nSome variations in different HTTP implementations require a newline/CRLF before, after, or both before and after the boundary of a `multipart/related` request (using the multipart option). This has been observed in the .NET WebAPI version 4.0. You can turn on a boundary preambleCRLF or postamble by passing them as `true` to your request options.\n\n```js\n  request({\n    method: 'PUT',\n    preambleCRLF: true,\n    postambleCRLF: true,\n    uri: 'http://service.com/upload',\n    multipart: [\n      {\n        'content-type': 'application/json',\n        body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n      },\n      { body: 'I am an attachment' },\n      { body: fs.createReadStream('image.png') }\n    ],\n    // alternatively pass an object containing additional options\n    multipart: {\n      chunked: false,\n      data: [\n        {\n          'content-type': 'application/json',\n          body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        },\n        { body: 'I am an attachment' }\n      ]\n    }\n  },\n  function (error, response, body) {\n    if (error) {\n      return console.error('upload failed:', error);\n    }\n    console.log('Upload successful!  Server responded with:', body);\n  })\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## HTTP Authentication\n\n```js\nrequest.get('http://some.server.com/').auth('username', 'password', false);\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'user': 'username',\n    'pass': 'password',\n    'sendImmediately': false\n  }\n});\n// or\nrequest.get('http://some.server.com/').auth(null, null, true, 'bearerToken');\n// or\nrequest.get('http://some.server.com/', {\n  'auth': {\n    'bearer': 'bearerToken'\n  }\n});\n```\n\nIf passed as an option, `auth` should be a hash containing values:\n\n- `user` || `username`\n- `pass` || `password`\n- `sendImmediately` (optional)\n- `bearer` (optional)\n\nThe method form takes parameters\n`auth(username, password, sendImmediately, bearer)`.\n\n`sendImmediately` defaults to `true`, which causes a basic or bearer\nauthentication header to be sent. If `sendImmediately` is `false`, then\n`request` will retry with a proper authentication header after receiving a\n`401` response from the server (which must contain a `WWW-Authenticate` header\nindicating the required authentication method).\n\nNote that you can also specify basic authentication using the URL itself, as\ndetailed in [RFC 1738](http://www.ietf.org/rfc/rfc1738.txt). Simply pass the\n`user:password` before the host with an `@` sign:\n\n```js\nconst username = 'username',\n    password = 'password',\n    url = 'http://' + username + ':' + password + '@some.server.com';\n\nrequest({url}, function (error, response, body) {\n   // Do more stuff with 'body' here\n});\n```\n\nDigest authentication is supported, but it only works with `sendImmediately`\nset to `false`; otherwise `request` will send basic authentication on the\ninitial request, which will probably cause the request to fail.\n\nBearer authentication is supported, and is activated when the `bearer` value is\navailable. The value may be either a `String` or a `Function` returning a\n`String`. Using a function to supply the bearer token is particularly useful if\nused in conjunction with `defaults` to allow a single function to supply the\nlast known token at the time of sending a request, or to compute one on the fly.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Custom HTTP Headers\n\nHTTP Headers, such as `User-Agent`, can be set in the `options` object.\nIn the example below, we call the github API to find out the number\nof stars and forks for the request repository. This requires a\ncustom `User-Agent` header as well as https.\n\n```js\nconst request = require('request');\n\nconst options = {\n  url: 'https://api.github.com/repos/request/request',\n  headers: {\n    'User-Agent': 'request'\n  }\n};\n\nfunction callback(error, response, body) {\n  if (!error && response.statusCode == 200) {\n    const info = JSON.parse(body);\n    console.log(info.stargazers_count + \" Stars\");\n    console.log(info.forks_count + \" Forks\");\n  }\n}\n\nrequest(options, callback);\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## OAuth Signing\n\n[OAuth version 1.0](https://tools.ietf.org/html/rfc5849) is supported. The\ndefault signing algorithm is\n[HMAC-SHA1](https://tools.ietf.org/html/rfc5849#section-3.4.2):\n\n```js\n// OAuth1.0 - 3-legged server side flow (Twitter example)\n// step 1\nconst qs = require('querystring')\n  , oauth =\n    { callback: 'http://mysite.com/callback/'\n    , consumer_key: CONSUMER_KEY\n    , consumer_secret: CONSUMER_SECRET\n    }\n  , url = 'https://api.twitter.com/oauth/request_token'\n  ;\nrequest.post({url:url, oauth:oauth}, function (e, r, body) {\n  // Ideally, you would take the body in the response\n  // and construct a URL that a user clicks on (like a sign in button).\n  // The verifier is only available in the response after a user has\n  // verified with twitter that they are authorizing your app.\n\n  // step 2\n  const req_data = qs.parse(body)\n  const uri = 'https://api.twitter.com/oauth/authenticate'\n    + '?' + qs.stringify({oauth_token: req_data.oauth_token})\n  // redirect the user to the authorize uri\n\n  // step 3\n  // after the user is redirected back to your server\n  const auth_data = qs.parse(body)\n    , oauth =\n      { consumer_key: CONSUMER_KEY\n      , consumer_secret: CONSUMER_SECRET\n      , token: auth_data.oauth_token\n      , token_secret: req_data.oauth_token_secret\n      , verifier: auth_data.oauth_verifier\n      }\n    , url = 'https://api.twitter.com/oauth/access_token'\n    ;\n  request.post({url:url, oauth:oauth}, function (e, r, body) {\n    // ready to make signed requests on behalf of the user\n    const perm_data = qs.parse(body)\n      , oauth =\n        { consumer_key: CONSUMER_KEY\n        , consumer_secret: CONSUMER_SECRET\n        , token: perm_data.oauth_token\n        , token_secret: perm_data.oauth_token_secret\n        }\n      , url = 'https://api.twitter.com/1.1/users/show.json'\n      , qs =\n        { screen_name: perm_data.screen_name\n        , user_id: perm_data.user_id\n        }\n      ;\n    request.get({url:url, oauth:oauth, qs:qs, json:true}, function (e, r, user) {\n      console.log(user)\n    })\n  })\n})\n```\n\nFor [RSA-SHA1 signing](https://tools.ietf.org/html/rfc5849#section-3.4.3), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'RSA-SHA1'`\n* Instead of `consumer_secret`, specify a `private_key` string in\n  [PEM format](http://how2ssl.com/articles/working_with_pem_files/)\n\nFor [PLAINTEXT signing](http://oauth.net/core/1.0/#anchor22), make\nthe following changes to the OAuth options object:\n* Pass `signature_method : 'PLAINTEXT'`\n\nTo send OAuth parameters via query params or in a post body as described in The\n[Consumer Request Parameters](http://oauth.net/core/1.0/#consumer_req_param)\nsection of the oauth1 spec:\n* Pass `transport_method : 'query'` or `transport_method : 'body'` in the OAuth\n  options object.\n* `transport_method` defaults to `'header'`\n\nTo use [Request Body Hash](https://oauth.googlecode.com/svn/spec/ext/body_hash/1.0/oauth-bodyhash.html) you can either\n* Manually generate the body hash and pass it as a string `body_hash: '...'`\n* Automatically generate the body hash by passing `body_hash: true`\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Proxies\n\nIf you specify a `proxy` option, then the request (and any subsequent\nredirects) will be sent via a connection to the proxy server.\n\nIf your endpoint is an `https` url, and you are using a proxy, then\nrequest will send a `CONNECT` request to the proxy server *first*, and\nthen use the supplied connection to connect to the endpoint.\n\nThat is, first it will make a request like:\n\n```\nHTTP/1.1 CONNECT endpoint-server.com:80\nHost: proxy-server.com\nUser-Agent: whatever user agent you specify\n```\n\nand then the proxy server make a TCP connection to `endpoint-server`\non port `80`, and return a response that looks like:\n\n```\nHTTP/1.1 200 OK\n```\n\nAt this point, the connection is left open, and the client is\ncommunicating directly with the `endpoint-server.com` machine.\n\nSee [the wikipedia page on HTTP Tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel)\nfor more information.\n\nBy default, when proxying `http` traffic, request will simply make a\nstandard proxied `http` request. This is done by making the `url`\nsection of the initial line of the request a fully qualified url to\nthe endpoint.\n\nFor example, it will make a single request that looks like:\n\n```\nHTTP/1.1 GET http://endpoint-server.com/some-url\nHost: proxy-server.com\nOther-Headers: all go here\n\nrequest body or whatever\n```\n\nBecause a pure \"http over http\" tunnel offers no additional security\nor other features, it is generally simpler to go with a\nstraightforward HTTP proxy in this case. However, if you would like\nto force a tunneling proxy, you may set the `tunnel` option to `true`.\n\nYou can also make a standard proxied `http` request by explicitly setting\n`tunnel : false`, but **note that this will allow the proxy to see the traffic\nto/from the destination server**.\n\nIf you are using a tunneling proxy, you may set the\n`proxyHeaderWhiteList` to share certain headers with the proxy.\n\nYou can also set the `proxyHeaderExclusiveList` to share certain\nheaders only with the proxy and not with destination host.\n\nBy default, this set is:\n\n```\naccept\naccept-charset\naccept-encoding\naccept-language\naccept-ranges\ncache-control\ncontent-encoding\ncontent-language\ncontent-length\ncontent-location\ncontent-md5\ncontent-range\ncontent-type\nconnection\ndate\nexpect\nmax-forwards\npragma\nproxy-authorization\nreferer\nte\ntransfer-encoding\nuser-agent\nvia\n```\n\nNote that, when using a tunneling proxy, the `proxy-authorization`\nheader and any headers from custom `proxyHeaderExclusiveList` are\n*never* sent to the endpoint server, but only to the proxy server.\n\n\n### Controlling proxy behaviour using environment variables\n\nThe following environment variables are respected by `request`:\n\n * `HTTP_PROXY` / `http_proxy`\n * `HTTPS_PROXY` / `https_proxy`\n * `NO_PROXY` / `no_proxy`\n\nWhen `HTTP_PROXY` / `http_proxy` are set, they will be used to proxy non-SSL requests that do not have an explicit `proxy` configuration option present. Similarly, `HTTPS_PROXY` / `https_proxy` will be respected for SSL requests that do not have an explicit `proxy` configuration option. It is valid to define a proxy in one of the environment variables, but then override it for a specific request, using the `proxy` configuration option. Furthermore, the `proxy` configuration option can be explicitly set to false / null to opt out of proxying altogether for that request.\n\n`request` is also aware of the `NO_PROXY`/`no_proxy` environment variables. These variables provide a granular way to opt out of proxying, on a per-host basis. It should contain a comma separated list of hosts to opt out of proxying. It is also possible to opt of proxying when a particular destination port is used. Finally, the variable may be set to `*` to opt out of the implicit proxy configuration of the other environment variables.\n\nHere's some examples of valid `no_proxy` values:\n\n * `google.com` - don't proxy HTTP/HTTPS requests to Google.\n * `google.com:443` - don't proxy HTTPS requests to Google, but *do* proxy HTTP requests to Google.\n * `google.com:443, yahoo.com:80` - don't proxy HTTPS requests to Google, and don't proxy HTTP requests to Yahoo!\n * `*` - ignore `https_proxy`/`http_proxy` environment variables altogether.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## UNIX Domain Sockets\n\n`request` supports making requests to [UNIX Domain Sockets](https://en.wikipedia.org/wiki/Unix_domain_socket). To make one, use the following URL scheme:\n\n```js\n/* Pattern */ 'http://unix:SOCKET:PATH'\n/* Example */ request.get('http://unix:/absolute/path/to/unix.socket:/request/path')\n```\n\nNote: The `SOCKET` path is assumed to be absolute to the root of the host file system.\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## TLS/SSL Protocol\n\nTLS/SSL Protocol options, such as `cert`, `key` and `passphrase`, can be\nset directly in `options` object, in the `agentOptions` property of the `options` object, or even in `https.globalAgent.options`. Keep in mind that, although `agentOptions` allows for a slightly wider range of configurations, the recommended way is via `options` object directly, as using `agentOptions` or `https.globalAgent.options` would not be applied in the same way in proxied environments (as data travels through a TLS connection instead of an http/https agent).\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , caFile = path.resolve(__dirname, 'ssl/ca.cert.pem')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    cert: fs.readFileSync(certFile),\n    key: fs.readFileSync(keyFile),\n    passphrase: 'password',\n    ca: fs.readFileSync(caFile)\n};\n\nrequest.get(options);\n```\n\n### Using `options.agentOptions`\n\nIn the example below, we call an API that requires client side SSL certificate\n(in PEM format) with passphrase protected private key (in PEM format) and disable the SSLv3 protocol:\n\n```js\nconst fs = require('fs')\n    , path = require('path')\n    , certFile = path.resolve(__dirname, 'ssl/client.crt')\n    , keyFile = path.resolve(__dirname, 'ssl/client.key')\n    , request = require('request');\n\nconst options = {\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        cert: fs.readFileSync(certFile),\n        key: fs.readFileSync(keyFile),\n        // Or use `pfx` property replacing `cert` and `key` when using private key, certificate and CA certs in PFX or PKCS12 format:\n        // pfx: fs.readFileSync(pfxFilePath),\n        passphrase: 'password',\n        securityOptions: 'SSL_OP_NO_SSLv3'\n    }\n};\n\nrequest.get(options);\n```\n\nIt is able to force using SSLv3 only by specifying `secureProtocol`:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        secureProtocol: 'SSLv3_method'\n    }\n});\n```\n\nIt is possible to accept other certificates than those signed by generally allowed Certificate Authorities (CAs).\nThis can be useful, for example,  when using self-signed certificates.\nTo require a different root certificate, you can specify the signing CA by adding the contents of the CA's certificate file to the `agentOptions`.\nThe certificate the domain presents must be signed by the root certificate specified:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: fs.readFileSync('ca.cert.pem')\n    }\n});\n```\n\nThe `ca` value can be an array of certificates, in the event you have a private or internal corporate public-key infrastructure hierarchy. For example, if you want to connect to https://api.some-server.com which presents a key chain consisting of:\n1. its own public key, which is signed by:\n2. an intermediate \"Corp Issuing Server\", that is in turn signed by: \n3. a root CA \"Corp Root CA\";\n\nyou can configure your request as follows:\n\n```js\nrequest.get({\n    url: 'https://api.some-server.com/',\n    agentOptions: {\n        ca: [\n          fs.readFileSync('Corp Issuing Server.pem'),\n          fs.readFileSync('Corp Root CA.pem')\n        ]\n    }\n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Support for HAR 1.2\n\nThe `options.har` property will override the values: `url`, `method`, `qs`, `headers`, `form`, `formData`, `body`, `json`, as well as construct multipart data and read files from disk when `request.postData.params[].fileName` is present without a matching `value`.\n\nA validation step will check if the HAR Request format matches the latest spec (v1.2) and will skip parsing if not matching.\n\n```js\n  const request = require('request')\n  request({\n    // will be ignored\n    method: 'GET',\n    uri: 'http://www.google.com',\n\n    // HTTP Archive Request Object\n    har: {\n      url: 'http://www.mockbin.com/har',\n      method: 'POST',\n      headers: [\n        {\n          name: 'content-type',\n          value: 'application/x-www-form-urlencoded'\n        }\n      ],\n      postData: {\n        mimeType: 'application/x-www-form-urlencoded',\n        params: [\n          {\n            name: 'foo',\n            value: 'bar'\n          },\n          {\n            name: 'hello',\n            value: 'world'\n          }\n        ]\n      }\n    }\n  })\n\n  // a POST request will be sent to http://www.mockbin.com\n  // with body an application/x-www-form-urlencoded body:\n  // foo=bar&hello=world\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n## request(options, callback)\n\nThe first argument can be either a `url` or an `options` object. The only required option is `uri`; all others are optional.\n\n- `uri` || `url` - fully qualified uri or a parsed url object from `url.parse()`\n- `baseUrl` - fully qualified uri string used as the base url. Most useful with `request.defaults`, for example when you want to do many requests to the same domain. If `baseUrl` is `https://example.com/api/`, then requesting `/end/point?test=true` will fetch `https://example.com/api/end/point?test=true`. When `baseUrl` is given, `uri` must also be a string.\n- `method` - http method (default: `\"GET\"`)\n- `headers` - http headers (default: `{}`)\n\n---\n\n- `qs` - object containing querystring values to be appended to the `uri`\n- `qsParseOptions` - object containing options to pass to the [qs.parse](https://github.com/hapijs/qs#parsing-objects) method. Alternatively pass options to the [querystring.parse](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_parse_str_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`\n- `qsStringifyOptions` - object containing options to pass to the [qs.stringify](https://github.com/hapijs/qs#stringifying) method. Alternatively pass options to the  [querystring.stringify](https://nodejs.org/docs/v0.12.0/api/querystring.html#querystring_querystring_stringify_obj_sep_eq_options) method using this format `{sep:';', eq:':', options:{}}`. For example, to change the way arrays are converted to query strings using the `qs` module pass the `arrayFormat` option with one of `indices|brackets|repeat`\n- `useQuerystring` - if true, use `querystring` to stringify and parse\n  querystrings, otherwise use `qs` (default: `false`). Set this option to\n  `true` if you need arrays to be serialized as `foo=bar&foo=baz` instead of the\n  default `foo[0]=bar&foo[1]=baz`.\n\n---\n\n- `body` - entity body for PATCH, POST and PUT requests. Must be a `Buffer`, `String` or `ReadStream`. If `json` is `true`, then `body` must be a JSON-serializable object.\n- `form` - when passed an object or a querystring, this sets `body` to a querystring representation of value, and adds `Content-type: application/x-www-form-urlencoded` header. When passed no options, a `FormData` instance is returned (and is piped to request). See \"Forms\" section above.\n- `formData` - data to pass for a `multipart/form-data` request. See\n  [Forms](#forms) section above.\n- `multipart` - array of objects which contain their own headers and `body`\n  attributes. Sends a `multipart/related` request. See [Forms](#forms) section\n  above.\n  - Alternatively you can pass in an object `{chunked: false, data: []}` where\n    `chunked` is used to specify whether the request is sent in\n    [chunked transfer encoding](https://en.wikipedia.org/wiki/Chunked_transfer_encoding)\n    In non-chunked requests, data items with body streams are not allowed.\n- `preambleCRLF` - append a newline/CRLF before the boundary of your `multipart/form-data` request.\n- `postambleCRLF` - append a newline/CRLF at the end of the boundary of your `multipart/form-data` request.\n- `json` - sets `body` to JSON representation of value and adds `Content-type: application/json` header. Additionally, parses the response body as JSON.\n- `jsonReviver` - a [reviver function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/parse) that will be passed to `JSON.parse()` when parsing a JSON response body.\n- `jsonReplacer` - a [replacer function](https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON/stringify) that will be passed to `JSON.stringify()` when stringifying a JSON request body.\n\n---\n\n- `auth` - a hash containing values `user` || `username`, `pass` || `password`, and `sendImmediately` (optional). See documentation above.\n- `oauth` - options for OAuth HMAC-SHA1 signing. See documentation above.\n- `hawk` - options for [Hawk signing](https://github.com/hueniverse/hawk). The `credentials` key must contain the necessary signing info, [see hawk docs for details](https://github.com/hueniverse/hawk#usage-example).\n- `aws` - `object` containing AWS signing information. Should have the properties `key`, `secret`, and optionally `session` (note that this only works for services that require session as part of the canonical string). Also requires the property `bucket`, unless you\u2019re specifying your `bucket` as part of the path, or the request doesn\u2019t use a bucket (i.e. GET Services). If you want to use AWS sign version 4 use the parameter `sign_version` with value `4` otherwise the default is version 2. If you are using SigV4, you can also include a `service` property that specifies the service name. **Note:** you need to `npm install aws4` first.\n- `httpSignature` - options for the [HTTP Signature Scheme](https://github.com/joyent/node-http-signature/blob/master/http_signing.md) using [Joyent's library](https://github.com/joyent/node-http-signature). The `keyId` and `key` properties must be specified. See the docs for other options.\n\n---\n\n- `followRedirect` - follow HTTP 3xx responses as redirects (default: `true`). This property can also be implemented as function which gets `response` object as a single argument and should return `true` if redirects should continue or `false` otherwise.\n- `followAllRedirects` - follow non-GET HTTP 3xx responses as redirects (default: `false`)\n- `followOriginalHttpMethod` - by default we redirect to HTTP method GET. you can enable this property to redirect to the original HTTP method (default: `false`)\n- `maxRedirects` - the maximum number of redirects to follow (default: `10`)\n- `removeRefererHeader` - removes the referer header when a redirect happens (default: `false`). **Note:** if true, referer header set in the initial request is preserved during redirect chain.\n\n---\n\n- `encoding` - encoding to be used on `setEncoding` of response data. If `null`, the `body` is returned as a `Buffer`. Anything else **(including the default value of `undefined`)** will be passed as the [encoding](http://nodejs.org/api/buffer.html#buffer_buffer) parameter to `toString()` (meaning this is effectively `utf8` by default). (**Note:** if you expect binary data, you should set `encoding: null`.)\n- `gzip` - if `true`, add an `Accept-Encoding` header to request compressed content encodings from the server (if not already present) and decode supported content encodings in the response. **Note:** Automatic decoding of the response content is performed on the body data returned through `request` (both through the `request` stream and passed to the callback function) but is not performed on the `response` stream (available from the `response` event) which is the unmodified `http.IncomingMessage` object which may contain compressed data. See example below.\n- `jar` - if `true`, remember cookies for future use (or define your custom cookie jar; see examples section)\n\n---\n\n- `agent` - `http(s).Agent` instance to use\n- `agentClass` - alternatively specify your agent's class name\n- `agentOptions` - and pass its options. **Note:** for HTTPS see [tls API doc for TLS/SSL options](http://nodejs.org/api/tls.html#tls_tls_connect_options_callback) and the [documentation above](#using-optionsagentoptions).\n- `forever` - set to `true` to use the [forever-agent](https://github.com/request/forever-agent) **Note:** Defaults to `http(s).Agent({keepAlive:true})` in node 0.12+\n- `pool` - an object describing which agents to use for the request. If this option is omitted the request will use the global agent (as long as your options allow for it). Otherwise, request will search the pool for your custom agent. If no custom agent is found, a new agent will be created and added to the pool. **Note:** `pool` is used only when the `agent` option is not specified.\n  - A `maxSockets` property can also be provided on the `pool` object to set the max number of sockets for all agents created (ex: `pool: {maxSockets: Infinity}`).\n  - Note that if you are sending multiple requests in a loop and creating\n    multiple new `pool` objects, `maxSockets` will not work as intended. To\n    work around this, either use [`request.defaults`](#requestdefaultsoptions)\n    with your pool options or create the pool object with the `maxSockets`\n    property outside of the loop.\n- `timeout` - integer containing number of milliseconds, controls two timeouts.\n  - **Read timeout**: Time to wait for a server to send response headers (and start the response body) before aborting the request.\n  - **Connection timeout**: Sets the socket to timeout after `timeout` milliseconds of inactivity. Note that increasing the timeout beyond the OS-wide TCP connection timeout will not have any effect ([the default in Linux can be anywhere from 20-120 seconds][linux-timeout])\n\n[linux-timeout]: http://www.sekuda.com/overriding_the_default_linux_kernel_20_second_tcp_socket_connect_timeout\n\n---\n\n- `localAddress` - local interface to bind for network connections.\n- `proxy` - an HTTP proxy to be used. Supports proxy Auth with Basic Auth, identical to support for the `url` parameter (by embedding the auth info in the `uri`)\n- `strictSSL` - if `true`, requires SSL certificates be valid. **Note:** to use your own certificate authority, you need to specify an agent that was created with that CA as an option.\n- `tunnel` - controls the behavior of\n  [HTTP `CONNECT` tunneling](https://en.wikipedia.org/wiki/HTTP_tunnel#HTTP_CONNECT_tunneling)\n  as follows:\n   - `undefined` (default) - `true` if the destination is `https`, `false` otherwise\n   - `true` - always tunnel to the destination by making a `CONNECT` request to\n     the proxy\n   - `false` - request the destination as a `GET` request.\n- `proxyHeaderWhiteList` - a whitelist of headers to send to a\n  tunneling proxy.\n- `proxyHeaderExclusiveList` - a whitelist of headers to send\n  exclusively to a tunneling proxy and not to destination.\n\n---\n\n- `time` - if `true`, the request-response cycle (including all redirects) is timed at millisecond resolution. When set, the following properties are added to the response object:\n  - `elapsedTime` Duration of the entire request/response in milliseconds (*deprecated*).\n  - `responseStartTime` Timestamp when the response began (in Unix Epoch milliseconds) (*deprecated*).\n  - `timingStart` Timestamp of the start of the request (in Unix Epoch milliseconds).\n  - `timings` Contains event timestamps in millisecond resolution relative to `timingStart`. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `socket` Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_socket) module's `socket` event fires. This happens when the socket is assigned to the request.\n    - `lookup` Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_lookup) module's `lookup` event fires. This happens when the DNS has been resolved.\n    - `connect`: Relative timestamp when the [`net`](https://nodejs.org/api/net.html#net_event_connect) module's `connect` event fires. This happens when the server acknowledges the TCP connection.\n    - `response`: Relative timestamp when the [`http`](https://nodejs.org/api/http.html#http_event_response) module's `response` event fires. This happens when the first bytes are received from the server.\n    - `end`: Relative timestamp when the last bytes of the response are received.\n  - `timingPhases` Contains the durations of each request phase. If there were redirects, the properties reflect the timings of the final request in the redirect chain:\n    - `wait`: Duration of socket initialization (`timings.socket`)\n    - `dns`: Duration of DNS lookup (`timings.lookup` - `timings.socket`)\n    - `tcp`: Duration of TCP connection (`timings.connect` - `timings.socket`)\n    - `firstByte`: Duration of HTTP server response (`timings.response` - `timings.connect`)\n    - `download`: Duration of HTTP download (`timings.end` - `timings.response`)\n    - `total`: Duration entire HTTP round-trip (`timings.end`)\n\n- `har` - a [HAR 1.2 Request Object](http://www.softwareishard.com/blog/har-12-spec/#request), will be processed from HAR format into options overwriting matching values *(see the [HAR 1.2 section](#support-for-har-12) for details)*\n- `callback` - alternatively pass the request's callback in the options object\n\nThe callback argument gets 3 arguments:\n\n1. An `error` when applicable (usually from [`http.ClientRequest`](http://nodejs.org/api/http.html#http_class_http_clientrequest) object)\n2. An [`http.IncomingMessage`](https://nodejs.org/api/http.html#http_class_http_incomingmessage) object (Response object)\n3. The third is the `response` body (`String` or `Buffer`, or JSON object if the `json` option is supplied)\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Convenience methods\n\nThere are also shorthand methods for different HTTP METHODs and some other conveniences.\n\n\n### request.defaults(options)\n\nThis method **returns a wrapper** around the normal request API that defaults\nto whatever options you pass to it.\n\n**Note:** `request.defaults()` **does not** modify the global request API;\ninstead, it **returns a wrapper** that has your default settings applied to it.\n\n**Note:** You can call `.defaults()` on the wrapper that is returned from\n`request.defaults` to add/override defaults that were previously defaulted.\n\nFor example:\n```js\n//requests using baseRequest() will set the 'x-token' header\nconst baseRequest = request.defaults({\n  headers: {'x-token': 'my-token'}\n})\n\n//requests using specialRequest() will include the 'x-token' header set in\n//baseRequest and will also include the 'special' header\nconst specialRequest = baseRequest.defaults({\n  headers: {special: 'special value'}\n})\n```\n\n### request.METHOD()\n\nThese HTTP method convenience functions act just like `request()` but with a default method already set for you:\n\n- *request.get()*: Defaults to `method: \"GET\"`.\n- *request.post()*: Defaults to `method: \"POST\"`.\n- *request.put()*: Defaults to `method: \"PUT\"`.\n- *request.patch()*: Defaults to `method: \"PATCH\"`.\n- *request.del() / request.delete()*: Defaults to `method: \"DELETE\"`.\n- *request.head()*: Defaults to `method: \"HEAD\"`.\n- *request.options()*: Defaults to `method: \"OPTIONS\"`.\n\n### request.cookie()\n\nFunction that creates a new cookie.\n\n```js\nrequest.cookie('key1=value1')\n```\n### request.jar()\n\nFunction that creates a new cookie jar.\n\n```js\nrequest.jar()\n```\n\n### response.caseless.get('header-name')\n\nFunction that returns the specified response header field using a [case-insensitive match](https://tools.ietf.org/html/rfc7230#section-3.2)\n\n```js\nrequest('http://www.google.com', function (error, response, body) {\n  // print the Content-Type header even if the server returned it as 'content-type' (lowercase)\n  console.log('Content-Type is:', response.caseless.get('Content-Type')); \n});\n```\n\n[back to top](#table-of-contents)\n\n\n---\n\n\n## Debugging\n\nThere are at least three ways to debug the operation of `request`:\n\n1. Launch the node process like `NODE_DEBUG=request node script.js`\n   (`lib,request,otherlib` works too).\n\n2. Set `require('request').debug = true` at any time (this does the same thing\n   as #1).\n\n3. Use the [request-debug module](https://github.com/request/request-debug) to\n   view request and response headers and bodies.\n\n[back to top](#table-of-contents)\n\n\n---\n\n## Timeouts\n\nMost requests to external servers should have a timeout attached, in case the\nserver is not responding in a timely manner. Without a timeout, your code may\nhave a socket open/consume resources for minutes or more.\n\nThere are two main types of timeouts: **connection timeouts** and **read\ntimeouts**. A connect timeout occurs if the timeout is hit while your client is\nattempting to establish a connection to a remote machine (corresponding to the\n[connect() call][connect] on the socket). A read timeout occurs any time the\nserver is too slow to send back a part of the response.\n\nThese two situations have widely different implications for what went wrong\nwith the request, so it's useful to be able to distinguish them. You can detect\ntimeout errors by checking `err.code` for an 'ETIMEDOUT' value. Further, you\ncan detect whether the timeout was a connection timeout by checking if the\n`err.connect` property is set to `true`.\n\n```js\nrequest.get('http://10.255.255.1', {timeout: 1500}, function(err) {\n    console.log(err.code === 'ETIMEDOUT');\n    // Set to `true` if the timeout was a connection timeout, `false` or\n    // `undefined` otherwise.\n    console.log(err.connect === true);\n    process.exit(0);\n});\n```\n\n[connect]: http://linux.die.net/man/2/connect\n\n## Examples:\n\n```js\n  const request = require('request')\n    , rand = Math.floor(Math.random()*100000000).toString()\n    ;\n  request(\n    { method: 'PUT'\n    , uri: 'http://mikeal.iriscouch.com/testjs/' + rand\n    , multipart:\n      [ { 'content-type': 'application/json'\n        ,  body: JSON.stringify({foo: 'bar', _attachments: {'message.txt': {follows: true, length: 18, 'content_type': 'text/plain' }}})\n        }\n      , { body: 'I am an attachment' }\n      ]\n    }\n  , function (error, response, body) {\n      if(response.statusCode == 201){\n        console.log('document saved as: http://mikeal.iriscouch.com/testjs/'+ rand)\n      } else {\n        console.log('error: '+ response.statusCode)\n        console.log(body)\n      }\n    }\n  )\n```\n\nFor backwards-compatibility, response compression is not supported by default.\nTo accept gzip-compressed responses, set the `gzip` option to `true`. Note\nthat the body data passed through `request` is automatically decompressed\nwhile the response object is unmodified and will contain compressed data if\nthe server sent a compressed response.\n\n```js\n  const request = require('request')\n  request(\n    { method: 'GET'\n    , uri: 'http://www.google.com'\n    , gzip: true\n    }\n  , function (error, response, body) {\n      // body is the decompressed response body\n      console.log('server encoded the data as: ' + (response.headers['content-encoding'] || 'identity'))\n      console.log('the decoded data is: ' + body)\n    }\n  )\n  .on('data', function(data) {\n    // decompressed data as it is received\n    console.log('decoded chunk: ' + data)\n  })\n  .on('response', function(response) {\n    // unmodified http.IncomingMessage object\n    response.on('data', function(data) {\n      // compressed data as it is received\n      console.log('received ' + data.length + ' bytes of compressed data')\n    })\n  })\n```\n\nCookies are disabled by default (else, they would be used in subsequent requests). To enable cookies, set `jar` to `true` (either in `defaults` or `options`).\n\n```js\nconst request = request.defaults({jar: true})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie jar (instead of `request`\u2019s global cookie jar), set `jar` to an instance of `request.jar()` (either in `defaults` or `options`)\n\n```js\nconst j = request.jar()\nconst request = request.defaults({jar:j})\nrequest('http://www.google.com', function () {\n  request('http://images.google.com')\n})\n```\n\nOR\n\n```js\nconst j = request.jar();\nconst cookie = request.cookie('key1=value1');\nconst url = 'http://www.google.com';\nj.setCookie(cookie, url);\nrequest({url: url, jar: j}, function () {\n  request('http://images.google.com')\n})\n```\n\nTo use a custom cookie store (such as a\n[`FileCookieStore`](https://github.com/mitsuru/tough-cookie-filestore)\nwhich supports saving to and restoring from JSON files), pass it as a parameter\nto `request.jar()`:\n\n```js\nconst FileCookieStore = require('tough-cookie-filestore');\n// NOTE - currently the 'cookies.json' file must already exist!\nconst j = request.jar(new FileCookieStore('cookies.json'));\nrequest = request.defaults({ jar : j })\nrequest('http://www.google.com', function() {\n  request('http://images.google.com')\n})\n```\n\nThe cookie store must be a\n[`tough-cookie`](https://github.com/SalesforceEng/tough-cookie)\nstore and it must support synchronous operations; see the\n[`CookieStore` API docs](https://github.com/SalesforceEng/tough-cookie#api)\nfor details.\n\nTo inspect your cookie jar after a request:\n\n```js\nconst j = request.jar()\nrequest({url: 'http://www.google.com', jar: j}, function () {\n  const cookie_string = j.getCookieString(url); // \"key1=value1; key2=value2; ...\"\n  const cookies = j.getCookies(url);\n  // [{key: 'key1', value: 'value1', domain: \"www.google.com\", ...}, ...]\n})\n```\n\n[back to top](#table-of-contents)"}, "npm": {"downloads": [{"from": "2020-05-10T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 1136563}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 19712234}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 80258274}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 247597769}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 438099287}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 828299964}], "dependentsCount": 38242, "starsCount": 1506}, "github": {"starsCount": 24551, "forksCount": 2914, "subscribersCount": 449, "issues": {"count": 3294, "openCount": 185, "distribution": {"3600": 327, "10800": 140, "32400": 166, "97200": 299, "291600": 259, "874800": 284, "2624400": 242, "7873200": 208, "23619600": 257, "70858800": 732, "212576400": 380}, "isDisabled": false}, "contributors": [{"username": "mikeal", "commitsCount": 367}, {"username": "simov", "commitsCount": 259}, {"username": "nylen", "commitsCount": 168}, {"username": "greenkeeperio-bot", "commitsCount": 49}, {"username": "seanstrom", "commitsCount": 35}, {"username": "isaacs", "commitsCount": 31}, {"username": "eiriksm", "commitsCount": 21}, {"username": "mscdex", "commitsCount": 15}, {"username": "ahmadnassri", "commitsCount": 13}, {"username": "Turbo87", "commitsCount": 12}, {"username": "froatsnook", "commitsCount": 12}, {"username": "papandreou", "commitsCount": 11}, {"username": "nicjansma", "commitsCount": 10}, {"username": "tikotzky", "commitsCount": 10}, {"username": "lalitkapoor", "commitsCount": 9}, {"username": "mmalecki", "commitsCount": 9}, {"username": "csainty", "commitsCount": 8}, {"username": "RReverser", "commitsCount": 7}, {"username": "reconbot", "commitsCount": 7}, {"username": "jhs", "commitsCount": 6}, {"username": "FredKSchott", "commitsCount": 5}, {"username": "aesopwolf", "commitsCount": 5}, {"username": "benatkin", "commitsCount": 5}, {"username": "charlespwd", "commitsCount": 5}, {"username": "janjongboom", "commitsCount": 5}, {"username": "joaojeronimo", "commitsCount": 5}, {"username": "kevinoid", "commitsCount": 5}, {"username": "twilson63", "commitsCount": 5}, {"username": "0x4139", "commitsCount": 4}, {"username": "aaron-em", "commitsCount": 4}, {"username": "emkay", "commitsCount": 4}, {"username": "guimon", "commitsCount": 4}, {"username": "hueniverse", "commitsCount": 4}, {"username": "mafintosh", "commitsCount": 4}, {"username": "noway", "commitsCount": 4}, {"username": "rwky", "commitsCount": 4}, {"username": "tbuchok", "commitsCount": 4}, {"username": "vpulim", "commitsCount": 4}, {"username": "wprl", "commitsCount": 4}, {"username": "DullReferenceException", "commitsCount": 3}, {"username": "Filirom1", "commitsCount": 3}, {"username": "Stanley", "commitsCount": 3}, {"username": "ZJONSSON", "commitsCount": 3}, {"username": "dai-shi", "commitsCount": 3}, {"username": "diversario", "commitsCount": 3}, {"username": "hypesystem", "commitsCount": 3}, {"username": "lexander", "commitsCount": 3}, {"username": "mitsuru", "commitsCount": 3}, {"username": "nlf", "commitsCount": 3}, {"username": "polotek", "commitsCount": 3}, {"username": "stash", "commitsCount": 3}, {"username": "thejh", "commitsCount": 3}, {"username": "watson", "commitsCount": 3}, {"username": "zertosh", "commitsCount": 3}, {"username": "Cauldrath", "commitsCount": 2}, {"username": "ChALkeR", "commitsCount": 2}, {"username": "JoshWillik", "commitsCount": 2}, {"username": "LoicMahieu", "commitsCount": 2}, {"username": "Marsup", "commitsCount": 2}, {"username": "ReadmeCritic", "commitsCount": 2}, {"username": "SamPlacette", "commitsCount": 2}, {"username": "YasharF", "commitsCount": 2}, {"username": "aj0strow", "commitsCount": 2}, {"username": "akshayp", "commitsCount": 2}, {"username": "alexindigo", "commitsCount": 2}, {"username": "apoco", "commitsCount": 2}, {"username": "bcoe", "commitsCount": 2}, {"username": "calibr", "commitsCount": 2}, {"username": "cappslock", "commitsCount": 2}, {"username": "clement", "commitsCount": 2}, {"username": "crocket", "commitsCount": 2}, {"username": "daniel347x", "commitsCount": 2}, {"username": "davidlehn", "commitsCount": 2}, {"username": "dotcypress", "commitsCount": 2}, {"username": "drudge", "commitsCount": 2}, {"username": "goatslacker", "commitsCount": 2}, {"username": "itay", "commitsCount": 2}, {"username": "jhurliman", "commitsCount": 2}, {"username": "joemccann", "commitsCount": 2}, {"username": "jongyoonlee", "commitsCount": 2}, {"username": "joshux", "commitsCount": 2}, {"username": "jplock", "commitsCount": 2}, {"username": "jrgm", "commitsCount": 2}, {"username": "jvmccarthy", "commitsCount": 2}, {"username": "kevinburke", "commitsCount": 2}, {"username": "mbrevoort", "commitsCount": 2}, {"username": "mgenereu", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "paulirish", "commitsCount": 2}, {"username": "poislagarde", "commitsCount": 2}, {"username": "pvoznenko", "commitsCount": 2}, {"username": "shimaore", "commitsCount": 2}, {"username": "substack", "commitsCount": 2}, {"username": "tgohn", "commitsCount": 2}, {"username": "timshadel", "commitsCount": 2}, {"username": "vohof", "commitsCount": 2}, {"username": "zephrax", "commitsCount": 2}, {"username": "andresroberto", "commitsCount": 1}, {"username": "gr2m", "commitsCount": 1}, {"username": "odykyi", "commitsCount": 1}], "commits": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-04-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2020-02-11T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 0}, {"from": "2019-11-13T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 2}, {"from": "2019-05-12T00:00:00.000Z", "to": "2020-05-11T00:00:00.000Z", "count": 3}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "coverage/coveralls", "state": "failure"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 46386, "testsSize": 283479, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/request.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/request.svg", "content": "https://img.shields.io/npm/v/request.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://img.shields.io/travis/request/request/master.svg?style=flat-square", "service": "https://api.travis-ci.org/request/request.svg?branch=master", "shields": "https://img.shields.io/travis/request/request/master.svg", "content": "https://img.shields.io/travis/request/request/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/request/request.svg?style=flat-square", "service": "https://codecov.io/github/request/request/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/request/request.svg", "content": "https://img.shields.io/codecov/c/github/request/request.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/coveralls/request/request.svg?style=flat-square", "service": "https://coveralls.io/repos/request/request/badge.svg", "shields": "https://img.shields.io/coveralls/request/request.svg", "content": "https://img.shields.io/coveralls/request/request.json"}, "info": {"service": "coveralls", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/david/request/request.svg?style=flat-square", "service": "https://david-dm.org/request/request.svg", "shields": "https://img.shields.io/david/request/request.svg", "content": "https://img.shields.io/david/request/request.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["standard"], "coverage": 0.96, "outdatedDependencies": {"uuid": {"required": "^3.3.2", "stable": "8.0.0", "latest": "8.0.0"}, "form-data": {"required": "~2.3.2", "stable": "3.0.0", "latest": "3.0.0"}, "http-signature": {"required": "~1.2.0", "stable": "1.3.4", "latest": "1.3.4"}, "tough-cookie": {"required": "~2.5.0", "stable": "4.0.0", "latest": "4.0.0"}, "qs": {"required": "~6.5.2", "stable": "6.9.4", "latest": "6.9.4"}}}}, "evaluation": {"quality": {"carefulness": 0, "tests": 0.9315, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 29520, "downloadsCount": 82532589.66666667, "downloadsAcceleration": 142632.6970129375, "dependentsCount": 38242}, "maintenance": {"releasesFrequency": 0.3236301369863014, "commitsFrequency": 0.13952054794520546, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.6948630023776139, "detail": {"quality": 0.5797641140938379, "popularity": 0.9400170098325137, "maintenance": 0.5483651848802366}}}}, {"cross-env": {"analyzedAt": "2020-06-25T14:27:44.119Z", "collected": {"metadata": {"name": "cross-env", "scope": "unscoped", "version": "7.0.2", "description": "Run scripts that set and use environment variables across platforms", "keywords": ["cross-environment", "environment variable", "windows"], "date": "2020-03-05T20:32:09.373Z", "author": {"name": "Kent C. Dodds", "email": "me@kentcdodds.com", "url": "https://kentcdodds.com"}, "publisher": {"username": "kentcdodds", "email": "me@kentcdodds.com"}, "maintainers": [{"username": "kentcdodds", "email": "kent@doddsfamily.us"}], "repository": {"type": "git", "url": "git+https://github.com/kentcdodds/cross-env.git"}, "links": {"npm": "https://www.npmjs.com/package/cross-env", "homepage": "https://github.com/kentcdodds/cross-env#readme", "repository": "https://github.com/kentcdodds/cross-env", "bugs": "https://github.com/kentcdodds/cross-env/issues"}, "license": "MIT", "dependencies": {"cross-spawn": "^7.0.1"}, "devDependencies": {"kcd-scripts": "^5.2.0"}, "releases": [{"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 4}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 9}, {"from": "2018-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 9}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n<h1>cross-env \ud83d\udd00</h1>\n\nRun scripts that set and use environment variables across platforms\n\n</div>\n\n<hr />\n\n[![Travis Build Status][build-badge]][build]\n[![AppVeyor Build Status][win-build-badge]][win-build]\n[![Code Coverage][coverage-badge]][coverage]\n[![version][version-badge]][package] [![MIT License][license-badge]][license]\n\n[![All Contributors](https://img.shields.io/badge/all_contributors-20-orange.svg?style=flat-square)](#contributors)\n[![PRs Welcome][prs-badge]][prs] [![Code of Conduct][coc-badge]][coc]\n[![downloads][downloads-badge]][npmtrends]\n\n## The problem\n\nMost Windows command prompts will choke when you set environment variables with\n`NODE_ENV=production` like that. (The exception is [Bash on Windows][win-bash],\nwhich uses native Bash.) Similarly, there's a difference in how windows and\nPOSIX commands utilize environment variables. With POSIX, you use: `$ENV_VAR`\nand on windows you use `%ENV_VAR%`.\n\n## This solution\n\n`cross-env` makes it so you can have a single command without worrying about\nsetting or using the environment variable properly for the platform. Just set it\nlike you would if it's running on a POSIX system, and `cross-env` will take care\nof setting it properly.\n\n<!-- START doctoc generated TOC please keep comment here to allow auto update -->\n<!-- DON'T EDIT THIS SECTION, INSTEAD RE-RUN doctoc TO UPDATE -->\n\n- [Installation](#installation)\n- [Usage](#usage)\n- [`cross-env` vs `cross-env-shell`](#cross-env-vs-cross-env-shell)\n- [Windows Issues](#windows-issues)\n- [Inspiration](#inspiration)\n- [Other Solutions](#other-solutions)\n- [Contributors](#contributors)\n- [LICENSE](#license)\n\n<!-- END doctoc generated TOC please keep comment here to allow auto update -->\n\n## Installation\n\nThis module is distributed via [npm][npm] which is bundled with [node][node] and\nshould be installed as one of your project's `devDependencies`:\n\n```\nnpm install --save-dev cross-env\n```\n\n> WARNING! Make sure that when you're installing packages that you spell things\n> correctly to avoid [mistakenly installing malware][malware]\n\n> NOTE : Version 7 of cross-env only supports Node.js 10 and higher, to use it on\n> Node.js 8 or lower install version 6 `npm install --save-dev cross-env@6`\n\n## Usage\n\nI use this in my npm scripts:\n\n```json\n{\n  \"scripts\": {\n    \"build\": \"cross-env NODE_ENV=production webpack --config build/webpack.config.js\"\n  }\n}\n```\n\nUltimately, the command that is executed (using [`cross-spawn`][cross-spawn])\nis:\n\n```\nwebpack --config build/webpack.config.js\n```\n\nThe `NODE_ENV` environment variable will be set by `cross-env`\n\nYou can also split a command into several ones, or separate the environment\nvariables declaration from the actual command execution. You can do it this way:\n\n```json\n{\n  \"scripts\": {\n    \"parentScript\": \"cross-env GREET=\\\"Joe\\\" npm run childScript\",\n    \"childScript\": \"cross-env-shell \\\"echo Hello $GREET\\\"\"\n  }\n}\n```\n\nWhere `childScript` holds the actual command to execute and `parentScript` sets\nthe environment variables to use. Then instead of run the childScript you run\nthe parent. This is quite useful for launching the same command with different\nenv variables or when the environment variables are too long to have everything\nin one line. It also means that you can use `$GREET` env var syntax even on\nWindows which would usually require it to be `%GREET%`.\n\nIf you precede a dollar sign with an odd number of backslashes the expression\nstatement will not be replaced. Note that this means backslashes after the JSON\nstring escaping took place. `\"FOO=\\\\$BAR\"` will not be replaced.\n`\"FOO=\\\\\\\\$BAR\"` will be replaced though.\n\nLastly, if you want to pass a JSON string (e.g., when using [ts-loader]), you\ncan do as follows:\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"cross-env TS_NODE_COMPILER_OPTIONS={\\\\\\\"module\\\\\\\":\\\\\\\"commonjs\\\\\\\"} node some_file.test.ts\"\n  }\n}\n```\n\nPay special attention to the **triple backslash** `(\\\\\\)` **before** the\n**double quotes** `(\")` and the **absence** of **single quotes** `(')`. Both of\nthese conditions have to be met in order to work both on Windows and UNIX.\n\n## `cross-env` vs `cross-env-shell`\n\nThe `cross-env` module exposes two bins: `cross-env` and `cross-env-shell`. The\nfirst one executes commands using [`cross-spawn`][cross-spawn], while the second\none uses the `shell` option from Node's `spawn`.\n\nThe main use case for `cross-env-shell` is when you need an environment variable\nto be set across an entire inline shell script, rather than just one command.\n\nFor example, if you want to have the environment variable apply to several\ncommands in series then you will need to wrap those in quotes and use\n`cross-env-shell` instead of `cross-env`.\n\n```json\n{\n  \"scripts\": {\n    \"greet\": \"cross-env-shell GREETING=Hi NAME=Joe \\\"echo $GREETING && echo $NAME\\\"\"\n  }\n}\n```\n\nThe rule of thumb is: if you want to pass to `cross-env` a command that contains\nspecial shell characters _that you want interpreted_, then use\n`cross-env-shell`. Otherwise stick to `cross-env`.\n\nOn Windows you need to use `cross-env-shell`, if you want to handle\n[signal events](https://nodejs.org/api/process.html#process_signal_events)\ninside of your program. A common case for that is when you want to capture a\n`SIGINT` event invoked by pressing `Ctrl + C` on the command-line interface.\n\n## Windows Issues\n\nPlease note that `npm` uses `cmd` by default and that doesn't support command\nsubstitution, so if you want to leverage that, then you need to update your\n`.npmrc` to set the `script-shell` to powershell.\n[Learn more here](https://github.com/kentcdodds/cross-env/issues/192#issuecomment-513341729).\n\n## Inspiration\n\nI originally created this to solve a problem I was having with my npm scripts in\n[angular-formly][angular-formly]. This made contributing to the project much\neasier for Windows users.\n\n## Other Solutions\n\n- [`env-cmd`](https://github.com/toddbluhm/env-cmd) - Reads environment\n  variables from a file instead\n- [`@naholyr/cross-env`](https://www.npmjs.com/package/@naholyr/cross-env) -\n  `cross-env` with support for setting default values\n\n## Contributors\n\nThanks goes to these people ([emoji key][emojis]):\n\n<!-- ALL-CONTRIBUTORS-LIST:START - Do not remove or modify this section -->\n<!-- prettier-ignore-start -->\n<!-- markdownlint-disable -->\n<table>\n  <tr>\n    <td align=\"center\"><a href=\"https://kentcdodds.com\"><img src=\"https://avatars.githubusercontent.com/u/1500684?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Kent C. Dodds</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#infra-kentcdodds\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=kentcdodds\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://zhuangya.me\"><img src=\"https://avatars1.githubusercontent.com/u/499038?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Ya Zhuang </b></sub></a><br /><a href=\"#plugin-zhuangya\" title=\"Plugin/utility libraries\">\ud83d\udd0c</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=zhuangya\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://wopian.me\"><img src=\"https://avatars3.githubusercontent.com/u/3440094?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>James Harris</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=wopian\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/compumike08\"><img src=\"https://avatars1.githubusercontent.com/u/8941730?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>compumike08</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Acompumike08\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=compumike08\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/danielo515\"><img src=\"https://avatars1.githubusercontent.com/u/2270425?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rodr\u00edguez Rivero</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Adanielo515\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=danielo515\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/inyono\"><img src=\"https://avatars2.githubusercontent.com/u/1508477?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jonas Keinholz</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ainyono\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=inyono\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/hgwood\"><img src=\"https://avatars3.githubusercontent.com/u/1656170?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Hugo Wood</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ahgwood\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=hgwood\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/thomasthiebaud\"><img src=\"https://avatars0.githubusercontent.com/u/3715715?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Thiebaud Thomas</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Athomasthiebaud\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=thomasthiebaud\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://daniel.blog\"><img src=\"https://avatars1.githubusercontent.com/u/1715800?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Daniel Rey L\u00f3pez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=DanReyLop\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"http://amilajack.com\"><img src=\"https://avatars2.githubusercontent.com/u/6374832?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Amila Welihinda</b></sub></a><br /><a href=\"#infra-amilajack\" title=\"Infrastructure (Hosting, Build-Tools, etc)\">\ud83d\ude87</a></td>\n    <td align=\"center\"><a href=\"https://twitter.com/paulcbetts\"><img src=\"https://avatars1.githubusercontent.com/u/1396?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Paul Betts</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Apaulcbetts\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=paulcbetts\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/turnerhayes\"><img src=\"https://avatars1.githubusercontent.com/u/6371670?v=3\" width=\"100px;\" alt=\"\"/><br /><sub><b>Turner Hayes</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Aturnerhayes\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=turnerhayes\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sudo-suhas\"><img src=\"https://avatars2.githubusercontent.com/u/22251956?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Suhas Karanth</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sudo-suhas\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://github.com/sventschui\"><img src=\"https://avatars3.githubusercontent.com/u/512692?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Sven</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Documentation\">\ud83d\udcd6</a> <a href=\"#example-sventschui\" title=\"Examples\">\ud83d\udca1</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=sventschui\" title=\"Tests\">\u26a0\ufe0f</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/NicoZelaya\"><img src=\"https://avatars0.githubusercontent.com/u/5522668?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>D. Nicol\u00e1s Lopez Zelaya</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=NicoZelaya\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"http://bithavoc.io\"><img src=\"https://avatars3.githubusercontent.com/u/219289?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Johan Hernandez</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bithavoc\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://github.com/jnielson94\"><img src=\"https://avatars3.githubusercontent.com/u/13559161?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jordan Nielson</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/issues?q=author%3Ajnielson94\" title=\"Bug reports\">\ud83d\udc1b</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Code\">\ud83d\udcbb</a> <a href=\"https://github.com/kentcdodds/cross-env/commits?author=jnielson94\" title=\"Tests\">\u26a0\ufe0f</a></td>\n    <td align=\"center\"><a href=\"https://nz.linkedin.com/in/jsonc11\"><img src=\"https://avatars0.githubusercontent.com/u/5185660?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Jason Cooke</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=Jason-Cooke\" title=\"Documentation\">\ud83d\udcd6</a></td>\n    <td align=\"center\"><a href=\"https://github.com/bibo5088\"><img src=\"https://avatars0.githubusercontent.com/u/17709887?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>bibo5088</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=bibo5088\" title=\"Code\">\ud83d\udcbb</a></td>\n    <td align=\"center\"><a href=\"https://codefund.io\"><img src=\"https://avatars2.githubusercontent.com/u/12481?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Eric Berry</b></sub></a><br /><a href=\"#fundingFinding-coderberry\" title=\"Funding Finding\">\ud83d\udd0d</a></td>\n    <td align=\"center\"><a href=\"https://michaeldeboey.be\"><img src=\"https://avatars3.githubusercontent.com/u/6643991?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Micha\u00ebl De Boey</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=MichaelDeBoey\" title=\"Code\">\ud83d\udcbb</a></td>\n  </tr>\n  <tr>\n    <td align=\"center\"><a href=\"https://github.com/lauriii\"><img src=\"https://avatars0.githubusercontent.com/u/1845495?v=4\" width=\"100px;\" alt=\"\"/><br /><sub><b>Lauri Eskola</b></sub></a><br /><a href=\"https://github.com/kentcdodds/cross-env/commits?author=lauriii\" title=\"Documentation\">\ud83d\udcd6</a></td>\n  </tr>\n</table>\n\n<!-- markdownlint-enable -->\n<!-- prettier-ignore-end -->\n<!-- ALL-CONTRIBUTORS-LIST:END -->\n\nThis project follows the [all-contributors][all-contributors] specification.\nContributions of any kind welcome!\n\n> Note: this was added late into the project. If you've contributed to this\n> project in any way, please make a pull request to add yourself to the list by\n> following the instructions in the `CONTRIBUTING.md`\n\n## LICENSE\n\nMIT\n\n[npm]: https://www.npmjs.com/\n[node]: https://nodejs.org\n[build-badge]:\n  https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square\n[build]: https://travis-ci.org/kentcdodds/cross-env\n[win-build-badge]:\n  https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square\n[win-build]: https://ci.appveyor.com/project/kentcdodds/cross-env\n[coverage-badge]:\n  https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square\n[coverage]: https://codecov.io/github/kentcdodds/cross-env\n[version-badge]: https://img.shields.io/npm/v/cross-env.svg?style=flat-square\n[package]: https://www.npmjs.com/package/cross-env\n[downloads-badge]: https://img.shields.io/npm/dm/cross-env.svg?style=flat-square\n[npmtrends]: https://www.npmtrends.com/cross-env\n[license-badge]: https://img.shields.io/npm/l/cross-env.svg?style=flat-square\n[license]: https://github.com/kentcdodds/cross-env/blob/master/other/LICENSE\n[prs-badge]:\n  https://img.shields.io/badge/PRs-welcome-brightgreen.svg?style=flat-square\n[prs]: http://makeapullrequest.com\n[coc-badge]:\n  https://img.shields.io/badge/code%20of-conduct-ff69b4.svg?style=flat-square\n[coc]:\n  https://github.com/kentcdodds/cross-env/blob/master/other/CODE_OF_CONDUCT.md\n[emojis]: https://github.com/kentcdodds/all-contributors#emoji-key\n[all-contributors]: https://github.com/kentcdodds/all-contributors\n[win-bash]: https://msdn.microsoft.com/en-us/commandline/wsl/about\n[angular-formly]: https://github.com/formly-js/angular-formly\n[cross-spawn]: https://www.npmjs.com/package/cross-spawn\n[ts-loader]: https://www.npmjs.com/package/ts-loader\n[malware]:\n  http://blog.npmjs.org/post/163723642530/crossenv-malware-on-the-npm-registry"}, "npm": {"downloads": [{"from": "2020-06-24T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 479623}, {"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 2109951}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 10819560}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 31191757}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 56322147}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 98277349}], "dependentsCount": 2199, "starsCount": 297}, "github": {"homepage": "https://www.npmjs.com/package/cross-env", "starsCount": 4825, "forksCount": 197, "subscribersCount": 34, "issues": {"count": 238, "openCount": 8, "distribution": {"3600": 71, "10800": 24, "32400": 30, "97200": 29, "291600": 12, "874800": 12, "2624400": 21, "7873200": 12, "23619600": 20, "70858800": 7, "212576400": 0}, "isDisabled": false}, "contributors": [{"username": "kentcdodds", "commitsCount": 26}, {"username": "sudo-suhas", "commitsCount": 6}, {"username": "MichaelDeBoey", "commitsCount": 5}, {"username": "NogsMPLS", "commitsCount": 5}, {"username": "hgwood", "commitsCount": 5}, {"username": "DanReyLop", "commitsCount": 4}, {"username": "EnzoMartin", "commitsCount": 2}, {"username": "amilajack", "commitsCount": 2}, {"username": "bennyn", "commitsCount": 2}, {"username": "bibo5088", "commitsCount": 2}, {"username": "coderberry", "commitsCount": 2}, {"username": "compumike08", "commitsCount": 2}, {"username": "danielo515", "commitsCount": 2}, {"username": "inyono", "commitsCount": 2}, {"username": "wopian", "commitsCount": 2}, {"username": "zhuangya", "commitsCount": 2}, {"username": "Apidcloud", "commitsCount": 1}, {"username": "AshikNesin", "commitsCount": 1}, {"username": "EsrefDurna", "commitsCount": 1}, {"username": "Jason-Cooke", "commitsCount": 1}, {"username": "NicoZelaya", "commitsCount": 1}, {"username": "achingbrain", "commitsCount": 1}, {"username": "allcontributors[bot]", "commitsCount": 1}, {"username": "alonbardavid", "commitsCount": 1}, {"username": "anaisbetts", "commitsCount": 1}, {"username": "anishkny", "commitsCount": 1}, {"username": "baerrach", "commitsCount": 1}, {"username": "bithavoc", "commitsCount": 1}, {"username": "devuxer", "commitsCount": 1}, {"username": "greggman", "commitsCount": 1}, {"username": "igorklopov", "commitsCount": 1}, {"username": "jiangyuan", "commitsCount": 1}, {"username": "jnielson94", "commitsCount": 1}, {"username": "kellyselden", "commitsCount": 1}, {"username": "lauriii", "commitsCount": 1}, {"username": "marcioj", "commitsCount": 1}, {"username": "markwoon", "commitsCount": 1}, {"username": "mastilver", "commitsCount": 1}, {"username": "naholyr", "commitsCount": 1}, {"username": "nkbt", "commitsCount": 1}, {"username": "nolanlawson", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "sazo", "commitsCount": 1}, {"username": "thomasthiebaud", "commitsCount": 1}, {"username": "toddbluhm", "commitsCount": 1}, {"username": "turnerhayes", "commitsCount": 1}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 1}], "commits": [{"from": "2020-06-18T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-05-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 0}, {"from": "2020-03-27T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 4}, {"from": "2019-12-28T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 13}, {"from": "2019-06-26T00:00:00.000Z", "to": "2020-06-25T00:00:00.000Z", "count": 21}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 17442, "testsSize": 12985, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/kentcdodds/cross-env.svg?style=flat-square", "service": "https://api.travis-ci.org/kentcdodds/cross-env.svg", "shields": "https://img.shields.io/travis/kentcdodds/cross-env.svg", "content": "https://img.shields.io/travis/kentcdodds/cross-env.json"}, "info": {"service": "travis", "type": "build"}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg?style=flat-square", "service": "https://ci.appveyor.com/api/projects/status/kentcdodds/cross-env", "shields": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.svg", "content": "https://img.shields.io/appveyor/ci/kentcdodds/cross-env.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg?style=flat-square", "service": "https://codecov.io/github/kentcdodds/cross-env/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.svg", "content": "https://img.shields.io/codecov/c/github/kentcdodds/cross-env.json"}, "info": {"service": "codecov", "type": "coverage"}}, {"urls": {"original": "https://img.shields.io/npm/v/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/v/cross-env.svg", "content": "https://img.shields.io/npm/v/cross-env.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/dm/cross-env.svg", "content": "https://img.shields.io/npm/dm/cross-env.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/l/cross-env.svg?style=flat-square", "shields": "https://img.shields.io/npm/l/cross-env.svg", "content": "https://img.shields.io/npm/l/cross-env.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}], "linters": ["eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 5400, "downloadsCount": 10397252.333333334, "downloadsAcceleration": 33761.69868721461, "dependentsCount": 2199}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8859256427106605, "detail": {"quality": 0.9995210909668031, "popularity": 0.6745903941507359, "maintenance": 0.9998933641938921}}}}, {"husky": {"analyzedAt": "2020-06-07T06:04:20.354Z", "collected": {"metadata": {"name": "husky", "scope": "unscoped", "version": "4.2.5", "description": "Prevents bad commit or push (git hooks, pre-commit/precommit, pre-push/prepush, post-merge/postmerge and all that stuff...)", "keywords": ["git", "hook", "hooks", "pre-commit", "precommit", "post-commit", "postcommit", "pre-push", "prepush", "post-merge", "postmerge", "test", "lint"], "date": "2020-04-09T21:29:01.887Z", "author": {"name": "Typicode", "email": "typicode@gmail.com", "username": "typicode"}, "publisher": {"username": "typicode", "email": "typicode@gmail.com"}, "maintainers": [{"username": "typicode", "email": "typicode@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/typicode/husky.git"}, "links": {"npm": "https://www.npmjs.com/package/husky", "homepage": "https://github.com/typicode/husky#readme", "repository": "https://github.com/typicode/husky", "bugs": "https://github.com/typicode/husky/issues"}, "license": "MIT", "dependencies": {"chalk": "^4.0.0", "ci-info": "^2.0.0", "compare-versions": "^3.6.0", "cosmiconfig": "^6.0.0", "find-versions": "^3.2.0", "opencollective-postinstall": "^2.0.2", "pkg-dir": "^4.2.0", "please-upgrade-node": "^3.2.0", "slash": "^3.0.0", "which-pm-runs": "^1.0.0"}, "devDependencies": {"@types/ci-info": "^2.0.0", "@types/cosmiconfig": "^6.0.0", "@types/jest": "^25.2.1", "@types/mkdirp": "^1.0.0", "@types/node": "^13.11.1", "@typescript-eslint/eslint-plugin": "^2.27.0", "@typescript-eslint/parser": "^2.27.0", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.1", "eslint-config-xo-space": "^0.24.0", "eslint-plugin-prettier": "^3.1.2", "formatree": "^1.0.2", "jest": "^25.3.0", "markdown-toc": "^1.2.0", "mkdirp": "^1.0.4", "pinst": "^2.0.0", "pkg-ok": "^2.3.1", "prettier": "^2.0.4", "tempy": "^0.5.0", "ts-jest": "^25.3.1", "type-fest": "^0.13.1", "typescript": "^3.8.3"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 19}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 64}], "hasTestScript": true, "readme": "# Husky\n\n[![Financial Contributors on Open Collective](https://opencollective.com/husky/all/badge.svg?label=financial+contributors)](https://opencollective.com/husky) [![](https://img.shields.io/npm/dm/husky.svg?style=flat)](https://www.npmjs.org/package/husky) [![Mac/Linux Build Status](https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20%26%20Linux)](https://travis-ci.org/typicode/husky) [![Windows Build status](https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows)](https://ci.appveyor.com/project/typicode/husky)\n\n> Git hooks made easy\n\nHusky can prevent bad `git commit`, `git push` and more \ud83d\udc36 _woof!_\n\n## Install\n\n```sh\nnpm install husky --save-dev\n```\n\n```js\n// package.json\n{\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"npm test\",\n      \"pre-push\": \"npm test\",\n      \"...\": \"...\"\n    }\n  }\n}\n```\n\n```sh\ngit commit -m 'Keep calm and commit'\n```\n\n_Existing hooks are kept. Requires Node `>= 10` and Git `>= 2.13.0`._\n\n## Reinstall\n\nIf Husky is already in your `node_modules` or `pnp.js` (Yarn 2) and you want to reinstall hooks, you can run `npm rebuild` or `yarn rebuild`.\n\n## Uninstall\n\n```sh\nnpm uninstall husky\n```\n\n_Git hooks installed by husky will be removed._\n\n## Financial Contributors\n\nBecome a financial contributor and help us sustain our community. [[Contribute](https://opencollective.com/husky/contribute)]\n\n### Organizations\n\nSupport this project with your organization. Your logo will show up here with a link to your website. [[Contribute](https://opencollective.com/husky/contribute)]\n\n<!-- oc -->\n#### Gold Sponsors ($500/mo)\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/0/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/1/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/2/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/3/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/4/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/5/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/6/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/7/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/8/avatar.svg\" height=\"60px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/gold-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/gold-sponsor/9/avatar.svg\" height=\"60px\"></a>\n\n#### Silver Sponsors ($250/mo)\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/0/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/1/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/2/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/3/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/4/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/5/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/6/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/7/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/8/avatar.svg\" height=\"45px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/silver-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/silver-sponsor/9/avatar.svg\" height=\"45px\"></a>\n\n#### Bronze Sponsors ($100/mo)\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/0/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/1/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/2/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/3/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/4/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/5/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/6/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/7/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/8/avatar.svg\" height=\"30px\"></a>\n<a href=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/website\"><img src=\"https://opencollective.com/husky/tiers/bronze-sponsor/9/avatar.svg\" height=\"30px\"></a>\n<!-- oc-end -->\n\n### Individuals\n\n<a href=\"https://opencollective.com/husky\"><img src=\"https://opencollective.com/husky/individuals.svg?width=890\" height=\"100px\"></a>\n\n## Used by\n\n* [webpack](https://github.com/webpack/webpack)\n* [babel](https://github.com/babel/babel)\n* [create-react-app](https://github.com/facebookincubator/create-react-app)\n* ... and many other awesome projects\n\n## Guides\n\n<!-- toc -->\n\n  * [Upgrading from 0.14](#upgrading-from-014)\n  * [Supported hooks](#supported-hooks)\n  * [Access Git params and stdin](#access-git-params-and-stdin)\n  * [Skip all hooks (rebase)](#skip-all-hooks-rebase)\n  * [Disable auto-install](#disable-auto-install)\n  * [CI servers](#ci-servers)\n  * [Monorepos](#monorepos)\n  * [Node version managers](#node-version-managers)\n  * [Local commands (~/.huskyrc)](#local-commands-huskyrc)\n  * [Multiple commands](#multiple-commands)\n  * [Troubleshoot](#troubleshoot)\n    + [Debug messages](#debug-messages)\n    + [Hooks aren't running](#hooks-arent-running)\n    + [Commits aren't blocked](#commits-arent-blocked)\n    + [Commits are slow](#commits-are-slow)\n    + [Testing husky in a new repo](#testing-husky-in-a-new-repo)\n    + [ENOENT error 'node_modules/husky/.git/hooks'](#enoent-error-node_moduleshuskygithooks)\n\n<!-- tocstop -->\n\n### Upgrading from 0.14\n\nRun `husky-upgrade` to automatically upgrade your configuration:\n\n```\nnpx --no-install husky-upgrade\n```\n\nYou can also do it manually. Move your existing hooks to `husky.hooks` field and use raw Git hooks names. Also, if you were using `GIT_PARAMS` env variable, rename it to `HUSKY_GIT_PARAMS`.\n\n```diff\n{\n  \"scripts\": {\n-   \"precommit\": \"npm test\",\n-   \"commitmsg\": \"commitlint -E GIT_PARAMS\"\n  },\n+ \"husky\": {\n+   \"hooks\": {\n+     \"pre-commit\": \"npm test\",\n+     \"commit-msg\": \"commitlint -E HUSKY_GIT_PARAMS\"\n+   }\n+ }\n}\n```\n\nStarting with `1.0.0`, husky can be configured using `.huskyrc`, `.huskyrc.json`, `.huskyrc.js` or `husky.config.js` file.\n\n```js\n// .huskyrc\n{\n  \"hooks\": {\n    \"pre-commit\": \"npm test\"\n  }\n}\n```\n\n### Supported hooks\n\nHusky supports all Git hooks defined [here](https://git-scm.com/docs/githooks). Server-side hooks (`pre-receive`, `update` and `post-receive`) aren't supported.\n\n### Access Git params and stdin\n\nGit hooks can get parameters via command-line arguments and stdin. Husky makes them accessible via `HUSKY_GIT_PARAMS` and `HUSKY_GIT_STDIN` environment variables.\n\n```\n\"commit-msg\": \"echo $HUSKY_GIT_PARAMS\"\n```\n\n### Skip all hooks (rebase)\n\nDuring a rebase you may want to skip all hooks, you can use `HUSKY_SKIP_HOOKS` environment variable.\n\n```sh\nHUSKY_SKIP_HOOKS=1 git rebase ...\n```\n\n### Disable auto-install\n\nIf you don't want husky to automatically install Git hooks, simply set `HUSKY_SKIP_INSTALL` environment variable.\n\n```sh\nHUSKY_SKIP_INSTALL=1 npm install\n```\n\n### CI servers\n\nBy default, Husky won't install on CI servers.\n\n### Monorepos\n\nIf you have a multi-package repository, it's __recommended__ to use tools like [lerna](https://github.com/lerna/lerna) and have husky installed ONLY in the root `package.json` to act as the source of truth.\n\nGenerally speaking, you should AVOID defining husky in multiple `package.json`, as each package would overwrite previous husky installation.\n\n```sh\n.\n\u2514\u2500\u2500 root\n    \u251c\u2500\u2500 .git\n    \u251c\u2500\u2500 package.json \ud83d\udc36 # Add husky here\n    \u2514\u2500\u2500 packages\n        \u251c\u2500\u2500 A\n        \u2502   \u2514\u2500\u2500 package.json\n        \u251c\u2500\u2500 B\n        \u2502   \u2514\u2500\u2500 package.json\n        \u2514\u2500\u2500 C\n            \u2514\u2500\u2500 package.json\n```\n\n```js\n// root/package.json\n{\n  \"private\": true,\n  \"devDependencies\": {\n    \"husky\": \"...\"\n  },\n  \"husky\": {\n    \"hooks\": {\n      \"pre-commit\": \"lerna run test\"\n    }\n  }\n}\n```\n\n### Node version managers\n\nIf you're on Windows, husky will simply use the version installed globally on your system.\n\nFor macOS and Linux users:\n- if you're running `git` commands in the terminal, husky will use the version defined in your shell `PATH`. In other words, if you're a `nvm` user, husky will use the version that you've set with `nvm`.\n- if you're using a GUI client and `nvm`, it may have a different `PATH` and not load `nvm`, in this case the highest `node` version installed by `nvm` will usually be picked. You can also check `~/.node_path` to see which version is used by GUIs and edit if you want to use something else.\n\n### Local commands (~/.huskyrc)\n\nHusky will source `~/.huskyrc` file if it exists before running hook scripts.\nYou can use it, for example, to load a node version manager or run some `shell` commands before hooks.\n\n```sh\n# ~/.huskyrc\nexport NVM_DIR=\"$HOME/.nvm\"\n[ -s \"$NVM_DIR/nvm.sh\" ] && \\. \"$NVM_DIR/nvm.sh\"\n```\n\n### Multiple commands\n\nBy design and just like `scripts` defined in `package.json`, husky will run hook scripts as a single command. \n\n```json\n\"pre-commit\": \"cmd && cmd\"\n```\n\nThat said, if you prefer to use an array, the recommended approach is to define them in `.huskyrc.js` or `husky.config.js`.\n\n```js\nconst tasks = arr => arr.join(' && ')\n\nmodule.exports = {\n  'hooks': {\n    'pre-commit': tasks([\n      'cmd',\n      'cmd'\n    ])\n  }\n}\n```\n\nTools like [npm-run-all](https://github.com/mysticatea/npm-run-all) can help too.\n\n### Troubleshoot\n\n#### Debug messages\n\n`HUSKY_DEBUG=1` can provide additional information when running commands.\n\n```\nHUSKY_DEBUG=1 npm install husky --save-dev\nHUSKY_DEBUG=1 git commit ...\n```\n\n#### Hooks aren't running\n\nCheck if hooks were installed. Verify that `.git/hooks/pre-commit` exists and have husky code. It should start with:\n\n```sh\n#!/bin/sh\n# husky...\n```\n\nIf not, you may have another Git hooks manager defined in your `package.json` overwriting husky's hooks. Check also the output during install, you should see:\n\n```\nhusky > Setting up git hooks\nhusky > Done\n```\n\n#### Commits aren't blocked\n\nFor a commit to be blocked, `pre-commit` script must exit with a non-zero exit code. If you commit isn't blocked, check your script exit code.\n\n#### Commits are slow\n\nHusky is fast and only adds a few tenth of seconds to commits (`~0.3s` on a low-end PC). So it's most probably related to how many things are done during `pre-commit`. You can often improve this by using cache on your tools (babel, eslint, ...) and using [lint-staged](https://github.com/okonet/lint-staged).\n\n#### Testing husky in a new repo\n\nTo isolate your issue, you can also create a new repo:\n\n```sh\nmkdir foo && cd foo\ngit init && npm init -y\nnpm install husky --save-dev\n\n# Add a failing pre-commit hook to your package.json:\n# \"pre-commit\": \"echo \\\"this should fail\\\" && exit 1\"\n\n# Make a commit\n```\n\n#### ENOENT error 'node_modules/husky/.git/hooks'\n\nVerify that your version of Git is `>=2.13.0`.\n\n## See also\n\n* [pkg-ok](https://github.com/typicode/pkg-ok) - Prevents publishing a module with bad paths or incorrect line endings\n* [please-upgrade-node](https://github.com/typicode/please-upgrade-node) - Show a message to upgrade Node instead of a stacktrace in your CLIs\n* [pinst](https://github.com/typicode/pinst) - dev only postinstall hook\n\n## Patreon\n\nPeople and companies supporting via Patreon: [thanks](https://thanks.typicode.com)\n\n## License\n\nMIT"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 152782}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 3264877}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 13764055}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 41413709}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 71621301}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 121303813}], "dependentsCount": 905, "starsCount": 134}, "github": {"starsCount": 19175, "forksCount": 675, "subscribersCount": 135, "issues": {"count": 732, "openCount": 171, "distribution": {"3600": 73, "10800": 25, "32400": 33, "97200": 59, "291600": 58, "874800": 71, "2624400": 75, "7873200": 88, "23619600": 87, "70858800": 116, "212576400": 47}, "isDisabled": false}, "contributors": [{"username": "typicode", "commitsCount": 490}, {"username": "branneman", "commitsCount": 3}, {"username": "jetersen", "commitsCount": 3}, {"username": "amilajack", "commitsCount": 2}, {"username": "boxfoot", "commitsCount": 2}, {"username": "AluisioASG", "commitsCount": 1}, {"username": "Calinou", "commitsCount": 1}, {"username": "DAB0mB", "commitsCount": 1}, {"username": "FJunior225", "commitsCount": 1}, {"username": "G-Rath", "commitsCount": 1}, {"username": "JHilker", "commitsCount": 1}, {"username": "Judahmeek", "commitsCount": 1}, {"username": "MrRio", "commitsCount": 1}, {"username": "afc163", "commitsCount": 1}, {"username": "ahutchings", "commitsCount": 1}, {"username": "alebelcor", "commitsCount": 1}, {"username": "alexeyten", "commitsCount": 1}, {"username": "andywer", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "avaly", "commitsCount": 1}, {"username": "azu", "commitsCount": 1}, {"username": "behnammodi", "commitsCount": 1}, {"username": "bobrippling", "commitsCount": 1}, {"username": "christophehurpeau", "commitsCount": 1}, {"username": "configurator", "commitsCount": 1}, {"username": "conord33", "commitsCount": 1}, {"username": "dhruvdutt", "commitsCount": 1}, {"username": "emily-curry", "commitsCount": 1}, {"username": "floatdrop", "commitsCount": 1}, {"username": "guidoscheffler", "commitsCount": 1}, {"username": "hunnble", "commitsCount": 1}, {"username": "iliyanyotov", "commitsCount": 1}, {"username": "jascodes", "commitsCount": 1}, {"username": "klmdb", "commitsCount": 1}, {"username": "kombucha", "commitsCount": 1}, {"username": "luiscoms", "commitsCount": 1}, {"username": "merceyz", "commitsCount": 1}, {"username": "monkindey", "commitsCount": 1}, {"username": "nick-woodward", "commitsCount": 1}, {"username": "nilswindisch", "commitsCount": 1}, {"username": "noamokman", "commitsCount": 1}, {"username": "onbjerg", "commitsCount": 1}, {"username": "ooflorent", "commitsCount": 1}, {"username": "ozzywalsh", "commitsCount": 1}, {"username": "piperchester", "commitsCount": 1}, {"username": "rainboxx", "commitsCount": 1}, {"username": "sapegin", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "sibiraj-s", "commitsCount": 1}, {"username": "sonicdoe", "commitsCount": 1}, {"username": "spoike", "commitsCount": 1}, {"username": "vitorbal", "commitsCount": 1}, {"username": "wsmd", "commitsCount": 1}, {"username": "xenyal", "commitsCount": 1}, {"username": "yanamura", "commitsCount": 1}, {"username": "ybiquitous", "commitsCount": 1}, {"username": "yurasid", "commitsCount": 1}, {"username": "zhangciwu", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 2}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 16}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 67}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 175}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 13914, "testsSize": 18324, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/husky.svg?style=flat", "shields": "https://img.shields.io/npm/dm/husky.svg", "content": "https://img.shields.io/npm/dm/husky.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/typicode/husky/master.svg?label=Mac%20OSX%20&%20Linux", "service": "https://api.travis-ci.org/typicode/husky.svg?branch=master", "shields": "https://img.shields.io/travis/typicode/husky/master.svg", "content": "https://img.shields.io/travis/typicode/husky/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg?label=Windows", "service": "https://ci.appveyor.com/api/projects/status/typicode/husky/branch/master", "shields": "https://img.shields.io/appveyor/ci/typicode/husky/master.svg", "content": "https://img.shields.io/appveyor/ci/typicode/husky/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}], "linters": ["eslint", "prettier"]}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 1, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 20177, "downloadsCount": 13804569.666666666, "downloadsAcceleration": 48004.88065068491, "dependentsCount": 905}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9720342465753424, "openIssues": 0.9439890710382514, "issuesDistribution": 0}}, "score": {"final": 0.7762843159031783, "detail": {"quality": 0.9782284044490229, "popularity": 0.7128123247333653, "maintenance": 0.6666613740336961}}}}, {"node-sass": {"analyzedAt": "2020-06-20T07:24:48.007Z", "collected": {"metadata": {"name": "node-sass", "scope": "unscoped", "version": "4.14.1", "description": "Wrapper around libsass", "keywords": ["css", "libsass", "preprocessor", "sass", "scss", "style"], "date": "2020-05-04T23:42:29.967Z", "author": {"name": "Andrew Nesbitt", "email": "andrewnez@gmail.com", "url": "http://andrew.github.com"}, "publisher": {"username": "xzyfer", "email": "xzyfer@gmail.com"}, "maintainers": [{"username": "saperski", "email": "npm@saper.info"}, {"username": "xzyfer", "email": "xzyfer@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/sass/node-sass.git"}, "links": {"npm": "https://www.npmjs.com/package/node-sass", "homepage": "https://github.com/sass/node-sass", "repository": "https://github.com/sass/node-sass", "bugs": "https://github.com/sass/node-sass/issues"}, "license": "MIT", "dependencies": {"async-foreach": "^0.1.3", "chalk": "^1.1.1", "cross-spawn": "^3.0.0", "gaze": "^1.0.0", "get-stdin": "^4.0.1", "glob": "^7.0.3", "in-publish": "^2.0.0", "lodash": "^4.17.15", "meow": "^3.7.0", "mkdirp": "^0.5.1", "nan": "^2.13.2", "node-gyp": "^3.8.0", "npmlog": "^4.0.0", "request": "^2.88.0", "sass-graph": "2.2.5", "stdout-stream": "^1.4.0", "true-case-path": "^1.0.2"}, "devDependencies": {"coveralls": "^3.0.2", "eslint": "^3.4.0", "fs-extra": "^0.30.0", "istanbul": "^0.4.2", "mocha": "^3.1.2", "mocha-lcov-reporter": "^1.2.0", "object-merge": "^2.5.1", "read-yaml": "^1.0.0", "rimraf": "^2.5.2", "sass-spec": "git+https://github.com/sass/sass-spec.git#dc2d573", "unique-temp-dir": "^1.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 3}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 12}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-sass\n\n#### Supported Node.js versions vary by release, please consult the [releases page](https://github.com/sass/node-sass/releases). Below is a quick guide for minimum support:\n\nNodeJS  | Minimum node-sass version | Node Module\n--------|--------------------------|------------\nNode 14 | 4.14+                    | 83\nNode 13 | 4.13+                    | 79\nNode 12 | 4.12+                    | 72\nNode 11 | 4.10+                    | 67\nNode 10 | 4.9+                     | 64\nNode 8  | 4.5.3+                   | 57\n\n<table>\n  <tr>\n    <td>\n      <img width=\"77px\" alt=\"Sass logo\" src=\"https://rawgit.com/sass/node-sass/master/media/logo.svg\" />\n    </td>\n    <td valign=\"bottom\" align=\"right\">\n      <a href=\"https://www.npmjs.com/package/node-sass\">\n        <img width=\"100%\" src=\"https://nodei.co/npm/node-sass.png?downloads=true&downloadRank=true&stars=true\">\n      </a>\n    </td>\n  </tr>\n</table>\n\n[![Build Status](https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat)](https://travis-ci.org/sass/node-sass)\n[![Build status](https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true)](https://ci.appveyor.com/project/sass/node-sass/branch/master)\n[![npm version](https://badge.fury.io/js/node-sass.svg)](http://badge.fury.io/js/node-sass)\n[![Dependency Status](https://david-dm.org/sass/node-sass.svg?theme=shields.io)](https://david-dm.org/sass/node-sass)\n[![devDependency Status](https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io)](https://david-dm.org/sass/node-sass#info=devDependencies)\n[![Coverage Status](https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master)](https://coveralls.io/r/sass/node-sass?branch=master)\n[![Inline docs](http://inch-ci.org/github/sass/node-sass.svg?branch=master)](http://inch-ci.org/github/sass/node-sass)\n[![Join us in Slack](https://libsass-slack.herokuapp.com/badge.svg)](https://libsass-slack.herokuapp.com/)\n\nNode-sass is a library that provides binding for Node.js to [LibSass], the C version of the popular stylesheet preprocessor, Sass.\n\nIt allows you to natively compile .scss files to css at incredible speed and automatically via a connect middleware.\n\nFind it on npm: <https://www.npmjs.com/package/node-sass>\n\nFollow @nodesass on twitter for release updates: <https://twitter.com/nodesass>\n\n## Install\n\n```shell\nnpm install node-sass\n```\n\nSome users have reported issues installing on Ubuntu due to `node` being registered to another package. [Follow the official NodeJS docs](https://github.com/nodesource/distributions/blob/master/README.md#debinstall) to install NodeJS so that `#!/usr/bin/env node` correctly resolves.\n\nCompiling on Windows machines requires the [node-gyp prerequisites](https://github.com/nodejs/node-gyp#on-windows).\n\nAre you seeing the following error? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md#installing-node-sass-4x-with-node--4).**\n\n```\nSyntaxError: Use of const in strict mode.\n```\n\n**Having installation troubles? Check out our [Troubleshooting guide](https://github.com/sass/node-sass/blob/master/TROUBLESHOOTING.md).**\n\n### Install from mirror in China\n\n```shell\nnpm install -g mirror-config-china --registry=http://registry.npm.taobao.org\nnpm install node-sass\n```\n\n## Usage\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: scss_filename,\n  [, options..]\n}, function(err, result) { /*...*/ });\n// OR\nvar result = sass.renderSync({\n  data: scss_content\n  [, options..]\n});\n```\n\n## Options\n\n### file\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nPath to a file for [LibSass] to compile.\n\n### data\n\n* Type: `String`\n* Default: `null`\n\n**Special**: `file` or `data` must be specified\n\nA string to pass to [LibSass] to compile. It is recommended that you use `includePaths` in conjunction with this so that [LibSass] can find files when using the `@import` directive.\n\n### importer (>= v2.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n* Type: `Function | Function[]` signature `function(url, prev, done)`\n* Default: `undefined`\n\nFunction Parameters and Information:\n\n* `url (String)` - the path in import **as-is**, which [LibSass] encountered\n* `prev (String)` - the previously resolved path\n* `done (Function)` - a callback function to invoke on async completion, takes an object literal containing\n  * `file (String)` - an alternate path for [LibSass] to use **OR**\n  * `contents (String)` - the imported contents (for example, read from memory or the file system)\n\nHandles when [LibSass] encounters the `@import` directive. A custom importer allows extension of the [LibSass] engine in both a synchronous and asynchronous manner. In both cases, the goal is to either `return` or call `done()` with an object literal. Depending on the value of the object literal, one of two things will happen.\n\nWhen returning or calling `done()` with `{ file: \"String\" }`, the new file path will be assumed for the `@import`. It's recommended to be mindful of the value of `prev` in instances where relative path resolution may be required.\n\nWhen returning or calling `done()` with `{ contents: \"String\" }`, the string value will be used as if the file was read in through an external source.\n\nStarting from v3.0.0:\n\n* `this` refers to a contextual scope for the immediate run of `sass.render` or `sass.renderSync`\n\n* importers can return error and LibSass will emit that error in response. For instance:\n\n  ```javascript\n  done(new Error('doesn\\'t exist!'));\n  // or return synchronously\n  return new Error('nothing to do here');\n  ```\n\n* importer can be an array of functions, which will be called by LibSass in the order of their occurrence in array. This helps user specify special importer for particular kind of path (filesystem, http). If an importer does not want to handle a particular path, it should return `null`. See [functions section](#functions--v300---experimental) for more details on Sass types.\n\n### functions (>= v3.0.0) - _experimental_\n\n**This is an experimental LibSass feature. Use with caution.**\n\n`functions` is an `Object` that holds a collection of custom functions that may be invoked by the sass files being compiled. They may take zero or more input parameters and must return a value either synchronously (`return ...;`) or asynchronously (`done();`). Those parameters will be instances of one of the constructors contained in the `require('node-sass').types` hash. The return value must be of one of these types as well. See the list of available types below:\n\n#### types.Number(value [, unit = \"\"])\n\n* `getValue()`/ `setValue(value)` : gets / sets the numerical portion of the number\n* `getUnit()` / `setUnit(unit)` : gets / sets the unit portion of the number\n\n#### types.String(value)\n\n* `getValue()` / `setValue(value)` : gets / sets the enclosed string\n\n#### types.Color(r, g, b [, a = 1.0]) or types.Color(argb)\n\n* `getR()` / `setR(value)` : red component (integer from `0` to `255`)\n* `getG()` / `setG(value)` : green component (integer from `0` to `255`)\n* `getB()` / `setB(value)` : blue component (integer from `0` to `255`)\n* `getA()` / `setA(value)` : alpha component (number from `0` to `1.0`)\n\nExample:\n\n```javascript\nvar Color = require('node-sass').types.Color,\n  c1 = new Color(255, 0, 0),\n  c2 = new Color(0xff0088cc);\n```\n\n#### types.Boolean(value)\n\n* `getValue()` : gets the enclosed boolean\n* `types.Boolean.TRUE` : Singleton instance of `types.Boolean` that holds \"true\"\n* `types.Boolean.FALSE` : Singleton instance of `types.Boolean` that holds \"false\"\n\n#### types.List(length [, commaSeparator = true])\n\n* `getValue(index)` / `setValue(index, value)` : `value` must itself be an instance of one of the constructors in `sass.types`.\n* `getSeparator()` / `setSeparator(isComma)` : whether to use commas as a separator\n* `getLength()`\n\n#### types.Map(length)\n\n* `getKey(index)` / `setKey(index, value)`\n* `getValue(index)` / `setValue(index, value)`\n* `getLength()`\n\n#### types.Null()\n\n* `types.Null.NULL` : Singleton instance of `types.Null`.\n\n#### Example\n\n```javascript\nsass.renderSync({\n  data: '#{headings(2,5)} { color: #08c; }',\n  functions: {\n    'headings($from: 0, $to: 6)': function(from, to) {\n      var i, f = from.getValue(), t = to.getValue(),\n          list = new sass.types.List(t - f + 1);\n\n      for (i = f; i <= t; i++) {\n        list.setValue(i - f, new sass.types.String('h' + i));\n      }\n\n      return list;\n    }\n  }\n});\n```\n\n### includePaths\n\n* Type: `Array<String>`\n* Default: `[]`\n\nAn array of paths that [LibSass] can look in to attempt to resolve your `@import` declarations. When using `data`, it is recommended that you use this.\n\n### indentedSyntax\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` values enable [Sass Indented Syntax](https://sass-lang.com/documentation/file.INDENTED_SYNTAX.html) for parsing the data string or file.\n\n__Note:__ node-sass/libsass will compile a mixed library of scss and indented syntax (.sass) files with the Default setting (false) as long as .sass and .scss extensions are used in filenames.\n\n### indentType (>= v3.0.0)\n\n* Type: `String`\n* Default: `space`\n\nUsed to determine whether to use space or tab character for indentation.\n\n### indentWidth (>= v3.0.0)\n\n* Type: `Number`\n* Default: `2`\n* Maximum: `10`\n\nUsed to determine the number of spaces or tabs to be used for indentation.\n\n### linefeed (>= v3.0.0)\n\n* Type: `String`\n* Default: `lf`\n\nUsed to determine whether to use `cr`, `crlf`, `lf` or `lfcr` sequence for line break.\n\n### omitSourceMapUrl\n\n* Type: `Boolean`\n* Default: `false`\n\n**Special:** When using this, you should also specify `outFile` to avoid unexpected behavior.\n\n`true` values disable the inclusion of source map information in the output file.\n\n### outFile\n\n* Type: `String | null`\n* Default: `null`\n\n**Special:** Required when `sourceMap` is a truthy value\n\nSpecify the intended location of the output file. Strongly recommended when outputting source maps so that they can properly refer back to their intended files.\n\n**Attention** enabling this option will **not** write the file on disk for you, it's for internal reference purpose only (to generate the map for example).\n\nExample on how to write it on the disk\n\n```javascript\nsass.render({\n    ...\n    outFile: yourPathTotheFile,\n  }, function(error, result) { // node-style callback from v3.0.0 onwards\n    if(!error){\n      // No errors during the compilation, write this result on the disk\n      fs.writeFile(yourPathTotheFile, result.css, function(err){\n        if(!err){\n          //file written on disk\n        }\n      });\n    }\n  });\n});\n```\n\n### outputStyle\n\n* Type: `String`\n* Default: `nested`\n* Values: `nested`, `expanded`, `compact`, `compressed`\n\nDetermines the output format of the final CSS style.\n\n### precision\n\n* Type: `Integer`\n* Default: `5`\n\nUsed to determine how many digits after the decimal will be allowed. For instance, if you had a decimal number of `1.23456789` and a precision of `5`, the result will be `1.23457` in the final CSS.\n\n### sourceComments\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` Enables the line number and file where a selector is defined to be emitted into the compiled CSS as a comment. Useful for debugging, especially when using imports and mixins.\n\n### sourceMap\n\n* Type: `Boolean | String | undefined`\n* Default: `undefined`\n\nEnables source map generation during `render` and `renderSync`.\n\nWhen `sourceMap === true`, the value of `outFile` is used as the target output location for the source map with the suffix `.map` appended. If no `outFile` is set, `sourceMap` parameter is ignored.\n\nWhen `typeof sourceMap === \"string\"`, the value of `sourceMap` will be used as the writing location for the file.\n\n### sourceMapContents\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` includes the `contents` in the source map information\n\n### sourceMapEmbed\n\n* Type: `Boolean`\n* Default: `false`\n\n`true` embeds the source map as a data URI\n\n### sourceMapRoot\n\n* Type: `String`\n* Default: `undefined`\n\nthe value will be emitted as `sourceRoot` in the source map information\n\n## `render` Callback (>= v3.0.0)\n\nnode-sass supports standard node style asynchronous callbacks with the signature of `function(err, result)`. In error conditions, the `error` argument is populated with the error object. In success conditions, the `result` object is populated with an object describing the result of the render call.\n\n### Error Object\n\n* `message` (String) - The error message.\n* `line` (Number) - The line number of error.\n* `column` (Number) - The column number of error.\n* `status` (Number) - The status code.\n* `file` (String) - The filename of error. In case `file` option was not set (in favour of `data`), this will reflect the value `stdin`.\n\n### Result Object\n\n* `css` (Buffer) - The compiled CSS. Write this to a file, or serve it out as needed.\n* `map` (Buffer) - The source map\n* `stats` (Object) - An object containing information about the compile. It contains the following keys:\n  * `entry` (String) - The path to the scss file, or `data` if the source was not a file\n  * `start` (Number) - Date.now() before the compilation\n  * `end` (Number) - Date.now() after the compilation\n  * `duration` (Number) - *end* - *start*\n  * `includedFiles` (Array) - Absolute paths to all related scss files in no particular order.\n\n### Examples\n\n```javascript\nvar sass = require('node-sass');\nsass.render({\n  file: '/path/to/myFile.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash, this.callback contains the node-style callback\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  },\n  includePaths: [ 'lib/', 'mod/' ],\n  outputStyle: 'compressed'\n}, function(error, result) { // node-style callback from v3.0.0 onwards\n  if (error) {\n    console.log(error.status); // used to be \"code\" in v2x and below\n    console.log(error.column);\n    console.log(error.message);\n    console.log(error.line);\n  }\n  else {\n    console.log(result.css.toString());\n\n    console.log(result.stats);\n\n    console.log(result.map.toString());\n    // or better\n    console.log(JSON.stringify(result.map)); // note, JSON.stringify accepts Buffer too\n  }\n});\n// OR\nvar result = sass.renderSync({\n  file: '/path/to/file.scss',\n  data: 'body{background:blue; a{color:black;}}',\n  outputStyle: 'compressed',\n  outFile: '/to/my/output.css',\n  sourceMap: true, // or an absolute or relative (to outFile) path\n  importer: function(url, prev, done) {\n    // url is the path in import as is, which LibSass encountered.\n    // prev is the previously resolved path.\n    // done is an optional callback, either consume it or return value synchronously.\n    // this.options contains this options hash\n    someAsyncFunction(url, prev, function(result){\n      done({\n        file: result.path, // only one of them is required, see section Special Behaviours.\n        contents: result.data\n      });\n    });\n    // OR\n    var result = someSyncFunction(url, prev);\n    return {file: result.path, contents: result.data};\n  }\n});\n\nconsole.log(result.css);\nconsole.log(result.map);\nconsole.log(result.stats);\n```\n\n### Special behaviours\n\n* In the case that both `file` and `data` options are set, node-sass will give precedence to `data` and use `file` to calculate paths in sourcemaps.\n\n### Version information (>= v2.0.0)\n\nBoth `node-sass` and `libsass` version info is now exposed via the `info` method:\n\n```javascript\nvar sass = require('node-sass');\n\nconsole.log(sass.info);\n\n/*\n  it will output something like:\n\n  node-sass       2.0.1   (Wrapper)       [JavaScript]\n  libsass         3.1.0   (Sass Compiler) [C/C++]\n*/\n```\n\nSince node-sass >=v3.0.0 LibSass version is determined at run time.\n\n## Integrations\n\nListing of community uses of node-sass in build tools and frameworks.\n\n### Brackets extension\n\n[@jasonsanjose](https://github.com/jasonsanjose) has created a [Brackets](http://brackets.io) extension based on node-sass: <https://github.com/jasonsanjose/brackets-sass>. When editing Sass files, the extension compiles changes on save. The extension also integrates with Live Preview to show Sass changes in the browser without saving or compiling.\n\n### Brunch plugin\n\n[Brunch](http://brunch.io)'s official sass plugin uses node-sass by default, and automatically falls back to ruby if use of Compass is detected: <https://github.com/brunch/sass-brunch>\n\n### Connect/Express middleware\n\nRecompile `.scss` files automatically for connect and express based http servers.\n\nThis functionality has been moved to [`node-sass-middleware`](https://github.com/sass/node-sass-middleware) in node-sass v1.0.0\n\n### DocPad Plugin\n\n[@10xLaCroixDrinker](https://github.com/10xLaCroixDrinker) wrote a [DocPad](http://docpad.org/) plugin that compiles `.scss` files using node-sass: <https://github.com/10xLaCroixDrinker/docpad-plugin-nodesass>\n\n### Duo.js extension\n\n[@stephenway](https://github.com/stephenway) has created an extension that transpiles Sass to CSS using node-sass with [duo.js](http://duojs.org/)\n<https://github.com/duojs/sass>\n\n### Grunt extension\n\n[@sindresorhus](https://github.com/sindresorhus/) has created a set of grunt tasks based on node-sass: <https://github.com/sindresorhus/grunt-sass>\n\n### Gulp extension\n\n[@dlmanning](https://github.com/dlmanning/) has created a gulp sass plugin based on node-sass: <https://github.com/dlmanning/gulp-sass>\n\n### Harp\n\n[@sintaxi](https://github.com/sintaxi)\u2019s Harp web server implicitly compiles `.scss` files using node-sass: <https://github.com/sintaxi/harp>\n\n### Metalsmith plugin\n\n[@stevenschobert](https://github.com/stevenschobert/) has created a metalsmith plugin based on node-sass: <https://github.com/stevenschobert/metalsmith-sass>\n\n### Meteor plugin\n\n[@fourseven](https://github.com/fourseven) has created a meteor plugin based on node-sass: <https://github.com/fourseven/meteor-scss>\n\n### Mimosa module\n\n[@dbashford](https://github.com/dbashford) has created a Mimosa module for sass which includes node-sass: <https://github.com/dbashford/mimosa-sass>\n\n## Example App\n\nThere is also an example connect app here: <https://github.com/andrew/node-sass-example>\n\n## Rebuilding binaries\n\nNode-sass includes pre-compiled binaries for popular platforms, to add a binary for your platform follow these steps:\n\nCheck out the project:\n\n```bash\ngit clone --recursive https://github.com/sass/node-sass.git\ncd node-sass\nnpm install\nnode scripts/build -f  # use -d switch for debug release\n# if succeeded, it will generate and move\n# the binary in vendor directory.\n```\n\n## Command Line Interface\n\nThe interface for command-line usage is fairly simplistic at this stage, as seen in the following usage section.\n\nOutput will be sent to stdout if the `--output` flag is omitted.\n\n### Usage\n\n `node-sass [options] <input> [output]`\n Or:\n `cat <input> | node-sass > output`\n\nExample:\n\n`node-sass src/style.scss dest/style.css`\n\n **Options:**\n\n```bash\n    -w, --watch                Watch a directory or file\n    -r, --recursive            Recursively watch directories or files\n    -o, --output               Output directory\n    -x, --omit-source-map-url  Omit source map URL comment from output\n    -i, --indented-syntax      Treat data from stdin as sass code (versus scss)\n    -q, --quiet                Suppress log output except on error\n    -v, --version              Prints version info\n    --output-style             CSS output style (nested | expanded | compact | compressed)\n    --indent-type              Indent type for output CSS (space | tab)\n    --indent-width             Indent width; number of spaces or tabs (maximum value: 10)\n    --linefeed                 Linefeed style (cr | crlf | lf | lfcr)\n    --source-comments          Include debug info in output\n    --source-map               Emit source map\n    --source-map-contents      Embed include contents in map\n    --source-map-embed         Embed sourceMappingUrl as data URI\n    --source-map-root          Base path, will be emitted in source-map as is\n    --include-path             Path to look for imported files\n    --follow                   Follow symlinked directories\n    --precision                The amount of precision allowed in decimal numbers\n    --error-bell               Output a bell character on errors\n    --importer                 Path to .js file containing custom importer\n    --functions                Path to .js file containing custom functions\n    --help                     Print usage info\n```\n\nThe `input` can be either a single `.scss` or `.sass`, or a directory. If the input is a directory the `--output` flag must also be supplied.\n\nAlso, note `--importer` takes the (absolute or relative to pwd) path to a js file, which needs to have a default `module.exports` set to the importer function. See our test [fixtures](https://github.com/sass/node-sass/tree/974f93e76ddd08ea850e3e663cfe64bb6a059dd3/test/fixtures/extras) for example.\n\nThe `--source-map` option accepts a boolean value, in which case it replaces destination extension with `.css.map`. It also accepts path to `.map` file and even path to the desired directory.\nWhen compiling a directory `--source-map` can either be a boolean value or a directory.\n\n## Binary configuration parameters\n\nnode-sass supports different configuration parameters to change settings related to the sass binary such as binary name, binary path or alternative download path. Following parameters are supported by node-sass:\n\nVariable name    | .npmrc parameter | Process argument   | Value\n-----------------|------------------|--------------------|------\nSASS_BINARY_NAME | sass_binary_name | --sass-binary-name | path\nSASS_BINARY_SITE | sass_binary_site | --sass-binary-site | URL\nSASS_BINARY_PATH | sass_binary_path | --sass-binary-path | path\nSASS_BINARY_DIR  | sass_binary_dir  | --sass-binary-dir  | path\n\nThese parameters can be used as environment variable:\n\n* E.g. `export SASS_BINARY_SITE=http://example.com/`\n\nAs local or global [.npmrc](https://docs.npmjs.com/misc/config) configuration file:\n\n* E.g. `sass_binary_site=http://example.com/`\n\nAs a process argument:\n\n* E.g. `npm install node-sass --sass-binary-site=http://example.com/`\n\n## Post-install Build\n\nInstall runs only two Mocha tests to see if your machine can use the pre-built [LibSass] which will save some time during install. If any tests fail it will build from source.\n\n## Maintainers\n\nThis module is brought to you and maintained by the following people:\n\n* Michael Mifsud - Project Lead ([Github](https://github.com/xzyfer) / [Twitter](https://twitter.com/xzyfer))\n* Andrew Nesbitt ([Github](https://github.com/andrew) / [Twitter](https://twitter.com/teabass))\n* Dean Mao ([Github](https://github.com/deanmao) / [Twitter](https://twitter.com/deanmao))\n* Brett Wilkins ([Github](https://github.com/bwilkins) / [Twitter](https://twitter.com/bjmaz))\n* Keith Cirkel ([Github](https://github.com/keithamus) / [Twitter](https://twitter.com/Keithamus))\n* Laurent Goderre ([Github](https://github.com/laurentgoderre) / [Twitter](https://twitter.com/laurentgoderre))\n* Nick Schonning ([Github](https://github.com/nschonni) / [Twitter](https://twitter.com/nschonni))\n* Adeel Mujahid ([Github](https://github.com/am11) / [Twitter](https://twitter.com/adeelbm))\n\n## Contributors\n\nWe <3 our contributors! A special thanks to all those who have clocked in some dev time on this project, we really appreciate your hard work. You can find [a full list of those people here.](https://github.com/sass/node-sass/graphs/contributors)\n\n### Note on Patches/Pull Requests\n\nCheck out our [Contributing guide](/.github/CONTRIBUTING.md)\n\n## Copyright\n\nCopyright (c) 2015 Andrew Nesbitt. See [LICENSE](https://github.com/sass/node-sass/blob/master/LICENSE) for details.\n\n[LibSass]: https://github.com/sass/libsass"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 759780}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 4855218}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20867387}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 63141141}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 116030912}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 215476344}], "dependentsCount": 6941, "starsCount": 260}, "github": {"homepage": "https://npmjs.org/package/node-sass", "starsCount": 7236, "forksCount": 1109, "subscribersCount": 204, "issues": {"count": 2922, "openCount": 140, "distribution": {"3600": 776, "10800": 292, "32400": 324, "97200": 319, "291600": 223, "874800": 241, "2624400": 182, "7873200": 212, "23619600": 160, "70858800": 96, "212576400": 97}, "isDisabled": false}, "contributors": [{"username": "xzyfer", "commitsCount": 283}, {"username": "am11", "commitsCount": 200}, {"username": "andrew", "commitsCount": 146}, {"username": "nschonni", "commitsCount": 95}, {"username": "saper", "commitsCount": 85}, {"username": "deanmao", "commitsCount": 42}, {"username": "kevva", "commitsCount": 35}, {"username": "bwilkins", "commitsCount": 11}, {"username": "LaurentGoderre", "commitsCount": 9}, {"username": "arian", "commitsCount": 8}, {"username": "jhnns", "commitsCount": 8}, {"username": "deepak1556", "commitsCount": 7}, {"username": "gonghao", "commitsCount": 7}, {"username": "sindresorhus", "commitsCount": 7}, {"username": "blopker", "commitsCount": 6}, {"username": "larsimmisch", "commitsCount": 6}, {"username": "Jakobo", "commitsCount": 5}, {"username": "keithamus", "commitsCount": 5}, {"username": "mgol", "commitsCount": 5}, {"username": "msokk", "commitsCount": 5}, {"username": "stefanpenner", "commitsCount": 5}, {"username": "QuLogic", "commitsCount": 4}, {"username": "XhmikosR", "commitsCount": 4}, {"username": "kkoopa", "commitsCount": 4}, {"username": "rvagg", "commitsCount": 4}, {"username": "samccone", "commitsCount": 4}, {"username": "Igorbek", "commitsCount": 3}, {"username": "dotzero", "commitsCount": 3}, {"username": "enriclluelles", "commitsCount": 3}, {"username": "fh1ch", "commitsCount": 3}, {"username": "jasonsanjose", "commitsCount": 3}, {"username": "pluma", "commitsCount": 3}, {"username": "simonexmachina", "commitsCount": 3}, {"username": "watilde", "commitsCount": 3}, {"username": "akiran", "commitsCount": 2}, {"username": "blakmatrix", "commitsCount": 2}, {"username": "craigbarnes", "commitsCount": 2}, {"username": "delitescere", "commitsCount": 2}, {"username": "dylang", "commitsCount": 2}, {"username": "emirotin", "commitsCount": 2}, {"username": "es128", "commitsCount": 2}, {"username": "gpapin", "commitsCount": 2}, {"username": "hcatlin", "commitsCount": 2}, {"username": "janpio", "commitsCount": 2}, {"username": "johnobe", "commitsCount": 2}, {"username": "kausters", "commitsCount": 2}, {"username": "kkopachev", "commitsCount": 2}, {"username": "marvinhagemeister", "commitsCount": 2}, {"username": "masterbee", "commitsCount": 2}, {"username": "mattrobenolt", "commitsCount": 2}, {"username": "mauritslamers", "commitsCount": 2}, {"username": "mgreter", "commitsCount": 2}, {"username": "mnutt", "commitsCount": 2}, {"username": "mweibel", "commitsCount": 2}, {"username": "naartjie", "commitsCount": 2}, {"username": "nc", "commitsCount": 2}, {"username": "ndhoule", "commitsCount": 2}, {"username": "nowells", "commitsCount": 2}, {"username": "paulcpederson", "commitsCount": 2}, {"username": "rubennorte", "commitsCount": 2}, {"username": "stephenway", "commitsCount": 2}, {"username": "10xLaCroixDrinker", "commitsCount": 1}, {"username": "DerZyklop", "commitsCount": 1}, {"username": "Gwerlas", "commitsCount": 1}, {"username": "MLoughry", "commitsCount": 1}, {"username": "Nico385412", "commitsCount": 1}, {"username": "NicolaiSoeborg", "commitsCount": 1}, {"username": "Sirivasv", "commitsCount": 1}, {"username": "ZoranPandovski", "commitsCount": 1}, {"username": "abetomo", "commitsCount": 1}, {"username": "ajhsu", "commitsCount": 1}, {"username": "anaibol", "commitsCount": 1}, {"username": "arzafran", "commitsCount": 1}, {"username": "asottile", "commitsCount": 1}, {"username": "bfred-it", "commitsCount": 1}, {"username": "cheesestringer", "commitsCount": 1}, {"username": "daltones", "commitsCount": 1}, {"username": "deadbeef404", "commitsCount": 1}, {"username": "evanfuture", "commitsCount": 1}, {"username": "foladipo", "commitsCount": 1}, {"username": "gucong3000", "commitsCount": 1}, {"username": "howlowck", "commitsCount": 1}, {"username": "hweeks", "commitsCount": 1}, {"username": "iamandrewluca", "commitsCount": 1}, {"username": "jhermsmeier", "commitsCount": 1}, {"username": "jorrit", "commitsCount": 1}, {"username": "lox", "commitsCount": 1}, {"username": "mcdado", "commitsCount": 1}, {"username": "mohuk", "commitsCount": 1}, {"username": "mscdex", "commitsCount": 1}, {"username": "nottrobin", "commitsCount": 1}, {"username": "ofrobots", "commitsCount": 1}, {"username": "pselden", "commitsCount": 1}, {"username": "ruedap", "commitsCount": 1}, {"username": "rupav", "commitsCount": 1}, {"username": "screamingmunch", "commitsCount": 1}, {"username": "sobolevn", "commitsCount": 1}, {"username": "tnguyen14", "commitsCount": 1}, {"username": "ysugimoto", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 7}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 24346, "testsSize": 182813, "hasChangelog": true}, "badges": [{"urls": {"original": "https://nodei.co/npm/node-sass.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/node-sass.svg", "content": "https://img.shields.io/npm/v/node-sass.json"}, "info": {"service": "npm", "type": "version"}}, {"urls": {"original": "https://travis-ci.org/sass/node-sass.svg?branch=master&style=flat", "service": "https://api.travis-ci.org/sass/node-sass.svg?branch=master", "shields": "https://img.shields.io/travis/sass/node-sass/master.svg", "content": "https://img.shields.io/travis/sass/node-sass/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master?svg=true", "service": "https://ci.appveyor.com/api/projects/status/22mjbk59kvd55m9y/branch/master", "shields": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.svg", "content": "https://img.shields.io/appveyor/ci/22mjbk59kvd55m9y/branch/master.json"}, "info": {"service": "appveyor", "type": "build"}}, {"urls": {"original": "https://david-dm.org/sass/node-sass.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass.svg", "shields": "https://img.shields.io/david/sass/node-sass.svg", "content": "https://img.shields.io/david/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://david-dm.org/sass/node-sass/dev-status.svg?theme=shields.io", "service": "https://david-dm.org/sass/node-sass/dev-status.svg", "shields": "https://img.shields.io/david/dev/sass/node-sass.svg", "content": "https://img.shields.io/david/dev/sass/node-sass.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "dev"}}}, {"urls": {"original": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "service": "https://coveralls.io/repos/sass/node-sass/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/sass/node-sass/master.svg", "content": "https://img.shields.io/coveralls/sass/node-sass/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["editorconfig", "eslint"], "coverage": 0.75, "outdatedDependencies": {"get-stdin": {"required": "^4.0.1", "stable": "8.0.0", "latest": "8.0.0"}, "meow": {"required": "^3.7.0", "stable": "7.0.1", "latest": "7.0.1"}, "true-case-path": {"required": "^1.0.2", "stable": "2.2.1", "latest": "2.2.1"}, "sass-graph": {"required": "2.2.5", "stable": "3.0.5", "latest": "3.0.5"}, "mkdirp": {"required": "^0.5.1", "stable": "1.0.4", "latest": "0.5.5"}, "chalk": {"required": "^1.1.1", "stable": "4.1.0", "latest": "4.1.0"}, "cross-spawn": {"required": "^3.0.0", "stable": "7.0.3", "latest": "7.0.3"}, "node-gyp": {"required": "^3.8.0", "stable": "7.0.0", "latest": "7.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9624999999999999, "health": 0.5, "branding": 0.6}, "popularity": {"communityInterest": 8908, "downloadsCount": 21047047, "downloadsAcceleration": 39875.86213850838, "dependentsCount": 6941}, "maintenance": {"releasesFrequency": 0.8236301369863014, "commitsFrequency": 0.7076883561643835, "openIssues": 1, "issuesDistribution": 0.396290740843367}}, "score": {"final": 0.8898753569506557, "detail": {"quality": 0.9339174610532262, "popularity": 0.7764588897092806, "maintenance": 0.9655414492469702}}}}, {"babel-preset-react": {"analyzedAt": "2020-06-10T03:16:52.022Z", "collected": {"metadata": {"name": "babel-preset-react", "scope": "unscoped", "version": "6.24.1", "description": "Babel preset for all React plugins.", "date": "2017-04-07T15:19:26.773Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "hzoo", "email": "hi@henryzoo.com"}, "maintainers": [{"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git"}, "links": {"npm": "https://www.npmjs.com/package/babel-preset-react", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"babel-preset-flow": "^6.23.0", "babel-plugin-syntax-jsx": "^6.3.13", "babel-plugin-transform-react-display-name": "^6.23.0", "babel-plugin-transform-react-jsx": "^6.24.1", "babel-plugin-transform-react-jsx-source": "^6.22.0", "babel-plugin-transform-react-jsx-self": "^6.22.0"}, "devDependencies": {"@babel/cli": "^7.10.1", "@babel/core": "^7.10.2", "@babel/eslint-plugin-development": "^1.0.1", "@babel/plugin-proposal-class-properties": "^7.10.1", "@babel/plugin-proposal-dynamic-import": "^7.10.1", "@babel/plugin-proposal-export-namespace-from": "^7.10.1", "@babel/plugin-proposal-object-rest-spread": "^7.10.1", "@babel/plugin-transform-flow-strip-types": "^7.10.1", "@babel/plugin-transform-for-of": "^7.10.1", "@babel/plugin-transform-modules-commonjs": "^7.10.1", "@babel/plugin-transform-runtime": "^7.10.1", "@babel/preset-env": "^7.10.2", "@babel/preset-flow": "^7.10.1", "@babel/register": "^7.10.1", "@babel/runtime": "^7.10.2", "@rollup/plugin-json": "4.0.1", "babel-eslint": "^11.0.0-beta.2", "babel-jest": "^24.9.0", "babel-plugin-transform-charcodes": "^0.2.0", "browserify": "^16.2.3", "bundle-collapser": "^1.2.1", "chalk": "^2.4.2", "charcodes": "^0.2.0", "derequire": "^2.0.2", "enhanced-resolve": "^3.0.0", "eslint": "^6.8.0", "eslint-import-resolver-node": "^0.3.3", "eslint-plugin-flowtype": "^4.6.0", "eslint-plugin-import": "^2.20.1", "eslint-plugin-jest": "^23.8.2", "eslint-plugin-prettier": "^3.1.2", "fancy-log": "^1.3.3", "flow-bin": "^0.123.0", "gulp": "^4.0.2", "gulp-babel": "^8.0.0", "gulp-filter": "^5.1.0", "gulp-newer": "^1.0.0", "gulp-plumber": "^1.2.1", "husky": "^3.0.0", "jest": "^24.9.0", "lerna": "^3.19.0", "lerna-changelog": "^0.5.0", "lint-staged": "^9.2.0", "lodash": "^4.17.13", "mergeiterator": "^1.2.5", "output-file-sync": "^2.0.0", "prettier": "^2.0.5", "pump": "^3.0.0", "rimraf": "^2.6.3", "rollup": "1.27.9", "rollup-plugin-babel": "^4.4.0", "rollup-plugin-commonjs": "^10.1.0", "rollup-plugin-node-builtins": "^2.1.2", "rollup-plugin-node-globals": "^1.4.0", "rollup-plugin-node-resolve": "^5.0.0", "rollup-plugin-replace": "^2.2.0", "rollup-plugin-terser": "^5.3.0", "test262-stream": "^1.3.0", "through2": "^2.0.0", "typescript": "^3.6.3"}, "releases": [{"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 0}, {"from": "2018-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 1}], "hasTestScript": true, "readme": "# babel-preset-react\n\n> Babel preset for all React plugins.\n\nThis preset includes the following plugins/presets:\n\n- [preset-flow](https://babeljs.io/docs/plugins/preset-flow/)\n- [syntax-jsx](https://babeljs.io/docs/plugins/syntax-jsx/)\n- [transform-react-jsx](https://babeljs.io/docs/plugins/transform-react-jsx/)\n- [transform-react-display-name](https://babeljs.io/docs/plugins/transform-react-display-name/)\n\n## Install\n\n> You can also check out the React [Getting Started page](https://facebook.github.io/react/docs/hello-world.html)\n\n> For more info, check out the setup page on the [cli](/docs/setup/) and the [usage](/docs/usage/cli/) docs.\n\nInstall the CLI and this preset\n\n```sh\nnpm install --save-dev babel-cli babel-preset-react\n```\n\nMake a .babelrc config file with the preset\n\n```sh\necho '{ \"presets\": [\"react\"] }' > .babelrc\n```\n\nCreate a file to run on\n\n```sh\necho '<h1>Hello, world!</h1>' > index.js\n```\n\nView the output\n\n```sh\n./node_modules/.bin/babel index.js\n```\n\n## Usage\n\n### Via `.babelrc` (Recommended)\n\n**.babelrc**\n\n```json\n{\n  \"presets\": [\"react\"]\n}\n```\n\n### Via CLI\n\n```sh\nbabel script.js --presets react \n```\n\n### Via Node API\n\n```javascript\nrequire(\"babel-core\").transform(\"code\", {\n  presets: [\"react\"]\n});\n```"}, "npm": {"downloads": [{"from": "2020-06-09T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 162087}, {"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 844367}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 3542419}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 10847980}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 21365094}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 49378793}], "dependentsCount": 3657, "starsCount": 70}, "github": {"homepage": "https://babel.dev", "starsCount": 36754, "forksCount": 4311, "subscribersCount": 868, "issues": {"count": 11621, "openCount": 786, "distribution": {"3600": 2464, "10800": 917, "32400": 1067, "97200": 1241, "291600": 1059, "874800": 1003, "2624400": 853, "7873200": 811, "23619600": 845, "70858800": 1092, "212576400": 269}, "isDisabled": false}, "contributors": [{"username": "sebmck", "commitsCount": 5195}, {"username": "hzoo", "commitsCount": 1263}, {"username": "loganfsmyth", "commitsCount": 594}, {"username": "nicolo-ribaudo", "commitsCount": 477}, {"username": "existentialism", "commitsCount": 451}, {"username": "danez", "commitsCount": 433}, {"username": "marijnh", "commitsCount": 264}, {"username": "RReverser", "commitsCount": 233}, {"username": "jamiebuilds", "commitsCount": 224}, {"username": "JLHwung", "commitsCount": 193}, {"username": "amasad", "commitsCount": 172}, {"username": "jridgewell", "commitsCount": 156}, {"username": "xtuc", "commitsCount": 105}, {"username": "yavorsky", "commitsCount": 89}, {"username": "kaicataldo", "commitsCount": 70}, {"username": "andy-ms", "commitsCount": 58}, {"username": "greenkeeper[bot]", "commitsCount": 54}, {"username": "Andarist", "commitsCount": 50}, {"username": "jmm", "commitsCount": 49}, {"username": "babel-bot", "commitsCount": 43}, {"username": "motiz88", "commitsCount": 36}, {"username": "mAAdhaTTah", "commitsCount": 35}, {"username": "samwgoldman", "commitsCount": 35}, {"username": "jquense", "commitsCount": 34}, {"username": "eventualbuddha", "commitsCount": 30}, {"username": "neVERberleRfellerER", "commitsCount": 30}, {"username": "tanhauhau", "commitsCount": 30}, {"username": "mathiasbynens", "commitsCount": 29}, {"username": "zertosh", "commitsCount": 27}, {"username": "guybedford", "commitsCount": 26}, {"username": "greenkeeperio-bot", "commitsCount": 25}, {"username": "peey", "commitsCount": 23}, {"username": "benjamn", "commitsCount": 22}, {"username": "rajasekarm", "commitsCount": 22}, {"username": "webpro", "commitsCount": 22}, {"username": "AluisioASG", "commitsCount": 19}, {"username": "chicoxyzzy", "commitsCount": 19}, {"username": "danharper", "commitsCount": 19}, {"username": "gaearon", "commitsCount": 19}, {"username": "sindresorhus", "commitsCount": 19}, {"username": "zloirock", "commitsCount": 17}, {"username": "devenbansod", "commitsCount": 16}, {"username": "maurobringolf", "commitsCount": 16}, {"username": "lydell", "commitsCount": 15}, {"username": "kpdecker", "commitsCount": 14}, {"username": "monsanto", "commitsCount": 14}, {"username": "alxpy", "commitsCount": 13}, {"username": "dnalborczyk", "commitsCount": 13}, {"username": "Macil", "commitsCount": 12}, {"username": "STRML", "commitsCount": 12}, {"username": "sophiebits", "commitsCount": 12}, {"username": "DrewML", "commitsCount": 11}, {"username": "aaronang", "commitsCount": 11}, {"username": "boopathi", "commitsCount": 11}, {"username": "samccone", "commitsCount": 11}, {"username": "vhf", "commitsCount": 11}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 11}, {"username": "ForbesLindesay", "commitsCount": 10}, {"username": "baer", "commitsCount": 10}, {"username": "gzzhanghao", "commitsCount": 10}, {"username": "kittens", "commitsCount": 10}, {"username": "rmacklin", "commitsCount": 10}, {"username": "Qantas94Heavy", "commitsCount": 9}, {"username": "aparajita", "commitsCount": 9}, {"username": "bakkot", "commitsCount": 9}, {"username": "cesarandreu", "commitsCount": 9}, {"username": "erikdesjardins", "commitsCount": 9}, {"username": "rubennorte", "commitsCount": 9}, {"username": "thiagoarrais", "commitsCount": 9}, {"username": "Daniel15", "commitsCount": 8}, {"username": "arthurvr", "commitsCount": 8}, {"username": "buunguyen", "commitsCount": 8}, {"username": "josh", "commitsCount": 8}, {"username": "phantom10111", "commitsCount": 8}, {"username": "rattrayalex", "commitsCount": 8}, {"username": "rwaldron", "commitsCount": 8}, {"username": "Retsam", "commitsCount": 7}, {"username": "azz", "commitsCount": 7}, {"username": "bmeurer", "commitsCount": 7}, {"username": "frantic", "commitsCount": 7}, {"username": "mysticatea", "commitsCount": 7}, {"username": "tricknotes", "commitsCount": 7}, {"username": "divmain", "commitsCount": 6}, {"username": "forivall", "commitsCount": 6}, {"username": "jayphelps", "commitsCount": 6}, {"username": "jhen0409", "commitsCount": 6}, {"username": "leebyron", "commitsCount": 6}, {"username": "max-schaefer", "commitsCount": 6}, {"username": "sarupbanskota", "commitsCount": 6}, {"username": "tim-mc", "commitsCount": 6}, {"username": "Janpot", "commitsCount": 5}, {"username": "armano2", "commitsCount": 5}, {"username": "arv", "commitsCount": 5}, {"username": "devongovett", "commitsCount": 5}, {"username": "gonzachr", "commitsCount": 5}, {"username": "ksashikumar", "commitsCount": 5}, {"username": "nveenjain", "commitsCount": 5}, {"username": "sidntrivedi012", "commitsCount": 5}], "commits": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 2}, {"from": "2020-05-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 57}, {"from": "2020-03-12T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 204}, {"from": "2019-12-13T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 412}, {"from": "2019-06-11T00:00:00.000Z", "to": "2020-06-10T00:00:00.000Z", "count": 791}], "statuses": [{"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 7836, "testsSize": 12324572, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9864999999999999, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 42101, "downloadsCount": 3615993.3333333335, "downloadsAcceleration": -8448.282191780829, "dependentsCount": 3657}, "maintenance": {"releasesFrequency": 0.012328767123287673, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.24127593449323603}}, "score": {"final": 0.7167073325417557, "detail": {"quality": 0.9857853708571743, "popularity": 0.6315973798354552, "maintenance": 0.5711789666919831}}}}, {"ts-node": {"analyzedAt": "2020-06-03T10:12:14.851Z", "collected": {"metadata": {"name": "ts-node", "scope": "unscoped", "version": "8.10.2", "description": "TypeScript execution environment and REPL for node.js, with source map support", "keywords": ["typescript", "node", "runtime", "environment", "ts", "compiler"], "date": "2020-05-28T15:44:45.616Z", "author": {"name": "Blake Embrey", "email": "hello@blakeembrey.com", "url": "http://blakeembrey.me", "username": "blakeembrey"}, "publisher": {"username": "cspotcode", "email": "cspotcode@gmail.com"}, "maintainers": [{"username": "blakeembrey", "email": "hello@blakeembrey.com"}, {"username": "cspotcode", "email": "cspotcode@gmail.com"}], "repository": {"type": "git", "url": "git://github.com/TypeStrong/ts-node.git"}, "links": {"npm": "https://www.npmjs.com/package/ts-node"}, "license": "MIT", "dependencies": {"arg": "^4.1.0", "diff": "^4.0.1", "make-error": "^1.1.1", "source-map-support": "^0.5.17", "yn": "3.1.1"}, "devDependencies": {"@types/chai": "^4.0.4", "@types/diff": "^4.0.2", "@types/mocha": "^5.2.7", "@types/node": "13.13.5", "@types/proxyquire": "^1.3.28", "@types/react": "^16.0.2", "@types/semver": "^7.1.0", "@types/source-map-support": "^0.5.0", "axios": "^0.19.0", "chai": "^4.0.1", "istanbul": "^0.4.0", "mocha": "^6.2.2", "ntypescript": "^1.201507091536.1", "proxyquire": "^2.0.0", "react": "^16.0.0", "rimraf": "^3.0.0", "semver": "^7.1.3", "tslint": "^6.1.0", "tslint-config-standard": "^9.0.0", "typescript": "3.8.3", "typescript-json-schema": "^0.42.0", "util.promisify": "^1.0.1"}, "peerDependencies": {"typescript": ">=2.7"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 13}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 21}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 33}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 865250}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4510538}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19663274}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 56557080}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 97912971}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 164721240}], "dependentsCount": 1966, "starsCount": 51}, "github": {"starsCount": 6921, "forksCount": 293, "subscribersCount": 73, "issues": {"count": 1064, "openCount": 82, "distribution": {"3600": 194, "10800": 86, "32400": 125, "97200": 138, "291600": 84, "874800": 95, "2624400": 87, "7873200": 102, "23619600": 74, "70858800": 57, "212576400": 22}, "isDisabled": false}, "contributors": [{"username": "blakeembrey", "commitsCount": 368}, {"username": "cspotcode", "commitsCount": 42}, {"username": "greenkeeperio-bot", "commitsCount": 15}, {"username": "greenkeeper[bot]", "commitsCount": 13}, {"username": "stelcheck", "commitsCount": 4}, {"username": "G-Rath", "commitsCount": 3}, {"username": "unional", "commitsCount": 3}, {"username": "Jontem", "commitsCount": 2}, {"username": "basarat", "commitsCount": 2}, {"username": "chrisleck", "commitsCount": 2}, {"username": "srolel", "commitsCount": 2}, {"username": "sylc", "commitsCount": 2}, {"username": "3mard", "commitsCount": 1}, {"username": "BrunnerLivio", "commitsCount": 1}, {"username": "Deilan", "commitsCount": 1}, {"username": "Janpot", "commitsCount": 1}, {"username": "KasparEtter", "commitsCount": 1}, {"username": "Llorx", "commitsCount": 1}, {"username": "LoicPoullain", "commitsCount": 1}, {"username": "Maecenas", "commitsCount": 1}, {"username": "MicahZoltu", "commitsCount": 1}, {"username": "NaridaL", "commitsCount": 1}, {"username": "Psidium", "commitsCount": 1}, {"username": "Weakky", "commitsCount": 1}, {"username": "Zlatkovsky", "commitsCount": 1}, {"username": "abraham", "commitsCount": 1}, {"username": "abraj", "commitsCount": 1}, {"username": "astashov", "commitsCount": 1}, {"username": "bertyhell", "commitsCount": 1}, {"username": "burnnat", "commitsCount": 1}, {"username": "capaj", "commitsCount": 1}, {"username": "caseyWebb", "commitsCount": 1}, {"username": "cdschmitz", "commitsCount": 1}, {"username": "cevek", "commitsCount": 1}, {"username": "cookrn", "commitsCount": 1}, {"username": "cthrax", "commitsCount": 1}, {"username": "danthegoodman", "commitsCount": 1}, {"username": "devoto13", "commitsCount": 1}, {"username": "gfx", "commitsCount": 1}, {"username": "hiro08gh", "commitsCount": 1}, {"username": "jacobdcastro", "commitsCount": 1}, {"username": "joeskeen", "commitsCount": 1}, {"username": "jonaskello", "commitsCount": 1}, {"username": "jschwarty", "commitsCount": 1}, {"username": "kriszyp", "commitsCount": 1}, {"username": "ksamborski", "commitsCount": 1}, {"username": "kumarashwin", "commitsCount": 1}, {"username": "ledenis", "commitsCount": 1}, {"username": "ljani", "commitsCount": 1}, {"username": "mhegazy", "commitsCount": 1}, {"username": "morlay", "commitsCount": 1}, {"username": "musahaidari", "commitsCount": 1}, {"username": "nana4gonta", "commitsCount": 1}, {"username": "nomcopter", "commitsCount": 1}, {"username": "papb", "commitsCount": 1}, {"username": "rakannimer", "commitsCount": 1}, {"username": "rharriso", "commitsCount": 1}, {"username": "rpd10", "commitsCount": 1}, {"username": "rsxdalv", "commitsCount": 1}, {"username": "rundef", "commitsCount": 1}, {"username": "sgoll", "commitsCount": 1}, {"username": "sharikovvladislav", "commitsCount": 1}, {"username": "shortenda", "commitsCount": 1}, {"username": "sisisin", "commitsCount": 1}, {"username": "steadicat", "commitsCount": 1}, {"username": "tenorok", "commitsCount": 1}, {"username": "thetutlage", "commitsCount": 1}, {"username": "timocov", "commitsCount": 1}, {"username": "whitecolor", "commitsCount": 1}, {"username": "xaclincoln", "commitsCount": 1}, {"username": "zkochan", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 0}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 17}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 45}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 71}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 117}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 31867}, "linters": ["editorconfig", "tslint"], "coverage": 0.74, "outdatedDependencies": {"yn": {"required": "3.1.1", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.961, "health": 0.75, "branding": 0}, "popularity": {"communityInterest": 7409, "downloadsCount": 18852360, "downloadsAcceleration": 74205.31992009131, "dependentsCount": 1966}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4481090497387526}}, "score": {"final": 0.8402280160243665, "detail": {"quality": 0.8145061179243254, "popularity": 0.7244307208921772, "maintenance": 0.9780726523851624}}}}, {"commander": {"analyzedAt": "2020-06-20T06:04:18.845Z", "collected": {"metadata": {"name": "commander", "scope": "unscoped", "version": "5.1.0", "description": "the complete solution for node.js command-line programs", "keywords": ["commander", "command", "option", "parser", "cli", "argument", "args", "argv"], "date": "2020-04-25T02:29:21.964Z", "author": {"name": "TJ Holowaychuk", "email": "tj@vision-media.ca", "username": "tjholowaychuk"}, "publisher": {"username": "abetomo", "email": "abe@enzou.tokyo"}, "maintainers": [{"username": "abetomo", "email": "abe@enzou.tokyo"}, {"username": "shadowspawn", "email": "npm_j@ruru.gen.nz"}, {"username": "somekittens", "email": "rkoutnik@gmail.com"}, {"username": "tjholowaychuk", "email": "tj@vision-media.ca"}, {"username": "vanesyan", "email": "romain.vanesyan@gmail.com"}, {"username": "zhiyelee", "email": "zhiyelee@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/tj/commander.js.git"}, "links": {"npm": "https://www.npmjs.com/package/commander", "homepage": "https://github.com/tj/commander.js#readme", "repository": "https://github.com/tj/commander.js", "bugs": "https://github.com/tj/commander.js/issues"}, "license": "MIT", "devDependencies": {"@types/jest": "^25.2.1", "@types/node": "^12.12.36", "@typescript-eslint/eslint-plugin": "^2.29.0", "eslint": "^6.8.0", "eslint-config-standard-with-typescript": "^15.0.1", "eslint-plugin-jest": "^23.8.2", "jest": "^25.4.0", "standard": "^14.3.3", "typescript": "^3.7.5"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 9}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 26}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 6700897}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 43781825}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 183845294}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 543353842}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 985651127}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 1759189869}], "dependentsCount": 39309, "starsCount": 1013}, "github": {"starsCount": 18104, "forksCount": 1250, "subscribersCount": 241, "issues": {"count": 1280, "openCount": 20, "distribution": {"3600": 139, "10800": 69, "32400": 82, "97200": 131, "291600": 81, "874800": 76, "2624400": 115, "7873200": 108, "23619600": 103, "70858800": 182, "212576400": 194}, "isDisabled": false}, "contributors": [{"username": "shadowspawn", "commitsCount": 167}, {"username": "tj", "commitsCount": 142}, {"username": "zhiyelee", "commitsCount": 76}, {"username": "abetomo", "commitsCount": 48}, {"username": "tonylukasavage", "commitsCount": 9}, {"username": "mojavelinux", "commitsCount": 8}, {"username": "alan-agius4", "commitsCount": 6}, {"username": "jaredpetersen", "commitsCount": 6}, {"username": "oGsLP", "commitsCount": 6}, {"username": "itay", "commitsCount": 5}, {"username": "Mithgol", "commitsCount": 4}, {"username": "focusaurus", "commitsCount": 4}, {"username": "sebastiendb", "commitsCount": 4}, {"username": "banli17", "commitsCount": 3}, {"username": "felixge", "commitsCount": 3}, {"username": "jamesgeorge007", "commitsCount": 3}, {"username": "kira1928", "commitsCount": 3}, {"username": "sorohan", "commitsCount": 3}, {"username": "tandrewnichols", "commitsCount": 3}, {"username": "thethomaseffect", "commitsCount": 3}, {"username": "AlphaHydrae", "commitsCount": 2}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "Globegitter", "commitsCount": 2}, {"username": "JustATrick", "commitsCount": 2}, {"username": "Quentin01", "commitsCount": 2}, {"username": "SomeKittens", "commitsCount": 2}, {"username": "ajfranzoia", "commitsCount": 2}, {"username": "codyj110", "commitsCount": 2}, {"username": "jhamlet", "commitsCount": 2}, {"username": "karfau", "commitsCount": 2}, {"username": "miyajan", "commitsCount": 2}, {"username": "noway", "commitsCount": 2}, {"username": "pRizz", "commitsCount": 2}, {"username": "palanik", "commitsCount": 2}, {"username": "qfox", "commitsCount": 2}, {"username": "rrthomas", "commitsCount": 2}, {"username": "usmonster", "commitsCount": 2}, {"username": "viniciusls", "commitsCount": 2}, {"username": "vonagam", "commitsCount": 2}, {"username": "yausername", "commitsCount": 2}, {"username": "zce", "commitsCount": 2}, {"username": "AMoreaux", "commitsCount": 1}, {"username": "ForJing", "commitsCount": 1}, {"username": "HakurouKen", "commitsCount": 1}, {"username": "KillWolfVlad", "commitsCount": 1}, {"username": "ManoelLobo", "commitsCount": 1}, {"username": "MarshallOfSound", "commitsCount": 1}, {"username": "Nepomuceno", "commitsCount": 1}, {"username": "Qix-", "commitsCount": 1}, {"username": "TheRoSS", "commitsCount": 1}, {"username": "TheToolbox", "commitsCount": 1}, {"username": "ThomasSimoens", "commitsCount": 1}, {"username": "UrielCh", "commitsCount": 1}, {"username": "ValentinTrinque", "commitsCount": 1}, {"username": "Willv19", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "akvamalin", "commitsCount": 1}, {"username": "asnowwolf", "commitsCount": 1}, {"username": "blair", "commitsCount": 1}, {"username": "bodinsamuel", "commitsCount": 1}, {"username": "buerkle", "commitsCount": 1}, {"username": "bzoz", "commitsCount": 1}, {"username": "c-geek", "commitsCount": 1}, {"username": "chdh", "commitsCount": 1}, {"username": "cheapsteak", "commitsCount": 1}, {"username": "chengkungui", "commitsCount": 1}, {"username": "chengluyu", "commitsCount": 1}, {"username": "ciceropablo", "commitsCount": 1}, {"username": "claylo", "commitsCount": 1}, {"username": "daevidpreis", "commitsCount": 1}, {"username": "deepakpathania", "commitsCount": 1}, {"username": "djulien", "commitsCount": 1}, {"username": "eduardbadillo", "commitsCount": 1}, {"username": "ffflorian", "commitsCount": 1}, {"username": "grant", "commitsCount": 1}, {"username": "hxsf", "commitsCount": 1}, {"username": "idmontie", "commitsCount": 1}, {"username": "ignacioiglesias", "commitsCount": 1}, {"username": "jamesr73", "commitsCount": 1}, {"username": "jsamr", "commitsCount": 1}, {"username": "junajan", "commitsCount": 1}, {"username": "monkeym4ster", "commitsCount": 1}, {"username": "nazieb", "commitsCount": 1}, {"username": "ntkme", "commitsCount": 1}, {"username": "pbnj", "commitsCount": 1}, {"username": "prokopsimek", "commitsCount": 1}, {"username": "reviewher", "commitsCount": 1}, {"username": "revington", "commitsCount": 1}, {"username": "rike422", "commitsCount": 1}, {"username": "simeg", "commitsCount": 1}, {"username": "snow01", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "sunorry", "commitsCount": 1}, {"username": "tugrul", "commitsCount": 1}, {"username": "twk-b", "commitsCount": 1}, {"username": "xcatliu", "commitsCount": 1}, {"username": "yanick", "commitsCount": 1}, {"username": "ycmjason", "commitsCount": 1}, {"username": "zephraph", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 75}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 188}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 135340, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "standard"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.62, "tests": 1, "health": 1, "branding": 0}, "popularity": {"communityInterest": 20708, "downloadsCount": 181117947.33333334, "downloadsAcceleration": 491154.87966133934, "dependentsCount": 39309}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9743082191780822, "openIssues": 1, "issuesDistribution": 0}}, "score": {"final": 0.8195498035017712, "detail": {"quality": 0.8462282693327017, "popularity": 0.9495658855387199, "maintenance": 0.666666465038311}}}}, {"file-loader": {"analyzedAt": "2020-06-13T03:00:01.688Z", "collected": {"metadata": {"name": "file-loader", "scope": "unscoped", "version": "6.0.0", "description": "A file loader module for webpack", "keywords": ["webpack"], "date": "2020-03-17T12:07:35.273Z", "author": {"name": "Tobias Koppers @sokra"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "d3viant0ne", "email": "wiens.joshua@gmail.com"}, {"username": "ericclemmons", "email": "eric@smarterspam.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "sokra", "email": "tobias.koppers@googlemail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/file-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/file-loader", "homepage": "https://github.com/webpack-contrib/file-loader", "repository": "https://github.com/webpack-contrib/file-loader", "bugs": "https://github.com/webpack-contrib/file-loader/issues"}, "license": "MIT", "dependencies": {"loader-utils": "^2.0.0", "schema-utils": "^2.6.5"}, "devDependencies": {"@babel/cli": "^7.8.4", "@babel/core": "^7.8.7", "@babel/preset-env": "^7.8.7", "@commitlint/cli": "^8.3.5", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^25.1.0", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^7.0.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.10.0", "eslint-plugin-import": "^2.20.1", "husky": "^4.2.3", "jest": "^25.1.0", "jest-junit": "^10.0.0", "lint-staged": "^10.0.8", "memfs": "^3.1.2", "memory-fs": "^0.5.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "standard-version": "^7.1.0", "url-loader": "^3.0.0", "webpack": "^4.42.0"}, "peerDependencies": {"webpack": "^4.0.0 || ^5.0.0"}, "releases": [{"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 2}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 3}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2018-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 13}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\" src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# file-loader\n\nThe `file-loader` resolves `import`/`require()` on a file into a url and emits the file into the output directory.\n\n## Getting Started\n\nTo begin, you'll need to install `file-loader`:\n\n```console\n$ npm install file-loader --save-dev\n```\n\nImport (or `require`) the target file(s) in one of the bundle's files:\n\n**file.js**\n\n```js\nimport img from './file.png';\n```\n\nThen add the loader to your `webpack` config. For example:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nAnd run `webpack` via your preferred method. This will emit `file.png` as a file\nin the output directory (with the specified naming convention, if options are\nspecified to do so) and returns the public URI of the file.\n\n> \u2139\ufe0f By default the filename of the resulting file is the hash of the file's contents with the original extension of the required resource.\n\n## Options\n\n### `name`\n\nType: `String|Function`\nDefault: `'[contenthash].[ext]'`\n\nSpecifies a custom filename template for the target file(s) using the query\nparameter `name`. For example, to emit a file from your `context` directory into\nthe output directory retaining the full directory structure, you might use:\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[path][name].[ext]',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name(resourcePath, resourceQuery) {\n            // `resourcePath` - `/absolute/path/to/file.js`\n            // `resourceQuery` - `?foo=bar`\n\n            if (process.env.NODE_ENV === 'development') {\n              return '[path][name].[ext]';\n            }\n\n            return '[contenthash].[ext]';\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f By default the path and name you specify will output the file in that same directory, and will also use the same URI path to access the file.\n\n### `outputPath`\n\nType: `String|Function`\nDefault: `undefined`\n\nSpecify a filesystem path where the target file(s) will be placed.\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: 'images',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          outputPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_output_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `output_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `publicPath`\n\nType: `String|Function`\nDefault: [`__webpack_public_path__`](https://webpack.js.org/api/module-variables/#__webpack_public_path__-webpack-specific-)+outputPath\n\nSpecifies a custom public path for the target file(s).\n\n#### `String`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: 'assets',\n        },\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: (url, resourcePath, context) => {\n            // `resourcePath` is original absolute path to asset\n            // `context` is directory where stored asset (`rootContext`) or `context` option\n\n            // To get relative path you can use\n            // const relativePath = path.relative(context, resourcePath);\n\n            if (/my-custom-image\\.png/.test(resourcePath)) {\n              return `other_public_path/${url}`;\n            }\n\n            if (/images/.test(context)) {\n              return `image_output_path/${url}`;\n            }\n\n            return `public_path/${url}`;\n          },\n        },\n      },\n    ],\n  },\n};\n```\n\n### `postTransformPublicPath`\n\nType: `Function`\nDefault: `undefined`\n\nSpecifies a custom function to post-process the generated public path. This can be used to prepend or append dynamic global variables that are only available at runtime, like `__webpack_public_path__`. This would not be possible with just `publicPath`, since it stringifies the values.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          publicPath: '/some/path/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\n### `context`\n\nType: `String`\nDefault: [`context`](https://webpack.js.org/configuration/entry-context/#context)\n\nSpecifies a custom file context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              context: 'project',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `emitFile`\n\nType: `Boolean`\nDefault: `true`\n\nIf true, emits a file (writes a file to the filesystem). If false, the loader\nwill return a public URI but **will not** emit the file. It is often useful to\ndisable this option for server-side packages.\n\n**file.js**\n\n```js\n// bundle file\nimport img from './file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              emitFile: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `regExp`\n\nType: `RegExp`\nDefault: `undefined`\n\nSpecifies a Regular Expression to one or many parts of the target file path.\nThe capture groups can be reused in the `name` property using `[N]`\n[placeholder](https://github.com/webpack-contrib/file-loader#placeholders).\n\n**file.js**\n\n```js\nimport img from './customer01/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              regExp: /\\/([a-z0-9]+)\\/[a-z0-9]+\\.png$/i,\n              name: '[1]-[name].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139\ufe0f If `[0]` is used, it will be replaced by the entire tested string, whereas `[1]` will contain the first capturing parenthesis of your regex and so on...\n\n### `esModule`\n\nType: `Boolean`\nDefault: `true`\n\nBy default, `file-loader` generates JS modules that use the ES modules syntax.\nThere are some cases in which using ES modules is beneficial, like in the case of [module concatenation](https://webpack.js.org/plugins/module-concatenation-plugin/) and [tree shaking](https://webpack.js.org/guides/tree-shaking/).\n\nYou can enable a CommonJS module syntax using:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.css$/,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              esModule: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Placeholders\n\nFull information about placeholders you can find [here](https://github.com/webpack/loader-utils#interpolatename).\n\n### `[ext]`\n\nType: `String`\nDefault: `file.extname`\n\nThe file extension of the target file/resource.\n\n### `[name]`\n\nType: `String`\nDefault: `file.basename`\n\nThe basename of the file/resource.\n\n### `[path]`\n\nType: `String`\nDefault: `file.directory`\n\nThe path of the resource relative to the webpack/config `context`.\n\n### `[folder]`\n\nType: `String`\nDefault: `file.folder`\n\nThe folder of the resource is in.\n\n### `[query]`\n\nType: `String`\nDefault: `file.query`\n\nThe query of the resource, i.e. `?foo=bar`.\n\n### `[emoji]`\n\nType: `String`\nDefault: `undefined`\n\nA random emoji representation of `content`.\n\n### `[emoji:<length>]`\n\nType: `String`\nDefault: `undefined`\n\nSame as above, but with a customizable number of emojis\n\n### `[hash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[contenthash]`\n\nType: `String`\nDefault: `md4`\n\nSpecifies the hash method to use for hashing the file content.\n\n### `[<hashType>:hash:<digestType>:<length>]`\n\nType: `String`\n\nThe hash of options.content (Buffer) (by default it's the hex digest of the hash).\n\n#### `digestType`\n\nType: `String`\nDefault: `'hex'`\n\nThe [digest](https://en.wikipedia.org/wiki/Cryptographic_hash_function) that the\nhash function should use. Valid values include: base26, base32, base36,\nbase49, base52, base58, base62, base64, and hex.\n\n#### `hashType`\n\nType: `String`\nDefault: `'md4'`\n\nThe type of hash that the has function should use. Valid values include: `md4`, `md5`, `sha1`, `sha256`, and `sha512`.\n\n#### `length`\n\nType: `Number`\nDefault: `undefined`\n\nUsers may also specify a length for the computed hash.\n\n### `[N]`\n\nType: `String`\nDefault: `undefined`\n\nThe n-th match obtained from matching the current file name against the `regExp`.\n\n## Examples\n\n### Names\n\nThe following examples show how one might use `file-loader` and what the result would be.\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: 'dirname/[contenthash].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ndirname/0dcbbaa701328ae351f.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[sha512:hash:base64:7].[ext]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\ngdyb21L.png\n```\n\n---\n\n**file.js**\n\n```js\nimport png from './path/to/file.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext]?[contenthash]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\npath/to/file.png?e43b20c069c4a01867c31e98cbce33c9\n```\n\n### CDN\n\nThe following examples show how to use `file-loader` for CDN uses query params.\n\n**file.js**\n\n```js\nimport png from './directory/image.png?width=300&height=300';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  output: {\n    publicPath: 'https://cdn.example.com/',\n  },\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpe?g|gif)$/i,\n        use: [\n          {\n            loader: 'file-loader',\n            options: {\n              name: '[path][name].[ext][query]',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nResult:\n\n```bash\n# result\nhttps://cdn.example.com/directory/image.png?width=300&height=300\n```\n\n### Dynamic public path depending on environment variable at run time\n\nAn application might want to configure different CDN hosts depending on an environment variable that is only available when running the application. This can be an advantage, as only one build of the application is necessary, which behaves differntly depending on environment variables of the deployment environment. Since file-loader is applied when compiling the application, and not when running it, the environment variable cannot be used in the file-loader configuration. A way around this is setting the `__webpack_public_path__` to the desired CDN host depending on the environment variable at the entrypoint of the application. The option `postTransformPublicPath` can be used to configure a custom path depending on a variable like `__webpack_public_path__`.\n\n**main.js**\n\n```js\nconst assetPrefixForNamespace = (namespace) => {\n  switch (namespace) {\n    case 'prod':\n      return 'https://cache.myserver.net/web';\n    case 'uat':\n      return 'https://cache-uat.myserver.net/web';\n    case 'st':\n      return 'https://cache-st.myserver.net/web';\n    case 'dev':\n      return 'https://cache-dev.myserver.net/web';\n    default:\n      return '';\n  }\n};\nconst namespace = process.env.NAMESPACE;\n\n__webpack_public_path__ = `${assetPrefixForNamespace(namespace)}/`;\n```\n\n**file.js**\n\n```js\nimport png from './image.png';\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.(png|jpg|gif)$/i,\n        loader: 'file-loader',\n        options: {\n          name: '[name].[contenthash].[ext]',\n          outputPath: 'static/assets/',\n          publicPath: 'static/assets/',\n          postTransformPublicPath: (p) => `__webpack_public_path__ + ${p}`,\n        },\n      },\n    ],\n  },\n};\n```\n\nResult when run with `NAMESPACE=prod` env variable:\n\n```bash\n# result\nhttps://cache.myserver.net/web/static/assets/image.somehash.png\n```\n\nResult when run with `NAMESPACE=dev` env variable:\n\n```bash\n# result\nhttps://cache-dev.myserver.net/web/static/assets/image.somehash.png\n```\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/file-loader.svg\n[npm-url]: https://npmjs.com/package/file-loader\n[node]: https://img.shields.io/node/v/file-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/file-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/file-loader\n[tests]: https://dev.azure.com/webpack-contrib/file-loader/_apis/build/status/webpack-contrib.file-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/file-loader/_build/latest?definitionId=2&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/file-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/file-loader\n[chat]: https://img.shields.io/badge/gitter-webpack%2Fwebpack-brightgreen.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=file-loader\n[size-url]: https://packagephobia.now.sh/result?p=file-loader"}, "npm": {"downloads": [{"from": "2020-06-12T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 1470087}, {"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9316285}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 40116007}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 119015134}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 211559389}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 376211829}], "dependentsCount": 7687, "starsCount": 64}, "github": {"starsCount": 1745, "forksCount": 257, "subscribersCount": 29, "issues": {"count": 373, "openCount": 4, "distribution": {"3600": 79, "10800": 26, "32400": 15, "97200": 38, "291600": 14, "874800": 19, "2624400": 26, "7873200": 38, "23619600": 57, "70858800": 53, "212576400": 8}, "isDisabled": false}, "contributors": [{"username": "evilebottnawi", "commitsCount": 42}, {"username": "d3viant0ne", "commitsCount": 34}, {"username": "sokra", "commitsCount": 27}, {"username": "michael-ciniawsky", "commitsCount": 18}, {"username": "SpaceK33z", "commitsCount": 2}, {"username": "akx", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "smondal", "commitsCount": 2}, {"username": "DenisIzmaylov", "commitsCount": 1}, {"username": "Gabri3l", "commitsCount": 1}, {"username": "MattGurney", "commitsCount": 1}, {"username": "Munter", "commitsCount": 1}, {"username": "Nicktho", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "adriancmiranda", "commitsCount": 1}, {"username": "ai", "commitsCount": 1}, {"username": "alanyinjs", "commitsCount": 1}, {"username": "budmc29", "commitsCount": 1}, {"username": "cameronhimself", "commitsCount": 1}, {"username": "cjhanrahan", "commitsCount": 1}, {"username": "cobbweb", "commitsCount": 1}, {"username": "dms1lva", "commitsCount": 1}, {"username": "economysizegeek", "commitsCount": 1}, {"username": "fabb", "commitsCount": 1}, {"username": "jordansexton", "commitsCount": 1}, {"username": "joseprio", "commitsCount": 1}, {"username": "jungomi", "commitsCount": 1}, {"username": "kevinzwhuang", "commitsCount": 1}, {"username": "kossnocorp", "commitsCount": 1}, {"username": "mobitar", "commitsCount": 1}, {"username": "montogeek", "commitsCount": 1}, {"username": "mrpoptart", "commitsCount": 1}, {"username": "necolas", "commitsCount": 1}, {"username": "rderandom", "commitsCount": 1}, {"username": "renestalder", "commitsCount": 1}, {"username": "revolunet", "commitsCount": 1}, {"username": "rondonjon", "commitsCount": 1}, {"username": "serut", "commitsCount": 1}, {"username": "shama", "commitsCount": 1}, {"username": "sheerun", "commitsCount": 1}, {"username": "shellscape", "commitsCount": 1}, {"username": "shprink", "commitsCount": 1}, {"username": "syranide", "commitsCount": 1}, {"username": "tedpennings", "commitsCount": 1}, {"username": "tstirrat15", "commitsCount": 1}, {"username": "xoyimi", "commitsCount": 1}], "commits": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-05-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 0}, {"from": "2020-03-15T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 4}, {"from": "2019-12-16T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 9}, {"from": "2019-06-14T00:00:00.000Z", "to": "2020-06-13T00:00:00.000Z", "count": 24}], "statuses": [{"context": "codecov/project", "state": "success"}, {"context": "codecov/patch", "state": "success"}]}, "source": {"files": {"readmeSize": 15733, "testsSize": 75603, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/file-loader.svg", "shields": "https://img.shields.io/npm/v/file-loader.svg", "content": "https://img.shields.io/npm/v/file-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/file-loader.svg", "service": "https://david-dm.org/webpack-contrib/file-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/file-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/file-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 1}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 1, "branding": 0.3}, "popularity": {"communityInterest": 2141, "downloadsCount": 39671711.333333336, "downloadsAcceleration": 112773.87319254183, "dependentsCount": 7687}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.9168074778702613, "detail": {"quality": 0.9952133769606653, "popularity": 0.7665165351834271, "maintenance": 0.9998933641938921}}}}, {"fs-extra": {"analyzedAt": "2020-06-04T09:43:38.040Z", "collected": {"metadata": {"name": "fs-extra", "scope": "unscoped", "version": "9.0.1", "description": "fs-extra contains methods that aren't included in the vanilla Node.js fs package. Such as recursive mkdir, copy, and remove.", "keywords": ["fs", "file", "file system", "copy", "directory", "extra", "mkdirp", "mkdir", "mkdirs", "recursive", "json", "read", "write", "extra", "delete", "remove", "touch", "create", "text", "output", "move", "promise"], "date": "2020-06-04T00:17:45.120Z", "author": {"name": "JP Richardson", "email": "jprichardson@gmail.com", "username": "jprichardson"}, "publisher": {"username": "ryanzim", "email": "opensrc@ryanzim.com"}, "maintainers": [{"username": "jprichardson", "email": "jprichardson@gmail.com"}, {"username": "manidlou", "email": "manidlou@gmail.com"}, {"username": "ryanzim", "email": "opensrc@ryanzim.com"}], "repository": {"type": "git", "url": "git+https://github.com/jprichardson/node-fs-extra.git"}, "links": {"npm": "https://www.npmjs.com/package/fs-extra", "homepage": "https://github.com/jprichardson/node-fs-extra", "repository": "https://github.com/jprichardson/node-fs-extra", "bugs": "https://github.com/jprichardson/node-fs-extra/issues"}, "license": "MIT", "dependencies": {"at-least-node": "^1.0.0", "graceful-fs": "^4.2.0", "jsonfile": "^6.0.1", "universalify": "^1.0.0"}, "devDependencies": {"coveralls": "^3.0.0", "klaw": "^2.1.1", "klaw-sync": "^3.0.2", "minimist": "^1.1.1", "mocha": "^5.0.5", "nyc": "^15.0.0", "proxyquire": "^2.0.1", "read-dir-files": "^0.1.1", "standard": "^14.1.0"}, "releases": [{"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 0}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2018-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "Node.js: fs-extra\n=================\n\n`fs-extra` adds file system methods that aren't included in the native `fs` module and adds promise support to the `fs` methods. It also uses [`graceful-fs`](https://github.com/isaacs/node-graceful-fs) to prevent `EMFILE` errors. It should be a drop in replacement for `fs`.\n\n[![npm Package](https://img.shields.io/npm/v/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![License](https://img.shields.io/npm/l/express.svg)](https://github.com/jprichardson/node-fs-extra/blob/master/LICENSE)\n[![build status](https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg)](http://travis-ci.org/jprichardson/node-fs-extra)\n[![windows Build status](https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build)](https://ci.appveyor.com/project/jprichardson/node-fs-extra/branch/master)\n[![downloads per month](http://img.shields.io/npm/dm/fs-extra.svg)](https://www.npmjs.org/package/fs-extra)\n[![Coverage Status](https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg)](https://coveralls.io/github/jprichardson/node-fs-extra)\n[![JavaScript Style Guide](https://img.shields.io/badge/code_style-standard-brightgreen.svg)](https://standardjs.com)\n\nWhy?\n----\n\nI got tired of including `mkdirp`, `rimraf`, and `ncp` in most of my projects.\n\n\n\n\nInstallation\n------------\n\n    npm install fs-extra\n\n\n\nUsage\n-----\n\n`fs-extra` is a drop in replacement for native `fs`. All methods in `fs` are attached to `fs-extra`. All `fs` methods return promises if the callback isn't passed.\n\nYou don't ever need to include the original `fs` module again:\n\n```js\nconst fs = require('fs') // this is no longer necessary\n```\n\nyou can now do this:\n\n```js\nconst fs = require('fs-extra')\n```\n\nor if you prefer to make it clear that you're using `fs-extra` and not `fs`, you may want\nto name your `fs` variable `fse` like so:\n\n```js\nconst fse = require('fs-extra')\n```\n\nyou can also keep both, but it's redundant:\n\n```js\nconst fs = require('fs')\nconst fse = require('fs-extra')\n```\n\nSync vs Async vs Async/Await\n-------------\nMost methods are async by default. All async methods will return a promise if the callback isn't passed.\n\nSync methods on the other hand will throw if an error occurs.\n\nAlso Async/Await will throw an error if one occurs.\n\nExample:\n\n```js\nconst fs = require('fs-extra')\n\n// Async with promises:\nfs.copy('/tmp/myfile', '/tmp/mynewfile')\n  .then(() => console.log('success!'))\n  .catch(err => console.error(err))\n\n// Async with callbacks:\nfs.copy('/tmp/myfile', '/tmp/mynewfile', err => {\n  if (err) return console.error(err)\n  console.log('success!')\n})\n\n// Sync:\ntry {\n  fs.copySync('/tmp/myfile', '/tmp/mynewfile')\n  console.log('success!')\n} catch (err) {\n  console.error(err)\n}\n\n// Async/Await:\nasync function copyFiles () {\n  try {\n    await fs.copy('/tmp/myfile', '/tmp/mynewfile')\n    console.log('success!')\n  } catch (err) {\n    console.error(err)\n  }\n}\n\ncopyFiles()\n```\n\n\nMethods\n-------\n\n### Async\n\n- [copy](docs/copy.md)\n- [emptyDir](docs/emptyDir.md)\n- [ensureFile](docs/ensureFile.md)\n- [ensureDir](docs/ensureDir.md)\n- [ensureLink](docs/ensureLink.md)\n- [ensureSymlink](docs/ensureSymlink.md)\n- [mkdirp](docs/ensureDir.md)\n- [mkdirs](docs/ensureDir.md)\n- [move](docs/move.md)\n- [outputFile](docs/outputFile.md)\n- [outputJson](docs/outputJson.md)\n- [pathExists](docs/pathExists.md)\n- [readJson](docs/readJson.md)\n- [remove](docs/remove.md)\n- [writeJson](docs/writeJson.md)\n\n### Sync\n\n- [copySync](docs/copy-sync.md)\n- [emptyDirSync](docs/emptyDir-sync.md)\n- [ensureFileSync](docs/ensureFile-sync.md)\n- [ensureDirSync](docs/ensureDir-sync.md)\n- [ensureLinkSync](docs/ensureLink-sync.md)\n- [ensureSymlinkSync](docs/ensureSymlink-sync.md)\n- [mkdirpSync](docs/ensureDir-sync.md)\n- [mkdirsSync](docs/ensureDir-sync.md)\n- [moveSync](docs/move-sync.md)\n- [outputFileSync](docs/outputFile-sync.md)\n- [outputJsonSync](docs/outputJson-sync.md)\n- [pathExistsSync](docs/pathExists-sync.md)\n- [readJsonSync](docs/readJson-sync.md)\n- [removeSync](docs/remove-sync.md)\n- [writeJsonSync](docs/writeJson-sync.md)\n\n\n**NOTE:** You can still use the native Node.js methods. They are promisified and copied over to `fs-extra`. See [notes on `fs.read()`, `fs.write()`, & `fs.writev()`](docs/fs-read-write-writev.md)\n\n### What happened to `walk()` and `walkSync()`?\n\nThey were removed from `fs-extra` in v2.0.0. If you need the functionality, `walk` and `walkSync` are available as separate packages, [`klaw`](https://github.com/jprichardson/node-klaw) and [`klaw-sync`](https://github.com/manidlou/node-klaw-sync).\n\n\nThird Party\n-----------\n\n\n### TypeScript\n\nIf you like TypeScript, you can use `fs-extra` with it: https://github.com/DefinitelyTyped/DefinitelyTyped/tree/master/types/fs-extra\n\n\n### File / Directory Watching\n\nIf you want to watch for changes to files or directories, then you should use [chokidar](https://github.com/paulmillr/chokidar).\n\n### Obtain Filesystem (Devices, Partitions) Information\n\n[fs-filesystem](https://github.com/arthurintelligence/node-fs-filesystem) allows you to read the state of the filesystem of the host on which it is run. It returns information about both the devices and the partitions (volumes) of the system.\n\n### Misc.\n\n- [fs-extra-debug](https://github.com/jdxcode/fs-extra-debug) - Send your fs-extra calls to [debug](https://npmjs.org/package/debug).\n- [mfs](https://github.com/cadorn/mfs) - Monitor your fs-extra calls.\n\n\n\nHacking on fs-extra\n-------------------\n\nWanna hack on `fs-extra`? Great! Your help is needed! [fs-extra is one of the most depended upon Node.js packages](http://nodei.co/npm/fs-extra.png?downloads=true&downloadRank=true&stars=true). This project\nuses [JavaScript Standard Style](https://github.com/feross/standard) - if the name or style choices bother you,\nyou're gonna have to get over it :) If `standard` is good enough for `npm`, it's good enough for `fs-extra`.\n\n[![js-standard-style](https://cdn.rawgit.com/feross/standard/master/badge.svg)](https://github.com/feross/standard)\n\nWhat's needed?\n- First, take a look at existing issues. Those are probably going to be where the priority lies.\n- More tests for edge cases. Specifically on different platforms. There can never be enough tests.\n- Improve test coverage. See coveralls output for more info.\n\nNote: If you make any big changes, **you should definitely file an issue for discussion first.**\n\n### Running the Test Suite\n\nfs-extra contains hundreds of tests.\n\n- `npm run lint`: runs the linter ([standard](http://standardjs.com/))\n- `npm run unit`: runs the unit tests\n- `npm test`: runs both the linter and the tests\n\n\n### Windows\n\nIf you run the tests on the Windows and receive a lot of symbolic link `EPERM` permission errors, it's\nbecause on Windows you need elevated privilege to create symbolic links. You can add this to your Windows's\naccount by following the instructions here: http://superuser.com/questions/104845/permission-to-make-symbolic-links-in-windows-7\nHowever, I didn't have much luck doing this.\n\nSince I develop on Mac OS X, I use VMWare Fusion for Windows testing. I create a shared folder that I map to a drive on Windows.\nI open the `Node.js command prompt` and run as `Administrator`. I then map the network drive running the following command:\n\n    net use z: \"\\\\vmware-host\\Shared Folders\"\n\nI can then navigate to my `fs-extra` directory and run the tests.\n\n\nNaming\n------\n\nI put a lot of thought into the naming of these functions. Inspired by @coolaj86's request. So he deserves much of the credit for raising the issue. See discussion(s) here:\n\n* https://github.com/jprichardson/node-fs-extra/issues/2\n* https://github.com/flatiron/utile/issues/11\n* https://github.com/ryanmcgrath/wrench-js/issues/29\n* https://github.com/substack/node-mkdirp/issues/17\n\nFirst, I believe that in as many cases as possible, the [Node.js naming schemes](http://nodejs.org/api/fs.html) should be chosen. However, there are problems with the Node.js own naming schemes.\n\nFor example, `fs.readFile()` and `fs.readdir()`: the **F** is capitalized in *File* and the **d** is not capitalized in *dir*. Perhaps a bit pedantic, but they should still be consistent. Also, Node.js has chosen a lot of POSIX naming schemes, which I believe is great. See: `fs.mkdir()`, `fs.rmdir()`, `fs.chown()`, etc.\n\nWe have a dilemma though. How do you consistently name methods that perform the following POSIX commands: `cp`, `cp -r`, `mkdir -p`, and `rm -rf`?\n\nMy perspective: when in doubt, err on the side of simplicity. A directory is just a hierarchical grouping of directories and files. Consider that for a moment. So when you want to copy it or remove it, in most cases you'll want to copy or remove all of its contents. When you want to create a directory, if the directory that it's suppose to be contained in does not exist, then in most cases you'll want to create that too.\n\nSo, if you want to remove a file or a directory regardless of whether it has contents, just call `fs.remove(path)`. If you want to copy a file or a directory whether it has contents, just call `fs.copy(source, destination)`. If you want to create a directory regardless of whether its parent directories exist, just call `fs.mkdirs(path)` or `fs.mkdirp(path)`.\n\n\nCredit\n------\n\n`fs-extra` wouldn't be possible without using the modules from the following authors:\n\n- [Isaac Shlueter](https://github.com/isaacs)\n- [Charlie McConnel](https://github.com/avianflu)\n- [James Halliday](https://github.com/substack)\n- [Andrew Kelley](https://github.com/andrewrk)\n\n\n\n\nLicense\n-------\n\nLicensed under MIT\n\nCopyright (c) 2011-2017 [JP Richardson](https://github.com/jprichardson)\n\n[1]: http://nodejs.org/docs/latest/api/fs.html\n\n\n[jsonfile]: https://github.com/jprichardson/node-jsonfile"}, "npm": {"downloads": [{"from": "2020-06-03T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 5211136}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26945194}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 115830339}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 332010771}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 586930684}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 1045809171}], "dependentsCount": 28729, "starsCount": 425}, "github": {"starsCount": 6880, "forksCount": 610, "subscribersCount": 86, "issues": {"count": 802, "openCount": 21, "distribution": {"3600": 108, "10800": 60, "32400": 76, "97200": 99, "291600": 81, "874800": 55, "2624400": 52, "7873200": 91, "23619600": 92, "70858800": 72, "212576400": 16}, "isDisabled": false}, "contributors": [{"username": "jprichardson", "commitsCount": 597}, {"username": "RyanZim", "commitsCount": 111}, {"username": "JPeer264", "commitsCount": 48}, {"username": "manidlou", "commitsCount": 48}, {"username": "agnivade", "commitsCount": 4}, {"username": "srirangan", "commitsCount": 4}, {"username": "bartland", "commitsCount": 3}, {"username": "binki", "commitsCount": 3}, {"username": "mbargiel", "commitsCount": 3}, {"username": "overlookmotel", "commitsCount": 3}, {"username": "Ackar", "commitsCount": 2}, {"username": "abetomo", "commitsCount": 2}, {"username": "hhamilto", "commitsCount": 2}, {"username": "mikermcneil", "commitsCount": 2}, {"username": "nacd", "commitsCount": 2}, {"username": "newmanw", "commitsCount": 2}, {"username": "reggi", "commitsCount": 2}, {"username": "rjz", "commitsCount": 2}, {"username": "ulikoehler", "commitsCount": 2}, {"username": "yibuyisheng", "commitsCount": 2}, {"username": "AustinLeeGordon", "commitsCount": 1}, {"username": "Cellule", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "GeoffreyEmery", "commitsCount": 1}, {"username": "Lambdac0re", "commitsCount": 1}, {"username": "PatrickJS", "commitsCount": 1}, {"username": "PeterDaveHello", "commitsCount": 1}, {"username": "alewitt", "commitsCount": 1}, {"username": "arcanis", "commitsCount": 1}, {"username": "bajtos", "commitsCount": 1}, {"username": "bennyn", "commitsCount": 1}, {"username": "bitdeli-chef", "commitsCount": 1}, {"username": "charlierudolph", "commitsCount": 1}, {"username": "chinesedfan", "commitsCount": 1}, {"username": "coderaiser", "commitsCount": 1}, {"username": "daysv", "commitsCount": 1}, {"username": "distracteddev", "commitsCount": 1}, {"username": "djcsdy", "commitsCount": 1}, {"username": "dr-dimitru", "commitsCount": 1}, {"username": "federicobozzini", "commitsCount": 1}, {"username": "futagoza", "commitsCount": 1}, {"username": "gaearon", "commitsCount": 1}, {"username": "gkalpak", "commitsCount": 1}, {"username": "graingert", "commitsCount": 1}, {"username": "hail2u", "commitsCount": 1}, {"username": "ioncreature", "commitsCount": 1}, {"username": "jacobq", "commitsCount": 1}, {"username": "jdalton", "commitsCount": 1}, {"username": "jdxcode", "commitsCount": 1}, {"username": "jimhigson", "commitsCount": 1}, {"username": "kolgotko", "commitsCount": 1}, {"username": "marcjansen", "commitsCount": 1}, {"username": "mtiller", "commitsCount": 1}, {"username": "nicks", "commitsCount": 1}, {"username": "nico29", "commitsCount": 1}, {"username": "opudalo", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "pgonzal", "commitsCount": 1}, {"username": "philippefutureboy", "commitsCount": 1}, {"username": "pra85", "commitsCount": 1}, {"username": "ramhejazi", "commitsCount": 1}, {"username": "raybellis", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "robertjacobson", "commitsCount": 1}, {"username": "ryanmurakami", "commitsCount": 1}, {"username": "stephenmathieson", "commitsCount": 1}, {"username": "stevemoser", "commitsCount": 1}, {"username": "tvald", "commitsCount": 1}, {"username": "weexpectedTHIS", "commitsCount": 1}, {"username": "wontem", "commitsCount": 1}], "commits": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 2}, {"from": "2020-05-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 6}, {"from": "2020-03-06T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 10}, {"from": "2019-12-07T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 26}, {"from": "2019-06-05T00:00:00.000Z", "to": "2020-06-04T00:00:00.000Z", "count": 31}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "continuous-integration/appveyor/branch", "state": "success"}]}, "source": {"files": {"readmeSize": 9790, "testsSize": 280974, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/fs-extra.svg", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://img.shields.io/npm/l/express.svg", "shields": "https://img.shields.io/npm/l/express.svg", "content": "https://img.shields.io/npm/l/express.json"}, "info": {"service": "npm", "type": "license", "modifiers": {"type": "l"}}}, {"urls": {"original": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "service": "https://api.travis-ci.org/jprichardson/node-fs-extra.svg?branch=master", "shields": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/travis/jprichardson/node-fs-extra/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg?label=windows%20build", "service": "https://ci.appveyor.com/api/projects/status/jprichardson/node-fs-extra/branch/master", "shields": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/appveyor/ci/jprichardson/node-fs-extra/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://img.shields.io/npm/dm/fs-extra.svg", "shields": "https://img.shields.io/npm/dm/fs-extra.svg", "content": "https://img.shields.io/npm/dm/fs-extra.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "service": "https://coveralls.io/repos/github/jprichardson/node-fs-extra/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.svg", "content": "https://img.shields.io/coveralls/github/jprichardson/node-fs-extra/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "http://nodei.co/npm/fs-extra.png?downloadRank=true&downloads=true&stars=true", "shields": "https://img.shields.io/npm/v/fs-extra.svg", "content": "https://img.shields.io/npm/v/fs-extra.json"}, "info": {"service": "npm", "type": "version"}}], "linters": ["standard"], "coverage": 0.83}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9744999999999999, "health": 1, "branding": 0.6}, "popularity": {"communityInterest": 8071, "downloadsCount": 110670257, "downloadsAcceleration": 347819.0278158296, "dependentsCount": 28729}, "maintenance": {"releasesFrequency": 0.39760273972602744, "commitsFrequency": 0.8779794520547946, "openIssues": 1, "issuesDistribution": 0.24669582283440705}}, "score": {"final": 0.9159552177531324, "detail": {"quality": 0.9961083850582926, "popularity": 0.8999958380639567, "maintenance": 0.8632118826093139}}}}, {"vue": {"analyzedAt": "2020-06-30T16:20:48.256Z", "collected": {"metadata": {"name": "vue", "scope": "unscoped", "version": "2.6.11", "description": "Reactive, component-oriented view layer for modern web interfaces.", "keywords": ["vue"], "date": "2019-12-13T19:58:51.873Z", "author": {"name": "Evan You"}, "publisher": {"username": "yyx990803", "email": "yyx990803@gmail.com"}, "maintainers": [{"username": "yyx990803", "email": "yyx990803@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/vuejs/vue.git"}, "links": {"npm": "https://www.npmjs.com/package/vue", "homepage": "https://github.com/vuejs/vue#readme", "repository": "https://github.com/vuejs/vue", "bugs": "https://github.com/vuejs/vue/issues"}, "license": "MIT", "devDependencies": {"@babel/core": "^7.0.0", "@babel/plugin-proposal-class-properties": "^7.1.0", "@babel/plugin-syntax-dynamic-import": "^7.0.0", "@babel/plugin-syntax-jsx": "^7.0.0", "@babel/plugin-transform-flow-strip-types": "^7.0.0", "@babel/preset-env": "^7.0.0", "@babel/register": "^7.0.0", "@types/node": "^12.12.0", "@types/webpack": "^4.4.22", "acorn": "^5.2.1", "babel-eslint": "^10.0.1", "babel-helper-vue-jsx-merge-props": "^2.0.3", "babel-loader": "^8.0.4", "babel-plugin-istanbul": "^5.1.0", "babel-plugin-transform-vue-jsx": "^4.0.1", "babel-preset-flow-vue": "^1.0.0", "buble": "^0.19.3", "chalk": "^2.3.0", "chromedriver": "^2.45.0", "codecov": "^3.0.0", "commitizen": "^2.9.6", "conventional-changelog": "^1.1.3", "cross-spawn": "^6.0.5", "cz-conventional-changelog": "^2.0.0", "de-indent": "^1.0.2", "es6-promise": "^4.1.0", "escodegen": "^1.8.1", "eslint": "^5.7.0", "eslint-plugin-flowtype": "^2.34.0", "eslint-plugin-jasmine": "^2.8.4", "file-loader": "^3.0.1", "flow-bin": "^0.61.0", "hash-sum": "^1.0.2", "he": "^1.1.1", "http-server": "^0.11.1", "jasmine": "^2.99.0", "jasmine-core": "^2.99.0", "karma": "^3.1.1", "karma-chrome-launcher": "^2.1.1", "karma-coverage": "^1.1.1", "karma-firefox-launcher": "^1.0.1", "karma-jasmine": "^1.1.0", "karma-mocha-reporter": "^2.2.3", "karma-phantomjs-launcher": "^1.0.4", "karma-safari-launcher": "^1.0.0", "karma-sauce-launcher": "^2.0.2", "karma-sourcemap-loader": "^0.3.7", "karma-webpack": "^4.0.0-rc.2", "lint-staged": "^8.0.0", "lodash": "^4.17.4", "lodash.template": "^4.4.0", "lodash.uniq": "^4.5.0", "lru-cache": "^5.1.1", "nightwatch": "^0.9.16", "nightwatch-helpers": "^1.2.0", "phantomjs-prebuilt": "^2.1.14", "puppeteer": "^1.11.0", "resolve": "^1.3.3", "rollup": "^1.0.0", "rollup-plugin-alias": "^1.3.1", "rollup-plugin-buble": "^0.19.6", "rollup-plugin-commonjs": "^9.2.0", "rollup-plugin-flow-no-whitespace": "^1.0.0", "rollup-plugin-node-resolve": "^4.0.0", "rollup-plugin-replace": "^2.0.0", "selenium-server": "^2.53.1", "serialize-javascript": "^2.1.2", "shelljs": "^0.8.1", "terser": "^3.10.2", "typescript": "^3.6.4", "webpack": "~4.28.4", "weex-js-runtime": "^0.23.6", "weex-styler": "^0.3.0", "yorkie": "^2.0.0"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 2}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 19}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 29}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 31}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 52}], "hasTestScript": true, "hasSelectiveFiles": true}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 291996}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1619935}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6577842}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 20051455}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 38203459}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 67617196}], "dependentsCount": 26081, "starsCount": 239}, "github": {"homepage": "http://vuejs.org", "starsCount": 166963, "forksCount": 25366, "subscribersCount": 6189, "issues": {"count": 10870, "openCount": 520, "distribution": {"3600": 4264, "10800": 1272, "32400": 1445, "97200": 1116, "291600": 695, "874800": 570, "2624400": 392, "7873200": 318, "23619600": 374, "70858800": 355, "212576400": 69}, "isDisabled": false}, "contributors": [{"username": "yyx990803", "commitsCount": 2292}, {"username": "vue-bot", "commitsCount": 70}, {"username": "Hanks10100", "commitsCount": 47}, {"username": "defcc", "commitsCount": 37}, {"username": "kazupon", "commitsCount": 32}, {"username": "posva", "commitsCount": 29}, {"username": "HerringtonDarkholme", "commitsCount": 25}, {"username": "ktsn", "commitsCount": 25}, {"username": "javoski", "commitsCount": 23}, {"username": "Kingwl", "commitsCount": 15}, {"username": "gebilaoxiong", "commitsCount": 15}, {"username": "jkzing", "commitsCount": 15}, {"username": "Jinjiang", "commitsCount": 14}, {"username": "S-YOU", "commitsCount": 11}, {"username": "blake-newman", "commitsCount": 11}, {"username": "chrisvfritz", "commitsCount": 11}, {"username": "clarkdo", "commitsCount": 11}, {"username": "phanan", "commitsCount": 11}, {"username": "Justineo", "commitsCount": 10}, {"username": "HcySunYang", "commitsCount": 8}, {"username": "kaorun343", "commitsCount": 8}, {"username": "sodatea", "commitsCount": 8}, {"username": "KaelWD", "commitsCount": 7}, {"username": "dsonet", "commitsCount": 5}, {"username": "fnlctrl", "commitsCount": 4}, {"username": "imyzf", "commitsCount": 4}, {"username": "nickmessing", "commitsCount": 4}, {"username": "shasharoman", "commitsCount": 4}, {"username": "ulivz", "commitsCount": 4}, {"username": "znck", "commitsCount": 4}, {"username": "KingMario", "commitsCount": 3}, {"username": "bluemsn", "commitsCount": 3}, {"username": "felixbuenemann", "commitsCount": 3}, {"username": "liximomo", "commitsCount": 3}, {"username": "lzxb", "commitsCount": 3}, {"username": "mingmingwon", "commitsCount": 3}, {"username": "pkaminski", "commitsCount": 3}, {"username": "privatenumber", "commitsCount": 3}, {"username": "sqal", "commitsCount": 3}, {"username": "Alex-Sokolov", "commitsCount": 2}, {"username": "Atinux", "commitsCount": 2}, {"username": "DaKoala", "commitsCount": 2}, {"username": "Gcaufy", "commitsCount": 2}, {"username": "HusamIbrahim", "commitsCount": 2}, {"username": "Itisfilipe", "commitsCount": 2}, {"username": "JounQin", "commitsCount": 2}, {"username": "QingWei-Li", "commitsCount": 2}, {"username": "Shyam-Chen", "commitsCount": 2}, {"username": "asheb", "commitsCount": 2}, {"username": "bartlomieju", "commitsCount": 2}, {"username": "chriscasola", "commitsCount": 2}, {"username": "dejour", "commitsCount": 2}, {"username": "eddyerburgh", "commitsCount": 2}, {"username": "fenduru", "commitsCount": 2}, {"username": "g-plane", "commitsCount": 2}, {"username": "gzzhanghao", "commitsCount": 2}, {"username": "hikerpig", "commitsCount": 2}, {"username": "jingsam", "commitsCount": 2}, {"username": "lyhper", "commitsCount": 2}, {"username": "maciej-ka", "commitsCount": 2}, {"username": "neelance", "commitsCount": 2}, {"username": "pi0", "commitsCount": 2}, {"username": "superwf", "commitsCount": 2}, {"username": "tejitak", "commitsCount": 2}, {"username": "william-pan", "commitsCount": 2}, {"username": "xdamman", "commitsCount": 2}, {"username": "yantene", "commitsCount": 2}, {"username": "zephraph", "commitsCount": 2}, {"username": "7006", "commitsCount": 1}, {"username": "DanielRuf", "commitsCount": 1}, {"username": "Magiccwl", "commitsCount": 1}, {"username": "Naartti", "commitsCount": 1}, {"username": "NataliaTepluhina", "commitsCount": 1}, {"username": "VitorLuizC", "commitsCount": 1}, {"username": "Xenonym", "commitsCount": 1}, {"username": "ahaoboy", "commitsCount": 1}, {"username": "ahus1", "commitsCount": 1}, {"username": "alanmatw", "commitsCount": 1}, {"username": "bakugod", "commitsCount": 1}, {"username": "decadef20", "commitsCount": 1}, {"username": "dennishzg", "commitsCount": 1}, {"username": "eltociear", "commitsCount": 1}, {"username": "evillt", "commitsCount": 1}, {"username": "flyyang", "commitsCount": 1}, {"username": "git-nkliyc", "commitsCount": 1}, {"username": "hareku", "commitsCount": 1}, {"username": "hyandell", "commitsCount": 1}, {"username": "lessfish", "commitsCount": 1}, {"username": "mateusvelleda", "commitsCount": 1}, {"username": "mcmillenb", "commitsCount": 1}, {"username": "msidolphin", "commitsCount": 1}, {"username": "nguyenyou", "commitsCount": 1}, {"username": "pikax", "commitsCount": 1}, {"username": "rodrigograca31", "commitsCount": 1}, {"username": "sairoutine", "commitsCount": 1}, {"username": "timgates42", "commitsCount": 1}, {"username": "tlebel", "commitsCount": 1}, {"username": "yuler", "commitsCount": 1}, {"username": "zrh122", "commitsCount": 1}], "commits": [{"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 0}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 4}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 9}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 28}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 78}], "statuses": [{"context": "ci/circleci: trigger-regression-test", "state": "success"}, {"context": "ci/circleci: test-ssr-weex", "state": "success"}, {"context": "ci/circleci: test-e2e", "state": "success"}, {"context": "ci/circleci: test-cover", "state": "success"}, {"context": "ci/circleci: lint-flow-types", "state": "success"}, {"context": "ci/circleci: install", "state": "success"}]}, "source": {"files": {"readmeSize": 0, "testsSize": 970184}, "linters": ["editorconfig", "eslint"], "coverage": 0.97}}, "evaluation": {"quality": {"carefulness": 0.54, "tests": 0.9954999999999999, "health": 1, "branding": 0}, "popularity": {"communityInterest": 198856, "downloadsCount": 6683818.333333333, "downloadsAcceleration": 15249.413831811267, "dependentsCount": 26081}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8891095890410959, "openIssues": 1, "issuesDistribution": 0.7812735687553016}}, "score": {"final": 0.8888580449210395, "detail": {"quality": 0.8281500589215438, "popularity": 0.8303806513691457, "maintenance": 0.99937085504393}}}}, {"babel-jest": {"analyzedAt": "2020-06-23T15:59:02.336Z", "collected": {"metadata": {"name": "babel-jest", "scope": "unscoped", "version": "26.1.0", "description": "Jest plugin to use babel for transformation.", "date": "2020-06-23T15:15:32.170Z", "publisher": {"username": "simenb", "email": "sbekkhus91@gmail.com"}, "maintainers": [{"username": "aaronabramov", "email": "aaron@abramov.io"}, {"username": "cpojer", "email": "christoph.pojer@gmail.com"}, {"username": "davidzilburg", "email": "davidzilburg@gmail.com"}, {"username": "fb", "email": "opensource+npm@fb.com"}, {"username": "rubennorte", "email": "rubennorte@gmail.com"}, {"username": "scotthovestadt", "email": "scott.hovestadt@gmail.com"}, {"username": "simenb", "email": "sbekkhus91@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/facebook/jest.git", "directory": "packages/babel-jest"}, "links": {"npm": "https://www.npmjs.com/package/babel-jest", "homepage": "https://github.com/facebook/jest#readme", "repository": "https://github.com/facebook/jest", "bugs": "https://github.com/facebook/jest/issues"}, "license": "MIT", "dependencies": {"@jest/transform": "^26.1.0", "@jest/types": "^26.1.0", "@types/babel__core": "^7.1.7", "babel-plugin-istanbul": "^6.0.0", "babel-preset-jest": "^26.1.0", "chalk": "^4.0.0", "graceful-fs": "^4.2.4", "slash": "^3.0.0"}, "devDependencies": {"@babel/core": "^7.1.0", "@types/graceful-fs": "^4.1.3"}, "peerDependencies": {"@babel/core": "^7.0.0"}, "releases": [{"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 19}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 21}, {"from": "2018-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 50}], "readme": "# babel-jest\n\n[Babel](https://github.com/babel/babel) [jest](https://github.com/facebook/jest) plugin\n\n## Usage\n\nIf you are already using `jest-cli`, add `babel-jest` and it will automatically compile JavaScript code using Babel.\n\n```bash\nyarn add --dev babel-jest @babel/core\n```\n\nIf you would like to write your own preprocessor, uninstall and delete babel-jest and set the [config.transform](https://jestjs.io/docs/configuration#transform-object-string-string) option to your preprocessor.\n\n## Setup\n\n_Note: this step is only required if you are using `babel-jest` with additional code preprocessors._\n\nTo explicitly define `babel-jest` as a transformer for your JavaScript code, map _.js_ files to the `babel-jest` module. Typescript files are also supported.\n\n```json\n\"transform\": {\n  \"^.+\\\\.[t|j]sx?$\": \"babel-jest\"\n},\n```"}, "npm": {"downloads": [{"from": "2020-06-22T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 0}, {"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7027016}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 34300041}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 105599378}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 187562139}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 328829369}], "dependentsCount": 4216, "starsCount": 5}, "github": {"homepage": "https://jestjs.io", "starsCount": 31478, "forksCount": 4470, "subscribersCount": 527, "issues": {"count": 10149, "openCount": 1108, "distribution": {"3600": 2116, "10800": 933, "32400": 936, "97200": 1307, "291600": 936, "874800": 814, "2624400": 736, "7873200": 739, "23619600": 664, "70858800": 811, "212576400": 157}, "isDisabled": false}, "contributors": [{"username": "cpojer", "commitsCount": 655}, {"username": "SimenB", "commitsCount": 629}, {"username": "aaronabramov", "commitsCount": 213}, {"username": "thymikee", "commitsCount": 171}, {"username": "pedrottimark", "commitsCount": 161}, {"username": "mjesun", "commitsCount": 106}, {"username": "rogeliog", "commitsCount": 56}, {"username": "jeysal", "commitsCount": 55}, {"username": "rubennorte", "commitsCount": 55}, {"username": "rickhanlonii", "commitsCount": 53}, {"username": "wtgtybhertgeghgtwtg", "commitsCount": 44}, {"username": "mattphillips", "commitsCount": 39}, {"username": "Connormiha", "commitsCount": 38}, {"username": "kentaromiura", "commitsCount": 38}, {"username": "DmitrySoshnikov", "commitsCount": 33}, {"username": "orta", "commitsCount": 33}, {"username": "hramos", "commitsCount": 32}, {"username": "scotthovestadt", "commitsCount": 32}, {"username": "ericnakagawa", "commitsCount": 30}, {"username": "gaearon", "commitsCount": 23}, {"username": "amasad", "commitsCount": 22}, {"username": "ranyitz", "commitsCount": 21}, {"username": "jeanlauliac", "commitsCount": 19}, {"username": "jeffmo", "commitsCount": 19}, {"username": "leebyron", "commitsCount": 19}, {"username": "PhilVargas", "commitsCount": 18}, {"username": "vjeux", "commitsCount": 18}, {"username": "arcanis", "commitsCount": 16}, {"username": "zpao", "commitsCount": 16}, {"username": "natealcedo", "commitsCount": 15}, {"username": "Daniel15", "commitsCount": 14}, {"username": "captbaritone", "commitsCount": 14}, {"username": "sophiebits", "commitsCount": 13}, {"username": "xfumihiro", "commitsCount": 13}, {"username": "ahnpnl", "commitsCount": 12}, {"username": "seanpoulter", "commitsCount": 12}, {"username": "hankhsiao", "commitsCount": 11}, {"username": "palmerj3", "commitsCount": 11}, {"username": "zouxuoz", "commitsCount": 11}, {"username": "H1Gdev", "commitsCount": 10}, {"username": "bookman25", "commitsCount": 10}, {"username": "clentfort", "commitsCount": 10}, {"username": "endiliey", "commitsCount": 10}, {"username": "ide", "commitsCount": 10}, {"username": "BYK", "commitsCount": 9}, {"username": "G-Rath", "commitsCount": 9}, {"username": "maximderbin", "commitsCount": 9}, {"username": "yungsters", "commitsCount": 9}, {"username": "ForbesLindesay", "commitsCount": 8}, {"username": "anilreddykatta", "commitsCount": 8}, {"username": "azz", "commitsCount": 8}, {"username": "doniyor2109", "commitsCount": 8}, {"username": "dubzzz", "commitsCount": 8}, {"username": "emmenko", "commitsCount": 8}, {"username": "excitement-engineer", "commitsCount": 8}, {"username": "jamesgeorge007", "commitsCount": 8}, {"username": "stephnr", "commitsCount": 8}, {"username": "wyze", "commitsCount": 8}, {"username": "jwbay", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 7}, {"username": "keyz", "commitsCount": 7}, {"username": "rafeca", "commitsCount": 7}, {"username": "Haroenv", "commitsCount": 6}, {"username": "JoshRosenstein", "commitsCount": 6}, {"username": "abdulhannanali", "commitsCount": 6}, {"username": "blainekasten", "commitsCount": 6}, {"username": "cpenarrieta", "commitsCount": 6}, {"username": "harshadsabne", "commitsCount": 6}, {"username": "jquense", "commitsCount": 6}, {"username": "kl3ryk", "commitsCount": 6}, {"username": "lencioni", "commitsCount": 6}, {"username": "niieani", "commitsCount": 6}, {"username": "robinpokorny", "commitsCount": 6}, {"username": "skovhus", "commitsCount": 6}, {"username": "valerybugakov", "commitsCount": 6}, {"username": "Andarist", "commitsCount": 5}, {"username": "ColCh", "commitsCount": 5}, {"username": "Mark1626", "commitsCount": 5}, {"username": "TheSavior", "commitsCount": 5}, {"username": "UselessPickles", "commitsCount": 5}, {"username": "andreipfeiffer", "commitsCount": 5}, {"username": "dandv", "commitsCount": 5}, {"username": "danez", "commitsCount": 5}, {"username": "edvinerikson", "commitsCount": 5}, {"username": "genintho", "commitsCount": 5}, {"username": "hron", "commitsCount": 5}, {"username": "jakeboone02", "commitsCount": 5}, {"username": "jbonta", "commitsCount": 5}, {"username": "mbelsky", "commitsCount": 5}, {"username": "suchipi", "commitsCount": 5}, {"username": "trivikr", "commitsCount": 5}, {"username": "wsmd", "commitsCount": 5}, {"username": "Anenth", "commitsCount": 4}, {"username": "grosto", "commitsCount": 4}, {"username": "ikatyang", "commitsCount": 4}, {"username": "kenrick95", "commitsCount": 4}, {"username": "lamhieu-vk", "commitsCount": 4}, {"username": "lorenzorapetti", "commitsCount": 4}, {"username": "nikgraf", "commitsCount": 4}, {"username": "stipsan", "commitsCount": 4}], "commits": [{"from": "2020-06-16T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 7}, {"from": "2020-05-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 18}, {"from": "2020-03-25T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 207}, {"from": "2019-12-26T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 331}, {"from": "2019-06-24T00:00:00.000Z", "to": "2020-06-23T00:00:00.000Z", "count": 588}], "statuses": [{"context": "ci/circleci: test-jest-circus", "state": "success"}, {"context": "facebook.jest", "state": "success"}, {"context": "ci/circleci: test-node-10", "state": "success"}, {"context": "ci/circleci: test-node-12", "state": "success"}, {"context": "ci/circleci: test-node-14", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "ci/circleci: test-node-13", "state": "success"}, {"context": "ci/circleci: test-or-deploy-website", "state": "success"}]}, "source": {"files": {"readmeSize": 829, "testsSize": 3018, "hasNpmIgnore": true, "hasChangelog": true}, "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.63}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.6445000000000001, "health": 1, "branding": 0}, "popularity": {"communityInterest": 36580, "downloadsCount": 35199792.666666664, "downloadsAcceleration": 95885.45542237442, "dependentsCount": 4216}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 1, "openIssues": 1, "issuesDistribution": 0.4104137470417111}}, "score": {"final": 0.8916802706315061, "detail": {"quality": 0.8511365418500958, "popularity": 0.8481551025871021, "maintenance": 0.9699572062028331}}}}, {"nyc": {"analyzedAt": "2020-06-03T15:57:58.285Z", "collected": {"metadata": {"name": "nyc", "scope": "unscoped", "version": "15.1.0", "description": "the Istanbul command line interface", "keywords": ["coverage", "reporter", "subprocess", "testing"], "date": "2020-06-01T00:58:43.211Z", "author": {"name": "Ben Coe", "email": "ben@npmjs.com", "username": "bcoe"}, "publisher": {"username": "coreyfarrell", "email": "git@cfware.com"}, "maintainers": [{"username": "bcoe", "email": "ben@npmjs.com"}, {"username": "coreyfarrell", "email": "git@cfware.com"}, {"username": "isaacs", "email": "i@izs.me"}], "contributors": [{"name": "Isaac Schlueter"}, {"name": "Mark Wubben"}, {"name": "James Talmage"}, {"name": "Krishnan Anantheswaran"}], "repository": {"type": "git", "url": "git+ssh://git@github.com/istanbuljs/nyc.git"}, "links": {"npm": "https://www.npmjs.com/package/nyc", "homepage": "https://istanbul.js.org/", "repository": "https://github.com/istanbuljs/nyc", "bugs": "https://github.com/istanbuljs/nyc/issues"}, "license": "ISC", "dependencies": {"@istanbuljs/load-nyc-config": "^1.0.0", "@istanbuljs/schema": "^0.1.2", "caching-transform": "^4.0.0", "convert-source-map": "^1.7.0", "decamelize": "^1.2.0", "find-cache-dir": "^3.2.0", "find-up": "^4.1.0", "foreground-child": "^2.0.0", "get-package-type": "^0.1.0", "glob": "^7.1.6", "istanbul-lib-coverage": "^3.0.0", "istanbul-lib-hook": "^3.0.0", "istanbul-lib-instrument": "^4.0.0", "istanbul-lib-processinfo": "^2.0.2", "istanbul-lib-report": "^3.0.0", "istanbul-lib-source-maps": "^4.0.0", "istanbul-reports": "^3.0.2", "make-dir": "^3.0.0", "node-preload": "^0.2.1", "p-map": "^3.0.0", "process-on-spawn": "^1.0.0", "resolve-from": "^5.0.0", "rimraf": "^3.0.0", "signal-exit": "^3.0.2", "spawn-wrap": "^2.0.0", "test-exclude": "^6.0.0", "yargs": "^15.0.2"}, "devDependencies": {"any-path": "^1.3.0", "coveralls": "^3.0.9", "is-windows": "^1.0.2", "requirejs": "^2.3.6", "source-map-support": "^0.5.16", "standard": "^14.3.1", "standard-version": "^8.0.0", "tap": "^14.10.5", "which": "^2.0.2"}, "releases": [{"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 2}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 3}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 6}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 9}, {"from": "2018-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 19}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# nyc\n\n[![Build Status](https://img.shields.io/travis/istanbuljs/nyc/master.svg)](https://travis-ci.org/istanbuljs/nyc)\n[![Windows Build Status](https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build)](https://ci.appveyor.com/project/istanbuljs/nyc/branch/master)\n[![Coverage Status](https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg)](https://coveralls.io/r/istanbuljs/nyc?branch=master)\n[![NPM version](https://img.shields.io/npm/v/nyc.svg)](https://www.npmjs.com/package/nyc)\n[![Conventional Commits](https://img.shields.io/badge/Conventional%20Commits-1.0.0-yellow.svg)](https://conventionalcommits.org)\n[![community slack](https://devtoolscommunity.herokuapp.com/badge.svg)](https://devtoolscommunity.herokuapp.com)\n\n_Having problems? want to contribute? join our [community slack](https://devtoolscommunity.herokuapp.com)_.\n\nIstanbul's state of the art command line interface, with support for:\n\n* applications that spawn subprocesses.\n* source mapped coverage of Babel and TypeScript projects\n\n## Installation & Usage\n\nUse your package manager to add it as a dev dependency: `npm i -D nyc` or `yarn add -D nyc`.\nYou can use nyc to call npm scripts (assuming they don't already have nyc executed in them), like so (replace `mocha` with your test runner everywhere you see it):\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"mocha\",\n    \"coverage\": \"nyc npm run test\"\n  }\n}\n```\n\nYou can use also `npx` instead of installing nyc as a dependency, but you might get updates you are not ready for; to get around this, pin to a specific major version by specifying, e.g. `nyc@14`.\n\n```json\n{\n  \"scripts\": {\n    \"test\": \"npx nyc@latest mocha\"\n  }\n}\n```\n\nThis is a good way of testing upcoming releases of nyc, usually on the `next` tag.\n\n**Note**: If you use [`jest`](https://npm.im/jest) or [`tap`](https://www.node-tap.org/), you do not need to install `nyc`.\nThose runners already have the IstanbulJS libraries to provide coverage for you.\nFollow their documentation to enable and configure coverage reporting.\n\n## Configuring `nyc`\n\nnyc accepts a wide variety of configuration arguments, run `npx nyc --help` for thorough documentation.\n\nConfiguration arguments on the command-line should be provided prior to the program that nyc is executing.\nAs an example, the following command executes `ava`, and indicates to nyc that it should output both an `lcov` (`lcov.info` + html report) and a `text-summary` coverage report.\n\n```shell\nnyc --reporter=lcov --reporter=text-summary ava\n```\n\n### Babel projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-babel`] preset.\nYou can add your custom configuration options as shown below.\n\n### TypeScript projects\n\nPlease start with the pre-configured [`@istanbuljs/nyc-config-typescript`](https://www.npmjs.com/package/@istanbuljs/nyc-config-typescript) preset.\n\n#### Adding your overrides\n\nnyc allows you to inherit other configurations using the key `extends` in the `package.json` stanza, `.nycrc`, or YAML files.\nYou can then add the specific configuration options you want that aren't in that particular shared config, e.g.\n\n```json\n{\n  \"extends\": \"@istanbuljs/nyc-config-typescript\",\n  \"all\": true,\n  \"check-coverage\": true\n}\n```\n\n### Configuration files\n\nAny configuration options that can be set via the command line can also be specified in the `nyc` stanza of your package.json, or within a separate configuration file - a variety of flavors are available:\n\n| File name       | File Association |\n|-----------------|------------------|\n| `.nycrc`        | JSON             |\n| `.nycrc.json`   | JSON             |\n| `.nycrc.yaml`   | YAML             |\n| `.nycrc.yml`    | YAML             |\n| `nyc.config.js` | CommonJS export  |\n\n### Common Configuration Options\n\nSee `nyc --help` for all options available.\nYou can set these in any of the files listed above, or from the command line.\nThis table is a quick TLDR for the rest of this readme and there are more advanced docs available.\n\n| Option name | Description | Type | Default |\n| ----------- | ----------- | ---- | ------- |\n| `all` | Whether or not to instrument all files (not just the ones touched by your test suite) | `Boolean` | `false` |\n| `check-coverage` | Check whether coverage is within thresholds, fail if not | `Boolean` | `false` |\n| `extension` | List of extensions that nyc should attempt to handle in addition to `.js` | `Array<String>` | `['.js', '.cjs', '.mjs', '.ts', '.tsx', '.jsx']` |\n| `include` | See [selecting files for coverage] for more info | `Array<String>` | `['**']`|\n| `exclude` | See [selecting files for coverage] for more info | `Array<String>` | [list](https://github.com/istanbuljs/schema/blob/master/default-exclude.js) |\n| `reporter` | [Coverage reporters to use](https://istanbul.js.org/docs/advanced/alternative-reporters/) | `Array<String>` | `['text']` |\n| `report-dir` | Where to put the coverage report files | `String` | `./coverage` |\n| `skip-full` | Don't show files with 100% statement, branch, and function coverage | `Boolean` | `false` |\n| `temp-dir` | Directory to output raw coverage information to | `String` | `./.nyc_output` |\n\nConfiguration can also be provided by `nyc.config.js` if programmed logic is required:\n\n```js\n'use strict';\n\nconst defaultExclude = require('@istanbuljs/schema/default-exclude');\nconst isWindows = require('is-windows');\n\nlet platformExclude = [\n  isWindows() ? 'lib/posix.js' : 'lib/win32.js'\n];\n\nmodule.exports = {\n  exclude: platformExclude.concat(defaultExclude)\n};\n```\n\n### Publish and reuse your nyc configuration(s)\n\nTo publish and reuse your own `nyc` configuration, simply create an npm module that exports your JSON config (via [`index.json`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-typescript/) or a CJS [`index.js`](https://github.com/istanbuljs/istanbuljs/blob/master/packages/nyc-config-hook-run-in-this-context/)).\n\nA more advanced use case would be to combine multiple shared configs in a `nyc.config.js` file:\n\n```js\n'use strict';\n\nconst babelConfig = require('@istanbuljs/nyc-config-babel');\nconst hookRunInThisContextConfig = require('@istanbuljs/nyc-config-hook-run-in-this-context');\n\nmodule.exports = {\n  ...babelConfig,\n  ...hookRunInThisContextConfig,\n  all: true,\n  'check-coverage': true\n};\n```\n\n## Selecting files for coverage\n\nBy default, nyc only collects coverage for source files that are visited during a test.\nIt does this by watching for files that are `require()`'d during the test.\nWhen a file is `require()`'d, nyc creates and returns an instrumented version of the source, rather than the original.\nOnly source files that are visited during a test will appear in the coverage report and contribute to coverage statistics.\n\nnyc will instrument all files if the `--all` flag is set or if running `nyc instrument`.\nIn this case all files will appear in the coverage report and contribute to coverage statistics.\n\nnyc will only collect coverage for files that are located under `cwd`, and then only files with extensions listed in the `extension` array.\n\nYou can reduce the set of instrumented files by adding `include` and `exclude` filter arrays to your config.\nThese allow you to shape the set of instrumented files by specifying glob patterns that can filter files from the default instrumented set.\nThe `exclude` array may also use exclude negated glob patterns, these are specified with a `!` prefix, and can restore sub-paths of excluded paths.\n\nGlobs are matched using [minimatch](https://www.npmjs.com/package/minimatch).\n\nWe use the following process to remove files from consideration:\n\n1. Limit the set of instrumented files to those files in paths listed in the `include` array.\n2. Remove any files that are found in the `exclude` array.\n3. Restore any exclude negated files that have been excluded in step 2.\n\n### Using include and exclude arrays\n\nIf there are paths specified in the `include` array, then the set of instrumented files will be limited to eligible files found in those paths.\nIf the `include` array is left undefined all eligible files will be included, equivalent to setting `include: ['**']`.\nMultiple `include` globs can be specified on the command line, each must follow a `--include`, `-n` switch.\n\nIf there are paths specified in the `exclude` array, then the set of instrumented files will not feature eligible files found in those paths.\nYou can also specify negated paths in the `exclude` array, by prefixing them with a `!`.\nNegated paths can restore paths that have been already been excluded in the `exclude` array.\nMultiple `exclude` globs can be specified on the command line, each must follow a `--exclude`, `-x` switch.\n\nThe default `exclude` list is defined in the [@istanbuljs/schema module](https://github.com/istanbuljs/schema/blob/master/default-exclude.js).\nSpecifying your own exclude property completely replaces these defaults.\n\nFor example, the following `nyc` config will collect coverage for every file in the `src` directory regardless of whether it is `require()`'d in a test.\nIt will also exclude any files with the extension `.spec.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"src/**/*.js\"\n  ],\n  \"exclude\": [\n    \"**/*.spec.js\"\n  ]\n}\n```\n\n**Note:** Be wary of automatic OS glob expansion when specifying include/exclude globs with the CLI.\nTo prevent this, wrap each glob in single quotes.\n\n### Including files within `node_modules`\n\nWe always add `**/node_modules/**` to the exclude list, even if not specified in the config.\nYou can override this by setting `--exclude-node-modules=false`.\n\nFor example, `\"excludeNodeModules: false\"` in the following `nyc` config will prevent `node_modules` from being added to the exclude rules.\nThe set of include rules then restrict nyc to only consider instrumenting files found under the `lib/` and `node_modules/@my-org/` directories.\nThe exclude rules then prevent nyc instrumenting anything in a `test` folder and the file `node_modules/@my-org/something/unwanted.js`.\n\n```json\n{\n  \"all\": true,\n  \"include\": [\n    \"lib/**\",\n    \"node_modules/@my-org/**\"\n  ],\n  \"exclude\": [\n    \"node_modules/@my-org/something/unwanted.js\",\n    \"**/test/**\"\n  ],\n  \"excludeNodeModules\": false\n}\n```\n\n## Setting the project root directory\n\nnyc runs a lot of file system operations relative to the project root directory.\nDuring startup nyc will look for the *default* project root directory.\nThe *default* project root directory is the first directory found that contains a `package.json` file when searching from the current working directory up.\nIf nyc fails to find a directory containing a `package.json` file, it will use the current working directory as the *default* project root directory.\nYou can change the project root directory with the `--cwd` option.\n\nnyc uses the project root directory when:\n\n* looking for source files to instrument\n* creating globs for include and exclude rules during file selection\n* loading custom require hooks from the `require` array\n\nnyc may create artifact directories within the project root, with these defaults:\n\n* the report directory, `<project-root>/coverage`\n* the cache directory, `<project-root>/node_modules/.cache/nyc`\n* the temp directory, `<project-root>/.nyc_output`\n\n## Require additional modules\n\nThe `--require` flag can be provided to `nyc` to indicate that additional modules should be required in the subprocess collecting coverage:\n\n```shell\nnyc --require esm mocha\n```\n\n### Interaction with `--all` flag\n\nThe `--require` flag also operates on the main nyc process for use by `--all`.\nFor example, in situations with `nyc --all --instrument false` and [`babel-plugin-istanbul`] setup the `--all` option only works if `--require @babel/register` is passed to nyc.\nPassing it to mocha would cause the tests to be instrumented but unloaded sources would not be seen.\nThe [`@istanbuljs/nyc-config-babel`] package handles this for you!\n\n## Caching\n\n`nyc`'s default behavior is to cache instrumented files to disk to prevent instrumenting source files multiple times, and speed `nyc` execution times.\nYou can disable this behavior by running `nyc` with the `--cache false` flag.\nYou can also change the default cache directory from `./node_modules/.cache/nyc` by setting the `--cache-dir` flag.\n\n## Coverage thresholds\n\nYou can set custom coverage thresholds that will fail if `check-coverage` is set to `true` and your coverage drops below those thresholds.\nFor example, in the following `nyc` configuration, dropping below 80% branch, line, functions, or statements coverage would fail the build (you can have any combination of these):\n\n```json\n{\n  \"branches\": 80,\n  \"lines\": 80,\n  \"functions\": 80,\n  \"statements\": 80\n}\n```\n\nTo do this check on a per-file basis (as opposed to in aggregate), set the `per-file` option to `true`.\n\n### High and low watermarks\n\nSeveral of the coverage reporters supported by nyc display special information for high and low watermarks:\n\n* high-watermarks represent healthy test coverage (in many reports this is represented with green highlighting).\n* low-watermarks represent sub-optimal coverage levels (in many reports this is represented with red highlighting).\n\nYou can specify custom high and low watermarks in nyc's configuration:\n\n```json\n{\n  \"watermarks\": {\n    \"lines\": [80, 95],\n    \"functions\": [80, 95],\n    \"branches\": [80, 95],\n    \"statements\": [80, 95]\n  }\n}\n```\n\n## Parsing Hints (Ignoring Lines)\n\nThere may be some sections of your codebase that you wish to purposefully\nexclude from coverage tracking, to do so you can use the following parsing\nhints:\n\n* `/* istanbul ignore if */`: ignore the next if statement.\n* `/* istanbul ignore else */`: ignore the else portion of an if statement.\n* `/* istanbul ignore next */`: ignore the next _thing_ in the source-code (\n functions, if statements, classes, you name it).\n* `/* istanbul ignore file */`: ignore an entire source-file (this should be\n  placed at the top of the file).\n\n## Ignoring Methods\n\nYou can ignore every instance of a method simply by adding its name to the `ignore-class-method` array in your `nyc` config.\n\n```json\n{\n  \"ignore-class-method\": [\"render\"]\n}\n```\n\n## Combining reports from multiple runs\n\nIf for whatever reason you have different test runners in your project or a different series of test runs for different kinds of tests, nyc will automatically combine the coverage report for you if configured correctly with the `--no-clean` flag and the `report` command.\nOriginally inspired by @janiukjf in #1001, here's an example, where the `test:*` scripts (not shown) invoke only your test runner(s) and not nyc:\n\n```json\n{\n  \"scripts\": {\n    \"cover\": \"npm run cover:unit && npm run cover:integration && npm run cover:report\",\n    \"cover:unit\": \"nyc --silent npm run test:unit\",\n    \"cover:integration\": \"nyc --silent --no-clean npm run test:integration\",\n    \"cover:report\": \"nyc report --reporter=lcov --reporter=text\"\n  }\n}\n```\n\n### What about `nyc merge`?\n\nThe `nyc merge` command is for producing one _raw coverage output file_ that combines the results from many test runs.\nSo if you had the above setup and needed to produce a single `coverage.json` for some external tool, you could do:\n\n```json\n{\n  \"scripts\": {\n    \"cover:merge\": \"npm run cover:unit && npm run cover:integration && nyc merge .nyc_output coverage.json\"\n  }\n}\n```\n\n## Source-Map support for pre-instrumented codebases\n\nIf you opt to pre-instrument your source-code (rather than using a just-in-time transpiler like [`@babel/register`]) nyc supports both inline source-maps and `.map` files.\n\n_Important: If you are using nyc with a project that pre-instruments its code, run nyc with the configuration option `--exclude-after-remap` set to `false`.\nOtherwise nyc's reports will exclude any files that source-maps remap to folders covered under exclude rules._\n\n## [Integrating with coveralls](./docs/setup-coveralls.md)\n\n## [Integrating with codecov](./docs/setup-codecov.md)\n\n## [Producing instrumented source](./docs/instrument.md)\n\n## Integrating with TAP formatters\n\nMany testing frameworks (Mocha, Tape, Tap, etc.) can produce [TAP](https://en.wikipedia.org/wiki/Test_Anything_Protocol) output. [tap-nyc](https://github.com/MegaArman/tap-nyc) is a TAP formatter designed to look nice with nyc.\n\n## Tutorials and Advanced Documentation\n\nSee [more nyc tutorials](https://istanbul.js.org/docs/tutorials) and [advanced nyc documentation](https://istanbul.js.org/docs/advanced/).\n\nPlease feel free to [contribute documentation](https://github.com/istanbuljs/istanbuljs.github.io/tree/development/content) to help us improve.\n\n## `nyc` for enterprise\n\nAvailable as part of the Tidelift Subscription.\n\nThe maintainers of `nyc` and thousands of other packages are working with Tidelift to deliver commercial support and maintenance for the open source dependencies you use to build your applications. Save time, reduce risk, and improve code health, while paying the maintainers of the exact dependencies you use. [Learn more.](https://tidelift.com/subscription/pkg/npm-nyc?utm_source=npm-nyc&utm_medium=referral&utm_campaign=enterprise&utm_term=repo)\n\n[`@babel/register`]: https://www.npmjs.com/package/@babel/register\n[`babel-plugin-istanbul`]: https://github.com/istanbuljs/babel-plugin-istanbul\n[`@istanbuljs/nyc-config-babel`]: https://www.npmjs.com/package/@istanbuljs/nyc-config-babel\n[selecting files for coverage]: #selecting-files-for-coverage"}, "npm": {"downloads": [{"from": "2020-06-02T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 242285}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1284254}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 5492996}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 16072709}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 29311820}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 53259263}], "dependentsCount": 603, "starsCount": 106}, "github": {"homepage": "https://istanbul.js.org/", "starsCount": 4188, "forksCount": 299, "subscribersCount": 55, "issues": {"count": 1299, "openCount": 92, "distribution": {"3600": 184, "10800": 69, "32400": 67, "97200": 143, "291600": 130, "874800": 165, "2624400": 122, "7873200": 127, "23619600": 111, "70858800": 149, "212576400": 32}, "isDisabled": false}, "contributors": [{"username": "coreyfarrell", "commitsCount": 108}, {"username": "bcoe", "commitsCount": 72}, {"username": "jamestalmage", "commitsCount": 37}, {"username": "novemberborn", "commitsCount": 33}, {"username": "greenkeeperio-bot", "commitsCount": 23}, {"username": "AndrewFinlay", "commitsCount": 22}, {"username": "JaKXz", "commitsCount": 17}, {"username": "isaacs", "commitsCount": 17}, {"username": "Lalem001", "commitsCount": 11}, {"username": "XhmikosR", "commitsCount": 7}, {"username": "addaleax", "commitsCount": 7}, {"username": "kentcdodds", "commitsCount": 4}, {"username": "jasisk", "commitsCount": 3}, {"username": "lloydcotten", "commitsCount": 3}, {"username": "rmg", "commitsCount": 3}, {"username": "DanielRuf", "commitsCount": 2}, {"username": "LinusU", "commitsCount": 2}, {"username": "SimenB", "commitsCount": 2}, {"username": "calvinf", "commitsCount": 2}, {"username": "gr2m", "commitsCount": 2}, {"username": "rundef", "commitsCount": 2}, {"username": "schutm", "commitsCount": 2}, {"username": "shackpank", "commitsCount": 2}, {"username": "wbyoung", "commitsCount": 2}, {"username": "AGrzes", "commitsCount": 1}, {"username": "AmShaegar13", "commitsCount": 1}, {"username": "Krinkle", "commitsCount": 1}, {"username": "MegaArman", "commitsCount": 1}, {"username": "RyanV", "commitsCount": 1}, {"username": "SamuraiJack", "commitsCount": 1}, {"username": "ScottRudiger", "commitsCount": 1}, {"username": "Sintendo", "commitsCount": 1}, {"username": "Speedy37", "commitsCount": 1}, {"username": "TonyJDavies", "commitsCount": 1}, {"username": "alexframe", "commitsCount": 1}, {"username": "bensaufley", "commitsCount": 1}, {"username": "bgalletbgallet", "commitsCount": 1}, {"username": "boneskull", "commitsCount": 1}, {"username": "brettz9", "commitsCount": 1}, {"username": "brokentone", "commitsCount": 1}, {"username": "c-bandy", "commitsCount": 1}, {"username": "cgalvarez", "commitsCount": 1}, {"username": "chadxz", "commitsCount": 1}, {"username": "clakech", "commitsCount": 1}, {"username": "d4nyll", "commitsCount": 1}, {"username": "delaguilaluis", "commitsCount": 1}, {"username": "dmwelch", "commitsCount": 1}, {"username": "doque", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "ergenekonyigit", "commitsCount": 1}, {"username": "evantorrie", "commitsCount": 1}, {"username": "genepaul", "commitsCount": 1}, {"username": "golonikum", "commitsCount": 1}, {"username": "gotwarlost", "commitsCount": 1}, {"username": "greggraf", "commitsCount": 1}, {"username": "hartraft", "commitsCount": 1}, {"username": "henriquemotaesteves", "commitsCount": 1}, {"username": "hershmire", "commitsCount": 1}, {"username": "hkdnet", "commitsCount": 1}, {"username": "igorlima", "commitsCount": 1}, {"username": "jamesgeorge007", "commitsCount": 1}, {"username": "jimbuck", "commitsCount": 1}, {"username": "jl-", "commitsCount": 1}, {"username": "karottenreibe", "commitsCount": 1}, {"username": "katerberg", "commitsCount": 1}, {"username": "ljharb", "commitsCount": 1}, {"username": "matheusrocha89", "commitsCount": 1}, {"username": "mojavelinux", "commitsCount": 1}, {"username": "motiz88", "commitsCount": 1}, {"username": "mourner", "commitsCount": 1}, {"username": "nothingismagick", "commitsCount": 1}, {"username": "pangrr", "commitsCount": 1}, {"username": "pedrocarrico", "commitsCount": 1}, {"username": "pgilad", "commitsCount": 1}, {"username": "phated", "commitsCount": 1}, {"username": "philnash", "commitsCount": 1}, {"username": "popomore", "commitsCount": 1}, {"username": "princjef", "commitsCount": 1}, {"username": "pvdlg", "commitsCount": 1}, {"username": "rapzo", "commitsCount": 1}, {"username": "realityking", "commitsCount": 1}, {"username": "revelt", "commitsCount": 1}, {"username": "rgbkrk", "commitsCount": 1}, {"username": "rpominov", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "taye", "commitsCount": 1}, {"username": "tehsenaus", "commitsCount": 1}, {"username": "thegecko", "commitsCount": 1}, {"username": "thepont", "commitsCount": 1}, {"username": "tomkel", "commitsCount": 1}, {"username": "waldyrious", "commitsCount": 1}, {"username": "wzalazar", "commitsCount": 1}, {"username": "xdissent", "commitsCount": 1}, {"username": "zertosh", "commitsCount": 1}], "commits": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 1}, {"from": "2020-05-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 4}, {"from": "2020-03-05T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 10}, {"from": "2019-12-06T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 22}, {"from": "2019-06-04T00:00:00.000Z", "to": "2020-06-03T00:00:00.000Z", "count": 68}], "statuses": [{"context": "continuous-integration/appveyor/branch", "state": "success"}, {"context": "coverage/coveralls", "state": "success"}, {"context": "continuous-integration/travis-ci/push", "state": "success"}, {"context": "github/pages", "state": "success"}]}, "source": {"files": {"readmeSize": 17423, "testsSize": 126543, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "service": "https://api.travis-ci.org/istanbuljs/nyc.svg?branch=master", "shields": "https://img.shields.io/travis/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/travis/istanbuljs/nyc/master.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg?label=Windows%20build", "service": "https://ci.appveyor.com/api/projects/status/istanbuljs/nyc/branch/master", "shields": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/appveyor/ci/istanbuljs/nyc/master.json"}, "info": {"service": "appveyor", "type": "build", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "service": "https://coveralls.io/repos/github/istanbuljs/nyc/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.svg", "content": "https://img.shields.io/coveralls/github/istanbuljs/nyc/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}, {"urls": {"original": "https://img.shields.io/npm/v/nyc.svg", "shields": "https://img.shields.io/npm/v/nyc.svg", "content": "https://img.shields.io/npm/v/nyc.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}], "linters": ["editorconfig", "standard"], "coverage": 1, "outdatedDependencies": {"decamelize": {"required": "^1.2.0", "stable": "4.0.0", "latest": "4.0.0"}, "p-map": {"required": "^3.0.0", "stable": "4.0.0", "latest": "4.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 1, "health": 0.8518518518518519, "branding": 1}, "popularity": {"communityInterest": 4742, "downloadsCount": 5357569.666666667, "downloadsAcceleration": 13527.933257229837, "dependentsCount": 603}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8583904109589041, "openIssues": 1, "issuesDistribution": 0.11143006275223388}}, "score": {"final": 0.7720905749958739, "detail": {"quality": 0.9985008047616053, "popularity": 0.5712903862175251, "maintenance": 0.778824852546453}}}}, {"tslib": {"analyzedAt": "2020-06-26T15:11:54.121Z", "collected": {"metadata": {"name": "tslib", "scope": "unscoped", "version": "2.0.0", "description": "Runtime library for TypeScript helper functions", "keywords": ["TypeScript", "Microsoft", "compiler", "language", "javascript", "tslib", "runtime"], "date": "2020-05-13T23:08:45.637Z", "author": {"name": "Microsoft Corp."}, "publisher": {"username": "typescript-bot", "email": "typescript@microsoft.com"}, "maintainers": [{"username": "andrewbranch", "email": "andrew@wheream.io"}, {"username": "minestarks", "email": "mineyalc@microsoft.com"}, {"username": "orta", "email": "orta.therox@gmail.com"}, {"username": "rbuckton", "email": "rbuckton@chronicles.org"}, {"username": "sanders_n", "email": "ncsander@indiana.edu"}, {"username": "sheetalkamat", "email": "shkamat@microsoft.com"}, {"username": "typescript-bot", "email": "typescript@microsoft.com"}, {"username": "typescript-deploys", "email": "ortam@microsoft.com"}, {"username": "weswigham", "email": "wwigham@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/Microsoft/tslib.git"}, "links": {"npm": "https://www.npmjs.com/package/tslib", "homepage": "https://www.typescriptlang.org/", "repository": "https://github.com/Microsoft/tslib", "bugs": "https://github.com/Microsoft/TypeScript/issues"}, "license": "0BSD", "releases": [{"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 5}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 7}, {"from": "2018-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 8}], "readme": "# tslib\r\n\r\nThis is a runtime library for [TypeScript](http://www.typescriptlang.org/) that contains all of the TypeScript helper functions.\r\n\r\nThis library is primarily used by the `--importHelpers` flag in TypeScript.\r\nWhen using `--importHelpers`, a module that uses helper functions like `__extends` and `__assign` in the following emitted file:\r\n\r\n```ts\r\nvar __assign = (this && this.__assign) || Object.assign || function(t) {\r\n    for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n        s = arguments[i];\r\n        for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p))\r\n            t[p] = s[p];\r\n    }\r\n    return t;\r\n};\r\nexports.x = {};\r\nexports.y = __assign({}, exports.x);\r\n\r\n```\r\n\r\nwill instead be emitted as something like the following:\r\n\r\n```ts\r\nvar tslib_1 = require(\"tslib\");\r\nexports.x = {};\r\nexports.y = tslib_1.__assign({}, exports.x);\r\n```\r\n\r\nBecause this can avoid duplicate declarations of things like `__extends`, `__assign`, etc., this means delivering users smaller files on average, as well as less runtime overhead.\r\nFor optimized bundles with TypeScript, you should absolutely consider using `tslib` and `--importHelpers`.\r\n\r\n# Installing\r\n\r\nFor the latest stable version, run:\r\n\r\n## npm\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nnpm install --save tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nnpm install --save tslib@1.6.1\r\n```\r\n\r\n## yarn\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nyarn add tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nyarn add tslib@1.6.1\r\n```\r\n\r\n## bower\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\nbower install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\nbower install tslib@1.6.1\r\n```\r\n\r\n## JSPM\r\n\r\n```sh\r\n# TypeScript 2.3.3 or later\r\njspm install tslib\r\n\r\n# TypeScript 2.3.2 or earlier\r\njspm install tslib@1.6.1\r\n```\r\n\r\n# Usage\r\n\r\nSet the `importHelpers` compiler option on the command line:\r\n\r\n```\r\ntsc --importHelpers file.ts\r\n```\r\n\r\nor in your tsconfig.json:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"importHelpers\": true\r\n    }\r\n}\r\n```\r\n\r\n#### For bower and JSPM users\r\n\r\nYou will need to add a `paths` mapping for `tslib`, e.g. For Bower users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"amd\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"bower_components/tslib/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\nFor JSPM users:\r\n\r\n```json\r\n{\r\n    \"compilerOptions\": {\r\n        \"module\": \"system\",\r\n        \"importHelpers\": true,\r\n        \"baseUrl\": \"./\",\r\n        \"paths\": {\r\n            \"tslib\" : [\"jspm_packages/npm/tslib@2.0.0/tslib.d.ts\"]\r\n        }\r\n    }\r\n}\r\n```\r\n\r\n\r\n# Contribute\r\n\r\nThere are many ways to [contribute](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md) to TypeScript.\r\n\r\n* [Submit bugs](https://github.com/Microsoft/TypeScript/issues) and help us verify fixes as they are checked in.\r\n* Review the [source code changes](https://github.com/Microsoft/TypeScript/pulls).\r\n* Engage with other TypeScript users and developers on [StackOverflow](http://stackoverflow.com/questions/tagged/typescript).\r\n* Join the [#typescript](http://twitter.com/#!/search/realtime/%23typescript) discussion on Twitter.\r\n* [Contribute bug fixes](https://github.com/Microsoft/TypeScript/blob/master/CONTRIBUTING.md).\r\n\r\n# Documentation\r\n\r\n* [Quick tutorial](http://www.typescriptlang.org/Tutorial)\r\n* [Programming handbook](http://www.typescriptlang.org/Handbook)\r\n* [Homepage](http://www.typescriptlang.org/)"}, "npm": {"downloads": [{"from": "2020-06-25T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 4048749}, {"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 17839602}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 90328340}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 247547751}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 428337934}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 707364018}], "dependentsCount": 29929, "starsCount": 9}, "github": {"starsCount": 646, "forksCount": 60, "subscribersCount": 82, "issues": {"count": 119, "openCount": 33, "distribution": {"3600": 16, "10800": 6, "32400": 5, "97200": 9, "291600": 12, "874800": 7, "2624400": 11, "7873200": 13, "23619600": 17, "70858800": 12, "212576400": 11}, "isDisabled": false}, "contributors": [{"username": "rbuckton", "commitsCount": 45}, {"username": "DanielRosenwasser", "commitsCount": 32}, {"username": "mhegazy", "commitsCount": 13}, {"username": "weswigham", "commitsCount": 7}, {"username": "frankwallis", "commitsCount": 6}, {"username": "Draccoz", "commitsCount": 3}, {"username": "sandersn", "commitsCount": 3}, {"username": "alan-agius4", "commitsCount": 2}, {"username": "aluanhaddad", "commitsCount": 2}, {"username": "Andarist", "commitsCount": 1}, {"username": "ExE-Boss", "commitsCount": 1}, {"username": "NicholasLYang", "commitsCount": 1}, {"username": "Saulzi", "commitsCount": 1}, {"username": "SimenB", "commitsCount": 1}, {"username": "billti", "commitsCount": 1}, {"username": "iliyaZelenko", "commitsCount": 1}, {"username": "lolipop99", "commitsCount": 1}, {"username": "mgunter6", "commitsCount": 1}, {"username": "styfle", "commitsCount": 1}, {"username": "timbru31", "commitsCount": 1}], "commits": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-05-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 0}, {"from": "2020-03-28T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 18}, {"from": "2019-12-29T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 27}, {"from": "2019-06-27T00:00:00.000Z", "to": "2020-06-26T00:00:00.000Z", "count": 33}]}, "source": {"files": {"readmeSize": 3453, "testsSize": 0, "hasNpmIgnore": true}}}, "evaluation": {"quality": {"carefulness": 0.7899999999999999, "tests": 0, "health": 1, "branding": 0.4}, "popularity": {"communityInterest": 817, "downloadsCount": 82515917, "downloadsAcceleration": 378658.1584094368, "dependentsCount": 29929}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.7783732876712328, "openIssues": 0.8711484593837535, "issuesDistribution": 0}}, "score": {"final": 0.7023762539176704, "detail": {"quality": 0.6206494132789021, "popularity": 0.8083771609371354, "maintenance": 0.6664269245885784}}}}, {"coveralls": {"analyzedAt": "2020-06-07T19:03:15.570Z", "collected": {"metadata": {"name": "coveralls", "scope": "unscoped", "version": "3.1.0", "description": "takes json-cov output into stdin and POSTs to coveralls.io", "keywords": ["coverage", "coveralls"], "date": "2020-04-24T22:38:13.122Z", "author": {"name": "Gregg Caines"}, "publisher": {"username": "nickmerwin", "email": "n@mer.fm"}, "maintainers": [{"username": "cainus", "email": "gregg@caines.ca"}, {"username": "nickmerwin", "email": "n@mer.fm"}], "contributors": [{"name": "Gregg Caines", "email": "gregg@caines.ca", "url": "http://caines.ca"}, {"name": "Joshua Ma", "email": "github@joshma.com", "url": "http://joshma.com"}, {"name": "Alan Gutierrez", "email": "alan@prettyrobots.com", "url": "http://www.prettyrobots.com/"}, {"name": "Kir Belevich", "url": "https://github.com/svg"}, {"name": "elliotcable", "email": "github@elliottcable.name", "url": "http://elliottcable.name/"}, {"name": "Slotos", "email": "slotos@gmail.com", "url": "http://slotos.net"}, {"name": "mattjmorrison", "email": "mattjmorrison@mattjmorrison.com", "url": "http://mattjmorrison.com"}, {"name": "Arpad Borsos", "email": "arpad.borsos@googlemail.com", "url": "http://swatinem.de/"}, {"name": "Adam Moss", "url": "https://github.com/adam-moss"}], "repository": {"type": "git", "url": "git://github.com/nickmerwin/node-coveralls.git"}, "links": {"npm": "https://www.npmjs.com/package/coveralls", "homepage": "https://github.com/nickmerwin/node-coveralls#readme", "repository": "https://github.com/nickmerwin/node-coveralls", "bugs": "https://github.com/nickmerwin/node-coveralls/issues"}, "license": "BSD-2-Clause", "dependencies": {"js-yaml": "^3.13.1", "lcov-parse": "^1.0.0", "log-driver": "^1.2.7", "minimist": "^1.2.5", "request": "^2.88.2"}, "devDependencies": {"jshint": "^2.11.0", "mocha": "^6.2.3", "nyc": "^14.1.1", "should": "^9.0.2", "shx": "^0.3.2", "sinon": "^7.5.0"}, "releases": [{"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 7}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 12}, {"from": "2018-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 15}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "# node-coveralls\n\n[![Build Status][ci-image]][ci-url] [![Coverage Status][coveralls-image]][coveralls-url]\n\n[Coveralls.io](https://coveralls.io/) support for Node.js. Get the great coverage reporting of coveralls.io and add a cool coverage button (like the one above) to your README.\n\nSupported CI services: [Travis CI](https://travis-ci.org/), [CodeShip](https://codeship.com/), [CircleCI](https://circleci.com/), [Jenkins](https://jenkins.io/), [Gitlab CI](https://gitlab.com/), [AppVeyor](https://www.appveyor.com/), [Buildkite](https://buildkite.com/), [GitHub Actions CI](https://github.com/features/actions), [CodeFresh](https://codefresh.io)\n\n## Installation:\n\nAdd the latest version of `coveralls` to your package.json:\n\n```shell\nnpm install coveralls --save-dev\n```\n\nIf you're using mocha, add `mocha-lcov-reporter` to your package.json:\n\n```shell\nnpm install mocha-lcov-reporter --save-dev\n```\n\n## Usage:\n\nThis script `bin/coveralls.js` can take standard input from any tool that emits the lcov data format (including [mocha](https://mochajs.org/)'s [LCOV reporter](https://npmjs.org/package/mocha-lcov-reporter)) and send it to coveralls.io to report your code coverage there.\n\nOnce your app is instrumented for coverage, and building, you need to pipe the lcov output to `./node_modules/coveralls/bin/coveralls.js`.\n\nThis library currently supports [Travis CI](https://travis-ci.org/) with no extra effort beyond piping the lcov output to coveralls. However, if you're using a different build system, there are a few environment variables that are necessary:\n\n- `COVERALLS_SERVICE_NAME` (the name of your build system)\n- `COVERALLS_REPO_TOKEN` (the secret repo token from coveralls.io)\n- `COVERALLS_GIT_BRANCH` (the branch name)\n\nThere are optional environment variables for other build systems as well:\n\n- `COVERALLS_SERVICE_NUMBER` (an id that uniquely identifies the build)\n- `COVERALLS_SERVICE_JOB_ID` (an id that uniquely identifies the build's job)\n- `COVERALLS_RUN_AT` (a date string for the time that the job ran. RFC 3339 dates work. This defaults to your build system's date/time if you don't set it.)\n- `COVERALLS_PARALLEL` (more info here: <https://docs.coveralls.io/parallel-build-webhook>)\n\n### GitHub Actions CI\n\nIf you are using GitHub Actions CI, you should look into [coverallsapp/github-action](https://github.com/coverallsapp/github-action).\n\nIf you prefer to use this package you can do it like this:\n\n```yml\nenv:\n  COVERALLS_REPO_TOKEN: \"${{ secrets.COVERALLS_REPO_TOKEN }}\"\n  COVERALLS_GIT_BRANCH: \"${{ github.ref }}\"\n```\n\n### [Jest](https://jestjs.io/)\n\n- Install [jest](https://jestjs.io/docs/en/getting-started)\n- Use the following to run tests and push files to coveralls on success:\n\n  ```sh\n  jest --coverage && coveralls < coverage/lcov.info\n  ```\n\nCheck out an example [here](https://github.com/Ethan-Arrowood/harperdb-connect/blob/master/.travis.yml) which makes use of Travis CI build stages\n\n### [Mocha](https://mochajs.org/) + [Blanket.js](https://github.com/alex-seville/blanket)\n\n- Install [blanket.js](https://github.com/alex-seville/blanket)\n- Configure blanket according to [docs](https://github.com/alex-seville/blanket/blob/master/docs/getting_started_node.md).\n- Run your tests with a command like this:\n\n  ```sh\n  NODE_ENV=test YOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha \\\n    --require blanket \\\n    --reporter mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Mocha](https://mochajs.org/) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nInstrumenting your app for coverage is probably harder than it needs to be (read [here](http://seejohncode.com/2012/03/13/setting-up-mocha-jscoverage//)), but that's also a necessary step.\n\nIn mocha, if you've got your code instrumented for coverage, the command for a Travis CI build would look something like this:\n\n```sh\nYOURPACKAGE_COVERAGE=1 ./node_modules/.bin/mocha test -R mocha-lcov-reporter | ./node_modules/coveralls/bin/coveralls.js\n```\n\nCheck out an example [Makefile](https://github.com/cainus/urlgrey/blob/master/Makefile) from one of my projects for an example, especially the test-coveralls build target. Note: Travis CI runs `npm test`, so whatever target you create in your Makefile must be the target that `npm test` runs (This is set in package.json's `scripts` property).\n\n### [Istanbul](https://github.com/gotwarlost/istanbul)\n\n#### With Mocha:\n\n```sh\nistanbul cover ./node_modules/mocha/bin/_mocha --report lcovonly -- -R spec && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n#### With Jasmine:\n\n```sh\nistanbul cover jasmine-node --captureExceptions spec/ && cat ./coverage/lcov.info | ./node_modules/coveralls/bin/coveralls.js && rm -rf ./coverage\n```\n\n### [Nodeunit](https://github.com/caolan/nodeunit) + [JSCoverage](https://github.com/fishbar/jscoverage)\n\nDepend on nodeunit, jscoverage and coveralls:\n\n```sh\nnpm install nodeunit jscoverage coveralls --save-dev\n```\n\nAdd a coveralls script to \"scripts\" in your `package.json`:\n\n```json\n\"scripts\": {\n  \"test\": \"nodeunit test\",\n  \"coveralls\": \"jscoverage lib && YOURPACKAGE_COVERAGE=1 nodeunit --reporter=lcov test | coveralls\"\n}\n```\n\nEnsure your app requires instrumented code when `process.env.YOURPACKAGE_COVERAGE` variable is defined.\n\nRun your tests with a command like this:\n\n```sh\nnpm run coveralls\n```\n\nFor detailed instructions on requiring instrumented code, running on Travis CI and submitting to coveralls [see this guide](https://github.com/alanshaw/nodeunit-lcov-coveralls-example).\n\n### [Poncho](https://github.com/deepsweet/poncho)\n\nClient-side JS code coverage using [PhantomJS](https://github.com/ariya/phantomjs), [Mocha](https://mochajs.org/) and [Blanket](https://github.com/alex-seville/blanket):\n\n- [Configure](https://mochajs.org/#running-mocha-in-the-browser) Mocha for browser\n- [Mark](https://github.com/deepsweet/poncho#usage) target script(s) with `data-cover` HTML attribute\n- Run your tests with a command like this:\n\n  ```sh\n  ./node_modules/.bin/poncho -R lcov test/test.html | ./node_modules/coveralls/bin/coveralls.js\n  ```\n\n### [Lab](https://github.com/hapijs/lab)\n\n```sh\nlab -r lcov | ./node_modules/.bin/coveralls\n```\n\n### [nyc](https://github.com/istanbuljs/nyc)\n\nWorks with almost any testing framework. Simply execute\n`npm test` with the `nyc` bin followed by running its reporter:\n\n```shell\nnyc npm test && nyc report --reporter=text-lcov | coveralls\n```\n\n### [TAP](https://github.com/isaacs/node-tap)\n\nSimply run your tap tests with the `COVERALLS_REPO_TOKEN` environment\nvariable set and tap will automatically use `nyc` to report\ncoverage to coveralls.\n\n### Command Line Parameters\n\n```shell\nUsage: coveralls.js [-v] filepath\n```\n\n#### Optional arguments:\n\n- `-v`, `--verbose`\n- `filepath` - optionally defines the base filepath of your source files.\n\n## Running locally\n\nIf you're running locally, you must have a `.coveralls.yml` file, as documented in [their documentation](https://docs.coveralls.io/ruby-on-rails#configuration), with your `repo_token` in it; or, you must provide a `COVERALLS_REPO_TOKEN` environment variable on the command-line.\n\nIf you want to send commit data to coveralls, you can set the `COVERALLS_GIT_COMMIT` environment-variable to the commit hash you wish to reference. If you don't want to use a hash, you can set it to `HEAD` to supply coveralls with the latest commit data. This requires git to be installed and executable on the current PATH.\n\n## Contributing\n\nI generally don't accept pull requests that are untested, or break the build, because I'd like to keep the quality high (this is a coverage tool after all!).\n\nI also don't care for \"soft-versioning\" or \"optimistic versioning\" (dependencies that have ^, x, > in them, or anything other than numbers and dots). There have been too many problems with bad semantic versioning in dependencies, and I'd rather have a solid library than a bleeding edge one.\n\n\n[ci-image]: https://github.com/nickmerwin/node-coveralls/workflows/Tests/badge.svg\n[ci-url]: https://github.com/nickmerwin/node-coveralls/actions?workflow=Tests\n\n[coveralls-image]: https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github\n[coveralls-url]: https://coveralls.io/github/nickmerwin/node-coveralls?branch=master"}, "npm": {"downloads": [{"from": "2020-06-06T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 24702}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 401910}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 1672802}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 5277030}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 9459920}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 17741190}], "dependentsCount": 469, "starsCount": 34}, "github": {"starsCount": 984, "forksCount": 215, "subscribersCount": 15, "issues": {"count": 300, "openCount": 61, "distribution": {"3600": 24, "10800": 12, "32400": 8, "97200": 27, "291600": 28, "874800": 31, "2624400": 23, "7873200": 35, "23619600": 48, "70858800": 33, "212576400": 31}, "isDisabled": false}, "contributors": [{"username": "cainus", "commitsCount": 83}, {"username": "nickmerwin", "commitsCount": 55}, {"username": "XhmikosR", "commitsCount": 33}, {"username": "gabehayes", "commitsCount": 16}, {"username": "tdd", "commitsCount": 12}, {"username": "addaleax", "commitsCount": 10}, {"username": "gerarde", "commitsCount": 4}, {"username": "mattjmorrison", "commitsCount": 4}, {"username": "anaisbetts", "commitsCount": 3}, {"username": "dependabot[bot]", "commitsCount": 3}, {"username": "ELLIOTTCABLE", "commitsCount": 2}, {"username": "JonathanPorta", "commitsCount": 2}, {"username": "Swatinem", "commitsCount": 2}, {"username": "alanshaw", "commitsCount": 2}, {"username": "eagleeye", "commitsCount": 2}, {"username": "geek", "commitsCount": 2}, {"username": "honzajavorek", "commitsCount": 2}, {"username": "ilanbiala", "commitsCount": 2}, {"username": "washimimizuku", "commitsCount": 2}, {"username": "AndreMiras", "commitsCount": 1}, {"username": "ChALkeR", "commitsCount": 1}, {"username": "Ethan-Arrowood", "commitsCount": 1}, {"username": "Hirse", "commitsCount": 1}, {"username": "Joe8Bit", "commitsCount": 1}, {"username": "SgtPooki", "commitsCount": 1}, {"username": "StevenWeathers", "commitsCount": 1}, {"username": "TerribleDev", "commitsCount": 1}, {"username": "a0viedo", "commitsCount": 1}, {"username": "a11smiles", "commitsCount": 1}, {"username": "adam-moss", "commitsCount": 1}, {"username": "ashishkujoy", "commitsCount": 1}, {"username": "benpetty", "commitsCount": 1}, {"username": "bigeasy", "commitsCount": 1}, {"username": "bionikspoon", "commitsCount": 1}, {"username": "chasdevs", "commitsCount": 1}, {"username": "daleharvey", "commitsCount": 1}, {"username": "deepak1556", "commitsCount": 1}, {"username": "dylan-smith", "commitsCount": 1}, {"username": "ejlangev", "commitsCount": 1}, {"username": "evanjbowling", "commitsCount": 1}, {"username": "fracmak", "commitsCount": 1}, {"username": "hyperlink", "commitsCount": 1}, {"username": "jacob-meacham", "commitsCount": 1}, {"username": "jaubourg", "commitsCount": 1}, {"username": "job13er", "commitsCount": 1}, {"username": "jonathanKingston", "commitsCount": 1}, {"username": "joscha", "commitsCount": 1}, {"username": "joshma", "commitsCount": 1}, {"username": "kasperlewau", "commitsCount": 1}, {"username": "kemitchell", "commitsCount": 1}, {"username": "lpinca", "commitsCount": 1}, {"username": "ly-cultureiq", "commitsCount": 1}, {"username": "mattkime", "commitsCount": 1}, {"username": "mdlavin", "commitsCount": 1}, {"username": "mgartner", "commitsCount": 1}, {"username": "midgleyc", "commitsCount": 1}, {"username": "mikaelmello", "commitsCount": 1}, {"username": "mortonfox", "commitsCount": 1}, {"username": "mrcrgl", "commitsCount": 1}, {"username": "ndaidong", "commitsCount": 1}, {"username": "ntwb", "commitsCount": 1}, {"username": "paazmaya", "commitsCount": 1}, {"username": "paroga", "commitsCount": 1}, {"username": "pdehaan", "commitsCount": 1}, {"username": "posquit0", "commitsCount": 1}, {"username": "rogierslag", "commitsCount": 1}, {"username": "roman01la", "commitsCount": 1}, {"username": "scriptdaemon", "commitsCount": 1}, {"username": "shinnn", "commitsCount": 1}, {"username": "stevemao", "commitsCount": 1}, {"username": "suda", "commitsCount": 1}, {"username": "teppeis", "commitsCount": 1}, {"username": "waitingsong", "commitsCount": 1}, {"username": "wlabranche", "commitsCount": 1}], "commits": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-05-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 0}, {"from": "2020-03-09T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-12-10T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 28}, {"from": "2019-06-08T00:00:00.000Z", "to": "2020-06-07T00:00:00.000Z", "count": 69}], "statuses": [{"context": "coverage/coveralls", "state": "success"}, {"context": "Coveralls - windows-latest-node-6", "state": "success"}, {"context": "Coveralls - windows-latest-node-8", "state": "success"}, {"context": "Coveralls - windows-latest-node-10", "state": "success"}, {"context": "Coveralls - windows-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-6", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-8", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-12", "state": "success"}, {"context": "Coveralls - ubuntu-latest-node-10", "state": "success"}]}, "source": {"files": {"readmeSize": 8310, "testsSize": 52443}, "badges": [{"urls": {"original": "https://coveralls.io/repos/nickmerwin/node-coveralls/badge.svg?branch=master&service=github", "service": "https://coveralls.io/repos/github/nickmerwin/node-coveralls/badge.svg?branch=master", "shields": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.svg", "content": "https://img.shields.io/coveralls/nickmerwin/node-coveralls/master.json"}, "info": {"service": "coveralls", "type": "coverage", "modifiers": {"branch": "master"}}}], "linters": ["jshint"], "coverage": 0.98}}, "evaluation": {"quality": {"carefulness": 0.9199999999999999, "tests": 0.9970000000000001, "health": 1, "branding": 0.15}, "popularity": {"communityInterest": 1322, "downloadsCount": 1759010, "downloadsAcceleration": 2775.794444444444, "dependentsCount": 469}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.8117123287671233, "openIssues": 0.9944444444444445, "issuesDistribution": 0}}, "score": {"final": 0.6805002192354056, "detail": {"quality": 0.9748207261160138, "popularity": 0.4421581524251469, "maintenance": 0.6665675658622862}}}}, {"@babel/cli": {"analyzedAt": "2020-06-30T13:15:53.450Z", "collected": {"metadata": {"name": "@babel/cli", "scope": "babel", "version": "7.10.4", "description": "Babel command line.", "keywords": ["6to5", "babel", "es6", "transpile", "transpiler", "babel-cli", "compiler"], "date": "2020-06-30T13:11:18.880Z", "author": {"name": "Sebastian McKenzie", "email": "sebmck@gmail.com"}, "publisher": {"username": "jlhwung", "email": "i@jhuang.me"}, "maintainers": [{"username": "danez", "email": "daniel@tschinder.de"}, {"username": "existentialism", "email": "bng412@gmail.com"}, {"username": "hzoo", "email": "hi@henryzoo.com"}, {"username": "jlhwung", "email": "i@jhuang.me"}, {"username": "loganfsmyth", "email": "loganfsmyth@gmail.com"}, {"username": "nicolo-ribaudo", "email": "nicolo.ribaudo@gmail.com"}], "repository": {"type": "git", "url": "git+https://github.com/babel/babel.git", "directory": "packages/babel-cli"}, "links": {"npm": "https://www.npmjs.com/package/%40babel%2Fcli", "homepage": "https://babeljs.io/", "repository": "https://github.com/babel/babel", "bugs": "https://github.com/babel/babel/issues"}, "license": "MIT", "dependencies": {"commander": "^4.0.1", "convert-source-map": "^1.1.0", "fs-readdir-recursive": "^1.1.0", "glob": "^7.0.0", "lodash": "^4.17.13", "make-dir": "^2.1.0", "slash": "^2.0.0", "source-map": "^0.5.0", "chokidar": "^2.1.8"}, "devDependencies": {"@babel/core": "^7.10.4", "@babel/helper-fixtures": "^7.10.4", "rimraf": "^3.0.0"}, "peerDependencies": {"@babel/core": "^7.0.0-0"}, "optionalDependencies": {"chokidar": "^2.1.8"}, "releases": [{"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 3}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 16}, {"from": "2018-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 35}], "readme": "# @babel/cli\n\n> Babel command line.\n\nSee our website [@babel/cli](https://babeljs.io/docs/en/next/babel-cli.html) for more information or the [issues](https://github.com/babel/babel/issues?utf8=%E2%9C%93&q=is%3Aissue+label%3A%22pkg%3A%20cli%22+is%3Aopen) associated with this package.\n\n## Install\n\nUsing npm:\n\n```sh\nnpm install --save-dev @babel/cli\n```\n\nor using yarn:\n\n```sh\nyarn add @babel/cli --dev\n```"}, "npm": {"downloads": [{"from": "2020-06-29T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 288249}, {"from": "2020-06-23T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 1654612}, {"from": "2020-05-31T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 6568909}, {"from": "2020-04-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 20521693}, {"from": "2020-01-02T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 38614259}, {"from": "2019-07-01T00:00:00.000Z", "to": "2020-06-30T00:00:00.000Z", "count": 64622917}], "dependentsCount": 1728, "starsCount": 2}, "source": {"files": {"readmeSize": 407, "testsSize": 25226, "hasNpmIgnore": true, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dm/@babel/core.svg?label=v7%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/@babel/core.svg", "content": "https://img.shields.io/npm/dm/@babel/core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/npm/dm/babel-core.svg?label=v6%20downloads&maxAge=43200", "shields": "https://img.shields.io/npm/dm/babel-core.svg", "content": "https://img.shields.io/npm/dm/babel-core.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dm"}}}, {"urls": {"original": "https://img.shields.io/travis/com/babel/babel/main.svg?label=travis&maxAge=43200", "service": "https://api.travis-ci.org/com/babel/babel.svg?branch=main", "shields": "https://img.shields.io/travis/com/babel/babel/main.svg", "content": "https://img.shields.io/travis/com/babel/babel/main.json"}, "info": {"service": "travis", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/circleci/project/github/babel/babel/main.svg?label=circle&maxAge=43200", "service": "https://circleci.com/gh/babel/babel/tree/main.svg", "shields": "https://img.shields.io/circleci/project/github/babel/babel/main.svg", "content": "https://img.shields.io/circleci/project/github/babel/babel/main.json"}, "info": {"service": "circleci", "type": "build", "modifiers": {"branch": "main"}}}, {"urls": {"original": "https://img.shields.io/codecov/c/github/babel/babel/main.svg?maxAge=43200", "service": "https://codecov.io/github/babel/babel/branch/main/graphs/badge.svg", "shields": "https://img.shields.io/codecov/c/github/babel/babel/main.svg", "content": "https://img.shields.io/codecov/c/github/babel/babel/main.json"}, "info": {"service": "codecov", "type": "coverage", "modifiers": {"branch": "main"}}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.91, "outdatedDependencies": {"slash": {"required": "^2.0.0", "stable": "3.0.0", "latest": "3.0.0"}, "source-map": {"required": "^0.5.0", "stable": "0.7.3", "latest": "0.8.0-beta.0"}, "make-dir": {"required": "^2.1.0", "stable": "3.1.0", "latest": "3.1.0"}, "chokidar": {"required": "^2.1.8", "stable": "3.4.0", "latest": "3.4.0"}, "commander": {"required": "^4.0.1", "stable": "5.1.0", "latest": "6.0.0-0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.4365, "health": 0.5, "branding": 1}, "popularity": {"communityInterest": 2, "downloadsCount": 6840564.333333333, "downloadsAcceleration": 19847.279775494673, "dependentsCount": 1728}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0, "openIssues": 0, "issuesDistribution": 0}}, "score": {"final": 0.5362323051055671, "detail": {"quality": 0.8557808052407879, "popularity": 0.46523256247618294, "maintenance": 0.3333333333333333}}}}, {"html-webpack-plugin": {"analyzedAt": "2020-06-20T04:35:49.125Z", "collected": {"metadata": {"name": "html-webpack-plugin", "scope": "unscoped", "version": "4.3.0", "description": "Simplifies creation of HTML files to serve your webpack bundles", "keywords": ["webpack", "plugin", "html", "html-webpack-plugin"], "date": "2020-04-30T17:39:05.226Z", "author": {"name": "Jan Nicklas", "email": "j.nicklas@me.com", "url": "https://github.com/jantimon", "username": "jantimon"}, "publisher": {"username": "jantimon", "email": "j.nicklas@me.com"}, "maintainers": [{"username": "ampedandwired", "email": "charles.blaxland@gmail.com"}, {"username": "jantimon", "email": "j.nicklas@me.com"}, {"username": "mastilver", "email": "th.sileghem@gmail.com"}, {"username": "thelarkinn", "email": "sean.larkin@cuw.edu"}], "repository": {"type": "git", "url": "git+https://github.com/jantimon/html-webpack-plugin.git"}, "links": {"npm": "https://www.npmjs.com/package/html-webpack-plugin", "homepage": "https://github.com/jantimon/html-webpack-plugin", "repository": "https://github.com/jantimon/html-webpack-plugin", "bugs": "https://github.com/jantimon/html-webpack-plugin/issues"}, "license": "MIT", "dependencies": {"@types/html-minifier-terser": "^5.0.0", "@types/tapable": "^1.0.5", "@types/webpack": "^4.41.8", "html-minifier-terser": "^5.0.1", "loader-utils": "^1.2.3", "lodash": "^4.17.15", "pretty-error": "^2.1.1", "tapable": "^1.1.3", "util.promisify": "1.0.0"}, "devDependencies": {"@types/loader-utils": "1.1.3", "@types/node": "11.13.9", "appcache-webpack-plugin": "1.4.0", "commitizen": "4.0.3", "css-loader": "2.1.1", "cz-conventional-changelog": "2.1.0", "dir-compare": "1.7.2", "file-loader": "3.0.1", "html-loader": "0.5.5", "jest": "24.7.1", "mini-css-extract-plugin": "0.6.0", "pug": "2.0.3", "pug-loader": "2.4.0", "rimraf": "2.6.3", "semistandard": "^13.0.1", "standard-version": "5.0.2", "style-loader": "0.23.1", "typescript": "3.8.3", "webpack": "4.35.2", "webpack-recompilation-simulator": "3.2.0"}, "peerDependencies": {"webpack": ">=4.0.0 < 6.0.0"}, "releases": [{"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 11}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 14}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 20}, {"from": "2018-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 27}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "[![npm][npm]][npm-url]\n[![node][node]][node-url]\n![npm](https://img.shields.io/npm/dw/html-webpack-plugin.svg)\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![Backers on Open Collective](https://opencollective.com/html-webpack-plugin/backers/badge.svg)](#backers)\n [![Sponsors on Open Collective](https://opencollective.com/html-webpack-plugin/sponsors/badge.svg)](#sponsors) \n\n<div align=\"center\">\n  <img width=\"200\" height=\"200\" src=\"https://worldvectorlogo.com/logos/html5.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n  <div>\n    <img width=\"100\" height=\"100\" title=\"Webpack Plugin\" src=\"http://michael-ciniawsky.github.io/postcss-load-plugins/logo.svg\">\n  </div>\n  <h1>HTML Webpack Plugin</h1>\n  <p>Plugin that simplifies creation of HTML files to serve your bundles</p>\n</div>\n\n<h2 align=\"center\">Install</h2>\n\n```bash\n  npm i --save-dev html-webpack-plugin\n```\n\n```bash\n  yarn add --dev html-webpack-plugin\n```\n\n\nThis is a [webpack](http://webpack.js.org/) plugin that simplifies creation of HTML files to serve your `webpack` bundles. This is especially useful for `webpack` bundles that include a hash in the filename which changes every compilation. You can either let the plugin generate an HTML file for you, supply\nyour own template using `lodash` templates or use your own loader.\n\n<h2 align=\"center\">Sponsors</h2>\n\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/0/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/0/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/1/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/1/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/2/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/2/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/3/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/3/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/4/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/4/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/5/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/5/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/6/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/6/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/7/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/7/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/8/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/8/avatar.svg\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/sponsor/9/website\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/sponsor/9/avatar.svg\"></a>\n\nThanks for supporting the ongoing improvements to the html-webpack-plugin!  \n\n<h2 align=\"center\">Zero Config</h2>\n\nThe `html-webpack-plugin` works without configuration.  \nIt's a great addition to the [\u2699\ufe0f webpack-config-plugins](https://github.com/namics/webpack-config-plugins/blob/master/README.md#zero-config-webpack-dev-server-example).\n\n<h2 align=\"center\">Plugins</h2>\n\nThe `html-webpack-plugin` provides [hooks](https://github.com/jantimon/html-webpack-plugin#events) to extend it to your needs. There are already some really powerful plugins which can be integrated with zero configuration\n\n * [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity) for enhanced asset security\n * [appcache-webpack-plugin](https://github.com/lettertwo/appcache-webpack-plugin) for iOS and Android offline usage\n * [favicons-webpack-plugin](https://github.com/jantimon/favicons-webpack-plugin) which generates favicons and icons for iOS, Android and desktop browsers\n * [html-webpack-harddisk-plugin](https://github.com/jantimon/html-webpack-harddisk-plugin) can be used to always write to disk the html file, useful when webpack-dev-server / HMR are being used\n * [html-webpack-inline-source-plugin](https://github.com/DustinJackson/html-webpack-inline-source-plugin) to inline your assets in the resulting HTML file\n * [html-webpack-inline-svg-plugin](https://github.com/thegc/html-webpack-inline-svg-plugin) to inline SVGs in the resulting HTML file.\n * [html-webpack-exclude-assets-plugin](https://github.com/jamesjieye/html-webpack-exclude-assets-plugin) for excluding assets using regular expressions\n * [html-webpack-include-assets-plugin](https://github.com/jharris4/html-webpack-include-assets-plugin) for including lists of js or css file paths (such as those copied by the copy-webpack-plugin).\n * [script-ext-html-webpack-plugin](https://github.com/numical/script-ext-html-webpack-plugin) to add `async`, `defer` or `module` attributes to your `<script>` elements, or even inline them\n * [style-ext-html-webpack-plugin](https://github.com/numical/style-ext-html-webpack-plugin) to convert your `<link>`s to external stylesheets into `<style>` elements containing internal CSS\n * [html-webpack-injector](https://github.com/thearchitgarg/html-webpack-injector) to inject chunks in `head` or `body` (different locations ) of same html document.\n * [resource-hints-webpack-plugin](https://github.com/jantimon/resource-hints-webpack-plugin) to add resource hints for faster initial page loads using `<link rel='preload'>` and `<link rel='prefetch'>`\n * [preload-webpack-plugin](https://github.com/GoogleChrome/preload-webpack-plugin) for automatically wiring up asynchronous (and other types) of JavaScript chunks using `<link rel='preload'>` helping with lazy-loading\n * [link-media-html-webpack-plugin](https://github.com/yaycmyk/link-media-html-webpack-plugin) allows for injected stylesheet `<link />` tags to have their media attribute set automatically; useful for providing specific desktop/mobile/print etc. stylesheets that the browser will conditionally download\n * [inline-chunk-manifest-html-webpack-plugin](https://github.com/jouni-kantola/inline-chunk-manifest-html-webpack-plugin) for inlining webpack's chunk manifest. Default extracts manifest and inlines in `<head>`\n * [html-webpack-inline-style-plugin](https://github.com/djaax/html-webpack-inline-style-plugin) for inlining styles to HTML elements using [juice](https://github.com/Automattic/juice). Useful for email generation automatisation.\n * [html-webpack-exclude-empty-assets-plugin](https://github.com/KnisterPeter/html-webpack-exclude-empty-assets-plugin) removes empty assets from being added to the html. This fixes some problems with extract-text-plugin with webpack 4.\n * [webpack-concat-plugin](https://github.com/hxlniada/webpack-concat-plugin) for concat and uglify files that needn't to be webpack bundles(for legacy files) and inject to html-webpack-plugin.\n * [html-webpack-link-type-plugin](https://github.com/steadyapp/html-webpack-link-type-plugin) adds a configurable mimetype to resources injected as links (such as adding type=\"text/css\" to external stylesheets) for compatibility with \"strict mode\". \n * [csp-html-webpack-plugin](https://github.com/slackhq/csp-html-webpack-plugin) to add [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/Headers/Content-Security-Policy) meta tags to the HTML output\n * [webpack-nomodule-plugin](https://github.com/swimmadude66/webpack-nomodule-plugin) allows you to add a `nomodule` attribute to specific injected scripts, which prevents the scripts from being loaded by newer browsers. Good for limiting loads of polyfills.\n\n\n<h2 align=\"center\">Usage</h2>\n\nThe plugin will generate an HTML5 file for you that includes all your `webpack`\nbundles in the body using `script` tags. Just add the plugin to your `webpack`\nconfig as follows:\n\n**webpack.config.js**\n```js\nconst HtmlWebpackPlugin = require('html-webpack-plugin')\n\nmodule.exports = {\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin()\n  ]\n}\n```\n\nThis will generate a file `dist/index.html` containing the following\n\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\">\n    <title>Webpack App</title>\n  </head>\n  <body>\n    <script src=\"index_bundle.js\"></script>\n  </body>\n</html>\n```\n\nIf you have multiple `webpack` entry points, they will all be included with `script` tags in the generated HTML.\n\nIf you have any CSS assets in webpack's output (for example, CSS extracted with the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin))\nthen these will be included with `<link>` tags in the HTML head.\n\nIf you have plugins that make use of it, `html-webpack-plugin` should be ordered first before any of the integrated plugins.\n\n<h2 align=\"center\">Options</h2>\n\nYou can pass a hash of configuration options to `html-webpack-plugin`.\nAllowed values are as follows\n\n|Name|Type|Default|Description|\n|:--:|:--:|:-----:|:----------|\n|**`title`**|`{String}`|`Webpack App`|The title to use for the generated HTML document|\n|**`filename`**|`{String}`|`'index.html'`|The file to write the HTML to. Defaults to `index.html`. You can specify a subdirectory here too (eg: `assets/admin.html`)|\n|**`template`**|`{String}`|``|`webpack` relative or absolute path to the template. By default it will use `src/index.ejs` if it exists. Please see the [docs](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md) for details|\n|**`templateContent`**|`{string\\|Function\\|false}`|false| Can be used instead of `template` to provide an inline template - please read the [Writing Your Own Templates](https://github.com/jantimon/html-webpack-plugin#writing-your-own-templates) section |\n|**`templateParameters`**|`{Boolean\\|Object\\|Function}`| `false`| Allows to overwrite the parameters used in the template - see [example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/template-parameters) |\n|**`inject`**|`{Boolean\\|String}`|`true`|`true \\|\\| 'head' \\|\\| 'body' \\|\\| false` Inject all assets into the given `template` or `templateContent`. When passing `true` or `'body'` all javascript resources will be placed at the bottom of the body element. `'head'` will place the scripts in the head element - see the [inject:false example](https://github.com/jantimon/html-webpack-plugin/tree/master/examples/custom-insertion-position)|\n|**`scriptLoading`**|`{'blocking'\\|'defer'}`|`'blocking'`| Modern browsers support non blocking javascript loading (`'defer'`) to improve the page startup performance. |\n|**`favicon`**|`{String}`|``|Adds the given favicon path to the output HTML|\n|**`meta`**|`{Object}`|`{}`|Allows to inject `meta`-tags. E.g. `meta: {viewport: 'width=device-width, initial-scale=1, shrink-to-fit=no'}`|\n|**`base`**|`{Object\\|String\\|false}`|`false`|Inject a [`base`](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base) tag. E.g. `base: \"https://example.com/path/page.html`|\n|**`minify`**|`{Boolean\\|Object}`|`true` if `mode` is `'production'`, otherwise `false`|Controls if and in what ways the output should be minified. See [minification](#minification) below for more details.|\n|**`hash`**|`{Boolean}`|`false`|If `true` then append a unique `webpack` compilation hash to all included scripts and CSS files. This is useful for cache busting|\n|**`cache`**|`{Boolean}`|`true`|Emit the file only if it was changed|\n|**`showErrors`**|`{Boolean}`|`true`|Errors details will be written into the HTML page|\n|**`chunks`**|`{?}`|`?`|Allows you to add only some chunks (e.g only the unit-test chunk)|\n|**[`chunksSortMode`](#plugins)**|`{String\\|Function}`|`auto`|Allows to control how chunks should be sorted before they are included to the HTML. Allowed values are `'none' \\| 'auto' \\| 'manual' \\| {Function}`|\n|**`excludeChunks`**|`{Array.<string>}`|``|Allows you to skip some chunks (e.g don't add the unit-test chunk)|\n|**`xhtml`**|`{Boolean}`|`false`|If `true` render the `link` tags as self-closing (XHTML compliant)|\n\nHere's an example webpack config illustrating how to use these options\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin({\n      title: 'My App',\n      filename: 'assets/admin.html'\n    })\n  ]\n}\n```\n\n### Generating Multiple HTML Files\n\nTo generate more than one HTML file, declare the plugin more than\nonce in your plugins array\n\n**webpack.config.js**\n```js\n{\n  entry: 'index.js',\n  output: {\n    path: __dirname + '/dist',\n    filename: 'index_bundle.js'\n  },\n  plugins: [\n    new HtmlWebpackPlugin(), // Generates default index.html\n    new HtmlWebpackPlugin({  // Also generate a test.html\n      filename: 'test.html',\n      template: 'src/assets/test.html'\n    })\n  ]\n}\n```\n\n### Writing Your Own Templates\n\nIf the default generated HTML doesn't meet your needs you can supply\nyour own template. The easiest way is to use the `template` option and pass a custom HTML file.\nThe html-webpack-plugin will automatically inject all necessary CSS, JS, manifest\nand favicon files into the markup.\n\nDetails of other template loaders are [documented here](https://github.com/jantimon/html-webpack-plugin/blob/master/docs/template-option.md).\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template',\n    // Load a custom template (lodash by default)\n    template: 'index.html'\n  })\n]\n```\n\n**index.html**\n```html\n<!DOCTYPE html>\n<html>\n  <head>\n    <meta charset=\"utf-8\"/>\n    <title><%= htmlWebpackPlugin.options.title %></title>\n  </head>\n  <body>\n  </body>\n</html>\n```\n\nIf you already have a template loader, you can use it to parse the template.\nPlease note that this will also happen if you specify the html-loader and use `.html` file as template.\n\n**webpack.config.js**\n```js\nmodule: {\n  loaders: [\n    { test: /\\.hbs$/, loader: \"handlebars-loader\" }\n  ]\n},\nplugins: [\n  new HtmlWebpackPlugin({\n    title: 'Custom template using Handlebars',\n    template: 'index.hbs'\n  })\n]\n```\n\nYou can use the `lodash` syntax out of the box. If the `inject` feature doesn't fit your needs and you want full control over the asset placement use the [default template](https://github.com/jaketrent/html-webpack-template/blob/86f285d5c790a6c15263f5cc50fd666d51f974fd/index.html) of the [html-webpack-template project](https://github.com/jaketrent/html-webpack-template) as a starting point for writing your own.\n\nThe following variables are available in the template by default (you can extend them using the `templateParameters` option):\n\n- `htmlWebpackPlugin`: data specific to this plugin\n\n  - `htmlWebpackPlugin.options`: the options hash that was passed to\n     the plugin. In addition to the options actually used by this plugin,\n     you can use this hash to pass arbitrary data through to your template.\n\n  - `htmlWebpackPlugin.tags`: the prepared `headTags` and `bodyTags` Array to render the `<base>`, `<meta>`, `<script>` and `<link>` tags.\n     Can be used directly in templates and literals. For example: \n     ```html\n     <html>\n       <head>\n         <%= htmlWebpackPlugin.tags.headTags %>\n       </head>\n       <body>\n         <%= htmlWebpackPlugin.tags.bodyTags %>\n       </body>\n     </html>\n     ```\n  \n  - `htmlWebpackPlugin.files`: direct access to the files used during the compilation.\n\n    ```typescript\n    publicPath: string;\n    js: string[];\n    css: string[];\n    manifest?: string;\n    favicon?: string;\n    ```\n\n\n- `webpackConfig`: the webpack configuration that was used for this compilation. This\n  can be used, for example, to get the `publicPath` (`webpackConfig.output.publicPath`).\n\n- `compilation`: the webpack [compilation object](https://webpack.js.org/api/compilation-object/).\n  This can be used, for example, to get the contents of processed assets and inline them\n  directly in the page, through `compilation.assets[...].source()`\n  (see [the inline template example](examples/inline/template.pug)).\n\n\nThe template can also be directly inlined directly into the options object.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  templateContent: `\n    <html>\n      <body>\n        <h1>Hello World</h1>\n      </body>\n    </html>\n  `\n})\n```\n\nThe `templateContent` can also access all `templateParameters` values.  \n\u26a0\ufe0f **`templateContent` does not allow to use webpack loaders for your template and will not watch for template file changes**\n\n**webpack.config.js**\n```js\nnew HtmlWebpackPlugin({\n  inject: false,\n  templateContent: ({htmlWebpackPlugin}) => `\n    <html>\n      <head>\n        ${htmlWebpackPlugin.tags.headTags}\n      </head>\n      <body>\n        <h1>Hello World</h1>\n        ${htmlWebpackPlugin.tags.bodyTags}\n      </body>\n    </html>\n  `\n})\n```\n\n### Filtering Chunks\n\nTo include only certain chunks you can limit the chunks being used\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    chunks: ['app']\n  })\n]\n```\n\nIt is also possible to exclude certain chunks by setting the `excludeChunks` option\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    excludeChunks: [ 'dev-helper' ]\n  })\n]\n```\n\n### Minification\n\nIf the `minify` option is set to `true` (the default when webpack's `mode` is `'production'`),\nthe generated HTML will be minified using [html-minifier-terser](https://github.com/DanielRuf/html-minifier-terser)\nand the following options:\n\n```js\n{\n  collapseWhitespace: true,\n  removeComments: true,\n  removeRedundantAttributes: true,\n  removeScriptTypeAttributes: true,\n  removeStyleLinkTypeAttributes: true,\n  useShortDoctype: true\n}\n```\n\nTo use custom [html-minifier options](https://github.com/DanielRuf/html-minifier-terser#options-quick-reference)\npass an object to `minify` instead. This object will not be merged with the defaults above.\n\nTo disable minification during production mode set the `minify` option to `false`.\n\n### Meta Tags\n\nIf the `meta` option is set the html-webpack-plugin will inject meta tags.  \nFor the default template the html-webpack-plugin will already provide a default for the `viewport` meta tag.\n\nPlease take a look at this well maintained list of almost all [possible meta tags](https://github.com/joshbuchea/HEAD#meta).\n\n#### name/content meta tags \n\nMost meta tags are configured by setting a `name` and a `content` attribute.  \nTo add those use a key/value pair:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n      'meta': {\n        'viewport': 'width=device-width, initial-scale=1, shrink-to-fit=no',\n        // Will generate: <meta name=\"viewport\" content=\"width=device-width, initial-scale=1, shrink-to-fit=no\">\n        'theme-color': '#4285f4'\n        // Will generate: <meta name=\"theme-color\" content=\"#4285f4\">\n      }\n  })\n]\n```\n\n#### Simulate http response headers\n\nThe **http-equiv** attribute is essentially used to simulate a HTTP response header.  \nThis format is supported using an object notation which allows you to add any attribute:\n\n**webpack.config.js**\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    'meta': {\n      'Content-Security-Policy': { 'http-equiv': 'Content-Security-Policy', 'content': 'default-src https:' },\n      // Will generate: <meta http-equiv=\"Content-Security-Policy\" content=\"default-src https:\">\n      // Which equals to the following http header: `Content-Security-Policy: default-src https:`\n      'set-cookie': { 'http-equiv': 'set-cookie', content: 'name=value; expires=date; path=url' },\n      // Will generate: <meta http-equiv=\"set-cookie\" content=\"value; expires=date; path=url\">\n      // Which equals to the following http header: `set-cookie: value; expires=date; path=url`\n    }\n  })\n]\n```\n\n### Base Tag\n\nWhen the `base` option is used,\nhtml-webpack-plugin will inject a [base tag](https://developer.mozilla.org/en-US/docs/Web/HTML/Element/base).\nBy default, a base tag will not be injected.\n\nThe following two are identical and will both insert `<base href=\"http://example.com/some/page.html\">`:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': 'http://example.com/some/page.html'\n})\n```\n\n```js\nnew HtmlWebpackPlugin({\n  'base': { 'href': 'http://example.com/some/page.html' }\n})\n```\n\nThe `target` can be specified with the corresponding key:\n\n```js\nnew HtmlWebpackPlugin({\n  'base': {\n    'href': 'http://example.com/some/page.html',\n    'target': '_blank'\n  }\n})\n```\n\nwhich will inject the element `<base href=\"http://example.com/some/page.html\" target=\"_blank\">`.\n\n### Long Term Caching\n\nFor long term caching add `contenthash/templatehash` to the filename.\n\n**Example:**\n\n```js\nplugins: [\n  new HtmlWebpackPlugin({\n    filename: 'index.[contenthash].html'\n  })\n]\n```\n\n`contenthash/templatehash` is the hash of the content of the output file.\n\nOptionally, You can configure like `[<hashType>:contenthash:<digestType>:<length>]`\n\n* `hashType` - one of `sha1`, `md5`, `sha256`, `sha512`  or any other node.js supported hash type\n* `digestType` - one of `hex`, `base26`, `base32`, `base36`, `base49`, `base52`, `base58`, `base62`, `base64`\n* `maxlength` - maximum length of the generated hash in chars\n\n**Defaults:** `[md5:contenthash:hex:9999]`\n\n### Events\n\nTo allow other [plugins](https://github.com/webpack/docs/wiki/plugins) to alter the HTML this plugin executes\n[tapable](https://github.com/webpack/tapable/tree/master) hooks.\n\nThe [lib/hooks.js](https://github.com/jantimon/html-webpack-plugin/blob/master/lib/hooks.js) contains all information\nabout which values are passed.\n\n[![Concept flow uml](https://raw.githubusercontent.com/jantimon/html-webpack-plugin/master/flow.png)](https://github.com/jantimon/html-webpack-plugin/blob/master/flow.puml)\n\n#### `beforeAssetTagGeneration` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assets: {\n        publicPath: string,\n        js: Array<{string}>,\n        css: Array<{string}>,\n        favicon?: string | undefined,\n        manifest?: string | undefined\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTags` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      assetTags: {\n        scripts: Array<HtmlTagObject>,\n        styles: Array<HtmlTagObject>,\n        meta: Array<HtmlTagObject>,\n      },\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `alterAssetTagGroups` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\n#### `afterTemplateExecution` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      headTags: Array<HtmlTagObject | HtmlTagObject>,\n      bodyTags: Array<HtmlTagObject | HtmlTagObject>,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `beforeEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      html: string,\n      outputName: string,\n      plugin: HtmlWebpackPlugin,\n    }>\n```\n\n#### `afterEmit` hook\n\n```\n    AsyncSeriesWaterfallHook<{\n      outputName: string,\n      plugin: HtmlWebpackPlugin\n    }>\n```\n\nExample implementation: [webpack-subresource-integrity](https://www.npmjs.com/package/webpack-subresource-integrity)\n\n**plugin.js**\n```js\n// If your plugin is direct dependent to the html webpack plugin:\nconst HtmlWebpackPlugin = require('html-webpack-plugin');\n// If your plugin is using html-webpack-plugin as an optional dependency\n// you can use https://github.com/tallesl/node-safe-require instead:\nconst HtmlWebpackPlugin = require('safe-require')('html-webpack-plugin');\n\nclass MyPlugin {\n  apply (compiler) {\n    compiler.hooks.compilation.tap('MyPlugin', (compilation) => {\n      console.log('The compiler is starting a new compilation...')\n\n      // Static Plugin interface |compilation |HOOK NAME | register listener \n      HtmlWebpackPlugin.getHooks(compilation).beforeEmit.tapAsync(\n        'MyPlugin', // <-- Set a meaningful name here for stacktraces\n        (data, cb) => {\n          // Manipulate the content\n          data.html += 'The Magic Footer'\n          // Tell webpack to move on\n          cb(null, data)\n        }\n      )\n    })\n  }\n}\n\nmodule.exports = MyPlugin\n```\n\n**webpack.config.js**\n```js\nplugins: [\n  new MyPlugin({ options: '' })\n]\n```\n\nNote that the callback must be passed the HtmlWebpackPluginData in order to pass this onto any other plugins listening on the same `beforeEmit` event\n\n<h2 align=\"center\">Maintainers</h2>\n\n<table>\n  <tbody>\n    <tr>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars3.githubusercontent.com/u/4113649?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/jantimon\">Jan Nicklas</a>\n      </td>\n      <td align=\"center\">\n        <img width=\"150\" height=\"150\"\n        src=\"https://avatars2.githubusercontent.com/u/4112409?v=3&s=150\">\n        </br>\n        <a href=\"https://github.com/mastilver\">Thomas Sileghem</a>\n      </td>\n    </tr>\n  <tbody>\n</table>\n\n\n## Backers\n\nThank you to all our backers!  \nIf you want to support the project as well [become a sponsor](https://opencollective.com/html-webpack-plugin#sponsor) or a [a backer](https://opencollective.com/html-webpack-plugin#backer).\n\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/0/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/0/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/1/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/1/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/2/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/2/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/3/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/3/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/4/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/4/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/5/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/5/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/6/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/6/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/7/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/7/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/8/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/8/avatar.svg?requireActive=false\"></a>\n<a href=\"https://opencollective.com/html-webpack-plugin/backer/9/website?requireActive=false\" target=\"_blank\"><img src=\"https://opencollective.com/html-webpack-plugin/backer/9/avatar.svg?requireActive=false\"></a>\n\n\n## Contributors\n\nThis project exists thanks to all the people who contribute.\n\nYou're free to contribute to this project by submitting [issues](https://github.com/jantimon/html-webpack-plugin/issues) and/or [pull requests](https://github.com/jantimon/html-webpack-plugin/pulls). This project is test-driven, so keep in mind that every change and new feature should be covered by tests.\n\nThis project uses the [semistandard code style](https://github.com/Flet/semistandard).\n\n<a href=\"https://github.com/jantimon/html-webpack-plugin/graphs/contributors\"><img src=\"https://opencollective.com/html-webpack-plugin/contributors.svg?width=890&button=false\" /></a>\n\n\n[npm]: https://img.shields.io/npm/v/html-webpack-plugin.svg\n[npm-url]: https://npmjs.com/package/html-webpack-plugin\n\n[node]: https://img.shields.io/node/v/html-webpack-plugin.svg\n[node-url]: https://nodejs.org\n\n[deps]: https://david-dm.org/jantimon/html-webpack-plugin.svg\n[deps-url]: https://david-dm.org/jantimon/html-webpack-plugin\n\n[tests]: http://img.shields.io/travis/jantimon/html-webpack-plugin.svg\n[tests-url]: https://travis-ci.org/jantimon/html-webpack-plugin"}, "npm": {"downloads": [{"from": "2020-06-19T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 927485}, {"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 5994132}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 25620276}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 76353248}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 134685684}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 238171718}], "dependentsCount": 6923, "starsCount": 195}, "github": {"starsCount": 8870, "forksCount": 1097, "subscribersCount": 113, "issues": {"count": 1469, "openCount": 47, "distribution": {"3600": 162, "10800": 92, "32400": 92, "97200": 165, "291600": 187, "874800": 224, "2624400": 175, "7873200": 146, "23619600": 163, "70858800": 61, "212576400": 2}, "isDisabled": false}, "contributors": [{"username": "jantimon", "commitsCount": 328}, {"username": "ampedandwired", "commitsCount": 34}, {"username": "SpaceK33z", "commitsCount": 15}, {"username": "SimenB", "commitsCount": 12}, {"username": "sibiraj-s", "commitsCount": 10}, {"username": "michael-ciniawsky", "commitsCount": 6}, {"username": "numical", "commitsCount": 4}, {"username": "swimmadude66", "commitsCount": 4}, {"username": "cgreening", "commitsCount": 3}, {"username": "edmorley", "commitsCount": 3}, {"username": "kennyt", "commitsCount": 3}, {"username": "mastilver", "commitsCount": 3}, {"username": "okhomenko", "commitsCount": 3}, {"username": "Austaras", "commitsCount": 2}, {"username": "AviVahl", "commitsCount": 2}, {"username": "EmmanuelDemey", "commitsCount": 2}, {"username": "Graham42", "commitsCount": 2}, {"username": "JSteunou", "commitsCount": 2}, {"username": "NekR", "commitsCount": 2}, {"username": "TroyTae", "commitsCount": 2}, {"username": "anjianshi", "commitsCount": 2}, {"username": "ascariandrea", "commitsCount": 2}, {"username": "chiplay", "commitsCount": 2}, {"username": "foglerek", "commitsCount": 2}, {"username": "graingert", "commitsCount": 2}, {"username": "koenpunt", "commitsCount": 2}, {"username": "mateatslc", "commitsCount": 2}, {"username": "mc-zone", "commitsCount": 2}, {"username": "mgol", "commitsCount": 2}, {"username": "mistadikay", "commitsCount": 2}, {"username": "rodneyrehm", "commitsCount": 2}, {"username": "sandeep45", "commitsCount": 2}, {"username": "sokra", "commitsCount": 2}, {"username": "spuf", "commitsCount": 2}, {"username": "vincent-ng", "commitsCount": 2}, {"username": "zzuieliyaoli", "commitsCount": 2}, {"username": "AaronFriel", "commitsCount": 1}, {"username": "Aftabnack", "commitsCount": 1}, {"username": "AhmedElaguab", "commitsCount": 1}, {"username": "KnisterPeter", "commitsCount": 1}, {"username": "MrStLouis", "commitsCount": 1}, {"username": "Vladi4-gh", "commitsCount": 1}, {"username": "Wind4", "commitsCount": 1}, {"username": "aaronjensen", "commitsCount": 1}, {"username": "adamsanderson", "commitsCount": 1}, {"username": "adelura", "commitsCount": 1}, {"username": "akrifari", "commitsCount": 1}, {"username": "alexdevero", "commitsCount": 1}, {"username": "artemirq", "commitsCount": 1}, {"username": "atilkan", "commitsCount": 1}, {"username": "atstp", "commitsCount": 1}, {"username": "brianpeiris", "commitsCount": 1}, {"username": "brianzelip", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "cronin4392", "commitsCount": 1}, {"username": "djaax", "commitsCount": 1}, {"username": "dudekaa", "commitsCount": 1}, {"username": "felixrabe", "commitsCount": 1}, {"username": "genderquery", "commitsCount": 1}, {"username": "habina", "commitsCount": 1}, {"username": "hg-pyun", "commitsCount": 1}, {"username": "hrs-o", "commitsCount": 1}, {"username": "ianberinger", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "jacobroufa", "commitsCount": 1}, {"username": "jinasonlin", "commitsCount": 1}, {"username": "joshunger", "commitsCount": 1}, {"username": "kontrollanten", "commitsCount": 1}, {"username": "latipun7", "commitsCount": 1}, {"username": "lazarljubenovic", "commitsCount": 1}, {"username": "lfbayer", "commitsCount": 1}, {"username": "lightpohl", "commitsCount": 1}, {"username": "monkeywithacupcake", "commitsCount": 1}, {"username": "mzbac", "commitsCount": 1}, {"username": "nphoff", "commitsCount": 1}, {"username": "panstav", "commitsCount": 1}, {"username": "pducks32", "commitsCount": 1}, {"username": "peterblazejewicz", "commitsCount": 1}, {"username": "poacher2k", "commitsCount": 1}, {"username": "riophae", "commitsCount": 1}, {"username": "samloibl", "commitsCount": 1}, {"username": "scinos", "commitsCount": 1}, {"username": "shobhitsharma", "commitsCount": 1}, {"username": "siakaramalegos", "commitsCount": 1}, {"username": "skiny2015", "commitsCount": 1}, {"username": "st-sloth", "commitsCount": 1}, {"username": "t-kelly", "commitsCount": 1}, {"username": "the-rasmussen", "commitsCount": 1}, {"username": "theGC", "commitsCount": 1}, {"username": "thearchitgarg", "commitsCount": 1}, {"username": "thescientist13", "commitsCount": 1}, {"username": "tkrotoff", "commitsCount": 1}, {"username": "tommytroylin", "commitsCount": 1}, {"username": "tomquirk", "commitsCount": 1}, {"username": "troglotit", "commitsCount": 1}, {"username": "ttous", "commitsCount": 1}, {"username": "webmaster128", "commitsCount": 1}, {"username": "wingrunr21", "commitsCount": 1}, {"username": "zbigg", "commitsCount": 1}, {"username": "zgreen", "commitsCount": 1}], "commits": [{"from": "2020-06-13T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 0}, {"from": "2020-05-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 2}, {"from": "2020-03-22T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 37}, {"from": "2019-12-23T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 50}, {"from": "2019-06-21T00:00:00.000Z", "to": "2020-06-20T00:00:00.000Z", "count": 72}], "statuses": [{"context": "continuous-integration/travis-ci/push", "state": "success"}]}, "source": {"files": {"readmeSize": 28872, "testsSize": 92386, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/dw/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/dw/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "downloads", "modifiers": {"type": "dw"}}}, {"urls": {"original": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "shields": "https://img.shields.io/npm/v/html-webpack-plugin.svg", "content": "https://img.shields.io/npm/v/html-webpack-plugin.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "service": "https://david-dm.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/david/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/david/jantimon/html-webpack-plugin.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "http://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "service": "https://api.travis-ci.org/jantimon/html-webpack-plugin.svg", "shields": "https://img.shields.io/travis/jantimon/html-webpack-plugin.svg", "content": "https://img.shields.io/travis/jantimon/html-webpack-plugin.json"}, "info": {"service": "travis", "type": "build"}}], "linters": ["editorconfig"], "outdatedDependencies": {"util.promisify": {"required": "1.0.0", "stable": "1.0.1", "latest": "1.0.1"}, "loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.85, "health": 0.5555555555555556, "branding": 0.6}, "popularity": {"communityInterest": 10375, "downloadsCount": 25451082.666666668, "downloadsAcceleration": 74303.12260273972, "dependentsCount": 6923}, "maintenance": {"releasesFrequency": 1, "commitsFrequency": 0.9126712328767124, "openIssues": 1, "issuesDistribution": 0.7030403396382379}}, "score": {"final": 0.9102991074666611, "detail": {"quality": 0.93279326000988, "popularity": 0.8031136982930713, "maintenance": 0.9982038144603489}}}}, {"sass-loader": {"analyzedAt": "2020-06-27T15:32:54.007Z", "collected": {"metadata": {"name": "sass-loader", "scope": "unscoped", "version": "8.0.2", "description": "Sass loader for webpack", "keywords": ["sass", "libsass", "webpack", "loader"], "date": "2020-01-13T13:20:18.297Z", "author": {"name": "J. Tangelder"}, "publisher": {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, "maintainers": [{"username": "akiran", "email": "kiran@neostack.com"}, {"username": "bebraw", "email": "bebraw@gmail.com"}, {"username": "evilebottnawi", "email": "sheo13666q@gmail.com"}, {"username": "jhnns", "email": "mail@johannesewald.de"}, {"username": "jtangelder", "email": "j.tangelder@gmail.com"}, {"username": "michael-ciniawsky", "email": "michael.ciniawsky@gmail.com"}, {"username": "peeri", "email": "developers@peerigon.com"}], "repository": {"type": "git", "url": "git+https://github.com/webpack-contrib/sass-loader.git"}, "links": {"npm": "https://www.npmjs.com/package/sass-loader", "homepage": "https://github.com/webpack-contrib/sass-loader", "repository": "https://github.com/webpack-contrib/sass-loader", "bugs": "https://github.com/webpack-contrib/sass-loader/issues"}, "license": "MIT", "dependencies": {"clone-deep": "^4.0.1", "loader-utils": "^1.2.3", "neo-async": "^2.6.1", "schema-utils": "^2.6.1", "semver": "^6.3.0"}, "devDependencies": {"@babel/cli": "^7.8.0", "@babel/core": "^7.8.0", "@babel/preset-env": "^7.8.2", "@commitlint/cli": "^8.3.4", "@commitlint/config-conventional": "^8.3.4", "@webpack-contrib/defaults": "^6.3.0", "@webpack-contrib/eslint-config-webpack": "^3.0.0", "babel-jest": "^24.9.0", "bootstrap": "^4.4.1", "bootstrap-sass": "^3.4.1", "commitlint-azure-pipelines-cli": "^1.0.3", "cross-env": "^6.0.3", "css-loader": "^3.4.2", "del": "^5.1.0", "del-cli": "^3.0.0", "eslint": "^6.8.0", "eslint-config-prettier": "^6.9.0", "eslint-plugin-import": "^2.20.0", "fibers": "^4.0.2", "file-loader": "^5.0.2", "husky": "^4.0.7", "jest": "^24.9.0", "jest-junit": "^10.0.0", "jquery": "^3.4.1", "lint-staged": "^9.5.0", "memfs": "^3.0.3", "node-sass": "^4.13.0", "npm-run-all": "^4.1.5", "prettier": "^1.19.1", "sass": "^1.24.4", "standard-version": "^7.0.1", "style-loader": "^1.1.2", "webpack": "^4.41.5", "webpack-cli": "^3.3.10", "webpack-dev-server": "^3.10.1"}, "peerDependencies": {"webpack": "^4.36.0 || ^5.0.0", "node-sass": "^4.0.0", "sass": "^1.3.0", "fibers": ">= 3.1.0"}, "releases": [{"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 0}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 3}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 7}, {"from": "2018-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 8}], "hasTestScript": true, "hasSelectiveFiles": true, "readme": "<div align=\"center\">\n  <img height=\"100\"\n    src=\"https://worldvectorlogo.com/logos/sass-1.svg\">\n  <a href=\"https://github.com/webpack/webpack\">\n    <img width=\"200\" height=\"200\"\n      src=\"https://webpack.js.org/assets/icon-square-big.svg\">\n  </a>\n</div>\n\n[![npm][npm]][npm-url]\n[![node][node]][node-url]\n[![deps][deps]][deps-url]\n[![tests][tests]][tests-url]\n[![coverage][cover]][cover-url]\n[![chat][chat]][chat-url]\n[![size][size]][size-url]\n\n# sass-loader\n\nLoads a Sass/SCSS file and compiles it to CSS.\n\n## Getting Started\n\nTo begin, you'll need to install `sass-loader`:\n\n```console\nnpm install sass-loader node-sass webpack --save-dev\n```\n\n`sass-loader` requires you to install either [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](https://github.com/sass/dart-sass) on your own (more documentation can be found below).\nThis allows you to control the versions of all your dependencies, and to choose which Sass implementation to use.\n\nChain the `sass-loader` with the [css-loader](https://github.com/webpack-contrib/css-loader) and the [style-loader](https://github.com/webpack-contrib/style-loader) to immediately apply all styles to the DOM or the [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) to extract it into a separate file.\n\nThen add the loader to your Webpack configuration. For example:\n\n**app.js**\n\n```js\nimport './style.scss';\n```\n\n**style.scss**\n\n```scss\n$body-color: red;\n\nbody {\n  color: $body-color;\n}\n```\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // Creates `style` nodes from JS strings\n          'style-loader',\n          // Translates CSS into CommonJS\n          'css-loader',\n          // Compiles Sass to CSS\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n};\n```\n\nFinally run `webpack` via your preferred method.\n\n### Resolving `import` at-rules\n\nWebpack provides an [advanced mechanism to resolve files](https://webpack.js.org/concepts/module-resolution/).\n\nThe `sass-loader` uses Sass's custom importer feature to pass all queries to the Webpack resolving engine. Thus you can import your Sass modules from `node_modules`. Just prepend them with a `~` to tell Webpack that this is not a relative import:\n\n```scss\n@import '~bootstrap';\n```\n\nIt's important to only prepend it with `~`, because `~/` resolves to the home directory.\nWebpack needs to distinguish between `bootstrap` and `~bootstrap` because CSS and Sass files have no special syntax for importing relative files.\nWriting `@import \"style.scss\"` is the same as `@import \"./style.scss\";`\n\n### Problems with `url(...)`\n\nSince Sass implementations don't provide [url rewriting](https://github.com/sass/libsass/issues/532), all linked assets must be relative to the output.\n\n- If you pass the generated CSS on to the `css-loader`, all urls must be relative to the entry-file (e.g. `main.scss`).\n- If you're just generating CSS without passing it to the `css-loader`, it must be relative to your web root.\n\nYou will be disrupted by this first issue. It is natural to expect relative references to be resolved against the `.sass`/`.scss` file in which they are specified (like in regular `.css` files).\n\nThankfully there are a two solutions to this problem:\n\n- Add the missing url rewriting using the [resolve-url-loader](https://github.com/bholloway/resolve-url-loader). Place it before `sass-loader` in the loader chain.\n- Library authors usually provide a variable to modify the asset path. [bootstrap-sass](https://github.com/twbs/bootstrap-sass) for example has an `$icon-font-path`.\n\n## Options\n\n### `implementation`\n\nThe special `implementation` option determines which implementation of Sass to use.\n\nBy default the loader resolve the implementation based on your dependencies.\nJust add required implementation to `package.json` (`node-sass` or `sass` package) and install dependencies.\n\nExample where the `sass-loader` loader uses the `sass` (`dart-sass`) implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\"\n  }\n}\n```\n\nExample where the `sass-loader` loader uses the `node-sass` implementation:\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"node-sass\": \"^4.0.0\"\n  }\n}\n```\n\nBeware the situation when `node-sass` and `sass` were installed! By default the `sass-loader` prefers `node-sass`. In order to avoid this situation you can use the `implementation` option.\n\nThe `implementation` options either accepts `node-sass` or `sass` (`Dart Sass`) as a module.\n\nFor example, to use Dart Sass, you'd pass:\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              // Prefer `dart-sass`\n              implementation: require('sass'),\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nNote that when using `sass` (`Dart Sass`), **synchronous compilation is twice as fast as asynchronous compilation** by default, due to the overhead of asynchronous callbacks.\nTo avoid this overhead, you can use the [fibers](https://www.npmjs.com/package/fibers) package to call asynchronous importers from the synchronous code path.\n\nWe automatically inject the [`fibers`](https://github.com/laverdet/node-fibers) package (setup `sassOptions.fiber`) if is possible (i.e. you need install the [`fibers`](https://github.com/laverdet/node-fibers) package).\n\n**package.json**\n\n```json\n{\n  \"devDependencies\": {\n    \"sass-loader\": \"^7.2.0\",\n    \"sass\": \"^1.22.10\",\n    \"fibers\": \"^4.0.1\"\n  }\n}\n```\n\nYou can disable automatically injecting the [`fibers`](https://github.com/laverdet/node-fibers) package by passing a `false` value for the `sassOptions.fiber` option.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: false,\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nYou can also pass the `fiber` value using this code:\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              implementation: require('sass'),\n              sassOptions: {\n                fiber: require('fibers'),\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sassOptions`\n\nType: `Object|Function`\n\nOptions for [Node Sass](https://github.com/sass/node-sass) or [Dart Sass](http://sass-lang.com/dart-sass) implementation.\n\n> \u2139\ufe0f The `indentedSyntax` option has `true` value for the `sass` extension.\n\n> \u2139\ufe0f Options such as `file` and `outFile` are unavailable.\n\n> \u2139 We recommend not to use the `sourceMapContents`, `sourceMapEmbed`, `sourceMapRoot` options because `sass-loader` automatically sets these options.\n\nThere is a slight difference between the `node-sass` and `sass` (`Dart Sass`) options.\nPlease consult documentation before using them:\n\n- [Node Sass documentation](https://github.com/sass/node-sass/#options) for all available `node-sass` options.\n- [Dart Sass documentation](https://github.com/sass/dart-sass#javascript-api) for all available `sass` options.\n\n#### `Object`\n\nUse and object for the Sass implementation setup.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: {\n                indentWidth: 4,\n                includePaths: ['absolute/path/a', 'absolute/path/b'],\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\nAllows to setup the Sass implementation by setting different options based on the loader context.\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              sassOptions: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return {\n                    includePaths: ['absolute/path/c', 'absolute/path/d'],\n                  };\n                }\n\n                return {\n                  includePaths: ['absolute/path/a', 'absolute/path/b'],\n                };\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `prependData`\n\nType: `String|Function`\nDefault: `undefined`\n\nPrepends `Sass`/`SCSS` code before the actual entry file.\nIn this case, the `sass-loader` will not override the `data` option but just append the entry's content.\n\nThis is especially useful when some of your Sass variables depend on the environment:\n\n> \u2139 Since you're injecting code, this will break the source mappings in your entry file. Often there's a simpler solution than this, like multiple Sass entry files.\n\n#### `String`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: '$env: ' + process.env.NODE_ENV + ';',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n#### `Function`\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              prependData: (loaderContext) => {\n                // More information about available properties https://webpack.js.org/api/loaders/\n                const { resourcePath, rootContext } = loaderContext;\n                const relativePath = path.relative(rootContext, resourcePath);\n\n                if (relativePath === 'styles/foo.scss') {\n                  return '$value: 100px;';\n                }\n\n                return '$value: 200px;';\n              },\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `sourceMap`\n\nType: `Boolean`\nDefault: depends on the `compiler.devtool` value\n\nEnables/Disables generation of source maps.\n\nBy default generation of source maps depends on the [`devtool`](https://webpack.js.org/configuration/devtool/) option. All values enable source map generation except `eval` and `false` value.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n> \u2139 In some rare cases `node-sass` can output invalid source maps (it is a `node-sass` bug).\n> In order to avoid this, you can try to update `node-sass` to latest version or you can try to set within `sassOptions` the `outputStyle` option to `compressed`.\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            sourceMap: true,\n            sassOptions: {\n              outputStyle: 'compressed',\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n### `webpackImporter`\n\nType: `Boolean`\nDefault: `true`\n\nEnables/Disables the default Webpack importer.\n\nThis can improve performance in some cases. Use it with caution because aliases and `@import` at-rules starting with `~` will not work. You can pass own `importer` to solve this (see [`importer docs`](https://github.com/sass/node-sass#importer--v200---experimental)).\n\n**webpack.config.js**\n\n```js\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          'style-loader',\n          'css-loader',\n          {\n            loader: 'sass-loader',\n            options: {\n              webpackImporter: false,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\n## Examples\n\n### Extracts CSS into separate files\n\nFor production builds it's recommended to extract the CSS from your bundle being able to use parallel loading of CSS/JS resources later on.\n\nThere are two possibilities to extract a style sheet from the bundle:\n\n- [mini-css-extract-plugin](https://github.com/webpack-contrib/mini-css-extract-plugin) (use this, when using webpack 4 configuration. Works in all use-cases)\n- [extract-loader](https://github.com/peerigon/extract-loader) (simpler, but specialized on the css-loader's output)\n\n**webpack.config.js**\n\n```js\nconst MiniCssExtractPlugin = require('mini-css-extract-plugin');\n\nmodule.exports = {\n  module: {\n    rules: [\n      {\n        test: /\\.s[ac]ss$/i,\n        use: [\n          // fallback to style-loader in development\n          process.env.NODE_ENV !== 'production'\n            ? 'style-loader'\n            : MiniCssExtractPlugin.loader,\n          'css-loader',\n          'sass-loader',\n        ],\n      },\n    ],\n  },\n  plugins: [\n    new MiniCssExtractPlugin({\n      // Options similar to the same options in webpackOptions.output\n      // both options are optional\n      filename: '[name].css',\n      chunkFilename: '[id].css',\n    }),\n  ],\n};\n```\n\n### Source maps\n\nEnables/Disables generation of source maps.\n\nTo enable CSS source maps, you'll need to pass the `sourceMap` option to the `sass-loader` _and_ the css-loader.\n\n**webpack.config.js**\n\n```javascript\nmodule.exports = {\n  devtool: 'source-map', // any \"source-map\"-like devtool is possible\n  module: {\n    rules: [\n      {\n        test: /\\.scss$/,\n        use: [\n          'style-loader',\n          {\n            loader: 'css-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n          {\n            loader: 'sass-loader',\n            options: {\n              sourceMap: true,\n            },\n          },\n        ],\n      },\n    ],\n  },\n};\n```\n\nIf you want to edit the original Sass files inside Chrome, [there's a good blog post](https://medium.com/@toolmantim/getting-started-with-css-sourcemaps-and-in-browser-sass-editing-b4daab987fb0). Checkout [test/sourceMap](https://github.com/webpack-contrib/sass-loader/tree/master/test) for a running example.\n\n## Contributing\n\nPlease take a moment to read our contributing guidelines if you haven't yet done so.\n\n[CONTRIBUTING](./.github/CONTRIBUTING.md)\n\n## License\n\n[MIT](./LICENSE)\n\n[npm]: https://img.shields.io/npm/v/sass-loader.svg\n[npm-url]: https://npmjs.com/package/sass-loader\n[node]: https://img.shields.io/node/v/sass-loader.svg\n[node-url]: https://nodejs.org\n[deps]: https://david-dm.org/webpack-contrib/sass-loader.svg\n[deps-url]: https://david-dm.org/webpack-contrib/sass-loader\n[tests]: https://dev.azure.com/webpack-contrib/sass-loader/_apis/build/status/webpack-contrib.sass-loader?branchName=master\n[tests-url]: https://dev.azure.com/webpack-contrib/sass-loader/_build/latest?definitionId=21&branchName=master\n[cover]: https://codecov.io/gh/webpack-contrib/sass-loader/branch/master/graph/badge.svg\n[cover-url]: https://codecov.io/gh/webpack-contrib/sass-loader\n[chat]: https://badges.gitter.im/webpack/webpack.svg\n[chat-url]: https://gitter.im/webpack/webpack\n[size]: https://packagephobia.now.sh/badge?p=css-loader\n[size-url]: https://packagephobia.now.sh/result?p=css-loader"}, "npm": {"downloads": [{"from": "2020-06-26T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 1082484}, {"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 5483823}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 28077901}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 84771566}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 155927471}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 265124549}], "dependentsCount": 5987, "starsCount": 75}, "github": {"starsCount": 3436, "forksCount": 359, "subscribersCount": 47, "issues": {"count": 852, "openCount": 5, "distribution": {"3600": 196, "10800": 45, "32400": 48, "97200": 83, "291600": 57, "874800": 74, "2624400": 91, "7873200": 112, "23619600": 98, "70858800": 43, "212576400": 5}, "isDisabled": false}, "contributors": [{"username": "jhnns", "commitsCount": 225}, {"username": "evilebottnawi", "commitsCount": 79}, {"username": "jtangelder", "commitsCount": 21}, {"username": "d3viant0ne", "commitsCount": 11}, {"username": "jamesgeorge007", "commitsCount": 9}, {"username": "akiran", "commitsCount": 7}, {"username": "herrstucki", "commitsCount": 6}, {"username": "jorrit", "commitsCount": 4}, {"username": "oopschen", "commitsCount": 4}, {"username": "chicoxyzzy", "commitsCount": 3}, {"username": "justin808", "commitsCount": 2}, {"username": "michael-ciniawsky", "commitsCount": 2}, {"username": "simon04", "commitsCount": 2}, {"username": "vanesyan", "commitsCount": 2}, {"username": "BANOnotIT", "commitsCount": 1}, {"username": "EugeneHlushko", "commitsCount": 1}, {"username": "FractalBoy", "commitsCount": 1}, {"username": "RahavLussato", "commitsCount": 1}, {"username": "Timer", "commitsCount": 1}, {"username": "Vishal0203", "commitsCount": 1}, {"username": "WalterWeidner", "commitsCount": 1}, {"username": "XeeD", "commitsCount": 1}, {"username": "acouch", "commitsCount": 1}, {"username": "anikethsaha", "commitsCount": 1}, {"username": "avanderhoorn", "commitsCount": 1}, {"username": "benschac", "commitsCount": 1}, {"username": "bmihelac", "commitsCount": 1}, {"username": "cevou", "commitsCount": 1}, {"username": "chenxsan", "commitsCount": 1}, {"username": "chrisfitz", "commitsCount": 1}, {"username": "chukitow", "commitsCount": 1}, {"username": "clintonb", "commitsCount": 1}, {"username": "deoxxa", "commitsCount": 1}, {"username": "dimitardanailov", "commitsCount": 1}, {"username": "dirtyhenry", "commitsCount": 1}, {"username": "donnysim", "commitsCount": 1}, {"username": "dtinth", "commitsCount": 1}, {"username": "eastwood", "commitsCount": 1}, {"username": "eldyvoon", "commitsCount": 1}, {"username": "fahad19", "commitsCount": 1}, {"username": "hansott", "commitsCount": 1}, {"username": "hinok", "commitsCount": 1}, {"username": "in-in", "commitsCount": 1}, {"username": "johnjacobkenny", "commitsCount": 1}, {"username": "kaelig", "commitsCount": 1}, {"username": "lencioni", "commitsCount": 1}, {"username": "lewie9021", "commitsCount": 1}, {"username": "lukeed", "commitsCount": 1}, {"username": "lunelson", "commitsCount": 1}, {"username": "madflow", "commitsCount": 1}, {"username": "maspwr", "commitsCount": 1}, {"username": "mattlewis92", "commitsCount": 1}, {"username": "micahlmartin", "commitsCount": 1}, {"username": "nex3", "commitsCount": 1}, {"username": "niksy", "commitsCount": 1}, {"username": "notDash", "commitsCount": 1}, {"username": "philwareham", "commitsCount": 1}, {"username": "pmowrer", "commitsCount": 1}, {"username": "rhys-vdw", "commitsCount": 1}, {"username": "silversonicaxel", "commitsCount": 1}, {"username": "sturobson", "commitsCount": 1}, {"username": "timmfin", "commitsCount": 1}, {"username": "timneutkens", "commitsCount": 1}, {"username": "w3apps", "commitsCount": 1}], "commits": [{"from": "2020-06-20T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2020-05-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 6}, {"from": "2020-03-29T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 29}, {"from": "2019-12-30T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 41}, {"from": "2019-06-28T00:00:00.000Z", "to": "2020-06-27T00:00:00.000Z", "count": 75}], "statuses": [{"context": "codecov/patch", "state": "success"}, {"context": "codecov/project", "state": "success"}]}, "source": {"files": {"readmeSize": 16310, "testsSize": 3209752, "hasChangelog": true}, "badges": [{"urls": {"original": "https://img.shields.io/npm/v/sass-loader.svg", "shields": "https://img.shields.io/npm/v/sass-loader.svg", "content": "https://img.shields.io/npm/v/sass-loader.json"}, "info": {"service": "npm", "type": "version", "modifiers": {"type": "v"}}}, {"urls": {"original": "https://david-dm.org/webpack-contrib/sass-loader.svg", "service": "https://david-dm.org/webpack-contrib/sass-loader.svg", "shields": "https://img.shields.io/david/webpack-contrib/sass-loader.svg", "content": "https://img.shields.io/david/webpack-contrib/sass-loader.json"}, "info": {"service": "david", "type": "dependencies", "modifiers": {"statusType": "normal"}}}, {"urls": {"original": "https://badges.gitter.im/webpack/webpack.svg", "service": "https://badges.gitter.im/webpack/webpack.svg", "shields": "https://img.shields.io/gitter/room/webpack/webpack.svg", "content": "https://img.shields.io/gitter/room/webpack/webpack.json"}, "info": {"service": "gitter", "type": "misc"}}], "linters": ["editorconfig", "eslint", "prettier"], "coverage": 0.93, "outdatedDependencies": {"loader-utils": {"required": "^1.2.3", "stable": "2.0.0", "latest": "2.0.0"}, "semver": {"required": "^6.3.0", "stable": "7.3.2", "latest": "7.3.2"}}}}, "evaluation": {"quality": {"carefulness": 0.9999999999999999, "tests": 0.9895, "health": 0.5, "branding": 0.44999999999999996}, "popularity": {"communityInterest": 3981, "downloadsCount": 28257188.666666668, "downloadsAcceleration": 87364.12657914765, "dependentsCount": 5987}, "maintenance": {"releasesFrequency": 0.9, "commitsFrequency": 0.9281575342465753, "openIssues": 1, "issuesDistribution": 0.9}}, "score": {"final": 0.8983586469268581, "detail": {"quality": 0.9363806111524543, "popularity": 0.7642252526693296, "maintenance": 0.9999017861338758}}}}]